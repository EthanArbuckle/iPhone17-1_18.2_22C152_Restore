uint64_t sub_1000C5D50(char *a1, char *a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v8 = sub_100221DF0();
  v9 = *(void *)(v8 - 8);
  v11 = __chkstk_darwin(v8, v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  v16 = (char *)&v22 - v15;
  if (a3(*(void *)a1, *(void *)a2))
  {
    v17 = a4(0);
    v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v18(v16, &a1[*(int *)(v17 + 20)], v8);
    v18(v13, &a2[*(int *)(v17 + 20)], v8);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    v19 = sub_100222250();
    v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v13, v8);
    v20(v16, v8);
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t _s18TrustedPeersHelper27PerformATOPRVActionsRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  uint64_t v74 = sub_100221DF0();
  uint64_t v72 = *(void *)(v74 - 8);
  uint64_t v3 = __chkstk_darwin(v74, v2);
  v71 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  v70 = (char *)&v68 - v6;
  uint64_t v79 = type metadata accessor for AccountInfo(0);
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v7);
  v69 = (_DWORD *)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v76, v9);
  uint64_t v80 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000046DC(&qword_100299F50);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  v73 = (_DWORD *)((char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v81 = (uint64_t)&v68 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v78 = (uint64_t)&v68 - v19;
  uint64_t v20 = type metadata accessor for Metrics(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  v24 = (uint64_t *)((char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_1000046DC(&qword_10029E3E8);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25, v27);
  v29 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000046DC(&qword_10029F000);
  uint64_t v32 = __chkstk_darwin(v30 - 8, v31);
  v34 = (uint64_t *)((char *)&v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __chkstk_darwin(v32, v35);
  v38 = (char *)&v68 - v37;
  __chkstk_darwin(v36, v39);
  v41 = (char *)&v68 - v40;
  uint64_t v42 = type metadata accessor for PerformATOPRVActionsRequest(0);
  sub_10000D830(v82 + *(int *)(v42 + 20), (uint64_t)v41, &qword_10029F000);
  uint64_t v75 = v42;
  sub_10000D830(v83 + *(int *)(v42 + 20), (uint64_t)v38, &qword_10029F000);
  uint64_t v43 = (uint64_t)&v29[*(int *)(v26 + 56)];
  sub_10000D830((uint64_t)v41, (uint64_t)v29, &qword_10029F000);
  sub_10000D830((uint64_t)v38, v43, &qword_10029F000);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v44((uint64_t)v29, 1, v20) == 1)
  {
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    if (v44(v43, 1, v20) == 1)
    {
      sub_10004015C((uint64_t)v29, &qword_10029F000);
      goto LABEL_14;
    }
LABEL_6:
    v45 = &qword_10029E3E8;
    uint64_t v46 = (uint64_t)v29;
LABEL_26:
    sub_10004015C(v46, v45);
    goto LABEL_27;
  }
  sub_10000D830((uint64_t)v29, (uint64_t)v34, &qword_10029F000);
  if (v44(v43, 1, v20) == 1)
  {
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
    goto LABEL_6;
  }
  sub_1000D736C(v43, (uint64_t)v24, type metadata accessor for Metrics);
  if ((*v34 != *v24 || v34[1] != v24[1]) && (sub_100222A30() & 1) == 0
    || (v34[2] != v24[2] || v34[3] != v24[3]) && (sub_100222A30() & 1) == 0)
  {
    sub_1000D7E78((uint64_t)v24, type metadata accessor for Metrics);
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
    uint64_t v46 = (uint64_t)v29;
    v45 = &qword_10029F000;
    goto LABEL_26;
  }
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v47 = sub_100222250();
  sub_1000D7E78((uint64_t)v24, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v38, &qword_10029F000);
  sub_10004015C((uint64_t)v41, &qword_10029F000);
  sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v29, &qword_10029F000);
  if ((v47 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_14:
  uint64_t v48 = v75;
  uint64_t v49 = v82;
  uint64_t v50 = v78;
  sub_10000D830(v82 + *(int *)(v75 + 24), v78, &qword_100299F50);
  uint64_t v51 = v83;
  uint64_t v52 = v81;
  sub_10000D830(v83 + *(int *)(v48 + 24), v81, &qword_100299F50);
  uint64_t v53 = v80;
  uint64_t v54 = v80 + *(int *)(v76 + 48);
  sub_10000D830(v50, v80, &qword_100299F50);
  sub_10000D830(v52, v54, &qword_100299F50);
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
  uint64_t v56 = v79;
  if (v55(v53, 1, v79) != 1)
  {
    v64 = v73;
    sub_10000D830(v53, (uint64_t)v73, &qword_100299F50);
    if (v55(v54, 1, v56) == 1)
    {
      sub_10004015C(v81, &qword_100299F50);
      sub_10004015C(v50, &qword_100299F50);
      sub_1000D7E78((uint64_t)v64, type metadata accessor for AccountInfo);
      goto LABEL_20;
    }
    v65 = v69;
    sub_1000D736C(v54, (uint64_t)v69, type metadata accessor for AccountInfo);
    if (*v64 != *v65)
    {
      sub_1000D7E78((uint64_t)v65, type metadata accessor for AccountInfo);
      sub_10004015C(v81, &qword_100299F50);
      sub_10004015C(v50, &qword_100299F50);
      sub_1000D7E78((uint64_t)v64, type metadata accessor for AccountInfo);
      uint64_t v46 = v53;
      v45 = &qword_100299F50;
      goto LABEL_26;
    }
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v66 = sub_100222250();
    sub_1000D7E78((uint64_t)v65, type metadata accessor for AccountInfo);
    sub_10004015C(v81, &qword_100299F50);
    sub_10004015C(v50, &qword_100299F50);
    sub_1000D7E78((uint64_t)v64, type metadata accessor for AccountInfo);
    sub_10004015C(v53, &qword_100299F50);
    if (v66) {
      goto LABEL_17;
    }
LABEL_27:
    char v62 = 0;
    return v62 & 1;
  }
  sub_10004015C(v52, &qword_100299F50);
  sub_10004015C(v50, &qword_100299F50);
  if (v55(v54, 1, v56) != 1)
  {
LABEL_20:
    v45 = &qword_10029E3E0;
    uint64_t v46 = v53;
    goto LABEL_26;
  }
  sub_10004015C(v53, &qword_100299F50);
LABEL_17:
  uint64_t v57 = v72;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v59 = v70;
  uint64_t v60 = v74;
  v58(v70, v49, v74);
  v61 = v71;
  v58(v71, v51, v60);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v62 = sub_100222250();
  v63 = *(void (**)(char *, uint64_t))(v57 + 8);
  v63(v61, v60);
  v63(v59, v60);
  return v62 & 1;
}

uint64_t sub_1000C6908(void *a1, void *a2)
{
  return sub_1000C9D8C(a1, a2, (uint64_t)sub_10003D348, type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t _s18TrustedPeersHelper26FetchViableBottlesResponseV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_10003D59C(*a1, *a2) & 1) != 0
    && (sub_10003D59C(a1[1], a2[1]) & 1) != 0
    && (sub_10003D7F8(a1[2], a2[2]) & 1) != 0
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6])
  {
    uint64_t ViableBottlesResponse = type metadata accessor for FetchViableBottlesResponse(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, (char *)a1 + *(int *)(ViableBottlesResponse + 44), v4);
    v14(v9, (char *)a2 + *(int *)(ViableBottlesResponse + 44), v4);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_100222250();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s18TrustedPeersHelper25GetSupportAppInfoResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_10003D9E8(*(void *)a1, *(void *)a2) & 1) == 0
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_8:
    char v13 = 0;
    return v13 & 1;
  }
  if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
    || (char v13 = 0, (sub_100222A30() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 40) == *(unsigned __int8 *)(a2 + 40))
    {
      uint64_t SupportAppInfoResponse = type metadata accessor for GetSupportAppInfoResponse(0);
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v16(v12, a1 + *(int *)(SupportAppInfoResponse + 36), v4);
      v16(v9, a2 + *(int *)(SupportAppInfoResponse + 36), v4);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v13 = sub_100222250();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v9, v4);
      v17(v12, v4);
      return v13 & 1;
    }
    goto LABEL_8;
  }
  return v13 & 1;
}

uint64_t _s18TrustedPeersHelper25FetchViableBottlesRequestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v78 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v77 = (char *)&v74 - v9;
  uint64_t v86 = type metadata accessor for AccountInfo(0);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v10);
  uint64_t v76 = (_DWORD *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v82, v12);
  uint64_t v87 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v80 = (_DWORD *)((char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v83 = (uint64_t)&v74 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v85 = (uint64_t)&v74 - v22;
  uint64_t v23 = type metadata accessor for Metrics(0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v81 = (uint64_t *)((char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_10029F000);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v88 = (uint64_t)&v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33, v35);
  v38 = (char *)&v74 - v37;
  __chkstk_darwin(v36, v39);
  v41 = (char *)&v74 - v40;
  uint64_t v42 = *a1;
  uint64_t v43 = a1;
  int v44 = *((unsigned __int8 *)a1 + 8);
  uint64_t v45 = *(void *)a2;
  v89 = a2;
  if (v44) {
    uint64_t v42 = v42 != 0;
  }
  if (a2[8] == 1)
  {
    if (v45)
    {
      if (v42 != 1) {
        goto LABEL_36;
      }
    }
    else if (v42)
    {
      goto LABEL_36;
    }
  }
  else if (v42 != v45)
  {
    goto LABEL_36;
  }
  uint64_t v75 = v4;
  uint64_t ViableBottlesRequest = type metadata accessor for FetchViableBottlesRequest(0);
  char v47 = (char *)v43;
  sub_10000D830((uint64_t)v43 + *(int *)(ViableBottlesRequest + 24), (uint64_t)v41, &qword_10029F000);
  sub_10000D830((uint64_t)&v89[*(int *)(ViableBottlesRequest + 24)], (uint64_t)v38, &qword_10029F000);
  uint64_t v48 = (uint64_t)&v30[*(int *)(v27 + 48)];
  sub_10000D830((uint64_t)v41, (uint64_t)v30, &qword_10029F000);
  sub_10000D830((uint64_t)v38, v48, &qword_10029F000);
  uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v49((uint64_t)v30, 1, v23) == 1)
  {
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    if (v49(v48, 1, v23) == 1)
    {
      sub_10004015C((uint64_t)v30, &qword_10029F000);
      goto LABEL_23;
    }
LABEL_15:
    uint64_t v51 = &qword_10029E3E8;
    uint64_t v52 = (uint64_t)v30;
LABEL_35:
    sub_10004015C(v52, v51);
    goto LABEL_36;
  }
  uint64_t v50 = (void *)v88;
  sub_10000D830((uint64_t)v30, v88, &qword_10029F000);
  if (v49(v48, 1, v23) == 1)
  {
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    sub_1000D7E78((uint64_t)v50, type metadata accessor for Metrics);
    goto LABEL_15;
  }
  uint64_t v53 = v81;
  sub_1000D736C(v48, (uint64_t)v81, type metadata accessor for Metrics);
  if ((*v50 != *v53 || v50[1] != v53[1]) && (sub_100222A30() & 1) == 0
    || (v50[2] != v53[2] || v50[3] != v53[3]) && (sub_100222A30() & 1) == 0)
  {
    sub_1000D7E78((uint64_t)v53, type metadata accessor for Metrics);
    v55 = &qword_10029F000;
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    sub_1000D7E78((uint64_t)v50, type metadata accessor for Metrics);
    uint64_t v52 = (uint64_t)v30;
    goto LABEL_34;
  }
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v54 = sub_100222250();
  sub_1000D7E78((uint64_t)v53, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v38, &qword_10029F000);
  sub_10004015C((uint64_t)v41, &qword_10029F000);
  sub_1000D7E78((uint64_t)v50, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v30, &qword_10029F000);
  if ((v54 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_23:
  v55 = &qword_100299F50;
  uint64_t v56 = v85;
  sub_10000D830((uint64_t)&v47[*(int *)(ViableBottlesRequest + 28)], v85, &qword_100299F50);
  uint64_t v88 = ViableBottlesRequest;
  uint64_t v57 = v83;
  sub_10000D830((uint64_t)&v89[*(int *)(ViableBottlesRequest + 28)], v83, &qword_100299F50);
  uint64_t v58 = v87;
  uint64_t v59 = v87 + *(int *)(v82 + 48);
  sub_10000D830(v56, v87, &qword_100299F50);
  sub_10000D830(v57, v59, &qword_100299F50);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  uint64_t v61 = v86;
  if (v60(v58, 1, v86) != 1)
  {
    v63 = v80;
    sub_10000D830(v58, (uint64_t)v80, &qword_100299F50);
    if (v60(v59, 1, v61) == 1)
    {
      sub_10004015C(v57, &qword_100299F50);
      sub_10004015C(v56, &qword_100299F50);
      sub_1000D7E78((uint64_t)v63, type metadata accessor for AccountInfo);
      goto LABEL_28;
    }
    v64 = v76;
    sub_1000D736C(v59, (uint64_t)v76, type metadata accessor for AccountInfo);
    if (*v63 == *v64)
    {
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      uint64_t v62 = v75;
      char v65 = sub_100222250();
      sub_1000D7E78((uint64_t)v64, type metadata accessor for AccountInfo);
      sub_10004015C(v57, &qword_100299F50);
      sub_10004015C(v56, &qword_100299F50);
      sub_1000D7E78((uint64_t)v63, type metadata accessor for AccountInfo);
      sub_10004015C(v58, &qword_100299F50);
      if (v65) {
        goto LABEL_32;
      }
LABEL_36:
      char v71 = 0;
      return v71 & 1;
    }
    sub_1000D7E78((uint64_t)v64, type metadata accessor for AccountInfo);
    sub_10004015C(v57, &qword_100299F50);
    sub_10004015C(v56, &qword_100299F50);
    sub_1000D7E78((uint64_t)v63, type metadata accessor for AccountInfo);
    uint64_t v52 = v58;
LABEL_34:
    uint64_t v51 = v55;
    goto LABEL_35;
  }
  sub_10004015C(v57, &qword_100299F50);
  sub_10004015C(v56, &qword_100299F50);
  if (v60(v59, 1, v61) != 1)
  {
LABEL_28:
    uint64_t v51 = &qword_10029E3E0;
    uint64_t v52 = v58;
    goto LABEL_35;
  }
  sub_10004015C(v58, &qword_100299F50);
  uint64_t v62 = v75;
LABEL_32:
  uint64_t v66 = v88;
  uint64_t v67 = v79;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  v69 = v77;
  v68(v77, &v47[*(int *)(v88 + 20)], v62);
  v70 = v78;
  v68(v78, &v89[*(int *)(v66 + 20)], v62);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v71 = sub_100222250();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v67 + 8);
  v72(v70, v62);
  v72(v69, v62);
  return v71 & 1;
}

uint64_t _s18TrustedPeersHelper24RemoveRecoveryKeyRequestV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v150 = sub_100221DF0();
  uint64_t v128 = *(void *)(v150 - 8);
  uint64_t v5 = __chkstk_darwin(v150, v4);
  v127 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v126 = (char *)&v124 - v8;
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v147 = *(void *)(v9 - 8);
  uint64_t v148 = v9;
  __chkstk_darwin(v9, v10);
  v125 = (_DWORD *)((char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v131 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v131, v12);
  uint64_t v134 = (uint64_t)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  v129 = (_DWORD *)((char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v132 = (uint64_t)&v124 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v133 = (uint64_t)&v124 - v22;
  uint64_t v146 = type metadata accessor for Metrics(0);
  uint64_t v138 = *(void *)(v146 - 8);
  __chkstk_darwin(v146, v23);
  v130 = (uint64_t *)((char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v137, v25);
  uint64_t v140 = (uint64_t)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000046DC(&qword_10029F000);
  uint64_t v29 = __chkstk_darwin(v27 - 8, v28);
  v135 = (uint64_t *)((char *)&v124 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v139 = (uint64_t)&v124 - v33;
  __chkstk_darwin(v32, v34);
  uint64_t v142 = (uint64_t)&v124 - v35;
  uint64_t v149 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v144 = *(void *)(v149 - 8);
  __chkstk_darwin(v149, v36);
  uint64_t v136 = (uint64_t)&v124 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1000046DC(&qword_10029E448);
  __chkstk_darwin(v143, v38);
  v145 = (char *)&v124 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v42 = __chkstk_darwin(v40 - 8, v41);
  uint64_t v141 = (uint64_t)&v124 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v151 = (uint64_t)&v124 - v46;
  __chkstk_darwin(v45, v47);
  uint64_t v152 = (uint64_t)&v124 - v48;
  uint64_t v49 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v50 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v51);
  uint64_t v53 = (char *)&v124 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000046DC(&qword_10029E450);
  __chkstk_darwin(v54, v55);
  uint64_t v57 = (char *)&v124 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000046DC(&qword_100299F18);
  uint64_t v60 = __chkstk_darwin(v58 - 8, v59);
  uint64_t v62 = (char *)&v124 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __chkstk_darwin(v60, v63);
  uint64_t v66 = (char *)&v124 - v65;
  __chkstk_darwin(v64, v67);
  v69 = (char *)&v124 - v68;
  uint64_t v70 = *(void *)a1;
  uint64_t v71 = *((void *)a1 + 1);
  v153 = a1;
  v154 = a2;
  if (v70 == *(void *)a2 && v71 == *((void *)a2 + 1) || (char v72 = 0, (sub_100222A30() & 1) != 0))
  {
    if (*((void *)v153 + 2) == *((void *)v154 + 2) && *((void *)v153 + 3) == *((void *)v154 + 3)
      || (char v72 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v73 = type metadata accessor for RemoveRecoveryKeyRequest(0);
      sub_10000D830((uint64_t)&v153[*(int *)(v73 + 28)], (uint64_t)v69, &qword_100299F18);
      uint64_t v124 = v73;
      sub_10000D830((uint64_t)&v154[*(int *)(v73 + 28)], (uint64_t)v66, &qword_100299F18);
      uint64_t v74 = (uint64_t)&v57[*(int *)(v54 + 48)];
      sub_10000D830((uint64_t)v69, (uint64_t)v57, &qword_100299F18);
      sub_10000D830((uint64_t)v66, v74, &qword_100299F18);
      uint64_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
      if (v75((uint64_t)v57, 1, v49) == 1)
      {
        sub_10004015C((uint64_t)v66, &qword_100299F18);
        sub_10004015C((uint64_t)v69, &qword_100299F18);
        if (v75(v74, 1, v49) == 1)
        {
          sub_10004015C((uint64_t)v57, &qword_100299F18);
          uint64_t v76 = v150;
          goto LABEL_10;
        }
      }
      else
      {
        sub_10000D830((uint64_t)v57, (uint64_t)v62, &qword_100299F18);
        if (v75(v74, 1, v49) != 1)
        {
          sub_1000D736C(v74, (uint64_t)v53, type metadata accessor for SignedPeerStableInfo);
          if ((sub_10003FE7C(*(void *)v62, *((void *)v62 + 1), *(void *)v53, *((void *)v53 + 1)) & 1) == 0
            || (sub_10003FE7C(*((void *)v62 + 2), *((void *)v62 + 3), *((void *)v53 + 2), *((void *)v53 + 3)) & 1) == 0)
          {
            v97 = type metadata accessor for SignedPeerStableInfo;
            sub_1000D7E78((uint64_t)v53, type metadata accessor for SignedPeerStableInfo);
            v98 = &qword_100299F18;
            sub_10004015C((uint64_t)v66, &qword_100299F18);
            sub_10004015C((uint64_t)v69, &qword_100299F18);
            uint64_t v99 = (uint64_t)v62;
            goto LABEL_32;
          }
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          uint64_t v76 = v150;
          char v96 = sub_100222250();
          sub_1000D7E78((uint64_t)v53, type metadata accessor for SignedPeerStableInfo);
          sub_10004015C((uint64_t)v66, &qword_100299F18);
          sub_10004015C((uint64_t)v69, &qword_100299F18);
          sub_1000D7E78((uint64_t)v62, type metadata accessor for SignedPeerStableInfo);
          sub_10004015C((uint64_t)v57, &qword_100299F18);
          if ((v96 & 1) == 0) {
            goto LABEL_35;
          }
LABEL_10:
          uint64_t v77 = v124;
          uint64_t v78 = v152;
          sub_10000D830((uint64_t)&v153[*(int *)(v124 + 32)], v152, &qword_10029ECA0);
          uint64_t v79 = v151;
          sub_10000D830((uint64_t)&v154[*(int *)(v77 + 32)], v151, &qword_10029ECA0);
          uint64_t v57 = v145;
          uint64_t v80 = (uint64_t)&v145[*(int *)(v143 + 48)];
          sub_10000D830(v78, (uint64_t)v145, &qword_10029ECA0);
          sub_10000D830(v79, v80, &qword_10029ECA0);
          uint64_t v81 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
          uint64_t v82 = v149;
          if (v81((uint64_t)v57, 1, v149) == 1)
          {
            sub_10004015C(v79, &qword_10029ECA0);
            sub_10004015C(v78, &qword_10029ECA0);
            int v83 = v81(v80, 1, v82);
            uint64_t v84 = v147;
            uint64_t v85 = v148;
            uint64_t v86 = v146;
            uint64_t v87 = v142;
            if (v83 == 1)
            {
              sub_10004015C((uint64_t)v57, &qword_10029ECA0);
LABEL_13:
              sub_10000D830((uint64_t)&v153[*(int *)(v77 + 36)], v87, &qword_10029F000);
              uint64_t v88 = (uint64_t)&v154[*(int *)(v77 + 36)];
              uint64_t v89 = v139;
              sub_10000D830(v88, v139, &qword_10029F000);
              uint64_t v90 = v140;
              uint64_t v91 = v140 + *(int *)(v137 + 48);
              sub_10000D830(v87, v140, &qword_10029F000);
              uint64_t v92 = v90;
              sub_10000D830(v89, v91, &qword_10029F000);
              v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
              if (v93(v92, 1, v86) == 1)
              {
                sub_10004015C(v89, &qword_10029F000);
                uint64_t v92 = v140;
                sub_10004015C(v87, &qword_10029F000);
                if (v93(v91, 1, v86) == 1)
                {
                  sub_10004015C(v92, &qword_10029F000);
LABEL_47:
                  uint64_t v108 = v124;
                  uint64_t v109 = v133;
                  sub_10000D830((uint64_t)&v153[*(int *)(v124 + 40)], v133, &qword_100299F50);
                  uint64_t v110 = v132;
                  sub_10000D830((uint64_t)&v154[*(int *)(v108 + 40)], v132, &qword_100299F50);
                  uint64_t v111 = v134;
                  uint64_t v112 = v134 + *(int *)(v131 + 48);
                  sub_10000D830(v109, v134, &qword_100299F50);
                  uint64_t v113 = v111;
                  sub_10000D830(v110, v112, &qword_100299F50);
                  v114 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
                  if (v114(v113, 1, v85) == 1)
                  {
                    sub_10004015C(v110, &qword_100299F50);
                    uint64_t v113 = v134;
                    sub_10004015C(v109, &qword_100299F50);
                    if (v114(v112, 1, v85) == 1)
                    {
                      sub_10004015C(v113, &qword_100299F50);
LABEL_56:
                      uint64_t v118 = v128;
                      v119 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
                      v120 = v126;
                      v119(v126, &v153[*(int *)(v108 + 24)], v76);
                      v121 = v127;
                      v119(v127, &v154[*(int *)(v108 + 24)], v76);
                      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                      char v72 = sub_100222250();
                      v122 = *(void (**)(char *, uint64_t))(v118 + 8);
                      v122(v121, v76);
                      v122(v120, v76);
                      return v72 & 1;
                    }
                    goto LABEL_52;
                  }
                  v115 = v129;
                  sub_10000D830(v113, (uint64_t)v129, &qword_100299F50);
                  if (v114(v112, 1, v85) == 1)
                  {
                    sub_10004015C(v132, &qword_100299F50);
                    sub_10004015C(v133, &qword_100299F50);
                    sub_1000D7E78((uint64_t)v115, type metadata accessor for AccountInfo);
LABEL_52:
                    v94 = &qword_10029E3E0;
                    uint64_t v95 = v113;
                    goto LABEL_34;
                  }
                  v116 = v125;
                  sub_1000D736C(v112, (uint64_t)v125, type metadata accessor for AccountInfo);
                  if (*v115 == *v116)
                  {
                    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                    char v117 = sub_100222250();
                    sub_1000D7E78((uint64_t)v116, type metadata accessor for AccountInfo);
                    sub_10004015C(v132, &qword_100299F50);
                    sub_10004015C(v133, &qword_100299F50);
                    sub_1000D7E78((uint64_t)v115, type metadata accessor for AccountInfo);
                    sub_10004015C(v113, &qword_100299F50);
                    if (v117) {
                      goto LABEL_56;
                    }
                    goto LABEL_35;
                  }
                  sub_1000D7E78((uint64_t)v116, type metadata accessor for AccountInfo);
                  uint64_t v123 = v113;
                  v98 = &qword_100299F50;
                  sub_10004015C(v132, &qword_100299F50);
                  sub_10004015C(v133, &qword_100299F50);
                  sub_1000D7E78((uint64_t)v115, type metadata accessor for AccountInfo);
                  uint64_t v95 = v123;
                  goto LABEL_33;
                }
LABEL_39:
                v94 = &qword_10029E3E8;
                uint64_t v95 = v92;
                goto LABEL_34;
              }
              v105 = v135;
              sub_10000D830(v92, (uint64_t)v135, &qword_10029F000);
              if (v93(v91, 1, v86) == 1)
              {
                sub_10004015C(v139, &qword_10029F000);
                sub_10004015C(v142, &qword_10029F000);
                sub_1000D7E78((uint64_t)v105, type metadata accessor for Metrics);
                goto LABEL_39;
              }
              v106 = v130;
              sub_1000D736C(v91, (uint64_t)v130, type metadata accessor for Metrics);
              if (*v105 == *v106 && v105[1] == v106[1] || (sub_100222A30())
                && (v105[2] == v106[2] && v105[3] == v106[3] || (sub_100222A30() & 1) != 0))
              {
                sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                char v107 = sub_100222250();
                sub_1000D7E78((uint64_t)v106, type metadata accessor for Metrics);
                sub_10004015C(v139, &qword_10029F000);
                sub_10004015C(v142, &qword_10029F000);
                sub_1000D7E78((uint64_t)v105, type metadata accessor for Metrics);
                sub_10004015C(v140, &qword_10029F000);
                if ((v107 & 1) == 0) {
                  goto LABEL_35;
                }
                goto LABEL_47;
              }
              sub_1000D7E78((uint64_t)v106, type metadata accessor for Metrics);
              v98 = &qword_10029F000;
              sub_10004015C(v139, &qword_10029F000);
              sub_10004015C(v142, &qword_10029F000);
              sub_1000D7E78((uint64_t)v105, type metadata accessor for Metrics);
              uint64_t v95 = v140;
LABEL_33:
              v94 = v98;
              goto LABEL_34;
            }
            goto LABEL_26;
          }
          uint64_t v100 = v141;
          sub_10000D830((uint64_t)v57, v141, &qword_10029ECA0);
          int v101 = v81(v80, 1, v82);
          uint64_t v84 = v147;
          uint64_t v85 = v148;
          uint64_t v86 = v146;
          if (v101 == 1)
          {
            sub_10004015C(v151, &qword_10029ECA0);
            sub_10004015C(v152, &qword_10029ECA0);
            sub_1000D7E78(v100, type metadata accessor for SignedPeerDynamicInfo);
LABEL_26:
            v94 = &qword_10029E448;
            uint64_t v95 = (uint64_t)v57;
            goto LABEL_34;
          }
          uint64_t v102 = v136;
          sub_1000D736C(v80, v136, type metadata accessor for SignedPeerDynamicInfo);
          if ((sub_10003FE7C(*(void *)v100, *(void *)(v100 + 8), *(void *)v102, *(void *)(v102 + 8)) & 1) != 0
            && (sub_10003FE7C(*(void *)(v100 + 16), *(void *)(v100 + 24), *(void *)(v102 + 16), *(void *)(v102 + 24)) & 1) != 0)
          {
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v103 = sub_100222250();
            sub_1000D7E78(v102, type metadata accessor for SignedPeerDynamicInfo);
            sub_10004015C(v151, &qword_10029ECA0);
            sub_10004015C(v152, &qword_10029ECA0);
            sub_1000D7E78(v100, type metadata accessor for SignedPeerDynamicInfo);
            uint64_t v87 = v142;
            sub_10004015C((uint64_t)v57, &qword_10029ECA0);
            if ((v103 & 1) == 0) {
              goto LABEL_35;
            }
            goto LABEL_13;
          }
          v97 = type metadata accessor for SignedPeerDynamicInfo;
          sub_1000D7E78(v102, type metadata accessor for SignedPeerDynamicInfo);
          v98 = &qword_10029ECA0;
          sub_10004015C(v151, &qword_10029ECA0);
          sub_10004015C(v152, &qword_10029ECA0);
          uint64_t v99 = v100;
LABEL_32:
          sub_1000D7E78(v99, v97);
          uint64_t v95 = (uint64_t)v57;
          goto LABEL_33;
        }
        sub_10004015C((uint64_t)v66, &qword_100299F18);
        sub_10004015C((uint64_t)v69, &qword_100299F18);
        sub_1000D7E78((uint64_t)v62, type metadata accessor for SignedPeerStableInfo);
      }
      v94 = &qword_10029E450;
      uint64_t v95 = (uint64_t)v57;
LABEL_34:
      sub_10004015C(v95, v94);
LABEL_35:
      char v72 = 0;
    }
  }
  return v72 & 1;
}

uint64_t _s18TrustedPeersHelper24GetSupportAppInfoRequestV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v85 = a1;
  uint64_t v86 = a2;
  uint64_t v77 = sub_100221DF0();
  uint64_t v74 = *(void *)(v77 - 8);
  uint64_t v3 = __chkstk_darwin(v77, v2);
  uint64_t v73 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  char v72 = (char *)&v71 - v6;
  uint64_t v81 = type metadata accessor for AccountInfo(0);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81, v7);
  uint64_t v75 = (_DWORD *)((char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v78, v9);
  uint64_t v82 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000046DC(&qword_100299F50);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v76 = (_DWORD *)((char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v84 = (uint64_t)&v71 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v80 = (uint64_t)&v71 - v19;
  uint64_t v20 = type metadata accessor for Metrics(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (uint64_t *)((char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_1000046DC(&qword_10029E3E8);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25, v27);
  uint64_t v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000046DC(&qword_10029F000);
  uint64_t v32 = __chkstk_darwin(v30 - 8, v31);
  uint64_t v34 = (uint64_t *)((char *)&v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __chkstk_darwin(v32, v35);
  uint64_t v38 = (char *)&v71 - v37;
  __chkstk_darwin(v36, v39);
  uint64_t v41 = (char *)&v71 - v40;
  uint64_t SupportAppInfoRequest = type metadata accessor for GetSupportAppInfoRequest(0);
  sub_10000D830((uint64_t)v85 + *(int *)(SupportAppInfoRequest + 24), (uint64_t)v41, &qword_10029F000);
  uint64_t v83 = SupportAppInfoRequest;
  sub_10000D830((uint64_t)v86 + *(int *)(SupportAppInfoRequest + 24), (uint64_t)v38, &qword_10029F000);
  uint64_t v43 = (uint64_t)&v29[*(int *)(v26 + 56)];
  sub_10000D830((uint64_t)v41, (uint64_t)v29, &qword_10029F000);
  sub_10000D830((uint64_t)v38, v43, &qword_10029F000);
  uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v44((uint64_t)v29, 1, v20) == 1)
  {
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    if (v44(v43, 1, v20) == 1)
    {
      sub_10004015C((uint64_t)v29, &qword_10029F000);
      goto LABEL_14;
    }
LABEL_6:
    uint64_t v45 = &qword_10029E3E8;
    uint64_t v46 = (uint64_t)v29;
LABEL_27:
    sub_10004015C(v46, v45);
    goto LABEL_28;
  }
  sub_10000D830((uint64_t)v29, (uint64_t)v34, &qword_10029F000);
  if (v44(v43, 1, v20) == 1)
  {
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
    goto LABEL_6;
  }
  sub_1000D736C(v43, (uint64_t)v24, type metadata accessor for Metrics);
  if ((*v34 != *v24 || v34[1] != v24[1]) && (sub_100222A30() & 1) == 0
    || (v34[2] != v24[2] || v34[3] != v24[3]) && (sub_100222A30() & 1) == 0)
  {
    sub_1000D7E78((uint64_t)v24, type metadata accessor for Metrics);
    sub_10004015C((uint64_t)v38, &qword_10029F000);
    sub_10004015C((uint64_t)v41, &qword_10029F000);
    sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
    uint64_t v46 = (uint64_t)v29;
    uint64_t v45 = &qword_10029F000;
    goto LABEL_27;
  }
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v47 = sub_100222250();
  sub_1000D7E78((uint64_t)v24, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v38, &qword_10029F000);
  sub_10004015C((uint64_t)v41, &qword_10029F000);
  sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v29, &qword_10029F000);
  if ((v47 & 1) == 0)
  {
LABEL_28:
    char v65 = 0;
    return v65 & 1;
  }
LABEL_14:
  uint64_t v48 = v83;
  uint64_t v49 = v85;
  uint64_t v50 = v80;
  sub_10000D830((uint64_t)v85 + *(int *)(v83 + 28), v80, &qword_100299F50);
  uint64_t v51 = v86;
  uint64_t v52 = v84;
  sub_10000D830((uint64_t)v86 + *(int *)(v48 + 28), v84, &qword_100299F50);
  uint64_t v53 = v82;
  uint64_t v54 = v82 + *(int *)(v78 + 48);
  sub_10000D830(v50, v82, &qword_100299F50);
  sub_10000D830(v52, v54, &qword_100299F50);
  uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  uint64_t v56 = v81;
  if (v55(v53, 1, v81) == 1)
  {
    sub_10004015C(v52, &qword_100299F50);
    sub_10004015C(v50, &qword_100299F50);
    if (v55(v54, 1, v56) == 1)
    {
      sub_10004015C(v53, &qword_100299F50);
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  uint64_t v67 = v76;
  sub_10000D830(v53, (uint64_t)v76, &qword_100299F50);
  if (v55(v54, 1, v56) == 1)
  {
    sub_10004015C(v84, &qword_100299F50);
    sub_10004015C(v50, &qword_100299F50);
    sub_1000D7E78((uint64_t)v67, type metadata accessor for AccountInfo);
LABEL_21:
    uint64_t v45 = &qword_10029E3E0;
    uint64_t v46 = v53;
    goto LABEL_27;
  }
  uint64_t v68 = v75;
  sub_1000D736C(v54, (uint64_t)v75, type metadata accessor for AccountInfo);
  if (*v67 != *v68)
  {
    sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
    sub_10004015C(v84, &qword_100299F50);
    sub_10004015C(v50, &qword_100299F50);
    sub_1000D7E78((uint64_t)v67, type metadata accessor for AccountInfo);
    uint64_t v46 = v53;
    uint64_t v45 = &qword_100299F50;
    goto LABEL_27;
  }
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v69 = sub_100222250();
  sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
  sub_10004015C(v84, &qword_100299F50);
  sub_10004015C(v50, &qword_100299F50);
  sub_1000D7E78((uint64_t)v67, type metadata accessor for AccountInfo);
  sub_10004015C(v53, &qword_100299F50);
  if ((v69 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_17:
  if (*v49 != *v51) {
    goto LABEL_28;
  }
  uint64_t v57 = v83;
  uint64_t v58 = (char *)v49 + *(int *)(v83 + 20);
  uint64_t v59 = v74;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v61 = v72;
  uint64_t v62 = v77;
  v60(v72, v58, v77);
  uint64_t v63 = (char *)v51 + *(int *)(v57 + 20);
  uint64_t v64 = v73;
  v60(v73, v63, v62);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v65 = sub_100222250();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v59 + 8);
  v66(v64, v62);
  v66(v61, v62);
  return v65 & 1;
}

uint64_t sub_1000C951C(char *a1, char *a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_100221DF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v22 - v15;
  if (a3(*(void *)a1, *(void *)a2) & 1) != 0 && (sub_10003BD90(*((void *)a1 + 1), *((void *)a2 + 1)))
  {
    uint64_t v17 = a4(0);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v18(v16, &a1[*(int *)(v17 + 24)], v8);
    v18(v13, &a2[*(int *)(v17 + 24)], v8);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v19 = sub_100222250();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v13, v8);
    v20(v16, v8);
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1000C96F4(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for JoinWithVoucherResponse);
}

uint64_t _s18TrustedPeersHelper38EscrowProxyFederationMoveRecordRequestV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v53 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v52 = (char *)&v48 - v9;
  uint64_t v10 = type metadata accessor for Metrics(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v51 = (uint64_t *)((char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v55 = (uint64_t *)((char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v25 = (char *)&v48 - v24;
  __chkstk_darwin(v23, v26);
  uint64_t v28 = (char *)&v48 - v27;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v29 = 0, (sub_100222A30() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v29 = 0, (sub_100222A30() & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (char v29 = 0, (sub_100222A30() & 1) != 0))
      {
        uint64_t v50 = v4;
        uint64_t v30 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
        sub_10000D830((uint64_t)a1 + *(int *)(v30 + 32), (uint64_t)v28, &qword_10029F000);
        uint64_t v49 = v30;
        sub_10000D830((uint64_t)a2 + *(int *)(v30 + 32), (uint64_t)v25, &qword_10029F000);
        uint64_t v31 = (uint64_t)&v17[*(int *)(v14 + 48)];
        sub_10000D830((uint64_t)v28, (uint64_t)v17, &qword_10029F000);
        sub_10000D830((uint64_t)v25, v31, &qword_10029F000);
        uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
        if (v32((uint64_t)v17, 1, v10) == 1)
        {
          sub_10004015C((uint64_t)v25, &qword_10029F000);
          sub_10004015C((uint64_t)v28, &qword_10029F000);
          if (v32(v31, 1, v10) == 1)
          {
            sub_10004015C((uint64_t)v17, &qword_10029F000);
            uint64_t v33 = v50;
LABEL_13:
            uint64_t v34 = v49;
            uint64_t v35 = (char *)a1 + *(int *)(v49 + 28);
            uint64_t v36 = v54;
            uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
            uint64_t v38 = v52;
            v37(v52, v35, v33);
            uint64_t v39 = (char *)a2 + *(int *)(v34 + 28);
            uint64_t v40 = v53;
            v37(v53, v39, v33);
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v29 = sub_100222250();
            uint64_t v41 = *(void (**)(char *, uint64_t))(v36 + 8);
            v41(v40, v33);
            v41(v38, v33);
            return v29 & 1;
          }
        }
        else
        {
          uint64_t v42 = v55;
          sub_10000D830((uint64_t)v17, (uint64_t)v55, &qword_10029F000);
          if (v32(v31, 1, v10) != 1)
          {
            uint64_t v46 = v51;
            sub_1000D736C(v31, (uint64_t)v51, type metadata accessor for Metrics);
            if (*v42 == *v46 && v42[1] == v46[1] || (sub_100222A30())
              && (v42[2] == v46[2] && v42[3] == v46[3] || (sub_100222A30() & 1) != 0))
            {
              sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
              uint64_t v33 = v50;
              char v47 = sub_100222250();
              sub_1000D7E78((uint64_t)v46, type metadata accessor for Metrics);
              sub_10004015C((uint64_t)v25, &qword_10029F000);
              sub_10004015C((uint64_t)v28, &qword_10029F000);
              sub_1000D7E78((uint64_t)v42, type metadata accessor for Metrics);
              sub_10004015C((uint64_t)v17, &qword_10029F000);
              if (v47) {
                goto LABEL_13;
              }
LABEL_18:
              char v29 = 0;
              return v29 & 1;
            }
            sub_1000D7E78((uint64_t)v46, type metadata accessor for Metrics);
            sub_10004015C((uint64_t)v25, &qword_10029F000);
            sub_10004015C((uint64_t)v28, &qword_10029F000);
            sub_1000D7E78((uint64_t)v42, type metadata accessor for Metrics);
            uint64_t v44 = (uint64_t)v17;
            uint64_t v43 = &qword_10029F000;
LABEL_17:
            sub_10004015C(v44, v43);
            goto LABEL_18;
          }
          sub_10004015C((uint64_t)v25, &qword_10029F000);
          sub_10004015C((uint64_t)v28, &qword_10029F000);
          sub_1000D7E78((uint64_t)v42, type metadata accessor for Metrics);
        }
        uint64_t v43 = &qword_10029E3E8;
        uint64_t v44 = (uint64_t)v17;
        goto LABEL_17;
      }
    }
  }
  return v29 & 1;
}

uint64_t sub_1000C9D8C(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v100 = a4;
  int v101 = (char *)a3;
  uint64_t v97 = sub_100221DF0();
  uint64_t v91 = *(void *)(v97 - 8);
  uint64_t v7 = __chkstk_darwin(v97, v6);
  uint64_t v90 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v89 = (char *)&v84 - v10;
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  uint64_t v94 = *(void *)(v11 - 8);
  uint64_t v95 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v88 = (_DWORD *)((char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v93, v14);
  uint64_t v96 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000046DC(&qword_100299F50);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v92 = (_DWORD *)((char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)&v84 - v22;
  __chkstk_darwin(v21, v24);
  uint64_t v26 = (char *)&v84 - v25;
  uint64_t v27 = type metadata accessor for Metrics(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v98 = v27;
  uint64_t v99 = (char *)v28;
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v84 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000046DC(&qword_10029F000);
  uint64_t v38 = __chkstk_darwin(v36 - 8, v37);
  uint64_t v40 = (char *)&v84 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v38, v41);
  uint64_t v44 = (char *)&v84 - v43;
  __chkstk_darwin(v42, v45);
  char v47 = (char *)&v84 - v46;
  if ((((uint64_t (*)(void, void))v101)(*a1, *a2) & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v85 = v31;
  uint64_t v86 = v26;
  int v101 = v40;
  uint64_t v87 = v23;
  uint64_t v48 = v100(0);
  uint64_t v49 = *(int *)(v48 + 24);
  uint64_t v100 = (uint64_t (*)(void))a1;
  sub_10000D830((uint64_t)a1 + v49, (uint64_t)v47, &qword_10029F000);
  sub_10000D830((uint64_t)a2 + *(int *)(v48 + 24), (uint64_t)v44, &qword_10029F000);
  uint64_t v50 = (uint64_t)&v35[*(int *)(v32 + 48)];
  sub_10000D830((uint64_t)v47, (uint64_t)v35, &qword_10029F000);
  sub_10000D830((uint64_t)v44, v50, &qword_10029F000);
  uint64_t v51 = v98;
  uint64_t v52 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v99 + 6);
  if (v52((uint64_t)v35, 1, v98) == 1)
  {
    sub_10004015C((uint64_t)v44, &qword_10029F000);
    sub_10004015C((uint64_t)v47, &qword_10029F000);
    if (v52(v50, 1, v51) == 1)
    {
      sub_10004015C((uint64_t)v35, &qword_10029F000);
      uint64_t v53 = v97;
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v55 = &qword_10029E3E8;
    uint64_t v56 = (uint64_t)v35;
LABEL_27:
    sub_10004015C(v56, v55);
    goto LABEL_28;
  }
  uint64_t v54 = v101;
  sub_10000D830((uint64_t)v35, (uint64_t)v101, &qword_10029F000);
  if (v52(v50, 1, v51) == 1)
  {
    sub_10004015C((uint64_t)v44, &qword_10029F000);
    sub_10004015C((uint64_t)v47, &qword_10029F000);
    sub_1000D7E78((uint64_t)v54, type metadata accessor for Metrics);
    goto LABEL_7;
  }
  uint64_t v84 = v44;
  uint64_t v99 = v47;
  uint64_t v57 = (uint64_t)v35;
  uint64_t v58 = v85;
  sub_1000D736C(v50, (uint64_t)v85, type metadata accessor for Metrics);
  if ((*v54 != *v58 || v54[1] != v58[1]) && (sub_100222A30() & 1) == 0
    || (v54[2] != v58[2] || v54[3] != v58[3]) && (sub_100222A30() & 1) == 0)
  {
    uint64_t v68 = type metadata accessor for Metrics;
    sub_1000D7E78((uint64_t)v58, type metadata accessor for Metrics);
    char v69 = &qword_10029F000;
    sub_10004015C((uint64_t)v84, &qword_10029F000);
    sub_10004015C((uint64_t)v99, &qword_10029F000);
    uint64_t v70 = (uint64_t)v54;
    goto LABEL_26;
  }
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  uint64_t v53 = v97;
  char v59 = sub_100222250();
  sub_1000D7E78((uint64_t)v58, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v84, &qword_10029F000);
  sub_10004015C((uint64_t)v99, &qword_10029F000);
  sub_1000D7E78((uint64_t)v54, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v35, &qword_10029F000);
  if ((v59 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_15:
  uint64_t v60 = v100;
  uint64_t v61 = (uint64_t)v86;
  sub_10000D830((uint64_t)v100 + *(int *)(v48 + 28), (uint64_t)v86, &qword_100299F50);
  int v101 = (char *)v48;
  uint64_t v62 = (uint64_t)a2 + *(int *)(v48 + 28);
  uint64_t v63 = (uint64_t)v87;
  sub_10000D830(v62, (uint64_t)v87, &qword_100299F50);
  uint64_t v57 = v96;
  uint64_t v64 = v96 + *(int *)(v93 + 48);
  sub_10000D830(v61, v96, &qword_100299F50);
  sub_10000D830(v63, v64, &qword_100299F50);
  uint64_t v65 = v95;
  uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  if (v66(v57, 1, v95) != 1)
  {
    uint64_t v67 = v92;
    sub_10000D830(v57, (uint64_t)v92, &qword_100299F50);
    if (v66(v64, 1, v65) == 1)
    {
      sub_10004015C((uint64_t)v87, &qword_100299F50);
      sub_10004015C(v61, &qword_100299F50);
      sub_1000D7E78((uint64_t)v67, type metadata accessor for AccountInfo);
      goto LABEL_20;
    }
    uint64_t v71 = v88;
    sub_1000D736C(v64, (uint64_t)v88, type metadata accessor for AccountInfo);
    if (*v67 == *v71)
    {
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v72 = sub_100222250();
      sub_1000D7E78((uint64_t)v71, type metadata accessor for AccountInfo);
      sub_10004015C((uint64_t)v87, &qword_100299F50);
      sub_10004015C(v61, &qword_100299F50);
      sub_1000D7E78((uint64_t)v67, type metadata accessor for AccountInfo);
      sub_10004015C(v57, &qword_100299F50);
      if (v72) {
        goto LABEL_24;
      }
LABEL_28:
      char v81 = 0;
      return v81 & 1;
    }
    uint64_t v68 = type metadata accessor for AccountInfo;
    sub_1000D7E78((uint64_t)v71, type metadata accessor for AccountInfo);
    char v69 = &qword_100299F50;
    sub_10004015C((uint64_t)v87, &qword_100299F50);
    sub_10004015C(v61, &qword_100299F50);
    uint64_t v70 = (uint64_t)v67;
LABEL_26:
    sub_1000D7E78(v70, v68);
    uint64_t v56 = v57;
    uint64_t v55 = v69;
    goto LABEL_27;
  }
  sub_10004015C(v63, &qword_100299F50);
  sub_10004015C(v61, &qword_100299F50);
  if (v66(v64, 1, v65) != 1)
  {
LABEL_20:
    uint64_t v55 = &qword_10029E3E0;
    uint64_t v56 = v57;
    goto LABEL_27;
  }
  sub_10004015C(v57, &qword_100299F50);
LABEL_24:
  uint64_t v73 = (uint64_t)v101;
  uint64_t v74 = (char *)v60 + *((int *)v101 + 5);
  uint64_t v75 = v91;
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  uint64_t v77 = a2;
  uint64_t v78 = v89;
  v76(v89, v74, v53);
  uint64_t v79 = (char *)v77 + *(int *)(v73 + 20);
  uint64_t v80 = v90;
  v76(v90, v79, v53);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v81 = sub_100222250();
  uint64_t v82 = *(void (**)(char *, uint64_t))(v75 + 8);
  v82(v80, v53);
  v82(v78, v53);
  return v81 & 1;
}

uint64_t sub_1000CA7E4(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t _s18TrustedPeersHelper22PolicyDocumentMapEntryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v56 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v55 = (char *)&v54 - v9;
  uint64_t v10 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  char v59 = (uint64_t *)((char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000046DC(&qword_100299670);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000046DC(&qword_100299668);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (uint64_t *)((char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v54 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v54 - v29;
  uint64_t v31 = type metadata accessor for PolicyDocumentMapEntry(0);
  uint64_t v32 = *(int *)(v31 + 24);
  uint64_t v60 = a1;
  uint64_t v33 = a1 + v32;
  uint64_t v34 = v31;
  sub_10000D830(v33, (uint64_t)v30, &qword_100299668);
  uint64_t v35 = *(int *)(v34 + 24);
  uint64_t v61 = a2;
  sub_10000D830(a2 + v35, (uint64_t)v27, &qword_100299668);
  uint64_t v36 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10000D830((uint64_t)v30, (uint64_t)v18, &qword_100299668);
  sub_10000D830((uint64_t)v27, v36, &qword_100299668);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v37((uint64_t)v18, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v27, &qword_100299668);
    sub_10004015C((uint64_t)v30, &qword_100299668);
    if (v37(v36, 1, v10) == 1)
    {
      sub_10004015C((uint64_t)v18, &qword_100299668);
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  sub_10000D830((uint64_t)v18, (uint64_t)v23, &qword_100299668);
  if (v37(v36, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v27, &qword_100299668);
    sub_10004015C((uint64_t)v30, &qword_100299668);
    sub_1000D7E78((uint64_t)v23, type metadata accessor for PolicyDocumentKey);
LABEL_8:
    uint64_t v48 = &qword_100299670;
    uint64_t v49 = (uint64_t)v18;
LABEL_18:
    sub_10004015C(v49, v48);
    goto LABEL_19;
  }
  uint64_t v50 = v59;
  sub_1000D736C(v36, (uint64_t)v59, type metadata accessor for PolicyDocumentKey);
  if (*v23 != *v50 || (v23[1] == v50[1] ? (BOOL v51 = v23[2] == v50[2]) : (BOOL v51 = 0), !v51 && (sub_100222A30() & 1) == 0))
  {
    sub_1000D7E78((uint64_t)v50, type metadata accessor for PolicyDocumentKey);
    sub_10004015C((uint64_t)v27, &qword_100299668);
    sub_10004015C((uint64_t)v30, &qword_100299668);
    sub_1000D7E78((uint64_t)v23, type metadata accessor for PolicyDocumentKey);
    uint64_t v49 = (uint64_t)v18;
    uint64_t v48 = &qword_100299668;
    goto LABEL_18;
  }
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v52 = sub_100222250();
  sub_1000D7E78((uint64_t)v50, type metadata accessor for PolicyDocumentKey);
  sub_10004015C((uint64_t)v27, &qword_100299668);
  sub_10004015C((uint64_t)v30, &qword_100299668);
  sub_1000D7E78((uint64_t)v23, type metadata accessor for PolicyDocumentKey);
  sub_10004015C((uint64_t)v18, &qword_100299668);
  if ((v52 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_4:
  uint64_t v38 = v60;
  uint64_t v39 = v61;
  if ((sub_10003FE7C(*(void *)v60, *(void *)(v60 + 8), *(void *)v61, *(void *)(v61 + 8)) & 1) == 0)
  {
LABEL_19:
    char v46 = 0;
    return v46 & 1;
  }
  uint64_t v41 = v57;
  uint64_t v40 = v58;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  uint64_t v43 = v55;
  v42(v55, v38 + *(int *)(v34 + 20), v58);
  uint64_t v44 = v39 + *(int *)(v34 + 20);
  uint64_t v45 = v56;
  v42(v56, v44, v40);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v46 = sub_100222250();
  char v47 = *(void (**)(char *, uint64_t))(v41 + 8);
  v47(v45, v40);
  v47(v43, v40);
  return v46 & 1;
}

uint64_t _s18TrustedPeersHelper8TLKShareV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v19 - v11;
  if (*(void *)a1 != *(void *)a2 || *((void *)a1 + 1) != *((void *)a2 + 1))
  {
    char v14 = 0;
    if ((sub_100222A30() & 1) == 0) {
      return v14 & 1;
    }
  }
  if (*((void *)a1 + 2) != *((void *)a2 + 2) || *((void *)a1 + 3) != *((void *)a2 + 3)) {
    goto LABEL_29;
  }
  if (*((void *)a1 + 4) != *((void *)a2 + 4) || *((void *)a1 + 5) != *((void *)a2 + 5))
  {
    char v14 = 0;
    if ((sub_100222A30() & 1) == 0) {
      return v14 & 1;
    }
  }
  if (*((void *)a1 + 6) != *((void *)a2 + 6)) {
    goto LABEL_29;
  }
  if (*((void *)a1 + 7) == *((void *)a2 + 7) && *((void *)a1 + 8) == *((void *)a2 + 8)
    || (char v14 = 0, (sub_100222A30() & 1) != 0))
  {
    if (*((void *)a1 + 9) == *((void *)a2 + 9) && *((void *)a1 + 10) == *((void *)a2 + 10)
      || (char v14 = 0, (sub_100222A30() & 1) != 0))
    {
      if (*((void *)a1 + 11) == *((void *)a2 + 11) && *((void *)a1 + 12) == *((void *)a2 + 12)
        || (char v14 = 0, (sub_100222A30() & 1) != 0))
      {
        if (*((void *)a1 + 13) == *((void *)a2 + 13) && *((void *)a1 + 14) == *((void *)a2 + 14)
          || (char v14 = 0, (sub_100222A30() & 1) != 0))
        {
          if (*((void *)a1 + 15) == *((void *)a2 + 15))
          {
            if (*((void *)a1 + 16) == *((void *)a2 + 16) && *((void *)a1 + 17) == *((void *)a2 + 17)
              || (char v14 = 0, (sub_100222A30() & 1) != 0))
            {
              uint64_t v15 = type metadata accessor for TLKShare(0);
              uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
              v16(v12, &a1[*(int *)(v15 + 60)], v4);
              v16(v9, &a2[*(int *)(v15 + 60)], v4);
              sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
              char v14 = sub_100222250();
              uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
              v17(v9, v4);
              v17(v12, v4);
            }
            return v14 & 1;
          }
LABEL_29:
          char v14 = 0;
        }
      }
    }
  }
  return v14 & 1;
}

uint64_t sub_1000CB0D0(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for JoinWithVoucherRequest, (uint64_t (*)(uint64_t, uint64_t))sub_10009EF6C);
}

uint64_t _s18TrustedPeersHelper22GetRepairActionRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = sub_100221DF0();
  uint64_t v75 = *(void *)(v77 - 8);
  uint64_t v5 = __chkstk_darwin(v77, v4);
  uint64_t v74 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v73 = (char *)&v69 - v8;
  uint64_t v81 = type metadata accessor for AccountInfo(0);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81, v9);
  char v72 = (_DWORD *)((char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v78, v11);
  uint64_t v82 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v76 = (uint64_t *)((char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v83 = (uint64_t)&v69 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v80 = (char *)&v69 - v21;
  uint64_t v22 = type metadata accessor for Metrics(0);
  uint64_t v84 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (uint64_t *)((char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000046DC(&qword_10029F000);
  uint64_t v32 = __chkstk_darwin(v30 - 8, v31);
  uint64_t v34 = (uint64_t *)((char *)&v69 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __chkstk_darwin(v32, v35);
  uint64_t v38 = (char *)&v69 - v37;
  __chkstk_darwin(v36, v39);
  uint64_t v41 = (char *)&v69 - v40;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v42 = 0, (sub_100222A30() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16)
      || (sub_10003DD08(*(void **)(a1 + 24), *(void **)(a2 + 24)) & 1) == 0
      || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    {
      goto LABEL_33;
    }
    uint64_t RepairActionRequest = type metadata accessor for GetRepairActionRequest(0);
    sub_10000D830(a1 + *(int *)(RepairActionRequest + 36), (uint64_t)v41, &qword_10029F000);
    uint64_t v70 = RepairActionRequest;
    sub_10000D830(a2 + *(int *)(RepairActionRequest + 36), (uint64_t)v38, &qword_10029F000);
    uint64_t v44 = (uint64_t)&v29[*(int *)(v26 + 48)];
    sub_10000D830((uint64_t)v41, (uint64_t)v29, &qword_10029F000);
    uint64_t v71 = v44;
    sub_10000D830((uint64_t)v38, v44, &qword_10029F000);
    uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
    if (v45((uint64_t)v29, 1, v22) == 1)
    {
      sub_10004015C((uint64_t)v38, &qword_10029F000);
      sub_10004015C((uint64_t)v41, &qword_10029F000);
      if (v45(v71, 1, v22) == 1)
      {
        sub_10004015C((uint64_t)v29, &qword_10029F000);
        goto LABEL_20;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v29, (uint64_t)v34, &qword_10029F000);
      if (v45(v71, 1, v22) != 1)
      {
        sub_1000D736C(v71, (uint64_t)v25, type metadata accessor for Metrics);
        if ((*v34 != *v25 || v34[1] != v25[1]) && (sub_100222A30() & 1) == 0
          || (v34[2] != v25[2] || v34[3] != v25[3]) && (sub_100222A30() & 1) == 0)
        {
          uint64_t v55 = type metadata accessor for Metrics;
          sub_1000D7E78((uint64_t)v25, type metadata accessor for Metrics);
          uint64_t v50 = &qword_10029F000;
          uint64_t v56 = (uint64_t)v38;
          goto LABEL_31;
        }
        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v48 = sub_100222250();
        sub_1000D7E78((uint64_t)v25, type metadata accessor for Metrics);
        sub_10004015C((uint64_t)v38, &qword_10029F000);
        sub_10004015C((uint64_t)v41, &qword_10029F000);
        sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
        sub_10004015C((uint64_t)v29, &qword_10029F000);
        if ((v48 & 1) == 0) {
          goto LABEL_33;
        }
LABEL_20:
        uint64_t v49 = v70;
        uint64_t v50 = &qword_100299F50;
        uint64_t v41 = v80;
        sub_10000D830(a1 + *(int *)(v70 + 40), (uint64_t)v80, &qword_100299F50);
        uint64_t v51 = v83;
        sub_10000D830(a2 + *(int *)(v49 + 40), v83, &qword_100299F50);
        uint64_t v29 = v82;
        uint64_t v52 = (uint64_t)&v82[*(int *)(v78 + 48)];
        sub_10000D830((uint64_t)v41, (uint64_t)v82, &qword_100299F50);
        sub_10000D830(v51, v52, &qword_100299F50);
        uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
        uint64_t v54 = v81;
        if (v53((uint64_t)v29, 1, v81) == 1)
        {
          sub_10004015C(v51, &qword_100299F50);
          sub_10004015C((uint64_t)v41, &qword_100299F50);
          if (v53(v52, 1, v54) == 1)
          {
            sub_10004015C((uint64_t)v29, &qword_100299F50);
LABEL_29:
            uint64_t v59 = v70;
            uint64_t v60 = a1 + *(int *)(v70 + 32);
            uint64_t v61 = v75;
            uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
            uint64_t v63 = v73;
            uint64_t v64 = v77;
            v62(v73, v60, v77);
            uint64_t v65 = a2 + *(int *)(v59 + 32);
            uint64_t v66 = v74;
            v62(v74, v65, v64);
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v42 = sub_100222250();
            uint64_t v67 = *(void (**)(char *, uint64_t))(v61 + 8);
            v67(v66, v64);
            v67(v63, v64);
            return v42 & 1;
          }
          goto LABEL_25;
        }
        uint64_t v34 = v76;
        sub_10000D830((uint64_t)v29, (uint64_t)v76, &qword_100299F50);
        if (v53(v52, 1, v54) == 1)
        {
          sub_10004015C(v83, &qword_100299F50);
          sub_10004015C((uint64_t)v41, &qword_100299F50);
          sub_1000D7E78((uint64_t)v34, type metadata accessor for AccountInfo);
LABEL_25:
          char v46 = &qword_10029E3E0;
          uint64_t v47 = (uint64_t)v29;
          goto LABEL_32;
        }
        uint64_t v57 = v72;
        sub_1000D736C(v52, (uint64_t)v72, type metadata accessor for AccountInfo);
        if (*(_DWORD *)v34 == *v57)
        {
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v58 = sub_100222250();
          sub_1000D7E78((uint64_t)v57, type metadata accessor for AccountInfo);
          sub_10004015C(v83, &qword_100299F50);
          sub_10004015C((uint64_t)v41, &qword_100299F50);
          sub_1000D7E78((uint64_t)v34, type metadata accessor for AccountInfo);
          sub_10004015C((uint64_t)v29, &qword_100299F50);
          if (v58) {
            goto LABEL_29;
          }
LABEL_33:
          char v42 = 0;
          return v42 & 1;
        }
        uint64_t v55 = type metadata accessor for AccountInfo;
        sub_1000D7E78((uint64_t)v57, type metadata accessor for AccountInfo);
        uint64_t v56 = v83;
LABEL_31:
        sub_10004015C(v56, v50);
        sub_10004015C((uint64_t)v41, v50);
        sub_1000D7E78((uint64_t)v34, v55);
        uint64_t v47 = (uint64_t)v29;
        char v46 = v50;
        goto LABEL_32;
      }
      sub_10004015C((uint64_t)v38, &qword_10029F000);
      sub_10004015C((uint64_t)v41, &qword_10029F000);
      sub_1000D7E78((uint64_t)v34, type metadata accessor for Metrics);
    }
    char v46 = &qword_10029E3E8;
    uint64_t v47 = (uint64_t)v29;
LABEL_32:
    sub_10004015C(v47, v46);
    goto LABEL_33;
  }
  return v42 & 1;
}

uint64_t _s18TrustedPeersHelper21SetRecoveryKeyRequestV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v118 = sub_100221DF0();
  uint64_t v111 = *(void *)(v118 - 8);
  uint64_t v5 = __chkstk_darwin(v118, v4);
  uint64_t v110 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v109 = (char *)&v107 - v8;
  uint64_t v121 = type metadata accessor for AccountInfo(0);
  uint64_t v119 = *(void *)(v121 - 8);
  __chkstk_darwin(v121, v9);
  uint64_t v112 = (_DWORD *)((char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v115, v11);
  v122 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v113 = (_DWORD *)((char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v116 = (uint64_t)&v107 - v19;
  __chkstk_darwin(v18, v20);
  v120 = (char *)&v107 - v21;
  uint64_t v126 = type metadata accessor for Metrics(0);
  uint64_t v124 = *(void *)(v126 - 8);
  __chkstk_darwin(v126, v22);
  v114 = (int **)((char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v123, v24);
  uint64_t v125 = (uint64_t)&v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000046DC(&qword_10029F000);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  char v117 = (int **)((char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v127 = (uint64_t)&v107 - v32;
  __chkstk_darwin(v31, v33);
  uint64_t v128 = (uint64_t)&v107 - v34;
  uint64_t v35 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v129 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v107 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000046DC(&qword_10029E450);
  __chkstk_darwin(v39, v40);
  char v42 = (char *)&v107 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000046DC(&qword_100299F18);
  uint64_t v45 = __chkstk_darwin(v43 - 8, v44);
  uint64_t v47 = (char *)&v107 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v45, v48);
  uint64_t v51 = (char *)&v107 - v50;
  __chkstk_darwin(v49, v52);
  uint64_t v54 = (char *)&v107 - v53;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v55 = 0, (sub_100222A30() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v55 = 0, (sub_100222A30() & 1) != 0))
    {
      if ((sub_10003FE7C(a1[4], a1[5], a2[4], a2[5]) & 1) == 0 || (sub_10003FE7C(a1[6], a1[7], a2[6], a2[7]) & 1) == 0) {
        goto LABEL_31;
      }
      uint64_t v56 = type metadata accessor for SetRecoveryKeyRequest(0);
      uint64_t v57 = a1;
      char v58 = a2;
      uint64_t v59 = (int *)v56;
      uint64_t v60 = *(int *)(v56 + 44);
      uint64_t v108 = v57;
      sub_10000D830((uint64_t)v57 + v60, (uint64_t)v54, &qword_100299F18);
      char v107 = v59;
      uint64_t v61 = v59[11];
      uint64_t v62 = v58;
      sub_10000D830((uint64_t)v58 + v61, (uint64_t)v51, &qword_100299F18);
      uint64_t v63 = (uint64_t)&v42[*(int *)(v39 + 48)];
      sub_10000D830((uint64_t)v54, (uint64_t)v42, &qword_100299F18);
      sub_10000D830((uint64_t)v51, v63, &qword_100299F18);
      uint64_t v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
      if (v64((uint64_t)v42, 1, v35) == 1)
      {
        sub_10004015C((uint64_t)v51, &qword_100299F18);
        sub_10004015C((uint64_t)v54, &qword_100299F18);
        if (v64(v63, 1, v35) == 1)
        {
          sub_10004015C((uint64_t)v42, &qword_100299F18);
          goto LABEL_12;
        }
      }
      else
      {
        sub_10000D830((uint64_t)v42, (uint64_t)v47, &qword_100299F18);
        if (v64(v63, 1, v35) != 1)
        {
          sub_1000D736C(v63, (uint64_t)v38, type metadata accessor for SignedPeerStableInfo);
          if ((sub_10003FE7C(*(void *)v47, *((void *)v47 + 1), *(void *)v38, *((void *)v38 + 1)) & 1) == 0
            || (sub_10003FE7C(*((void *)v47 + 2), *((void *)v47 + 3), *((void *)v38 + 2), *((void *)v38 + 3)) & 1) == 0)
          {
            uint64_t v80 = type metadata accessor for SignedPeerStableInfo;
            sub_1000D7E78((uint64_t)v38, type metadata accessor for SignedPeerStableInfo);
            uint64_t v81 = &qword_100299F18;
            sub_10004015C((uint64_t)v51, &qword_100299F18);
            sub_10004015C((uint64_t)v54, &qword_100299F18);
            uint64_t v82 = (uint64_t)v47;
LABEL_25:
            sub_1000D7E78(v82, v80);
            uint64_t v78 = (uint64_t)v42;
LABEL_26:
            uint64_t v77 = v81;
            goto LABEL_30;
          }
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v79 = sub_100222250();
          sub_1000D7E78((uint64_t)v38, type metadata accessor for SignedPeerStableInfo);
          sub_10004015C((uint64_t)v51, &qword_100299F18);
          sub_10004015C((uint64_t)v54, &qword_100299F18);
          sub_1000D7E78((uint64_t)v47, type metadata accessor for SignedPeerStableInfo);
          sub_10004015C((uint64_t)v42, &qword_100299F18);
          if ((v79 & 1) == 0) {
            goto LABEL_31;
          }
LABEL_12:
          uint64_t v65 = v108;
          if ((sub_10003DDD0(v108[8], v62[8]) & 1) == 0) {
            goto LABEL_31;
          }
          uint64_t v66 = v107;
          uint64_t v67 = v128;
          sub_10000D830((uint64_t)v65 + v107[12], v128, &qword_10029F000);
          uint64_t v68 = v127;
          sub_10000D830((uint64_t)v62 + v66[12], v127, &qword_10029F000);
          uint64_t v69 = v125;
          uint64_t v70 = v125 + *(int *)(v123 + 48);
          sub_10000D830(v67, v125, &qword_10029F000);
          sub_10000D830(v68, v70, &qword_10029F000);
          uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48);
          uint64_t v72 = v126;
          if (v71(v69, 1, v126) == 1)
          {
            sub_10004015C(v68, &qword_10029F000);
            sub_10004015C(v67, &qword_10029F000);
            int v73 = v71(v70, 1, v72);
            uint64_t v74 = v121;
            char v42 = v122;
            uint64_t v76 = v119;
            uint64_t v75 = (uint64_t)v120;
            if (v73 == 1)
            {
              sub_10004015C(v69, &qword_10029F000);
LABEL_40:
              uint64_t v88 = v107;
              sub_10000D830((uint64_t)v65 + v107[13], v75, &qword_100299F50);
              uint64_t v89 = v116;
              sub_10000D830((uint64_t)v62 + v88[13], v116, &qword_100299F50);
              uint64_t v90 = (uint64_t)&v42[*(int *)(v115 + 48)];
              sub_10000D830(v75, (uint64_t)v42, &qword_100299F50);
              sub_10000D830(v89, v90, &qword_100299F50);
              uint64_t v91 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
              if (v91((uint64_t)v42, 1, v74) == 1)
              {
                sub_10004015C(v89, &qword_100299F50);
                sub_10004015C(v75, &qword_100299F50);
                if (v91(v90, 1, v74) == 1)
                {
                  sub_10004015C((uint64_t)v42, &qword_100299F50);
                  goto LABEL_49;
                }
                goto LABEL_45;
              }
              uint64_t v92 = v113;
              sub_10000D830((uint64_t)v42, (uint64_t)v113, &qword_100299F50);
              if (v91(v90, 1, v74) == 1)
              {
                sub_10004015C(v116, &qword_100299F50);
                sub_10004015C(v75, &qword_100299F50);
                sub_1000D7E78((uint64_t)v92, type metadata accessor for AccountInfo);
LABEL_45:
                uint64_t v77 = &qword_10029E3E0;
                goto LABEL_19;
              }
              uint64_t v94 = v112;
              sub_1000D736C(v90, (uint64_t)v112, type metadata accessor for AccountInfo);
              uint64_t v95 = v116;
              if (*v92 == *v94)
              {
                sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                char v96 = sub_100222250();
                sub_1000D7E78((uint64_t)v94, type metadata accessor for AccountInfo);
                sub_10004015C(v95, &qword_100299F50);
                sub_10004015C(v75, &qword_100299F50);
                sub_1000D7E78((uint64_t)v92, type metadata accessor for AccountInfo);
                sub_10004015C((uint64_t)v42, &qword_100299F50);
                if (v96)
                {
LABEL_49:
                  if (sub_10003DE24(v65[9], v62[9]))
                  {
                    uint64_t v97 = v107;
                    uint64_t v98 = (uint64_t)v65 + v107[10];
                    uint64_t v99 = v111;
                    uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
                    int v101 = v109;
                    uint64_t v102 = v118;
                    v100(v109, v98, v118);
                    uint64_t v103 = (uint64_t)v62 + v97[10];
                    v104 = v110;
                    v100(v110, v103, v102);
                    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                    char v55 = sub_100222250();
                    v105 = *(void (**)(char *, uint64_t))(v99 + 8);
                    v105(v104, v102);
                    v105(v101, v102);
                    return v55 & 1;
                  }
                }
LABEL_31:
                char v55 = 0;
                return v55 & 1;
              }
              uint64_t v80 = type metadata accessor for AccountInfo;
              sub_1000D7E78((uint64_t)v94, type metadata accessor for AccountInfo);
              v106 = v92;
              uint64_t v81 = &qword_100299F50;
              sub_10004015C(v95, &qword_100299F50);
              sub_10004015C(v75, &qword_100299F50);
              uint64_t v82 = (uint64_t)v106;
              goto LABEL_25;
            }
          }
          else
          {
            uint64_t v83 = v117;
            sub_10000D830(v69, (uint64_t)v117, &qword_10029F000);
            int v84 = v71(v70, 1, v72);
            uint64_t v74 = v121;
            char v42 = v122;
            uint64_t v76 = v119;
            uint64_t v75 = (uint64_t)v120;
            if (v84 != 1)
            {
              uint64_t v86 = v114;
              sub_1000D736C(v70, (uint64_t)v114, type metadata accessor for Metrics);
              if ((*v83 != *v86 || v83[1] != v86[1]) && (sub_100222A30() & 1) == 0
                || (v83[2] != v86[2] || v83[3] != v86[3]) && (sub_100222A30() & 1) == 0)
              {
                sub_1000D7E78((uint64_t)v86, type metadata accessor for Metrics);
                uint64_t v93 = (uint64_t)v83;
                uint64_t v81 = &qword_10029F000;
                sub_10004015C(v127, &qword_10029F000);
                sub_10004015C(v128, &qword_10029F000);
                sub_1000D7E78(v93, type metadata accessor for Metrics);
                uint64_t v78 = v69;
                goto LABEL_26;
              }
              sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
              char v87 = sub_100222250();
              sub_1000D7E78((uint64_t)v86, type metadata accessor for Metrics);
              sub_10004015C(v127, &qword_10029F000);
              sub_10004015C(v128, &qword_10029F000);
              sub_1000D7E78((uint64_t)v117, type metadata accessor for Metrics);
              sub_10004015C(v69, &qword_10029F000);
              if ((v87 & 1) == 0) {
                goto LABEL_31;
              }
              goto LABEL_40;
            }
            sub_10004015C(v127, &qword_10029F000);
            sub_10004015C(v128, &qword_10029F000);
            sub_1000D7E78((uint64_t)v83, type metadata accessor for Metrics);
          }
          uint64_t v77 = &qword_10029E3E8;
          uint64_t v78 = v69;
          goto LABEL_30;
        }
        sub_10004015C((uint64_t)v51, &qword_100299F18);
        sub_10004015C((uint64_t)v54, &qword_100299F18);
        sub_1000D7E78((uint64_t)v47, type metadata accessor for SignedPeerStableInfo);
      }
      uint64_t v77 = &qword_10029E450;
LABEL_19:
      uint64_t v78 = (uint64_t)v42;
LABEL_30:
      sub_10004015C(v78, v77);
      goto LABEL_31;
    }
  }
  return v55 & 1;
}

uint64_t sub_1000CCA0C(uint64_t a1, uint64_t a2)
{
  return sub_1000CCA24(a1, a2, type metadata accessor for FetchChangesResponse);
}

uint64_t sub_1000CCA24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v52 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v48 - v11;
  uint64_t v12 = type metadata accessor for Changes(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v48 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000046DC(&qword_10029E440);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v55 = (uint64_t)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v48 - v27;
  __chkstk_darwin(v26, v29);
  uint64_t v31 = (char *)&v48 - v30;
  uint64_t v32 = a3(0);
  uint64_t v33 = *(int *)(v32 + 20);
  uint64_t v49 = a1;
  sub_10000D830(a1 + v33, (uint64_t)v31, (uint64_t *)&unk_10029EC90);
  uint64_t v34 = *(int *)(v32 + 20);
  uint64_t v50 = a2;
  sub_10000D830(a2 + v34, (uint64_t)v28, (uint64_t *)&unk_10029EC90);
  uint64_t v35 = (uint64_t)&v20[*(int *)(v17 + 56)];
  sub_10000D830((uint64_t)v31, (uint64_t)v20, (uint64_t *)&unk_10029EC90);
  sub_10000D830((uint64_t)v28, v35, (uint64_t *)&unk_10029EC90);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v36((uint64_t)v20, 1, v12) != 1)
  {
    uint64_t v37 = v55;
    sub_10000D830((uint64_t)v20, v55, (uint64_t *)&unk_10029EC90);
    if (v36(v35, 1, v12) != 1)
    {
      uint64_t v38 = v48;
      sub_1000D736C(v35, v48, type metadata accessor for Changes);
      char v39 = _s18TrustedPeersHelper7ChangesV2eeoiySbAC_ACtFZ_0(v37, v38);
      sub_1000D7E78(v38, type metadata accessor for Changes);
      sub_10004015C((uint64_t)v28, (uint64_t *)&unk_10029EC90);
      sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EC90);
      sub_1000D7E78(v37, type metadata accessor for Changes);
      sub_10004015C((uint64_t)v20, (uint64_t *)&unk_10029EC90);
      if (v39) {
        goto LABEL_8;
      }
LABEL_9:
      char v45 = 0;
      return v45 & 1;
    }
    sub_10004015C((uint64_t)v28, (uint64_t *)&unk_10029EC90);
    sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EC90);
    sub_1000D7E78(v37, type metadata accessor for Changes);
LABEL_6:
    sub_10004015C((uint64_t)v20, &qword_10029E440);
    goto LABEL_9;
  }
  sub_10004015C((uint64_t)v28, (uint64_t *)&unk_10029EC90);
  sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EC90);
  if (v36(v35, 1, v12) != 1) {
    goto LABEL_6;
  }
  sub_10004015C((uint64_t)v20, (uint64_t *)&unk_10029EC90);
LABEL_8:
  uint64_t v41 = v53;
  uint64_t v40 = v54;
  char v42 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v43 = v51;
  v42(v51, v49, v54);
  uint64_t v44 = v52;
  v42(v52, v50, v40);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v45 = sub_100222250();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v41 + 8);
  v46(v44, v40);
  v46(v43, v40);
  return v45 & 1;
}

uint64_t sub_1000CCF24(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for UpdateTrustResponse);
}

uint64_t sub_1000CCF3C(char *a1, char *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v22 - v13;
  BOOL v15 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v15 || (char v16 = 0, (sub_100222A30() & 1) != 0))
  {
    BOOL v17 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v17 || (char v16 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v18 = a3(0);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v19(v14, &a1[*(int *)(v18 + 24)], v6);
      v19(v11, &a2[*(int *)(v18 + 24)], v6);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v16 = sub_100222250();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
      v20(v11, v6);
      v20(v14, v6);
    }
  }
  return v16 & 1;
}

uint64_t _s18TrustedPeersHelper19FetchChangesRequestV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v75 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v74 = (char *)&v71 - v9;
  uint64_t v83 = type metadata accessor for AccountInfo(0);
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83, v10);
  int v73 = (_DWORD *)((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v79, v12);
  uint64_t v84 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v77 = (_DWORD *)((char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v80 = (uint64_t)&v71 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v82 = (uint64_t)&v71 - v22;
  uint64_t v23 = type metadata accessor for Metrics(0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v78 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_10029F000);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v35 = (char *)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v33, v36);
  char v39 = (char *)&v71 - v38;
  __chkstk_darwin(v37, v40);
  char v42 = (char *)&v71 - v41;
  uint64_t v43 = *(void *)a1;
  uint64_t v44 = *((void *)a1 + 1);
  uint64_t v85 = a1;
  uint64_t v86 = a2;
  if (v43 == *(void *)a2 && v44 == *((void *)a2 + 1) || (char v45 = 0, (sub_100222A30() & 1) != 0))
  {
    uint64_t v72 = v4;
    uint64_t ChangesRequest = type metadata accessor for FetchChangesRequest(0);
    sub_10000D830((uint64_t)&v85[*(int *)(ChangesRequest + 24)], (uint64_t)v42, &qword_10029F000);
    sub_10000D830((uint64_t)&v86[*(int *)(ChangesRequest + 24)], (uint64_t)v39, &qword_10029F000);
    uint64_t v47 = (uint64_t)&v30[*(int *)(v27 + 48)];
    sub_10000D830((uint64_t)v42, (uint64_t)v30, &qword_10029F000);
    sub_10000D830((uint64_t)v39, v47, &qword_10029F000);
    uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (v48((uint64_t)v30, 1, v23) == 1)
    {
      sub_10004015C((uint64_t)v39, &qword_10029F000);
      sub_10004015C((uint64_t)v42, &qword_10029F000);
      if (v48(v47, 1, v23) == 1)
      {
        sub_10004015C((uint64_t)v30, &qword_10029F000);
LABEL_11:
        uint64_t v53 = v82;
        sub_10000D830((uint64_t)&v85[*(int *)(ChangesRequest + 28)], v82, &qword_100299F50);
        uint64_t v54 = ChangesRequest;
        uint64_t v55 = (uint64_t)&v86[*(int *)(ChangesRequest + 28)];
        uint64_t v56 = v80;
        sub_10000D830(v55, v80, &qword_100299F50);
        uint64_t v57 = v84;
        uint64_t v58 = v84 + *(int *)(v79 + 48);
        sub_10000D830(v53, v84, &qword_100299F50);
        sub_10000D830(v56, v58, &qword_100299F50);
        uint64_t v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
        uint64_t v60 = v83;
        if (v59(v57, 1, v83) == 1)
        {
          sub_10004015C(v56, &qword_100299F50);
          sub_10004015C(v53, &qword_100299F50);
          if (v59(v58, 1, v60) == 1)
          {
            sub_10004015C(v57, &qword_100299F50);
LABEL_19:
            uint64_t v64 = v76;
            uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
            uint64_t v66 = v74;
            uint64_t v67 = v72;
            v65(v74, &v85[*(int *)(v54 + 20)], v72);
            uint64_t v68 = v75;
            v65(v75, &v86[*(int *)(v54 + 20)], v67);
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v45 = sub_100222250();
            uint64_t v69 = *(void (**)(char *, uint64_t))(v64 + 8);
            v69(v68, v67);
            v69(v66, v67);
            return v45 & 1;
          }
          goto LABEL_16;
        }
        uint64_t v61 = v77;
        sub_10000D830(v57, (uint64_t)v77, &qword_100299F50);
        if (v59(v58, 1, v60) == 1)
        {
          sub_10004015C(v56, &qword_100299F50);
          sub_10004015C(v53, &qword_100299F50);
          sub_1000D7E78((uint64_t)v61, type metadata accessor for AccountInfo);
LABEL_16:
          uint64_t v49 = &qword_10029E3E0;
          uint64_t v50 = v57;
          goto LABEL_21;
        }
        uint64_t v62 = v73;
        sub_1000D736C(v58, (uint64_t)v73, type metadata accessor for AccountInfo);
        if (*v61 != *v62)
        {
          sub_1000D7E78((uint64_t)v62, type metadata accessor for AccountInfo);
          sub_10004015C(v56, &qword_100299F50);
          sub_10004015C(v53, &qword_100299F50);
          sub_1000D7E78((uint64_t)v61, type metadata accessor for AccountInfo);
          uint64_t v50 = v57;
          uint64_t v49 = &qword_100299F50;
          goto LABEL_21;
        }
        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v63 = sub_100222250();
        sub_1000D7E78((uint64_t)v62, type metadata accessor for AccountInfo);
        sub_10004015C(v56, &qword_100299F50);
        sub_10004015C(v53, &qword_100299F50);
        sub_1000D7E78((uint64_t)v61, type metadata accessor for AccountInfo);
        sub_10004015C(v57, &qword_100299F50);
        if (v63) {
          goto LABEL_19;
        }
LABEL_22:
        char v45 = 0;
        return v45 & 1;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v30, (uint64_t)v35, &qword_10029F000);
      if (v48(v47, 1, v23) != 1)
      {
        uint64_t v51 = v78;
        sub_1000D736C(v47, (uint64_t)v78, type metadata accessor for Metrics);
        char v52 = sub_1000CCF3C(v35, v51, type metadata accessor for Metrics);
        sub_1000D7E78((uint64_t)v51, type metadata accessor for Metrics);
        sub_10004015C((uint64_t)v39, &qword_10029F000);
        sub_10004015C((uint64_t)v42, &qword_10029F000);
        sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
        sub_10004015C((uint64_t)v30, &qword_10029F000);
        if ((v52 & 1) == 0) {
          goto LABEL_22;
        }
        goto LABEL_11;
      }
      sub_10004015C((uint64_t)v39, &qword_10029F000);
      sub_10004015C((uint64_t)v42, &qword_10029F000);
      sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
    }
    uint64_t v49 = &qword_10029E3E8;
    uint64_t v50 = (uint64_t)v30;
LABEL_21:
    sub_10004015C(v50, v49);
    goto LABEL_22;
  }
  return v45 & 1;
}

uint64_t _s18TrustedPeersHelper18UpdateTrustRequestV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v189 = sub_100221DF0();
  uint64_t v160 = *(void *)(v189 - 8);
  uint64_t v5 = __chkstk_darwin(v189, v4);
  v159 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v158 = (char *)&v156 - v8;
  uint64_t v165 = type metadata accessor for AccountInfo(0);
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165, v9);
  v157 = (_DWORD *)((char *)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v163 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v163, v11);
  uint64_t v169 = (uint64_t)&v156 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  v161 = (_DWORD *)((char *)&v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v168 = (uint64_t)&v156 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v167 = (uint64_t)&v156 - v21;
  uint64_t v182 = type metadata accessor for Metrics(0);
  uint64_t v172 = *(void *)(v182 - 8);
  __chkstk_darwin(v182, v22);
  v162 = (char *)&v156 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v171, v24);
  uint64_t v176 = (uint64_t)&v156 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000046DC(&qword_10029F000);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  v166 = (char *)&v156 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v174 = (uint64_t)&v156 - v32;
  __chkstk_darwin(v31, v33);
  uint64_t v175 = (uint64_t)&v156 - v34;
  uint64_t v178 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v183 = *(void *)(v178 - 8);
  __chkstk_darwin(v178, v35);
  v170 = (char *)&v156 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_1000046DC(&qword_10029E490);
  __chkstk_darwin(v177, v37);
  uint64_t v179 = (uint64_t)&v156 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000046DC(&qword_10029ED20);
  uint64_t v41 = __chkstk_darwin(v39 - 8, v40);
  v173 = (char *)&v156 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v186 = (uint64_t)&v156 - v45;
  __chkstk_darwin(v44, v46);
  uint64_t v187 = (uint64_t)&v156 - v47;
  uint64_t v188 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v185 = *(void *)(v188 - 8);
  __chkstk_darwin(v188, v48);
  uint64_t v180 = (uint64_t)&v156 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_1000046DC(&qword_10029E448);
  __chkstk_darwin(v184, v50);
  v192 = (char *)&v156 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v54 = __chkstk_darwin(v52 - 8, v53);
  uint64_t v181 = (uint64_t)&v156 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __chkstk_darwin(v54, v56);
  uint64_t v190 = (uint64_t)&v156 - v58;
  __chkstk_darwin(v57, v59);
  uint64_t v191 = (uint64_t)&v156 - v60;
  uint64_t v61 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v62 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v63);
  uint64_t v65 = (char *)&v156 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000046DC(&qword_10029E450);
  __chkstk_darwin(v66, v67);
  uint64_t v69 = (char *)&v156 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000046DC(&qword_100299F18);
  uint64_t v72 = __chkstk_darwin(v70 - 8, v71);
  uint64_t v74 = (char *)&v156 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __chkstk_darwin(v72, v75);
  uint64_t v78 = (char *)&v156 - v77;
  __chkstk_darwin(v76, v79);
  uint64_t v81 = (char *)&v156 - v80;
  uint64_t v82 = *a1;
  uint64_t v83 = a1[1];
  v193 = a2;
  v194 = a1;
  if (v82 == *a2 && v83 == a2[1] || (char v84 = 0, (sub_100222A30() & 1) != 0))
  {
    if (v194[2] == v193[2] && v194[3] == v193[3] || (char v84 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
      sub_10000D830((uint64_t)v194 + *(int *)(updated + 36), (uint64_t)v81, &qword_100299F18);
      v156 = (int *)updated;
      sub_10000D830((uint64_t)v193 + *(int *)(updated + 36), (uint64_t)v78, &qword_100299F18);
      uint64_t v86 = (uint64_t)&v69[*(int *)(v66 + 48)];
      sub_10000D830((uint64_t)v81, (uint64_t)v69, &qword_100299F18);
      sub_10000D830((uint64_t)v78, v86, &qword_100299F18);
      char v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
      if (v87((uint64_t)v69, 1, v61) == 1)
      {
        sub_10004015C((uint64_t)v78, &qword_100299F18);
        sub_10004015C((uint64_t)v81, &qword_100299F18);
        if (v87(v86, 1, v61) == 1)
        {
          sub_10004015C((uint64_t)v69, &qword_100299F18);
          goto LABEL_10;
        }
      }
      else
      {
        sub_10000D830((uint64_t)v69, (uint64_t)v74, &qword_100299F18);
        if (v87(v86, 1, v61) != 1)
        {
          sub_1000D736C(v86, (uint64_t)v65, type metadata accessor for SignedPeerStableInfo);
          if ((sub_10003FE7C(*(void *)v74, *((void *)v74 + 1), *(void *)v65, *((void *)v65 + 1)) & 1) == 0
            || (sub_10003FE7C(*((void *)v74 + 2), *((void *)v74 + 3), *((void *)v65 + 2), *((void *)v65 + 3)) & 1) == 0)
          {
            uint64_t v111 = type metadata accessor for SignedPeerStableInfo;
            sub_1000D7E78((uint64_t)v65, type metadata accessor for SignedPeerStableInfo);
            uint64_t v112 = &qword_100299F18;
            sub_10004015C((uint64_t)v78, &qword_100299F18);
            sub_10004015C((uint64_t)v81, &qword_100299F18);
            uint64_t v113 = (uint64_t)v74;
            goto LABEL_34;
          }
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v110 = sub_100222250();
          sub_1000D7E78((uint64_t)v65, type metadata accessor for SignedPeerStableInfo);
          sub_10004015C((uint64_t)v78, &qword_100299F18);
          sub_10004015C((uint64_t)v81, &qword_100299F18);
          sub_1000D7E78((uint64_t)v74, type metadata accessor for SignedPeerStableInfo);
          sub_10004015C((uint64_t)v69, &qword_100299F18);
          if ((v110 & 1) == 0) {
            goto LABEL_37;
          }
LABEL_10:
          uint64_t v88 = v156;
          uint64_t v89 = v191;
          sub_10000D830((uint64_t)v194 + v156[10], v191, &qword_10029ECA0);
          uint64_t v90 = v193;
          uint64_t v91 = v190;
          sub_10000D830((uint64_t)v193 + v88[10], v190, &qword_10029ECA0);
          uint64_t v69 = v192;
          uint64_t v92 = (uint64_t)&v192[*(int *)(v184 + 48)];
          sub_10000D830(v89, (uint64_t)v192, &qword_10029ECA0);
          sub_10000D830(v91, v92, &qword_10029ECA0);
          uint64_t v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v185 + 48);
          uint64_t v94 = v188;
          if (v93((uint64_t)v69, 1, v188) == 1)
          {
            sub_10004015C(v91, &qword_10029ECA0);
            sub_10004015C(v89, &qword_10029ECA0);
            int v95 = v93(v92, 1, v94);
            uint64_t v96 = v182;
            uint64_t v97 = v183;
            uint64_t v99 = v186;
            uint64_t v98 = v187;
            if (v95 == 1)
            {
              sub_10004015C((uint64_t)v192, &qword_10029ECA0);
              goto LABEL_13;
            }
            goto LABEL_28;
          }
          uint64_t v114 = v181;
          sub_10000D830((uint64_t)v69, v181, &qword_10029ECA0);
          int v115 = v93(v92, 1, v94);
          uint64_t v97 = v183;
          uint64_t v99 = v186;
          uint64_t v98 = v187;
          if (v115 == 1)
          {
            sub_10004015C(v190, &qword_10029ECA0);
            sub_10004015C(v191, &qword_10029ECA0);
            sub_1000D7E78(v114, type metadata accessor for SignedPeerDynamicInfo);
LABEL_28:
            uint64_t v108 = &qword_10029E448;
            uint64_t v109 = (uint64_t)v192;
            goto LABEL_36;
          }
          uint64_t v116 = v92;
          uint64_t v117 = v180;
          sub_1000D736C(v116, v180, type metadata accessor for SignedPeerDynamicInfo);
          if ((sub_10003FE7C(*(void *)v114, *(void *)(v114 + 8), *(void *)v117, *(void *)(v117 + 8)) & 1) != 0
            && (sub_10003FE7C(*(void *)(v114 + 16), *(void *)(v114 + 24), *(void *)(v117 + 16), *(void *)(v117 + 24)) & 1) != 0)
          {
            uint64_t v188 = v114 + *(int *)(v188 + 24);
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            LODWORD(v188) = sub_100222250();
            sub_1000D7E78(v117, type metadata accessor for SignedPeerDynamicInfo);
            uint64_t v118 = (uint64_t)v69;
            sub_10004015C(v190, &qword_10029ECA0);
            sub_10004015C(v191, &qword_10029ECA0);
            sub_1000D7E78(v114, type metadata accessor for SignedPeerDynamicInfo);
            uint64_t v96 = v182;
            sub_10004015C(v118, &qword_10029ECA0);
            if ((v188 & 1) == 0) {
              goto LABEL_37;
            }
LABEL_13:
            uint64_t v100 = v194;
            int v101 = v90;
            if ((sub_10003DDD0(v194[4], v90[4]) & 1) == 0 || (sub_10003DE24(v100[5], v90[5]) & 1) == 0) {
              goto LABEL_37;
            }
            uint64_t v102 = v156;
            sub_10000D830((uint64_t)v100 + v156[11], v98, &qword_10029ED20);
            sub_10000D830((uint64_t)v90 + v102[11], v99, &qword_10029ED20);
            uint64_t v103 = v179;
            uint64_t v104 = v179 + *(int *)(v177 + 48);
            sub_10000D830(v98, v179, &qword_10029ED20);
            uint64_t v105 = v103;
            sub_10000D830(v99, v104, &qword_10029ED20);
            v106 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
            uint64_t v107 = v178;
            if (v106(v105, 1, v178) == 1)
            {
              sub_10004015C(v99, &qword_10029ED20);
              uint64_t v105 = v179;
              sub_10004015C(v98, &qword_10029ED20);
              if (v106(v104, 1, v107) == 1)
              {
                sub_10004015C(v105, &qword_10029ED20);
                goto LABEL_43;
              }
            }
            else
            {
              uint64_t v121 = v173;
              sub_10000D830(v105, (uint64_t)v173, &qword_10029ED20);
              if (v106(v104, 1, v107) != 1)
              {
                v122 = v170;
                sub_1000D736C(v104, (uint64_t)v170, type metadata accessor for IdmsTrustedDevicesVersion);
                char v123 = _s18TrustedPeersHelper04IdmsA14DevicesVersionV2eeoiySbAC_ACtFZ_0(v121, v122);
                sub_1000D7E78((uint64_t)v122, type metadata accessor for IdmsTrustedDevicesVersion);
                sub_10004015C(v186, &qword_10029ED20);
                sub_10004015C(v187, &qword_10029ED20);
                sub_1000D7E78((uint64_t)v121, type metadata accessor for IdmsTrustedDevicesVersion);
                sub_10004015C(v105, &qword_10029ED20);
                if ((v123 & 1) == 0) {
                  goto LABEL_37;
                }
LABEL_43:
                uint64_t v124 = v156;
                uint64_t v125 = v175;
                sub_10000D830((uint64_t)v194 + v156[12], v175, &qword_10029F000);
                uint64_t v126 = (uint64_t)v101 + v124[12];
                uint64_t v127 = v174;
                sub_10000D830(v126, v174, &qword_10029F000);
                uint64_t v128 = v176;
                uint64_t v129 = v176 + *(int *)(v171 + 48);
                sub_10000D830(v125, v176, &qword_10029F000);
                sub_10000D830(v127, v129, &qword_10029F000);
                v130 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v172 + 48);
                if (v130(v128, 1, v96) == 1)
                {
                  sub_10004015C(v127, &qword_10029F000);
                  uint64_t v128 = v176;
                  sub_10004015C(v125, &qword_10029F000);
                  int v131 = v130(v129, 1, v96);
                  uint64_t v132 = v189;
                  if (v131 == 1)
                  {
                    sub_10004015C(v128, &qword_10029F000);
LABEL_50:
                    uint64_t v137 = v156;
                    uint64_t v138 = v167;
                    sub_10000D830((uint64_t)v194 + v156[13], v167, &qword_100299F50);
                    uint64_t v139 = v168;
                    sub_10000D830((uint64_t)v101 + v137[13], v168, &qword_100299F50);
                    uint64_t v140 = v169;
                    uint64_t v141 = v169 + *(int *)(v163 + 48);
                    sub_10000D830(v138, v169, &qword_100299F50);
                    uint64_t v142 = v140;
                    sub_10000D830(v139, v141, &qword_100299F50);
                    uint64_t v143 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
                    uint64_t v144 = v165;
                    if (v143(v142, 1, v165) == 1)
                    {
                      sub_10004015C(v139, &qword_100299F50);
                      uint64_t v142 = v169;
                      sub_10004015C(v138, &qword_100299F50);
                      if (v143(v141, 1, v144) == 1)
                      {
                        sub_10004015C(v142, &qword_100299F50);
LABEL_58:
                        uint64_t v149 = v156;
                        uint64_t v150 = v160;
                        uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
                        uint64_t v152 = v158;
                        v151(v158, (char *)v194 + v156[8], v132);
                        v153 = (char *)v101 + v149[8];
                        v154 = v159;
                        v151(v159, v153, v132);
                        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                        char v84 = sub_100222250();
                        v155 = *(void (**)(char *, uint64_t))(v150 + 8);
                        v155(v154, v132);
                        v155(v152, v132);
                        return v84 & 1;
                      }
                      goto LABEL_55;
                    }
                    v145 = v161;
                    sub_10000D830(v142, (uint64_t)v161, &qword_100299F50);
                    if (v143(v141, 1, v144) == 1)
                    {
                      sub_10004015C(v168, &qword_100299F50);
                      sub_10004015C(v167, &qword_100299F50);
                      sub_1000D7E78((uint64_t)v145, type metadata accessor for AccountInfo);
LABEL_55:
                      uint64_t v108 = &qword_10029E3E0;
                      uint64_t v109 = v142;
                      goto LABEL_36;
                    }
                    uint64_t v146 = v157;
                    sub_1000D736C(v141, (uint64_t)v157, type metadata accessor for AccountInfo);
                    uint64_t v147 = v168;
                    if (*v145 == *v146)
                    {
                      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                      char v148 = sub_100222250();
                      sub_1000D7E78((uint64_t)v146, type metadata accessor for AccountInfo);
                      sub_10004015C(v147, &qword_100299F50);
                      sub_10004015C(v167, &qword_100299F50);
                      sub_1000D7E78((uint64_t)v145, type metadata accessor for AccountInfo);
                      sub_10004015C(v169, &qword_100299F50);
                      if (v148) {
                        goto LABEL_58;
                      }
                      goto LABEL_37;
                    }
                    sub_1000D7E78((uint64_t)v146, type metadata accessor for AccountInfo);
                    uint64_t v112 = &qword_100299F50;
                    sub_10004015C(v147, &qword_100299F50);
                    sub_10004015C(v167, &qword_100299F50);
                    sub_1000D7E78((uint64_t)v145, type metadata accessor for AccountInfo);
                    uint64_t v109 = v169;
                    goto LABEL_35;
                  }
                }
                else
                {
                  uint64_t v133 = v166;
                  sub_10000D830(v128, (uint64_t)v166, &qword_10029F000);
                  int v134 = v130(v129, 1, v96);
                  uint64_t v132 = v189;
                  if (v134 != 1)
                  {
                    v135 = v162;
                    sub_1000D736C(v129, (uint64_t)v162, type metadata accessor for Metrics);
                    char v136 = sub_1000CCF3C(v133, v135, type metadata accessor for Metrics);
                    sub_1000D7E78((uint64_t)v135, type metadata accessor for Metrics);
                    sub_10004015C(v174, &qword_10029F000);
                    sub_10004015C(v175, &qword_10029F000);
                    sub_1000D7E78((uint64_t)v133, type metadata accessor for Metrics);
                    sub_10004015C(v128, &qword_10029F000);
                    if ((v136 & 1) == 0) {
                      goto LABEL_37;
                    }
                    goto LABEL_50;
                  }
                  sub_10004015C(v174, &qword_10029F000);
                  sub_10004015C(v175, &qword_10029F000);
                  sub_1000D7E78((uint64_t)v133, type metadata accessor for Metrics);
                }
                uint64_t v108 = &qword_10029E3E8;
                uint64_t v109 = v128;
                goto LABEL_36;
              }
              sub_10004015C(v186, &qword_10029ED20);
              sub_10004015C(v187, &qword_10029ED20);
              sub_1000D7E78((uint64_t)v121, type metadata accessor for IdmsTrustedDevicesVersion);
            }
            uint64_t v108 = &qword_10029E490;
            uint64_t v109 = v105;
            goto LABEL_36;
          }
          uint64_t v119 = v114;
          uint64_t v111 = type metadata accessor for SignedPeerDynamicInfo;
          sub_1000D7E78(v117, type metadata accessor for SignedPeerDynamicInfo);
          uint64_t v112 = &qword_10029ECA0;
          sub_10004015C(v190, &qword_10029ECA0);
          sub_10004015C(v191, &qword_10029ECA0);
          uint64_t v113 = v119;
LABEL_34:
          sub_1000D7E78(v113, v111);
          uint64_t v109 = (uint64_t)v69;
LABEL_35:
          uint64_t v108 = v112;
          goto LABEL_36;
        }
        sub_10004015C((uint64_t)v78, &qword_100299F18);
        sub_10004015C((uint64_t)v81, &qword_100299F18);
        sub_1000D7E78((uint64_t)v74, type metadata accessor for SignedPeerStableInfo);
      }
      uint64_t v108 = &qword_10029E450;
      uint64_t v109 = (uint64_t)v69;
LABEL_36:
      sub_10004015C(v109, v108);
LABEL_37:
      char v84 = 0;
    }
  }
  return v84 & 1;
}

uint64_t _s18TrustedPeersHelper18PasscodeGenerationV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*(void *)a1 == *(void *)a2)
  {
    uint64_t v13 = type metadata accessor for PasscodeGeneration(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, &a1[*(int *)(v13 + 20)], v4);
    v14(v9, &a2[*(int *)(v13 + 20)], v4);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_100222250();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s18TrustedPeersHelper17PolicyDocumentKeyV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v19 - v11;
  if (*(void *)a1 == *(void *)a2)
  {
    BOOL v13 = *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
    if (v13 || (char v14 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v15 = type metadata accessor for PolicyDocumentKey(0);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v12, &a1[*(int *)(v15 + 24)], v4);
      v16(v9, &a2[*(int *)(v15 + 24)], v4);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v14 = sub_100222250();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v9, v4);
      v17(v12, v4);
    }
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1000CF4A4(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for EstablishResponse);
}

uint64_t sub_1000CF4BC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v59 = a3;
  uint64_t v5 = sub_100221DF0();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  uint64_t v7 = __chkstk_darwin(v5, v6);
  uint64_t v54 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v53 = (char *)&v52 - v10;
  uint64_t v11 = type metadata accessor for Changes(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v57 = (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000046DC(&qword_10029E440);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  uint64_t v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v22, v25);
  uint64_t v28 = (char *)&v52 - v27;
  __chkstk_darwin(v26, v29);
  uint64_t v31 = (char *)&v52 - v30;
  uint64_t v32 = ((uint64_t (*)(void))v59)(0);
  uint64_t v33 = *(int *)(v32 + 24);
  uint64_t v58 = a1;
  uint64_t v34 = (uint64_t)a1 + v33;
  uint64_t v35 = v32;
  sub_10000D830(v34, (uint64_t)v31, (uint64_t *)&unk_10029EC90);
  uint64_t v36 = *(int *)(v35 + 24);
  uint64_t v59 = a2;
  sub_10000D830((uint64_t)a2 + v36, (uint64_t)v28, (uint64_t *)&unk_10029EC90);
  uint64_t v37 = (uint64_t)&v19[*(int *)(v16 + 56)];
  sub_10000D830((uint64_t)v31, (uint64_t)v19, (uint64_t *)&unk_10029EC90);
  sub_10000D830((uint64_t)v28, v37, (uint64_t *)&unk_10029EC90);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v38((uint64_t)v19, 1, v11) == 1)
  {
    sub_10004015C((uint64_t)v28, (uint64_t *)&unk_10029EC90);
    sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EC90);
    if (v38(v37, 1, v11) == 1)
    {
      sub_10004015C((uint64_t)v19, (uint64_t *)&unk_10029EC90);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_10000D830((uint64_t)v19, (uint64_t)v24, (uint64_t *)&unk_10029EC90);
  if (v38(v37, 1, v11) == 1)
  {
    sub_10004015C((uint64_t)v28, (uint64_t *)&unk_10029EC90);
    sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EC90);
    sub_1000D7E78((uint64_t)v24, type metadata accessor for Changes);
LABEL_6:
    sub_10004015C((uint64_t)v19, &qword_10029E440);
LABEL_10:
    char v49 = 0;
    return v49 & 1;
  }
  uint64_t v39 = v57;
  sub_1000D736C(v37, v57, type metadata accessor for Changes);
  char v40 = _s18TrustedPeersHelper7ChangesV2eeoiySbAC_ACtFZ_0((uint64_t)v24, v39);
  sub_1000D7E78(v39, type metadata accessor for Changes);
  sub_10004015C((uint64_t)v28, (uint64_t *)&unk_10029EC90);
  sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EC90);
  sub_1000D7E78((uint64_t)v24, type metadata accessor for Changes);
  sub_10004015C((uint64_t)v19, (uint64_t *)&unk_10029EC90);
  if ((v40 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v41 = v58;
  uint64_t v42 = v59;
  if ((sub_10003BD90(*v58, *v59) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v44 = v55;
  uint64_t v43 = v56;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v46 = v53;
  v45(v53, (char *)v41 + *(int *)(v35 + 20), v56);
  uint64_t v47 = (char *)v42 + *(int *)(v35 + 20);
  uint64_t v48 = v54;
  v45(v54, v47, v43);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v49 = sub_100222250();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v44 + 8);
  v50(v48, v43);
  v50(v46, v43);
  return v49 & 1;
}

uint64_t _s18TrustedPeersHelper17EscrowInformationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v90 = a1;
  uint64_t v91 = a2;
  uint64_t v2 = sub_100221DF0();
  uint64_t v79 = *(void *)(v2 - 8);
  uint64_t v80 = v2;
  uint64_t v4 = __chkstk_darwin(v2, v3);
  uint64_t v78 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  uint64_t v77 = (char *)&v76 - v7;
  uint64_t v8 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v85 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v81 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000046DC(&qword_10029E430);
  __chkstk_darwin(v83, v11);
  uint64_t v86 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_10029A098);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v82 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v88 = (uint64_t)&v76 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v89 = (uint64_t)&v76 - v21;
  uint64_t v22 = sub_100221DC0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000046DC(&qword_100299638);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v34 = __chkstk_darwin(v32 - 8, v33);
  uint64_t v36 = (char *)&v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v34, v37);
  char v40 = (char *)&v76 - v39;
  __chkstk_darwin(v38, v41);
  uint64_t v43 = (char *)&v76 - v42;
  uint64_t v44 = type metadata accessor for EscrowInformation(0);
  sub_10000D830((uint64_t)v90 + *(int *)(v44 + 48), (uint64_t)v43, (uint64_t *)&unk_10029ED30);
  uint64_t v87 = v44;
  sub_10000D830((uint64_t)v91 + *(int *)(v44 + 48), (uint64_t)v40, (uint64_t *)&unk_10029ED30);
  uint64_t v45 = (uint64_t)&v31[*(int *)(v28 + 56)];
  sub_10000D830((uint64_t)v43, (uint64_t)v31, (uint64_t *)&unk_10029ED30);
  sub_10000D830((uint64_t)v40, v45, (uint64_t *)&unk_10029ED30);
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v46((uint64_t)v31, 1, v22) == 1)
  {
    sub_10004015C((uint64_t)v40, (uint64_t *)&unk_10029ED30);
    sub_10004015C((uint64_t)v43, (uint64_t *)&unk_10029ED30);
    if (v46(v45, 1, v22) == 1)
    {
      sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029ED30);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v47 = &qword_100299638;
LABEL_7:
    sub_10004015C((uint64_t)v31, v47);
    goto LABEL_44;
  }
  sub_10000D830((uint64_t)v31, (uint64_t)v36, (uint64_t *)&unk_10029ED30);
  if (v46(v45, 1, v22) == 1)
  {
    sub_10004015C((uint64_t)v40, (uint64_t *)&unk_10029ED30);
    sub_10004015C((uint64_t)v43, (uint64_t *)&unk_10029ED30);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v36, v22);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v26, v45, v22);
  sub_1000D8CA4(&qword_100299640, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  char v48 = sub_100222250();
  char v49 = *(void (**)(char *, uint64_t))(v23 + 8);
  v49(v26, v22);
  sub_10004015C((uint64_t)v40, (uint64_t *)&unk_10029ED30);
  sub_10004015C((uint64_t)v43, (uint64_t *)&unk_10029ED30);
  v49(v36, v22);
  sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029ED30);
  if ((v48 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_9:
  uint64_t v50 = v90;
  uint64_t v51 = v91;
  if (*v90 != *v91) {
    goto LABEL_44;
  }
  uint64_t v52 = v87;
  uint64_t v53 = v89;
  sub_10000D830((uint64_t)v90 + *(int *)(v87 + 52), v89, &qword_10029A098);
  uint64_t v54 = v88;
  sub_10000D830((uint64_t)v51 + *(int *)(v52 + 52), v88, &qword_10029A098);
  uint64_t v31 = v86;
  uint64_t v55 = (uint64_t)&v86[*(int *)(v83 + 48)];
  sub_10000D830(v53, (uint64_t)v86, &qword_10029A098);
  sub_10000D830(v54, v55, &qword_10029A098);
  uint64_t v56 = v85;
  uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  if (v57((uint64_t)v31, 1, v85) == 1)
  {
    sub_10004015C(v54, &qword_10029A098);
    sub_10004015C(v53, &qword_10029A098);
    if (v57(v55, 1, v56) == 1)
    {
      sub_10004015C((uint64_t)v31, &qword_10029A098);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  uint64_t v58 = v82;
  sub_10000D830((uint64_t)v31, v82, &qword_10029A098);
  if (v57(v55, 1, v56) == 1)
  {
    sub_10004015C(v88, &qword_10029A098);
    sub_10004015C(v89, &qword_10029A098);
    sub_1000D7E78(v58, type metadata accessor for EscrowInformation.Metadata);
LABEL_15:
    uint64_t v47 = &qword_10029E430;
    goto LABEL_7;
  }
  uint64_t v59 = v81;
  sub_1000D736C(v55, v81, type metadata accessor for EscrowInformation.Metadata);
  char v60 = sub_1000D70D0(v58, v59, type metadata accessor for EscrowInformation.Metadata, (uint64_t (*)(uint64_t, uint64_t))sub_1000BBA28);
  sub_1000D7E78(v59, type metadata accessor for EscrowInformation.Metadata);
  sub_10004015C(v88, &qword_10029A098);
  sub_10004015C(v89, &qword_10029A098);
  sub_1000D7E78(v58, type metadata accessor for EscrowInformation.Metadata);
  sub_10004015C((uint64_t)v31, &qword_10029A098);
  if ((v60 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_17:
  if (v50[1] != v51[1] || v50[2] != v51[2])
  {
    char v61 = 0;
    if ((sub_100222A30() & 1) == 0) {
      return v61 & 1;
    }
  }
  if (v50[3] != v51[3]) {
    goto LABEL_44;
  }
  uint64_t v62 = v50[4];
  uint64_t v63 = v51[4];
  if (*((unsigned char *)v50 + 40)) {
    uint64_t v62 = v62 != 0;
  }
  if (*((unsigned char *)v51 + 40) == 1)
  {
    if (v63)
    {
      if (v62 != 1) {
        goto LABEL_44;
      }
    }
    else if (v62)
    {
      goto LABEL_44;
    }
  }
  else if (v62 != v63)
  {
    goto LABEL_44;
  }
  uint64_t v64 = v50[6];
  uint64_t v65 = v51[6];
  if (*((unsigned char *)v51 + 56) != 1)
  {
    if (v64 == v65) {
      goto LABEL_36;
    }
    goto LABEL_44;
  }
  if (!v65)
  {
    if (!v64) {
      goto LABEL_36;
    }
    goto LABEL_44;
  }
  if (v65 == 1)
  {
    if (v64 == 1) {
      goto LABEL_36;
    }
LABEL_44:
    char v61 = 0;
    return v61 & 1;
  }
  if (v64 != 2) {
    goto LABEL_44;
  }
LABEL_36:
  if (v50[8] == v51[8] && v50[9] == v51[9] || (char v61 = 0, (sub_100222A30() & 1) != 0))
  {
    if (v50[10] == v51[10] && v50[11] == v51[11] || (char v61 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v66 = v87;
      uint64_t v67 = (char *)v50 + *(int *)(v87 + 44);
      uint64_t v69 = v79;
      uint64_t v68 = v80;
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
      uint64_t v71 = v77;
      v70(v77, v67, v80);
      uint64_t v72 = (char *)v51 + *(int *)(v66 + 44);
      uint64_t v73 = v78;
      v70(v78, v72, v68);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v61 = sub_100222250();
      uint64_t v74 = *(void (**)(char *, uint64_t))(v69 + 8);
      v74(v73, v68);
      v74(v71, v68);
    }
  }
  return v61 & 1;
}

uint64_t _s18TrustedPeersHelper17EscrowInformationV8MetadataV06ClientF0V2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v56 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v55 = (char *)&v53 - v9;
  uint64_t v10 = sub_100221DC0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  char v61 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299638);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v62 = (uint64_t)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (char *)&v53 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v53 - v28;
  uint64_t v30 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  uint64_t v31 = *(int *)(v30 + 64);
  uint64_t v59 = a1;
  sub_10000D830((uint64_t)a1 + v31, (uint64_t)v29, (uint64_t *)&unk_10029ED30);
  uint64_t v54 = v30;
  uint64_t v32 = *(int *)(v30 + 64);
  uint64_t v33 = v11;
  char v60 = a2;
  sub_10000D830((uint64_t)a2 + v32, (uint64_t)v26, (uint64_t *)&unk_10029ED30);
  uint64_t v34 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10000D830((uint64_t)v29, (uint64_t)v18, (uint64_t *)&unk_10029ED30);
  sub_10000D830((uint64_t)v26, v34, (uint64_t *)&unk_10029ED30);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v35((uint64_t)v18, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
    sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
    if (v35(v34, 1, v10) == 1)
    {
      sub_10004015C((uint64_t)v18, (uint64_t *)&unk_10029ED30);
      goto LABEL_8;
    }
LABEL_6:
    sub_10004015C((uint64_t)v18, &qword_100299638);
    goto LABEL_34;
  }
  uint64_t v36 = v61;
  uint64_t v37 = v62;
  sub_10000D830((uint64_t)v18, v62, (uint64_t *)&unk_10029ED30);
  if (v35(v34, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
    sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v10);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v36, v34, v10);
  sub_1000D8CA4(&qword_100299640, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  char v38 = sub_100222250();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  v39(v36, v10);
  sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
  sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
  v39((char *)v37, v10);
  sub_10004015C((uint64_t)v18, (uint64_t *)&unk_10029ED30);
  if ((v38 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_8:
  char v40 = v59;
  uint64_t v41 = v60;
  if (*v59 != *v60 || v59[1] != v60[1] || v59[2] != v60[2]) {
    goto LABEL_34;
  }
  if (v59[3] == v60[3] && v59[4] == v60[4] || (char v42 = 0, (sub_100222A30() & 1) != 0))
  {
    if (v40[5] == v41[5] && v40[6] == v41[6] || (char v42 = 0, (sub_100222A30() & 1) != 0))
    {
      if (v40[7] == v41[7] && v40[8] == v41[8] || (char v42 = 0, (sub_100222A30() & 1) != 0))
      {
        if (v40[9] == v41[9] && v40[10] == v41[10] || (char v42 = 0, (sub_100222A30() & 1) != 0))
        {
          if (v40[11] == v41[11] && v40[12] == v41[12] || (char v42 = 0, (sub_100222A30() & 1) != 0))
          {
            if (v40[13] == v41[13] && v40[14] == v41[14] || (char v42 = 0, (sub_100222A30() & 1) != 0))
            {
              if (v40[15] == v41[15] && v40[16] == v41[16] || (char v42 = 0, (sub_100222A30() & 1) != 0))
              {
                if (v40[17] == v41[17])
                {
                  uint64_t v44 = v54;
                  uint64_t v43 = v55;
                  uint64_t v45 = (char *)v40 + *(int *)(v54 + 60);
                  uint64_t v47 = v57;
                  uint64_t v46 = v58;
                  char v48 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
                  v48(v55, v45, v58);
                  char v49 = (char *)v41 + *(int *)(v44 + 60);
                  uint64_t v50 = v56;
                  v48(v56, v49, v46);
                  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                  char v42 = sub_100222250();
                  uint64_t v51 = *(void (**)(char *, uint64_t))(v47 + 8);
                  v51(v50, v46);
                  v51(v43, v46);
                  return v42 & 1;
                }
LABEL_34:
                char v42 = 0;
              }
            }
          }
        }
      }
    }
  }
  return v42 & 1;
}

uint64_t _s18TrustedPeersHelper17DirectPCSIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v88 = a2;
  uint64_t v3 = sub_100221DF0();
  uint64_t v77 = *(void *)(v3 - 8);
  uint64_t v78 = v3;
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v76 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v7);
  uint64_t v75 = &v72[-v8];
  uint64_t v9 = type metadata accessor for PCSService(0);
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v84 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v74 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = sub_1000046DC(&qword_10029E410);
  __chkstk_darwin(v81, v12);
  uint64_t v85 = &v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1000046DC(&qword_1002997F8);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v79 = &v72[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v87 = &v72[-v20];
  __chkstk_darwin(v19, v21);
  uint64_t v82 = &v72[-v22];
  uint64_t v23 = sub_100221D50();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v80 = &v72[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = sub_1000046DC(&qword_10029E408);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27, v29);
  uint64_t v31 = &v72[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = sub_1000046DC(&qword_1002997E0);
  uint64_t v34 = __chkstk_darwin(v32 - 8, v33);
  uint64_t v36 = &v72[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = __chkstk_darwin(v34, v37);
  char v40 = &v72[-v39];
  __chkstk_darwin(v38, v41);
  uint64_t v43 = &v72[-v42];
  uint64_t v44 = type metadata accessor for DirectPCSIdentity(0);
  uint64_t v45 = *(int *)(v44 + 20);
  uint64_t v86 = a1;
  sub_10000D830(a1 + v45, (uint64_t)v43, &qword_1002997E0);
  sub_10000D830(v88 + *(int *)(v44 + 20), (uint64_t)v40, &qword_1002997E0);
  uint64_t v46 = (uint64_t)&v31[*(int *)(v28 + 56)];
  sub_10000D830((uint64_t)v43, (uint64_t)v31, &qword_1002997E0);
  uint64_t v47 = v24;
  sub_10000D830((uint64_t)v40, v46, &qword_1002997E0);
  char v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v48((uint64_t)v31, 1, v23) != 1)
  {
    sub_10000D830((uint64_t)v31, (uint64_t)v36, &qword_1002997E0);
    if (v48(v46, 1, v23) != 1)
    {
      uint64_t v51 = v80;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v47 + 32))(v80, v46, v23);
      sub_1000D8CA4(&qword_100299630, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
      int v73 = sub_100222250();
      uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v47 + 8);
      v52(v51, v23);
      sub_10004015C((uint64_t)v40, &qword_1002997E0);
      sub_10004015C((uint64_t)v43, &qword_1002997E0);
      v52(v36, v23);
      sub_10004015C((uint64_t)v31, &qword_1002997E0);
      if ((v73 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    sub_10004015C((uint64_t)v40, &qword_1002997E0);
    sub_10004015C((uint64_t)v43, &qword_1002997E0);
    (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v36, v23);
LABEL_6:
    char v49 = &qword_10029E408;
    uint64_t v50 = (uint64_t)v31;
LABEL_14:
    sub_10004015C(v50, v49);
    goto LABEL_15;
  }
  sub_10004015C((uint64_t)v40, &qword_1002997E0);
  sub_10004015C((uint64_t)v43, &qword_1002997E0);
  if (v48(v46, 1, v23) != 1) {
    goto LABEL_6;
  }
  sub_10004015C((uint64_t)v31, &qword_1002997E0);
LABEL_8:
  uint64_t v53 = v86;
  uint64_t v54 = v82;
  sub_10000D830(v86 + *(int *)(v44 + 24), (uint64_t)v82, &qword_1002997F8);
  uint64_t v56 = v87;
  uint64_t v55 = v88;
  sub_10000D830(v88 + *(int *)(v44 + 24), (uint64_t)v87, &qword_1002997F8);
  uint64_t v57 = v85;
  uint64_t v58 = (uint64_t)&v85[*(int *)(v81 + 48)];
  sub_10000D830((uint64_t)v54, (uint64_t)v85, &qword_1002997F8);
  sub_10000D830((uint64_t)v56, v58, &qword_1002997F8);
  uint64_t v59 = v84;
  char v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  if (v60((uint64_t)v57, 1, v84) == 1)
  {
    sub_10004015C((uint64_t)v56, &qword_1002997F8);
    sub_10004015C((uint64_t)v54, &qword_1002997F8);
    if (v60(v58, 1, v59) == 1)
    {
      sub_10004015C((uint64_t)v57, &qword_1002997F8);
LABEL_18:
      uint64_t v67 = v77;
      uint64_t v66 = v78;
      uint64_t v68 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v77 + 16);
      uint64_t v69 = v75;
      v68(v75, v53, v78);
      uint64_t v70 = v76;
      v68(v76, v55, v66);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v62 = sub_100222250();
      uint64_t v71 = *(void (**)(unsigned char *, uint64_t))(v67 + 8);
      v71(v70, v66);
      v71(v69, v66);
      return v62 & 1;
    }
    goto LABEL_13;
  }
  char v61 = v79;
  sub_10000D830((uint64_t)v57, (uint64_t)v79, &qword_1002997F8);
  if (v60(v58, 1, v59) == 1)
  {
    sub_10004015C((uint64_t)v87, &qword_1002997F8);
    sub_10004015C((uint64_t)v54, &qword_1002997F8);
    sub_1000D7E78((uint64_t)v61, type metadata accessor for PCSService);
LABEL_13:
    char v49 = &qword_10029E410;
    uint64_t v50 = (uint64_t)v57;
    goto LABEL_14;
  }
  uint64_t v64 = v74;
  sub_1000D736C(v58, (uint64_t)v74, type metadata accessor for PCSService);
  char v65 = _s18TrustedPeersHelper10PCSServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v61, (uint64_t)v64);
  sub_1000D7E78((uint64_t)v64, type metadata accessor for PCSService);
  sub_10004015C((uint64_t)v87, &qword_1002997F8);
  sub_10004015C((uint64_t)v54, &qword_1002997F8);
  sub_1000D7E78((uint64_t)v61, type metadata accessor for PCSService);
  sub_10004015C((uint64_t)v57, &qword_1002997F8);
  if (v65) {
    goto LABEL_18;
  }
LABEL_15:
  char v62 = 0;
  return v62 & 1;
}

uint64_t _s18TrustedPeersHelper16SupportAppDeviceV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0 = sub_100221DF0();
  uint64_t v75 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0, v1);
  uint64_t v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2, v5);
  uint64_t v7 = (char *)&v66 - v6;
  uint64_t v8 = sub_100221DC0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299638);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v19 = __chkstk_darwin(v17 - 8, v18);
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v66 - v22;
  __chkstk_darwin(v21, v24);
  uint64_t v29 = (char *)&v66 - v28;
  if (*v26 != *v25) {
    goto LABEL_20;
  }
  uint64_t v72 = v12;
  uint64_t v73 = v9;
  uint64_t v74 = v16;
  uint64_t v70 = v7;
  uint64_t v71 = v4;
  if (v26[1] != v25[1] || v26[2] != v25[2]) {
    goto LABEL_20;
  }
  uint64_t v30 = v27;
  uint64_t v69 = v0;
  if (*((void *)v26 + 1) != *((void *)v25 + 1) || *((void *)v26 + 2) != *((void *)v25 + 2))
  {
    uint64_t v31 = v25;
    uint64_t v32 = v26;
    char v33 = sub_100222A30();
    uint64_t v26 = v32;
    uint64_t v25 = v31;
    char v34 = 0;
    if ((v33 & 1) == 0) {
      return v34 & 1;
    }
  }
  uint64_t v35 = v25;
  uint64_t v36 = v26;
  if ((sub_10003E094(*((void *)v26 + 3), *((void *)v25 + 3)) & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v37 = type metadata accessor for SupportAppDevice(0);
  uint64_t v38 = *(int *)(v37 + 48);
  uint64_t v68 = v36;
  sub_10000D830((uint64_t)&v36[v38], (uint64_t)v29, (uint64_t *)&unk_10029ED30);
  uint64_t v66 = v37;
  uint64_t v67 = v35;
  sub_10000D830((uint64_t)&v35[*(int *)(v37 + 48)], (uint64_t)v23, (uint64_t *)&unk_10029ED30);
  uint64_t v39 = (uint64_t)v74;
  uint64_t v40 = (uint64_t)&v74[*(int *)(v13 + 48)];
  sub_10000D830((uint64_t)v29, (uint64_t)v74, (uint64_t *)&unk_10029ED30);
  uint64_t v41 = v40;
  sub_10000D830((uint64_t)v23, v40, (uint64_t *)&unk_10029ED30);
  uint64_t v42 = v73;
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  uint64_t v44 = v8;
  if (v43(v39, 1, v8) != 1)
  {
    sub_10000D830(v39, v30, (uint64_t *)&unk_10029ED30);
    int v47 = v43(v41, 1, v8);
    uint64_t v46 = v39;
    if (v47 == 1)
    {
      sub_10004015C((uint64_t)v23, (uint64_t *)&unk_10029ED30);
      sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v30, v44);
      goto LABEL_13;
    }
    char v48 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v72, v41, v44);
    sub_1000D8CA4(&qword_100299640, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
    char v49 = sub_100222250();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v42 + 8);
    v50(v48, v44);
    sub_10004015C((uint64_t)v23, (uint64_t *)&unk_10029ED30);
    sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
    v50((char *)v30, v44);
    sub_10004015C(v46, (uint64_t *)&unk_10029ED30);
    if (v49) {
      goto LABEL_15;
    }
LABEL_20:
    char v34 = 0;
    return v34 & 1;
  }
  sub_10004015C((uint64_t)v23, (uint64_t *)&unk_10029ED30);
  sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
  int v45 = v43(v41, 1, v8);
  uint64_t v46 = v39;
  if (v45 != 1)
  {
LABEL_13:
    sub_10004015C(v46, &qword_100299638);
    char v34 = 0;
    return v34 & 1;
  }
  sub_10004015C(v39, (uint64_t *)&unk_10029ED30);
LABEL_15:
  uint64_t v51 = v67;
  uint64_t v52 = v68;
  uint64_t v53 = *((void *)v68 + 4);
  uint64_t v54 = *((void *)v67 + 4);
  if (v68[40]) {
    uint64_t v53 = v53 != 0;
  }
  if (v67[40] == 1)
  {
    if (v54)
    {
      if (v53 != 1) {
        goto LABEL_20;
      }
    }
    else if (v53)
    {
      goto LABEL_20;
    }
  }
  else if (v53 != v54)
  {
    goto LABEL_20;
  }
  if (*((void *)v68 + 6) == *((void *)v67 + 6) && *((void *)v68 + 7) == *((void *)v67 + 7)
    || (v56 = sub_100222A30(), uint64_t v51 = v67, v52 = v68, v34 = 0, (v56 & 1) != 0))
  {
    uint64_t v57 = v66;
    uint64_t v58 = v75;
    uint64_t v59 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v75 + 16);
    uint64_t v60 = v69;
    char v61 = v70;
    char v62 = v51;
    v59(v70, &v52[*(int *)(v66 + 44)], v69);
    uint64_t v63 = &v62[*(int *)(v57 + 44)];
    uint64_t v64 = v71;
    v59(v71, v63, v60);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v34 = sub_100222250();
    char v65 = *(void (**)(char *, uint64_t))(v58 + 8);
    v65(v64, v60);
    v65(v61, v60);
  }
  return v34 & 1;
}

uint64_t _s18TrustedPeersHelper7ViewKeyV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v22 - v11;
  if (*(void *)a1 != *(void *)a2 || *((void *)a1 + 1) != *(void *)(a2 + 8))
  {
    char v14 = 0;
    if ((sub_100222A30() & 1) == 0) {
      return v14 & 1;
    }
  }
  if (*((void *)a1 + 2) != *(void *)(a2 + 16) || *((void *)a1 + 3) != *(void *)(a2 + 24))
  {
    char v14 = 0;
    if ((sub_100222A30() & 1) == 0) {
      return v14 & 1;
    }
  }
  uint64_t v16 = *((void *)a1 + 4);
  uint64_t v17 = *(void *)(a2 + 32);
  if (*(unsigned char *)(a2 + 40) != 1)
  {
    if (v16 == v17) {
      goto LABEL_17;
    }
    goto LABEL_25;
  }
  if (!v17)
  {
    if (!v16) {
      goto LABEL_17;
    }
LABEL_25:
    char v14 = 0;
    return v14 & 1;
  }
  if (v17 == 1)
  {
    if (v16 != 1) {
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v16 != 2) {
    goto LABEL_25;
  }
LABEL_17:
  if (*((void *)a1 + 6) == *(void *)(a2 + 48) && *((void *)a1 + 7) == *(void *)(a2 + 56)
    || (char v14 = 0, (sub_100222A30() & 1) != 0))
  {
    if (*((void *)a1 + 8) == *(void *)(a2 + 64) && *((void *)a1 + 9) == *(void *)(a2 + 72)
      || (char v14 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v18 = type metadata accessor for ViewKey(0);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v19(v12, &a1[*(int *)(v18 + 36)], v4);
      v19(v9, (char *)(a2 + *(int *)(v18 + 36)), v4);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v14 = sub_100222250();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v9, v4);
      v20(v12, v4);
    }
  }
  return v14 & 1;
}

uint64_t sub_1000D1BCC(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for EstablishRequest, (uint64_t (*)(uint64_t, uint64_t))sub_10009B3B8);
}

uint64_t _s18TrustedPeersHelper15ViewKeysRecordsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v118 = a2;
  uint64_t v3 = sub_100221DF0();
  uint64_t v103 = *(void *)(v3 - 8);
  uint64_t v104 = v3;
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v102 = &v98[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v7);
  int v101 = &v98[-v8];
  uint64_t v9 = sub_100221D50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v113 = &v98[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000046DC(&qword_10029E408);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v108 = &v98[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v111 = &v98[-v19];
  __chkstk_darwin(v18, v20);
  uint64_t v22 = &v98[-v21];
  uint64_t v23 = sub_1000046DC(&qword_1002997E0);
  uint64_t v25 = __chkstk_darwin(v23 - 8, v24);
  uint64_t v105 = &v98[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = __chkstk_darwin(v25, v27);
  v106 = &v98[-v29];
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v107 = &v98[-v32];
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v109 = &v98[-v35];
  uint64_t v37 = __chkstk_darwin(v34, v36);
  int v115 = &v98[-v38];
  uint64_t v40 = __chkstk_darwin(v37, v39);
  char v110 = &v98[-v41];
  uint64_t v43 = __chkstk_darwin(v40, v42);
  int v45 = &v98[-v44];
  uint64_t v47 = __chkstk_darwin(v43, v46);
  char v49 = &v98[-v48];
  __chkstk_darwin(v47, v50);
  uint64_t v52 = &v98[-v51];
  uint64_t v53 = type metadata accessor for ViewKeysRecords(0);
  uint64_t v54 = *(int *)(v53 + 20);
  uint64_t v116 = a1;
  sub_10000D830(a1 + v54, (uint64_t)v52, &qword_1002997E0);
  uint64_t v114 = v53;
  sub_10000D830(v118 + *(int *)(v53 + 20), (uint64_t)v49, &qword_1002997E0);
  uint64_t v112 = v13;
  uint64_t v55 = *(int *)(v13 + 48);
  uint64_t v56 = v9;
  uint64_t v57 = (uint64_t)&v22[v55];
  sub_10000D830((uint64_t)v52, (uint64_t)v22, &qword_1002997E0);
  sub_10000D830((uint64_t)v49, v57, &qword_1002997E0);
  uint64_t v117 = v10;
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v58((uint64_t)v22, 1, v9) == 1)
  {
    sub_10004015C((uint64_t)v49, &qword_1002997E0);
    sub_10004015C((uint64_t)v52, &qword_1002997E0);
    if (v58(v57, 1, v9) == 1)
    {
      sub_10004015C((uint64_t)v22, &qword_1002997E0);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v59 = (uint64_t)v22;
LABEL_21:
    sub_10004015C(v59, &qword_10029E408);
    goto LABEL_22;
  }
  sub_10000D830((uint64_t)v22, (uint64_t)v45, &qword_1002997E0);
  if (v58(v57, 1, v9) == 1)
  {
    sub_10004015C((uint64_t)v49, &qword_1002997E0);
    sub_10004015C((uint64_t)v52, &qword_1002997E0);
    (*(void (**)(unsigned char *, uint64_t))(v117 + 8))(v45, v9);
    goto LABEL_6;
  }
  uint64_t v100 = v58;
  uint64_t v60 = v117;
  char v61 = v113;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v117 + 32))(v113, v57, v56);
  sub_1000D8CA4(&qword_100299630, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
  int v99 = sub_100222250();
  char v62 = *(void (**)(unsigned char *, uint64_t))(v60 + 8);
  v62(v61, v56);
  sub_10004015C((uint64_t)v49, &qword_1002997E0);
  sub_10004015C((uint64_t)v52, &qword_1002997E0);
  v62(v45, v56);
  uint64_t v58 = v100;
  sub_10004015C((uint64_t)v22, &qword_1002997E0);
  if ((v99 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_8:
  uint64_t v63 = v114;
  uint64_t v64 = v110;
  sub_10000D830(v116 + *(int *)(v114 + 24), (uint64_t)v110, &qword_1002997E0);
  uint64_t v65 = v118;
  uint64_t v66 = v115;
  sub_10000D830(v118 + *(int *)(v63 + 24), (uint64_t)v115, &qword_1002997E0);
  uint64_t v68 = v111;
  uint64_t v67 = v112;
  uint64_t v69 = (uint64_t)&v111[*(int *)(v112 + 48)];
  sub_10000D830((uint64_t)v64, (uint64_t)v111, &qword_1002997E0);
  sub_10000D830((uint64_t)v66, v69, &qword_1002997E0);
  if (v58((uint64_t)v68, 1, v56) != 1)
  {
    uint64_t v70 = v109;
    sub_10000D830((uint64_t)v68, (uint64_t)v109, &qword_1002997E0);
    if (v58(v69, 1, v56) != 1)
    {
      uint64_t v100 = v58;
      uint64_t v71 = v117;
      uint64_t v72 = v113;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v117 + 32))(v113, v69, v56);
      sub_1000D8CA4(&qword_100299630, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
      char v73 = sub_100222250();
      uint64_t v74 = *(void (**)(unsigned char *, uint64_t))(v71 + 8);
      v74(v72, v56);
      sub_10004015C((uint64_t)v115, &qword_1002997E0);
      sub_10004015C((uint64_t)v64, &qword_1002997E0);
      v74(v70, v56);
      sub_10004015C((uint64_t)v68, &qword_1002997E0);
      uint64_t v65 = v118;
      if ((v73 & 1) == 0) {
        goto LABEL_22;
      }
      goto LABEL_15;
    }
    sub_10004015C((uint64_t)v115, &qword_1002997E0);
    sub_10004015C((uint64_t)v64, &qword_1002997E0);
    (*(void (**)(unsigned char *, uint64_t))(v117 + 8))(v70, v56);
    goto LABEL_13;
  }
  sub_10004015C((uint64_t)v66, &qword_1002997E0);
  sub_10004015C((uint64_t)v64, &qword_1002997E0);
  if (v58(v69, 1, v56) != 1)
  {
LABEL_13:
    uint64_t v59 = (uint64_t)v68;
    goto LABEL_21;
  }
  uint64_t v100 = v58;
  sub_10004015C((uint64_t)v68, &qword_1002997E0);
LABEL_15:
  uint64_t v75 = v114;
  uint64_t v76 = v107;
  sub_10000D830(v116 + *(int *)(v114 + 28), (uint64_t)v107, &qword_1002997E0);
  uint64_t v77 = v65;
  uint64_t v78 = v65 + *(int *)(v75 + 28);
  uint64_t v79 = v106;
  sub_10000D830(v78, (uint64_t)v106, &qword_1002997E0);
  uint64_t v80 = *(int *)(v67 + 48);
  uint64_t v81 = v108;
  uint64_t v82 = (uint64_t)&v108[v80];
  sub_10000D830((uint64_t)v76, (uint64_t)v108, &qword_1002997E0);
  sub_10000D830((uint64_t)v79, v82, &qword_1002997E0);
  uint64_t v83 = v100;
  if (v100((uint64_t)v81, 1, v56) == 1)
  {
    sub_10004015C((uint64_t)v79, &qword_1002997E0);
    sub_10004015C((uint64_t)v76, &qword_1002997E0);
    if (v83(v82, 1, v56) == 1)
    {
      sub_10004015C((uint64_t)v81, &qword_1002997E0);
LABEL_25:
      uint64_t v92 = v103;
      uint64_t v93 = v104;
      uint64_t v94 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v103 + 16);
      int v95 = v101;
      v94(v101, v116, v104);
      uint64_t v96 = v102;
      v94(v102, v77, v93);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v85 = sub_100222250();
      uint64_t v97 = *(void (**)(unsigned char *, uint64_t))(v92 + 8);
      v97(v96, v93);
      v97(v95, v93);
      return v85 & 1;
    }
    goto LABEL_20;
  }
  uint64_t v84 = v105;
  sub_10000D830((uint64_t)v81, (uint64_t)v105, &qword_1002997E0);
  if (v83(v82, 1, v56) == 1)
  {
    sub_10004015C((uint64_t)v79, &qword_1002997E0);
    sub_10004015C((uint64_t)v76, &qword_1002997E0);
    (*(void (**)(unsigned char *, uint64_t))(v117 + 8))(v84, v56);
LABEL_20:
    uint64_t v59 = (uint64_t)v81;
    goto LABEL_21;
  }
  uint64_t v87 = (uint64_t)v79;
  uint64_t v88 = v117;
  uint64_t v89 = v113;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v117 + 32))(v113, v82, v56);
  sub_1000D8CA4(&qword_100299630, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
  char v90 = sub_100222250();
  uint64_t v91 = *(void (**)(unsigned char *, uint64_t))(v88 + 8);
  v91(v89, v56);
  sub_10004015C(v87, &qword_1002997E0);
  sub_10004015C((uint64_t)v76, &qword_1002997E0);
  v91(v84, v56);
  sub_10004015C((uint64_t)v81, &qword_1002997E0);
  if (v90) {
    goto LABEL_25;
  }
LABEL_22:
  char v85 = 0;
  return v85 & 1;
}

uint64_t _s18TrustedPeersHelper15CurrentCKKSItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v86 = a2;
  uint64_t v3 = sub_100221DF0();
  uint64_t v75 = *(void *)(v3 - 8);
  uint64_t v76 = v3;
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v74 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  char v73 = (char *)&v71 - v8;
  uint64_t v82 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v79 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v9);
  uint64_t v72 = (uint64_t *)((char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1000046DC(&qword_10029E400);
  __chkstk_darwin(v78, v11);
  uint64_t v83 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029EF50);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v77 = (uint64_t *)((char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v80 = (uint64_t)&v71 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v81 = (uint64_t)&v71 - v21;
  uint64_t v22 = sub_100221D50();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000046DC(&qword_10029E408);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000046DC(&qword_1002997E0);
  uint64_t v34 = __chkstk_darwin(v32 - 8, v33);
  uint64_t v85 = (uint64_t)&v71 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v39 = (char *)&v71 - v38;
  __chkstk_darwin(v37, v40);
  uint64_t v42 = (char *)&v71 - v41;
  uint64_t v43 = type metadata accessor for CurrentCKKSItem(0);
  uint64_t v44 = *(int *)(v43 + 20);
  uint64_t v84 = a1;
  sub_10000D830(a1 + v44, (uint64_t)v42, &qword_1002997E0);
  sub_10000D830(v86 + *(int *)(v43 + 20), (uint64_t)v39, &qword_1002997E0);
  uint64_t v45 = (uint64_t)&v31[*(int *)(v28 + 56)];
  sub_10000D830((uint64_t)v42, (uint64_t)v31, &qword_1002997E0);
  sub_10000D830((uint64_t)v39, v45, &qword_1002997E0);
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v46((uint64_t)v31, 1, v22) != 1)
  {
    sub_10000D830((uint64_t)v31, v85, &qword_1002997E0);
    if (v46(v45, 1, v22) != 1)
    {
      uint64_t v48 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v26, v45, v22);
      sub_1000D8CA4(&qword_100299630, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
      uint64_t v49 = v85;
      char v50 = sub_100222250();
      uint64_t v51 = *(void (**)(char *, uint64_t))(v23 + 8);
      v51(v48, v22);
      sub_10004015C((uint64_t)v39, &qword_1002997E0);
      sub_10004015C((uint64_t)v42, &qword_1002997E0);
      v51((char *)v49, v22);
      sub_10004015C((uint64_t)v31, &qword_1002997E0);
      if ((v50 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_8;
    }
    sub_10004015C((uint64_t)v39, &qword_1002997E0);
    sub_10004015C((uint64_t)v42, &qword_1002997E0);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v85, v22);
LABEL_6:
    uint64_t v47 = &qword_10029E408;
LABEL_14:
    uint64_t v61 = (uint64_t)v31;
LABEL_15:
    sub_10004015C(v61, v47);
    goto LABEL_16;
  }
  sub_10004015C((uint64_t)v39, &qword_1002997E0);
  sub_10004015C((uint64_t)v42, &qword_1002997E0);
  if (v46(v45, 1, v22) != 1) {
    goto LABEL_6;
  }
  sub_10004015C((uint64_t)v31, &qword_1002997E0);
LABEL_8:
  uint64_t v52 = v84;
  uint64_t v53 = v81;
  sub_10000D830(v84 + *(int *)(v43 + 24), v81, (uint64_t *)&unk_10029EF50);
  uint64_t v54 = v86;
  uint64_t v55 = v80;
  sub_10000D830(v86 + *(int *)(v43 + 24), v80, (uint64_t *)&unk_10029EF50);
  uint64_t v31 = v83;
  uint64_t v56 = (uint64_t)&v83[*(int *)(v78 + 48)];
  sub_10000D830(v53, (uint64_t)v83, (uint64_t *)&unk_10029EF50);
  sub_10000D830(v55, v56, (uint64_t *)&unk_10029EF50);
  uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  uint64_t v58 = v82;
  if (v57((uint64_t)v31, 1, v82) == 1)
  {
    sub_10004015C(v55, (uint64_t *)&unk_10029EF50);
    sub_10004015C(v53, (uint64_t *)&unk_10029EF50);
    if (v57(v56, 1, v58) == 1)
    {
      sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EF50);
      uint64_t v59 = v76;
LABEL_25:
      uint64_t v66 = v75;
      uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
      uint64_t v68 = v73;
      v67(v73, v52, v59);
      uint64_t v69 = v74;
      v67(v74, v54, v59);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v62 = sub_100222250();
      uint64_t v70 = *(void (**)(char *, uint64_t))(v66 + 8);
      v70(v69, v59);
      v70(v68, v59);
      return v62 & 1;
    }
    goto LABEL_13;
  }
  uint64_t v60 = v77;
  sub_10000D830((uint64_t)v31, (uint64_t)v77, (uint64_t *)&unk_10029EF50);
  if (v57(v56, 1, v58) == 1)
  {
    sub_10004015C(v55, (uint64_t *)&unk_10029EF50);
    sub_10004015C(v53, (uint64_t *)&unk_10029EF50);
    sub_1000D7E78((uint64_t)v60, type metadata accessor for CurrentCKKSItemSpecifier);
LABEL_13:
    uint64_t v47 = &qword_10029E400;
    goto LABEL_14;
  }
  uint64_t v64 = v72;
  sub_1000D736C(v56, (uint64_t)v72, type metadata accessor for CurrentCKKSItemSpecifier);
  if ((*v60 != *v64 || v60[1] != v64[1]) && (sub_100222A30() & 1) == 0
    || (v60[2] != v64[2] || v60[3] != v64[3]) && (sub_100222A30() & 1) == 0)
  {
    sub_1000D7E78((uint64_t)v64, type metadata accessor for CurrentCKKSItemSpecifier);
    sub_10004015C(v55, (uint64_t *)&unk_10029EF50);
    sub_10004015C(v53, (uint64_t *)&unk_10029EF50);
    sub_1000D7E78((uint64_t)v60, type metadata accessor for CurrentCKKSItemSpecifier);
    uint64_t v61 = (uint64_t)v31;
    uint64_t v47 = (uint64_t *)&unk_10029EF50;
    goto LABEL_15;
  }
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  uint64_t v59 = v76;
  char v65 = sub_100222250();
  sub_1000D7E78((uint64_t)v64, type metadata accessor for CurrentCKKSItemSpecifier);
  sub_10004015C(v55, (uint64_t *)&unk_10029EF50);
  sub_10004015C(v53, (uint64_t *)&unk_10029EF50);
  sub_1000D7E78((uint64_t)v60, type metadata accessor for CurrentCKKSItemSpecifier);
  sub_10004015C((uint64_t)v31, (uint64_t *)&unk_10029EF50);
  if (v65) {
    goto LABEL_25;
  }
LABEL_16:
  char v62 = 0;
  return v62 & 1;
}

uint64_t _s18TrustedPeersHelper14SupportAppViewV2eeoiySbAC_ACtFZ_0(char *a1, void *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v51 = (char *)&v49 - v10;
  uint64_t v11 = sub_100221DC0();
  uint64_t v54 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v53 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299638);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v49 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v49 - v28;
  uint64_t v30 = *(void *)a1;
  uint64_t v31 = *((void *)a1 + 1);
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  if (v30 == *a2 && v31 == a2[1] || (char v32 = 0, (sub_100222A30() & 1) != 0))
  {
    uint64_t v49 = v8;
    uint64_t v50 = v4;
    uint64_t v33 = type metadata accessor for SupportAppView(0);
    sub_10000D830((uint64_t)&v55[*(int *)(v33 + 28)], (uint64_t)v29, (uint64_t *)&unk_10029ED30);
    sub_10000D830((uint64_t)v56 + *(int *)(v33 + 28), (uint64_t)v26, (uint64_t *)&unk_10029ED30);
    uint64_t v34 = (uint64_t)&v17[*(int *)(v14 + 48)];
    sub_10000D830((uint64_t)v29, (uint64_t)v17, (uint64_t *)&unk_10029ED30);
    sub_10000D830((uint64_t)v26, v34, (uint64_t *)&unk_10029ED30);
    uint64_t v35 = v54;
    uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    if (v36((uint64_t)v17, 1, v11) == 1)
    {
      sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
      sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
      if (v36(v34, 1, v11) == 1)
      {
        sub_10004015C((uint64_t)v17, (uint64_t *)&unk_10029ED30);
        goto LABEL_11;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v17, (uint64_t)v22, (uint64_t *)&unk_10029ED30);
      if (v36(v34, 1, v11) != 1)
      {
        uint64_t v37 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v53, v34, v11);
        sub_1000D8CA4(&qword_100299640, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
        char v38 = sub_100222250();
        uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
        v39(v37, v11);
        sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
        sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
        v39(v22, v11);
        sub_10004015C((uint64_t)v17, (uint64_t *)&unk_10029ED30);
        if (v38)
        {
LABEL_11:
          uint64_t v40 = v56;
          if (v55[16] == *((unsigned char *)v56 + 16))
          {
            uint64_t v43 = v51;
            uint64_t v42 = v52;
            uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
            uint64_t v45 = v50;
            v44(v51, &v55[*(int *)(v33 + 24)], v50);
            uint64_t v46 = (char *)v40 + *(int *)(v33 + 24);
            uint64_t v47 = v49;
            v44(v49, v46, v45);
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v32 = sub_100222250();
            uint64_t v48 = *(void (**)(char *, uint64_t))(v42 + 8);
            v48(v47, v45);
            v48(v43, v45);
            return v32 & 1;
          }
        }
LABEL_12:
        char v32 = 0;
        return v32 & 1;
      }
      sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
      sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v11);
    }
    sub_10004015C((uint64_t)v17, &qword_100299638);
    goto LABEL_12;
  }
  return v32 & 1;
}

uint64_t _s18TrustedPeersHelper14PeerDifferenceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v48 = (char *)&v44 - v9;
  uint64_t v10 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v45 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299660);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000046DC(&qword_100299658);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v44 - v26;
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v44 - v29;
  uint64_t v46 = a1;
  sub_10000D830(a1, (uint64_t)&v44 - v29, &qword_100299658);
  uint64_t v47 = a2;
  sub_10000D830(a2, (uint64_t)v27, &qword_100299658);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10000D830((uint64_t)v30, (uint64_t)v18, &qword_100299658);
  sub_10000D830((uint64_t)v27, v31, &qword_100299658);
  char v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v18, 1, v10) != 1)
  {
    sub_10000D830((uint64_t)v18, (uint64_t)v23, &qword_100299658);
    if (v32(v31, 1, v10) != 1)
    {
      uint64_t v33 = v45;
      sub_1000D736C(v31, v45, type metadata accessor for PeerDifference.OneOf_Operation);
      char v34 = _s18TrustedPeersHelper14PeerDifferenceV15OneOf_OperationO21__derived_enum_equalsySbAE_AEtFZ_0((uint64_t)v23, v33);
      sub_1000D7E78(v33, type metadata accessor for PeerDifference.OneOf_Operation);
      sub_10004015C((uint64_t)v27, &qword_100299658);
      sub_10004015C((uint64_t)v30, &qword_100299658);
      sub_1000D7E78((uint64_t)v23, type metadata accessor for PeerDifference.OneOf_Operation);
      sub_10004015C((uint64_t)v18, &qword_100299658);
      if (v34) {
        goto LABEL_8;
      }
LABEL_9:
      char v41 = 0;
      return v41 & 1;
    }
    sub_10004015C((uint64_t)v27, &qword_100299658);
    sub_10004015C((uint64_t)v30, &qword_100299658);
    sub_1000D7E78((uint64_t)v23, type metadata accessor for PeerDifference.OneOf_Operation);
LABEL_6:
    sub_10004015C((uint64_t)v18, &qword_100299660);
    goto LABEL_9;
  }
  sub_10004015C((uint64_t)v27, &qword_100299658);
  sub_10004015C((uint64_t)v30, &qword_100299658);
  if (v32(v31, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_10004015C((uint64_t)v18, &qword_100299658);
LABEL_8:
  uint64_t v35 = type metadata accessor for PeerDifference(0);
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  char v38 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  uint64_t v39 = v48;
  v38(v48, v46 + *(int *)(v35 + 20), v51);
  uint64_t v40 = v49;
  v38(v49, v47 + *(int *)(v35 + 20), v36);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = sub_100222250();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v36);
  v42(v39, v36);
  return v41 & 1;
}

uint64_t sub_1000D3AF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v20 - v13;
  if ((sub_10003FE7C(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_10003FE7C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) != 0)
  {
    uint64_t v15 = a3(0);
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v16(v14, a1 + *(int *)(v15 + 24), v6);
    v16(v11, a2 + *(int *)(v15 + 24), v6);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v17 = sub_100222250();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v11, v6);
    v18(v14, v6);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v182 = sub_100221DF0();
  uint64_t v161 = *(void *)(v182 - 8);
  uint64_t v5 = __chkstk_darwin(v182, v4);
  uint64_t v160 = (char *)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v159 = (char *)&v158 - v8;
  uint64_t v166 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166, v9);
  uint64_t v158 = (uint64_t)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_1000046DC(&qword_10029E470);
  __chkstk_darwin(v164, v11);
  uint64_t v168 = (uint64_t)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299F28);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v162 = (uint64_t)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v167 = (uint64_t)&v158 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v172 = (char *)&v158 - v21;
  uint64_t v173 = type metadata accessor for SignedRecoveryVoucher(0);
  uint64_t v171 = *(void *)(v173 - 8);
  __chkstk_darwin(v173, v22);
  uint64_t v163 = (uint64_t)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1000046DC(&qword_10029E478);
  __chkstk_darwin(v170, v24);
  uint64_t v175 = (char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000046DC(&qword_100299F20);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v169 = (uint64_t)&v158 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v174 = (uint64_t)&v158 - v32;
  __chkstk_darwin(v31, v33);
  uint64_t v187 = (uint64_t)&v158 - v34;
  uint64_t v191 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v181 = *(void *)(v191 - 8);
  __chkstk_darwin(v191, v35);
  uint64_t v176 = (uint64_t)&v158 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_1000046DC(&qword_10029E448);
  __chkstk_darwin(v180, v37);
  uint64_t v185 = (uint64_t)&v158 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v41 = __chkstk_darwin(v39 - 8, v40);
  uint64_t v178 = (uint64_t)&v158 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v183 = (uint64_t)&v158 - v45;
  __chkstk_darwin(v44, v46);
  uint64_t v184 = (uint64_t)&v158 - v47;
  uint64_t v192 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v189 = *(void *)(v192 - 8);
  __chkstk_darwin(v192, v48);
  uint64_t v179 = (uint64_t)&v158 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_1000046DC(&qword_10029E450);
  __chkstk_darwin(v188, v50);
  uint64_t v190 = (uint64_t)&v158 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000046DC(&qword_100299F18);
  uint64_t v54 = __chkstk_darwin(v52 - 8, v53);
  uint64_t v186 = (uint64_t)&v158 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __chkstk_darwin(v54, v56);
  uint64_t v193 = (uint64_t)&v158 - v58;
  __chkstk_darwin(v57, v59);
  uint64_t v194 = (uint64_t)&v158 - v60;
  uint64_t v61 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v62 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v63);
  char v65 = (char *)&v158 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000046DC(&qword_10029E480);
  __chkstk_darwin(v66, v67);
  uint64_t v69 = (char *)&v158 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000046DC(&qword_10029EF80);
  uint64_t v72 = __chkstk_darwin(v70 - 8, v71);
  uint64_t v74 = (char *)&v158 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __chkstk_darwin(v72, v75);
  uint64_t v78 = (char *)&v158 - v77;
  __chkstk_darwin(v76, v79);
  uint64_t v81 = (char *)&v158 - v80;
  uint64_t v82 = *a1;
  uint64_t v83 = a1[1];
  v195 = a1;
  v196 = a2;
  if (v82 == *a2 && v83 == a2[1] || (char v84 = 0, (sub_100222A30() & 1) != 0))
  {
    uint64_t v85 = type metadata accessor for Peer(0);
    sub_10000D830((uint64_t)v195 + *(int *)(v85 + 28), (uint64_t)v81, &qword_10029EF80);
    uint64_t v177 = (int *)v85;
    sub_10000D830((uint64_t)v196 + *(int *)(v85 + 28), (uint64_t)v78, &qword_10029EF80);
    uint64_t v86 = (uint64_t)&v69[*(int *)(v66 + 48)];
    sub_10000D830((uint64_t)v81, (uint64_t)v69, &qword_10029EF80);
    sub_10000D830((uint64_t)v78, v86, &qword_10029EF80);
    uint64_t v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
    if (v87((uint64_t)v69, 1, v61) == 1)
    {
      sub_10004015C((uint64_t)v78, &qword_10029EF80);
      sub_10004015C((uint64_t)v81, &qword_10029EF80);
      if (v87(v86, 1, v61) == 1)
      {
        sub_10004015C((uint64_t)v69, &qword_10029EF80);
        goto LABEL_7;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v69, (uint64_t)v74, &qword_10029EF80);
      if (v87(v86, 1, v61) != 1)
      {
        sub_1000D736C(v86, (uint64_t)v65, type metadata accessor for SignedPeerPermanentInfo);
        if ((sub_10003FE7C(*(void *)v74, *((void *)v74 + 1), *(void *)v65, *((void *)v65 + 1)) & 1) == 0
          || (sub_10003FE7C(*((void *)v74 + 2), *((void *)v74 + 3), *((void *)v65 + 2), *((void *)v65 + 3)) & 1) == 0)
        {
          sub_1000D7E78((uint64_t)v65, type metadata accessor for SignedPeerPermanentInfo);
          int v134 = &qword_10029EF80;
          sub_10004015C((uint64_t)v78, &qword_10029EF80);
          sub_10004015C((uint64_t)v81, &qword_10029EF80);
          sub_1000D7E78((uint64_t)v74, type metadata accessor for SignedPeerPermanentInfo);
          uint64_t v132 = (uint64_t)v69;
          goto LABEL_30;
        }
        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v133 = sub_100222250();
        sub_1000D7E78((uint64_t)v65, type metadata accessor for SignedPeerPermanentInfo);
        sub_10004015C((uint64_t)v78, &qword_10029EF80);
        sub_10004015C((uint64_t)v81, &qword_10029EF80);
        sub_1000D7E78((uint64_t)v74, type metadata accessor for SignedPeerPermanentInfo);
        sub_10004015C((uint64_t)v69, &qword_10029EF80);
        if ((v133 & 1) == 0) {
          goto LABEL_43;
        }
LABEL_7:
        uint64_t v88 = v177;
        uint64_t v90 = v194;
        uint64_t v89 = v195;
        sub_10000D830((uint64_t)v195 + v177[8], v194, &qword_100299F18);
        uint64_t v91 = v196;
        uint64_t v92 = v193;
        sub_10000D830((uint64_t)v196 + v88[8], v193, &qword_100299F18);
        uint64_t v93 = v190;
        uint64_t v94 = v190 + *(int *)(v188 + 48);
        sub_10000D830(v90, v190, &qword_100299F18);
        sub_10000D830(v92, v94, &qword_100299F18);
        int v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v189 + 48);
        uint64_t v96 = v192;
        if (v95(v93, 1, v192) == 1)
        {
          sub_10004015C(v92, &qword_100299F18);
          sub_10004015C(v90, &qword_100299F18);
          int v97 = v95(v94, 1, v96);
          uint64_t v98 = v187;
          uint64_t v99 = v191;
          if (v97 == 1)
          {
            sub_10004015C(v93, &qword_100299F18);
            uint64_t v100 = v91;
            int v101 = v89;
            uint64_t v88 = v177;
LABEL_10:
            uint64_t v102 = v184;
            sub_10000D830((uint64_t)v101 + v88[9], v184, &qword_10029ECA0);
            uint64_t v103 = v183;
            sub_10000D830((uint64_t)v100 + v88[9], v183, &qword_10029ECA0);
            uint64_t v104 = v185;
            uint64_t v105 = v185 + *(int *)(v180 + 48);
            sub_10000D830(v102, v185, &qword_10029ECA0);
            uint64_t v106 = v104;
            sub_10000D830(v103, v105, &qword_10029ECA0);
            uint64_t v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
            if (v107(v106, 1, v99) == 1)
            {
              sub_10004015C(v103, &qword_10029ECA0);
              uint64_t v106 = v185;
              sub_10004015C(v102, &qword_10029ECA0);
              if (v107(v105, 1, v99) == 1)
              {
                sub_10004015C(v106, &qword_10029ECA0);
LABEL_13:
                uint64_t v108 = v196;
                if ((sub_10003E5F4(v101[2], v196[2]) & 1) == 0) {
                  goto LABEL_43;
                }
                uint64_t v109 = v98;
                sub_10000D830((uint64_t)v101 + v88[10], v98, &qword_100299F20);
                uint64_t v110 = (uint64_t)v108 + v88[10];
                uint64_t v111 = v174;
                sub_10000D830(v110, v174, &qword_100299F20);
                uint64_t v69 = v175;
                uint64_t v112 = (uint64_t)&v175[*(int *)(v170 + 48)];
                sub_10000D830(v109, (uint64_t)v175, &qword_100299F20);
                sub_10000D830(v111, v112, &qword_100299F20);
                uint64_t v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
                uint64_t v114 = v173;
                if (v113((uint64_t)v69, 1, v173) == 1)
                {
                  sub_10004015C(v111, &qword_100299F20);
                  uint64_t v69 = v175;
                  sub_10004015C(v109, &qword_100299F20);
                  int v115 = v113(v112, 1, v114);
                  uint64_t v116 = (uint64_t)v172;
                  if (v115 == 1)
                  {
                    sub_10004015C((uint64_t)v69, &qword_100299F20);
                    goto LABEL_17;
                  }
                }
                else
                {
                  uint64_t v147 = v169;
                  sub_10000D830((uint64_t)v69, v169, &qword_100299F20);
                  int v148 = v113(v112, 1, v114);
                  uint64_t v116 = (uint64_t)v172;
                  if (v148 != 1)
                  {
                    uint64_t v149 = v163;
                    sub_1000D736C(v112, v163, type metadata accessor for SignedRecoveryVoucher);
                    char v150 = sub_10003FE7C(*(void *)v147, *(void *)(v147 + 8), *(void *)v149, *(void *)(v149 + 8));
                    uint64_t v151 = v187;
                    if ((v150 & 1) == 0
                      || (sub_10003FE7C(*(void *)(v147 + 16), *(void *)(v147 + 24), *(void *)(v149 + 16), *(void *)(v149 + 24)) & 1) == 0)
                    {
                      sub_1000D7E78(v149, type metadata accessor for SignedRecoveryVoucher);
                      int v134 = &qword_100299F20;
                      sub_10004015C(v174, &qword_100299F20);
                      sub_10004015C(v151, &qword_100299F20);
                      sub_1000D7E78(v147, type metadata accessor for SignedRecoveryVoucher);
                      v153 = &v198;
LABEL_66:
                      uint64_t v132 = *(v153 - 32);
                      goto LABEL_30;
                    }
                    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                    char v152 = sub_100222250();
                    sub_1000D7E78(v149, type metadata accessor for SignedRecoveryVoucher);
                    sub_10004015C(v174, &qword_100299F20);
                    sub_10004015C(v151, &qword_100299F20);
                    sub_1000D7E78(v147, type metadata accessor for SignedRecoveryVoucher);
                    sub_10004015C((uint64_t)v175, &qword_100299F20);
                    if ((v152 & 1) == 0) {
                      goto LABEL_43;
                    }
LABEL_17:
                    uint64_t v117 = v177;
                    sub_10000D830((uint64_t)v101 + v177[11], v116, &qword_100299F28);
                    uint64_t v118 = v167;
                    sub_10000D830((uint64_t)v196 + v117[11], v167, &qword_100299F28);
                    uint64_t v119 = v168;
                    uint64_t v120 = v168 + *(int *)(v164 + 48);
                    sub_10000D830(v116, v168, &qword_100299F28);
                    uint64_t v121 = v119;
                    sub_10000D830(v118, v120, &qword_100299F28);
                    v122 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
                    uint64_t v123 = v166;
                    if (v122(v121, 1, v166) == 1)
                    {
                      sub_10004015C(v118, &qword_100299F28);
                      uint64_t v121 = v168;
                      sub_10004015C(v116, &qword_100299F28);
                      if (v122(v120, 1, v123) == 1)
                      {
                        sub_10004015C(v121, &qword_100299F28);
                        uint64_t v124 = v182;
LABEL_20:
                        uint64_t v125 = (uint64_t)v101 + v117[6];
                        uint64_t v126 = v161;
                        uint64_t v127 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
                        uint64_t v128 = v159;
                        v127(v159, v125, v124);
                        uint64_t v129 = v160;
                        v127(v160, (uint64_t)v196 + v117[6], v124);
                        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                        char v84 = sub_100222250();
                        v130 = *(void (**)(char *, uint64_t))(v126 + 8);
                        v130(v129, v124);
                        v130(v128, v124);
                        return v84 & 1;
                      }
                      goto LABEL_60;
                    }
                    uint64_t v154 = v162;
                    sub_10000D830(v121, v162, &qword_100299F28);
                    if (v122(v120, 1, v123) == 1)
                    {
                      sub_10004015C(v167, &qword_100299F28);
                      sub_10004015C(v116, &qword_100299F28);
                      sub_1000D7E78(v154, type metadata accessor for SignedCustodianRecoveryKey);
LABEL_60:
                      int v131 = &qword_10029E470;
                      uint64_t v132 = v121;
                      goto LABEL_42;
                    }
                    uint64_t v155 = v158;
                    sub_1000D736C(v120, v158, type metadata accessor for SignedCustodianRecoveryKey);
                    uint64_t v156 = v154;
                    if ((sub_10003FE7C(*(void *)v154, *(void *)(v154 + 8), *(void *)v155, *(void *)(v155 + 8)) & 1) != 0
                      && (sub_10003FE7C(*(void *)(v154 + 16), *(void *)(v154 + 24), *(void *)(v155 + 16), *(void *)(v155 + 24)) & 1) != 0)
                    {
                      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                      uint64_t v124 = v182;
                      char v157 = sub_100222250();
                      sub_1000D7E78(v155, type metadata accessor for SignedCustodianRecoveryKey);
                      sub_10004015C(v167, &qword_100299F28);
                      sub_10004015C(v116, &qword_100299F28);
                      sub_1000D7E78(v156, type metadata accessor for SignedCustodianRecoveryKey);
                      sub_10004015C(v168, &qword_100299F28);
                      if (v157) {
                        goto LABEL_20;
                      }
LABEL_43:
                      char v84 = 0;
                      return v84 & 1;
                    }
                    sub_1000D7E78(v155, type metadata accessor for SignedCustodianRecoveryKey);
                    int v134 = &qword_100299F28;
                    sub_10004015C(v167, &qword_100299F28);
                    sub_10004015C(v116, &qword_100299F28);
                    sub_1000D7E78(v154, type metadata accessor for SignedCustodianRecoveryKey);
                    v153 = &v197;
                    goto LABEL_66;
                  }
                  sub_10004015C(v174, &qword_100299F20);
                  sub_10004015C(v187, &qword_100299F20);
                  sub_1000D7E78(v147, type metadata accessor for SignedRecoveryVoucher);
                }
                int v131 = &qword_10029E478;
LABEL_24:
                uint64_t v132 = (uint64_t)v69;
LABEL_42:
                sub_10004015C(v132, v131);
                goto LABEL_43;
              }
LABEL_41:
              int v131 = &qword_10029E448;
              uint64_t v132 = v106;
              goto LABEL_42;
            }
            uint64_t v139 = v178;
            sub_10000D830(v106, v178, &qword_10029ECA0);
            if (v107(v105, 1, v99) == 1)
            {
              sub_10004015C(v183, &qword_10029ECA0);
              sub_10004015C(v184, &qword_10029ECA0);
              sub_1000D7E78(v139, type metadata accessor for SignedPeerDynamicInfo);
              goto LABEL_41;
            }
            uint64_t v141 = v176;
            sub_1000D736C(v105, v176, type metadata accessor for SignedPeerDynamicInfo);
            char v142 = sub_10003FE7C(*(void *)v139, *(void *)(v139 + 8), *(void *)v141, *(void *)(v141 + 8));
            uint64_t v143 = v139;
            uint64_t v144 = v183;
            uint64_t v145 = v184;
            if ((v142 & 1) != 0
              && (sub_10003FE7C(*(void *)(v143 + 16), *(void *)(v143 + 24), *(void *)(v141 + 16), *(void *)(v141 + 24)) & 1) != 0)
            {
              sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
              char v146 = sub_100222250();
              sub_1000D7E78(v141, type metadata accessor for SignedPeerDynamicInfo);
              sub_10004015C(v144, &qword_10029ECA0);
              sub_10004015C(v145, &qword_10029ECA0);
              sub_1000D7E78(v143, type metadata accessor for SignedPeerDynamicInfo);
              sub_10004015C(v185, &qword_10029ECA0);
              if ((v146 & 1) == 0) {
                goto LABEL_43;
              }
              goto LABEL_13;
            }
            sub_1000D7E78(v141, type metadata accessor for SignedPeerDynamicInfo);
            int v134 = &qword_10029ECA0;
            sub_10004015C(v144, &qword_10029ECA0);
            sub_10004015C(v145, &qword_10029ECA0);
            sub_1000D7E78(v143, type metadata accessor for SignedPeerDynamicInfo);
            uint64_t v132 = v185;
LABEL_30:
            int v131 = v134;
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v135 = v186;
          sub_10000D830(v93, v186, &qword_100299F18);
          int v136 = v95(v94, 1, v96);
          uint64_t v99 = v191;
          if (v136 != 1)
          {
            uint64_t v137 = v94;
            uint64_t v138 = v179;
            sub_1000D736C(v137, v179, type metadata accessor for SignedPeerStableInfo);
            if ((sub_10003FE7C(*(void *)v135, *(void *)(v135 + 8), *(void *)v138, *(void *)(v138 + 8)) & 1) == 0
              || (sub_10003FE7C(*(void *)(v135 + 16), *(void *)(v135 + 24), *(void *)(v138 + 16), *(void *)(v138 + 24)) & 1) == 0)
            {
              sub_1000D7E78(v138, type metadata accessor for SignedPeerStableInfo);
              sub_10004015C(v193, &qword_100299F18);
              sub_10004015C(v194, &qword_100299F18);
              sub_1000D7E78(v135, type metadata accessor for SignedPeerStableInfo);
              uint64_t v132 = v93;
              int v131 = &qword_100299F18;
              goto LABEL_42;
            }
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            LODWORD(v192) = sub_100222250();
            sub_1000D7E78(v138, type metadata accessor for SignedPeerStableInfo);
            sub_10004015C(v193, &qword_100299F18);
            sub_10004015C(v194, &qword_100299F18);
            sub_1000D7E78(v186, type metadata accessor for SignedPeerStableInfo);
            uint64_t v98 = v187;
            sub_10004015C(v93, &qword_100299F18);
            uint64_t v100 = v91;
            int v101 = v195;
            if ((v192 & 1) == 0) {
              goto LABEL_43;
            }
            goto LABEL_10;
          }
          sub_10004015C(v193, &qword_100299F18);
          sub_10004015C(v194, &qword_100299F18);
          sub_1000D7E78(v135, type metadata accessor for SignedPeerStableInfo);
        }
        int v131 = &qword_10029E450;
        uint64_t v132 = v93;
        goto LABEL_42;
      }
      sub_10004015C((uint64_t)v78, &qword_10029EF80);
      sub_10004015C((uint64_t)v81, &qword_10029EF80);
      sub_1000D7E78((uint64_t)v74, type metadata accessor for SignedPeerPermanentInfo);
    }
    int v131 = &qword_10029E480;
    goto LABEL_24;
  }
  return v84 & 1;
}

uint64_t _s18TrustedPeersHelper14PeerDifferenceV15OneOf_OperationO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Peer(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v39 = (void **)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v38 = (void **)((char *)&v38 - v10);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (void **)((char *)&v38 - v12);
  uint64_t v14 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (void **)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v22 = (void **)((char *)&v38 - v21);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (void **)((char *)&v38 - v24);
  uint64_t v26 = sub_1000046DC(&qword_10029E468);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v30 = (char *)&v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t)&v30[*(int *)(v28 + 56)];
  sub_1000D7E10(a1, (uint64_t)v30, type metadata accessor for PeerDifference.OneOf_Operation);
  sub_1000D7E10(a2, v31, type metadata accessor for PeerDifference.OneOf_Operation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1000D7E10((uint64_t)v30, (uint64_t)v22, type metadata accessor for PeerDifference.OneOf_Operation);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v33 = v38;
        sub_1000D736C(v31, (uint64_t)v38, type metadata accessor for Peer);
        char v34 = _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(v22, v33);
        sub_1000D7E78((uint64_t)v33, type metadata accessor for Peer);
        uint64_t v35 = (uint64_t)v22;
LABEL_12:
        sub_1000D7E78(v35, type metadata accessor for Peer);
        sub_1000D7E78((uint64_t)v30, type metadata accessor for PeerDifference.OneOf_Operation);
        return v34 & 1;
      }
      uint64_t v18 = v22;
    }
    else
    {
      sub_1000D7E10((uint64_t)v30, (uint64_t)v18, type metadata accessor for PeerDifference.OneOf_Operation);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v36 = v39;
        sub_1000D736C(v31, (uint64_t)v39, type metadata accessor for Peer);
        char v34 = _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(v18, v36);
        sub_1000D7E78((uint64_t)v36, type metadata accessor for Peer);
        uint64_t v35 = (uint64_t)v18;
        goto LABEL_12;
      }
    }
  }
  else
  {
    sub_1000D7E10((uint64_t)v30, (uint64_t)v25, type metadata accessor for PeerDifference.OneOf_Operation);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1000D736C(v31, (uint64_t)v13, type metadata accessor for Peer);
      char v34 = _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(v25, v13);
      sub_1000D7E78((uint64_t)v13, type metadata accessor for Peer);
      uint64_t v35 = (uint64_t)v25;
      goto LABEL_12;
    }
    uint64_t v18 = v25;
  }
  sub_1000D7E78((uint64_t)v18, type metadata accessor for Peer);
  sub_10004015C((uint64_t)v30, &qword_10029E468);
  char v34 = 0;
  return v34 & 1;
}

uint64_t _s18TrustedPeersHelper7ChangesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v19 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v13 || (char v14 = 0, (sub_100222A30() & 1) != 0))
  {
    if ((sub_10003F80C(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0
      && (sub_10003FE7C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a2 + 24), *(void *)(a2 + 32)) & 1) != 0
      && (sub_10003FE7C(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a2 + 40), *(void *)(a2 + 48)) & 1) != 0
      && *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56))
    {
      uint64_t v16 = type metadata accessor for Changes(0);
      uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v17(v12, a1 + *(int *)(v16 + 36), v4);
      v17(v9, a2 + *(int *)(v16 + 36), v4);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v14 = sub_100222250();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v9, v4);
      v18(v12, v4);
    }
    else
    {
      char v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t _s18TrustedPeersHelper13ResetResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v49 = (char *)&v46 - v9;
  uint64_t v10 = type metadata accessor for Changes(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v46 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_10029E440);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v53 = (uint64_t)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (char *)&v46 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v46 - v28;
  uint64_t v30 = type metadata accessor for ResetResponse(0);
  uint64_t v31 = *(int *)(v30 + 20);
  uint64_t v47 = a1;
  sub_10000D830(a1 + v31, (uint64_t)v29, (uint64_t *)&unk_10029EC90);
  uint64_t v32 = *(int *)(v30 + 20);
  uint64_t v48 = a2;
  sub_10000D830(a2 + v32, (uint64_t)v26, (uint64_t *)&unk_10029EC90);
  uint64_t v33 = (uint64_t)&v18[*(int *)(v15 + 56)];
  sub_10000D830((uint64_t)v29, (uint64_t)v18, (uint64_t *)&unk_10029EC90);
  sub_10000D830((uint64_t)v26, v33, (uint64_t *)&unk_10029EC90);
  char v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v34((uint64_t)v18, 1, v10) != 1)
  {
    uint64_t v35 = v53;
    sub_10000D830((uint64_t)v18, v53, (uint64_t *)&unk_10029EC90);
    if (v34(v33, 1, v10) != 1)
    {
      uint64_t v36 = v46;
      sub_1000D736C(v33, v46, type metadata accessor for Changes);
      char v37 = _s18TrustedPeersHelper7ChangesV2eeoiySbAC_ACtFZ_0(v35, v36);
      sub_1000D7E78(v36, type metadata accessor for Changes);
      sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029EC90);
      sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029EC90);
      sub_1000D7E78(v35, type metadata accessor for Changes);
      sub_10004015C((uint64_t)v18, (uint64_t *)&unk_10029EC90);
      if (v37) {
        goto LABEL_8;
      }
LABEL_9:
      char v43 = 0;
      return v43 & 1;
    }
    sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029EC90);
    sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029EC90);
    sub_1000D7E78(v35, type metadata accessor for Changes);
LABEL_6:
    sub_10004015C((uint64_t)v18, &qword_10029E440);
    goto LABEL_9;
  }
  sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029EC90);
  sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029EC90);
  if (v34(v33, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_10004015C((uint64_t)v18, (uint64_t *)&unk_10029EC90);
LABEL_8:
  uint64_t v39 = v51;
  uint64_t v38 = v52;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  uint64_t v41 = v49;
  v40(v49, v47, v52);
  uint64_t v42 = v50;
  v40(v50, v48, v38);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v43 = sub_100222250();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v39 + 8);
  v44(v42, v38);
  v44(v41, v38);
  return v43 & 1;
}

uint64_t _s18TrustedPeersHelper12ResetRequestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v80 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v79 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v78 = (char *)&v74 - v9;
  uint64_t v87 = type metadata accessor for Metrics(0);
  uint64_t v84 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v10);
  uint64_t v81 = (uint64_t *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v83, v12);
  uint64_t v88 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_10029F000);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v82 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v85 = (char *)&v74 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v86 = (char *)&v74 - v22;
  uint64_t v23 = type metadata accessor for AccountInfo(0);
  uint64_t v89 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (_DWORD *)((char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_100299F50);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v35 = (char *)&v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v33, v36);
  uint64_t v39 = (char *)&v74 - v38;
  __chkstk_darwin(v37, v40);
  uint64_t v42 = (char *)&v74 - v41;
  uint64_t v43 = *a1;
  uint64_t v44 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    switch(v44)
    {
      case 1:
        if (v43 != 1) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 2:
        if (v43 != 2) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 3:
        if (v43 != 3) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 4:
        if (v43 != 4) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 5:
        if (v43 != 5) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 6:
        if (v43 != 6) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 7:
        if (v43 != 7) {
          goto LABEL_55;
        }
        goto LABEL_6;
      default:
        if (!v43) {
          goto LABEL_6;
        }
        goto LABEL_55;
    }
  }
  if (v43 != v44) {
    goto LABEL_55;
  }
LABEL_6:
  uint64_t v77 = v4;
  if (a1[2] == a2[2] && a1[3] == a2[3] || (char v45 = 0, (sub_100222A30() & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5] || (char v45 = 0, (sub_100222A30() & 1) != 0))
    {
      if (*((unsigned __int8 *)a1 + 48) != *((unsigned __int8 *)a2 + 48)) {
        goto LABEL_55;
      }
      uint64_t v46 = type metadata accessor for ResetRequest(0);
      uint64_t v47 = a1;
      uint64_t v48 = v46;
      uint64_t v49 = *(int *)(v46 + 40);
      uint64_t v75 = v47;
      sub_10000D830((uint64_t)v47 + v49, (uint64_t)v42, &qword_100299F50);
      uint64_t v76 = v48;
      sub_10000D830((uint64_t)a2 + *(int *)(v48 + 40), (uint64_t)v39, &qword_100299F50);
      uint64_t v50 = (uint64_t)&v30[*(int *)(v27 + 48)];
      sub_10000D830((uint64_t)v42, (uint64_t)v30, &qword_100299F50);
      sub_10000D830((uint64_t)v39, v50, &qword_100299F50);
      uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
      if (v51((uint64_t)v30, 1, v23) == 1)
      {
        sub_10004015C((uint64_t)v39, &qword_100299F50);
        sub_10004015C((uint64_t)v42, &qword_100299F50);
        if (v51(v50, 1, v23) == 1)
        {
          sub_10004015C((uint64_t)v30, &qword_100299F50);
          goto LABEL_35;
        }
      }
      else
      {
        sub_10000D830((uint64_t)v30, (uint64_t)v35, &qword_100299F50);
        if (v51(v50, 1, v23) != 1)
        {
          sub_1000D736C(v50, (uint64_t)v26, type metadata accessor for AccountInfo);
          if (*(_DWORD *)v35 != *v26)
          {
            uint64_t v69 = type metadata accessor for AccountInfo;
            sub_1000D7E78((uint64_t)v26, type metadata accessor for AccountInfo);
            uint64_t v70 = &qword_100299F50;
            goto LABEL_53;
          }
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v54 = sub_100222250();
          sub_1000D7E78((uint64_t)v26, type metadata accessor for AccountInfo);
          sub_10004015C((uint64_t)v39, &qword_100299F50);
          sub_10004015C((uint64_t)v42, &qword_100299F50);
          sub_1000D7E78((uint64_t)v35, type metadata accessor for AccountInfo);
          sub_10004015C((uint64_t)v30, &qword_100299F50);
          if ((v54 & 1) == 0) {
            goto LABEL_55;
          }
LABEL_35:
          uint64_t v56 = v75;
          uint64_t v55 = v76;
          uint64_t v42 = v86;
          sub_10000D830((uint64_t)v75 + *(int *)(v76 + 44), (uint64_t)v86, &qword_10029F000);
          uint64_t v39 = v85;
          sub_10000D830((uint64_t)a2 + *(int *)(v55 + 44), (uint64_t)v85, &qword_10029F000);
          uint64_t v30 = v88;
          uint64_t v57 = (uint64_t)&v88[*(int *)(v83 + 48)];
          sub_10000D830((uint64_t)v42, (uint64_t)v88, &qword_10029F000);
          sub_10000D830((uint64_t)v39, v57, &qword_10029F000);
          uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
          uint64_t v59 = v87;
          if (v58((uint64_t)v30, 1, v87) == 1)
          {
            sub_10004015C((uint64_t)v39, &qword_10029F000);
            sub_10004015C((uint64_t)v42, &qword_10029F000);
            if (v58(v57, 1, v59) == 1)
            {
              sub_10004015C((uint64_t)v30, &qword_10029F000);
LABEL_38:
              if (*((unsigned __int8 *)v56 + 49) == *((unsigned __int8 *)a2 + 49))
              {
                uint64_t v60 = v76;
                uint64_t v61 = (uint64_t)v56 + *(int *)(v76 + 36);
                uint64_t v62 = v80;
                uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
                uint64_t v64 = v77;
                char v65 = v78;
                v63(v78, v61, v77);
                uint64_t v66 = (uint64_t)a2 + *(int *)(v60 + 36);
                uint64_t v67 = v79;
                v63(v79, v66, v64);
                sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                char v45 = sub_100222250();
                uint64_t v68 = *(void (**)(char *, uint64_t))(v62 + 8);
                v68(v67, v64);
                v68(v65, v64);
                return v45 & 1;
              }
LABEL_55:
              char v45 = 0;
              return v45 & 1;
            }
            goto LABEL_42;
          }
          uint64_t v35 = v82;
          sub_10000D830((uint64_t)v30, (uint64_t)v82, &qword_10029F000);
          if (v58(v57, 1, v59) == 1)
          {
            sub_10004015C((uint64_t)v39, &qword_10029F000);
            sub_10004015C((uint64_t)v42, &qword_10029F000);
            sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
LABEL_42:
            uint64_t v52 = &qword_10029E3E8;
            uint64_t v53 = (uint64_t)v30;
            goto LABEL_54;
          }
          uint64_t v71 = v81;
          sub_1000D736C(v57, (uint64_t)v81, type metadata accessor for Metrics);
          if (*(void *)v35 == *v71 && *((void *)v35 + 1) == v71[1] || (sub_100222A30())
            && (*((void *)v35 + 2) == v71[2] && *((void *)v35 + 3) == v71[3] || (sub_100222A30() & 1) != 0))
          {
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v72 = sub_100222250();
            sub_1000D7E78((uint64_t)v71, type metadata accessor for Metrics);
            sub_10004015C((uint64_t)v39, &qword_10029F000);
            sub_10004015C((uint64_t)v42, &qword_10029F000);
            sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
            sub_10004015C((uint64_t)v30, &qword_10029F000);
            if ((v72 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_38;
          }
          uint64_t v69 = type metadata accessor for Metrics;
          sub_1000D7E78((uint64_t)v71, type metadata accessor for Metrics);
          uint64_t v70 = &qword_10029F000;
LABEL_53:
          sub_10004015C((uint64_t)v39, v70);
          sub_10004015C((uint64_t)v42, v70);
          sub_1000D7E78((uint64_t)v35, v69);
          uint64_t v53 = (uint64_t)v30;
          uint64_t v52 = v70;
          goto LABEL_54;
        }
        sub_10004015C((uint64_t)v39, &qword_100299F50);
        sub_10004015C((uint64_t)v42, &qword_100299F50);
        sub_1000D7E78((uint64_t)v35, type metadata accessor for AccountInfo);
      }
      uint64_t v52 = &qword_10029E3E0;
      uint64_t v53 = (uint64_t)v30;
LABEL_54:
      sub_10004015C(v53, v52);
      goto LABEL_55;
    }
  }
  return v45 & 1;
}

uint64_t _s18TrustedPeersHelper11AccountInfoV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    uint64_t v13 = type metadata accessor for AccountInfo(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, &a1[*(int *)(v13 + 20)], v4);
    v14(v9, &a2[*(int *)(v13 + 20)], v4);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = sub_100222250();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v9, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s18TrustedPeersHelper10PCSServiceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (sub_10003FE7C(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a2 + 8), *(void *)(a2 + 16)) & 1) != 0)
  {
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      || (char v13 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v14 = type metadata accessor for PCSService(0);
      char v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v12, a1 + *(int *)(v14 + 28), v4);
      v15(v9, a2 + *(int *)(v14 + 28), v4);
      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v13 = sub_100222250();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v9, v4);
      v16(v12, v4);
    }
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s18TrustedPeersHelper6BottleV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_10003FE7C(*a1, a1[1], *a2, a2[1]) & 1) != 0
    && (sub_10003FE7C(a1[2], a1[3], a2[2], a2[3]) & 1) != 0
    && (sub_10003FE7C(a1[4], a1[5], a2[4], a2[5]) & 1) != 0
    && (sub_10003FE7C(a1[6], a1[7], a2[6], a2[7]) & 1) != 0)
  {
    if (a1[8] == a2[8] && a1[9] == a2[9] || (char v13 = 0, (sub_100222A30() & 1) != 0))
    {
      if (a1[10] == a2[10] && a1[11] == a2[11] || (char v13 = 0, (sub_100222A30() & 1) != 0))
      {
        uint64_t v14 = type metadata accessor for Bottle(0);
        char v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v15(v12, (char *)a1 + *(int *)(v14 + 40), v4);
        v15(v9, (char *)a2 + *(int *)(v14 + 40), v4);
        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v13 = sub_100222250();
        uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
        v16(v9, v4);
        v16(v12, v4);
      }
    }
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1000D70A4(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for EscrowPair, (uint64_t (*)(uint64_t, uint64_t))sub_1000961F4);
}

uint64_t sub_1000D70D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = sub_100221DF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  char v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = *(int *)(a3(0) + 20);
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a2 + v17);
  if (v18 == v19
    || (swift_retain(), swift_retain(), char v20 = a4(v18, v19), swift_release(), swift_release(), (v20 & 1) != 0))
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v21(v16, a1, v8);
    v21(v13, a2, v8);
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v22 = sub_100222250();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v13, v8);
    v23(v16, v8);
  }
  else
  {
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t type metadata accessor for ViewKeys(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B260);
}

uint64_t type metadata accessor for ViewKeys._StorageClass(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029D4D0);
}

uint64_t type metadata accessor for ViewKey(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B1C0);
}

uint64_t type metadata accessor for FetchRecoverableTLKSharesResponse.View(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029C518);
}

uint64_t type metadata accessor for ViewKeysRecords(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029B2F0);
}

uint64_t sub_1000D736C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for CurrentCKKSItem(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029D2A0);
}

uint64_t type metadata accessor for CurrentCKKSItemSpecifier(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029D170);
}

uint64_t type metadata accessor for DirectPCSIdentity(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029D038);
}

uint64_t type metadata accessor for PCSService(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CF08);
}

uint64_t type metadata accessor for ResetRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029B7C8);
}

uint64_t type metadata accessor for Metrics(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B730);
}

uint64_t type metadata accessor for EstablishRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B918);
}

uint64_t type metadata accessor for JoinWithVoucherRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BA40);
}

uint64_t type metadata accessor for UpdateTrustRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029BB68);
}

uint64_t type metadata accessor for SetRecoveryKeyRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BCB8);
}

uint64_t type metadata accessor for FetchChangesRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C188);
}

uint64_t type metadata accessor for FetchViableBottlesRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C2B0);
}

uint64_t type metadata accessor for FetchPolicyDocumentsRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C5B8);
}

uint64_t type metadata accessor for GetRepairActionRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C6E0);
}

uint64_t type metadata accessor for GetSupportAppInfoRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CA00);
}

uint64_t type metadata accessor for ResetAccountCDPContentsRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CB38);
}

uint64_t type metadata accessor for AddCustodianRecoveryKeyRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C060);
}

uint64_t type metadata accessor for FetchRecoverableTLKSharesRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C3F0);
}

uint64_t type metadata accessor for RemoveRecoveryKeyRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BE00);
}

uint64_t type metadata accessor for PerformATOPRVActionsRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BF38);
}

uint64_t type metadata accessor for CurrentItemFetchRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029D208);
}

uint64_t type metadata accessor for DirectPCSIdentityFetchRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CFA0);
}

uint64_t type metadata accessor for RemoveUnreadableCKServerDataRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029D3D8);
}

uint64_t _s18TrustedPeersHelper04IdmsA14DevicesVersionV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v50 = (char *)&v47 - v10;
  uint64_t v11 = sub_100221DC0();
  uint64_t v52 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v49 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299638);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  char v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v47 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v47 - v28;
  uint64_t v30 = *(void *)a1;
  uint64_t v31 = *((void *)a1 + 1);
  uint64_t v53 = a1;
  char v54 = a2;
  if (v30 == *(void *)a2 && v31 == *((void *)a2 + 1) || (char v32 = 0, (sub_100222A30() & 1) != 0))
  {
    uint64_t v47 = v8;
    uint64_t v48 = v4;
    uint64_t v33 = type metadata accessor for IdmsTrustedDevicesVersion(0);
    sub_10000D830((uint64_t)&v53[*(int *)(v33 + 24)], (uint64_t)v29, (uint64_t *)&unk_10029ED30);
    sub_10000D830((uint64_t)&v54[*(int *)(v33 + 24)], (uint64_t)v26, (uint64_t *)&unk_10029ED30);
    uint64_t v34 = (uint64_t)&v17[*(int *)(v14 + 48)];
    sub_10000D830((uint64_t)v29, (uint64_t)v17, (uint64_t *)&unk_10029ED30);
    sub_10000D830((uint64_t)v26, v34, (uint64_t *)&unk_10029ED30);
    uint64_t v35 = v52;
    uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    if (v36((uint64_t)v17, 1, v11) == 1)
    {
      sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
      sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
      if (v36(v34, 1, v11) == 1)
      {
        sub_10004015C((uint64_t)v17, (uint64_t *)&unk_10029ED30);
LABEL_11:
        uint64_t v41 = v50;
        uint64_t v40 = v51;
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
        uint64_t v43 = v48;
        v42(v50, &v53[*(int *)(v33 + 20)], v48);
        uint64_t v44 = v47;
        v42(v47, &v54[*(int *)(v33 + 20)], v43);
        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v32 = sub_100222250();
        char v45 = *(void (**)(char *, uint64_t))(v40 + 8);
        v45(v44, v43);
        v45(v41, v43);
        return v32 & 1;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v17, (uint64_t)v22, (uint64_t *)&unk_10029ED30);
      if (v36(v34, 1, v11) != 1)
      {
        uint64_t v37 = v49;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v49, v34, v11);
        sub_1000D8CA4(&qword_100299640, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
        char v38 = sub_100222250();
        uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
        v39(v37, v11);
        sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
        sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
        v39(v22, v11);
        sub_10004015C((uint64_t)v17, (uint64_t *)&unk_10029ED30);
        if (v38) {
          goto LABEL_11;
        }
LABEL_12:
        char v32 = 0;
        return v32 & 1;
      }
      sub_10004015C((uint64_t)v26, (uint64_t *)&unk_10029ED30);
      sub_10004015C((uint64_t)v29, (uint64_t *)&unk_10029ED30);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v11);
    }
    sub_10004015C((uint64_t)v17, &qword_100299638);
    goto LABEL_12;
  }
  return v32 & 1;
}

uint64_t sub_1000D7C4C(uint64_t result)
{
  switch(result)
  {
    case 4:
      result = 3;
      break;
    case 8:
      result = 4;
      break;
    case 16:
      result = 5;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for SignedPeerPermanentInfo(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029AAC8);
}

uint64_t type metadata accessor for SignedPeerStableInfo(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029AB60);
}

uint64_t type metadata accessor for SignedPeerDynamicInfo(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029ABF8);
}

uint64_t type metadata accessor for SignedVoucher(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029AC90);
}

uint64_t type metadata accessor for SignedRecoveryVoucher(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029AD28);
}

uint64_t type metadata accessor for SignedCustodianRecoveryKey(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029ADC0);
}

uint64_t type metadata accessor for IdmsTrustedDevicesVersion(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029AE58);
}

uint64_t type metadata accessor for Peer(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029AEF8);
}

uint64_t sub_1000D7E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D7E78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for PeerDifference.OneOf_Operation(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B078);
}

uint64_t type metadata accessor for PeerDifference(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029AFC8);
}

uint64_t type metadata accessor for TLKShare(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B108);
}

uint64_t type metadata accessor for Bottle(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B390);
}

uint64_t type metadata accessor for EscrowPair(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B438);
}

uint64_t type metadata accessor for EscrowPair._StorageClass(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029D628);
}

uint64_t type metadata accessor for EscrowInformation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029CD00);
}

uint64_t type metadata accessor for EscrowInformation.Metadata(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CDB8);
}

uint64_t type metadata accessor for Changes(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B4C8);
}

uint64_t type metadata accessor for PolicyDocumentKey(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B568);
}

uint64_t type metadata accessor for PolicyDocumentMapEntry(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029B600);
}

uint64_t type metadata accessor for AccountInfo(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B6A0);
}

uint64_t type metadata accessor for ResetResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029B880);
}

uint64_t type metadata accessor for EstablishRequest._StorageClass(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029D748);
}

uint64_t type metadata accessor for EstablishResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029B9A8);
}

uint64_t type metadata accessor for JoinWithVoucherRequest._StorageClass(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029D8C0);
}

uint64_t type metadata accessor for JoinWithVoucherResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BAD0);
}

uint64_t type metadata accessor for UpdateTrustResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BC20);
}

uint64_t type metadata accessor for SetRecoveryKeyResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BD68);
}

uint64_t type metadata accessor for RemoveRecoveryKeyResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BEA8);
}

uint64_t type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029DA70);
}

uint64_t type metadata accessor for AddCustodianRecoveryKeyResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C0F0);
}

uint64_t type metadata accessor for FetchChangesResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C220);
}

uint64_t type metadata accessor for FetchViableBottlesResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C348);
}

uint64_t type metadata accessor for FetchRecoverableTLKSharesResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C488);
}

uint64_t type metadata accessor for FetchPolicyDocumentsResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C650);
}

uint64_t type metadata accessor for EscrowProxyFederationMoveRecordRequest(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C788);
}

uint64_t type metadata accessor for GetRepairActionResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C828);
}

uint64_t type metadata accessor for GetRepairActionResponse._StorageClass(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029DC40);
}

uint64_t sub_1000D8278(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  uint64_t v8 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords) = 0;
  uint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords) = 0;
  char v72 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords) = 0;
  uint64_t v73 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled) = 0;
  uint64_t v74 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares) = 0;
  uint64_t v75 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares) = 0;
  uint64_t v76 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares) = 0;
  uint64_t v77 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled) = 0;
  uint64_t v78 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers) = 0;
  uint64_t v79 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers) = 0;
  uint64_t v80 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers) = 0;
  uint64_t v81 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup) = 0;
  uint64_t v82 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled) = 0;
  uint64_t v83 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords) = 0;
  uint64_t v84 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers) = 0;
  uint64_t v85 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers) = 0;
  uint64_t v86 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords) = 0;
  uint64_t v87 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords) = 0;
  uint64_t v88 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords) = 0;
  uint64_t v89 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed) = 0;
  uint64_t v90 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed) = 0;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v11;
  *(unsigned char *)(v1 + 24) = v12;
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  sub_10000D830(v13, (uint64_t)v6, (uint64_t *)&unk_10029EFF0);
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v6, v7, (uint64_t *)&unk_10029EFF0);
  swift_endAccess();
  uint64_t v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
  swift_beginAccess();
  uint64_t v15 = *v14;
  swift_beginAccess();
  *uint64_t v9 = v15;
  uint64_t v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
  swift_beginAccess();
  uint64_t v17 = *v16;
  swift_beginAccess();
  *uint64_t v10 = v17;
  uint64_t v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = v72;
  swift_beginAccess();
  *uint64_t v20 = v19;
  uint64_t v21 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
  swift_beginAccess();
  LOBYTE(v21) = *v21;
  char v22 = v73;
  swift_beginAccess();
  *char v22 = (_BYTE)v21;
  uint64_t v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
  swift_beginAccess();
  uint64_t v24 = *v23;
  uint64_t v25 = v74;
  swift_beginAccess();
  *uint64_t v25 = v24;
  uint64_t v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
  swift_beginAccess();
  uint64_t v27 = *v26;
  uint64_t v28 = v75;
  swift_beginAccess();
  *uint64_t v28 = v27;
  uint64_t v29 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
  swift_beginAccess();
  uint64_t v30 = *v29;
  uint64_t v31 = v76;
  swift_beginAccess();
  *uint64_t v31 = v30;
  char v32 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
  swift_beginAccess();
  LOBYTE(v32) = *v32;
  uint64_t v33 = v77;
  swift_beginAccess();
  *uint64_t v33 = (_BYTE)v32;
  uint64_t v34 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
  swift_beginAccess();
  uint64_t v35 = *v34;
  uint64_t v36 = v78;
  swift_beginAccess();
  *uint64_t v36 = v35;
  uint64_t v37 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
  swift_beginAccess();
  uint64_t v38 = *v37;
  uint64_t v39 = v79;
  swift_beginAccess();
  *uint64_t v39 = v38;
  uint64_t v40 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
  swift_beginAccess();
  uint64_t v41 = *v40;
  uint64_t v42 = v80;
  swift_beginAccess();
  *uint64_t v42 = v41;
  uint64_t v43 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
  swift_beginAccess();
  uint64_t v44 = *v43;
  char v45 = v81;
  swift_beginAccess();
  void *v45 = v44;
  uint64_t v46 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
  swift_beginAccess();
  LOBYTE(v46) = *v46;
  uint64_t v47 = v82;
  swift_beginAccess();
  *uint64_t v47 = (_BYTE)v46;
  uint64_t v48 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
  swift_beginAccess();
  uint64_t v49 = *v48;
  uint64_t v50 = v83;
  swift_beginAccess();
  *uint64_t v50 = v49;
  uint64_t v51 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
  swift_beginAccess();
  uint64_t v52 = *v51;
  uint64_t v53 = v84;
  swift_beginAccess();
  *uint64_t v53 = v52;
  char v54 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
  swift_beginAccess();
  uint64_t v55 = *v54;
  uint64_t v56 = v85;
  swift_beginAccess();
  *uint64_t v56 = v55;
  uint64_t v57 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
  swift_beginAccess();
  uint64_t v58 = *v57;
  uint64_t v59 = v86;
  swift_beginAccess();
  void *v59 = v58;
  uint64_t v60 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
  swift_beginAccess();
  uint64_t v61 = *v60;
  uint64_t v62 = v87;
  swift_beginAccess();
  *uint64_t v62 = v61;
  uint64_t v63 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
  swift_beginAccess();
  uint64_t v64 = *v63;
  char v65 = v88;
  swift_beginAccess();
  void *v65 = v64;
  uint64_t v66 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
  swift_beginAccess();
  LOBYTE(v66) = *v66;
  uint64_t v67 = v89;
  swift_beginAccess();
  *uint64_t v67 = (_BYTE)v66;
  uint64_t v68 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
  swift_beginAccess();
  LOBYTE(v68) = *v68;
  uint64_t v69 = v90;
  swift_beginAccess();
  unsigned char *v69 = (_BYTE)v68;
  return v1;
}

uint64_t type metadata accessor for SupportAppView(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C8B8);
}

uint64_t type metadata accessor for SupportAppDevice(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029C950);
}

uint64_t type metadata accessor for GetSupportAppInfoResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CA98);
}

uint64_t type metadata accessor for PasscodeGeneration(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CC70);
}

uint64_t type metadata accessor for EscrowInformation.Metadata._StorageClass(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029DFD8);
}

uint64_t type metadata accessor for EscrowInformation.Metadata.ClientMetadata(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CE48);
}

uint64_t sub_1000D8B9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000046DC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D8C00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000046DC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for DirectPCSIdentityFetchResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029D0D8);
}

uint64_t type metadata accessor for CurrentItemFetchResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029D340);
}

uint64_t sub_1000D8CA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D8CEC()
{
  unint64_t result = qword_10029A148;
  if (!qword_10029A148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A148);
  }
  return result;
}

unint64_t sub_1000D8D40()
{
  unint64_t result = qword_10029A1A8;
  if (!qword_10029A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A1A8);
  }
  return result;
}

uint64_t type metadata accessor for PerformATOPRVActionsResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029BFD0);
}

unint64_t sub_1000D8DB4()
{
  unint64_t result = qword_10029A250;
  if (!qword_10029A250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A250);
  }
  return result;
}

unint64_t sub_1000D8E08()
{
  unint64_t result = qword_10029A2E0;
  if (!qword_10029A2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A2E0);
  }
  return result;
}

uint64_t type metadata accessor for ResetAccountCDPContentsResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029CBE0);
}

unint64_t sub_1000D8E7C()
{
  unint64_t result = qword_10029A320;
  if (!qword_10029A320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A320);
  }
  return result;
}

unint64_t sub_1000D8ED0()
{
  unint64_t result = qword_10029A328;
  if (!qword_10029A328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A328);
  }
  return result;
}

uint64_t type metadata accessor for RemoveUnreadableCKServerDataResponse(uint64_t a1)
{
  return sub_1000D8F44(a1, qword_10029D470);
}

uint64_t sub_1000D8F44(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000D8F80()
{
  unint64_t result = qword_10029A3B8;
  if (!qword_10029A3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A3B8);
  }
  return result;
}

unint64_t sub_1000D8FD8()
{
  unint64_t result = qword_10029A3C0;
  if (!qword_10029A3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A3C0);
  }
  return result;
}

uint64_t sub_1000D902C()
{
  return sub_1000D98A4(&qword_10029A3C8, &qword_10029A3D0);
}

unint64_t sub_1000D9058()
{
  unint64_t result = qword_10029A3D8;
  if (!qword_10029A3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A3D8);
  }
  return result;
}

unint64_t sub_1000D90B0()
{
  unint64_t result = qword_10029A3E0;
  if (!qword_10029A3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A3E0);
  }
  return result;
}

unint64_t sub_1000D9108()
{
  unint64_t result = qword_10029A3E8;
  if (!qword_10029A3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A3E8);
  }
  return result;
}

uint64_t sub_1000D915C()
{
  return sub_1000D98A4(&qword_10029A3F0, &qword_10029A3F8);
}

unint64_t sub_1000D9188()
{
  unint64_t result = qword_10029A400;
  if (!qword_10029A400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A400);
  }
  return result;
}

unint64_t sub_1000D91E0()
{
  unint64_t result = qword_10029A408;
  if (!qword_10029A408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A408);
  }
  return result;
}

unint64_t sub_1000D9238()
{
  unint64_t result = qword_10029A410;
  if (!qword_10029A410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A410);
  }
  return result;
}

uint64_t sub_1000D928C()
{
  return sub_1000D98A4(&qword_10029A418, &qword_10029A420);
}

unint64_t sub_1000D92B8()
{
  unint64_t result = qword_10029A428;
  if (!qword_10029A428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A428);
  }
  return result;
}

unint64_t sub_1000D9310()
{
  unint64_t result = qword_10029A430;
  if (!qword_10029A430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A430);
  }
  return result;
}

unint64_t sub_1000D9368()
{
  unint64_t result = qword_10029A438;
  if (!qword_10029A438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A438);
  }
  return result;
}

uint64_t sub_1000D93BC()
{
  return sub_1000D98A4(&qword_10029A440, &qword_10029A448);
}

unint64_t sub_1000D93E8()
{
  unint64_t result = qword_10029A450;
  if (!qword_10029A450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A450);
  }
  return result;
}

unint64_t sub_1000D9440()
{
  unint64_t result = qword_10029A458;
  if (!qword_10029A458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A458);
  }
  return result;
}

unint64_t sub_1000D9498()
{
  unint64_t result = qword_10029A460;
  if (!qword_10029A460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A460);
  }
  return result;
}

uint64_t sub_1000D94EC()
{
  return sub_1000D98A4(&qword_10029A468, &qword_10029A470);
}

unint64_t sub_1000D9518()
{
  unint64_t result = qword_10029A478;
  if (!qword_10029A478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A478);
  }
  return result;
}

unint64_t sub_1000D9570()
{
  unint64_t result = qword_10029A480;
  if (!qword_10029A480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A480);
  }
  return result;
}

unint64_t sub_1000D95C8()
{
  unint64_t result = qword_10029A488;
  if (!qword_10029A488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A488);
  }
  return result;
}

uint64_t sub_1000D961C()
{
  return sub_1000D98A4(&qword_10029A490, &qword_10029A498);
}

unint64_t sub_1000D9648()
{
  unint64_t result = qword_10029A4A0;
  if (!qword_10029A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A4A0);
  }
  return result;
}

unint64_t sub_1000D96A0()
{
  unint64_t result = qword_10029A4A8;
  if (!qword_10029A4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A4A8);
  }
  return result;
}

unint64_t sub_1000D96F8()
{
  unint64_t result = qword_10029A4B0;
  if (!qword_10029A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A4B0);
  }
  return result;
}

uint64_t sub_1000D974C()
{
  return sub_1000D98A4(&qword_10029A4B8, &qword_10029A4C0);
}

unint64_t sub_1000D9778()
{
  unint64_t result = qword_10029A4C8;
  if (!qword_10029A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A4C8);
  }
  return result;
}

unint64_t sub_1000D97D0()
{
  unint64_t result = qword_10029A4D0;
  if (!qword_10029A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A4D0);
  }
  return result;
}

unint64_t sub_1000D9828()
{
  unint64_t result = qword_10029A4D8;
  if (!qword_10029A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A4D8);
  }
  return result;
}

uint64_t sub_1000D987C()
{
  return sub_1000D98A4(&qword_10029A4E0, &qword_10029A4E8);
}

uint64_t sub_1000D98A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004870(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D98F8()
{
  unint64_t result = qword_10029A4F0;
  if (!qword_10029A4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A4F0);
  }
  return result;
}

uint64_t sub_1000D994C()
{
  return sub_1000D8CA4(&qword_10029A4F8, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t sub_1000D9994()
{
  return sub_1000D8CA4(&qword_10029A500, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t sub_1000D99DC()
{
  return sub_1000D8CA4(&qword_10029A0F8, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t sub_1000D9A24()
{
  return sub_1000D8CA4(&qword_10029A508, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t sub_1000D9A6C()
{
  return sub_1000D8CA4(&qword_10029A510, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000D9AB4()
{
  return sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000D9AFC()
{
  return sub_1000D8CA4(&qword_10029A100, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000D9B44()
{
  return sub_1000D8CA4(&qword_10029A520, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000D9B8C()
{
  return sub_1000D8CA4(&qword_10029A528, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_1000D9BD4()
{
  return sub_1000D8CA4(&qword_10029A530, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_1000D9C1C()
{
  return sub_1000D8CA4(&qword_10029A108, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_1000D9C64()
{
  return sub_1000D8CA4(&qword_10029A538, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_1000D9CAC()
{
  return sub_1000D8CA4(&qword_10029A540, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
}

uint64_t sub_1000D9CF4()
{
  return sub_1000D8CA4(&qword_10029F010, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
}

uint64_t sub_1000D9D3C()
{
  return sub_1000D8CA4(&qword_10029A110, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
}

uint64_t sub_1000D9D84()
{
  return sub_1000D8CA4(&qword_10029A548, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
}

uint64_t sub_1000D9DCC()
{
  return sub_1000D8CA4(&qword_10029A550, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);
}

uint64_t sub_1000D9E14()
{
  return sub_1000D8CA4(&qword_10029A558, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);
}

uint64_t sub_1000D9E5C()
{
  return sub_1000D8CA4(&qword_10029A118, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);
}

uint64_t sub_1000D9EA4()
{
  return sub_1000D8CA4(&qword_10029A560, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);
}

uint64_t sub_1000D9EEC()
{
  return sub_1000D8CA4(&qword_10029A568, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t sub_1000D9F34()
{
  return sub_1000D8CA4(&qword_10029A570, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t sub_1000D9F7C()
{
  return sub_1000D8CA4(&qword_10029A120, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t sub_1000D9FC4()
{
  return sub_1000D8CA4(&qword_10029A578, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t sub_1000DA00C()
{
  return sub_1000D8CA4(&qword_10029A580, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
}

uint64_t sub_1000DA054()
{
  return sub_1000D8CA4(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
}

uint64_t sub_1000DA09C()
{
  return sub_1000D8CA4(&qword_10029A128, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
}

uint64_t sub_1000DA0E4()
{
  return sub_1000D8CA4(&qword_10029A590, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
}

uint64_t sub_1000DA12C()
{
  return sub_1000D8CA4(&qword_10029A598, (void (*)(uint64_t))type metadata accessor for Peer);
}

uint64_t sub_1000DA174()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
}

uint64_t sub_1000DA1BC()
{
  return sub_1000D8CA4(&qword_10029A130, (void (*)(uint64_t))type metadata accessor for Peer);
}

uint64_t sub_1000DA204()
{
  return sub_1000D8CA4(&qword_10029A5A0, (void (*)(uint64_t))type metadata accessor for Peer);
}

uint64_t sub_1000DA24C()
{
  return sub_1000D8CA4(&qword_10029A5A8, (void (*)(uint64_t))type metadata accessor for PeerDifference);
}

uint64_t sub_1000DA294()
{
  return sub_1000D8CA4(&qword_10029A178, (void (*)(uint64_t))type metadata accessor for PeerDifference);
}

uint64_t sub_1000DA2DC()
{
  return sub_1000D8CA4(&qword_10029A138, (void (*)(uint64_t))type metadata accessor for PeerDifference);
}

uint64_t sub_1000DA324()
{
  return sub_1000D8CA4(&qword_10029A5B0, (void (*)(uint64_t))type metadata accessor for PeerDifference);
}

uint64_t sub_1000DA36C()
{
  return sub_1000D8CA4(&qword_10029A5B8, (void (*)(uint64_t))type metadata accessor for TLKShare);
}

uint64_t sub_1000DA3B4()
{
  return sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
}

uint64_t sub_1000DA3FC()
{
  return sub_1000D8CA4(&qword_10029A140, (void (*)(uint64_t))type metadata accessor for TLKShare);
}

uint64_t sub_1000DA444()
{
  return sub_1000D8CA4(&qword_10029A5C0, (void (*)(uint64_t))type metadata accessor for TLKShare);
}

uint64_t sub_1000DA48C()
{
  return sub_1000D8CA4(&qword_10029A5C8, (void (*)(uint64_t))type metadata accessor for ViewKey);
}

uint64_t sub_1000DA4D4()
{
  return sub_1000D8CA4((unint64_t *)&qword_1002997F0, (void (*)(uint64_t))type metadata accessor for ViewKey);
}

uint64_t sub_1000DA51C()
{
  return sub_1000D8CA4(&qword_10029A150, (void (*)(uint64_t))type metadata accessor for ViewKey);
}

uint64_t sub_1000DA564()
{
  return sub_1000D8CA4(&qword_10029A5D0, (void (*)(uint64_t))type metadata accessor for ViewKey);
}

uint64_t sub_1000DA5AC()
{
  return sub_1000D8CA4(&qword_10029A5D8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
}

uint64_t sub_1000DA5F4()
{
  return sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
}

uint64_t sub_1000DA63C()
{
  return sub_1000D8CA4(&qword_10029A158, (void (*)(uint64_t))type metadata accessor for ViewKeys);
}

uint64_t sub_1000DA684()
{
  return sub_1000D8CA4(&qword_10029A5E0, (void (*)(uint64_t))type metadata accessor for ViewKeys);
}

uint64_t sub_1000DA6CC()
{
  return sub_1000D8CA4(&qword_10029A5E8, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);
}

uint64_t sub_1000DA714()
{
  return sub_1000D8CA4(&qword_10029A5F0, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);
}

uint64_t sub_1000DA75C()
{
  return sub_1000D8CA4(&qword_10029A160, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);
}

uint64_t sub_1000DA7A4()
{
  return sub_1000D8CA4(&qword_10029A5F8, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);
}

uint64_t sub_1000DA7EC()
{
  return sub_1000D8CA4(&qword_10029A600, (void (*)(uint64_t))type metadata accessor for Bottle);
}

uint64_t sub_1000DA834()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);
}

uint64_t sub_1000DA87C()
{
  return sub_1000D8CA4(&qword_10029A168, (void (*)(uint64_t))type metadata accessor for Bottle);
}

uint64_t sub_1000DA8C4()
{
  return sub_1000D8CA4(&qword_10029A608, (void (*)(uint64_t))type metadata accessor for Bottle);
}

uint64_t sub_1000DA90C()
{
  return sub_1000D8CA4(&qword_10029A610, (void (*)(uint64_t))type metadata accessor for EscrowPair);
}

uint64_t sub_1000DA954()
{
  return sub_1000D8CA4(&qword_10029A260, (void (*)(uint64_t))type metadata accessor for EscrowPair);
}

uint64_t sub_1000DA99C()
{
  return sub_1000D8CA4(&qword_10029A170, (void (*)(uint64_t))type metadata accessor for EscrowPair);
}

uint64_t sub_1000DA9E4()
{
  return sub_1000D8CA4(&qword_10029A618, (void (*)(uint64_t))type metadata accessor for EscrowPair);
}

uint64_t sub_1000DAA2C()
{
  return sub_1000D8CA4(&qword_10029A620, (void (*)(uint64_t))type metadata accessor for Changes);
}

uint64_t sub_1000DAA74()
{
  return sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
}

uint64_t sub_1000DAABC()
{
  return sub_1000D8CA4(&qword_10029A180, (void (*)(uint64_t))type metadata accessor for Changes);
}

uint64_t sub_1000DAB04()
{
  return sub_1000D8CA4(&qword_10029A630, (void (*)(uint64_t))type metadata accessor for Changes);
}

uint64_t sub_1000DAB4C()
{
  return sub_1000D8CA4(&qword_10029A638, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
}

uint64_t sub_1000DAB94()
{
  return sub_1000D8CA4(&qword_10029A298, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
}

uint64_t sub_1000DABDC()
{
  return sub_1000D8CA4(&qword_10029A188, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
}

uint64_t sub_1000DAC24()
{
  return sub_1000D8CA4(&qword_10029A640, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
}

uint64_t sub_1000DAC6C()
{
  return sub_1000D8CA4(&qword_10029A648, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);
}

uint64_t sub_1000DACB4()
{
  return sub_1000D8CA4(&qword_10029A2A8, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);
}

uint64_t sub_1000DACFC()
{
  return sub_1000D8CA4(&qword_10029A190, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);
}

uint64_t sub_1000DAD44()
{
  return sub_1000D8CA4(&qword_10029A650, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);
}

uint64_t sub_1000DAD8C()
{
  return sub_1000D8CA4(&qword_10029A658, (void (*)(uint64_t))type metadata accessor for AccountInfo);
}

uint64_t sub_1000DADD4()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
}

uint64_t sub_1000DAE1C()
{
  return sub_1000D8CA4(&qword_10029A198, (void (*)(uint64_t))type metadata accessor for AccountInfo);
}

uint64_t sub_1000DAE64()
{
  return sub_1000D8CA4(&qword_10029A660, (void (*)(uint64_t))type metadata accessor for AccountInfo);
}

uint64_t sub_1000DAEAC()
{
  return sub_1000D8CA4(&qword_10029A668, (void (*)(uint64_t))type metadata accessor for Metrics);
}

uint64_t sub_1000DAEF4()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
}

uint64_t sub_1000DAF3C()
{
  return sub_1000D8CA4(&qword_10029A1A0, (void (*)(uint64_t))type metadata accessor for Metrics);
}

uint64_t sub_1000DAF84()
{
  return sub_1000D8CA4(&qword_10029A670, (void (*)(uint64_t))type metadata accessor for Metrics);
}

uint64_t sub_1000DAFCC()
{
  return sub_1000D8CA4(&qword_10029A678, (void (*)(uint64_t))type metadata accessor for ResetRequest);
}

uint64_t sub_1000DB014()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029F080, (void (*)(uint64_t))type metadata accessor for ResetRequest);
}

uint64_t sub_1000DB05C()
{
  return sub_1000D8CA4(&qword_10029A1B0, (void (*)(uint64_t))type metadata accessor for ResetRequest);
}

uint64_t sub_1000DB0A4()
{
  return sub_1000D8CA4(&qword_10029A680, (void (*)(uint64_t))type metadata accessor for ResetRequest);
}

uint64_t sub_1000DB0EC()
{
  return sub_1000D8CA4(&qword_10029A688, (void (*)(uint64_t))type metadata accessor for ResetResponse);
}

uint64_t sub_1000DB134()
{
  return sub_1000D8CA4(&qword_10029A690, (void (*)(uint64_t))type metadata accessor for ResetResponse);
}

uint64_t sub_1000DB17C()
{
  return sub_1000D8CA4(&qword_10029A1B8, (void (*)(uint64_t))type metadata accessor for ResetResponse);
}

uint64_t sub_1000DB1C4()
{
  return sub_1000D8CA4(&qword_10029A698, (void (*)(uint64_t))type metadata accessor for ResetResponse);
}

uint64_t sub_1000DB20C()
{
  return sub_1000D8CA4(&qword_10029A6A0, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
}

uint64_t sub_1000DB254()
{
  return sub_1000D8CA4(&qword_10029A6A8, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
}

uint64_t sub_1000DB29C()
{
  return sub_1000D8CA4(&qword_10029A1C0, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
}

uint64_t sub_1000DB2E4()
{
  return sub_1000D8CA4(&qword_10029A6B0, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
}

uint64_t sub_1000DB32C()
{
  return sub_1000D8CA4(&qword_10029A6B8, (void (*)(uint64_t))type metadata accessor for EstablishResponse);
}

uint64_t sub_1000DB374()
{
  return sub_1000D8CA4(&qword_10029A6C0, (void (*)(uint64_t))type metadata accessor for EstablishResponse);
}

uint64_t sub_1000DB3BC()
{
  return sub_1000D8CA4(&qword_10029A1D0, (void (*)(uint64_t))type metadata accessor for EstablishResponse);
}

uint64_t sub_1000DB404()
{
  return sub_1000D8CA4(&qword_10029A6C8, (void (*)(uint64_t))type metadata accessor for EstablishResponse);
}

uint64_t sub_1000DB44C()
{
  return sub_1000D8CA4(&qword_10029A6D0, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
}

uint64_t sub_1000DB494()
{
  return sub_1000D8CA4(&qword_10029A6D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
}

uint64_t sub_1000DB4DC()
{
  return sub_1000D8CA4(&qword_10029A1D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
}

uint64_t sub_1000DB524()
{
  return sub_1000D8CA4(&qword_10029A6E0, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
}

uint64_t sub_1000DB56C()
{
  return sub_1000D8CA4(&qword_10029A6E8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);
}

uint64_t sub_1000DB5B4()
{
  return sub_1000D8CA4(&qword_10029A6F0, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);
}

uint64_t sub_1000DB5FC()
{
  return sub_1000D8CA4(&qword_10029A1E0, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);
}

uint64_t sub_1000DB644()
{
  return sub_1000D8CA4(&qword_10029A6F8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);
}

uint64_t sub_1000DB68C()
{
  return sub_1000D8CA4(&qword_10029A700, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
}

uint64_t sub_1000DB6D4()
{
  return sub_1000D8CA4(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
}

uint64_t sub_1000DB71C()
{
  return sub_1000D8CA4(&qword_10029A1F0, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
}

uint64_t sub_1000DB764()
{
  return sub_1000D8CA4(&qword_10029A710, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
}

uint64_t sub_1000DB7AC()
{
  return sub_1000D8CA4(&qword_10029A718, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);
}

uint64_t sub_1000DB7F4()
{
  return sub_1000D8CA4(&qword_10029A720, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);
}

uint64_t sub_1000DB83C()
{
  return sub_1000D8CA4(&qword_10029A1F8, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);
}

uint64_t sub_1000DB884()
{
  return sub_1000D8CA4(&qword_10029A728, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);
}

uint64_t sub_1000DB8CC()
{
  return sub_1000D8CA4(&qword_10029A730, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t sub_1000DB914()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029ED40, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t sub_1000DB95C()
{
  return sub_1000D8CA4(&qword_10029A200, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t sub_1000DB9A4()
{
  return sub_1000D8CA4(&qword_10029A738, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t sub_1000DB9EC()
{
  return sub_1000D8CA4(&qword_10029A740, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t sub_1000DBA34()
{
  return sub_1000D8CA4(&qword_10029A748, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t sub_1000DBA7C()
{
  return sub_1000D8CA4(&qword_10029A208, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t sub_1000DBAC4()
{
  return sub_1000D8CA4(&qword_10029A750, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t sub_1000DBB0C()
{
  return sub_1000D8CA4(&qword_10029A758, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
}

uint64_t sub_1000DBB54()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029EC80, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
}

uint64_t sub_1000DBB9C()
{
  return sub_1000D8CA4(&qword_10029A210, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
}

uint64_t sub_1000DBBE4()
{
  return sub_1000D8CA4(&qword_10029A760, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
}

uint64_t sub_1000DBC2C()
{
  return sub_1000D8CA4(&qword_10029A768, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);
}

uint64_t sub_1000DBC74()
{
  return sub_1000D8CA4(&qword_10029A770, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);
}

uint64_t sub_1000DBCBC()
{
  return sub_1000D8CA4(&qword_10029A218, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);
}

uint64_t sub_1000DBD04()
{
  return sub_1000D8CA4(&qword_10029A778, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);
}

uint64_t sub_1000DBD4C()
{
  return sub_1000D8CA4(&qword_10029A780, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
}

uint64_t sub_1000DBD94()
{
  return sub_1000D8CA4(&qword_10029A788, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
}

uint64_t sub_1000DBDDC()
{
  return sub_1000D8CA4(&qword_10029A220, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
}

uint64_t sub_1000DBE24()
{
  return sub_1000D8CA4(&qword_10029A790, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
}

uint64_t sub_1000DBE6C()
{
  return sub_1000D8CA4(&qword_10029A798, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);
}

uint64_t sub_1000DBEB4()
{
  return sub_1000D8CA4(&qword_10029A7A0, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);
}

uint64_t sub_1000DBEFC()
{
  return sub_1000D8CA4(&qword_10029A228, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);
}

uint64_t sub_1000DBF44()
{
  return sub_1000D8CA4(&qword_10029A7A8, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);
}

uint64_t sub_1000DBF8C()
{
  return sub_1000D8CA4(&qword_10029A7B0, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t sub_1000DBFD4()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029F070, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t sub_1000DC01C()
{
  return sub_1000D8CA4(&qword_10029A230, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t sub_1000DC064()
{
  return sub_1000D8CA4(&qword_10029A7B8, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t sub_1000DC0AC()
{
  return sub_1000D8CA4(&qword_10029A7C0, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);
}

uint64_t sub_1000DC0F4()
{
  return sub_1000D8CA4(&qword_10029A7C8, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);
}

uint64_t sub_1000DC13C()
{
  return sub_1000D8CA4(&qword_10029A238, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);
}

uint64_t sub_1000DC184()
{
  return sub_1000D8CA4(&qword_10029A7D0, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);
}

uint64_t sub_1000DC1CC()
{
  return sub_1000D8CA4(&qword_10029A7D8, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1000DC214()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029EFB0, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1000DC25C()
{
  return sub_1000D8CA4(&qword_10029A240, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1000DC2A4()
{
  return sub_1000D8CA4(&qword_10029A7E0, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1000DC2EC()
{
  return sub_1000D8CA4(&qword_10029A7E8, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);
}

uint64_t sub_1000DC334()
{
  return sub_1000D8CA4(&qword_10029A7F0, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);
}

uint64_t sub_1000DC37C()
{
  return sub_1000D8CA4(&qword_10029A248, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);
}

uint64_t sub_1000DC3C4()
{
  return sub_1000D8CA4(&qword_10029A7F8, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);
}

uint64_t sub_1000DC40C()
{
  return sub_1000D8CA4(&qword_10029A800, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
}

uint64_t sub_1000DC454()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029F020, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
}

uint64_t sub_1000DC49C()
{
  return sub_1000D8CA4(&qword_10029A258, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
}

uint64_t sub_1000DC4E4()
{
  return sub_1000D8CA4(&qword_10029A808, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
}

uint64_t sub_1000DC52C()
{
  return sub_1000D8CA4(&qword_10029A810, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);
}

uint64_t sub_1000DC574()
{
  return sub_1000D8CA4(&qword_10029A818, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);
}

uint64_t sub_1000DC5BC()
{
  return sub_1000D8CA4(&qword_10029A270, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);
}

uint64_t sub_1000DC604()
{
  return sub_1000D8CA4(&qword_10029A820, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);
}

uint64_t sub_1000DC64C()
{
  return sub_1000D8CA4(&qword_10029A828, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1000DC694()
{
  return sub_1000D8CA4(&qword_10029A830, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1000DC6DC()
{
  return sub_1000D8CA4(&qword_10029A278, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1000DC724()
{
  return sub_1000D8CA4(&qword_10029A838, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1000DC76C()
{
  return sub_1000D8CA4(&qword_10029A840, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);
}

uint64_t sub_1000DC7B4()
{
  return sub_1000D8CA4(&qword_10029A848, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);
}

uint64_t sub_1000DC7FC()
{
  return sub_1000D8CA4(&qword_10029A288, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);
}

uint64_t sub_1000DC844()
{
  return sub_1000D8CA4(&qword_10029A850, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);
}

uint64_t sub_1000DC88C()
{
  return sub_1000D8CA4(&qword_10029A858, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);
}

uint64_t sub_1000DC8D4()
{
  return sub_1000D8CA4(&qword_10029A280, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);
}

uint64_t sub_1000DC91C()
{
  return sub_1000D8CA4(&qword_10029A290, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);
}

uint64_t sub_1000DC964()
{
  return sub_1000D8CA4(&qword_10029A860, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);
}

uint64_t sub_1000DC9AC()
{
  return sub_1000D8CA4(&qword_10029A868, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t sub_1000DC9F4()
{
  return sub_1000D8CA4(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t sub_1000DCA3C()
{
  return sub_1000D8CA4(&qword_10029A2A0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t sub_1000DCA84()
{
  return sub_1000D8CA4(&qword_10029A870, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t sub_1000DCACC()
{
  return sub_1000D8CA4(&qword_10029A878, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);
}

uint64_t sub_1000DCB14()
{
  return sub_1000D8CA4(&qword_10029A880, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);
}

uint64_t sub_1000DCB5C()
{
  return sub_1000D8CA4(&qword_10029A2B0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);
}

uint64_t sub_1000DCBA4()
{
  return sub_1000D8CA4(&qword_10029A888, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);
}

uint64_t sub_1000DCBEC()
{
  return sub_1000D8CA4(&qword_10029A890, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
}

uint64_t sub_1000DCC34()
{
  return sub_1000D8CA4(&qword_10029A898, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
}

uint64_t sub_1000DCC7C()
{
  return sub_1000D8CA4(&qword_10029A2B8, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
}

uint64_t sub_1000DCCC4()
{
  return sub_1000D8CA4(&qword_10029A8A0, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
}

uint64_t sub_1000DCD0C()
{
  return sub_1000D8CA4(&qword_10029A8A8, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

uint64_t sub_1000DCD54()
{
  return sub_1000D8CA4(&qword_10029A8B0, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

uint64_t sub_1000DCD9C()
{
  return sub_1000D8CA4(&qword_10029A2C0, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

uint64_t sub_1000DCDE4()
{
  return sub_1000D8CA4(&qword_10029A8B8, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

uint64_t sub_1000DCE2C()
{
  return sub_1000D8CA4(&qword_10029A8C0, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);
}

uint64_t sub_1000DCE74()
{
  return sub_1000D8CA4(&qword_10029A8C8, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);
}

uint64_t sub_1000DCEBC()
{
  return sub_1000D8CA4(&qword_10029A2C8, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);
}

uint64_t sub_1000DCF04()
{
  return sub_1000D8CA4(&qword_10029A8D0, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);
}

uint64_t sub_1000DCF4C()
{
  return sub_1000D8CA4(&qword_10029A8D8, (void (*)(uint64_t))type metadata accessor for SupportAppView);
}

uint64_t sub_1000DCF94()
{
  return sub_1000D8CA4(&qword_10029A2D8, (void (*)(uint64_t))type metadata accessor for SupportAppView);
}

uint64_t sub_1000DCFDC()
{
  return sub_1000D8CA4(&qword_10029A2D0, (void (*)(uint64_t))type metadata accessor for SupportAppView);
}

uint64_t sub_1000DD024()
{
  return sub_1000D8CA4(&qword_10029A8E0, (void (*)(uint64_t))type metadata accessor for SupportAppView);
}

uint64_t sub_1000DD06C()
{
  return sub_1000D8CA4(&qword_10029A8E8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);
}

uint64_t sub_1000DD0B4()
{
  return sub_1000D8CA4(&qword_10029A2F8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);
}

uint64_t sub_1000DD0FC()
{
  return sub_1000D8CA4(&qword_10029A2E8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);
}

uint64_t sub_1000DD144()
{
  return sub_1000D8CA4(&qword_10029A8F0, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);
}

uint64_t sub_1000DD18C()
{
  return sub_1000D8CA4(&qword_10029A8F8, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t sub_1000DD1D4()
{
  return sub_1000D8CA4(&qword_10029A900, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t sub_1000DD21C()
{
  return sub_1000D8CA4(&qword_10029A2F0, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t sub_1000DD264()
{
  return sub_1000D8CA4(&qword_10029A908, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t sub_1000DD2AC()
{
  return sub_1000D8CA4(&qword_10029A910, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);
}

uint64_t sub_1000DD2F4()
{
  return sub_1000D8CA4(&qword_10029A918, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);
}

uint64_t sub_1000DD33C()
{
  return sub_1000D8CA4(&qword_10029A300, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);
}

uint64_t sub_1000DD384()
{
  return sub_1000D8CA4(&qword_10029A920, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);
}

uint64_t sub_1000DD3CC()
{
  return sub_1000D8CA4(&qword_10029A928, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1000DD414()
{
  return sub_1000D8CA4(&qword_10029A930, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1000DD45C()
{
  return sub_1000D8CA4(&qword_10029A308, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1000DD4A4()
{
  return sub_1000D8CA4(&qword_10029A938, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1000DD4EC()
{
  return sub_1000D8CA4(&qword_10029A940, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);
}

uint64_t sub_1000DD534()
{
  return sub_1000D8CA4(&qword_10029A948, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);
}

uint64_t sub_1000DD57C()
{
  return sub_1000D8CA4(&qword_10029A310, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);
}

uint64_t sub_1000DD5C4()
{
  return sub_1000D8CA4(&qword_10029A950, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);
}

uint64_t sub_1000DD60C()
{
  return sub_1000D8CA4(&qword_10029A958, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);
}

uint64_t sub_1000DD654()
{
  return sub_1000D8CA4(&qword_10029A960, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);
}

uint64_t sub_1000DD69C()
{
  return sub_1000D8CA4(&qword_10029A318, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);
}

uint64_t sub_1000DD6E4()
{
  return sub_1000D8CA4(&qword_10029A968, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);
}

uint64_t sub_1000DD72C()
{
  return sub_1000D8CA4(&qword_10029A970, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
}

uint64_t sub_1000DD774()
{
  return sub_1000D8CA4(&qword_10029A268, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
}

uint64_t sub_1000DD7BC()
{
  return sub_1000D8CA4(&qword_10029A330, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
}

uint64_t sub_1000DD804()
{
  return sub_1000D8CA4(&qword_10029A978, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
}

uint64_t sub_1000DD84C()
{
  return sub_1000D8CA4(&qword_10029A980, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);
}

uint64_t sub_1000DD894()
{
  return sub_1000D8CA4(&qword_10029A988, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);
}

uint64_t sub_1000DD8DC()
{
  return sub_1000D8CA4(&qword_10029A338, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);
}

uint64_t sub_1000DD924()
{
  return sub_1000D8CA4(&qword_10029A990, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);
}

uint64_t sub_1000DD96C()
{
  return sub_1000D8CA4(&qword_10029A998, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

uint64_t sub_1000DD9B4()
{
  return sub_1000D8CA4(&qword_10029A9A0, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

uint64_t sub_1000DD9FC()
{
  return sub_1000D8CA4(&qword_10029A340, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

uint64_t sub_1000DDA44()
{
  return sub_1000D8CA4(&qword_10029A9A8, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

uint64_t sub_1000DDA8C()
{
  return sub_1000D8CA4(&qword_10029A9B0, (void (*)(uint64_t))type metadata accessor for PCSService);
}

uint64_t sub_1000DDAD4()
{
  return sub_1000D8CA4(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService);
}

uint64_t sub_1000DDB1C()
{
  return sub_1000D8CA4(&qword_10029A348, (void (*)(uint64_t))type metadata accessor for PCSService);
}

uint64_t sub_1000DDB64()
{
  return sub_1000D8CA4(&qword_10029A9B8, (void (*)(uint64_t))type metadata accessor for PCSService);
}

uint64_t sub_1000DDBAC()
{
  return sub_1000D8CA4(&qword_10029A9C0, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t sub_1000DDBF4()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029EF20, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t sub_1000DDC3C()
{
  return sub_1000D8CA4(&qword_10029A358, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t sub_1000DDC84()
{
  return sub_1000D8CA4(&qword_10029A9C8, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t sub_1000DDCCC()
{
  return sub_1000D8CA4(&qword_10029A9D0, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);
}

uint64_t sub_1000DDD14()
{
  return sub_1000D8CA4(&qword_10029A368, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);
}

uint64_t sub_1000DDD5C()
{
  return sub_1000D8CA4(&qword_10029A360, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);
}

uint64_t sub_1000DDDA4()
{
  return sub_1000D8CA4(&qword_10029A9D8, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);
}

uint64_t sub_1000DDDEC()
{
  return sub_1000D8CA4(&qword_10029A9E0, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);
}

uint64_t sub_1000DDE34()
{
  return sub_1000D8CA4(&qword_10029A9E8, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);
}

uint64_t sub_1000DDE7C()
{
  return sub_1000D8CA4(&qword_10029A370, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);
}

uint64_t sub_1000DDEC4()
{
  return sub_1000D8CA4(&qword_10029A9F0, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);
}

uint64_t sub_1000DDF0C()
{
  return sub_1000D8CA4(&qword_10029A9F8, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
}

uint64_t sub_1000DDF54()
{
  return sub_1000D8CA4(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
}

uint64_t sub_1000DDF9C()
{
  return sub_1000D8CA4(&qword_10029A378, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
}

uint64_t sub_1000DDFE4()
{
  return sub_1000D8CA4(&qword_10029AA00, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
}

uint64_t sub_1000DE02C()
{
  return sub_1000D8CA4(&qword_10029AA08, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
}

uint64_t sub_1000DE074()
{
  return sub_1000D8CA4((unint64_t *)&unk_10029EF40, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
}

uint64_t sub_1000DE0BC()
{
  return sub_1000D8CA4(&qword_10029A388, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
}

uint64_t sub_1000DE104()
{
  return sub_1000D8CA4(&qword_10029AA10, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
}

uint64_t sub_1000DE14C()
{
  return sub_1000D8CA4(&qword_10029AA18, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);
}

uint64_t sub_1000DE194()
{
  return sub_1000D8CA4(&qword_10029A398, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);
}

uint64_t sub_1000DE1DC()
{
  return sub_1000D8CA4(&qword_10029A390, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);
}

uint64_t sub_1000DE224()
{
  return sub_1000D8CA4(&qword_10029AA20, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);
}

uint64_t sub_1000DE26C()
{
  return sub_1000D8CA4(&qword_10029AA28, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);
}

uint64_t sub_1000DE2B4()
{
  return sub_1000D8CA4(&qword_10029AA30, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);
}

uint64_t sub_1000DE2FC()
{
  return sub_1000D8CA4(&qword_10029A3A0, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);
}

uint64_t sub_1000DE344()
{
  return sub_1000D8CA4(&qword_10029AA38, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);
}

uint64_t sub_1000DE38C()
{
  return sub_1000D8CA4(&qword_10029AA40, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_1000DE3D4()
{
  return sub_1000D8CA4(&qword_10029AA48, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_1000DE41C()
{
  return sub_1000D8CA4(&qword_10029A3A8, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_1000DE464()
{
  return sub_1000D8CA4(&qword_10029AA50, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_1000DE4AC()
{
  return sub_1000D8CA4(&qword_10029AA58, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);
}

uint64_t sub_1000DE4F4()
{
  return sub_1000D8CA4(&qword_10029AA60, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);
}

uint64_t sub_1000DE53C()
{
  return sub_1000D8CA4(&qword_10029A3B0, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);
}

uint64_t sub_1000DE584()
{
  return sub_1000D8CA4(&qword_10029AA68, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);
}

uint64_t initializeBufferWithCopyOfBuffer for ViewKeyClass(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ViewKeyClass()
{
  return &type metadata for ViewKeyClass;
}

uint64_t getEnumTagSinglePayload for ResetReason(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ResetReason(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1000DE640(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000DE65C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResetReason()
{
  return &type metadata for ResetReason;
}

ValueMetadata *type metadata accessor for AccountFlags()
{
  return &type metadata for AccountFlags;
}

ValueMetadata *type metadata accessor for FilteringRequest()
{
  return &type metadata for FilteringRequest;
}

ValueMetadata *type metadata accessor for RepairAction()
{
  return &type metadata for RepairAction;
}

ValueMetadata *type metadata accessor for SupportAppDeviceStatus()
{
  return &type metadata for SupportAppDeviceStatus;
}

ValueMetadata *type metadata accessor for RecordStatus()
{
  return &type metadata for RecordStatus;
}

ValueMetadata *type metadata accessor for SOSViability()
{
  return &type metadata for SOSViability;
}

uint64_t getEnumTagSinglePayload for SignedPeerPermanentInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DE718);
}

uint64_t storeEnumTagSinglePayload for SignedPeerPermanentInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DE730);
}

uint64_t sub_1000DE734()
{
  return sub_100110008();
}

uint64_t getEnumTagSinglePayload for SignedPeerStableInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DE758);
}

uint64_t storeEnumTagSinglePayload for SignedPeerStableInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DE770);
}

uint64_t getEnumTagSinglePayload for SignedPeerDynamicInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DE788);
}

uint64_t storeEnumTagSinglePayload for SignedPeerDynamicInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DE7A0);
}

uint64_t getEnumTagSinglePayload for SignedVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DE7B8);
}

uint64_t storeEnumTagSinglePayload for SignedVoucher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DE7D0);
}

uint64_t getEnumTagSinglePayload for SignedRecoveryVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DE7E8);
}

uint64_t storeEnumTagSinglePayload for SignedRecoveryVoucher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DE800);
}

uint64_t *_s18TrustedPeersHelper23SignedPeerPermanentInfoVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1000059E8(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_1000059E8(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    char v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_100221DF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t _s18TrustedPeersHelper23SignedPeerPermanentInfoVwxx_0(uint64_t a1, uint64_t a2)
{
  sub_100005A40(*(void *)a1, *(void *)(a1 + 8));
  sub_100005A40(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t *_s18TrustedPeersHelper23SignedPeerPermanentInfoVwcp_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000059E8(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_1000059E8(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  char v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t *_s18TrustedPeersHelper23SignedPeerPermanentInfoVwca_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000059E8(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100005A40(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_1000059E8(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_100005A40(v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t *_s18TrustedPeersHelper23SignedPeerPermanentInfoVwta_0(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100005A40(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_100005A40(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  unint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignedCustodianRecoveryKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DEBA0);
}

uint64_t sub_1000DEBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SignedCustodianRecoveryKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DEC74);
}

void *sub_1000DEC78(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *unint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for IdmsTrustedDevicesVersion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100221DC0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t destroy for IdmsTrustedDevicesVersion(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_100221DC0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for IdmsTrustedDevicesVersion(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_100221DC0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *assignWithCopy for IdmsTrustedDevicesVersion(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100221DC0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *initializeWithTake for IdmsTrustedDevicesVersion(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100221DC0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *assignWithTake for IdmsTrustedDevicesVersion(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100221DC0();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdmsTrustedDevicesVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DF6BC);
}

uint64_t sub_1000DF6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for IdmsTrustedDevicesVersion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DF800);
}

uint64_t sub_1000DF800(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000DF930(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for Peer(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v8, v9, v11);
    uint64_t v66 = a3;
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for SignedPeerPermanentInfo(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v67 = v11;
    uint64_t v68 = v12;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC(&qword_10029EF80);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v20 = *v15;
      unint64_t v21 = v15[1];
      sub_1000059E8(*v15, v21);
      *uint64_t v14 = v20;
      v14[1] = v21;
      uint64_t v22 = v15[2];
      unint64_t v23 = v15[3];
      sub_1000059E8(v22, v23);
      v14[2] = v22;
      v14[3] = v23;
      uint64_t v12 = v68;
      v68((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v24 = v66[8];
    uint64_t v25 = (uint64_t *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1000046DC(&qword_100299F18);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      uint64_t v30 = v11;
    }
    else
    {
      uint64_t v31 = *v26;
      unint64_t v32 = v26[1];
      sub_1000059E8(*v26, v32);
      *uint64_t v25 = v31;
      v25[1] = v32;
      uint64_t v33 = v26[2];
      unint64_t v34 = v26[3];
      sub_1000059E8(v33, v34);
      v25[2] = v33;
      v25[3] = v34;
      uint64_t v30 = v11;
      uint64_t v12 = v68;
      v68((char *)v25 + *(int *)(v27 + 24), (char *)v26 + *(int *)(v27 + 24), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v35 = v66[9];
    uint64_t v36 = (uint64_t *)((char *)v4 + v35);
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      uint64_t v40 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v41 = *v37;
      unint64_t v42 = v37[1];
      sub_1000059E8(*v37, v42);
      *uint64_t v36 = v41;
      v36[1] = v42;
      uint64_t v43 = v37[2];
      unint64_t v44 = v37[3];
      sub_1000059E8(v43, v44);
      v36[2] = v43;
      v36[3] = v44;
      uint64_t v12 = v68;
      v68((char *)v36 + *(int *)(v38 + 24), (char *)v37 + *(int *)(v38 + 24), v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    uint64_t v45 = v66[10];
    uint64_t v46 = (uint64_t *)((char *)v4 + v45);
    uint64_t v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      uint64_t v50 = sub_1000046DC(&qword_100299F20);
      memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      uint64_t v51 = *v47;
      unint64_t v52 = v47[1];
      sub_1000059E8(*v47, v52);
      *uint64_t v46 = v51;
      v46[1] = v52;
      uint64_t v53 = v47[2];
      unint64_t v54 = v47[3];
      sub_1000059E8(v53, v54);
      v46[2] = v53;
      v46[3] = v54;
      uint64_t v12 = v68;
      v68((char *)v46 + *(int *)(v48 + 24), (char *)v47 + *(int *)(v48 + 24), v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    uint64_t v55 = v66[11];
    uint64_t v56 = (uint64_t *)((char *)v4 + v55);
    uint64_t v57 = (uint64_t *)((char *)a2 + v55);
    uint64_t v58 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      uint64_t v60 = sub_1000046DC(&qword_100299F28);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      uint64_t v61 = *v57;
      unint64_t v62 = v57[1];
      sub_1000059E8(*v57, v62);
      *uint64_t v56 = v61;
      v56[1] = v62;
      uint64_t v63 = v57[2];
      unint64_t v64 = v57[3];
      sub_1000059E8(v63, v64);
      v56[2] = v63;
      v56[3] = v64;
      v12((char *)v56 + *(int *)(v58 + 24), (char *)v57 + *(int *)(v58 + 24), v67);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
  }
  return v4;
}

uint64_t destroy for Peer(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_100221DF0();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v18(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for SignedPeerPermanentInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_100005A40(*(void *)v6, *(void *)(v6 + 8));
    sub_100005A40(*(void *)(v6 + 16), *(void *)(v6 + 24));
    v18(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v18(v8 + *(int *)(v9 + 24), v5);
  }
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
    sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
    v18(v10 + *(int *)(v11 + 24), v5);
  }
  uint64_t v12 = a1 + a2[10];
  uint64_t v13 = type metadata accessor for SignedRecoveryVoucher(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    sub_100005A40(*(void *)v12, *(void *)(v12 + 8));
    sub_100005A40(*(void *)(v12 + 16), *(void *)(v12 + 24));
    v18(v12 + *(int *)(v13 + 24), v5);
  }
  uint64_t v14 = a1 + a2[11];
  uint64_t v15 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  if (!result)
  {
    sub_100005A40(*(void *)v14, *(void *)(v14 + 8));
    sub_100005A40(*(void *)(v14 + 16), *(void *)(v14 + 24));
    uint64_t v17 = v14 + *(int *)(v15 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v18)(v17, v5);
  }
  return result;
}

void *initializeWithCopy for Peer(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  unint64_t v64 = a3;
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v65 = v10;
  uint64_t v66 = v11;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_10029EF80);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = *v14;
    unint64_t v19 = v14[1];
    sub_1000059E8(*v14, v19);
    *uint64_t v13 = v18;
    v13[1] = v19;
    uint64_t v20 = v14[2];
    unint64_t v21 = v14[3];
    sub_1000059E8(v20, v21);
    v13[2] = v20;
    v13[3] = v21;
    uint64_t v11 = v66;
    v66((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v22 = v64[8];
  unint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1000046DC(&qword_100299F18);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    uint64_t v28 = v10;
  }
  else
  {
    uint64_t v29 = *v24;
    unint64_t v30 = v24[1];
    sub_1000059E8(*v24, v30);
    *unint64_t v23 = v29;
    v23[1] = v30;
    uint64_t v31 = v24[2];
    unint64_t v32 = v24[3];
    sub_1000059E8(v31, v32);
    v23[2] = v31;
    v23[3] = v32;
    uint64_t v28 = v10;
    uint64_t v11 = v66;
    v66((char *)v23 + *(int *)(v25 + 24), (char *)v24 + *(int *)(v25 + 24), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v33 = v64[9];
  unint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v36 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = *v35;
    unint64_t v40 = v35[1];
    sub_1000059E8(*v35, v40);
    void *v34 = v39;
    v34[1] = v40;
    uint64_t v41 = v35[2];
    unint64_t v42 = v35[3];
    sub_1000059E8(v41, v42);
    v34[2] = v41;
    v34[3] = v42;
    uint64_t v11 = v66;
    v66((char *)v34 + *(int *)(v36 + 24), (char *)v35 + *(int *)(v36 + 24), v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v43 = v64[10];
  unint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v46 = type metadata accessor for SignedRecoveryVoucher(0);
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    uint64_t v48 = sub_1000046DC(&qword_100299F20);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    uint64_t v49 = *v45;
    unint64_t v50 = v45[1];
    sub_1000059E8(*v45, v50);
    *unint64_t v44 = v49;
    v44[1] = v50;
    uint64_t v51 = v45[2];
    unint64_t v52 = v45[3];
    sub_1000059E8(v51, v52);
    v44[2] = v51;
    v44[3] = v52;
    uint64_t v11 = v66;
    v66((char *)v44 + *(int *)(v46 + 24), (char *)v45 + *(int *)(v46 + 24), v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  uint64_t v53 = v64[11];
  unint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (void *)((char *)a2 + v53);
  uint64_t v56 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_1000046DC(&qword_100299F28);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    uint64_t v59 = *v55;
    unint64_t v60 = v55[1];
    sub_1000059E8(*v55, v60);
    *unint64_t v54 = v59;
    v54[1] = v60;
    uint64_t v61 = v55[2];
    unint64_t v62 = v55[3];
    sub_1000059E8(v61, v62);
    v54[2] = v61;
    v54[3] = v62;
    v11((char *)v54 + *(int *)(v56 + 24), (char *)v55 + *(int *)(v56 + 24), v65);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  return a1;
}

void *assignWithCopy for Peer(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v117 = *(void *)(v9 - 8);
  uint64_t v118 = v9;
  uint64_t v116 = *(void (**)(char *, char *))(v117 + 24);
  v116(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *v12;
      unint64_t v19 = v12[1];
      sub_1000059E8(*v12, v19);
      *uint64_t v11 = v18;
      v11[1] = v19;
      uint64_t v20 = v12[2];
      unint64_t v21 = v12[3];
      sub_1000059E8(v20, v21);
      v11[2] = v20;
      v11[3] = v21;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v118);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for SignedPeerPermanentInfo);
LABEL_6:
    uint64_t v22 = sub_1000046DC(&qword_10029EF80);
    memcpy(v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v76 = *v12;
  unint64_t v77 = v12[1];
  sub_1000059E8(*v12, v77);
  uint64_t v78 = *v11;
  unint64_t v79 = v11[1];
  *uint64_t v11 = v76;
  v11[1] = v77;
  sub_100005A40(v78, v79);
  uint64_t v80 = v12[2];
  unint64_t v81 = v12[3];
  sub_1000059E8(v80, v81);
  uint64_t v82 = v11[2];
  unint64_t v83 = v11[3];
  v11[2] = v80;
  v11[3] = v81;
  sub_100005A40(v82, v83);
  ((void (*)(char *, char *, uint64_t))v116)((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v118);
LABEL_7:
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      uint64_t v31 = *v25;
      unint64_t v32 = v25[1];
      sub_1000059E8(*v25, v32);
      uint64_t *v24 = v31;
      v24[1] = v32;
      uint64_t v33 = v25[2];
      unint64_t v34 = v25[3];
      sub_1000059E8(v33, v34);
      v24[2] = v33;
      v24[3] = v34;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v118);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    sub_1000D7E78((uint64_t)v24, type metadata accessor for SignedPeerStableInfo);
LABEL_12:
    uint64_t v35 = sub_1000046DC(&qword_100299F18);
    memcpy(v24, v25, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v84 = *v25;
  unint64_t v85 = v25[1];
  sub_1000059E8(*v25, v85);
  uint64_t v86 = *v24;
  unint64_t v87 = v24[1];
  uint64_t *v24 = v84;
  v24[1] = v85;
  sub_100005A40(v86, v87);
  uint64_t v88 = v25[2];
  unint64_t v89 = v25[3];
  sub_1000059E8(v88, v89);
  uint64_t v90 = v24[2];
  unint64_t v91 = v24[3];
  v24[2] = v88;
  v24[3] = v89;
  sub_100005A40(v90, v91);
  ((void (*)(char *, char *, uint64_t))v116)((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v118);
LABEL_13:
  uint64_t v36 = a3[9];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      uint64_t v44 = *v38;
      unint64_t v45 = v38[1];
      sub_1000059E8(*v38, v45);
      *uint64_t v37 = v44;
      v37[1] = v45;
      uint64_t v46 = v38[2];
      unint64_t v47 = v38[3];
      sub_1000059E8(v46, v47);
      v37[2] = v46;
      v37[3] = v47;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v37 + *(int *)(v39 + 24), (char *)v38 + *(int *)(v39 + 24), v118);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v43)
  {
    sub_1000D7E78((uint64_t)v37, type metadata accessor for SignedPeerDynamicInfo);
LABEL_18:
    uint64_t v48 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v37, v38, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v92 = *v38;
  unint64_t v93 = v38[1];
  sub_1000059E8(*v38, v93);
  uint64_t v94 = *v37;
  unint64_t v95 = v37[1];
  *uint64_t v37 = v92;
  v37[1] = v93;
  sub_100005A40(v94, v95);
  uint64_t v96 = v38[2];
  unint64_t v97 = v38[3];
  sub_1000059E8(v96, v97);
  uint64_t v98 = v37[2];
  unint64_t v99 = v37[3];
  v37[2] = v96;
  v37[3] = v97;
  sub_100005A40(v98, v99);
  ((void (*)(char *, char *, uint64_t))v116)((char *)v37 + *(int *)(v39 + 24), (char *)v38 + *(int *)(v39 + 24), v118);
LABEL_19:
  uint64_t v49 = a3[10];
  unint64_t v50 = (void *)((char *)a1 + v49);
  uint64_t v51 = (void *)((char *)a2 + v49);
  uint64_t v52 = type metadata accessor for SignedRecoveryVoucher(0);
  uint64_t v53 = *(void *)(v52 - 8);
  unint64_t v54 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v53 + 48);
  int v55 = v54(v50, 1, v52);
  int v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      uint64_t v57 = *v51;
      unint64_t v58 = v51[1];
      sub_1000059E8(*v51, v58);
      *unint64_t v50 = v57;
      v50[1] = v58;
      uint64_t v59 = v51[2];
      unint64_t v60 = v51[3];
      sub_1000059E8(v59, v60);
      v50[2] = v59;
      v50[3] = v60;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v50 + *(int *)(v52 + 24), (char *)v51 + *(int *)(v52 + 24), v118);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v56)
  {
    sub_1000D7E78((uint64_t)v50, type metadata accessor for SignedRecoveryVoucher);
LABEL_24:
    uint64_t v61 = sub_1000046DC(&qword_100299F20);
    memcpy(v50, v51, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v100 = *v51;
  unint64_t v101 = v51[1];
  sub_1000059E8(*v51, v101);
  uint64_t v102 = *v50;
  unint64_t v103 = v50[1];
  *unint64_t v50 = v100;
  v50[1] = v101;
  sub_100005A40(v102, v103);
  uint64_t v104 = v51[2];
  unint64_t v105 = v51[3];
  sub_1000059E8(v104, v105);
  uint64_t v106 = v50[2];
  unint64_t v107 = v50[3];
  v50[2] = v104;
  v50[3] = v105;
  sub_100005A40(v106, v107);
  ((void (*)(char *, char *, uint64_t))v116)((char *)v50 + *(int *)(v52 + 24), (char *)v51 + *(int *)(v52 + 24), v118);
LABEL_25:
  uint64_t v62 = a3[11];
  uint64_t v63 = (void *)((char *)a1 + v62);
  unint64_t v64 = (void *)((char *)a2 + v62);
  uint64_t v65 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v66 + 48);
  int v68 = v67(v63, 1, v65);
  int v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      uint64_t v108 = *v64;
      unint64_t v109 = v64[1];
      sub_1000059E8(*v64, v109);
      uint64_t v110 = *v63;
      unint64_t v111 = v63[1];
      uint64_t *v63 = v108;
      v63[1] = v109;
      sub_100005A40(v110, v111);
      uint64_t v112 = v64[2];
      unint64_t v113 = v64[3];
      sub_1000059E8(v112, v113);
      uint64_t v114 = v63[2];
      unint64_t v115 = v63[3];
      v63[2] = v112;
      v63[3] = v113;
      sub_100005A40(v114, v115);
      ((void (*)(char *, char *, uint64_t))v116)((char *)v63 + *(int *)(v65 + 24), (char *)v64 + *(int *)(v65 + 24), v118);
      return a1;
    }
    sub_1000D7E78((uint64_t)v63, type metadata accessor for SignedCustodianRecoveryKey);
    goto LABEL_30;
  }
  if (v69)
  {
LABEL_30:
    uint64_t v74 = sub_1000046DC(&qword_100299F28);
    memcpy(v63, v64, *(void *)(*(void *)(v74 - 8) + 64));
    return a1;
  }
  uint64_t v70 = *v64;
  unint64_t v71 = v64[1];
  sub_1000059E8(*v64, v71);
  uint64_t *v63 = v70;
  v63[1] = v71;
  uint64_t v72 = v64[2];
  unint64_t v73 = v64[3];
  sub_1000059E8(v72, v73);
  v63[2] = v72;
  v63[3] = v73;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v63 + *(int *)(v65 + 24), (char *)v64 + *(int *)(v65 + 24), v118);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
  return a1;
}

uint64_t initializeWithTake for Peer(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029EF80);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  unint64_t v19 = (_OWORD *)(a1 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  uint64_t v21 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_100299F18);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    long long v24 = v20[1];
    *unint64_t v19 = *v20;
    v19[1] = v24;
    v10((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = (_OWORD *)(a1 + v25);
  uint64_t v27 = (_OWORD *)(a2 + v25);
  uint64_t v28 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    long long v31 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v31;
    v10((char *)v26 + *(int *)(v28 + 24), (char *)v27 + *(int *)(v28 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = (_OWORD *)(a1 + v32);
  unint64_t v34 = (_OWORD *)(a2 + v32);
  uint64_t v35 = type metadata accessor for SignedRecoveryVoucher(0);
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = sub_1000046DC(&qword_100299F20);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    long long v38 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v38;
    v10((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v39 = a3[11];
  uint64_t v40 = (_OWORD *)(a1 + v39);
  uint64_t v41 = (_OWORD *)(a2 + v39);
  uint64_t v42 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_1000046DC(&qword_100299F28);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    long long v45 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v45;
    v10((char *)v40 + *(int *)(v42 + 24), (char *)v41 + *(int *)(v42 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  return a1;
}

void *assignWithTake for Peer(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v83 = *(void *)(v10 - 8);
  uint64_t v84 = v10;
  uint64_t v82 = *(void (**)(char *, char *))(v83 + 40);
  v82(v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      long long v19 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v19;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v84);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1000D7E78((uint64_t)v12, type metadata accessor for SignedPeerPermanentInfo);
LABEL_6:
    uint64_t v20 = sub_1000046DC(&qword_10029EF80);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v62 = *(void *)v12;
  unint64_t v63 = *((void *)v12 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  sub_100005A40(v62, v63);
  uint64_t v64 = *((void *)v12 + 2);
  unint64_t v65 = *((void *)v12 + 3);
  *((_OWORD *)v12 + 1) = *((_OWORD *)v13 + 1);
  sub_100005A40(v64, v65);
  ((void (*)(char *, char *, uint64_t))v82)(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v84);
LABEL_7:
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      long long v29 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v29;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v84);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_1000D7E78((uint64_t)v22, type metadata accessor for SignedPeerStableInfo);
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_100299F18);
    memcpy(v22, v23, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v66 = *(void *)v22;
  unint64_t v67 = *((void *)v22 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  sub_100005A40(v66, v67);
  uint64_t v68 = *((void *)v22 + 2);
  unint64_t v69 = *((void *)v22 + 3);
  *((_OWORD *)v22 + 1) = *((_OWORD *)v23 + 1);
  sub_100005A40(v68, v69);
  ((void (*)(char *, char *, uint64_t))v82)(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v84);
LABEL_13:
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      long long v39 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v39;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(&v32[*(int *)(v34 + 24)], &v33[*(int *)(v34 + 24)], v84);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v38)
  {
    sub_1000D7E78((uint64_t)v32, type metadata accessor for SignedPeerDynamicInfo);
LABEL_18:
    uint64_t v40 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v70 = *(void *)v32;
  unint64_t v71 = *((void *)v32 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  sub_100005A40(v70, v71);
  uint64_t v72 = *((void *)v32 + 2);
  unint64_t v73 = *((void *)v32 + 3);
  *((_OWORD *)v32 + 1) = *((_OWORD *)v33 + 1);
  sub_100005A40(v72, v73);
  ((void (*)(char *, char *, uint64_t))v82)(&v32[*(int *)(v34 + 24)], &v33[*(int *)(v34 + 24)], v84);
LABEL_19:
  uint64_t v41 = a3[10];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = type metadata accessor for SignedRecoveryVoucher(0);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46(v43, 1, v44);
  if (v47)
  {
    if (!v48)
    {
      long long v49 = *((_OWORD *)v43 + 1);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v49;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(&v42[*(int *)(v44 + 24)], &v43[*(int *)(v44 + 24)], v84);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v48)
  {
    sub_1000D7E78((uint64_t)v42, type metadata accessor for SignedRecoveryVoucher);
LABEL_24:
    uint64_t v50 = sub_1000046DC(&qword_100299F20);
    memcpy(v42, v43, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v74 = *(void *)v42;
  unint64_t v75 = *((void *)v42 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  sub_100005A40(v74, v75);
  uint64_t v76 = *((void *)v42 + 2);
  unint64_t v77 = *((void *)v42 + 3);
  *((_OWORD *)v42 + 1) = *((_OWORD *)v43 + 1);
  sub_100005A40(v76, v77);
  ((void (*)(char *, char *, uint64_t))v82)(&v42[*(int *)(v44 + 24)], &v43[*(int *)(v44 + 24)], v84);
LABEL_25:
  uint64_t v51 = a3[11];
  uint64_t v52 = (void *)((char *)a1 + v51);
  uint64_t v53 = (void *)((char *)a2 + v51);
  uint64_t v54 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v55 = *(void *)(v54 - 8);
  int v56 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (!v57)
  {
    if (!v58)
    {
      uint64_t v78 = *v52;
      unint64_t v79 = v52[1];
      *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
      sub_100005A40(v78, v79);
      uint64_t v80 = v52[2];
      unint64_t v81 = v52[3];
      *((_OWORD *)v52 + 1) = *((_OWORD *)v53 + 1);
      sub_100005A40(v80, v81);
      ((void (*)(char *, char *, uint64_t))v82)((char *)v52 + *(int *)(v54 + 24), (char *)v53 + *(int *)(v54 + 24), v84);
      return a1;
    }
    sub_1000D7E78((uint64_t)v52, type metadata accessor for SignedCustodianRecoveryKey);
    goto LABEL_30;
  }
  if (v58)
  {
LABEL_30:
    uint64_t v60 = sub_1000046DC(&qword_100299F28);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    return a1;
  }
  long long v59 = *((_OWORD *)v53 + 1);
  *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
  *((_OWORD *)v52 + 1) = v59;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))((char *)v52 + *(int *)(v54 + 24), (char *)v53 + *(int *)(v54 + 24), v84);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for Peer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E1FCC);
}

uint64_t sub_1000E1FCC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_15:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v16(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029EF80);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_15;
  }
  uint64_t v13 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_15;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029ECA0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_15;
  }
  uint64_t v15 = sub_1000046DC(&qword_100299F20);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_15;
  }
  uint64_t v17 = sub_1000046DC(&qword_100299F28);
  int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[11];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for Peer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E2250);
}

uint64_t sub_1000E2250(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_13:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v16(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029EF80);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_13;
  }
  uint64_t v13 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_13;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029ECA0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_13;
  }
  uint64_t v15 = sub_1000046DC(&qword_100299F20);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_13;
  }
  uint64_t v17 = sub_1000046DC(&qword_100299F28);
  int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = v5 + a4[11];

  return v18(v20, a2, a2, v19);
}

void sub_1000E24C0()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029AF08, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, &qword_10029AF10, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
      if (v2 <= 0x3F)
      {
        sub_1000E271C(319, &qword_10029AF18, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
        if (v3 <= 0x3F)
        {
          sub_1000E271C(319, &qword_10029AF20, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);
          if (v4 <= 0x3F)
          {
            sub_1000E271C(319, (unint64_t *)&unk_10029AF28, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_1000E271C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100222670();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PeerDifference(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for PeerDifference.OneOf_Operation(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000046DC(&qword_100299658);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_42:
      uint64_t v141 = *(int *)(v6 + 20);
      char v142 = (char *)a1 + v141;
      uint64_t v143 = (char *)a2 + v141;
      uint64_t v144 = sub_100221DF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
      return a1;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v153 = v8;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = a2[1];
      *a1 = *a2;
      a1[1] = v25;
      a1[2] = a2[2];
      uint64_t v26 = type metadata accessor for Peer(0);
      uint64_t v27 = *(int *)(v26 + 24);
      int v28 = (char *)a1 + v27;
      long long v29 = (char *)a2 + v27;
      uint64_t v30 = sub_100221DF0();
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31(v28, v29, v30);
      char v152 = (int *)v26;
      uint64_t v32 = *(int *)(v26 + 28);
      uint64_t v33 = (void *)((char *)a1 + v32);
      uint64_t v34 = (void *)((char *)a2 + v32);
      uint64_t v35 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v36 = *(void *)(v35 - 8);
      char v146 = v31;
      uint64_t v148 = v30;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        uint64_t v37 = sub_1000046DC(&qword_10029EF80);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        uint64_t v63 = *v34;
        unint64_t v64 = v34[1];
        sub_1000059E8(*v34, v64);
        *uint64_t v33 = v63;
        v33[1] = v64;
        uint64_t v65 = v34[2];
        unint64_t v66 = v34[3];
        sub_1000059E8(v65, v66);
        v33[2] = v65;
        v33[3] = v66;
        v146((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v148);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      uint64_t v67 = v152[8];
      uint64_t v68 = (void *)((char *)a1 + v67);
      unint64_t v69 = (void *)((char *)a2 + v67);
      uint64_t v70 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v71 = *(void *)(v70 - 8);
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
LABEL_21:
        uint64_t v78 = *v69;
        unint64_t v79 = v69[1];
        sub_1000059E8(*v69, v79);
        *uint64_t v68 = v78;
        v68[1] = v79;
        uint64_t v80 = v69[2];
        unint64_t v81 = v69[3];
        sub_1000059E8(v80, v81);
        v68[2] = v80;
        v68[3] = v81;
        v146((char *)v68 + *(int *)(v70 + 24), (char *)v69 + *(int *)(v70 + 24), v148);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        goto LABEL_22;
      }
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        a1[2] = a2[2];
        uint64_t v13 = type metadata accessor for Peer(0);
        uint64_t v14 = *(int *)(v13 + 24);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_100221DF0();
        int v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        uint64_t v151 = (int *)v13;
        uint64_t v19 = *(int *)(v13 + 28);
        uint64_t v20 = (void *)((char *)a1 + v19);
        uint64_t v21 = (void *)((char *)a2 + v19);
        uint64_t v22 = type metadata accessor for SignedPeerPermanentInfo(0);
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v147 = v18;
        uint64_t v149 = v17;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = sub_1000046DC(&qword_10029EF80);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v53 = *v21;
          unint64_t v54 = v21[1];
          sub_1000059E8(*v21, v54);
          *uint64_t v20 = v53;
          v20[1] = v54;
          uint64_t v55 = v21[2];
          unint64_t v56 = v21[3];
          sub_1000059E8(v55, v56);
          v20[2] = v55;
          v20[3] = v56;
          v147((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v149);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v57 = v151[8];
        int v58 = (void *)((char *)a1 + v57);
        long long v59 = (void *)((char *)a2 + v57);
        uint64_t v60 = type metadata accessor for SignedPeerStableInfo(0);
        uint64_t v61 = *(void *)(v60 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
        {
          uint64_t v62 = sub_1000046DC(&qword_100299F18);
          memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          uint64_t v111 = *v59;
          unint64_t v112 = v59[1];
          sub_1000059E8(*v59, v112);
          *int v58 = v111;
          v58[1] = v112;
          uint64_t v113 = v59[2];
          unint64_t v114 = v59[3];
          sub_1000059E8(v113, v114);
          v58[2] = v113;
          v58[3] = v114;
          v147((char *)v58 + *(int *)(v60 + 24), (char *)v59 + *(int *)(v60 + 24), v149);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        uint64_t v115 = v151[9];
        uint64_t v116 = (void *)((char *)a1 + v115);
        uint64_t v117 = (void *)((char *)a2 + v115);
        uint64_t v118 = type metadata accessor for SignedPeerDynamicInfo(0);
        uint64_t v119 = *(void *)(v118 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118))
        {
          uint64_t v120 = sub_1000046DC(&qword_10029ECA0);
          memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          uint64_t v121 = *v117;
          unint64_t v122 = v117[1];
          sub_1000059E8(*v117, v122);
          void *v116 = v121;
          v116[1] = v122;
          uint64_t v123 = v117[2];
          unint64_t v124 = v117[3];
          sub_1000059E8(v123, v124);
          v116[2] = v123;
          v116[3] = v124;
          v147((char *)v116 + *(int *)(v118 + 24), (char *)v117 + *(int *)(v118 + 24), v149);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
        }
        uint64_t v125 = v151[10];
        uint64_t v126 = (void *)((char *)a1 + v125);
        uint64_t v127 = (void *)((char *)a2 + v125);
        uint64_t v128 = type metadata accessor for SignedRecoveryVoucher(0);
        uint64_t v129 = *(void *)(v128 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
        {
          uint64_t v130 = sub_1000046DC(&qword_100299F20);
          memcpy(v126, v127, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          uint64_t v131 = *v127;
          unint64_t v132 = v127[1];
          sub_1000059E8(*v127, v132);
          void *v126 = v131;
          v126[1] = v132;
          uint64_t v133 = v127[2];
          unint64_t v134 = v127[3];
          sub_1000059E8(v133, v134);
          v126[2] = v133;
          v126[3] = v134;
          v147((char *)v126 + *(int *)(v128 + 24), (char *)v127 + *(int *)(v128 + 24), v149);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
        }
        uint64_t v135 = v151[11];
        unint64_t v103 = (void *)((char *)a1 + v135);
        uint64_t v104 = (void *)((char *)a2 + v135);
        uint64_t v105 = type metadata accessor for SignedCustodianRecoveryKey(0);
        uint64_t v106 = *(void *)(v105 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
        {
LABEL_38:
          uint64_t v136 = sub_1000046DC(&qword_100299F28);
          memcpy(v103, v104, *(void *)(*(void *)(v136 - 8) + 64));
LABEL_41:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v153 + 56))(a1, 0, 1, v7);
          goto LABEL_42;
        }
        uint64_t v137 = *v104;
        unint64_t v138 = v104[1];
        sub_1000059E8(*v104, v138);
        *unint64_t v103 = v137;
        v103[1] = v138;
        uint64_t v139 = v104[2];
        unint64_t v140 = v104[3];
        sub_1000059E8(v139, v140);
        v103[2] = v139;
        v103[3] = v140;
        v147((char *)v103 + *(int *)(v105 + 24), (char *)v104 + *(int *)(v105 + 24), v149);
LABEL_40:
        (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
        goto LABEL_41;
      }
      uint64_t v150 = v6;
      uint64_t v38 = a2[1];
      *a1 = *a2;
      a1[1] = v38;
      a1[2] = a2[2];
      uint64_t v39 = type metadata accessor for Peer(0);
      uint64_t v40 = *(int *)(v39 + 24);
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      uint64_t v43 = sub_100221DF0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v42;
      uint64_t v46 = v44;
      v44(v41, v45, v43);
      char v152 = (int *)v39;
      uint64_t v47 = *(int *)(v39 + 28);
      int v48 = (void *)((char *)a1 + v47);
      long long v49 = (void *)((char *)a2 + v47);
      uint64_t v50 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v51 = *(void *)(v50 - 8);
      char v146 = v46;
      uint64_t v148 = v43;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        uint64_t v52 = sub_1000046DC(&qword_10029EF80);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        uint64_t v73 = *v49;
        unint64_t v74 = v49[1];
        sub_1000059E8(*v49, v74);
        *int v48 = v73;
        v48[1] = v74;
        uint64_t v75 = v49[2];
        unint64_t v76 = v49[3];
        sub_1000059E8(v75, v76);
        v48[2] = v75;
        v48[3] = v76;
        v146((char *)v48 + *(int *)(v50 + 24), (char *)v49 + *(int *)(v50 + 24), v43);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      uint64_t v77 = v152[8];
      uint64_t v68 = (void *)((char *)a1 + v77);
      unint64_t v69 = (void *)((char *)a2 + v77);
      uint64_t v70 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v71 = *(void *)(v70 - 8);
      uint64_t v6 = v150;
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70)) {
        goto LABEL_21;
      }
    }
    uint64_t v72 = sub_1000046DC(&qword_100299F18);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
LABEL_22:
    uint64_t v82 = v152[9];
    uint64_t v83 = (void *)((char *)a1 + v82);
    uint64_t v84 = (void *)((char *)a2 + v82);
    uint64_t v85 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v86 = *(void *)(v85 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
    {
      uint64_t v87 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    }
    else
    {
      uint64_t v88 = *v84;
      unint64_t v89 = v84[1];
      sub_1000059E8(*v84, v89);
      *uint64_t v83 = v88;
      v83[1] = v89;
      uint64_t v90 = v84[2];
      unint64_t v91 = v84[3];
      sub_1000059E8(v90, v91);
      v83[2] = v90;
      v83[3] = v91;
      v146((char *)v83 + *(int *)(v85 + 24), (char *)v84 + *(int *)(v85 + 24), v148);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
    }
    uint64_t v92 = v152[10];
    unint64_t v93 = (void *)((char *)a1 + v92);
    uint64_t v94 = (void *)((char *)a2 + v92);
    uint64_t v95 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v96 = *(void *)(v95 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
    {
      uint64_t v97 = sub_1000046DC(&qword_100299F20);
      memcpy(v93, v94, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      uint64_t v98 = *v94;
      unint64_t v99 = v94[1];
      sub_1000059E8(*v94, v99);
      *unint64_t v93 = v98;
      v93[1] = v99;
      uint64_t v100 = v94[2];
      unint64_t v101 = v94[3];
      sub_1000059E8(v100, v101);
      v93[2] = v100;
      v93[3] = v101;
      v146((char *)v93 + *(int *)(v95 + 24), (char *)v94 + *(int *)(v95 + 24), v148);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    }
    uint64_t v102 = v152[11];
    unint64_t v103 = (void *)((char *)a1 + v102);
    uint64_t v104 = (void *)((char *)a2 + v102);
    uint64_t v105 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v106 = *(void *)(v105 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105)) {
      goto LABEL_38;
    }
    uint64_t v107 = *v104;
    unint64_t v108 = v104[1];
    sub_1000059E8(*v104, v108);
    *unint64_t v103 = v107;
    v103[1] = v108;
    uint64_t v109 = v104[2];
    unint64_t v110 = v104[3];
    sub_1000059E8(v109, v110);
    v103[2] = v109;
    v103[3] = v110;
    v146((char *)v103 + *(int *)(v105 + 24), (char *)v104 + *(int *)(v105 + 24), v148);
    goto LABEL_40;
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for PeerDifference(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4)
    && swift_getEnumCaseMultiPayload() <= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v5 = (int *)type metadata accessor for Peer(0);
    uint64_t v6 = a1 + v5[6];
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    uint64_t v9 = a1 + v5[7];
    uint64_t v10 = type metadata accessor for SignedPeerPermanentInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      sub_100005A40(*(void *)v9, *(void *)(v9 + 8));
      sub_100005A40(*(void *)(v9 + 16), *(void *)(v9 + 24));
      v8(v9 + *(int *)(v10 + 24), v7);
    }
    uint64_t v11 = a1 + v5[8];
    uint64_t v12 = type metadata accessor for SignedPeerStableInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
    {
      sub_100005A40(*(void *)v11, *(void *)(v11 + 8));
      sub_100005A40(*(void *)(v11 + 16), *(void *)(v11 + 24));
      v8(v11 + *(int *)(v12 + 24), v7);
    }
    uint64_t v13 = a1 + v5[9];
    uint64_t v14 = type metadata accessor for SignedPeerDynamicInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      sub_100005A40(*(void *)v13, *(void *)(v13 + 8));
      sub_100005A40(*(void *)(v13 + 16), *(void *)(v13 + 24));
      v8(v13 + *(int *)(v14 + 24), v7);
    }
    uint64_t v15 = a1 + v5[10];
    uint64_t v16 = type metadata accessor for SignedRecoveryVoucher(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
    {
      sub_100005A40(*(void *)v15, *(void *)(v15 + 8));
      sub_100005A40(*(void *)(v15 + 16), *(void *)(v15 + 24));
      v8(v15 + *(int *)(v16 + 24), v7);
    }
    uint64_t v17 = a1 + v5[11];
    uint64_t v18 = type metadata accessor for SignedCustodianRecoveryKey(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
    {
      sub_100005A40(*(void *)v17, *(void *)(v17 + 8));
      sub_100005A40(*(void *)(v17 + 16), *(void *)(v17 + 24));
      v8(v17 + *(int *)(v18 + 24), v7);
    }
  }
  uint64_t v19 = a1 + *(int *)(a2 + 20);
  uint64_t v20 = sub_100221DF0();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

void *initializeWithCopy for PeerDifference(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v153 = v7;
    uint64_t v154 = a3;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      a1[2] = a2[2];
      uint64_t v25 = type metadata accessor for Peer(0);
      uint64_t v26 = *(int *)(v25 + 24);
      uint64_t v27 = (char *)a1 + v26;
      int v28 = (char *)a2 + v26;
      uint64_t v29 = sub_100221DF0();
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
      uint64_t v15 = v29;
      swift_bridgeObjectRetain();
      uint64_t v31 = v30;
      swift_bridgeObjectRetain();
      v30(v27, v28, v15);
      uint64_t v148 = (int *)v25;
      uint64_t v32 = *(int *)(v25 + 28);
      uint64_t v18 = (void *)((char *)a1 + v32);
      uint64_t v19 = (void *)((char *)a2 + v32);
      uint64_t v20 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v150 = v15;
      char v152 = v31;
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v50 = *v19;
        unint64_t v51 = v19[1];
        sub_1000059E8(*v19, v51);
        *uint64_t v18 = v50;
        v18[1] = v51;
        goto LABEL_12;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v147 = v6;
        uint64_t v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        a1[2] = a2[2];
        uint64_t v35 = type metadata accessor for Peer(0);
        uint64_t v36 = *(int *)(v35 + 24);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = sub_100221DF0();
        uint64_t v40 = *(void (**)(void, void))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v41 = v38;
        uint64_t v42 = v40;
        ((void (*)(char *, char *, uint64_t))v40)(v37, v41, v39);
        uint64_t v149 = (int *)v35;
        uint64_t v43 = *(int *)(v35 + 28);
        uint64_t v44 = (void *)((char *)a1 + v43);
        uint64_t v45 = (void *)((char *)a2 + v43);
        uint64_t v46 = type metadata accessor for SignedPeerPermanentInfo(0);
        uint64_t v47 = *(void *)(v46 - 8);
        uint64_t v151 = v42;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          uint64_t v48 = v39;
          uint64_t v49 = sub_1000046DC(&qword_10029EF80);
          memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          uint64_t v96 = *v45;
          unint64_t v97 = v45[1];
          sub_1000059E8(*v45, v97);
          *uint64_t v44 = v96;
          v44[1] = v97;
          uint64_t v98 = v45[2];
          unint64_t v99 = v45[3];
          sub_1000059E8(v98, v99);
          v44[2] = v98;
          v44[3] = v99;
          uint64_t v42 = v151;
          uint64_t v48 = v39;
          v151((char *)v44 + *(int *)(v46 + 24), (char *)v45 + *(int *)(v46 + 24));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        uint64_t v100 = v149[8];
        unint64_t v101 = (void *)((char *)a1 + v100);
        uint64_t v102 = (void *)((char *)a2 + v100);
        uint64_t v103 = type metadata accessor for SignedPeerStableInfo(0);
        uint64_t v104 = *(void *)(v103 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
        {
          uint64_t v105 = sub_1000046DC(&qword_100299F18);
          memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          uint64_t v106 = *v102;
          unint64_t v107 = v102[1];
          sub_1000059E8(*v102, v107);
          *unint64_t v101 = v106;
          v101[1] = v107;
          uint64_t v108 = v102[2];
          unint64_t v109 = v102[3];
          sub_1000059E8(v108, v109);
          v101[2] = v108;
          v101[3] = v109;
          uint64_t v42 = v151;
          uint64_t v48 = v39;
          v151((char *)v101 + *(int *)(v103 + 24), (char *)v102 + *(int *)(v103 + 24));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
        }
        uint64_t v110 = v149[9];
        uint64_t v111 = (void *)((char *)a1 + v110);
        unint64_t v112 = (void *)((char *)a2 + v110);
        uint64_t v113 = type metadata accessor for SignedPeerDynamicInfo(0);
        uint64_t v114 = *(void *)(v113 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
        {
          uint64_t v115 = sub_1000046DC(&qword_10029ECA0);
          memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          uint64_t v116 = *v112;
          unint64_t v117 = v112[1];
          sub_1000059E8(*v112, v117);
          *uint64_t v111 = v116;
          v111[1] = v117;
          uint64_t v118 = v112[2];
          unint64_t v119 = v112[3];
          sub_1000059E8(v118, v119);
          v111[2] = v118;
          v111[3] = v119;
          uint64_t v42 = v151;
          uint64_t v48 = v39;
          v151((char *)v111 + *(int *)(v113 + 24), (char *)v112 + *(int *)(v113 + 24));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
        }
        uint64_t v120 = v149[10];
        uint64_t v121 = (void *)((char *)a1 + v120);
        unint64_t v122 = (void *)((char *)a2 + v120);
        uint64_t v123 = type metadata accessor for SignedRecoveryVoucher(0);
        uint64_t v124 = *(void *)(v123 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
        {
          uint64_t v125 = sub_1000046DC(&qword_100299F20);
          memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
          uint64_t v126 = *v122;
          unint64_t v127 = v122[1];
          sub_1000059E8(*v122, v127);
          void *v121 = v126;
          v121[1] = v127;
          uint64_t v128 = v122[2];
          unint64_t v129 = v122[3];
          sub_1000059E8(v128, v129);
          v121[2] = v128;
          v121[3] = v129;
          uint64_t v42 = v151;
          uint64_t v48 = v39;
          v151((char *)v121 + *(int *)(v123 + 24), (char *)v122 + *(int *)(v123 + 24));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
        }
        uint64_t v130 = v149[11];
        uint64_t v131 = (void *)((char *)a1 + v130);
        unint64_t v132 = (void *)((char *)a2 + v130);
        uint64_t v133 = type metadata accessor for SignedCustodianRecoveryKey(0);
        uint64_t v134 = *(void *)(v133 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
        {
          uint64_t v135 = sub_1000046DC(&qword_100299F28);
          memcpy(v131, v132, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          uint64_t v136 = (void (*)(char *, char *, uint64_t))v42;
          uint64_t v137 = v48;
          uint64_t v138 = *v132;
          unint64_t v139 = v132[1];
          sub_1000059E8(*v132, v139);
          *uint64_t v131 = v138;
          v131[1] = v139;
          uint64_t v140 = v132[2];
          unint64_t v141 = v132[3];
          sub_1000059E8(v140, v141);
          v131[2] = v140;
          v131[3] = v141;
          v136((char *)v131 + *(int *)(v133 + 24), (char *)v132 + *(int *)(v133 + 24), v137);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
        }
        uint64_t v95 = v153;
        a3 = v154;
        uint64_t v6 = v147;
        goto LABEL_40;
      }
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      uint64_t v11 = type metadata accessor for Peer(0);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_100221DF0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      uint64_t v148 = (int *)v11;
      uint64_t v17 = *(int *)(v11 + 28);
      uint64_t v18 = (void *)((char *)a1 + v17);
      uint64_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v150 = v15;
      char v152 = v16;
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v23 = *v19;
        unint64_t v22 = v19[1];
        sub_1000059E8(*v19, v22);
        *uint64_t v18 = v23;
        v18[1] = v22;
LABEL_12:
        uint64_t v52 = v19[2];
        unint64_t v53 = v19[3];
        sub_1000059E8(v52, v53);
        v18[2] = v52;
        v18[3] = v53;
        uint64_t v15 = v150;
        v152((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v150);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        goto LABEL_13;
      }
    }
    uint64_t v33 = sub_1000046DC(&qword_10029EF80);
    memcpy(v18, v19, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_13:
    uint64_t v54 = v148[8];
    uint64_t v55 = (void *)((char *)a1 + v54);
    unint64_t v56 = (void *)((char *)a2 + v54);
    uint64_t v57 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = sub_1000046DC(&qword_100299F18);
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      uint64_t v60 = *v56;
      unint64_t v61 = v56[1];
      sub_1000059E8(*v56, v61);
      void *v55 = v60;
      v55[1] = v61;
      uint64_t v62 = v56[2];
      unint64_t v63 = v56[3];
      sub_1000059E8(v62, v63);
      v55[2] = v62;
      v55[3] = v63;
      uint64_t v15 = v150;
      v152((char *)v55 + *(int *)(v57 + 24), (char *)v56 + *(int *)(v57 + 24), v150);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v64 = v148[9];
    uint64_t v65 = (void *)((char *)a1 + v64);
    unint64_t v66 = (void *)((char *)a2 + v64);
    uint64_t v67 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v68 = *(void *)(v67 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      uint64_t v69 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      uint64_t v70 = *v66;
      unint64_t v71 = v66[1];
      sub_1000059E8(*v66, v71);
      void *v65 = v70;
      v65[1] = v71;
      uint64_t v72 = v66[2];
      unint64_t v73 = v66[3];
      sub_1000059E8(v72, v73);
      v65[2] = v72;
      v65[3] = v73;
      uint64_t v15 = v150;
      v152((char *)v65 + *(int *)(v67 + 24), (char *)v66 + *(int *)(v67 + 24), v150);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
    uint64_t v74 = v148[10];
    uint64_t v75 = (void *)((char *)a1 + v74);
    unint64_t v76 = (void *)((char *)a2 + v74);
    uint64_t v77 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v78 = *(void *)(v77 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
    {
      uint64_t v79 = sub_1000046DC(&qword_100299F20);
      memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      uint64_t v80 = *v76;
      unint64_t v81 = v76[1];
      sub_1000059E8(*v76, v81);
      *uint64_t v75 = v80;
      v75[1] = v81;
      uint64_t v82 = v76[2];
      unint64_t v83 = v76[3];
      sub_1000059E8(v82, v83);
      v75[2] = v82;
      v75[3] = v83;
      uint64_t v15 = v150;
      v152((char *)v75 + *(int *)(v77 + 24), (char *)v76 + *(int *)(v77 + 24), v150);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
    }
    uint64_t v84 = v148[11];
    uint64_t v85 = (void *)((char *)a1 + v84);
    uint64_t v86 = (void *)((char *)a2 + v84);
    uint64_t v87 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v88 = *(void *)(v87 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
    {
      uint64_t v89 = sub_1000046DC(&qword_100299F28);
      memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      uint64_t v90 = v15;
      uint64_t v91 = *v86;
      unint64_t v92 = v86[1];
      sub_1000059E8(*v86, v92);
      *uint64_t v85 = v91;
      v85[1] = v92;
      uint64_t v93 = v86[2];
      unint64_t v94 = v86[3];
      sub_1000059E8(v93, v94);
      v85[2] = v93;
      v85[3] = v94;
      v152((char *)v85 + *(int *)(v87 + 24), (char *)v86 + *(int *)(v87 + 24), v90);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
    }
    uint64_t v95 = v153;
    a3 = v154;
LABEL_40:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(a1, 0, 1, v6);
    goto LABEL_41;
  }
  uint64_t v8 = sub_1000046DC(&qword_100299658);
  memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_41:
  uint64_t v142 = *(int *)(a3 + 20);
  uint64_t v143 = (char *)a1 + v142;
  uint64_t v144 = (char *)a2 + v142;
  uint64_t v145 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
  return a1;
}

void *assignWithCopy for PeerDifference(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000D7E78((uint64_t)a1, type metadata accessor for PeerDifference.OneOf_Operation);
      goto LABEL_9;
    }
    if (a1 == a2) {
      goto LABEL_87;
    }
    sub_1000D7E78((uint64_t)a1, type metadata accessor for PeerDifference.OneOf_Operation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v310 = a3;
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v103 = type metadata accessor for Peer(0);
      uint64_t v104 = *(int *)(v103 + 24);
      v305 = (char *)a1 + v104;
      uint64_t v105 = (char *)a2 + v104;
      uint64_t v106 = sub_100221DF0();
      unint64_t v107 = *(void (**)(char *, char *))(*(void *)(v106 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v108 = v105;
      unint64_t v109 = v107;
      ((void (*)(char *, char *, uint64_t))v107)(v305, v108, v106);
      v301 = (int *)v103;
      uint64_t v110 = *(int *)(v103 + 28);
      uint64_t v111 = (void *)((char *)a1 + v110);
      unint64_t v112 = (void *)((char *)a2 + v110);
      uint64_t v113 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v114 = *(void *)(v113 - 8);
      v308 = v109;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
      {
        uint64_t v40 = v106;
        uint64_t v115 = sub_1000046DC(&qword_10029EF80);
        memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
      }
      else
      {
        uint64_t v186 = *v112;
        unint64_t v185 = v112[1];
        sub_1000059E8(*v112, v185);
        *uint64_t v111 = v186;
        v111[1] = v185;
        uint64_t v187 = v112[2];
        unint64_t v188 = v112[3];
        sub_1000059E8(v187, v188);
        v111[2] = v187;
        v111[3] = v188;
        uint64_t v40 = v106;
        v308((char *)v111 + *(int *)(v113 + 24), (char *)v112 + *(int *)(v113 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
      }
      uint64_t v189 = v301[8];
      uint64_t v190 = (void *)((char *)a1 + v189);
      uint64_t v191 = (void *)((char *)a2 + v189);
      uint64_t v192 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v193 = *(void *)(v192 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
      {
        uint64_t v194 = sub_1000046DC(&qword_100299F18);
        memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
      }
      else
      {
        uint64_t v215 = *v191;
        unint64_t v216 = v191[1];
        sub_1000059E8(*v191, v216);
        *uint64_t v190 = v215;
        v190[1] = v216;
        uint64_t v217 = v191[2];
        unint64_t v218 = v191[3];
        sub_1000059E8(v217, v218);
        v190[2] = v217;
        v190[3] = v218;
        uint64_t v40 = v106;
        v308((char *)v190 + *(int *)(v192 + 24), (char *)v191 + *(int *)(v192 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
      }
      uint64_t v219 = v301[9];
      v220 = (void *)((char *)a1 + v219);
      v221 = (void *)((char *)a2 + v219);
      uint64_t v222 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v223 = *(void *)(v222 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v223 + 48))(v221, 1, v222))
      {
        uint64_t v224 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v220, v221, *(void *)(*(void *)(v224 - 8) + 64));
      }
      else
      {
        uint64_t v245 = *v221;
        unint64_t v246 = v221[1];
        sub_1000059E8(*v221, v246);
        void *v220 = v245;
        v220[1] = v246;
        uint64_t v247 = v221[2];
        unint64_t v248 = v221[3];
        sub_1000059E8(v247, v248);
        v220[2] = v247;
        v220[3] = v248;
        uint64_t v40 = v106;
        v308((char *)v220 + *(int *)(v222 + 24), (char *)v221 + *(int *)(v222 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v223 + 56))(v220, 0, 1, v222);
      }
      uint64_t v249 = v301[10];
      v250 = (void *)((char *)a1 + v249);
      v251 = (void *)((char *)a2 + v249);
      uint64_t v252 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v253 = *(void *)(v252 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v253 + 48))(v251, 1, v252))
      {
        uint64_t v254 = sub_1000046DC(&qword_100299F20);
        memcpy(v250, v251, *(void *)(*(void *)(v254 - 8) + 64));
      }
      else
      {
        uint64_t v274 = *v251;
        unint64_t v275 = v251[1];
        sub_1000059E8(*v251, v275);
        void *v250 = v274;
        v250[1] = v275;
        uint64_t v276 = v251[2];
        unint64_t v277 = v251[3];
        sub_1000059E8(v276, v277);
        v250[2] = v276;
        v250[3] = v277;
        uint64_t v40 = v106;
        v308((char *)v250 + *(int *)(v252 + 24), (char *)v251 + *(int *)(v252 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v253 + 56))(v250, 0, 1, v252);
      }
      uint64_t v278 = v301[11];
      v270 = (void *)((char *)a1 + v278);
      v271 = (void *)((char *)a2 + v278);
      uint64_t v272 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v273 = *(void *)(v272 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v273 + 48))(v271, 1, v272)) {
        goto LABEL_82;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v28 = type metadata accessor for Peer(0);
      uint64_t v29 = *(int *)(v28 + 24);
      v304 = (char *)a1 + v29;
      uint64_t v30 = (char *)a2 + v29;
      uint64_t v31 = sub_100221DF0();
      uint64_t v32 = *(void (**)(char *, char *))(*(void *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v33 = v30;
      uint64_t v34 = v32;
      ((void (*)(char *, char *, uint64_t))v32)(v304, v33, v31);
      v299 = (int *)v28;
      uint64_t v35 = *(int *)(v28 + 28);
      uint64_t v36 = (void *)((char *)a1 + v35);
      uint64_t v37 = (void *)((char *)a2 + v35);
      uint64_t v38 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v39 = *(void *)(v38 - 8);
      v308 = v34;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        uint64_t v40 = v31;
        uint64_t v41 = sub_1000046DC(&qword_10029EF80);
        memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        uint64_t v176 = *v37;
        unint64_t v175 = v37[1];
        sub_1000059E8(*v37, v175);
        *uint64_t v36 = v176;
        v36[1] = v175;
        uint64_t v177 = v37[2];
        unint64_t v178 = v37[3];
        sub_1000059E8(v177, v178);
        v36[2] = v177;
        v36[3] = v178;
        uint64_t v40 = v31;
        v308((char *)v36 + *(int *)(v38 + 24), (char *)v37 + *(int *)(v38 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      uint64_t v179 = v299[8];
      uint64_t v180 = (void *)((char *)a1 + v179);
      uint64_t v181 = (void *)((char *)a2 + v179);
      uint64_t v182 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v183 = *(void *)(v182 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v183 + 48))(v181, 1, v182))
      {
        uint64_t v184 = sub_1000046DC(&qword_100299F18);
        memcpy(v180, v181, *(void *)(*(void *)(v184 - 8) + 64));
      }
      else
      {
        uint64_t v205 = *v181;
        unint64_t v206 = v181[1];
        sub_1000059E8(*v181, v206);
        *uint64_t v180 = v205;
        v180[1] = v206;
        uint64_t v207 = v181[2];
        unint64_t v208 = v181[3];
        sub_1000059E8(v207, v208);
        v180[2] = v207;
        v180[3] = v208;
        uint64_t v40 = v31;
        v308((char *)v180 + *(int *)(v182 + 24), (char *)v181 + *(int *)(v182 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v183 + 56))(v180, 0, 1, v182);
      }
      uint64_t v209 = v299[9];
      v210 = (void *)((char *)a1 + v209);
      v211 = (void *)((char *)a2 + v209);
      uint64_t v212 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v213 = *(void *)(v212 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v213 + 48))(v211, 1, v212))
      {
        uint64_t v214 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v210, v211, *(void *)(*(void *)(v214 - 8) + 64));
      }
      else
      {
        uint64_t v235 = *v211;
        unint64_t v236 = v211[1];
        sub_1000059E8(*v211, v236);
        void *v210 = v235;
        v210[1] = v236;
        uint64_t v237 = v211[2];
        unint64_t v238 = v211[3];
        sub_1000059E8(v237, v238);
        v210[2] = v237;
        v210[3] = v238;
        uint64_t v40 = v31;
        v308((char *)v210 + *(int *)(v212 + 24), (char *)v211 + *(int *)(v212 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v213 + 56))(v210, 0, 1, v212);
      }
      uint64_t v239 = v299[10];
      v240 = (void *)((char *)a1 + v239);
      v241 = (void *)((char *)a2 + v239);
      uint64_t v242 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v243 = *(void *)(v242 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v243 + 48))(v241, 1, v242))
      {
        uint64_t v244 = sub_1000046DC(&qword_100299F20);
        memcpy(v240, v241, *(void *)(*(void *)(v244 - 8) + 64));
      }
      else
      {
        uint64_t v265 = *v241;
        unint64_t v266 = v241[1];
        sub_1000059E8(*v241, v266);
        void *v240 = v265;
        v240[1] = v266;
        uint64_t v267 = v241[2];
        unint64_t v268 = v241[3];
        sub_1000059E8(v267, v268);
        v240[2] = v267;
        v240[3] = v268;
        uint64_t v40 = v31;
        v308((char *)v240 + *(int *)(v242 + 24), (char *)v241 + *(int *)(v242 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v243 + 56))(v240, 0, 1, v242);
      }
      uint64_t v269 = v299[11];
      v270 = (void *)((char *)a1 + v269);
      v271 = (void *)((char *)a2 + v269);
      uint64_t v272 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v273 = *(void *)(v272 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v273 + 48))(v271, 1, v272))
      {
LABEL_82:
        uint64_t v279 = sub_1000046DC(&qword_100299F28);
        memcpy(v270, v271, *(void *)(*(void *)(v279 - 8) + 64));
LABEL_86:
        swift_storeEnumTagMultiPayload();
        a3 = v310;
        goto LABEL_87;
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v116 = type metadata accessor for Peer(0);
      uint64_t v117 = *(int *)(v116 + 24);
      v306 = (char *)a1 + v117;
      uint64_t v118 = (char *)a2 + v117;
      uint64_t v119 = sub_100221DF0();
      uint64_t v120 = *(void (**)(char *, char *))(*(void *)(v119 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v121 = v118;
      unint64_t v122 = v120;
      ((void (*)(char *, char *, uint64_t))v120)(v306, v121, v119);
      v302 = (int *)v116;
      uint64_t v123 = *(int *)(v116 + 28);
      uint64_t v124 = (void *)((char *)a1 + v123);
      uint64_t v125 = (void *)((char *)a2 + v123);
      uint64_t v126 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v127 = *(void *)(v126 - 8);
      v308 = v122;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
      {
        uint64_t v40 = v119;
        uint64_t v128 = sub_1000046DC(&qword_10029EF80);
        memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        uint64_t v196 = *v125;
        unint64_t v195 = v125[1];
        sub_1000059E8(*v125, v195);
        *uint64_t v124 = v196;
        v124[1] = v195;
        uint64_t v197 = v125[2];
        unint64_t v198 = v125[3];
        sub_1000059E8(v197, v198);
        v124[2] = v197;
        v124[3] = v198;
        uint64_t v40 = v119;
        v308((char *)v124 + *(int *)(v126 + 24), (char *)v125 + *(int *)(v126 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
      }
      uint64_t v199 = v302[8];
      v200 = (void *)((char *)a1 + v199);
      v201 = (void *)((char *)a2 + v199);
      uint64_t v202 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v203 = *(void *)(v202 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
      {
        uint64_t v204 = sub_1000046DC(&qword_100299F18);
        memcpy(v200, v201, *(void *)(*(void *)(v204 - 8) + 64));
      }
      else
      {
        uint64_t v225 = *v201;
        unint64_t v226 = v201[1];
        sub_1000059E8(*v201, v226);
        void *v200 = v225;
        v200[1] = v226;
        uint64_t v227 = v201[2];
        unint64_t v228 = v201[3];
        sub_1000059E8(v227, v228);
        v200[2] = v227;
        v200[3] = v228;
        uint64_t v40 = v119;
        v308((char *)v200 + *(int *)(v202 + 24), (char *)v201 + *(int *)(v202 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
      }
      uint64_t v229 = v302[9];
      v230 = (void *)((char *)a1 + v229);
      v231 = (void *)((char *)a2 + v229);
      uint64_t v232 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v233 = *(void *)(v232 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v233 + 48))(v231, 1, v232))
      {
        uint64_t v234 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v230, v231, *(void *)(*(void *)(v234 - 8) + 64));
      }
      else
      {
        uint64_t v255 = *v231;
        unint64_t v256 = v231[1];
        sub_1000059E8(*v231, v256);
        void *v230 = v255;
        v230[1] = v256;
        uint64_t v257 = v231[2];
        unint64_t v258 = v231[3];
        sub_1000059E8(v257, v258);
        v230[2] = v257;
        v230[3] = v258;
        uint64_t v40 = v119;
        v308((char *)v230 + *(int *)(v232 + 24), (char *)v231 + *(int *)(v232 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v233 + 56))(v230, 0, 1, v232);
      }
      uint64_t v259 = v302[10];
      v260 = (void *)((char *)a1 + v259);
      v261 = (void *)((char *)a2 + v259);
      uint64_t v262 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v263 = *(void *)(v262 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v263 + 48))(v261, 1, v262))
      {
        uint64_t v264 = sub_1000046DC(&qword_100299F20);
        memcpy(v260, v261, *(void *)(*(void *)(v264 - 8) + 64));
      }
      else
      {
        uint64_t v280 = *v261;
        unint64_t v281 = v261[1];
        sub_1000059E8(*v261, v281);
        void *v260 = v280;
        v260[1] = v281;
        uint64_t v282 = v261[2];
        unint64_t v283 = v261[3];
        sub_1000059E8(v282, v283);
        v260[2] = v282;
        v260[3] = v283;
        uint64_t v40 = v119;
        v308((char *)v260 + *(int *)(v262 + 24), (char *)v261 + *(int *)(v262 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v263 + 56))(v260, 0, 1, v262);
      }
      uint64_t v284 = v302[11];
      v270 = (void *)((char *)a1 + v284);
      v271 = (void *)((char *)a2 + v284);
      uint64_t v272 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v273 = *(void *)(v272 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v273 + 48))(v271, 1, v272)) {
        goto LABEL_82;
      }
    }
    uint64_t v285 = v40;
    uint64_t v286 = *v271;
    unint64_t v287 = v271[1];
    sub_1000059E8(*v271, v287);
    void *v270 = v286;
    v270[1] = v287;
    uint64_t v288 = v271[2];
    unint64_t v289 = v271[3];
    sub_1000059E8(v288, v289);
    v270[2] = v288;
    v270[3] = v289;
    ((void (*)(char *, char *, uint64_t))v308)((char *)v270 + *(int *)(v272 + 24), (char *)v271 + *(int *)(v272 + 24), v285);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v270, 0, 1, v272);
    goto LABEL_86;
  }
  if (v10)
  {
LABEL_9:
    uint64_t v26 = sub_1000046DC(&qword_100299658);
    memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_87;
  }
  int v11 = swift_getEnumCaseMultiPayload();
  uint64_t v307 = v7;
  uint64_t v309 = a3;
  if (v11 == 2 || v11 == 1)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    uint64_t v12 = type metadata accessor for Peer(0);
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100221DF0();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    uint64_t v18 = v16;
    swift_bridgeObjectRetain();
    uint64_t v19 = v17;
    swift_bridgeObjectRetain();
    v17(v14, v15, v18);
    v296 = (int *)v12;
    uint64_t v20 = *(int *)(v12 + 28);
    uint64_t v21 = (void *)((char *)a1 + v20);
    unint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = type metadata accessor for SignedPeerPermanentInfo(0);
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v298 = v18;
    v303 = v19;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_1000046DC(&qword_10029EF80);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v57 = *v22;
      unint64_t v58 = v22[1];
      sub_1000059E8(*v22, v58);
      *uint64_t v21 = v57;
      v21[1] = v58;
      uint64_t v59 = v22[2];
      unint64_t v60 = v22[3];
      sub_1000059E8(v59, v60);
      v21[2] = v59;
      v21[3] = v60;
      uint64_t v18 = v298;
      v303((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v298);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v61 = v296[8];
    uint64_t v62 = (void *)((char *)a1 + v61);
    unint64_t v63 = (void *)((char *)a2 + v61);
    uint64_t v64 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v65 = *(void *)(v64 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      uint64_t v66 = sub_1000046DC(&qword_100299F18);
      memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      uint64_t v67 = *v63;
      unint64_t v68 = v63[1];
      sub_1000059E8(*v63, v68);
      *uint64_t v62 = v67;
      v62[1] = v68;
      uint64_t v69 = v63[2];
      unint64_t v70 = v63[3];
      sub_1000059E8(v69, v70);
      v62[2] = v69;
      v62[3] = v70;
      uint64_t v18 = v298;
      v303((char *)v62 + *(int *)(v64 + 24), (char *)v63 + *(int *)(v64 + 24), v298);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    uint64_t v71 = v296[9];
    uint64_t v72 = (void *)((char *)a1 + v71);
    unint64_t v73 = (void *)((char *)a2 + v71);
    uint64_t v74 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v75 = *(void *)(v74 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
    {
      uint64_t v76 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      uint64_t v77 = *v73;
      unint64_t v78 = v73[1];
      sub_1000059E8(*v73, v78);
      *uint64_t v72 = v77;
      v72[1] = v78;
      uint64_t v79 = v73[2];
      unint64_t v80 = v73[3];
      sub_1000059E8(v79, v80);
      v72[2] = v79;
      v72[3] = v80;
      uint64_t v18 = v298;
      v303((char *)v72 + *(int *)(v74 + 24), (char *)v73 + *(int *)(v74 + 24), v298);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    uint64_t v81 = v296[10];
    uint64_t v82 = (void *)((char *)a1 + v81);
    unint64_t v83 = (void *)((char *)a2 + v81);
    uint64_t v84 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v85 = *(void *)(v84 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
    {
      uint64_t v86 = sub_1000046DC(&qword_100299F20);
      memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      uint64_t v87 = *v83;
      unint64_t v88 = v83[1];
      sub_1000059E8(*v83, v88);
      *uint64_t v82 = v87;
      v82[1] = v88;
      uint64_t v89 = v83[2];
      unint64_t v90 = v83[3];
      sub_1000059E8(v89, v90);
      v82[2] = v89;
      v82[3] = v90;
      uint64_t v18 = v298;
      v303((char *)v82 + *(int *)(v84 + 24), (char *)v83 + *(int *)(v84 + 24), v298);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
    }
    uint64_t v91 = v296[11];
    unint64_t v92 = (void *)((char *)a1 + v91);
    uint64_t v93 = (void *)((char *)a2 + v91);
    uint64_t v94 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v95 = *(void *)(v94 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
    {
      uint64_t v96 = sub_1000046DC(&qword_100299F28);
      memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
    }
    else
    {
      uint64_t v97 = v18;
      uint64_t v98 = *v93;
      unint64_t v99 = v93[1];
      sub_1000059E8(*v93, v99);
      *unint64_t v92 = v98;
      v92[1] = v99;
      uint64_t v100 = v93[2];
      unint64_t v101 = v93[3];
      sub_1000059E8(v100, v101);
      v92[2] = v100;
      v92[3] = v101;
      v303((char *)v92 + *(int *)(v94 + 24), (char *)v93 + *(int *)(v94 + 24), v97);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
    }
    uint64_t v102 = v307;
    a3 = v309;
  }
  else
  {
    uint64_t v295 = v6;
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    uint64_t v42 = type metadata accessor for Peer(0);
    uint64_t v43 = *(int *)(v42 + 24);
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    uint64_t v46 = sub_100221DF0();
    uint64_t v47 = *(void (**)(void, void))(*(void *)(v46 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = v45;
    uint64_t v49 = v47;
    ((void (*)(char *, char *, uint64_t))v47)(v44, v48, v46);
    v297 = (int *)v42;
    uint64_t v50 = *(int *)(v42 + 28);
    unint64_t v51 = (void *)((char *)a1 + v50);
    uint64_t v52 = (void *)((char *)a2 + v50);
    uint64_t v53 = type metadata accessor for SignedPeerPermanentInfo(0);
    uint64_t v54 = *(void *)(v53 - 8);
    v300 = v49;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      uint64_t v55 = v46;
      uint64_t v56 = sub_1000046DC(&qword_10029EF80);
      memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      uint64_t v130 = *v52;
      unint64_t v129 = v52[1];
      sub_1000059E8(*v52, v129);
      *unint64_t v51 = v130;
      v51[1] = v129;
      uint64_t v131 = v52[2];
      unint64_t v132 = v52[3];
      sub_1000059E8(v131, v132);
      v51[2] = v131;
      v51[3] = v132;
      uint64_t v49 = v300;
      uint64_t v55 = v46;
      v300((char *)v51 + *(int *)(v53 + 24), (char *)v52 + *(int *)(v53 + 24));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    uint64_t v133 = v297[8];
    uint64_t v134 = (void *)((char *)a1 + v133);
    uint64_t v135 = (void *)((char *)a2 + v133);
    uint64_t v136 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v137 = *(void *)(v136 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v137 + 48))(v135, 1, v136))
    {
      uint64_t v138 = sub_1000046DC(&qword_100299F18);
      memcpy(v134, v135, *(void *)(*(void *)(v138 - 8) + 64));
    }
    else
    {
      uint64_t v139 = *v135;
      unint64_t v140 = v135[1];
      sub_1000059E8(*v135, v140);
      *uint64_t v134 = v139;
      v134[1] = v140;
      uint64_t v141 = v135[2];
      unint64_t v142 = v135[3];
      sub_1000059E8(v141, v142);
      v134[2] = v141;
      v134[3] = v142;
      uint64_t v49 = v300;
      uint64_t v55 = v46;
      v300((char *)v134 + *(int *)(v136 + 24), (char *)v135 + *(int *)(v136 + 24));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v134, 0, 1, v136);
    }
    uint64_t v143 = v297[9];
    uint64_t v144 = (void *)((char *)a1 + v143);
    uint64_t v145 = (void *)((char *)a2 + v143);
    uint64_t v146 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v147 = *(void *)(v146 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v147 + 48))(v145, 1, v146))
    {
      uint64_t v148 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v144, v145, *(void *)(*(void *)(v148 - 8) + 64));
    }
    else
    {
      uint64_t v149 = *v145;
      unint64_t v150 = v145[1];
      sub_1000059E8(*v145, v150);
      *uint64_t v144 = v149;
      v144[1] = v150;
      uint64_t v151 = v145[2];
      unint64_t v152 = v145[3];
      sub_1000059E8(v151, v152);
      v144[2] = v151;
      v144[3] = v152;
      uint64_t v49 = v300;
      uint64_t v55 = v46;
      v300((char *)v144 + *(int *)(v146 + 24), (char *)v145 + *(int *)(v146 + 24));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
    }
    uint64_t v153 = v297[10];
    uint64_t v154 = (void *)((char *)a1 + v153);
    uint64_t v155 = (void *)((char *)a2 + v153);
    uint64_t v156 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v157 = *(void *)(v156 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
    {
      uint64_t v158 = sub_1000046DC(&qword_100299F20);
      memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
    }
    else
    {
      uint64_t v159 = *v155;
      unint64_t v160 = v155[1];
      sub_1000059E8(*v155, v160);
      void *v154 = v159;
      v154[1] = v160;
      uint64_t v161 = v155[2];
      unint64_t v162 = v155[3];
      sub_1000059E8(v161, v162);
      v154[2] = v161;
      v154[3] = v162;
      uint64_t v49 = v300;
      uint64_t v55 = v46;
      v300((char *)v154 + *(int *)(v156 + 24), (char *)v155 + *(int *)(v156 + 24));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
    }
    uint64_t v163 = v297[11];
    uint64_t v164 = (void *)((char *)a1 + v163);
    uint64_t v165 = (void *)((char *)a2 + v163);
    uint64_t v166 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v167 = *(void *)(v166 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
    {
      uint64_t v168 = sub_1000046DC(&qword_100299F28);
      memcpy(v164, v165, *(void *)(*(void *)(v168 - 8) + 64));
    }
    else
    {
      uint64_t v169 = v55;
      uint64_t v170 = (void (*)(char *, char *, uint64_t))v49;
      uint64_t v171 = *v165;
      unint64_t v172 = v165[1];
      sub_1000059E8(*v165, v172);
      *uint64_t v164 = v171;
      v164[1] = v172;
      uint64_t v173 = v165[2];
      unint64_t v174 = v165[3];
      sub_1000059E8(v173, v174);
      v164[2] = v173;
      v164[3] = v174;
      v170((char *)v164 + *(int *)(v166 + 24), (char *)v165 + *(int *)(v166 + 24), v169);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
    }
    uint64_t v102 = v307;
    a3 = v309;
    uint64_t v6 = v295;
  }
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(a1, 0, 1, v6);
LABEL_87:
  uint64_t v290 = *(int *)(a3 + 20);
  v291 = (char *)a1 + v290;
  v292 = (char *)a2 + v290;
  uint64_t v293 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v293 - 8) + 24))(v291, v292, v293);
  return a1;
}

void *initializeWithTake for PeerDifference(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v102 = a3;
    uint64_t v101 = v7;
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v10 = type metadata accessor for Peer(0);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_100221DF0();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(v12, v13, v14);
      uint64_t v95 = (int *)v10;
      uint64_t v16 = *(int *)(v10 + 28);
      uint64_t v17 = (_OWORD *)((char *)a1 + v16);
      uint64_t v18 = (_OWORD *)((char *)a2 + v16);
      uint64_t v19 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v20 = *(void *)(v19 - 8);
      unint64_t v99 = v15;
      uint64_t v97 = v14;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_1000046DC(&qword_10029EF80);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        long long v34 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v34;
        v15((char *)v17 + *(int *)(v19 + 24), (char *)v18 + *(int *)(v19 + 24), v14);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v35 = v95[8];
      uint64_t v36 = (_OWORD *)((char *)a1 + v35);
      uint64_t v37 = (_OWORD *)((char *)a2 + v35);
      uint64_t v38 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = v101;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        uint64_t v41 = sub_1000046DC(&qword_100299F18);
        memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = v97;
      }
      else
      {
        long long v43 = v37[1];
        *uint64_t v36 = *v37;
        v36[1] = v43;
        uint64_t v42 = v97;
        v99((char *)v36 + *(int *)(v38 + 24), (char *)v37 + *(int *)(v38 + 24), v97);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      uint64_t v44 = v95[9];
      uint64_t v45 = (_OWORD *)((char *)a1 + v44);
      uint64_t v46 = (_OWORD *)((char *)a2 + v44);
      uint64_t v47 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        uint64_t v49 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        long long v50 = v46[1];
        _OWORD *v45 = *v46;
        v45[1] = v50;
        v99((char *)v45 + *(int *)(v47 + 24), (char *)v46 + *(int *)(v47 + 24), v42);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      uint64_t v51 = v95[10];
      uint64_t v52 = (_OWORD *)((char *)a1 + v51);
      uint64_t v53 = (_OWORD *)((char *)a2 + v51);
      uint64_t v54 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v55 = *(void *)(v54 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        uint64_t v56 = sub_1000046DC(&qword_100299F20);
        memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        long long v57 = v53[1];
        *uint64_t v52 = *v53;
        v52[1] = v57;
        v99((char *)v52 + *(int *)(v54 + 24), (char *)v53 + *(int *)(v54 + 24), v42);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      uint64_t v58 = v95[11];
      uint64_t v59 = (char *)a1 + v58;
      unint64_t v60 = (char *)a2 + v58;
      uint64_t v61 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v62 = *(void *)(v61 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        long long v63 = *((_OWORD *)v60 + 1);
        *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
        *((_OWORD *)v59 + 1) = v63;
        v99(&v59[*(int *)(v61 + 24)], &v60[*(int *)(v61 + 24)], v42);
LABEL_34:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        goto LABEL_35;
      }
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v22 = type metadata accessor for Peer(0);
      uint64_t v23 = *(int *)(v22 + 24);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_100221DF0();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
      v27(v24, v25, v26);
      uint64_t v100 = (int *)v22;
      uint64_t v28 = *(int *)(v22 + 28);
      uint64_t v29 = (_OWORD *)((char *)a1 + v28);
      uint64_t v30 = (_OWORD *)((char *)a2 + v28);
      uint64_t v31 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v98 = v27;
      uint64_t v96 = v26;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        uint64_t v33 = sub_1000046DC(&qword_10029EF80);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        long long v64 = v30[1];
        _OWORD *v29 = *v30;
        v29[1] = v64;
        v27((char *)v29 + *(int *)(v31 + 24), (char *)v30 + *(int *)(v31 + 24), v26);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      uint64_t v40 = v101;
      uint64_t v65 = v100[8];
      uint64_t v66 = (_OWORD *)((char *)a1 + v65);
      uint64_t v67 = (_OWORD *)((char *)a2 + v65);
      uint64_t v68 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v69 = *(void *)(v68 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
      {
        uint64_t v70 = sub_1000046DC(&qword_100299F18);
        memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
        uint64_t v71 = v96;
      }
      else
      {
        long long v72 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v72;
        uint64_t v71 = v96;
        v98((char *)v66 + *(int *)(v68 + 24), (char *)v67 + *(int *)(v68 + 24), v96);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
      }
      uint64_t v73 = v100[9];
      uint64_t v74 = (_OWORD *)((char *)a1 + v73);
      uint64_t v75 = (_OWORD *)((char *)a2 + v73);
      uint64_t v76 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v77 = *(void *)(v76 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        uint64_t v78 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        long long v79 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v79;
        v98((char *)v74 + *(int *)(v76 + 24), (char *)v75 + *(int *)(v76 + 24), v71);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      uint64_t v80 = v100[10];
      uint64_t v81 = (_OWORD *)((char *)a1 + v80);
      uint64_t v82 = (_OWORD *)((char *)a2 + v80);
      uint64_t v83 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v84 = *(void *)(v83 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
      {
        uint64_t v85 = sub_1000046DC(&qword_100299F20);
        memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        long long v86 = v82[1];
        *uint64_t v81 = *v82;
        v81[1] = v86;
        v98((char *)v81 + *(int *)(v83 + 24), (char *)v82 + *(int *)(v83 + 24), v71);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
      }
      uint64_t v87 = v100[11];
      uint64_t v59 = (char *)a1 + v87;
      unint64_t v60 = (char *)a2 + v87;
      uint64_t v61 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v62 = *(void *)(v61 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        long long v89 = *((_OWORD *)v60 + 1);
        *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
        *((_OWORD *)v59 + 1) = v89;
        v98(&v59[*(int *)(v61 + 24)], &v60[*(int *)(v61 + 24)], v71);
        goto LABEL_34;
      }
    }
    uint64_t v88 = sub_1000046DC(&qword_100299F28);
    memcpy(v59, v60, *(void *)(*(void *)(v88 - 8) + 64));
LABEL_35:
    a3 = v102;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v6);
    goto LABEL_36;
  }
  uint64_t v8 = sub_1000046DC(&qword_100299658);
  memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_36:
  uint64_t v90 = *(int *)(a3 + 20);
  uint64_t v91 = (char *)a1 + v90;
  unint64_t v92 = (char *)a2 + v90;
  uint64_t v93 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
  return a1;
}

void *assignWithTake for PeerDifference(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000D7E78((uint64_t)a1, type metadata accessor for PeerDifference.OneOf_Operation);
      goto LABEL_9;
    }
    if (a1 == a2) {
      goto LABEL_66;
    }
    sub_1000D7E78((uint64_t)a1, type metadata accessor for PeerDifference.OneOf_Operation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v267 = a3;
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v70 = type metadata accessor for Peer(0);
      uint64_t v71 = *(int *)(v70 + 24);
      long long v72 = (char *)a1 + v71;
      uint64_t v73 = (char *)a2 + v71;
      uint64_t v74 = sub_100221DF0();
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32);
      v31(v72, v73, v74);
      uint64_t v263 = (int *)v70;
      uint64_t v75 = *(int *)(v70 + 28);
      uint64_t v76 = (_OWORD *)((char *)a1 + v75);
      uint64_t v77 = (_OWORD *)((char *)a2 + v75);
      uint64_t v78 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v79 = *(void *)(v78 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
      {
        uint64_t v80 = sub_1000046DC(&qword_10029EF80);
        memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        long long v187 = v77[1];
        *uint64_t v76 = *v77;
        v76[1] = v187;
        v31((char *)v76 + *(int *)(v78 + 24), (char *)v77 + *(int *)(v78 + 24), v74);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
      }
      uint64_t v188 = v263[8];
      uint64_t v189 = (_OWORD *)((char *)a1 + v188);
      uint64_t v190 = (_OWORD *)((char *)a2 + v188);
      uint64_t v191 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v192 = *(void *)(v191 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v192 + 48))(v190, 1, v191))
      {
        uint64_t v193 = sub_1000046DC(&qword_100299F18);
        memcpy(v189, v190, *(void *)(*(void *)(v193 - 8) + 64));
        uint64_t v186 = v74;
      }
      else
      {
        long long v208 = v190[1];
        *uint64_t v189 = *v190;
        v189[1] = v208;
        uint64_t v186 = v74;
        v31((char *)v189 + *(int *)(v191 + 24), (char *)v190 + *(int *)(v191 + 24), v74);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v192 + 56))(v189, 0, 1, v191);
      }
      uint64_t v209 = v263[9];
      v210 = (_OWORD *)((char *)a1 + v209);
      v211 = (_OWORD *)((char *)a2 + v209);
      uint64_t v212 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v213 = *(void *)(v212 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v213 + 48))(v211, 1, v212))
      {
        uint64_t v214 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v210, v211, *(void *)(*(void *)(v214 - 8) + 64));
      }
      else
      {
        long long v229 = v211[1];
        _OWORD *v210 = *v211;
        v210[1] = v229;
        v31((char *)v210 + *(int *)(v212 + 24), (char *)v211 + *(int *)(v212 + 24), v186);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v213 + 56))(v210, 0, 1, v212);
      }
      uint64_t v230 = v263[10];
      v231 = (_OWORD *)((char *)a1 + v230);
      uint64_t v232 = (_OWORD *)((char *)a2 + v230);
      uint64_t v233 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v234 = *(void *)(v233 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v234 + 48))(v232, 1, v233))
      {
        uint64_t v235 = sub_1000046DC(&qword_100299F20);
        memcpy(v231, v232, *(void *)(*(void *)(v235 - 8) + 64));
      }
      else
      {
        long long v249 = v232[1];
        _OWORD *v231 = *v232;
        v231[1] = v249;
        v31((char *)v231 + *(int *)(v233 + 24), (char *)v232 + *(int *)(v233 + 24), v186);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
      }
      uint64_t v250 = v263[11];
      uint64_t v245 = (_OWORD *)((char *)a1 + v250);
      unint64_t v246 = (_OWORD *)((char *)a2 + v250);
      uint64_t v247 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v248 = *(void *)(v247 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v248 + 48))(v246, 1, v247)) {
        goto LABEL_102;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v26 = type metadata accessor for Peer(0);
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = sub_100221DF0();
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
      v31(v28, v29, v30);
      v260 = (int *)v26;
      uint64_t v32 = *(int *)(v26 + 28);
      uint64_t v33 = (_OWORD *)((char *)a1 + v32);
      long long v34 = (_OWORD *)((char *)a2 + v32);
      uint64_t v35 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        uint64_t v37 = sub_1000046DC(&qword_10029EF80);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        long long v179 = v34[1];
        *uint64_t v33 = *v34;
        v33[1] = v179;
        v31((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v30);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      uint64_t v180 = v260[8];
      uint64_t v181 = (_OWORD *)((char *)a1 + v180);
      uint64_t v182 = (_OWORD *)((char *)a2 + v180);
      uint64_t v183 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v184 = *(void *)(v183 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v184 + 48))(v182, 1, v183))
      {
        uint64_t v185 = sub_1000046DC(&qword_100299F18);
        memcpy(v181, v182, *(void *)(*(void *)(v185 - 8) + 64));
        uint64_t v186 = v30;
      }
      else
      {
        long long v201 = v182[1];
        *uint64_t v181 = *v182;
        v181[1] = v201;
        uint64_t v186 = v30;
        v31((char *)v181 + *(int *)(v183 + 24), (char *)v182 + *(int *)(v183 + 24), v30);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v184 + 56))(v181, 0, 1, v183);
      }
      uint64_t v202 = v260[9];
      uint64_t v203 = (_OWORD *)((char *)a1 + v202);
      uint64_t v204 = (_OWORD *)((char *)a2 + v202);
      uint64_t v205 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v206 = *(void *)(v205 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205))
      {
        uint64_t v207 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v203, v204, *(void *)(*(void *)(v207 - 8) + 64));
      }
      else
      {
        long long v222 = v204[1];
        *uint64_t v203 = *v204;
        v203[1] = v222;
        v31((char *)v203 + *(int *)(v205 + 24), (char *)v204 + *(int *)(v205 + 24), v186);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
      }
      uint64_t v223 = v260[10];
      uint64_t v224 = (_OWORD *)((char *)a1 + v223);
      uint64_t v225 = (_OWORD *)((char *)a2 + v223);
      uint64_t v226 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v227 = *(void *)(v226 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
      {
        uint64_t v228 = sub_1000046DC(&qword_100299F20);
        memcpy(v224, v225, *(void *)(*(void *)(v228 - 8) + 64));
      }
      else
      {
        long long v243 = v225[1];
        *uint64_t v224 = *v225;
        v224[1] = v243;
        v31((char *)v224 + *(int *)(v226 + 24), (char *)v225 + *(int *)(v226 + 24), v186);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v227 + 56))(v224, 0, 1, v226);
      }
      uint64_t v244 = v260[11];
      uint64_t v245 = (_OWORD *)((char *)a1 + v244);
      unint64_t v246 = (_OWORD *)((char *)a2 + v244);
      uint64_t v247 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v248 = *(void *)(v247 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v248 + 48))(v246, 1, v247))
      {
LABEL_102:
        uint64_t v253 = sub_1000046DC(&qword_100299F28);
        memcpy(v245, v246, *(void *)(*(void *)(v253 - 8) + 64));
LABEL_104:
        a3 = v267;
        swift_storeEnumTagMultiPayload();
        goto LABEL_66;
      }
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v81 = type metadata accessor for Peer(0);
      uint64_t v82 = *(int *)(v81 + 24);
      uint64_t v83 = (char *)a1 + v82;
      uint64_t v84 = (char *)a2 + v82;
      uint64_t v85 = sub_100221DF0();
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32);
      v31(v83, v84, v85);
      uint64_t v264 = (int *)v81;
      uint64_t v86 = *(int *)(v81 + 28);
      uint64_t v87 = (_OWORD *)((char *)a1 + v86);
      uint64_t v88 = (_OWORD *)((char *)a2 + v86);
      uint64_t v89 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v90 = *(void *)(v89 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
      {
        uint64_t v91 = sub_1000046DC(&qword_10029EF80);
        memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        long long v194 = v88[1];
        *uint64_t v87 = *v88;
        v87[1] = v194;
        v31((char *)v87 + *(int *)(v89 + 24), (char *)v88 + *(int *)(v89 + 24), v85);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      }
      uint64_t v195 = v264[8];
      uint64_t v196 = (_OWORD *)((char *)a1 + v195);
      uint64_t v197 = (_OWORD *)((char *)a2 + v195);
      uint64_t v198 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v199 = *(void *)(v198 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v199 + 48))(v197, 1, v198))
      {
        uint64_t v200 = sub_1000046DC(&qword_100299F18);
        memcpy(v196, v197, *(void *)(*(void *)(v200 - 8) + 64));
        uint64_t v186 = v85;
      }
      else
      {
        long long v215 = v197[1];
        _OWORD *v196 = *v197;
        v196[1] = v215;
        uint64_t v186 = v85;
        v31((char *)v196 + *(int *)(v198 + 24), (char *)v197 + *(int *)(v198 + 24), v85);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v199 + 56))(v196, 0, 1, v198);
      }
      uint64_t v216 = v264[9];
      uint64_t v217 = (_OWORD *)((char *)a1 + v216);
      unint64_t v218 = (_OWORD *)((char *)a2 + v216);
      uint64_t v219 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v220 = *(void *)(v219 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v220 + 48))(v218, 1, v219))
      {
        uint64_t v221 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v217, v218, *(void *)(*(void *)(v221 - 8) + 64));
      }
      else
      {
        long long v236 = v218[1];
        *uint64_t v217 = *v218;
        v217[1] = v236;
        v31((char *)v217 + *(int *)(v219 + 24), (char *)v218 + *(int *)(v219 + 24), v186);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v220 + 56))(v217, 0, 1, v219);
      }
      uint64_t v237 = v264[10];
      unint64_t v238 = (_OWORD *)((char *)a1 + v237);
      uint64_t v239 = (_OWORD *)((char *)a2 + v237);
      uint64_t v240 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v241 = *(void *)(v240 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v241 + 48))(v239, 1, v240))
      {
        uint64_t v242 = sub_1000046DC(&qword_100299F20);
        memcpy(v238, v239, *(void *)(*(void *)(v242 - 8) + 64));
      }
      else
      {
        long long v251 = v239[1];
        *unint64_t v238 = *v239;
        v238[1] = v251;
        v31((char *)v238 + *(int *)(v240 + 24), (char *)v239 + *(int *)(v240 + 24), v186);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v241 + 56))(v238, 0, 1, v240);
      }
      uint64_t v252 = v264[11];
      uint64_t v245 = (_OWORD *)((char *)a1 + v252);
      unint64_t v246 = (_OWORD *)((char *)a2 + v252);
      uint64_t v247 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v248 = *(void *)(v247 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v248 + 48))(v246, 1, v247)) {
        goto LABEL_102;
      }
    }
    long long v254 = v246[1];
    *uint64_t v245 = *v246;
    v245[1] = v254;
    v31((char *)v245 + *(int *)(v247 + 24), (char *)v246 + *(int *)(v247 + 24), v186);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
    goto LABEL_104;
  }
  if (v10)
  {
LABEL_9:
    uint64_t v24 = sub_1000046DC(&qword_100299658);
    memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_66;
  }
  int v11 = swift_getEnumCaseMultiPayload();
  uint64_t v266 = a3;
  if (v11 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v38 = type metadata accessor for Peer(0);
    uint64_t v39 = *(int *)(v38 + 24);
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_100221DF0();
    long long v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32);
    v43(v40, v41, v42);
    v261 = (int *)v38;
    uint64_t v44 = *(int *)(v38 + 28);
    uint64_t v45 = (_OWORD *)((char *)a1 + v44);
    uint64_t v46 = (_OWORD *)((char *)a2 + v44);
    uint64_t v47 = type metadata accessor for SignedPeerPermanentInfo(0);
    uint64_t v48 = *(void *)(v47 - 8);
    unint64_t v258 = v43;
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = sub_1000046DC(&qword_10029EF80);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      long long v92 = v46[1];
      _OWORD *v45 = *v46;
      v45[1] = v92;
      v43((char *)v45 + *(int *)(v47 + 24), (char *)v46 + *(int *)(v47 + 24), v42);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    uint64_t v93 = v261[8];
    uint64_t v94 = (_OWORD *)((char *)a1 + v93);
    uint64_t v95 = (_OWORD *)((char *)a2 + v93);
    uint64_t v96 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v97 = *(void *)(v96 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
    {
      uint64_t v98 = sub_1000046DC(&qword_100299F18);
      memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
      uint64_t v99 = v42;
    }
    else
    {
      long long v115 = v95[1];
      _OWORD *v94 = *v95;
      v94[1] = v115;
      uint64_t v99 = v42;
      v258((char *)v94 + *(int *)(v96 + 24), (char *)v95 + *(int *)(v96 + 24), v42);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
    }
    uint64_t v116 = v261[9];
    uint64_t v117 = (_OWORD *)((char *)a1 + v116);
    uint64_t v118 = (_OWORD *)((char *)a2 + v116);
    uint64_t v119 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v120 = *(void *)(v119 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
    {
      uint64_t v121 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      long long v136 = v118[1];
      *uint64_t v117 = *v118;
      v117[1] = v136;
      v258((char *)v117 + *(int *)(v119 + 24), (char *)v118 + *(int *)(v119 + 24), v99);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
    }
    uint64_t v137 = v261[10];
    uint64_t v138 = (_OWORD *)((char *)a1 + v137);
    uint64_t v139 = (_OWORD *)((char *)a2 + v137);
    uint64_t v140 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v141 = *(void *)(v140 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v141 + 48))(v139, 1, v140))
    {
      uint64_t v142 = sub_1000046DC(&qword_100299F20);
      memcpy(v138, v139, *(void *)(*(void *)(v142 - 8) + 64));
    }
    else
    {
      long long v157 = v139[1];
      *uint64_t v138 = *v139;
      v138[1] = v157;
      v258((char *)v138 + *(int *)(v140 + 24), (char *)v139 + *(int *)(v140 + 24), v99);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
    }
    uint64_t v158 = v261[11];
    uint64_t v159 = (_OWORD *)((char *)a1 + v158);
    unint64_t v160 = (_OWORD *)((char *)a2 + v158);
    uint64_t v161 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v162 = *(void *)(v161 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
    {
      uint64_t v163 = sub_1000046DC(&qword_100299F28);
      memcpy(v159, v160, *(void *)(*(void *)(v163 - 8) + 64));
    }
    else
    {
      long long v172 = v160[1];
      _OWORD *v159 = *v160;
      v159[1] = v172;
      v258((char *)v159 + *(int *)(v161 + 24), (char *)v160 + *(int *)(v161 + 24), v99);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
    }
    a3 = v266;
  }
  else
  {
    uint64_t v265 = v7;
    if (v11 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v12 = type metadata accessor for Peer(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_100221DF0();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v17(v14, v15, v16);
      uint64_t v259 = (int *)v12;
      uint64_t v18 = *(int *)(v12 + 28);
      uint64_t v19 = (_OWORD *)((char *)a1 + v18);
      uint64_t v20 = (_OWORD *)((char *)a2 + v18);
      uint64_t v21 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v257 = v17;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_1000046DC(&qword_10029EF80);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        long long v62 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v62;
        v17((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v16);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      uint64_t v63 = v259[8];
      long long v64 = (_OWORD *)((char *)a1 + v63);
      uint64_t v65 = (_OWORD *)((char *)a2 + v63);
      uint64_t v66 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v67 = *(void *)(v66 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        uint64_t v68 = sub_1000046DC(&qword_100299F18);
        memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
        uint64_t v69 = v16;
      }
      else
      {
        long long v108 = v65[1];
        _OWORD *v64 = *v65;
        v64[1] = v108;
        uint64_t v69 = v16;
        v257((char *)v64 + *(int *)(v66 + 24), (char *)v65 + *(int *)(v66 + 24), v16);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
      uint64_t v109 = v259[9];
      uint64_t v110 = (_OWORD *)((char *)a1 + v109);
      uint64_t v111 = (_OWORD *)((char *)a2 + v109);
      uint64_t v112 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v113 = *(void *)(v112 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
      {
        uint64_t v114 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        long long v129 = v111[1];
        *uint64_t v110 = *v111;
        v110[1] = v129;
        v257((char *)v110 + *(int *)(v112 + 24), (char *)v111 + *(int *)(v112 + 24), v69);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
      }
      uint64_t v130 = v259[10];
      uint64_t v131 = (_OWORD *)((char *)a1 + v130);
      unint64_t v132 = (_OWORD *)((char *)a2 + v130);
      uint64_t v133 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v134 = *(void *)(v133 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
      {
        uint64_t v135 = sub_1000046DC(&qword_100299F20);
        memcpy(v131, v132, *(void *)(*(void *)(v135 - 8) + 64));
      }
      else
      {
        long long v150 = v132[1];
        *uint64_t v131 = *v132;
        v131[1] = v150;
        v257((char *)v131 + *(int *)(v133 + 24), (char *)v132 + *(int *)(v133 + 24), v69);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
      }
      uint64_t v151 = v259[11];
      unint64_t v152 = (_OWORD *)((char *)a1 + v151);
      uint64_t v153 = (_OWORD *)((char *)a2 + v151);
      uint64_t v154 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v155 = *(void *)(v154 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v155 + 48))(v153, 1, v154))
      {
        uint64_t v156 = sub_1000046DC(&qword_100299F28);
        memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        long long v171 = v153[1];
        *unint64_t v152 = *v153;
        v152[1] = v171;
        v257((char *)v152 + *(int *)(v154 + 24), (char *)v153 + *(int *)(v154 + 24), v69);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v155 + 56))(v152, 0, 1, v154);
      }
      a3 = v266;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v50 = type metadata accessor for Peer(0);
      uint64_t v51 = *(int *)(v50 + 24);
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      uint64_t v54 = sub_100221DF0();
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32);
      v55(v52, v53, v54);
      uint64_t v255 = (int *)v50;
      uint64_t v56 = *(int *)(v50 + 28);
      long long v57 = (_OWORD *)((char *)a1 + v56);
      uint64_t v58 = (_OWORD *)((char *)a2 + v56);
      uint64_t v59 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v262 = v55;
      uint64_t v256 = v54;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        uint64_t v61 = sub_1000046DC(&qword_10029EF80);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        long long v100 = v58[1];
        *long long v57 = *v58;
        v57[1] = v100;
        v55((char *)v57 + *(int *)(v59 + 24), (char *)v58 + *(int *)(v59 + 24), v54);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      uint64_t v101 = v255[8];
      uint64_t v102 = (_OWORD *)((char *)a1 + v101);
      uint64_t v103 = (_OWORD *)((char *)a2 + v101);
      uint64_t v104 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v105 = *(void *)(v104 - 8);
      uint64_t v7 = v265;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
      {
        uint64_t v106 = sub_1000046DC(&qword_100299F18);
        memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
        uint64_t v107 = v256;
      }
      else
      {
        long long v122 = v103[1];
        *uint64_t v102 = *v103;
        v102[1] = v122;
        uint64_t v107 = v256;
        v262((char *)v102 + *(int *)(v104 + 24), (char *)v103 + *(int *)(v104 + 24), v256);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
      }
      uint64_t v123 = v255[9];
      uint64_t v124 = (_OWORD *)((char *)a1 + v123);
      uint64_t v125 = (_OWORD *)((char *)a2 + v123);
      uint64_t v126 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v127 = *(void *)(v126 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126))
      {
        uint64_t v128 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        long long v143 = v125[1];
        *uint64_t v124 = *v125;
        v124[1] = v143;
        v262((char *)v124 + *(int *)(v126 + 24), (char *)v125 + *(int *)(v126 + 24), v107);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
      }
      uint64_t v144 = v255[10];
      uint64_t v145 = (_OWORD *)((char *)a1 + v144);
      uint64_t v146 = (_OWORD *)((char *)a2 + v144);
      uint64_t v147 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v148 = *(void *)(v147 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
      {
        uint64_t v149 = sub_1000046DC(&qword_100299F20);
        memcpy(v145, v146, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
        long long v164 = v146[1];
        _OWORD *v145 = *v146;
        v145[1] = v164;
        v262((char *)v145 + *(int *)(v147 + 24), (char *)v146 + *(int *)(v147 + 24), v107);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
      }
      uint64_t v165 = v255[11];
      uint64_t v166 = (_OWORD *)((char *)a1 + v165);
      uint64_t v167 = (_OWORD *)((char *)a2 + v165);
      uint64_t v168 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v169 = *(void *)(v168 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v169 + 48))(v167, 1, v168))
      {
        uint64_t v170 = sub_1000046DC(&qword_100299F28);
        memcpy(v166, v167, *(void *)(*(void *)(v170 - 8) + 64));
      }
      else
      {
        long long v173 = v167[1];
        _OWORD *v166 = *v167;
        v166[1] = v173;
        v262((char *)v166 + *(int *)(v168 + 24), (char *)v167 + *(int *)(v168 + 24), v107);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
      }
      a3 = v266;
    }
  }
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_66:
  uint64_t v174 = *(int *)(a3 + 20);
  unint64_t v175 = (char *)a1 + v174;
  uint64_t v176 = (char *)a2 + v174;
  uint64_t v177 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 40))(v175, v176, v177);
  return a1;
}

uint64_t getEnumTagSinglePayload for PeerDifference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E96C4);
}

uint64_t sub_1000E96C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000046DC(&qword_100299658);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100221DF0();
    int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PeerDifference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E97D4);
}

uint64_t sub_1000E97D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000046DC(&qword_100299658);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100221DF0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1000E98DC()
{
  sub_1000E271C(319, (unint64_t *)&unk_10029AFD8, (void (*)(uint64_t))type metadata accessor for PeerDifference.OneOf_Operation);
  if (v0 <= 0x3F)
  {
    sub_100221DF0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PeerDifference.OneOf_Operation(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      a1[2] = a2[2];
      uint64_t v24 = type metadata accessor for Peer(0);
      uint64_t v25 = *(int *)(v24 + 24);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = a2;
      uint64_t v29 = a1;
      uint64_t v30 = sub_100221DF0();
      uint64_t v31 = *(void (**)(void, void))(*(void *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = v27;
      uint64_t v15 = v31;
      ((void (*)(char *, char *, uint64_t))v31)(v26, v32, v30);
      uint64_t v167 = (int *)v24;
      uint64_t v33 = *(int *)(v24 + 28);
      long long v34 = (void *)((char *)v29 + v33);
      uint64_t v35 = (void *)((char *)v28 + v33);
      uint64_t v36 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v169 = v15;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v12 = v30;
        uint64_t v38 = sub_1000046DC(&qword_10029EF80);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v62 = *v35;
        unint64_t v63 = v35[1];
        sub_1000059E8(*v35, v63);
        void *v34 = v62;
        v34[1] = v63;
        uint64_t v64 = v35[2];
        unint64_t v65 = v35[3];
        sub_1000059E8(v64, v65);
        v34[2] = v64;
        v34[3] = v65;
        uint64_t v15 = v169;
        uint64_t v12 = v30;
        v169((char *)v34 + *(int *)(v36 + 24), (char *)v35 + *(int *)(v36 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v66 = v167[8];
      uint64_t v67 = (void *)((char *)v29 + v66);
      uint64_t v68 = (void *)((char *)v28 + v66);
      uint64_t v69 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v70 = *(void *)(v69 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        uint64_t v71 = sub_1000046DC(&qword_100299F18);
        memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        uint64_t v82 = *v68;
        unint64_t v83 = v68[1];
        sub_1000059E8(*v68, v83);
        *uint64_t v67 = v82;
        v67[1] = v83;
        uint64_t v84 = v68[2];
        unint64_t v85 = v68[3];
        sub_1000059E8(v84, v85);
        v67[2] = v84;
        v67[3] = v85;
        uint64_t v15 = v169;
        uint64_t v12 = v30;
        v169((char *)v67 + *(int *)(v69 + 24), (char *)v68 + *(int *)(v69 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      uint64_t v86 = v167[9];
      uint64_t v87 = (void *)((char *)v29 + v86);
      uint64_t v88 = (void *)((char *)v28 + v86);
      uint64_t v89 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v90 = *(void *)(v89 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
      {
        uint64_t v91 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        uint64_t v102 = *v88;
        unint64_t v103 = v88[1];
        sub_1000059E8(*v88, v103);
        *uint64_t v87 = v102;
        v87[1] = v103;
        uint64_t v104 = v88[2];
        unint64_t v105 = v88[3];
        sub_1000059E8(v104, v105);
        v87[2] = v104;
        v87[3] = v105;
        uint64_t v15 = v169;
        uint64_t v12 = v30;
        v169((char *)v87 + *(int *)(v89 + 24), (char *)v88 + *(int *)(v89 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      }
      uint64_t v106 = v167[10];
      uint64_t v107 = (void *)((char *)v29 + v106);
      long long v108 = (void *)((char *)v28 + v106);
      uint64_t v109 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v110 = *(void *)(v109 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
      {
        uint64_t v111 = sub_1000046DC(&qword_100299F20);
        memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        uint64_t v121 = *v108;
        unint64_t v122 = v108[1];
        sub_1000059E8(*v108, v122);
        *uint64_t v107 = v121;
        v107[1] = v122;
        uint64_t v123 = v108[2];
        unint64_t v124 = v108[3];
        sub_1000059E8(v123, v124);
        v107[2] = v123;
        v107[3] = v124;
        uint64_t v15 = v169;
        uint64_t v12 = v30;
        v169((char *)v107 + *(int *)(v109 + 24), (char *)v108 + *(int *)(v109 + 24));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
      }
      uint64_t v125 = v167[11];
      a1 = v29;
      uint64_t v117 = (void *)((char *)v29 + v125);
      uint64_t v118 = (void *)((char *)v28 + v125);
      uint64_t v119 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v120 = *(void *)(v119 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119)) {
        goto LABEL_48;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      uint64_t v8 = (int *)type metadata accessor for Peer(0);
      uint64_t v9 = v8[6];
      uint64_t v10 = (char *)a1 + v9;
      int v11 = (char *)a2 + v9;
      uint64_t v12 = sub_100221DF0();
      uint64_t v13 = *(void (**)(void, void))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = v11;
      uint64_t v15 = v13;
      ((void (*)(char *, char *, uint64_t))v13)(v10, v14, v12);
      uint64_t v16 = v8[7];
      uint64_t v17 = (void *)((char *)a1 + v16);
      uint64_t v18 = (void *)((char *)a2 + v16);
      uint64_t v19 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v168 = v15;
      uint64_t v171 = v12;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_1000046DC(&qword_10029EF80);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v52 = *v18;
        unint64_t v53 = v18[1];
        sub_1000059E8(*v18, v53);
        *uint64_t v17 = v52;
        v17[1] = v53;
        uint64_t v54 = v18[2];
        unint64_t v55 = v18[3];
        sub_1000059E8(v54, v55);
        v17[2] = v54;
        v17[3] = v55;
        uint64_t v15 = v168;
        uint64_t v12 = v171;
        ((void (*)(char *, char *, uint64_t))v168)((char *)v17 + *(int *)(v19 + 24), (char *)v18 + *(int *)(v19 + 24), v171);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v56 = v8[8];
      long long v57 = (void *)((char *)a1 + v56);
      uint64_t v58 = (void *)((char *)a2 + v56);
      uint64_t v59 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v60 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        uint64_t v61 = sub_1000046DC(&qword_100299F18);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        uint64_t v72 = *v58;
        unint64_t v73 = v58[1];
        sub_1000059E8(*v58, v73);
        *long long v57 = v72;
        v57[1] = v73;
        uint64_t v74 = v58[2];
        unint64_t v75 = v58[3];
        sub_1000059E8(v74, v75);
        v57[2] = v74;
        v57[3] = v75;
        uint64_t v15 = v168;
        uint64_t v12 = v171;
        ((void (*)(char *, char *, uint64_t))v168)((char *)v57 + *(int *)(v59 + 24), (char *)v58 + *(int *)(v59 + 24), v171);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      uint64_t v76 = v8[9];
      uint64_t v77 = (void *)((char *)a1 + v76);
      uint64_t v78 = (void *)((char *)a2 + v76);
      uint64_t v79 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v80 = *(void *)(v79 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
      {
        uint64_t v81 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        uint64_t v92 = *v78;
        unint64_t v93 = v78[1];
        sub_1000059E8(*v78, v93);
        *uint64_t v77 = v92;
        v77[1] = v93;
        uint64_t v94 = v78[2];
        unint64_t v95 = v78[3];
        sub_1000059E8(v94, v95);
        v77[2] = v94;
        v77[3] = v95;
        uint64_t v15 = v168;
        uint64_t v12 = v171;
        ((void (*)(char *, char *, uint64_t))v168)((char *)v77 + *(int *)(v79 + 24), (char *)v78 + *(int *)(v79 + 24), v171);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      }
      uint64_t v96 = v8[10];
      uint64_t v97 = (void *)((char *)a1 + v96);
      uint64_t v98 = (void *)((char *)a2 + v96);
      uint64_t v99 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v100 = *(void *)(v99 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
      {
        uint64_t v101 = sub_1000046DC(&qword_100299F20);
        memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        uint64_t v112 = *v98;
        unint64_t v113 = v98[1];
        sub_1000059E8(*v98, v113);
        *uint64_t v97 = v112;
        v97[1] = v113;
        uint64_t v114 = v98[2];
        unint64_t v115 = v98[3];
        sub_1000059E8(v114, v115);
        v97[2] = v114;
        v97[3] = v115;
        uint64_t v15 = v168;
        uint64_t v12 = v171;
        ((void (*)(char *, char *, uint64_t))v168)((char *)v97 + *(int *)(v99 + 24), (char *)v98 + *(int *)(v99 + 24), v171);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
      }
      uint64_t v116 = v8[11];
      uint64_t v117 = (void *)((char *)a1 + v116);
      uint64_t v118 = (void *)((char *)a2 + v116);
      uint64_t v119 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v120 = *(void *)(v119 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
      {
LABEL_48:
        uint64_t v161 = sub_1000046DC(&qword_100299F28);
        memcpy(v117, v118, *(void *)(*(void *)(v161 - 8) + 64));
LABEL_50:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      uint64_t v39 = a2[1];
      *a1 = *a2;
      a1[1] = v39;
      a1[2] = a2[2];
      uint64_t v40 = (int *)type metadata accessor for Peer(0);
      uint64_t v41 = v40[6];
      uint64_t v42 = (char *)a1 + v41;
      long long v43 = (char *)a2 + v41;
      uint64_t v12 = sub_100221DF0();
      uint64_t v44 = *(void (**)(void, void))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v43;
      uint64_t v15 = v44;
      ((void (*)(char *, char *, uint64_t))v44)(v42, v45, v12);
      uint64_t v46 = v40[7];
      uint64_t v47 = (void *)((char *)a1 + v46);
      uint64_t v48 = (void *)((char *)a2 + v46);
      uint64_t v49 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v50 = *(void *)(v49 - 8);
      uint64_t v170 = v15;
      uint64_t v172 = v12;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        uint64_t v51 = sub_1000046DC(&qword_10029EF80);
        memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        uint64_t v126 = *v48;
        unint64_t v127 = v48[1];
        sub_1000059E8(*v48, v127);
        *uint64_t v47 = v126;
        v47[1] = v127;
        uint64_t v128 = v48[2];
        unint64_t v129 = v48[3];
        sub_1000059E8(v128, v129);
        v47[2] = v128;
        v47[3] = v129;
        uint64_t v15 = v170;
        uint64_t v12 = v172;
        ((void (*)(char *, char *, uint64_t))v170)((char *)v47 + *(int *)(v49 + 24), (char *)v48 + *(int *)(v49 + 24), v172);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      uint64_t v130 = v40[8];
      uint64_t v131 = (void *)((char *)a1 + v130);
      unint64_t v132 = (void *)((char *)a2 + v130);
      uint64_t v133 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v134 = *(void *)(v133 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
      {
        uint64_t v135 = sub_1000046DC(&qword_100299F18);
        memcpy(v131, v132, *(void *)(*(void *)(v135 - 8) + 64));
      }
      else
      {
        uint64_t v136 = *v132;
        unint64_t v137 = v132[1];
        sub_1000059E8(*v132, v137);
        *uint64_t v131 = v136;
        v131[1] = v137;
        uint64_t v138 = v132[2];
        unint64_t v139 = v132[3];
        sub_1000059E8(v138, v139);
        v131[2] = v138;
        v131[3] = v139;
        uint64_t v15 = v170;
        uint64_t v12 = v172;
        ((void (*)(char *, char *, uint64_t))v170)((char *)v131 + *(int *)(v133 + 24), (char *)v132 + *(int *)(v133 + 24), v172);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
      }
      uint64_t v140 = v40[9];
      uint64_t v141 = (void *)((char *)a1 + v140);
      uint64_t v142 = (void *)((char *)a2 + v140);
      uint64_t v143 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v144 = *(void *)(v143 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
      {
        uint64_t v145 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v141, v142, *(void *)(*(void *)(v145 - 8) + 64));
      }
      else
      {
        uint64_t v146 = *v142;
        unint64_t v147 = v142[1];
        sub_1000059E8(*v142, v147);
        *uint64_t v141 = v146;
        v141[1] = v147;
        uint64_t v148 = v142[2];
        unint64_t v149 = v142[3];
        sub_1000059E8(v148, v149);
        v141[2] = v148;
        v141[3] = v149;
        uint64_t v15 = v170;
        uint64_t v12 = v172;
        ((void (*)(char *, char *, uint64_t))v170)((char *)v141 + *(int *)(v143 + 24), (char *)v142 + *(int *)(v143 + 24), v172);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
      }
      uint64_t v150 = v40[10];
      uint64_t v151 = (void *)((char *)a1 + v150);
      unint64_t v152 = (void *)((char *)a2 + v150);
      uint64_t v153 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v154 = *(void *)(v153 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v154 + 48))(v152, 1, v153))
      {
        uint64_t v155 = sub_1000046DC(&qword_100299F20);
        memcpy(v151, v152, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        uint64_t v156 = *v152;
        unint64_t v157 = v152[1];
        sub_1000059E8(*v152, v157);
        *uint64_t v151 = v156;
        v151[1] = v157;
        uint64_t v158 = v152[2];
        unint64_t v159 = v152[3];
        sub_1000059E8(v158, v159);
        v151[2] = v158;
        v151[3] = v159;
        uint64_t v15 = v170;
        uint64_t v12 = v172;
        ((void (*)(char *, char *, uint64_t))v170)((char *)v151 + *(int *)(v153 + 24), (char *)v152 + *(int *)(v153 + 24), v172);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
      }
      uint64_t v160 = v40[11];
      uint64_t v117 = (void *)((char *)a1 + v160);
      uint64_t v118 = (void *)((char *)a2 + v160);
      uint64_t v119 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v120 = *(void *)(v119 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119)) {
        goto LABEL_48;
      }
    }
    uint64_t v162 = *v118;
    unint64_t v163 = v118[1];
    sub_1000059E8(*v118, v163);
    *uint64_t v117 = v162;
    v117[1] = v163;
    uint64_t v164 = v118[2];
    unint64_t v165 = v118[3];
    sub_1000059E8(v164, v165);
    v117[2] = v164;
    v117[3] = v165;
    ((void (*)(char *, char *, uint64_t))v15)((char *)v117 + *(int *)(v119 + 24), (char *)v118 + *(int *)(v119 + 24), v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
    goto LABEL_50;
  }
  uint64_t v22 = *a2;
  *a1 = *a2;
  a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for PeerDifference.OneOf_Operation(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v3 = (int *)type metadata accessor for Peer(0);
    uint64_t v4 = a1 + v3[6];
    uint64_t v5 = sub_100221DF0();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v17(v4, v5);
    uint64_t v6 = a1 + v3[7];
    uint64_t v7 = type metadata accessor for SignedPeerPermanentInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      sub_100005A40(*(void *)v6, *(void *)(v6 + 8));
      sub_100005A40(*(void *)(v6 + 16), *(void *)(v6 + 24));
      v17(v6 + *(int *)(v7 + 24), v5);
    }
    uint64_t v8 = a1 + v3[8];
    uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
      sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
      v17(v8 + *(int *)(v9 + 24), v5);
    }
    uint64_t v10 = a1 + v3[9];
    uint64_t v11 = type metadata accessor for SignedPeerDynamicInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
      sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
      v17(v10 + *(int *)(v11 + 24), v5);
    }
    uint64_t v12 = a1 + v3[10];
    uint64_t v13 = type metadata accessor for SignedRecoveryVoucher(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      sub_100005A40(*(void *)v12, *(void *)(v12 + 8));
      sub_100005A40(*(void *)(v12 + 16), *(void *)(v12 + 24));
      v17(v12 + *(int *)(v13 + 24), v5);
    }
    uint64_t v14 = a1 + v3[11];
    uint64_t v15 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
    if (!result)
    {
      sub_100005A40(*(void *)v14, *(void *)(v14 + 8));
      sub_100005A40(*(void *)(v14 + 16), *(void *)(v14 + 24));
      uint64_t v16 = v14 + *(int *)(v15 + 24);
      return ((uint64_t (*)(uint64_t, uint64_t))v17)(v16, v5);
    }
  }
  return result;
}

void *initializeWithCopy for PeerDifference.OneOf_Operation(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = (int *)type metadata accessor for Peer(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = v6[7];
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for SignedPeerPermanentInfo(0);
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v116 = v11;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1000046DC(&qword_10029EF80);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v31 = *v14;
      unint64_t v32 = v14[1];
      sub_1000059E8(*v14, v32);
      *uint64_t v13 = v31;
      v13[1] = v32;
      uint64_t v33 = v14[2];
      unint64_t v34 = v14[3];
      sub_1000059E8(v33, v34);
      v13[2] = v33;
      v13[3] = v34;
      uint64_t v11 = v116;
      v116((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v35 = v6[8];
    uint64_t v36 = (void *)((char *)a1 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    uint64_t v38 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      uint64_t v40 = sub_1000046DC(&qword_100299F18);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v41 = *v37;
      unint64_t v42 = v37[1];
      sub_1000059E8(*v37, v42);
      *uint64_t v36 = v41;
      v36[1] = v42;
      uint64_t v43 = v37[2];
      unint64_t v44 = v37[3];
      sub_1000059E8(v43, v44);
      v36[2] = v43;
      v36[3] = v44;
      uint64_t v11 = v116;
      v116((char *)v36 + *(int *)(v38 + 24), (char *)v37 + *(int *)(v38 + 24), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    uint64_t v45 = v6[9];
    uint64_t v46 = (void *)((char *)a1 + v45);
    uint64_t v47 = (void *)((char *)a2 + v45);
    uint64_t v48 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      uint64_t v50 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      uint64_t v51 = *v47;
      unint64_t v52 = v47[1];
      sub_1000059E8(*v47, v52);
      *uint64_t v46 = v51;
      v46[1] = v52;
      uint64_t v53 = v47[2];
      unint64_t v54 = v47[3];
      sub_1000059E8(v53, v54);
      v46[2] = v53;
      v46[3] = v54;
      uint64_t v11 = v116;
      v116((char *)v46 + *(int *)(v48 + 24), (char *)v47 + *(int *)(v48 + 24), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    uint64_t v55 = v6[10];
    uint64_t v56 = (void *)((char *)a1 + v55);
    long long v57 = (void *)((char *)a2 + v55);
    uint64_t v58 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      uint64_t v60 = sub_1000046DC(&qword_100299F20);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      uint64_t v61 = *v57;
      unint64_t v62 = v57[1];
      sub_1000059E8(*v57, v62);
      *uint64_t v56 = v61;
      v56[1] = v62;
      uint64_t v63 = v57[2];
      unint64_t v64 = v57[3];
      sub_1000059E8(v63, v64);
      v56[2] = v63;
      v56[3] = v64;
      uint64_t v11 = v116;
      v116((char *)v56 + *(int *)(v58 + 24), (char *)v57 + *(int *)(v58 + 24), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    uint64_t v65 = v6[11];
    uint64_t v66 = (void *)((char *)a1 + v65);
    uint64_t v67 = (void *)((char *)a2 + v65);
    uint64_t v68 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v69 = *(void *)(v68 - 8);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      uint64_t v70 = *v67;
      unint64_t v71 = v67[1];
      sub_1000059E8(*v67, v71);
      *uint64_t v66 = v70;
      v66[1] = v71;
      uint64_t v72 = v67[2];
      unint64_t v73 = v67[3];
      sub_1000059E8(v72, v73);
      v66[2] = v72;
      v66[3] = v73;
      v11((char *)v66 + *(int *)(v68 + 24), (char *)v67 + *(int *)(v68 + 24), v10);
LABEL_32:
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    a1[2] = a2[2];
    uint64_t v19 = (int *)type metadata accessor for Peer(0);
    uint64_t v20 = v19[6];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_100221DF0();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
    uint64_t v25 = v19[7];
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    uint64_t v28 = type metadata accessor for SignedPeerPermanentInfo(0);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v117 = v24;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_1000046DC(&qword_10029EF80);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v75 = *v27;
      unint64_t v74 = v27[1];
      sub_1000059E8(*v27, v74);
      *uint64_t v26 = v75;
      v26[1] = v74;
      uint64_t v76 = v27[2];
      unint64_t v77 = v27[3];
      sub_1000059E8(v76, v77);
      v26[2] = v76;
      v26[3] = v77;
      uint64_t v24 = v117;
      v117((char *)v26 + *(int *)(v28 + 24), (char *)v27 + *(int *)(v28 + 24), v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v78 = v19[8];
    uint64_t v79 = (void *)((char *)a1 + v78);
    uint64_t v80 = (void *)((char *)a2 + v78);
    uint64_t v81 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v82 = *(void *)(v81 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
    {
      uint64_t v83 = sub_1000046DC(&qword_100299F18);
      memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      uint64_t v84 = *v80;
      unint64_t v85 = v80[1];
      sub_1000059E8(*v80, v85);
      *uint64_t v79 = v84;
      v79[1] = v85;
      uint64_t v86 = v80[2];
      unint64_t v87 = v80[3];
      sub_1000059E8(v86, v87);
      v79[2] = v86;
      v79[3] = v87;
      uint64_t v24 = v117;
      v117((char *)v79 + *(int *)(v81 + 24), (char *)v80 + *(int *)(v81 + 24), v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
    }
    uint64_t v88 = v19[9];
    uint64_t v89 = (void *)((char *)a1 + v88);
    uint64_t v90 = (void *)((char *)a2 + v88);
    uint64_t v91 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v92 = *(void *)(v91 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
    {
      uint64_t v93 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      uint64_t v94 = *v90;
      unint64_t v95 = v90[1];
      sub_1000059E8(*v90, v95);
      void *v89 = v94;
      v89[1] = v95;
      uint64_t v96 = v90[2];
      unint64_t v97 = v90[3];
      sub_1000059E8(v96, v97);
      v89[2] = v96;
      v89[3] = v97;
      uint64_t v24 = v117;
      v117((char *)v89 + *(int *)(v91 + 24), (char *)v90 + *(int *)(v91 + 24), v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
    }
    uint64_t v98 = v19[10];
    uint64_t v99 = (void *)((char *)a1 + v98);
    uint64_t v100 = (void *)((char *)a2 + v98);
    uint64_t v101 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v102 = *(void *)(v101 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
    {
      uint64_t v103 = sub_1000046DC(&qword_100299F20);
      memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
    }
    else
    {
      uint64_t v104 = *v100;
      unint64_t v105 = v100[1];
      sub_1000059E8(*v100, v105);
      *uint64_t v99 = v104;
      v99[1] = v105;
      uint64_t v106 = v100[2];
      unint64_t v107 = v100[3];
      sub_1000059E8(v106, v107);
      v99[2] = v106;
      v99[3] = v107;
      uint64_t v24 = v117;
      v117((char *)v99 + *(int *)(v101 + 24), (char *)v100 + *(int *)(v101 + 24), v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
    }
    uint64_t v108 = v19[11];
    uint64_t v66 = (void *)((char *)a1 + v108);
    uint64_t v67 = (void *)((char *)a2 + v108);
    uint64_t v68 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v69 = *(void *)(v68 - 8);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      uint64_t v110 = v24;
      uint64_t v111 = *v67;
      unint64_t v112 = v67[1];
      sub_1000059E8(*v67, v112);
      *uint64_t v66 = v111;
      v66[1] = v112;
      uint64_t v113 = v67[2];
      unint64_t v114 = v67[3];
      sub_1000059E8(v113, v114);
      v66[2] = v113;
      v66[3] = v114;
      v110((char *)v66 + *(int *)(v68 + 24), (char *)v67 + *(int *)(v68 + 24), v23);
      goto LABEL_32;
    }
  }
  uint64_t v109 = sub_1000046DC(&qword_100299F28);
  memcpy(v66, v67, *(void *)(*(void *)(v109 - 8) + 64));
LABEL_33:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PeerDifference.OneOf_Operation(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1000D7E78((uint64_t)a1, type metadata accessor for PeerDifference.OneOf_Operation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v5 = (int *)type metadata accessor for Peer(0);
      uint64_t v6 = v5[6];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_100221DF0();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      uint64_t v11 = v5[7];
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v15 = *(void *)(v14 - 8);
      unint64_t v114 = v10;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_1000046DC(&qword_10029EF80);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v29 = *v13;
        unint64_t v30 = v13[1];
        sub_1000059E8(*v13, v30);
        *uint64_t v12 = v29;
        v12[1] = v30;
        uint64_t v31 = v13[2];
        unint64_t v32 = v13[3];
        sub_1000059E8(v31, v32);
        v12[2] = v31;
        v12[3] = v32;
        uint64_t v10 = v114;
        v114((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v33 = v5[8];
      unint64_t v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)((char *)a2 + v33);
      uint64_t v36 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_1000046DC(&qword_100299F18);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v39 = *v35;
        unint64_t v40 = v35[1];
        sub_1000059E8(*v35, v40);
        void *v34 = v39;
        v34[1] = v40;
        uint64_t v41 = v35[2];
        unint64_t v42 = v35[3];
        sub_1000059E8(v41, v42);
        v34[2] = v41;
        v34[3] = v42;
        uint64_t v10 = v114;
        v114((char *)v34 + *(int *)(v36 + 24), (char *)v35 + *(int *)(v36 + 24), v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v43 = v5[9];
      unint64_t v44 = (void *)((char *)a1 + v43);
      uint64_t v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        uint64_t v48 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v49 = *v45;
        unint64_t v50 = v45[1];
        sub_1000059E8(*v45, v50);
        *unint64_t v44 = v49;
        v44[1] = v50;
        uint64_t v51 = v45[2];
        unint64_t v52 = v45[3];
        sub_1000059E8(v51, v52);
        v44[2] = v51;
        v44[3] = v52;
        uint64_t v10 = v114;
        v114((char *)v44 + *(int *)(v46 + 24), (char *)v45 + *(int *)(v46 + 24), v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      uint64_t v53 = v5[10];
      unint64_t v54 = (void *)((char *)a1 + v53);
      uint64_t v55 = (void *)((char *)a2 + v53);
      uint64_t v56 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v57 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        uint64_t v58 = sub_1000046DC(&qword_100299F20);
        memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        uint64_t v59 = *v55;
        unint64_t v60 = v55[1];
        sub_1000059E8(*v55, v60);
        *unint64_t v54 = v59;
        v54[1] = v60;
        uint64_t v61 = v55[2];
        unint64_t v62 = v55[3];
        sub_1000059E8(v61, v62);
        v54[2] = v61;
        v54[3] = v62;
        uint64_t v10 = v114;
        v114((char *)v54 + *(int *)(v56 + 24), (char *)v55 + *(int *)(v56 + 24), v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      uint64_t v63 = v5[11];
      unint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      uint64_t v66 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v67 = *(void *)(v66 - 8);
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        uint64_t v68 = *v65;
        unint64_t v69 = v65[1];
        sub_1000059E8(*v65, v69);
        uint64_t *v64 = v68;
        v64[1] = v69;
        uint64_t v70 = v65[2];
        unint64_t v71 = v65[3];
        sub_1000059E8(v70, v71);
        v64[2] = v70;
        v64[3] = v71;
        v10((char *)v64 + *(int *)(v66 + 24), (char *)v65 + *(int *)(v66 + 24), v9);
LABEL_33:
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        goto LABEL_34;
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v17 = (int *)type metadata accessor for Peer(0);
      uint64_t v18 = v17[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_100221DF0();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
      uint64_t v23 = v17[7];
      uint64_t v24 = (void *)((char *)a1 + v23);
      uint64_t v25 = (void *)((char *)a2 + v23);
      uint64_t v26 = type metadata accessor for SignedPeerPermanentInfo(0);
      uint64_t v27 = *(void *)(v26 - 8);
      unint64_t v115 = v22;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = sub_1000046DC(&qword_10029EF80);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v73 = *v25;
        unint64_t v72 = v25[1];
        sub_1000059E8(*v25, v72);
        void *v24 = v73;
        v24[1] = v72;
        uint64_t v74 = v25[2];
        unint64_t v75 = v25[3];
        sub_1000059E8(v74, v75);
        v24[2] = v74;
        v24[3] = v75;
        uint64_t v22 = v115;
        v115((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      uint64_t v76 = v17[8];
      unint64_t v77 = (void *)((char *)a1 + v76);
      uint64_t v78 = (void *)((char *)a2 + v76);
      uint64_t v79 = type metadata accessor for SignedPeerStableInfo(0);
      uint64_t v80 = *(void *)(v79 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
      {
        uint64_t v81 = sub_1000046DC(&qword_100299F18);
        memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        uint64_t v82 = *v78;
        unint64_t v83 = v78[1];
        sub_1000059E8(*v78, v83);
        *unint64_t v77 = v82;
        v77[1] = v83;
        uint64_t v84 = v78[2];
        unint64_t v85 = v78[3];
        sub_1000059E8(v84, v85);
        v77[2] = v84;
        v77[3] = v85;
        uint64_t v22 = v115;
        v115((char *)v77 + *(int *)(v79 + 24), (char *)v78 + *(int *)(v79 + 24), v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      }
      uint64_t v86 = v17[9];
      unint64_t v87 = (void *)((char *)a1 + v86);
      uint64_t v88 = (void *)((char *)a2 + v86);
      uint64_t v89 = type metadata accessor for SignedPeerDynamicInfo(0);
      uint64_t v90 = *(void *)(v89 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
      {
        uint64_t v91 = sub_1000046DC(&qword_10029ECA0);
        memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        uint64_t v92 = *v88;
        unint64_t v93 = v88[1];
        sub_1000059E8(*v88, v93);
        *unint64_t v87 = v92;
        v87[1] = v93;
        uint64_t v94 = v88[2];
        unint64_t v95 = v88[3];
        sub_1000059E8(v94, v95);
        v87[2] = v94;
        v87[3] = v95;
        uint64_t v22 = v115;
        v115((char *)v87 + *(int *)(v89 + 24), (char *)v88 + *(int *)(v89 + 24), v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      }
      uint64_t v96 = v17[10];
      unint64_t v97 = (void *)((char *)a1 + v96);
      uint64_t v98 = (void *)((char *)a2 + v96);
      uint64_t v99 = type metadata accessor for SignedRecoveryVoucher(0);
      uint64_t v100 = *(void *)(v99 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
      {
        uint64_t v101 = sub_1000046DC(&qword_100299F20);
        memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        uint64_t v102 = *v98;
        unint64_t v103 = v98[1];
        sub_1000059E8(*v98, v103);
        *unint64_t v97 = v102;
        v97[1] = v103;
        uint64_t v104 = v98[2];
        unint64_t v105 = v98[3];
        sub_1000059E8(v104, v105);
        v97[2] = v104;
        v97[3] = v105;
        uint64_t v22 = v115;
        v115((char *)v97 + *(int *)(v99 + 24), (char *)v98 + *(int *)(v99 + 24), v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
      }
      uint64_t v106 = v17[11];
      unint64_t v64 = (void *)((char *)a1 + v106);
      uint64_t v65 = (void *)((char *)a2 + v106);
      uint64_t v66 = type metadata accessor for SignedCustodianRecoveryKey(0);
      uint64_t v67 = *(void *)(v66 - 8);
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        uint64_t v108 = v22;
        uint64_t v109 = *v65;
        unint64_t v110 = v65[1];
        sub_1000059E8(*v65, v110);
        uint64_t *v64 = v109;
        v64[1] = v110;
        uint64_t v111 = v65[2];
        unint64_t v112 = v65[3];
        sub_1000059E8(v111, v112);
        v64[2] = v111;
        v64[3] = v112;
        v108((char *)v64 + *(int *)(v66 + 24), (char *)v65 + *(int *)(v66 + 24), v21);
        goto LABEL_33;
      }
    }
    uint64_t v107 = sub_1000046DC(&qword_100299F28);
    memcpy(v64, v65, *(void *)(*(void *)(v107 - 8) + 64));
LABEL_34:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for PeerDifference.OneOf_Operation(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = (int *)type metadata accessor for Peer(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  uint64_t v8 = sub_100221DF0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  uint64_t v10 = v4[7];
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  uint64_t v13 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1000046DC(&qword_10029EF80);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    long long v16 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v16;
    v9((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v8);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = v4[8];
  uint64_t v18 = (_OWORD *)(a1 + v17);
  uint64_t v19 = (_OWORD *)(a2 + v17);
  uint64_t v20 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_1000046DC(&qword_100299F18);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    long long v23 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v23;
    v9((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v8);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v24 = v4[9];
  uint64_t v25 = (_OWORD *)(a1 + v24);
  uint64_t v26 = (_OWORD *)(a2 + v24);
  uint64_t v27 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    long long v30 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v30;
    v9((char *)v25 + *(int *)(v27 + 24), (char *)v26 + *(int *)(v27 + 24), v8);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v31 = v4[10];
  unint64_t v32 = (_OWORD *)(a1 + v31);
  uint64_t v33 = (_OWORD *)(a2 + v31);
  uint64_t v34 = type metadata accessor for SignedRecoveryVoucher(0);
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    uint64_t v36 = sub_1000046DC(&qword_100299F20);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    long long v37 = v33[1];
    *unint64_t v32 = *v33;
    v32[1] = v37;
    v9((char *)v32 + *(int *)(v34 + 24), (char *)v33 + *(int *)(v34 + 24), v8);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  uint64_t v38 = v4[11];
  uint64_t v39 = (_OWORD *)(a1 + v38);
  unint64_t v40 = (_OWORD *)(a2 + v38);
  uint64_t v41 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_1000046DC(&qword_100299F28);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    long long v44 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v44;
    v9((char *)v39 + *(int *)(v41 + 24), (char *)v40 + *(int *)(v41 + 24), v8);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for PeerDifference.OneOf_Operation(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1000D7E78(a1, type metadata accessor for PeerDifference.OneOf_Operation);
    swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    uint64_t v4 = (int *)type metadata accessor for Peer(0);
    uint64_t v5 = v4[6];
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(v6, v7, v8);
    uint64_t v10 = v4[7];
    uint64_t v11 = (_OWORD *)(a1 + v10);
    uint64_t v12 = (_OWORD *)(a2 + v10);
    uint64_t v13 = type metadata accessor for SignedPeerPermanentInfo(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_1000046DC(&qword_10029EF80);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      long long v16 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v16;
      v9((uint64_t)v11 + *(int *)(v13 + 24), (uint64_t)v12 + *(int *)(v13 + 24), v8);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v17 = v4[8];
    uint64_t v18 = (_OWORD *)(a1 + v17);
    uint64_t v19 = (_OWORD *)(a2 + v17);
    uint64_t v20 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_1000046DC(&qword_100299F18);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      long long v23 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v23;
      v9((uint64_t)v18 + *(int *)(v20 + 24), (uint64_t)v19 + *(int *)(v20 + 24), v8);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v24 = v4[9];
    uint64_t v25 = (_OWORD *)(a1 + v24);
    uint64_t v26 = (_OWORD *)(a2 + v24);
    uint64_t v27 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      long long v30 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v30;
      v9((uint64_t)v25 + *(int *)(v27 + 24), (uint64_t)v26 + *(int *)(v27 + 24), v8);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v31 = v4[10];
    unint64_t v32 = (_OWORD *)(a1 + v31);
    uint64_t v33 = (_OWORD *)(a2 + v31);
    uint64_t v34 = type metadata accessor for SignedRecoveryVoucher(0);
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_1000046DC(&qword_100299F20);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      long long v37 = v33[1];
      *unint64_t v32 = *v33;
      v32[1] = v37;
      v9((uint64_t)v32 + *(int *)(v34 + 24), (uint64_t)v33 + *(int *)(v34 + 24), v8);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    uint64_t v38 = v4[11];
    uint64_t v39 = (_OWORD *)(a1 + v38);
    unint64_t v40 = (_OWORD *)(a2 + v38);
    uint64_t v41 = type metadata accessor for SignedCustodianRecoveryKey(0);
    uint64_t v42 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      uint64_t v43 = sub_1000046DC(&qword_100299F28);
      memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      long long v44 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v44;
      v9((uint64_t)v39 + *(int *)(v41 + 24), (uint64_t)v40 + *(int *)(v41 + 24), v8);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PeerDifference.OneOf_Operation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PeerDifference.OneOf_Operation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000ED334()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000ED344()
{
  uint64_t result = type metadata accessor for Peer(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TLKShare(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v6 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v6;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    uint64_t v7 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v7;
    uint64_t v8 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v8;
    uint64_t v9 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v9;
    *(void *)(a1 + 112) = a2[14];
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    uint64_t v10 = *(int *)(a3 + 60);
    uint64_t v15 = (uint64_t)a2 + v10;
    uint64_t v16 = a1 + v10;
    *(void *)(a1 + 136) = a2[17];
    uint64_t v11 = sub_100221DF0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v16, v15, v11);
  }
  return v3;
}

uint64_t destroy for TLKShare(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for TLKShare(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v9 = *(int *)(a3 + 60);
  uint64_t v13 = a2 + v9;
  uint64_t v14 = a1 + v9;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v10 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v13, v10);
  return a1;
}

void *assignWithCopy for TLKShare(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TLKShare(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v5 = *(int *)(a3 + 60);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v8 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TLKShare(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 60);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for TLKShare(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EDA68);
}

uint64_t sub_1000EDA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TLKShare(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EDB2C);
}

uint64_t sub_1000EDB2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000EDBD4()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ViewKey(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = a2[9];
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = a1 + v9;
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    uint64_t v12 = sub_100221DF0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for ViewKey(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for ViewKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a2 + v8;
  uint64_t v10 = a1 + v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

uint64_t assignWithCopy for ViewKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ViewKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t assignWithTake for ViewKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EE1AC);
}

uint64_t storeEnumTagSinglePayload for ViewKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EE1C4);
}

uint64_t sub_1000EE1C8()
{
  return sub_1000F02E4();
}

uint64_t getEnumTagSinglePayload for ViewKeys(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EE210);
}

uint64_t storeEnumTagSinglePayload for ViewKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EE228);
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewKeysRecords(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100221D50();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000046DC(&qword_1002997E0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_1000046DC(&qword_1002997E0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v13(v22, 1, v11))
    {
      uint64_t v23 = sub_1000046DC(&qword_1002997E0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v21, v22, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for ViewKeysRecords(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_100221D50();
  uint64_t v12 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v7(v8, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v6);
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v6);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v9, v6);
  }
  return result;
}

uint64_t initializeWithCopy for ViewKeysRecords(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_1000046DC(&qword_1002997E0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  if (v12(v20, 1, v10))
  {
    uint64_t v21 = sub_1000046DC(&qword_1002997E0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for ViewKeysRecords(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_1000046DC(&qword_1002997E0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  int v25 = v12((void *)(a1 + v22), 1, v10);
  int v26 = v12(v24, 1, v10);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v23, v24, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v23, v10);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    uint64_t v27 = sub_1000046DC(&qword_1002997E0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v23, v24, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for ViewKeysRecords(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_1000046DC(&qword_1002997E0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  int v19 = (void *)(a1 + v18);
  int v20 = (const void *)(a2 + v18);
  if (v12(v20, 1, v10))
  {
    uint64_t v21 = sub_1000046DC(&qword_1002997E0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for ViewKeysRecords(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_1000046DC(&qword_1002997E0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  int v25 = v12((void *)(a1 + v22), 1, v10);
  int v26 = v12(v24, 1, v10);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v23, v24, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v23, v10);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    uint64_t v27 = sub_1000046DC(&qword_1002997E0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v23, v24, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewKeysRecords(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EF35C);
}

uint64_t sub_1000EF35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FC2F8(a1, a2, a3, &qword_1002997E0);
}

uint64_t storeEnumTagSinglePayload for ViewKeysRecords(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EF37C);
}

uint64_t sub_1000EF37C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000FC414(a1, a2, a3, a4, &qword_1002997E0);
}

void sub_1000EF388()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029B300, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Bottle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1000059E8(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_1000059E8(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = a2[4];
    unint64_t v12 = a2[5];
    sub_1000059E8(v11, v12);
    a1[4] = v11;
    a1[5] = v12;
    uint64_t v13 = a2[6];
    unint64_t v14 = a2[7];
    sub_1000059E8(v13, v14);
    a1[6] = v13;
    a1[7] = v14;
    uint64_t v15 = a2[9];
    a1[8] = a2[8];
    a1[9] = v15;
    uint64_t v16 = a2[10];
    uint64_t v17 = a2[11];
    uint64_t v18 = *(int *)(a3 + 40);
    int v19 = (char *)a1 + v18;
    int v20 = (char *)a2 + v18;
    a1[10] = v16;
    a1[11] = v17;
    uint64_t v21 = sub_100221DF0();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
  }
  return a1;
}

uint64_t destroy for Bottle(uint64_t a1, uint64_t a2)
{
  sub_100005A40(*(void *)a1, *(void *)(a1 + 8));
  sub_100005A40(*(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_100005A40(*(void *)(a1 + 32), *(void *)(a1 + 40));
  sub_100005A40(*(void *)(a1 + 48), *(void *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t *initializeWithCopy for Bottle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000059E8(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_1000059E8(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = a2[4];
  unint64_t v11 = a2[5];
  sub_1000059E8(v10, v11);
  a1[4] = v10;
  a1[5] = v11;
  uint64_t v12 = a2[6];
  unint64_t v13 = a2[7];
  sub_1000059E8(v12, v13);
  a1[6] = v12;
  a1[7] = v13;
  uint64_t v14 = a2[9];
  a1[8] = a2[8];
  a1[9] = v14;
  uint64_t v15 = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  a1[10] = v15;
  a1[11] = v16;
  uint64_t v20 = sub_100221DF0();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  return a1;
}

uint64_t *assignWithCopy for Bottle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000059E8(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100005A40(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_1000059E8(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_100005A40(v12, v13);
  uint64_t v14 = a2[4];
  unint64_t v15 = a2[5];
  sub_1000059E8(v14, v15);
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  a1[4] = v14;
  a1[5] = v15;
  sub_100005A40(v16, v17);
  uint64_t v18 = a2[6];
  unint64_t v19 = a2[7];
  sub_1000059E8(v18, v19);
  uint64_t v20 = a1[6];
  unint64_t v21 = a1[7];
  a1[6] = v18;
  a1[7] = v19;
  sub_100005A40(v20, v21);
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(a3 + 40);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_OWORD *initializeWithTake for Bottle(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for Bottle(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100005A40(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_100005A40(v8, v9);
  uint64_t v10 = a1[4];
  unint64_t v11 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100005A40(v10, v11);
  uint64_t v12 = a1[6];
  unint64_t v13 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_100005A40(v12, v13);
  uint64_t v14 = *(void *)(a2 + 72);
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 88);
  a1[10] = *(void *)(a2 + 80);
  a1[11] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(a3 + 40);
  unint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_100221DF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for Bottle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EFA18);
}

uint64_t sub_1000EFA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Bottle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EFADC);
}

uint64_t sub_1000EFADC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000EFB84()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EscrowPair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EFC40);
}

uint64_t storeEnumTagSinglePayload for EscrowPair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EFC58);
}

uint64_t initializeBufferWithCopyOfBuffer for Changes(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    unint64_t v9 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000059E8(v8, v9);
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    uint64_t v10 = a2[5];
    unint64_t v11 = a2[6];
    sub_1000059E8(v10, v11);
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_100221DF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for Changes(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(a1 + 24), *(void *)(a1 + 32));
  sub_100005A40(*(void *)(a1 + 40), *(void *)(a1 + 48));
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for Changes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v8 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000059E8(v7, v8);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v10 = *(void *)(a2 + 48);
  sub_1000059E8(v9, v10);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for Changes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  sub_1000059E8(v6, v7);
  uint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  sub_100005A40(v8, v9);
  uint64_t v10 = *(void *)(a2 + 40);
  unint64_t v11 = *(void *)(a2 + 48);
  sub_1000059E8(v10, v11);
  uint64_t v12 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  sub_100005A40(v12, v13);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for Changes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for Changes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_100005A40(v7, v8);
  uint64_t v9 = *(void *)(a1 + 40);
  unint64_t v10 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100005A40(v9, v10);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for Changes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F014C);
}

uint64_t sub_1000F0150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Changes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F0214);
}

uint64_t sub_1000F0218(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000F02C0()
{
  return sub_1000F02E4();
}

uint64_t sub_1000F02E4()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PolicyDocumentKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PolicyDocumentKey(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for PolicyDocumentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100221DF0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for PolicyDocumentKey(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PolicyDocumentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PolicyDocumentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PolicyDocumentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F075C);
}

uint64_t sub_1000F075C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PolicyDocumentKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F0820);
}

uint64_t sub_1000F0820(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000F08C8()
{
  return sub_100110008();
}

uint64_t *initializeBufferWithCopyOfBuffer for PolicyDocumentMapEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1000059E8(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100221DF0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for PolicyDocumentKey(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_1000046DC(&qword_100299668);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      v15[2] = v16[2];
      uint64_t v21 = *(int *)(v17 + 24);
      uint64_t v22 = (char *)v15 + v21;
      uint64_t v23 = (char *)v16 + v21;
      swift_bridgeObjectRetain();
      v13(v22, v23, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t destroy for PolicyDocumentMapEntry(uint64_t a1, uint64_t a2)
{
  sub_100005A40(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t *initializeWithCopy for PolicyDocumentMapEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000059E8(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (uint64_t *)((char *)a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000046DC(&qword_100299668);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    v14[2] = v15[2];
    uint64_t v19 = *(int *)(v16 + 24);
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    swift_bridgeObjectRetain();
    v12(v20, v21, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t *assignWithCopy for PolicyDocumentMapEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000059E8(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100005A40(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100221DF0();
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v14 = *(void (**)(char *, char *))(v28 + 24);
  v14(v11, v12);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (uint64_t *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v12) = v20(v16, 1, v18);
  int v21 = v20(v17, 1, v18);
  if (!v12)
  {
    if (!v21)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      v16[2] = v17[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v14)((char *)v16 + *(int *)(v18 + 24), (char *)v17 + *(int *)(v18 + 24), v29);
      return a1;
    }
    sub_1000D7E78((uint64_t)v16, type metadata accessor for PolicyDocumentKey);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v26 = sub_1000046DC(&qword_100299668);
    memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  v16[2] = v17[2];
  uint64_t v22 = *(int *)(v18 + 24);
  uint64_t v23 = (char *)v16 + v22;
  uint64_t v24 = (char *)v17 + v22;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, v29);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

_OWORD *initializeWithTake for PolicyDocumentMapEntry(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_100299668);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *(_OWORD *)(v12 + 1) = *(_OWORD *)(v13 + 1);
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t *assignWithTake for PolicyDocumentMapEntry(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100005A40(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v22 = *(void *)(v11 - 8);
  uint64_t v23 = v11;
  uint64_t v12 = *(void (**)(char *, char *))(v22 + 40);
  v12(v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (uint64_t)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v10) = v18(v14, 1, v16);
  int v19 = v18((uint64_t)v15, 1, v16);
  if (!v10)
  {
    if (!v19)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *(void *)(v14 + 16) = *((void *)v15 + 2);
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, char *, uint64_t))v12)(v14 + *(int *)(v16 + 24), &v15[*(int *)(v16 + 24)], v23);
      return a1;
    }
    sub_1000D7E78(v14, type metadata accessor for PolicyDocumentKey);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1000046DC(&qword_100299668);
    memcpy((void *)v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v14 = *(void *)v15;
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v14 + *(int *)(v16 + 24), &v15[*(int *)(v16 + 24)], v23);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PolicyDocumentMapEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1390);
}

uint64_t sub_1000F1390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC(&qword_100299668);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PolicyDocumentMapEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F14E0);
}

void *sub_1000F14E0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC(&qword_100299668);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000F1618(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    unint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_100221DF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_DWORD *initializeWithCopy for AccountInfo(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for AccountInfo(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *initializeWithTake for AccountInfo(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithTake for AccountInfo(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1914);
}

uint64_t storeEnumTagSinglePayload for AccountInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F192C);
}

uint64_t sub_1000F1930()
{
  return sub_100108A14();
}

uint64_t getEnumTagSinglePayload for Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1968);
}

uint64_t storeEnumTagSinglePayload for Metrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F1980);
}

uint64_t sub_1000F1984()
{
  return sub_100110008();
}

uint64_t getEnumTagSinglePayload for ResetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F19C0);
}

uint64_t storeEnumTagSinglePayload for ResetRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F19D8);
}

uint64_t getEnumTagSinglePayload for ResetResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1A0C);
}

uint64_t sub_1000F1A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FC2F8(a1, a2, a3, (uint64_t *)&unk_10029EC90);
}

uint64_t storeEnumTagSinglePayload for ResetResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F1A2C);
}

uint64_t sub_1000F1A2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000FC414(a1, a2, a3, a4, (uint64_t *)&unk_10029EC90);
}

uint64_t getEnumTagSinglePayload for EstablishRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1A50);
}

uint64_t storeEnumTagSinglePayload for EstablishRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F1A68);
}

uint64_t getEnumTagSinglePayload for EstablishResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1A98);
}

uint64_t storeEnumTagSinglePayload for EstablishResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F1AB0);
}

void sub_1000F1AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for JoinWithVoucherRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1AF4);
}

uint64_t storeEnumTagSinglePayload for JoinWithVoucherRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F1B0C);
}

uint64_t *_s18TrustedPeersHelper17EstablishResponseVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Changes(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029EC90);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      uint64_t v20 = v15[3];
      v14[2] = v15[2];
      uint64_t v25 = v12;
      unint64_t v21 = v15[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000059E8(v20, v21);
      v14[3] = v20;
      v14[4] = v21;
      uint64_t v22 = v15[5];
      unint64_t v23 = v15[6];
      sub_1000059E8(v22, v23);
      v14[5] = v22;
      v14[6] = v23;
      *((unsigned char *)v14 + 56) = *((unsigned char *)v15 + 56);
      v25((char *)v14 + *(int *)(v16 + 36), (char *)v15 + *(int *)(v16 + 36), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t _s18TrustedPeersHelper17EstablishResponseVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Changes(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v6 + 24), *(void *)(v6 + 32));
    sub_100005A40(*(void *)(v6 + 40), *(void *)(v6 + 48));
    uint64_t v9 = v6 + *(int *)(v7 + 36);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *_s18TrustedPeersHelper17EstablishResponseVwcp_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Changes(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v18 = v13[3];
    v12[2] = v13[2];
    unint64_t v23 = v10;
    unint64_t v19 = v13[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000059E8(v18, v19);
    v12[3] = v18;
    v12[4] = v19;
    uint64_t v20 = v13[5];
    unint64_t v21 = v13[6];
    sub_1000059E8(v20, v21);
    v12[5] = v20;
    v12[6] = v21;
    *((unsigned char *)v12 + 56) = *((unsigned char *)v13 + 56);
    v23((char *)v12 + *(int *)(v14 + 36), (char *)v13 + *(int *)(v14 + 36), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *_s18TrustedPeersHelper17EstablishResponseVwtk_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Changes(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *(_OWORD *)((char *)v12 + 24) = *(_OWORD *)((char *)v13 + 24);
    *(_OWORD *)((char *)v12 + 40) = *(_OWORD *)((char *)v13 + 40);
    *((unsigned char *)v12 + 56) = *((unsigned char *)v13 + 56);
    v10((char *)v12 + *(int *)(v14 + 36), (char *)v13 + *(int *)(v14 + 36), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for JoinWithVoucherResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F21E0);
}

uint64_t storeEnumTagSinglePayload for JoinWithVoucherResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F21F8);
}

uint64_t *initializeBufferWithCopyOfBuffer for UpdateTrustRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v81 = (char *)a2 + v10;
    uint64_t v82 = (char *)a1 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(void, void, void))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    v12(v82, v81, v11);
    uint64_t v83 = a3;
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = a1;
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v84 = (void (*)(char *, char *, uint64_t))v13;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_1000046DC(&qword_100299F18);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v23 = v11;
      uint64_t v24 = *v17;
      unint64_t v25 = v17[1];
      sub_1000059E8(*v17, v25);
      *uint64_t v16 = v24;
      v16[1] = v25;
      uint64_t v26 = v17[2];
      unint64_t v27 = v17[3];
      sub_1000059E8(v26, v27);
      v16[2] = v26;
      v16[3] = v27;
      uint64_t v11 = v23;
      v13((char *)v16 + *(int *)(v18 + 24), (char *)v17 + *(int *)(v18 + 24), v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v28 = *(int *)(v83 + 40);
    uint64_t v22 = v15;
    uint64_t v29 = (uint64_t *)((char *)v15 + v28);
    long long v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v34 = v11;
      uint64_t v35 = *v30;
      unint64_t v36 = v30[1];
      sub_1000059E8(*v30, v36);
      void *v29 = v35;
      v29[1] = v36;
      uint64_t v37 = v30[2];
      unint64_t v38 = v30[3];
      sub_1000059E8(v37, v38);
      v29[2] = v37;
      v29[3] = v38;
      uint64_t v11 = v34;
      v84((char *)v29 + *(int *)(v31 + 24), (char *)v30 + *(int *)(v31 + 24), v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    uint64_t v39 = v83;
    uint64_t v40 = *(int *)(v83 + 44);
    uint64_t v41 = (uint64_t *)((char *)v15 + v40);
    uint64_t v42 = (uint64_t *)((char *)a2 + v40);
    uint64_t v43 = type metadata accessor for IdmsTrustedDevicesVersion(0);
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = sub_1000046DC(&qword_10029ED20);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      uint64_t v46 = v42[1];
      void *v41 = *v42;
      v41[1] = v46;
      uint64_t v47 = *(int *)(v43 + 20);
      uint64_t v48 = v11;
      uint64_t v49 = (char *)v41 + v47;
      unint64_t v50 = (char *)v42 + v47;
      swift_bridgeObjectRetain();
      uint64_t v80 = v48;
      v84(v49, v50, v48);
      uint64_t v51 = *(int *)(v43 + 24);
      unint64_t v52 = (char *)v41 + v51;
      uint64_t v53 = (char *)v42 + v51;
      uint64_t v54 = sub_100221DC0();
      uint64_t v55 = *(void *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        uint64_t v56 = sub_1000046DC((uint64_t *)&unk_10029ED30);
        memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      uint64_t v11 = v80;
      uint64_t v39 = v83;
    }
    uint64_t v57 = *(int *)(v39 + 48);
    uint64_t v58 = (uint64_t *)((char *)v15 + v57);
    uint64_t v59 = (uint64_t *)((char *)a2 + v57);
    uint64_t v60 = type metadata accessor for Metrics(0);
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      uint64_t v62 = sub_1000046DC(&qword_10029F000);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
      uint64_t v63 = v84;
    }
    else
    {
      uint64_t v64 = v59[1];
      *uint64_t v58 = *v59;
      v58[1] = v64;
      uint64_t v65 = v11;
      uint64_t v66 = v59[3];
      v58[2] = v59[2];
      v58[3] = v66;
      uint64_t v67 = *(int *)(v60 + 24);
      uint64_t v68 = v39;
      unint64_t v69 = (char *)v58 + v67;
      uint64_t v70 = (char *)v59 + v67;
      swift_bridgeObjectRetain();
      uint64_t v11 = v65;
      swift_bridgeObjectRetain();
      unint64_t v71 = v69;
      uint64_t v39 = v68;
      uint64_t v72 = v65;
      uint64_t v63 = v84;
      v84(v71, v70, v72);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    uint64_t v73 = *(int *)(v39 + 52);
    uint64_t v74 = (_DWORD *)((char *)v22 + v73);
    unint64_t v75 = (_DWORD *)((char *)a2 + v73);
    uint64_t v76 = type metadata accessor for AccountInfo(0);
    uint64_t v77 = *(void *)(v76 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
    {
      uint64_t v78 = sub_1000046DC(&qword_100299F50);
      memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      *uint64_t v74 = *v75;
      v63((char *)v74 + *(int *)(v76 + 20), (char *)v75 + *(int *)(v76 + 20), v11);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
    }
  }
  return v22;
}

uint64_t destroy for UpdateTrustRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_100221DF0();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v21(v4, v5);
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_100005A40(*(void *)v6, *(void *)(v6 + 8));
    sub_100005A40(*(void *)(v6 + 16), *(void *)(v6 + 24));
    v21(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v21(v8 + *(int *)(v9 + 24), v5);
  }
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    v21(v10 + *(int *)(v11 + 20), v5);
    uint64_t v12 = v10 + *(int *)(v11 + 24);
    uint64_t v13 = sub_100221DC0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  uint64_t v15 = a1 + a2[12];
  uint64_t v16 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21(v15 + *(int *)(v16 + 24), v5);
  }
  uint64_t v17 = a1 + a2[13];
  uint64_t v18 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18);
  if (!result)
  {
    uint64_t v20 = v17 + *(int *)(v18 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v21)(v20, v5);
  }
  return result;
}

void *initializeWithCopy for UpdateTrustRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[8];
  uint64_t v72 = (char *)a2 + v9;
  uint64_t v74 = (char *)a1 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = v11;
  swift_bridgeObjectRetain();
  v11(v74, v72, v10);
  uint64_t v13 = a3[9];
  uint64_t v73 = a2;
  unint64_t v75 = a1;
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000046DC(&qword_100299F18);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v19 = v10;
  }
  else
  {
    uint64_t v19 = v10;
    uint64_t v20 = *v15;
    unint64_t v21 = v15[1];
    sub_1000059E8(*v15, v21);
    *uint64_t v14 = v20;
    v14[1] = v21;
    uint64_t v22 = v15[2];
    unint64_t v23 = v15[3];
    sub_1000059E8(v22, v23);
    v14[2] = v22;
    v14[3] = v23;
    v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v24 = a3[10];
  unint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)v73 + v24);
  uint64_t v27 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = *v26;
    unint64_t v31 = v26[1];
    sub_1000059E8(*v26, v31);
    *unint64_t v25 = v30;
    v25[1] = v31;
    uint64_t v32 = v26[2];
    unint64_t v33 = v26[3];
    sub_1000059E8(v32, v33);
    v25[2] = v32;
    v25[3] = v33;
    v12((char *)v25 + *(int *)(v27 + 24), (char *)v26 + *(int *)(v27 + 24), v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)((char *)a1 + v34);
  unint64_t v36 = (void *)((char *)v73 + v34);
  uint64_t v37 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_1000046DC(&qword_10029ED20);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v40 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v40;
    uint64_t v41 = *(int *)(v37 + 20);
    uint64_t v42 = (char *)v35 + v41;
    uint64_t v43 = (char *)v36 + v41;
    swift_bridgeObjectRetain();
    uint64_t v71 = v19;
    v12(v42, v43, v19);
    uint64_t v44 = *(int *)(v37 + 24);
    uint64_t v45 = (char *)v35 + v44;
    uint64_t v46 = (char *)v36 + v44;
    uint64_t v47 = sub_100221DC0();
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    uint64_t v19 = v71;
  }
  uint64_t v50 = a3[12];
  uint64_t v51 = (void *)((char *)a1 + v50);
  unint64_t v52 = (void *)((char *)v73 + v50);
  uint64_t v53 = type metadata accessor for Metrics(0);
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = v19;
    uint64_t v56 = sub_1000046DC(&qword_10029F000);
    memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
    uint64_t v57 = v12;
  }
  else
  {
    uint64_t v58 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v58;
    uint64_t v59 = v52[3];
    v51[2] = v52[2];
    v51[3] = v59;
    uint64_t v60 = *(int *)(v53 + 24);
    uint64_t v61 = (char *)v51 + v60;
    uint64_t v62 = (char *)v52 + v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v55 = v19;
    uint64_t v63 = v19;
    uint64_t v57 = v12;
    v12(v61, v62, v63);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  uint64_t v64 = a3[13];
  uint64_t v65 = (_DWORD *)((char *)a1 + v64);
  uint64_t v66 = (_DWORD *)((char *)v73 + v64);
  uint64_t v67 = type metadata accessor for AccountInfo(0);
  uint64_t v68 = *(void *)(v67 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    uint64_t v69 = sub_1000046DC(&qword_100299F50);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    _DWORD *v65 = *v66;
    v57((char *)v65 + *(int *)(v67 + 20), (char *)v66 + *(int *)(v67 + 20), v55);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  return v75;
}

void *assignWithCopy for UpdateTrustRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v106 = *(void *)(v9 - 8);
  uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v106 + 24);
  v104(v7, v8, v9);
  uint64_t v107 = a3;
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *v12;
      unint64_t v19 = v12[1];
      sub_1000059E8(*v12, v19);
      *uint64_t v11 = v18;
      v11[1] = v19;
      uint64_t v20 = v12[2];
      unint64_t v21 = v12[3];
      sub_1000059E8(v20, v21);
      v11[2] = v20;
      v11[3] = v21;
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v9);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for SignedPeerStableInfo);
LABEL_6:
    uint64_t v22 = sub_1000046DC(&qword_100299F18);
    memcpy(v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v57 = *v12;
  unint64_t v58 = v12[1];
  sub_1000059E8(*v12, v58);
  uint64_t v59 = *v11;
  unint64_t v60 = v11[1];
  *uint64_t v11 = v57;
  v11[1] = v58;
  sub_100005A40(v59, v60);
  uint64_t v61 = v12[2];
  unint64_t v62 = v12[3];
  sub_1000059E8(v61, v62);
  uint64_t v63 = v11[2];
  unint64_t v64 = v11[3];
  v11[2] = v61;
  v11[3] = v62;
  sub_100005A40(v63, v64);
  v104((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v9);
LABEL_7:
  uint64_t v23 = v107[10];
  uint64_t v24 = (void *)((char *)a1 + v23);
  unint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      uint64_t v31 = *v25;
      unint64_t v32 = v25[1];
      sub_1000059E8(*v25, v32);
      uint64_t *v24 = v31;
      v24[1] = v32;
      uint64_t v33 = v25[2];
      unint64_t v34 = v25[3];
      sub_1000059E8(v33, v34);
      v24[2] = v33;
      v24[3] = v34;
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v9);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    sub_1000D7E78((uint64_t)v24, type metadata accessor for SignedPeerDynamicInfo);
LABEL_12:
    uint64_t v35 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v24, v25, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v65 = *v25;
  unint64_t v66 = v25[1];
  sub_1000059E8(*v25, v66);
  uint64_t v67 = *v24;
  unint64_t v68 = v24[1];
  uint64_t *v24 = v65;
  v24[1] = v66;
  sub_100005A40(v67, v68);
  uint64_t v69 = v25[2];
  unint64_t v70 = v25[3];
  sub_1000059E8(v69, v70);
  uint64_t v71 = v24[2];
  unint64_t v72 = v24[3];
  v24[2] = v69;
  v24[3] = v70;
  sub_100005A40(v71, v72);
  v104((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v9);
LABEL_13:
  uint64_t v36 = v107[11];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  uint64_t v105 = v9;
  if (!v42)
  {
    if (!v43)
    {
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = *((void *)v38 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v104(&v37[*(int *)(v39 + 20)], &v38[*(int *)(v39 + 20)], v9);
      uint64_t v73 = *(int *)(v39 + 24);
      uint64_t v74 = &v37[v73];
      unint64_t v75 = &v38[v73];
      uint64_t v76 = sub_100221DC0();
      uint64_t v77 = *(void *)(v76 - 8);
      uint64_t v78 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
      int v79 = v78(v74, 1, v76);
      int v80 = v78(v75, 1, v76);
      if (v79)
      {
        if (!v80)
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v80)
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v74, v75, v76);
          goto LABEL_28;
        }
        (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v76);
      }
      size_t v54 = *(void *)(*(void *)(sub_1000046DC((uint64_t *)&unk_10029ED30) - 8) + 64);
      uint64_t v55 = v74;
      uint64_t v56 = v75;
LABEL_20:
      memcpy(v55, v56, v54);
      goto LABEL_28;
    }
    sub_1000D7E78((uint64_t)v37, type metadata accessor for IdmsTrustedDevicesVersion);
LABEL_19:
    size_t v54 = *(void *)(*(void *)(sub_1000046DC(&qword_10029ED20) - 8) + 64);
    uint64_t v55 = v37;
    uint64_t v56 = v38;
    goto LABEL_20;
  }
  if (v43) {
    goto LABEL_19;
  }
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = *((void *)v38 + 1);
  uint64_t v44 = *(int *)(v39 + 20);
  uint64_t v45 = &v37[v44];
  uint64_t v46 = &v38[v44];
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  swift_bridgeObjectRetain();
  v47(v45, v46, v105);
  uint64_t v48 = *(int *)(v39 + 24);
  uint64_t v49 = &v37[v48];
  uint64_t v50 = &v38[v48];
  uint64_t v51 = sub_100221DC0();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    uint64_t v53 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_28:
  uint64_t v81 = v107[12];
  uint64_t v82 = (void *)((char *)a1 + v81);
  uint64_t v83 = (void *)((char *)a2 + v81);
  uint64_t v84 = type metadata accessor for Metrics(0);
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v85 + 48);
  int v87 = v86(v82, 1, v84);
  int v88 = v86(v83, 1, v84);
  if (v87)
  {
    if (!v88)
    {
      *uint64_t v82 = *v83;
      v82[1] = v83[1];
      v82[2] = v83[2];
      v82[3] = v83[3];
      uint64_t v89 = *(int *)(v84 + 24);
      uint64_t v90 = (char *)v82 + v89;
      uint64_t v91 = (char *)v83 + v89;
      uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v92(v90, v91, v105);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v88)
  {
    sub_1000D7E78((uint64_t)v82, type metadata accessor for Metrics);
LABEL_33:
    uint64_t v93 = sub_1000046DC(&qword_10029F000);
    memcpy(v82, v83, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_34;
  }
  *uint64_t v82 = *v83;
  v82[1] = v83[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v82[2] = v83[2];
  v82[3] = v83[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v104((char *)v82 + *(int *)(v84 + 24), (char *)v83 + *(int *)(v84 + 24), v105);
LABEL_34:
  uint64_t v94 = v107[13];
  unint64_t v95 = (char *)a1 + v94;
  uint64_t v96 = (char *)a2 + v94;
  uint64_t v97 = type metadata accessor for AccountInfo(0);
  uint64_t v98 = *(void *)(v97 - 8);
  uint64_t v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48);
  int v100 = v99(v95, 1, v97);
  int v101 = v99(v96, 1, v97);
  if (!v100)
  {
    if (!v101)
    {
      *(_DWORD *)unint64_t v95 = *(_DWORD *)v96;
      v104(&v95[*(int *)(v97 + 20)], &v96[*(int *)(v97 + 20)], v105);
      return a1;
    }
    sub_1000D7E78((uint64_t)v95, type metadata accessor for AccountInfo);
    goto LABEL_39;
  }
  if (v101)
  {
LABEL_39:
    uint64_t v102 = sub_1000046DC(&qword_100299F50);
    memcpy(v95, v96, *(void *)(*(void *)(v102 - 8) + 64));
    return a1;
  }
  *(_DWORD *)unint64_t v95 = *(_DWORD *)v96;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(&v95[*(int *)(v97 + 20)], &v96[*(int *)(v97 + 20)], v105);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
  return a1;
}

_OWORD *initializeWithTake for UpdateTrustRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_100299F18);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    long long v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = (_OWORD *)((char *)a1 + v19);
  unint64_t v21 = (_OWORD *)((char *)a2 + v19);
  uint64_t v22 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    long long v25 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v25;
    v11((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v26 = a3[11];
  uint64_t v27 = (_OWORD *)((char *)a1 + v26);
  uint64_t v28 = (_OWORD *)((char *)a2 + v26);
  uint64_t v29 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_1000046DC(&qword_10029ED20);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    *uint64_t v27 = *v28;
    uint64_t v52 = v11;
    uint64_t v53 = v10;
    v11((char *)v27 + *(int *)(v29 + 20), (char *)v28 + *(int *)(v29 + 20), v10);
    uint64_t v32 = *(int *)(v29 + 24);
    uint64_t v33 = (char *)v27 + v32;
    unint64_t v34 = (char *)v28 + v32;
    uint64_t v35 = sub_100221DC0();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      uint64_t v37 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    uint64_t v11 = v52;
    uint64_t v10 = v53;
  }
  uint64_t v38 = a3[12];
  uint64_t v39 = (_OWORD *)((char *)a1 + v38);
  uint64_t v40 = (_OWORD *)((char *)a2 + v38);
  uint64_t v41 = type metadata accessor for Metrics(0);
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_1000046DC(&qword_10029F000);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    long long v44 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v44;
    v11((char *)v39 + *(int *)(v41 + 24), (char *)v40 + *(int *)(v41 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  uint64_t v45 = a3[13];
  uint64_t v46 = (_DWORD *)((char *)a1 + v45);
  uint64_t v47 = (_DWORD *)((char *)a2 + v45);
  uint64_t v48 = type metadata accessor for AccountInfo(0);
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = sub_1000046DC(&qword_100299F50);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    *uint64_t v46 = *v47;
    v11((char *)v46 + *(int *)(v48 + 20), (char *)v47 + *(int *)(v48 + 20), v10);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  return a1;
}

void *assignWithTake for UpdateTrustRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v89 = *(void *)(v11 - 8);
  uint64_t v90 = v11;
  int v88 = *(void (**)(char *, char *))(v89 + 40);
  v88(v9, v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      long long v20 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v20;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v90);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
LABEL_6:
    uint64_t v21 = sub_1000046DC(&qword_100299F18);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v49 = *(void *)v13;
  unint64_t v50 = *((void *)v13 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  sub_100005A40(v49, v50);
  uint64_t v51 = *((void *)v13 + 2);
  unint64_t v52 = *((void *)v13 + 3);
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  sub_100005A40(v51, v52);
  ((void (*)(char *, char *, uint64_t))v88)(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v90);
LABEL_7:
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      long long v30 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v30;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v90);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_1000D7E78((uint64_t)v23, type metadata accessor for SignedPeerDynamicInfo);
LABEL_12:
    uint64_t v31 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v23, v24, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v53 = *(void *)v23;
  unint64_t v54 = *((void *)v23 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  sub_100005A40(v53, v54);
  uint64_t v55 = *((void *)v23 + 2);
  unint64_t v56 = *((void *)v23 + 3);
  *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
  sub_100005A40(v55, v56);
  ((void (*)(char *, char *, uint64_t))v88)(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v90);
LABEL_13:
  uint64_t v32 = a3[11];
  uint64_t v33 = (char *)a1 + v32;
  unint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      uint64_t v57 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v57;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v88)(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v90);
      uint64_t v58 = *(int *)(v35 + 24);
      uint64_t v59 = &v33[v58];
      unint64_t v60 = &v34[v58];
      uint64_t v61 = sub_100221DC0();
      uint64_t v62 = *(void *)(v61 - 8);
      uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
      int v64 = v63(v59, 1, v61);
      int v65 = v63(v60, 1, v61);
      if (v64)
      {
        if (!v65)
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v65)
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v59, v60, v61);
          goto LABEL_28;
        }
        (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
      }
      size_t v46 = *(void *)(*(void *)(sub_1000046DC((uint64_t *)&unk_10029ED30) - 8) + 64);
      uint64_t v47 = v59;
      uint64_t v48 = v60;
LABEL_20:
      memcpy(v47, v48, v46);
      goto LABEL_28;
    }
    sub_1000D7E78((uint64_t)v33, type metadata accessor for IdmsTrustedDevicesVersion);
LABEL_19:
    size_t v46 = *(void *)(*(void *)(sub_1000046DC(&qword_10029ED20) - 8) + 64);
    uint64_t v47 = v33;
    uint64_t v48 = v34;
    goto LABEL_20;
  }
  if (v39) {
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v90);
  uint64_t v40 = *(int *)(v35 + 24);
  uint64_t v41 = &v33[v40];
  uint64_t v42 = &v34[v40];
  uint64_t v43 = sub_100221DC0();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    uint64_t v45 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_28:
  uint64_t v66 = a3[12];
  uint64_t v67 = (void *)((char *)a1 + v66);
  unint64_t v68 = (void *)((char *)a2 + v66);
  uint64_t v69 = type metadata accessor for Metrics(0);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1, v69);
  int v73 = v71(v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      long long v74 = *((_OWORD *)v68 + 1);
      *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v74;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))((char *)v67 + *(int *)(v69 + 24), (char *)v68 + *(int *)(v69 + 24), v90);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v73)
  {
    sub_1000D7E78((uint64_t)v67, type metadata accessor for Metrics);
LABEL_33:
    uint64_t v75 = sub_1000046DC(&qword_10029F000);
    memcpy(v67, v68, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_34;
  }
  uint64_t v86 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v86;
  swift_bridgeObjectRelease();
  uint64_t v87 = v68[3];
  v67[2] = v68[2];
  v67[3] = v87;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v88)((char *)v67 + *(int *)(v69 + 24), (char *)v68 + *(int *)(v69 + 24), v90);
LABEL_34:
  uint64_t v76 = a3[13];
  uint64_t v77 = (_DWORD *)((char *)a1 + v76);
  uint64_t v78 = (_DWORD *)((char *)a2 + v76);
  uint64_t v79 = type metadata accessor for AccountInfo(0);
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v80 + 48);
  int v82 = v81(v77, 1, v79);
  int v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (!v83)
    {
      *uint64_t v77 = *v78;
      ((void (*)(char *, char *, uint64_t))v88)((char *)v77 + *(int *)(v79 + 20), (char *)v78 + *(int *)(v79 + 20), v90);
      return a1;
    }
    sub_1000D7E78((uint64_t)v77, type metadata accessor for AccountInfo);
    goto LABEL_39;
  }
  if (v83)
  {
LABEL_39:
    uint64_t v84 = sub_1000046DC(&qword_100299F50);
    memcpy(v77, v78, *(void *)(*(void *)(v84 - 8) + 64));
    return a1;
  }
  *uint64_t v77 = *v78;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))((char *)v77 + *(int *)(v79 + 20), (char *)v78 + *(int *)(v79 + 20), v90);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateTrustRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F4FB4);
}

uint64_t sub_1000F4FB4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[8];
LABEL_15:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v16(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_15;
  }
  uint64_t v13 = sub_1000046DC(&qword_10029ECA0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_15;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029ED20);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_15;
  }
  uint64_t v15 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_15;
  }
  uint64_t v17 = sub_1000046DC(&qword_100299F50);
  int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[13];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for UpdateTrustRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F5238);
}

uint64_t sub_1000F5238(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
LABEL_13:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v16(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_13;
  }
  uint64_t v13 = sub_1000046DC(&qword_10029ECA0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_13;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029ED20);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_13;
  }
  uint64_t v15 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_13;
  }
  uint64_t v17 = sub_1000046DC(&qword_100299F50);
  int v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = v5 + a4[13];

  return v18(v20, a2, a2, v19);
}

void sub_1000F54A8()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029AF10, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, &qword_10029AF18, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
      if (v2 <= 0x3F)
      {
        sub_1000E271C(319, (unint64_t *)&unk_10029BB78, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
        if (v3 <= 0x3F)
        {
          sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
          if (v4 <= 0x3F)
          {
            sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for UpdateTrustResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F571C);
}

uint64_t storeEnumTagSinglePayload for UpdateTrustResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F5734);
}

uint64_t *initializeBufferWithCopyOfBuffer for SetRecoveryKeyRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[4];
    unint64_t v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000059E8(v9, v10);
    a1[4] = v9;
    a1[5] = v10;
    uint64_t v11 = a2[6];
    unint64_t v12 = a2[7];
    sub_1000059E8(v11, v12);
    a1[6] = v11;
    a1[7] = v12;
    uint64_t v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    uint64_t v14 = a3[10];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_100221DF0();
    int v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    uint64_t v19 = a3[11];
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_1000046DC(&qword_100299F18);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v51 = v17;
      uint64_t v26 = v18;
      uint64_t v27 = *v21;
      unint64_t v28 = v21[1];
      sub_1000059E8(*v21, v28);
      *uint64_t v20 = v27;
      v20[1] = v28;
      uint64_t v29 = v21[2];
      unint64_t v30 = v21[3];
      sub_1000059E8(v29, v30);
      v20[2] = v29;
      v20[3] = v30;
      int v18 = v26;
      uint64_t v17 = v51;
      v18((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v31 = a3[12];
    uint64_t v32 = (uint64_t *)((char *)a1 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = type metadata accessor for Metrics(0);
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_1000046DC(&qword_10029F000);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      uint64_t v37 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v37;
      uint64_t v52 = v17;
      uint64_t v38 = v33[3];
      v32[2] = v33[2];
      v32[3] = v38;
      uint64_t v39 = *(int *)(v34 + 24);
      uint64_t v40 = v18;
      uint64_t v41 = (char *)v32 + v39;
      uint64_t v42 = (char *)v33 + v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = v41;
      int v18 = v40;
      uint64_t v17 = v52;
      v18(v43, v42, v52);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    uint64_t v44 = a3[13];
    uint64_t v45 = (_DWORD *)((char *)a1 + v44);
    size_t v46 = (_DWORD *)((char *)a2 + v44);
    uint64_t v47 = type metadata accessor for AccountInfo(0);
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = sub_1000046DC(&qword_100299F50);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      _DWORD *v45 = *v46;
      v18((char *)v45 + *(int *)(v47 + 20), (char *)v46 + *(int *)(v47 + 20), v17);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
  }
  return a1;
}

uint64_t destroy for SetRecoveryKeyRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(a1 + 32), *(void *)(a1 + 40));
  sub_100005A40(*(void *)(a1 + 48), *(void *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = sub_100221DF0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v14(v4, v5);
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_100005A40(*(void *)v6, *(void *)(v6 + 8));
    sub_100005A40(*(void *)(v6 + 16), *(void *)(v6 + 24));
    v14(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14(v8 + *(int *)(v9 + 24), v5);
  }
  uint64_t v10 = a1 + a2[13];
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = v10 + *(int *)(v11 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v13, v5);
  }
  return result;
}

void *initializeWithCopy for SetRecoveryKeyRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000059E8(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  uint64_t v10 = a2[6];
  unint64_t v11 = a2[7];
  sub_1000059E8(v10, v11);
  a1[6] = v10;
  a1[7] = v11;
  uint64_t v12 = a2[9];
  a1[8] = a2[8];
  a1[9] = v12;
  uint64_t v13 = a3[10];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_100221DF0();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_100299F18);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v50 = v16;
    uint64_t v24 = v17;
    uint64_t v25 = *v20;
    unint64_t v26 = v20[1];
    sub_1000059E8(*v20, v26);
    *uint64_t v19 = v25;
    v19[1] = v26;
    uint64_t v27 = v20[2];
    unint64_t v28 = v20[3];
    sub_1000059E8(v27, v28);
    v19[2] = v27;
    v19[3] = v28;
    uint64_t v17 = v24;
    uint64_t v16 = v50;
    v17((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v29 = a3[12];
  unint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = type metadata accessor for Metrics(0);
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_1000046DC(&qword_10029F000);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v35 = v31[1];
    *unint64_t v30 = *v31;
    v30[1] = v35;
    uint64_t v51 = a3;
    uint64_t v36 = v31[3];
    v30[2] = v31[2];
    v30[3] = v36;
    uint64_t v37 = *(int *)(v32 + 24);
    uint64_t v38 = v16;
    uint64_t v39 = v17;
    uint64_t v40 = (char *)v30 + v37;
    uint64_t v41 = (char *)v31 + v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = v40;
    uint64_t v17 = v39;
    uint64_t v16 = v38;
    a3 = v51;
    v17(v42, v41, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v43 = a3[13];
  uint64_t v44 = (_DWORD *)((char *)a1 + v43);
  uint64_t v45 = (_DWORD *)((char *)a2 + v43);
  uint64_t v46 = type metadata accessor for AccountInfo(0);
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    uint64_t v48 = sub_1000046DC(&qword_100299F50);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    *uint64_t v44 = *v45;
    v17((char *)v44 + *(int *)(v46 + 20), (char *)v45 + *(int *)(v46 + 20), v16);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  return a1;
}

void *assignWithCopy for SetRecoveryKeyRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  unint64_t v7 = a2[5];
  sub_1000059E8(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  a1[4] = v6;
  a1[5] = v7;
  sub_100005A40(v8, v9);
  uint64_t v10 = a2[6];
  unint64_t v11 = a2[7];
  sub_1000059E8(v10, v11);
  uint64_t v12 = a1[6];
  unint64_t v13 = a1[7];
  a1[6] = v10;
  a1[7] = v11;
  sub_100005A40(v12, v13);
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[10];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_100221DF0();
  uint64_t v64 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  uint64_t v63 = *(void (**)(char *, char *))(v64 + 24);
  v63(v15, v16);
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = v20[1];
      sub_1000059E8(*v20, v27);
      *uint64_t v19 = v26;
      v19[1] = v27;
      uint64_t v28 = v20[2];
      unint64_t v29 = v20[3];
      sub_1000059E8(v28, v29);
      v19[2] = v28;
      v19[3] = v29;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v65);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    sub_1000D7E78((uint64_t)v19, type metadata accessor for SignedPeerStableInfo);
LABEL_6:
    uint64_t v30 = sub_1000046DC(&qword_100299F18);
    memcpy(v19, v20, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v54 = *v20;
  unint64_t v55 = v20[1];
  sub_1000059E8(*v20, v55);
  uint64_t v56 = *v19;
  unint64_t v57 = v19[1];
  *uint64_t v19 = v54;
  v19[1] = v55;
  sub_100005A40(v56, v57);
  uint64_t v58 = v20[2];
  unint64_t v59 = v20[3];
  sub_1000059E8(v58, v59);
  uint64_t v60 = v19[2];
  unint64_t v61 = v19[3];
  v19[2] = v58;
  v19[3] = v59;
  sub_100005A40(v60, v61);
  ((void (*)(char *, char *, uint64_t))v63)((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v65);
LABEL_7:
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = type metadata accessor for Metrics(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      *uint64_t v32 = *v33;
      v32[1] = v33[1];
      v32[2] = v33[2];
      v32[3] = v33[3];
      uint64_t v39 = *(int *)(v34 + 24);
      uint64_t v40 = (char *)v32 + v39;
      uint64_t v41 = (char *)v33 + v39;
      uint64_t v62 = a3;
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v40, v41, v65);
      a3 = v62;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v38)
  {
    sub_1000D7E78((uint64_t)v32, type metadata accessor for Metrics);
LABEL_12:
    uint64_t v43 = sub_1000046DC(&qword_10029F000);
    memcpy(v32, v33, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_13;
  }
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[2] = v33[2];
  v32[3] = v33[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v63)((char *)v32 + *(int *)(v34 + 24), (char *)v33 + *(int *)(v34 + 24), v65);
LABEL_13:
  uint64_t v44 = a3[13];
  uint64_t v45 = (_DWORD *)((char *)a1 + v44);
  uint64_t v46 = (_DWORD *)((char *)a2 + v44);
  uint64_t v47 = type metadata accessor for AccountInfo(0);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (!v50)
  {
    if (!v51)
    {
      _DWORD *v45 = *v46;
      ((void (*)(char *, char *, uint64_t))v63)((char *)v45 + *(int *)(v47 + 20), (char *)v46 + *(int *)(v47 + 20), v65);
      return a1;
    }
    sub_1000D7E78((uint64_t)v45, type metadata accessor for AccountInfo);
    goto LABEL_18;
  }
  if (v51)
  {
LABEL_18:
    uint64_t v52 = sub_1000046DC(&qword_100299F50);
    memcpy(v45, v46, *(void *)(*(void *)(v52 - 8) + 64));
    return a1;
  }
  _DWORD *v45 = *v46;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))((char *)v45 + *(int *)(v47 + 20), (char *)v46 + *(int *)(v47 + 20), v65);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  return a1;
}

_OWORD *initializeWithTake for SetRecoveryKeyRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[10];
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  uint64_t v13 = a3[11];
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000046DC(&qword_100299F18);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    long long v19 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v19;
    v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = (_OWORD *)((char *)a1 + v20);
  uint64_t v22 = (_OWORD *)((char *)a2 + v20);
  uint64_t v23 = type metadata accessor for Metrics(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_1000046DC(&qword_10029F000);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    long long v26 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v26;
    v12((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v11);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[13];
  uint64_t v28 = (_DWORD *)((char *)a1 + v27);
  unint64_t v29 = (_DWORD *)((char *)a2 + v27);
  uint64_t v30 = type metadata accessor for AccountInfo(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_1000046DC(&qword_100299F50);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    *uint64_t v28 = *v29;
    v12((char *)v28 + *(int *)(v30 + 20), (char *)v29 + *(int *)(v30 + 20), v11);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  return a1;
}

void *assignWithTake for SetRecoveryKeyRequest(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100005A40(v8, v9);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_100005A40(v10, v11);
  a1[8] = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  a1[9] = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_100221DF0();
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  uint64_t v52 = *(void (**)(char *, uint64_t))(v53 + 40);
  v52(v13, v14);
  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      long long v24 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v24;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    sub_1000D7E78((uint64_t)v17, type metadata accessor for SignedPeerStableInfo);
LABEL_6:
    uint64_t v25 = sub_1000046DC(&qword_100299F18);
    memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v46 = *(void *)v17;
  unint64_t v47 = *((void *)v17 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  sub_100005A40(v46, v47);
  uint64_t v48 = *((void *)v17 + 2);
  unint64_t v49 = *((void *)v17 + 3);
  *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
  sub_100005A40(v48, v49);
  ((void (*)(char *, char *, uint64_t))v52)(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v54);
LABEL_7:
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for Metrics(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      long long v34 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v34;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))((char *)v27 + *(int *)(v29 + 24), (char *)v28 + *(int *)(v29 + 24), v54);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_1000D7E78((uint64_t)v27, type metadata accessor for Metrics);
LABEL_12:
    uint64_t v35 = sub_1000046DC(&qword_10029F000);
    memcpy(v27, v28, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v50 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = v28[3];
  v27[2] = v28[2];
  v27[3] = v51;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v52)((char *)v27 + *(int *)(v29 + 24), (char *)v28 + *(int *)(v29 + 24), v54);
LABEL_13:
  uint64_t v36 = a3[13];
  int v37 = (_DWORD *)((char *)a1 + v36);
  int v38 = (_DWORD *)(a2 + v36);
  uint64_t v39 = type metadata accessor for AccountInfo(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      *int v37 = *v38;
      ((void (*)(char *, char *, uint64_t))v52)((char *)v37 + *(int *)(v39 + 20), (char *)v38 + *(int *)(v39 + 20), v54);
      return a1;
    }
    sub_1000D7E78((uint64_t)v37, type metadata accessor for AccountInfo);
    goto LABEL_18;
  }
  if (v43)
  {
LABEL_18:
    uint64_t v44 = sub_1000046DC(&qword_100299F50);
    memcpy(v37, v38, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  *int v37 = *v38;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))((char *)v37 + *(int *)(v39 + 20), (char *)v38 + *(int *)(v39 + 20), v54);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetRecoveryKeyRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F70F8);
}

uint64_t sub_1000F70F8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[10];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_11;
  }
  uint64_t v13 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_11;
  }
  uint64_t v15 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[13];

  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for SetRecoveryKeyRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F72DC);
}

uint64_t sub_1000F72DC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[10];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_9;
  }
  uint64_t v13 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_9;
  }
  uint64_t v15 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[13];

  return v16(v18, a2, a2, v17);
}

void sub_1000F74AC()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029AF10, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
      if (v2 <= 0x3F)
      {
        sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for SetRecoveryKeyResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F767C);
}

uint64_t storeEnumTagSinglePayload for SetRecoveryKeyResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F7694);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveRecoveryKeyRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100221DF0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for SignedPeerStableInfo(0);
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v57 = v12;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_1000046DC(&qword_100299F18);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = v13;
      uint64_t v22 = *v16;
      unint64_t v23 = v16[1];
      sub_1000059E8(*v16, v23);
      *uint64_t v15 = v22;
      v15[1] = v23;
      uint64_t v24 = v16[2];
      unint64_t v25 = v16[3];
      sub_1000059E8(v24, v25);
      v15[2] = v24;
      v15[3] = v25;
      uint64_t v13 = v21;
      uint64_t v12 = v57;
      v13((char *)v15 + *(int *)(v17 + 24), (char *)v16 + *(int *)(v17 + 24), v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v26 = a3[8];
    uint64_t v27 = (uint64_t *)((char *)v4 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = type metadata accessor for SignedPeerDynamicInfo(0);
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_1000046DC(&qword_10029ECA0);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      int v32 = v13;
      uint64_t v33 = *v28;
      unint64_t v34 = v28[1];
      sub_1000059E8(*v28, v34);
      *uint64_t v27 = v33;
      v27[1] = v34;
      uint64_t v35 = v28[2];
      unint64_t v36 = v28[3];
      sub_1000059E8(v35, v36);
      v27[2] = v35;
      v27[3] = v36;
      uint64_t v13 = v32;
      uint64_t v12 = v57;
      v13((char *)v27 + *(int *)(v29 + 24), (char *)v28 + *(int *)(v29 + 24), v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v37 = a3[9];
    int v38 = (uint64_t *)((char *)v4 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = type metadata accessor for Metrics(0);
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      uint64_t v42 = sub_1000046DC(&qword_10029F000);
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v39[1];
      void *v38 = *v39;
      v38[1] = v43;
      uint64_t v44 = v39[3];
      v38[2] = v39[2];
      v38[3] = v44;
      uint64_t v45 = *(int *)(v40 + 24);
      uint64_t v46 = v13;
      unint64_t v47 = (char *)v38 + v45;
      uint64_t v48 = (char *)v39 + v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v49 = v47;
      uint64_t v13 = v46;
      uint64_t v12 = v57;
      v13(v49, v48, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    uint64_t v50 = a3[10];
    uint64_t v51 = (_DWORD *)((char *)v4 + v50);
    uint64_t v52 = (_DWORD *)((char *)a2 + v50);
    uint64_t v53 = type metadata accessor for AccountInfo(0);
    uint64_t v54 = *(void *)(v53 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      uint64_t v55 = sub_1000046DC(&qword_100299F50);
      memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      *uint64_t v51 = *v52;
      v13((char *)v51 + *(int *)(v53 + 20), (char *)v52 + *(int *)(v53 + 20), v12);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
  }
  return v4;
}

uint64_t destroy for RemoveRecoveryKeyRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_100221DF0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v16(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_100005A40(*(void *)v6, *(void *)(v6 + 8));
    sub_100005A40(*(void *)(v6 + 16), *(void *)(v6 + 24));
    v16(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v16(v8 + *(int *)(v9 + 24), v5);
  }
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16(v10 + *(int *)(v11 + 24), v5);
  }
  uint64_t v12 = a1 + a2[10];
  uint64_t v13 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13);
  if (!result)
  {
    uint64_t v15 = v12 + *(int *)(v13 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v16)(v15, v5);
  }
  return result;
}

void *initializeWithCopy for RemoveRecoveryKeyRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v10;
  uint64_t v14 = a3;
  v12(v9, v13, v11);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v60 = v11;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_1000046DC(&qword_100299F18);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = v14;
    uint64_t v22 = v12;
    uint64_t v23 = *v17;
    unint64_t v24 = v17[1];
    sub_1000059E8(*v17, v24);
    *uint64_t v16 = v23;
    v16[1] = v24;
    uint64_t v25 = v17[2];
    unint64_t v26 = v17[3];
    sub_1000059E8(v25, v26);
    v16[2] = v25;
    v16[3] = v26;
    uint64_t v14 = v21;
    uint64_t v12 = v22;
    uint64_t v11 = v60;
    v12((char *)v16 + *(int *)(v18 + 24), (char *)v17 + *(int *)(v18 + 24), v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v27 = v14[8];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v30 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = v14;
    unint64_t v34 = v12;
    uint64_t v35 = *v29;
    unint64_t v36 = v29[1];
    sub_1000059E8(*v29, v36);
    *uint64_t v28 = v35;
    v28[1] = v36;
    uint64_t v37 = v29[2];
    unint64_t v38 = v29[3];
    sub_1000059E8(v37, v38);
    v28[2] = v37;
    v28[3] = v38;
    uint64_t v14 = v33;
    uint64_t v12 = v34;
    uint64_t v11 = v60;
    v12((char *)v28 + *(int *)(v30 + 24), (char *)v29 + *(int *)(v30 + 24), v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  uint64_t v39 = v14[9];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  uint64_t v42 = type metadata accessor for Metrics(0);
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_1000046DC(&qword_10029F000);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v45;
    uint64_t v46 = v14;
    uint64_t v47 = v41[3];
    v40[2] = v41[2];
    v40[3] = v47;
    uint64_t v48 = *(int *)(v42 + 24);
    unint64_t v49 = v12;
    uint64_t v50 = (char *)v40 + v48;
    uint64_t v51 = (char *)v41 + v48;
    swift_bridgeObjectRetain();
    uint64_t v14 = v46;
    swift_bridgeObjectRetain();
    uint64_t v52 = v50;
    uint64_t v12 = v49;
    uint64_t v11 = v60;
    v12(v52, v51, v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v53 = v14[10];
  uint64_t v54 = (_DWORD *)((char *)a1 + v53);
  uint64_t v55 = (_DWORD *)((char *)a2 + v53);
  uint64_t v56 = type metadata accessor for AccountInfo(0);
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_1000046DC(&qword_100299F50);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    *uint64_t v54 = *v55;
    v12((char *)v54 + *(int *)(v56 + 20), (char *)v55 + *(int *)(v56 + 20), v11);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  return a1;
}

void *assignWithCopy for RemoveRecoveryKeyRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v77 = *(void *)(v9 - 8);
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v77 + 24);
  v75(v7, v8, v9);
  uint64_t v78 = a3;
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *v12;
      unint64_t v19 = v12[1];
      sub_1000059E8(*v12, v19);
      *uint64_t v11 = v18;
      v11[1] = v19;
      uint64_t v20 = v12[2];
      unint64_t v21 = v12[3];
      sub_1000059E8(v20, v21);
      v11[2] = v20;
      v11[3] = v21;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v9);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for SignedPeerStableInfo);
LABEL_6:
    uint64_t v22 = sub_1000046DC(&qword_100299F18);
    memcpy(v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v59 = *v12;
  unint64_t v60 = v12[1];
  sub_1000059E8(*v12, v60);
  uint64_t v61 = *v11;
  unint64_t v62 = v11[1];
  *uint64_t v11 = v59;
  v11[1] = v60;
  sub_100005A40(v61, v62);
  uint64_t v63 = v12[2];
  unint64_t v64 = v12[3];
  sub_1000059E8(v63, v64);
  uint64_t v65 = v11[2];
  unint64_t v66 = v11[3];
  v11[2] = v63;
  v11[3] = v64;
  sub_100005A40(v65, v66);
  v75((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v9);
LABEL_7:
  uint64_t v23 = v78[8];
  unint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      uint64_t v31 = *v25;
      unint64_t v32 = v25[1];
      sub_1000059E8(*v25, v32);
      uint64_t *v24 = v31;
      v24[1] = v32;
      uint64_t v33 = v25[2];
      unint64_t v34 = v25[3];
      sub_1000059E8(v33, v34);
      v24[2] = v33;
      v24[3] = v34;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v9);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    sub_1000D7E78((uint64_t)v24, type metadata accessor for SignedPeerDynamicInfo);
LABEL_12:
    uint64_t v35 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v24, v25, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v67 = *v25;
  unint64_t v68 = v25[1];
  sub_1000059E8(*v25, v68);
  uint64_t v69 = *v24;
  unint64_t v70 = v24[1];
  uint64_t *v24 = v67;
  v24[1] = v68;
  sub_100005A40(v69, v70);
  uint64_t v71 = v25[2];
  unint64_t v72 = v25[3];
  sub_1000059E8(v71, v72);
  uint64_t v73 = v24[2];
  unint64_t v74 = v24[3];
  v24[2] = v71;
  v24[3] = v72;
  sub_100005A40(v73, v74);
  v75((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v9);
LABEL_13:
  uint64_t v36 = v78[9];
  uint64_t v37 = (void *)((char *)a1 + v36);
  unint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = type metadata accessor for Metrics(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  uint64_t v76 = v9;
  if (v42)
  {
    if (!v43)
    {
      *uint64_t v37 = *v38;
      v37[1] = v38[1];
      v37[2] = v38[2];
      v37[3] = v38[3];
      uint64_t v44 = *(int *)(v39 + 24);
      uint64_t v45 = (char *)v37 + v44;
      uint64_t v46 = (char *)v38 + v44;
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(v45, v46, v76);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v43)
  {
    sub_1000D7E78((uint64_t)v37, type metadata accessor for Metrics);
LABEL_18:
    uint64_t v48 = sub_1000046DC(&qword_10029F000);
    memcpy(v37, v38, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37[2] = v38[2];
  v37[3] = v38[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v75((char *)v37 + *(int *)(v39 + 24), (char *)v38 + *(int *)(v39 + 24), v9);
LABEL_19:
  uint64_t v49 = v78[10];
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = type metadata accessor for AccountInfo(0);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  int v55 = v54(v50, 1, v52);
  int v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      v75(&v50[*(int *)(v52 + 20)], &v51[*(int *)(v52 + 20)], v76);
      return a1;
    }
    sub_1000D7E78((uint64_t)v50, type metadata accessor for AccountInfo);
    goto LABEL_24;
  }
  if (v56)
  {
LABEL_24:
    uint64_t v57 = sub_1000046DC(&qword_100299F50);
    memcpy(v50, v51, *(void *)(*(void *)(v57 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(&v50[*(int *)(v52 + 20)], &v51[*(int *)(v52 + 20)], v76);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  return a1;
}

_OWORD *initializeWithTake for RemoveRecoveryKeyRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_100299F18);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    long long v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = (_OWORD *)((char *)a1 + v19);
  unint64_t v21 = (_OWORD *)((char *)a2 + v19);
  uint64_t v22 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    long long v25 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v25;
    v11((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = (_OWORD *)((char *)a1 + v26);
  uint64_t v28 = (_OWORD *)((char *)a2 + v26);
  uint64_t v29 = type metadata accessor for Metrics(0);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_1000046DC(&qword_10029F000);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    long long v32 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v32;
    v11((char *)v27 + *(int *)(v29 + 24), (char *)v28 + *(int *)(v29 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v33 = a3[10];
  unint64_t v34 = (_DWORD *)((char *)a1 + v33);
  uint64_t v35 = (_DWORD *)((char *)a2 + v33);
  uint64_t v36 = type metadata accessor for AccountInfo(0);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = sub_1000046DC(&qword_100299F50);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    _DWORD *v34 = *v35;
    v11((char *)v34 + *(int *)(v36 + 20), (char *)v35 + *(int *)(v36 + 20), v10);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  return a1;
}

void *assignWithTake for RemoveRecoveryKeyRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  unint64_t v62 = *(void (**)(char *, char *))(v63 + 40);
  v62(v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      long long v20 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v20;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
LABEL_6:
    uint64_t v21 = sub_1000046DC(&qword_100299F18);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v52 = *(void *)v13;
  unint64_t v53 = *((void *)v13 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  sub_100005A40(v52, v53);
  uint64_t v54 = *((void *)v13 + 2);
  unint64_t v55 = *((void *)v13 + 3);
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  sub_100005A40(v54, v55);
  ((void (*)(char *, char *, uint64_t))v62)(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v64);
LABEL_7:
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      long long v30 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v30;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_1000D7E78((uint64_t)v23, type metadata accessor for SignedPeerDynamicInfo);
LABEL_12:
    uint64_t v31 = sub_1000046DC(&qword_10029ECA0);
    memcpy(v23, v24, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v56 = *(void *)v23;
  unint64_t v57 = *((void *)v23 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  sub_100005A40(v56, v57);
  uint64_t v58 = *((void *)v23 + 2);
  unint64_t v59 = *((void *)v23 + 3);
  *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
  sub_100005A40(v58, v59);
  ((void (*)(char *, char *, uint64_t))v62)(&v23[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v64);
LABEL_13:
  uint64_t v32 = a3[9];
  uint64_t v33 = (void *)((char *)a1 + v32);
  unint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v35 = type metadata accessor for Metrics(0);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      long long v40 = *((_OWORD *)v34 + 1);
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v40;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v64);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v39)
  {
    sub_1000D7E78((uint64_t)v33, type metadata accessor for Metrics);
LABEL_18:
    uint64_t v41 = sub_1000046DC(&qword_10029F000);
    memcpy(v33, v34, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v60 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v61 = v34[3];
  v33[2] = v34[2];
  v33[3] = v61;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v62)((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v64);
LABEL_19:
  uint64_t v42 = a3[10];
  int v43 = (_DWORD *)((char *)a1 + v42);
  uint64_t v44 = (_DWORD *)((char *)a2 + v42);
  uint64_t v45 = type metadata accessor for AccountInfo(0);
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v43, 1, v45);
  int v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      *int v43 = *v44;
      ((void (*)(char *, char *, uint64_t))v62)((char *)v43 + *(int *)(v45 + 20), (char *)v44 + *(int *)(v45 + 20), v64);
      return a1;
    }
    sub_1000D7E78((uint64_t)v43, type metadata accessor for AccountInfo);
    goto LABEL_24;
  }
  if (v49)
  {
LABEL_24:
    uint64_t v50 = sub_1000046DC(&qword_100299F50);
    memcpy(v43, v44, *(void *)(*(void *)(v50 - 8) + 64));
    return a1;
  }
  *int v43 = *v44;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))((char *)v43 + *(int *)(v45 + 20), (char *)v44 + *(int *)(v45 + 20), v64);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveRecoveryKeyRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F95F0);
}

uint64_t sub_1000F95F0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v15(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_13;
  }
  uint64_t v13 = sub_1000046DC(&qword_10029ECA0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_13;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_13;
  }
  uint64_t v16 = sub_1000046DC(&qword_100299F50);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[10];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for RemoveRecoveryKeyRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F9824);
}

uint64_t sub_1000F9824(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_11:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F18);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_11;
  }
  uint64_t v13 = sub_1000046DC(&qword_10029ECA0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_11;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_11;
  }
  uint64_t v16 = sub_1000046DC(&qword_100299F50);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = v5 + a4[10];

  return v17(v19, a2, a2, v18);
}

void sub_1000F9A44()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029AF10, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, &qword_10029AF18, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
      if (v2 <= 0x3F)
      {
        sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
        if (v3 <= 0x3F)
        {
          sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

char *_s18TrustedPeersHelper13ResetResponseVwCP_0(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Changes(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_1000046DC((uint64_t *)&unk_10029EC90);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v16;
      uint64_t v22 = v8;
      uint64_t v17 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      unint64_t v18 = *((void *)v11 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000059E8(v17, v18);
      *((void *)v10 + 3) = v17;
      *((void *)v10 + 4) = v18;
      uint64_t v19 = *((void *)v11 + 5);
      unint64_t v20 = *((void *)v11 + 6);
      sub_1000059E8(v19, v20);
      *((void *)v10 + 5) = v19;
      *((void *)v10 + 6) = v20;
      v10[56] = v11[56];
      v22(&v10[*(int *)(v12 + 36)], &v11[*(int *)(v12 + 36)], v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t _s18TrustedPeersHelper13ResetResponseVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v9(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Changes(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v5 + 24), *(void *)(v5 + 32));
    sub_100005A40(*(void *)(v5 + 40), *(void *)(v5 + 48));
    uint64_t v8 = v5 + *(int *)(v6 + 36);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
  }
  return result;
}

char *_s18TrustedPeersHelper13ResetResponseVwcp_0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Changes(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v14;
    unint64_t v20 = v7;
    uint64_t v15 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    unint64_t v16 = *((void *)v10 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000059E8(v15, v16);
    *((void *)v9 + 3) = v15;
    *((void *)v9 + 4) = v16;
    uint64_t v17 = *((void *)v10 + 5);
    unint64_t v18 = *((void *)v10 + 6);
    sub_1000059E8(v17, v18);
    *((void *)v9 + 5) = v17;
    *((void *)v9 + 6) = v18;
    v9[56] = v10[56];
    v20(&v9[*(int *)(v11 + 36)], &v10[*(int *)(v11 + 36)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

char *_s18TrustedPeersHelper13ResetResponseVwtk_0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Changes(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
    v9[56] = v10[56];
    v7(&v9[*(int *)(v11 + 36)], &v10[*(int *)(v11 + 36)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveRecoveryKeyResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FA2B4);
}

uint64_t sub_1000FA2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FC2F8(a1, a2, a3, (uint64_t *)&unk_10029EC90);
}

uint64_t storeEnumTagSinglePayload for RemoveRecoveryKeyResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FA2D4);
}

uint64_t sub_1000FA2D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000FC414(a1, a2, a3, a4, (uint64_t *)&unk_10029EC90);
}

uint64_t *initializeBufferWithCopyOfBuffer for PerformATOPRVActionsRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for Metrics(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_1000046DC(&qword_10029F000);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v16;
      int v28 = v8;
      uint64_t v17 = v11[3];
      v10[2] = v11[2];
      v10[3] = v17;
      uint64_t v18 = *(int *)(v12 + 24);
      uint64_t v19 = (char *)v10 + v18;
      unint64_t v20 = (char *)v11 + v18;
      swift_bridgeObjectRetain();
      uint64_t v8 = v28;
      swift_bridgeObjectRetain();
      v28((uint64_t *)v19, (uint64_t *)v20, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v22 = (_DWORD *)((char *)a1 + v21);
    uint64_t v23 = (_DWORD *)((char *)a2 + v21);
    uint64_t v24 = type metadata accessor for AccountInfo(0);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_1000046DC(&qword_100299F50);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *uint64_t v22 = *v23;
      v8((uint64_t *)((char *)v22 + *(int *)(v24 + 20)), (uint64_t *)((char *)v23 + *(int *)(v24 + 20)), v7);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return a1;
}

uint64_t destroy for PerformATOPRVActionsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v11(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11(v5 + *(int *)(v6 + 24), v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v10, v4);
  }
  return result;
}

uint64_t initializeWithCopy for PerformATOPRVActionsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Metrics(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC(&qword_10029F000);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v14;
    uint64_t v26 = v7;
    uint64_t v15 = v10[3];
    v9[2] = v10[2];
    v9[3] = v15;
    uint64_t v16 = *(int *)(v11 + 24);
    uint64_t v17 = (char *)v9 + v16;
    uint64_t v18 = (char *)v10 + v16;
    swift_bridgeObjectRetain();
    uint64_t v7 = v26;
    swift_bridgeObjectRetain();
    v26((uint64_t)v17, (uint64_t)v18, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v19 = *(int *)(a3 + 24);
  unint64_t v20 = (_DWORD *)(a1 + v19);
  uint64_t v21 = (_DWORD *)(a2 + v19);
  uint64_t v22 = type metadata accessor for AccountInfo(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1000046DC(&qword_100299F50);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    *unint64_t v20 = *v21;
    v7((uint64_t)v20 + *(int *)(v22 + 20), (uint64_t)v21 + *(int *)(v22 + 20), v6);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t assignWithCopy for PerformATOPRVActionsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  long long v30 = *(void (**)(char *, char *, uint64_t))(v31 + 24);
  ((void (*)(uint64_t, uint64_t))v30)(a1, a2);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Metrics(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      v8[2] = v9[2];
      v8[3] = v9[3];
      uint64_t v15 = *(int *)(v10 + 24);
      uint64_t v16 = (char *)v8 + v15;
      uint64_t v17 = (char *)v9 + v15;
      int v29 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v16, v17, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1000D7E78((uint64_t)v8, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v18 = sub_1000046DC(&qword_10029F000);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30((char *)v8 + *(int *)(v10 + 24), (char *)v9 + *(int *)(v10 + 24), v32);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 24);
  unint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = type metadata accessor for AccountInfo(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *(_DWORD *)unint64_t v20 = *(_DWORD *)v21;
      v30(&v20[*(int *)(v22 + 20)], &v21[*(int *)(v22 + 20)], v32);
      return a1;
    }
    sub_1000D7E78((uint64_t)v20, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_1000046DC(&qword_100299F50);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  *(_DWORD *)unint64_t v20 = *(_DWORD *)v21;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(&v20[*(int *)(v22 + 20)], &v21[*(int *)(v22 + 20)], v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

char *initializeWithTake for PerformATOPRVActionsRequest(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Metrics(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC(&qword_10029F000);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
    v7(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for AccountInfo(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_1000046DC(&qword_100299F50);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v7(&v16[*(int *)(v18 + 20)], &v17[*(int *)(v18 + 20)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t assignWithTake for PerformATOPRVActionsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  int v29 = *(void (**)(char *, char *, uint64_t))(v30 + 40);
  ((void (*)(uint64_t, uint64_t))v29)(a1, a2);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Metrics(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      long long v15 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v15;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v8 + *(int *)(v10 + 24), (char *)v9 + *(int *)(v10 + 24), v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1000D7E78((uint64_t)v8, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v27 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = v9[3];
  v8[2] = v9[2];
  v8[3] = v28;
  swift_bridgeObjectRelease();
  v29((char *)v8 + *(int *)(v10 + 24), (char *)v9 + *(int *)(v10 + 24), v31);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)(a1 + v17);
  uint64_t v19 = (char *)(a2 + v17);
  uint64_t v20 = type metadata accessor for AccountInfo(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      v29(&v18[*(int *)(v20 + 20)], &v19[*(int *)(v20 + 20)], v31);
      return a1;
    }
    sub_1000D7E78((uint64_t)v18, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = sub_1000046DC(&qword_100299F50);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v18[*(int *)(v20 + 20)], &v19[*(int *)(v20 + 20)], v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for PerformATOPRVActionsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB394);
}

uint64_t sub_1000FB394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010F644(a1, a2, a3, &qword_10029F000, &qword_100299F50);
}

uint64_t storeEnumTagSinglePayload for PerformATOPRVActionsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB3BC);
}

uint64_t sub_1000FB3BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10010F7CC(a1, a2, a3, a4, &qword_10029F000, &qword_100299F50);
}

void sub_1000FB3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for PerformATOPRVActionsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB438);
}

uint64_t storeEnumTagSinglePayload for PerformATOPRVActionsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB450);
}

uint64_t getEnumTagSinglePayload for AddCustodianRecoveryKeyRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB46C);
}

uint64_t storeEnumTagSinglePayload for AddCustodianRecoveryKeyRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB484);
}

void *_s18TrustedPeersHelper17EstablishResponseVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 24);
  uint64_t v33 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  unint64_t v34 = a1;
  uint64_t v13 = (uint64_t)a1 + v12;
  int v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Changes(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17((uint64_t)v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = *((void *)v14 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v13 + 16) = *((void *)v14 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v25 = *((void *)v14 + 3);
      unint64_t v26 = *((void *)v14 + 4);
      sub_1000059E8(v25, v26);
      uint64_t v27 = *(void *)(v13 + 24);
      unint64_t v28 = *(void *)(v13 + 32);
      *(void *)(v13 + 24) = v25;
      *(void *)(v13 + 32) = v26;
      sub_100005A40(v27, v28);
      uint64_t v29 = *((void *)v14 + 5);
      unint64_t v30 = *((void *)v14 + 6);
      sub_1000059E8(v29, v30);
      uint64_t v31 = *(void *)(v13 + 40);
      unint64_t v32 = *(void *)(v13 + 48);
      *(void *)(v13 + 40) = v29;
      *(void *)(v13 + 48) = v30;
      sub_100005A40(v31, v32);
      *(unsigned char *)(v13 + 56) = v14[56];
      ((void (*)(uint64_t, char *, uint64_t))v11)(v13 + *(int *)(v15 + 36), &v14[*(int *)(v15 + 36)], v33);
      return v34;
    }
    sub_1000D7E78(v13, type metadata accessor for Changes);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v23 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy((void *)v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
    return v34;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = *((void *)v14 + 1);
  *(void *)(v13 + 16) = *((void *)v14 + 2);
  uint64_t v19 = *((void *)v14 + 3);
  unint64_t v20 = *((void *)v14 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000059E8(v19, v20);
  *(void *)(v13 + 24) = v19;
  *(void *)(v13 + 32) = v20;
  uint64_t v21 = *((void *)v14 + 5);
  unint64_t v22 = *((void *)v14 + 6);
  sub_1000059E8(v21, v22);
  *(void *)(v13 + 40) = v21;
  *(void *)(v13 + 48) = v22;
  *(unsigned char *)(v13 + 56) = v14[56];
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v13 + *(int *)(v15 + 36), &v14[*(int *)(v15 + 36)], v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v34;
}

void *_s18TrustedPeersHelper17EstablishResponseVwta_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 40);
  uint64_t v26 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v27 = a1;
  uint64_t v13 = (uint64_t)a1 + v12;
  int v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Changes(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17((uint64_t)v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      uint64_t v21 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v21;
      swift_bridgeObjectRelease();
      *(void *)(v13 + 16) = *((void *)v14 + 2);
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(v13 + 24);
      unint64_t v23 = *(void *)(v13 + 32);
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
      sub_100005A40(v22, v23);
      uint64_t v24 = *(void *)(v13 + 40);
      unint64_t v25 = *(void *)(v13 + 48);
      *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
      sub_100005A40(v24, v25);
      *(unsigned char *)(v13 + 56) = v14[56];
      ((void (*)(uint64_t, char *, uint64_t))v11)(v13 + *(int *)(v15 + 36), &v14[*(int *)(v15 + 36)], v26);
      return v27;
    }
    sub_1000D7E78(v13, type metadata accessor for Changes);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy((void *)v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return v27;
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = *((void *)v14 + 2);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
  *(unsigned char *)(v13 + 56) = v14[56];
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13 + *(int *)(v15 + 36), &v14[*(int *)(v15 + 36)], v26);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v27;
}

uint64_t getEnumTagSinglePayload for AddCustodianRecoveryKeyResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB9E8);
}

uint64_t sub_1000FB9EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029EC90);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AddCustodianRecoveryKeyResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FBB30);
}

void *sub_1000FBB34(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029EC90);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000FBC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_100221DF0();
  if (v8 <= 0x3F)
  {
    sub_1000E271C(319, a5, a6);
    if (v9 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for FetchChangesRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FBD74);
}

uint64_t storeEnumTagSinglePayload for FetchChangesRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FBD8C);
}

void sub_1000FBD90()
{
}

uint64_t _s18TrustedPeersHelper13ResetResponseVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v31 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Changes(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(void *)(v9 + 8) = *(void *)(v10 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v9 + 16) = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(v10 + 24);
      unint64_t v23 = *(void *)(v10 + 32);
      sub_1000059E8(v22, v23);
      uint64_t v24 = *(void *)(v9 + 24);
      unint64_t v25 = *(void *)(v9 + 32);
      *(void *)(v9 + 24) = v22;
      *(void *)(v9 + 32) = v23;
      sub_100005A40(v24, v25);
      uint64_t v26 = *(void *)(v10 + 40);
      unint64_t v27 = *(void *)(v10 + 48);
      sub_1000059E8(v26, v27);
      uint64_t v28 = *(void *)(v9 + 40);
      unint64_t v29 = *(void *)(v9 + 48);
      *(void *)(v9 + 40) = v26;
      *(void *)(v9 + 48) = v27;
      sub_100005A40(v28, v29);
      *(unsigned char *)(v9 + 56) = *(unsigned char *)(v10 + 56);
      v7(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v6);
      return v31;
    }
    sub_1000D7E78(v9, type metadata accessor for Changes);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v20 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v20 - 8) + 64));
    return v31;
  }
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v16 = *(void *)(v10 + 24);
  unint64_t v17 = *(void *)(v10 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000059E8(v16, v17);
  *(void *)(v9 + 24) = v16;
  *(void *)(v9 + 32) = v17;
  uint64_t v18 = *(void *)(v10 + 40);
  unint64_t v19 = *(void *)(v10 + 48);
  sub_1000059E8(v18, v19);
  *(void *)(v9 + 40) = v18;
  *(void *)(v9 + 48) = v19;
  *(unsigned char *)(v9 + 56) = *(unsigned char *)(v10 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v31;
}

uint64_t _s18TrustedPeersHelper13ResetResponseVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v24 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Changes(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v18 = *(void *)(v10 + 8);
      *(void *)uint64_t v9 = *(void *)v10;
      *(void *)(v9 + 8) = v18;
      swift_bridgeObjectRelease();
      *(void *)(v9 + 16) = *(void *)(v10 + 16);
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(v9 + 24);
      unint64_t v20 = *(void *)(v9 + 32);
      *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
      sub_100005A40(v19, v20);
      uint64_t v21 = *(void *)(v9 + 40);
      unint64_t v22 = *(void *)(v9 + 48);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      sub_100005A40(v21, v22);
      *(unsigned char *)(v9 + 56) = *(unsigned char *)(v10 + 56);
      v7(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v6);
      return v24;
    }
    sub_1000D7E78(v9, type metadata accessor for Changes);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1000046DC((uint64_t *)&unk_10029EC90);
    memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v16 - 8) + 64));
    return v24;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  *(unsigned char *)(v9 + 56) = *(unsigned char *)(v10 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v24;
}

uint64_t getEnumTagSinglePayload for FetchChangesResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FC2EC);
}

uint64_t sub_1000FC2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FC2F8(a1, a2, a3, (uint64_t *)&unk_10029EC90);
}

uint64_t sub_1000FC2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_100221DF0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v10(a1, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1000046DC(a4);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 20);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for FetchChangesResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FC408);
}

uint64_t sub_1000FC408(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000FC414(a1, a2, a3, a4, (uint64_t *)&unk_10029EC90);
}

uint64_t sub_1000FC414(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    return v12(a1, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_1000046DC(a5);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 20);
    return v15(v17, a2, a2, v16);
  }
}

void sub_1000FC528()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029B890, (void (*)(uint64_t))type metadata accessor for Changes);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for FetchViableBottlesRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for Metrics(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1000046DC(&qword_10029F000);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v19;
      uint64_t v31 = v11;
      uint64_t v20 = v14[3];
      v13[2] = v14[2];
      v13[3] = v20;
      uint64_t v21 = *(int *)(v15 + 24);
      unint64_t v22 = (char *)v13 + v21;
      uint64_t v23 = (char *)v14 + v21;
      swift_bridgeObjectRetain();
      uint64_t v11 = v31;
      swift_bridgeObjectRetain();
      v31((uint64_t)v22, (uint64_t)v23, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v24 = a3[7];
    unint64_t v25 = (_DWORD *)((char *)v4 + v24);
    uint64_t v26 = (_DWORD *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for AccountInfo(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1000046DC(&qword_100299F50);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *unint64_t v25 = *v26;
      v11((uint64_t)v25 + *(int *)(v27 + 20), (uint64_t)v26 + *(int *)(v27 + 20), v10);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t initializeWithCopy for FetchViableBottlesRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v29 = v10;
    uint64_t v18 = v13[3];
    v12[2] = v13[2];
    v12[3] = v18;
    uint64_t v19 = *(int *)(v14 + 24);
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    uint64_t v10 = v29;
    swift_bridgeObjectRetain();
    v29((uint64_t)v20, (uint64_t)v21, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v22 = a3[7];
  uint64_t v23 = (_DWORD *)(a1 + v22);
  uint64_t v24 = (_DWORD *)(a2 + v22);
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *uint64_t v23 = *v24;
    v10((uint64_t)v23 + *(int *)(v25 + 20), (uint64_t)v24 + *(int *)(v25 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

uint64_t assignWithCopy for FetchViableBottlesRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  unint64_t v34 = *(void (**)(char *, char *, uint64_t))(v35 + 24);
  ((void (*)(uint64_t, uint64_t))v34)(v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      v12[2] = v13[2];
      v12[3] = v13[3];
      uint64_t v19 = *(int *)(v14 + 24);
      uint64_t v33 = (char *)v12 + v19;
      uint64_t v20 = (char *)v13 + v19;
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v33, v20, v36);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1000D7E78((uint64_t)v12, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v22 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v36);
LABEL_7:
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for AccountInfo(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
      v34(&v24[*(int *)(v26 + 20)], &v25[*(int *)(v26 + 20)], v36);
      return a1;
    }
    sub_1000D7E78((uint64_t)v24, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_1000046DC(&qword_100299F50);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v24[*(int *)(v26 + 20)], &v25[*(int *)(v26 + 20)], v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t initializeWithTake for FetchViableBottlesRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (_DWORD *)(a1 + v18);
  uint64_t v20 = (_DWORD *)(a2 + v18);
  uint64_t v21 = type metadata accessor for AccountInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_100299F50);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v10((char *)v19 + *(int *)(v21 + 20), (char *)v20 + *(int *)(v21 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t assignWithTake for FetchViableBottlesRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v33 + 40);
  ((void (*)(uint64_t, uint64_t))v32)(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      long long v18 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v18;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v19 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = v12[3];
  v11[2] = v12[2];
  v11[3] = v31;
  swift_bridgeObjectRelease();
  v32((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  uint64_t v23 = type metadata accessor for AccountInfo(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      v32(&v21[*(int *)(v23 + 20)], &v22[*(int *)(v23 + 20)], v34);
      return a1;
    }
    sub_1000D7E78((uint64_t)v21, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_1000046DC(&qword_100299F50);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v21[*(int *)(v23 + 20)], &v22[*(int *)(v23 + 20)], v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchViableBottlesRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FD59C);
}

uint64_t storeEnumTagSinglePayload for FetchViableBottlesRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FD5B4);
}

void sub_1000FD5B8()
{
}

uint64_t initializeBufferWithCopyOfBuffer for FetchViableBottlesResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v7 = *(int *)(a3 + 44);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for FetchViableBottlesResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for FetchViableBottlesResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_100221DF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for FetchViableBottlesResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for FetchViableBottlesResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FetchViableBottlesResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchViableBottlesResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FDA68);
}

uint64_t sub_1000FDA68(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FetchViableBottlesResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FDB2C);
}

void *sub_1000FDB2C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000FDBD4()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s18TrustedPeersHelper19FetchChangesRequestVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Metrics(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC(&qword_10029F000);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v20 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v20;
      unint64_t v32 = v12;
      uint64_t v21 = v15[3];
      v14[2] = v15[2];
      v14[3] = v21;
      uint64_t v22 = *(int *)(v16 + 24);
      uint64_t v23 = (char *)v14 + v22;
      uint64_t v24 = (char *)v15 + v22;
      swift_bridgeObjectRetain();
      uint64_t v12 = v32;
      swift_bridgeObjectRetain();
      v32(v23, v24, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v25 = a3[7];
    int v26 = (_DWORD *)((char *)v4 + v25);
    int v27 = (_DWORD *)((char *)a2 + v25);
    uint64_t v28 = type metadata accessor for AccountInfo(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_1000046DC(&qword_100299F50);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *int v26 = *v27;
      v12((char *)v26 + *(int *)(v28 + 20), (char *)v27 + *(int *)(v28 + 20), v11);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return v4;
}

uint64_t _s18TrustedPeersHelper19FetchChangesRequestVwxx_0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *_s18TrustedPeersHelper19FetchChangesRequestVwcp_0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Metrics(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_10029F000);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    uint64_t v30 = v11;
    uint64_t v19 = v14[3];
    v13[2] = v14[2];
    v13[3] = v19;
    uint64_t v20 = *(int *)(v15 + 24);
    uint64_t v21 = (char *)v13 + v20;
    uint64_t v22 = (char *)v14 + v20;
    swift_bridgeObjectRetain();
    uint64_t v11 = v30;
    swift_bridgeObjectRetain();
    v30(v21, v22, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = (_DWORD *)((char *)a1 + v23);
  uint64_t v25 = (_DWORD *)((char *)a2 + v23);
  uint64_t v26 = type metadata accessor for AccountInfo(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_1000046DC(&qword_100299F50);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    _DWORD *v24 = *v25;
    v11((char *)v24 + *(int *)(v26 + 20), (char *)v25 + *(int *)(v26 + 20), v10);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

void *_s18TrustedPeersHelper19FetchChangesRequestVwca_0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v33 = *(void (**)(char *, char *))(v34 + 24);
  v33(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      v11[2] = v12[2];
      v11[3] = v12[3];
      uint64_t v18 = *(int *)(v13 + 24);
      unint64_t v32 = (char *)v11 + v18;
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v32, v19, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v21 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v33)((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v35);
LABEL_7:
  uint64_t v22 = a3[7];
  uint64_t v23 = (_DWORD *)((char *)a1 + v22);
  uint64_t v24 = (_DWORD *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *uint64_t v23 = *v24;
      ((void (*)(char *, char *, uint64_t))v33)((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
      return a1;
    }
    sub_1000D7E78((uint64_t)v23, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *uint64_t v23 = *v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

_OWORD *_s18TrustedPeersHelper19FetchChangesRequestVwtk_0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (_DWORD *)((char *)a1 + v18);
  uint64_t v20 = (_DWORD *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for AccountInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_100299F50);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v10((char *)v19 + *(int *)(v21 + 20), (char *)v20 + *(int *)(v21 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

void *_s18TrustedPeersHelper19FetchChangesRequestVwta_0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  uint64_t v33 = *(void (**)(char *, char *))(v34 + 40);
  v33(v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      long long v19 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v19;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1000D7E78((uint64_t)v12, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v20 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v31 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = v13[3];
  v12[2] = v13[2];
  v12[3] = v32;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v33)((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v35);
LABEL_7:
  uint64_t v21 = a3[7];
  uint64_t v22 = (_DWORD *)((char *)a1 + v21);
  uint64_t v23 = (_DWORD *)((char *)a2 + v21);
  uint64_t v24 = type metadata accessor for AccountInfo(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *uint64_t v22 = *v23;
      ((void (*)(char *, char *, uint64_t))v33)((char *)v22 + *(int *)(v24 + 20), (char *)v23 + *(int *)(v24 + 20), v35);
      return a1;
    }
    sub_1000D7E78((uint64_t)v22, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_1000046DC(&qword_100299F50);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  *uint64_t v22 = *v23;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v22 + *(int *)(v24 + 20), (char *)v23 + *(int *)(v24 + 20), v35);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchRecoverableTLKSharesRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FEDBC);
}

uint64_t sub_1000FEDC0(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[7];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for FetchRecoverableTLKSharesRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FEF54);
}

uint64_t sub_1000FEF58(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];

  return v15(v17, a2, a2, v16);
}

uint64_t getEnumTagSinglePayload for FetchRecoverableTLKSharesResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FF104);
}

uint64_t storeEnumTagSinglePayload for FetchRecoverableTLKSharesResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FF11C);
}

uint64_t sub_1000FF120()
{
  return sub_100108A14();
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchRecoverableTLKSharesResponse.View(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = (int *)type metadata accessor for ViewKeysRecords(0);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC(&qword_100299648);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      uint64_t v20 = v16[5];
      uint64_t v21 = &v14[v20];
      uint64_t v22 = &v15[v20];
      uint64_t v23 = sub_100221D50();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      if (v35(v22, 1, v23))
      {
        uint64_t v25 = sub_1000046DC(&qword_1002997E0);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v26 = v16[6];
      int v27 = &v14[v26];
      int v28 = &v15[v26];
      if (v35(&v15[v26], 1, v23))
      {
        uint64_t v29 = sub_1000046DC(&qword_1002997E0);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v28, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
      }
      uint64_t v30 = v16[7];
      uint64_t v31 = &v14[v30];
      uint64_t v32 = &v15[v30];
      if (v35(v32, 1, v23))
      {
        uint64_t v33 = sub_1000046DC(&qword_1002997E0);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v31, v32, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v31, 0, 1, v23);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t destroy for FetchRecoverableTLKSharesResponse.View(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = (int *)type metadata accessor for ViewKeysRecords(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8);
  if (!result)
  {
    v6(v7, v5);
    uint64_t v10 = v7 + v8[5];
    uint64_t v11 = sub_100221D50();
    uint64_t v16 = *(void *)(v11 - 8);
    uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v12(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v10, v11);
    }
    uint64_t v13 = v7 + v8[6];
    if (!v12(v13, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v11);
    }
    uint64_t v14 = v7 + v8[7];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v14, 1, v11);
    if (!result)
    {
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
      return v15(v14, v11);
    }
  }
  return result;
}

void *initializeWithCopy for FetchRecoverableTLKSharesResponse.View(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for ViewKeysRecords(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_100299648);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    uint64_t v18 = v15[5];
    uint64_t v19 = &v13[v18];
    uint64_t v20 = &v14[v18];
    uint64_t v21 = sub_100221D50();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v33(v20, 1, v21))
    {
      uint64_t v23 = sub_1000046DC(&qword_1002997E0);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = v15[6];
    uint64_t v25 = &v13[v24];
    uint64_t v26 = &v14[v24];
    if (v33(&v14[v24], 1, v21))
    {
      uint64_t v27 = sub_1000046DC(&qword_1002997E0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v26, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
    }
    uint64_t v28 = v15[7];
    uint64_t v29 = &v13[v28];
    uint64_t v30 = &v14[v28];
    if (v33(v30, 1, v21))
    {
      uint64_t v31 = sub_1000046DC(&qword_1002997E0);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v29, v30, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v29, 0, 1, v21);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *assignWithCopy for FetchRecoverableTLKSharesResponse.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for ViewKeysRecords(0);
  uint64_t v58 = *((void *)v15 - 1);
  uint64_t v59 = (uint64_t)v13;
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, int *))(v58 + 48);
  LODWORD(v13) = v16(v13, 1, v15);
  __src = v14;
  int v17 = v16(v14, 1, v15);
  if (!v13)
  {
    if (v17)
    {
      sub_1000D7E78(v59, type metadata accessor for ViewKeysRecords);
      size_t v18 = *(void *)(*(void *)(sub_1000046DC(&qword_100299648) - 8) + 64);
      uint64_t v19 = (void *)v59;
      goto LABEL_6;
    }
    v11((char *)v59, v14, v9);
    uint64_t v28 = v15[5];
    uint64_t v29 = (void *)(v59 + v28);
    uint64_t v30 = &v14[v28];
    uint64_t v31 = sub_100221D50();
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
    int v34 = v33(v29, 1, v31);
    int v35 = v33(v30, 1, v31);
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        goto LABEL_25;
      }
    }
    else
    {
      if (!v35)
      {
        (*(void (**)(void *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
LABEL_25:
        uint64_t v46 = v15[6];
        uint64_t v47 = (void *)(v59 + v46);
        int v48 = &v14[v46];
        int v49 = v33((void *)(v59 + v46), 1, v31);
        int v50 = v33(v48, 1, v31);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v47, v48, v31);
            uint64_t v51 = v32;
            (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v47, 0, 1, v31);
            goto LABEL_34;
          }
          uint64_t v51 = v32;
        }
        else
        {
          uint64_t v51 = v32;
          if (!v50)
          {
            (*(void (**)(void *, char *, uint64_t))(v32 + 24))(v47, v48, v31);
            goto LABEL_34;
          }
          (*(void (**)(void *, uint64_t))(v32 + 8))(v47, v31);
        }
        uint64_t v52 = sub_1000046DC(&qword_1002997E0);
        memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
LABEL_34:
        uint64_t v53 = v15[7];
        uint64_t v54 = (void *)(v59 + v53);
        unint64_t v55 = &__src[v53];
        int v56 = v33((void *)(v59 + v53), 1, v31);
        int v57 = v33(v55, 1, v31);
        if (v56)
        {
          if (!v57)
          {
            (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v54, v55, v31);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v31);
            return a1;
          }
        }
        else
        {
          if (!v57)
          {
            (*(void (**)(void *, char *, uint64_t))(v51 + 24))(v54, v55, v31);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v51 + 8))(v54, v31);
        }
        size_t v18 = *(void *)(*(void *)(sub_1000046DC(&qword_1002997E0) - 8) + 64);
        uint64_t v19 = v54;
        uint64_t v20 = v55;
        goto LABEL_7;
      }
      (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
    }
    uint64_t v45 = sub_1000046DC(&qword_1002997E0);
    memcpy(v29, v30, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_25;
  }
  if (v17)
  {
    size_t v18 = *(void *)(*(void *)(sub_1000046DC(&qword_100299648) - 8) + 64);
    uint64_t v19 = (void *)v59;
LABEL_6:
    uint64_t v20 = v14;
LABEL_7:
    memcpy(v19, v20, v18);
    return a1;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v59, v14, v9);
  uint64_t v21 = v15[5];
  uint64_t v22 = (void *)(v59 + v21);
  uint64_t v23 = &v14[v21];
  uint64_t v24 = sub_100221D50();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    uint64_t v27 = sub_1000046DC(&qword_1002997E0);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v36 = v15[6];
  uint64_t v37 = (void *)(v59 + v36);
  int v38 = &__src[v36];
  if (v26(&__src[v36], 1, v24))
  {
    uint64_t v39 = sub_1000046DC(&qword_1002997E0);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v37, v38, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v37, 0, 1, v24);
  }
  uint64_t v40 = v15[7];
  uint64_t v41 = (void *)(v59 + v40);
  uint64_t v42 = &__src[v40];
  if (v26(&__src[v40], 1, v24))
  {
    uint64_t v43 = sub_1000046DC(&qword_1002997E0);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v41, v42, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v41, 0, 1, v24);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v58 + 56))(v59, 0, 1, v15);
  return a1;
}

uint64_t initializeWithTake for FetchRecoverableTLKSharesResponse.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for ViewKeysRecords(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_100299648);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10((uint64_t)v12, (uint64_t)v13, v9);
    uint64_t v17 = v14[5];
    size_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    uint64_t v20 = sub_100221D50();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v32(v19, 1, v20))
    {
      uint64_t v22 = sub_1000046DC(&qword_1002997E0);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = v14[6];
    uint64_t v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    if (v32(&v13[v23], 1, v20))
    {
      uint64_t v26 = sub_1000046DC(&qword_1002997E0);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v25, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    }
    uint64_t v27 = v14[7];
    uint64_t v28 = &v12[v27];
    uint64_t v29 = &v13[v27];
    if (v32(v29, 1, v20))
    {
      uint64_t v30 = sub_1000046DC(&qword_1002997E0);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v28, v29, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v28, 0, 1, v20);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *assignWithTake for FetchRecoverableTLKSharesResponse.View(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = (int *)type metadata accessor for ViewKeysRecords(0);
  uint64_t v59 = *((void *)v16 - 1);
  uint64_t v60 = (uint64_t)v14;
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, int *))(v59 + 48);
  LODWORD(v14) = v17(v14, 1, v16);
  __src = v15;
  int v18 = v17(v15, 1, v16);
  if (!v14)
  {
    if (v18)
    {
      sub_1000D7E78(v60, type metadata accessor for ViewKeysRecords);
      size_t v19 = *(void *)(*(void *)(sub_1000046DC(&qword_100299648) - 8) + 64);
      uint64_t v20 = (void *)v60;
      goto LABEL_6;
    }
    v12((char *)v60, v15, v10);
    uint64_t v29 = v16[5];
    uint64_t v30 = (void *)(v60 + v29);
    uint64_t v31 = &v15[v29];
    uint64_t v32 = sub_100221D50();
    uint64_t v33 = *(void *)(v32 - 8);
    int v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
    int v35 = v34(v30, 1, v32);
    int v36 = v34(v31, 1, v32);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        goto LABEL_25;
      }
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_25:
        uint64_t v47 = v16[6];
        int v48 = (void *)(v60 + v47);
        int v49 = &v15[v47];
        int v50 = v34((void *)(v60 + v47), 1, v32);
        int v51 = v34(v49, 1, v32);
        if (v50)
        {
          if (!v51)
          {
            (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v48, v49, v32);
            uint64_t v52 = v33;
            (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v48, 0, 1, v32);
            goto LABEL_34;
          }
          uint64_t v52 = v33;
        }
        else
        {
          uint64_t v52 = v33;
          if (!v51)
          {
            (*(void (**)(void *, char *, uint64_t))(v33 + 40))(v48, v49, v32);
            goto LABEL_34;
          }
          (*(void (**)(void *, uint64_t))(v33 + 8))(v48, v32);
        }
        uint64_t v53 = sub_1000046DC(&qword_1002997E0);
        memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_34:
        uint64_t v54 = v16[7];
        unint64_t v55 = (void *)(v60 + v54);
        int v56 = &__src[v54];
        int v57 = v34((void *)(v60 + v54), 1, v32);
        int v58 = v34(v56, 1, v32);
        if (v57)
        {
          if (!v58)
          {
            (*(void (**)(void *, char *, uint64_t))(v52 + 32))(v55, v56, v32);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v55, 0, 1, v32);
            return a1;
          }
        }
        else
        {
          if (!v58)
          {
            (*(void (**)(void *, char *, uint64_t))(v52 + 40))(v55, v56, v32);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v52 + 8))(v55, v32);
        }
        size_t v19 = *(void *)(*(void *)(sub_1000046DC(&qword_1002997E0) - 8) + 64);
        uint64_t v20 = v55;
        uint64_t v21 = v56;
        goto LABEL_7;
      }
      (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
    }
    uint64_t v46 = sub_1000046DC(&qword_1002997E0);
    memcpy(v30, v31, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_25;
  }
  if (v18)
  {
    size_t v19 = *(void *)(*(void *)(sub_1000046DC(&qword_100299648) - 8) + 64);
    uint64_t v20 = (void *)v60;
LABEL_6:
    uint64_t v21 = v15;
LABEL_7:
    memcpy(v20, v21, v19);
    return a1;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v60, v15, v10);
  uint64_t v22 = v16[5];
  uint64_t v23 = (void *)(v60 + v22);
  uint64_t v24 = &v15[v22];
  uint64_t v25 = sub_100221D50();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    uint64_t v28 = sub_1000046DC(&qword_1002997E0);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v37 = v16[6];
  int v38 = (void *)(v60 + v37);
  uint64_t v39 = &__src[v37];
  if (v27(&__src[v37], 1, v25))
  {
    uint64_t v40 = sub_1000046DC(&qword_1002997E0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v38, v39, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v25);
  }
  uint64_t v41 = v16[7];
  uint64_t v42 = (void *)(v60 + v41);
  uint64_t v43 = &__src[v41];
  if (v27(&__src[v41], 1, v25))
  {
    uint64_t v44 = sub_1000046DC(&qword_1002997E0);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v42, v43, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v42, 0, 1, v25);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v59 + 56))(v60, 0, 1, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchRecoverableTLKSharesResponse.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100100DDC);
}

uint64_t sub_100100DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010428C(a1, a2, a3, &qword_100299648);
}

uint64_t storeEnumTagSinglePayload for FetchRecoverableTLKSharesResponse.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100100DFC);
}

uint64_t sub_100100DFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001043DC(a1, a2, a3, a4, &qword_100299648);
}

void sub_100100E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for FetchPolicyDocumentsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100100E60);
}

uint64_t storeEnumTagSinglePayload for FetchPolicyDocumentsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100100E78);
}

void sub_100100E7C()
{
}

uint64_t *_s18TrustedPeersHelper33FetchRecoverableTLKSharesResponseVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_100221DF0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t _s18TrustedPeersHelper33FetchRecoverableTLKSharesResponseVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *_s18TrustedPeersHelper33FetchRecoverableTLKSharesResponseVwcp_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *_s18TrustedPeersHelper33FetchRecoverableTLKSharesResponseVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *_s18TrustedPeersHelper33FetchRecoverableTLKSharesResponseVwta_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchPolicyDocumentsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001011B4);
}

uint64_t sub_1001011B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FetchPolicyDocumentsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010127C);
}

void *sub_100101280(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for GetRepairActionRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[8];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[9];
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Metrics(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC(&qword_10029F000);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v20 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v20;
      uint64_t v33 = v12;
      uint64_t v21 = v15[3];
      v14[2] = v15[2];
      v14[3] = v21;
      uint64_t v22 = *(int *)(v16 + 24);
      uint64_t v23 = (char *)v14 + v22;
      uint64_t v24 = (char *)v15 + v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = v23;
      uint64_t v12 = v33;
      v33((uint64_t)v25, (uint64_t)v24, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v26 = a3[10];
    uint64_t v27 = (_DWORD *)((char *)v4 + v26);
    uint64_t v28 = (_DWORD *)((char *)a2 + v26);
    uint64_t v29 = type metadata accessor for AccountInfo(0);
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_1000046DC(&qword_100299F50);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      *uint64_t v27 = *v28;
      v12((uint64_t)v27 + *(int *)(v29 + 20), (uint64_t)v28 + *(int *)(v29 + 20), v11);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
  }
  return v4;
}

uint64_t destroy for GetRepairActionRequest(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

uint64_t initializeWithCopy for GetRepairActionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Metrics(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_10029F000);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    uint64_t v31 = v11;
    uint64_t v19 = v14[3];
    v13[2] = v14[2];
    v13[3] = v19;
    uint64_t v20 = *(int *)(v15 + 24);
    uint64_t v21 = (char *)v13 + v20;
    uint64_t v22 = (char *)v14 + v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = v21;
    uint64_t v11 = v31;
    v31((uint64_t)v23, (uint64_t)v22, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v24 = a3[10];
  uint64_t v25 = (_DWORD *)(a1 + v24);
  uint64_t v26 = (_DWORD *)(a2 + v24);
  uint64_t v27 = type metadata accessor for AccountInfo(0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_1000046DC(&qword_100299F50);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    *uint64_t v25 = *v26;
    v11((uint64_t)v25 + *(int *)(v27 + 20), (uint64_t)v26 + *(int *)(v27 + 20), v10);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

uint64_t assignWithCopy for GetRepairActionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v34 + 24);
  ((void (*)(uint64_t, uint64_t))v33)(v7, v8);
  uint64_t v36 = a3;
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      v11[2] = v12[2];
      v11[3] = v12[3];
      uint64_t v18 = *(int *)(v13 + 24);
      uint64_t v32 = (char *)v11 + v18;
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v32, v19, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v21 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v35);
LABEL_7:
  uint64_t v22 = *(int *)(v36 + 40);
  uint64_t v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      v33(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v35);
      return a1;
    }
    sub_1000D7E78((uint64_t)v23, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t initializeWithTake for GetRepairActionRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[10];
  uint64_t v19 = (_DWORD *)(a1 + v18);
  uint64_t v20 = (_DWORD *)(a2 + v18);
  uint64_t v21 = type metadata accessor for AccountInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_100299F50);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v10((char *)v19 + *(int *)(v21 + 20), (char *)v20 + *(int *)(v21 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t assignWithTake for GetRepairActionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v34 + 40);
  ((void (*)(uint64_t, uint64_t))v33)(v8, v9);
  uint64_t v36 = a3;
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      long long v19 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v19;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1000D7E78((uint64_t)v12, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v20 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v31 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = v13[3];
  v12[2] = v13[2];
  v12[3] = v32;
  swift_bridgeObjectRelease();
  v33((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v35);
LABEL_7:
  uint64_t v21 = *(int *)(v36 + 40);
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = type metadata accessor for AccountInfo(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
      v33(&v22[*(int *)(v24 + 20)], &v23[*(int *)(v24 + 20)], v35);
      return a1;
    }
    sub_1000D7E78((uint64_t)v22, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_1000046DC(&qword_100299F50);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v22[*(int *)(v24 + 20)], &v23[*(int *)(v24 + 20)], v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetRepairActionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010250C);
}

uint64_t sub_10010250C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[8];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[10];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for GetRepairActionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001026A0);
}

uint64_t sub_1001026A0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[10];

  return v15(v17, a2, a2, v16);
}

void sub_100102820()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EscrowProxyFederationMoveRecordRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (char *)a1 + v10;
    int v27 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_100221DF0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v27, v12);
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for Metrics(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_1000046DC(&qword_10029F000);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v21;
      uint64_t v22 = v16[3];
      v15[2] = v16[2];
      v15[3] = v22;
      uint64_t v23 = *(int *)(v17 + 24);
      uint64_t v24 = (char *)v15 + v23;
      uint64_t v25 = (char *)v16 + v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v24, v25, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for EscrowProxyFederationMoveRecordRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100221DF0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = type metadata accessor for Metrics(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *initializeWithCopy for EscrowProxyFederationMoveRecordRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v25 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v25, v11);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for Metrics(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000046DC(&qword_10029F000);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v19;
    uint64_t v20 = v15[3];
    v14[2] = v15[2];
    v14[3] = v20;
    uint64_t v21 = *(int *)(v16 + 24);
    uint64_t v22 = (char *)v14 + v21;
    uint64_t v23 = (char *)v15 + v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v22, v23, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

void *assignWithCopy for EscrowProxyFederationMoveRecordRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v24 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12[2] = v13[2];
      v12[3] = v13[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v25);
      return a1;
    }
    sub_1000D7E78((uint64_t)v12, type metadata accessor for Metrics);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  uint64_t v18 = *(int *)(v14 + 24);
  uint64_t v19 = (char *)v12 + v18;
  uint64_t v20 = (char *)v13 + v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v19, v20, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

_OWORD *initializeWithTake for EscrowProxyFederationMoveRecordRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Metrics(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_10029F000);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    long long v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *assignWithTake for EscrowProxyFederationMoveRecordRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100221DF0();
  uint64_t v26 = *(void *)(v12 - 8);
  uint64_t v27 = v12;
  uint64_t v13 = *(void (**)(char *, char *))(v26 + 40);
  v13(v10, v11);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for Metrics(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v11) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (!v11)
  {
    if (!v20)
    {
      uint64_t v24 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = v16[3];
      v15[2] = v16[2];
      v15[3] = v25;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v13)((char *)v15 + *(int *)(v17 + 24), (char *)v16 + *(int *)(v17 + 24), v27);
      return a1;
    }
    sub_1000D7E78((uint64_t)v15, type metadata accessor for Metrics);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v22 = sub_1000046DC(&qword_10029F000);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  long long v21 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v21;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)v15 + *(int *)(v17 + 24), (char *)v16 + *(int *)(v17 + 24), v27);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for EscrowProxyFederationMoveRecordRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010352C);
}

uint64_t sub_10010352C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC(&qword_10029F000);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for EscrowProxyFederationMoveRecordRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100103670);
}

uint64_t sub_100103670(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC(&qword_10029F000);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1001037A0()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for GetRepairActionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001038A8);
}

uint64_t storeEnumTagSinglePayload for GetRepairActionResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001038C0);
}

void *initializeBufferWithCopyOfBuffer for SupportAppView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100221DC0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t destroy for SupportAppView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_100221DC0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t initializeWithCopy for SupportAppView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100221DC0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for SupportAppView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_100221DC0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for SupportAppView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_100221DC0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithTake for SupportAppView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_100221DC0();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SupportAppView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100104280);
}

uint64_t sub_100104280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010428C(a1, a2, a3, (uint64_t *)&unk_10029ED30);
}

uint64_t sub_10010428C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v5 = *(void *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 24);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_1000046DC(a4);
      int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 28);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SupportAppView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001043D0);
}

uint64_t sub_1001043D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001043DC(a1, a2, a3, a4, (uint64_t *)&unk_10029ED30);
}

uint64_t sub_1001043DC(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a3)
    {
      uint64_t v12 = v10;
      uint64_t v13 = v6 + *(int *)(a4 + 24);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      return v14(v13, a2, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_1000046DC(a5);
      int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
      uint64_t v17 = v15;
      uint64_t v18 = v6 + *(int *)(a4 + 28);
      return v16(v18, a2, a2, v17);
    }
  }
  return result;
}

void sub_10010451C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100104544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_100221DF0();
  if (v8 <= 0x3F)
  {
    sub_1000E271C(319, a5, a6);
    if (v9 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SupportAppDevice(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v9 = a2[7];
    uint64_t v10 = *(int *)(a3 + 44);
    uint64_t v22 = a1 + v10;
    uint64_t v11 = (uint64_t)a2 + v10;
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v12 = sub_100221DF0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v22, v11, v12);
    uint64_t v14 = *(int *)(a3 + 48);
    uint64_t v15 = (char *)v4 + v14;
    int v16 = (char *)a2 + v14;
    uint64_t v17 = sub_100221DC0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for SupportAppDevice(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  uint64_t v7 = sub_100221DC0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t initializeWithCopy for SupportAppDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 48);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_100221DC0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithCopy for SupportAppDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_100221DC0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t initializeWithTake for SupportAppDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100221DC0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for SupportAppDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 48);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_100221DC0();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v10) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v10)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for SupportAppDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010512C);
}

uint64_t sub_10010512C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SupportAppDevice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100105270);
}

uint64_t sub_100105270(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1001053A0()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029AE68, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GetSupportAppInfoRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for Metrics(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1000046DC(&qword_10029F000);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v19;
      uint64_t v31 = v11;
      uint64_t v20 = v14[3];
      v13[2] = v14[2];
      v13[3] = v20;
      uint64_t v21 = *(int *)(v15 + 24);
      uint64_t v22 = (char *)v13 + v21;
      uint64_t v23 = (char *)v14 + v21;
      swift_bridgeObjectRetain();
      uint64_t v11 = v31;
      swift_bridgeObjectRetain();
      v31(v22, v23, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v24 = a3[7];
    uint64_t v25 = (_DWORD *)((char *)v4 + v24);
    uint64_t v26 = (_DWORD *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for AccountInfo(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1000046DC(&qword_100299F50);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *uint64_t v25 = *v26;
      v11((char *)v25 + *(int *)(v27 + 20), (char *)v26 + *(int *)(v27 + 20), v10);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t _s18TrustedPeersHelper25FetchViableBottlesRequestVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *initializeWithCopy for GetSupportAppInfoRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v29 = v10;
    uint64_t v18 = v13[3];
    v12[2] = v13[2];
    v12[3] = v18;
    uint64_t v19 = *(int *)(v14 + 24);
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    uint64_t v10 = v29;
    swift_bridgeObjectRetain();
    v29(v20, v21, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v22 = a3[7];
  uint64_t v23 = (_DWORD *)((char *)a1 + v22);
  uint64_t v24 = (_DWORD *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *uint64_t v23 = *v24;
    v10((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

void *assignWithCopy for GetSupportAppInfoRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v33 = *(void (**)(char *, char *))(v34 + 24);
  v33(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      v11[2] = v12[2];
      v11[3] = v12[3];
      uint64_t v18 = *(int *)(v13 + 24);
      uint64_t v32 = (char *)v11 + v18;
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v32, v19, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v21 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v33)((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v35);
LABEL_7:
  uint64_t v22 = a3[7];
  uint64_t v23 = (_DWORD *)((char *)a1 + v22);
  uint64_t v24 = (_DWORD *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *uint64_t v23 = *v24;
      ((void (*)(char *, char *, uint64_t))v33)((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
      return a1;
    }
    sub_1000D7E78((uint64_t)v23, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *uint64_t v23 = *v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

void *_s18TrustedPeersHelper27FetchPolicyDocumentsRequestVwtk_0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (_DWORD *)((char *)a1 + v18);
  uint64_t v20 = (_DWORD *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for AccountInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_100299F50);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v10((char *)v19 + *(int *)(v21 + 20), (char *)v20 + *(int *)(v21 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

void *assignWithTake for GetSupportAppInfoRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  uint64_t v32 = *(void (**)(char *, char *))(v33 + 40);
  v32(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v35 = a1;
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      long long v18 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v18;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v19 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = v12[3];
  v11[2] = v12[2];
  v11[3] = v31;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v32)((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = (_DWORD *)((char *)v35 + v20);
  uint64_t v22 = (_DWORD *)((char *)a2 + v20);
  uint64_t v23 = type metadata accessor for AccountInfo(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *uint64_t v21 = *v22;
      ((void (*)(char *, char *, uint64_t))v32)((char *)v21 + *(int *)(v23 + 20), (char *)v22 + *(int *)(v23 + 20), v34);
      return v35;
    }
    sub_1000D7E78((uint64_t)v21, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_1000046DC(&qword_100299F50);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return v35;
  }
  *uint64_t v21 = *v22;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v21 + *(int *)(v23 + 20), (char *)v22 + *(int *)(v23 + 20), v34);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return v35;
}

uint64_t getEnumTagSinglePayload for GetSupportAppInfoRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001065AC);
}

uint64_t sub_1001065B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  uint64_t v13 = sub_1000046DC(&qword_100299F50);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  uint64_t v15 = v13;
  uint64_t v16 = a1 + a3[7];

  return v14(v16, a2, v15);
}

uint64_t storeEnumTagSinglePayload for GetSupportAppInfoRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100106714);
}

uint64_t sub_100106718(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_5:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_5;
  }
  uint64_t v15 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

void sub_100106874()
{
}

uint64_t initializeBufferWithCopyOfBuffer for GetSupportAppInfoResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for GetSupportAppInfoResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for GetSupportAppInfoResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_100221DF0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for GetSupportAppInfoResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for GetSupportAppInfoResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for GetSupportAppInfoResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetSupportAppInfoResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100106CE0);
}

uint64_t sub_100106CE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GetSupportAppInfoResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100106DA4);
}

void *sub_100106DA4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100106E4C()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *_s18TrustedPeersHelper12ResetRequestVwCP_0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[4];
    uint64_t v9 = a2[5];
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    uint64_t v10 = a3[9];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    uint64_t v13 = sub_100221DF0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = a3[10];
    uint64_t v16 = (_DWORD *)((char *)v4 + v15);
    uint64_t v17 = (_DWORD *)((char *)a2 + v15);
    uint64_t v18 = type metadata accessor for AccountInfo(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_1000046DC(&qword_100299F50);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      *uint64_t v16 = *v17;
      v14((uint64_t)v16 + *(int *)(v18 + 20), (uint64_t)v17 + *(int *)(v18 + 20), v13);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v22 = a3[11];
    uint64_t v23 = (void *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = type metadata accessor for Metrics(0);
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_1000046DC(&qword_10029F000);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v28;
      uint64_t v29 = v24[3];
      v23[2] = v24[2];
      v23[3] = v29;
      uint64_t v30 = *(int *)(v25 + 24);
      uint64_t v31 = (char *)v23 + v30;
      uint64_t v32 = (char *)v24 + v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14((uint64_t)v31, (uint64_t)v32, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  return v4;
}

uint64_t _s18TrustedPeersHelper12ResetRequestVwxx_0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7)) {
    v12(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v8 = a1 + a2[11];
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + *(int *)(v9 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

uint64_t _s18TrustedPeersHelper12ResetRequestVwcp_0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v12 = sub_100221DF0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = a3[10];
  uint64_t v15 = (_DWORD *)(a1 + v14);
  uint64_t v16 = (_DWORD *)(a2 + v14);
  uint64_t v17 = type metadata accessor for AccountInfo(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1000046DC(&qword_100299F50);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v15 = *v16;
    v13((uint64_t)v15 + *(int *)(v17 + 20), (uint64_t)v16 + *(int *)(v17 + 20), v12);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for Metrics(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_1000046DC(&qword_10029F000);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v26;
    uint64_t v27 = v22[3];
    v21[2] = v22[2];
    v21[3] = v27;
    uint64_t v28 = *(int *)(v23 + 24);
    uint64_t v29 = (char *)v21 + v28;
    uint64_t v30 = (char *)v22 + v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13((uint64_t)v29, (uint64_t)v30, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

uint64_t _s18TrustedPeersHelper12ResetRequestVwca_0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_100221DF0();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v35 + 24);
  v34(v8, v9);
  uint64_t v11 = a3[10];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for AccountInfo(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1000D7E78((uint64_t)v12, type metadata accessor for AccountInfo);
LABEL_6:
    uint64_t v19 = sub_1000046DC(&qword_100299F50);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  ((void (*)(char *, char *, uint64_t))v34)(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v36);
LABEL_7:
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v23 = type metadata accessor for Metrics(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *uint64_t v21 = *v22;
      v21[1] = v22[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v21[2] = v22[2];
      v21[3] = v22[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v34)((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v36);
      return a1;
    }
    sub_1000D7E78((uint64_t)v21, type metadata accessor for Metrics);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v32 = sub_1000046DC(&qword_10029F000);
    memcpy(v21, v22, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v21[3] = v22[3];
  uint64_t v28 = *(int *)(v23 + 24);
  uint64_t v29 = (char *)v21 + v28;
  uint64_t v30 = (char *)v22 + v28;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31(v29, v30, v36);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t _s18TrustedPeersHelper12ResetRequestVwtk_0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[10];
  uint64_t v13 = (_DWORD *)(a1 + v12);
  uint64_t v14 = (_DWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for AccountInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1000046DC(&qword_100299F50);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (_OWORD *)(a1 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  uint64_t v21 = type metadata accessor for Metrics(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_10029F000);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    long long v24 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v24;
    v11((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t _s18TrustedPeersHelper12ResetRequestVwta_0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v35 + 40);
  v34(v9, v10);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for AccountInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
LABEL_6:
    uint64_t v20 = sub_1000046DC(&qword_100299F50);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  ((void (*)(char *, char *, uint64_t))v34)(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v36);
LABEL_7:
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for Metrics(0);
  uint64_t v25 = *(void *)(v24 - 8);
  int v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      uint64_t v32 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = v23[3];
      v22[2] = v23[2];
      v22[3] = v33;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v34)((char *)v22 + *(int *)(v24 + 24), (char *)v23 + *(int *)(v24 + 24), v36);
      return a1;
    }
    sub_1000D7E78((uint64_t)v22, type metadata accessor for Metrics);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_10029F000);
    memcpy(v22, v23, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  long long v29 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v29;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))((char *)v22 + *(int *)(v24 + 24), (char *)v23 + *(int *)(v24 + 24), v36);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResetAccountCDPContentsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001080FC);
}

uint64_t sub_100108100(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F50);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029F000);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ResetAccountCDPContentsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100108294);
}

uint64_t sub_100108298(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_100299F50);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029F000);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

void sub_10010841C()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for ResetAccountCDPContentsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001085A8);
}

uint64_t storeEnumTagSinglePayload for ResetAccountCDPContentsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001085C0);
}

uint64_t *initializeBufferWithCopyOfBuffer for PasscodeGeneration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_100221DF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s18TrustedPeersHelper11AccountInfoVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_100221DF0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *initializeWithCopy for PasscodeGeneration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for PasscodeGeneration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *_s18TrustedPeersHelper18PasscodeGenerationVwtk_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for PasscodeGeneration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PasscodeGeneration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100108904);
}

uint64_t sub_100108908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PasscodeGeneration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010898C);
}

uint64_t sub_100108990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_100108A04()
{
  return sub_100108A14();
}

uint64_t sub_100108A14()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for EscrowInformation(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v8 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    uint64_t v9 = a2[11];
    uint64_t v10 = a3[11];
    uint64_t v11 = a1 + v10;
    uint64_t v29 = (uint64_t)a2 + v10;
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v12 = sub_100221DF0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v29, v12);
    uint64_t v14 = a3[12];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_100221DC0();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = a3[13];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = type metadata accessor for EscrowInformation.Metadata(0);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_1000046DC(&qword_10029A098);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v13((uint64_t)v22, (uint64_t)v23, v12);
      *(void *)&v22[*(int *)(v24 + 20)] = *(void *)&v23[*(int *)(v24 + 20)];
      int v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
      swift_retain();
      v27(v22, 0, 1, v24);
    }
  }
  return v4;
}

uint64_t destroy for EscrowInformation(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[11];
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[12];
  uint64_t v8 = sub_100221DC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + a2[13];
  uint64_t v11 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    v6(v10, v5);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for EscrowInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  uint64_t v8 = a3[11];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_100221DC0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[13];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1000046DC(&qword_10029A098);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v20, (uint64_t)v21, v11);
    *(void *)&v20[*(int *)(v22 + 20)] = *(void *)&v21[*(int *)(v22 + 20)];
    uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
    swift_retain();
    v25(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t assignWithCopy for EscrowInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100221DF0();
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v33 + 24);
  v32(v9, v10);
  uint64_t v35 = a3;
  uint64_t v12 = *(int *)(a3 + 48);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_100221DC0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = *(int *)(v35 + 52);
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      ((void (*)(char *, char *, uint64_t))v32)(v22, v23, v34);
      *(void *)&v22[*(int *)(v24 + 20)] = *(void *)&v23[*(int *)(v24 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1000D7E78((uint64_t)v22, type metadata accessor for EscrowInformation.Metadata);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_10029A098);
    memcpy(v22, v23, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v22, v23, v34);
  *(void *)&v22[*(int *)(v24 + 20)] = *(void *)&v23[*(int *)(v24 + 20)];
  uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
  swift_retain();
  v29(v22, 0, 1, v24);
  return a1;
}

uint64_t initializeWithTake for EscrowInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 80);
  uint64_t v8 = a3[11];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v11 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_100221DC0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[13];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1000046DC(&qword_10029A098);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v20, (uint64_t)v21, v11);
    *(void *)&v20[*(int *)(v22 + 20)] = *(void *)&v21[*(int *)(v22 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t assignWithTake for EscrowInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_100221DF0();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v33 + 40);
  v32(v10, v11);
  uint64_t v35 = a3;
  uint64_t v13 = *(int *)(a3 + 48);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_100221DC0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = *(int *)(v35 + 52);
  uint64_t v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      ((void (*)(char *, char *, uint64_t))v32)(v23, v24, v34);
      *(void *)&v23[*(int *)(v25 + 20)] = *(void *)&v24[*(int *)(v25 + 20)];
      swift_release();
      return a1;
    }
    sub_1000D7E78((uint64_t)v23, type metadata accessor for EscrowInformation.Metadata);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_10029A098);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v23, v24, v34);
  *(void *)&v23[*(int *)(v25 + 20)] = *(void *)&v24[*(int *)(v25 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for EscrowInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100109C80);
}

uint64_t sub_100109C80(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[11];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029A098);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[13];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for EscrowInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100109E14);
}

uint64_t sub_100109E14(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[11];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000046DC(&qword_10029A098);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[13];

  return v15(v17, a2, a2, v16);
}

void sub_100109F94()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029AE68, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, (unint64_t *)&unk_10029CD10, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *_s18TrustedPeersHelper8ViewKeysVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t _s18TrustedPeersHelper8ViewKeysVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t _s18TrustedPeersHelper8ViewKeysVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t _s18TrustedPeersHelper8ViewKeysVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s18TrustedPeersHelper8ViewKeysVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s18TrustedPeersHelper8ViewKeysVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EscrowInformation.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010A45C);
}

uint64_t sub_10010A460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for EscrowInformation.Metadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010A534);
}

uint64_t sub_10010A538(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100221DF0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10010A5F4()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for EscrowInformation.Metadata.ClientMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)a2;
    long long v8 = *((_OWORD *)a2 + 1);
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v12;
    uint64_t v13 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v13;
    uint64_t v14 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v14;
    uint64_t v15 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v15;
    uint64_t v16 = *(int *)(a3 + 60);
    uint64_t v27 = (uint64_t)a2 + v16;
    uint64_t v28 = a1 + v16;
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
    uint64_t v17 = sub_100221DF0();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v28, v27, v17);
    uint64_t v18 = *(int *)(a3 + 64);
    int v19 = (char *)v4 + v18;
    int v20 = (char *)a2 + v18;
    uint64_t v21 = sub_100221DC0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return v4;
}

uint64_t destroy for EscrowInformation.Metadata.ClientMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  uint64_t v5 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 64);
  uint64_t v7 = sub_100221DC0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t initializeWithCopy for EscrowInformation.Metadata.ClientMetadata(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v5 = *a2;
  long long v6 = a2[1];
  uint64_t v7 = *((void *)a2 + 5);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *((void *)a2 + 7);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *((void *)a2 + 9);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *((void *)a2 + 11);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *((void *)a2 + 13);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = *((void *)a2 + 15);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(void *)(a1 + 120) = v12;
  uint64_t v13 = *((void *)a2 + 17);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(void *)(a1 + 136) = v13;
  uint64_t v14 = *(int *)(a3 + 60);
  uint64_t v24 = (uint64_t)a2 + v14;
  uint64_t v25 = a1 + v14;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v15 = sub_100221DF0();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v25, v24, v15);
  uint64_t v16 = *(int *)(a3 + 64);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_100221DC0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

void *assignWithCopy for EscrowInformation.Metadata.ClientMetadata(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  uint64_t v6 = *(int *)(a3 + 60);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 64);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100221DC0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for EscrowInformation.Metadata.ClientMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v7 = *(int *)(a3 + 60);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 120) = v6;
  uint64_t v10 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 64);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100221DC0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for EscrowInformation.Metadata.ClientMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v13 = *(int *)(a3 + 60);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 64);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = sub_100221DC0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  LODWORD(v15) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (!v15)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = sub_1000046DC((uint64_t *)&unk_10029ED30);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for EscrowInformation.Metadata.ClientMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010B2D8);
}

uint64_t sub_10010B2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 60);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 64);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for EscrowInformation.Metadata.ClientMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010B41C);
}

uint64_t sub_10010B41C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 60);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029ED30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 64);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10010B54C()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029AE68, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PCSService(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a2[1];
    unint64_t v8 = a2[2];
    sub_1000059E8(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    uint64_t v9 = a2[4];
    v4[3] = a2[3];
    v4[4] = v9;
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_100221DF0();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
  }
  return v4;
}

uint64_t destroy for PCSService(uint64_t a1, uint64_t a2)
{
  sub_100005A40(*(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100221DF0();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for PCSService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_1000059E8(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_100221DF0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for PCSService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_1000059E8(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  sub_100005A40(v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for PCSService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PCSService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_100005A40(v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PCSService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010BAB8);
}

uint64_t sub_10010BAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PCSService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010BB7C);
}

uint64_t sub_10010BB7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10010BC24()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s18TrustedPeersHelper27FetchPolicyDocumentsRequestVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100221DF0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Metrics(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1000046DC(&qword_10029F000);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      uint64_t v31 = v12;
      uint64_t v20 = v15[3];
      v14[2] = v15[2];
      v14[3] = v20;
      uint64_t v21 = *(int *)(v16 + 24);
      uint64_t v22 = (char *)v14 + v21;
      int v23 = (char *)v15 + v21;
      swift_bridgeObjectRetain();
      uint64_t v12 = v31;
      swift_bridgeObjectRetain();
      v31(v22, v23, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v24 = a3[7];
    uint64_t v25 = (_DWORD *)((char *)v7 + v24);
    uint64_t v26 = (_DWORD *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for AccountInfo(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1000046DC(&qword_100299F50);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *uint64_t v25 = *v26;
      v12((char *)v25 + *(int *)(v27 + 20), (char *)v26 + *(int *)(v27 + 20), v11);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v7;
}

uint64_t _s18TrustedPeersHelper27FetchPolicyDocumentsRequestVwxx_0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 24), v5);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *_s18TrustedPeersHelper27FetchPolicyDocumentsRequestVwcp_0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v29 = v10;
    uint64_t v18 = v13[3];
    v12[2] = v13[2];
    v12[3] = v18;
    uint64_t v19 = *(int *)(v14 + 24);
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    uint64_t v10 = v29;
    swift_bridgeObjectRetain();
    v29(v20, v21, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v22 = a3[7];
  int v23 = (_DWORD *)((char *)a1 + v22);
  uint64_t v24 = (_DWORD *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *int v23 = *v24;
    v10((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DirectPCSIdentityFetchRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010C40C);
}

uint64_t storeEnumTagSinglePayload for DirectPCSIdentityFetchRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010C424);
}

uint64_t *initializeBufferWithCopyOfBuffer for DirectPCSIdentity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100221D50();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_1000046DC(&qword_1002997E0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = type metadata accessor for PCSService(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_1000046DC(&qword_1002997F8);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      uint64_t v22 = v18[1];
      unint64_t v23 = v18[2];
      sub_1000059E8(v22, v23);
      v17[1] = v22;
      v17[2] = v23;
      uint64_t v24 = v18[4];
      v17[3] = v18[3];
      v17[4] = v24;
      uint64_t v25 = *(int *)(v19 + 28);
      uint64_t v26 = (char *)v17 + v25;
      uint64_t v27 = (char *)v18 + v25;
      swift_bridgeObjectRetain();
      v8((uint64_t *)v26, (uint64_t *)v27, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t destroy for DirectPCSIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v12(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100221D50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = type metadata accessor for PCSService(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    sub_100005A40(*(void *)(v8 + 8), *(void *)(v8 + 16));
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + *(int *)(v9 + 28);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v4);
  }
  return result;
}

uint64_t initializeWithCopy for DirectPCSIdentity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_100221D50();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC(&qword_1002997E0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for PCSService(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1000046DC(&qword_1002997F8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    uint64_t v20 = v16[1];
    unint64_t v21 = v16[2];
    sub_1000059E8(v20, v21);
    v15[1] = v20;
    v15[2] = v21;
    uint64_t v22 = v16[4];
    v15[3] = v16[3];
    v15[4] = v22;
    uint64_t v23 = *(int *)(v17 + 28);
    uint64_t v24 = (char *)v15 + v23;
    uint64_t v25 = (char *)v16 + v23;
    swift_bridgeObjectRetain();
    v7((uint64_t)v24, (uint64_t)v25, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithCopy for DirectPCSIdentity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v37 + 24);
  ((void (*)(uint64_t, uint64_t))v36)(a1, a2);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for PCSService(0);
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      uint64_t v32 = *((void *)v18 + 1);
      unint64_t v33 = *((void *)v18 + 2);
      sub_1000059E8(v32, v33);
      uint64_t v34 = *((void *)v17 + 1);
      unint64_t v35 = *((void *)v17 + 2);
      *((void *)v17 + 1) = v32;
      *((void *)v17 + 2) = v33;
      sub_100005A40(v34, v35);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      *((void *)v17 + 4) = *((void *)v18 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36(&v17[*(int *)(v19 + 28)], &v18[*(int *)(v19 + 28)], v38);
      return a1;
    }
    sub_1000D7E78((uint64_t)v17, type metadata accessor for PCSService);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_1002997F8);
    memcpy(v17, v18, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v24 = *((void *)v18 + 1);
  unint64_t v25 = *((void *)v18 + 2);
  sub_1000059E8(v24, v25);
  *((void *)v17 + 1) = v24;
  *((void *)v17 + 2) = v25;
  *((void *)v17 + 3) = *((void *)v18 + 3);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  uint64_t v26 = *(int *)(v19 + 28);
  uint64_t v27 = &v17[v26];
  uint64_t v28 = &v18[v26];
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  swift_bridgeObjectRetain();
  v29(v27, v28, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

char *initializeWithTake for DirectPCSIdentity(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100221D50();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC(&qword_1002997E0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for PCSService(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1000046DC(&qword_1002997F8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
    *(_OWORD *)(v15 + 24) = *(_OWORD *)(v16 + 24);
    v7(&v15[*(int *)(v17 + 28)], &v16[*(int *)(v17 + 28)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for DirectPCSIdentity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v30 + 40);
  v29(a1, a2);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for PCSService(0);
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      uint64_t v26 = *(void *)(v17 + 8);
      unint64_t v27 = *(void *)(v17 + 16);
      *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
      sub_100005A40(v26, v27);
      uint64_t v28 = *(void *)(v18 + 32);
      *(void *)(v17 + 24) = *(void *)(v18 + 24);
      *(void *)(v17 + 32) = v28;
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v17 + *(int *)(v19 + 28), v18 + *(int *)(v19 + 28), v31);
      return a1;
    }
    sub_1000D7E78(v17, type metadata accessor for PCSService);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = sub_1000046DC(&qword_1002997F8);
    memcpy((void *)v17, (const void *)v18, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v17 + *(int *)(v19 + 28), v18 + *(int *)(v19 + 28), v31);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for DirectPCSIdentity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010D4CC);
}

uint64_t sub_10010D4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010F644(a1, a2, a3, &qword_1002997E0, &qword_1002997F8);
}

uint64_t storeEnumTagSinglePayload for DirectPCSIdentity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010D4F4);
}

uint64_t sub_10010D4F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10010F7CC(a1, a2, a3, a4, &qword_1002997E0, &qword_1002997F8);
}

void sub_10010D508(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t getEnumTagSinglePayload for DirectPCSIdentityFetchResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010D570);
}

uint64_t storeEnumTagSinglePayload for DirectPCSIdentityFetchResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010D588);
}

uint64_t sub_10010D58C()
{
  return sub_100110008();
}

uint64_t *_s18TrustedPeersHelper7MetricsVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100221DF0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t _s18TrustedPeersHelper7MetricsVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *_s18TrustedPeersHelper7MetricsVwcp_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *_s18TrustedPeersHelper7MetricsVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s18TrustedPeersHelper23SignedPeerPermanentInfoVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *_s18TrustedPeersHelper7MetricsVwta_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentCKKSItemSpecifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010D9BC);
}

uint64_t sub_10010D9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CurrentCKKSItemSpecifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010DA84);
}

uint64_t sub_10010DA88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void *_s18TrustedPeersHelper27FetchPolicyDocumentsRequestVwca_0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  unint64_t v33 = *(void (**)(char *, char *))(v34 + 24);
  v33(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      v11[2] = v12[2];
      v11[3] = v12[3];
      uint64_t v18 = *(int *)(v13 + 24);
      uint64_t v32 = (char *)v11 + v18;
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v32, v19, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v21 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v33)((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v35);
LABEL_7:
  uint64_t v22 = a3[7];
  int v23 = (_DWORD *)((char *)a1 + v22);
  uint64_t v24 = (_DWORD *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v27 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *int v23 = *v24;
      ((void (*)(char *, char *, uint64_t))v33)((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
      return a1;
    }
    sub_1000D7E78((uint64_t)v23, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *int v23 = *v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

void *_s18TrustedPeersHelper27FetchPolicyDocumentsRequestVwta_0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  uint64_t v32 = *(void (**)(char *, char *))(v33 + 40);
  v32(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      long long v18 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v18;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v19 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = v12[3];
  v11[2] = v12[2];
  v11[3] = v31;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v32)((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = (_DWORD *)((char *)a1 + v20);
  uint64_t v22 = (_DWORD *)((char *)a2 + v20);
  uint64_t v23 = type metadata accessor for AccountInfo(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *uint64_t v21 = *v22;
      ((void (*)(char *, char *, uint64_t))v32)((char *)v21 + *(int *)(v23 + 20), (char *)v22 + *(int *)(v23 + 20), v34);
      return a1;
    }
    sub_1000D7E78((uint64_t)v21, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_1000046DC(&qword_100299F50);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  *uint64_t v21 = *v22;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v21 + *(int *)(v23 + 20), (char *)v22 + *(int *)(v23 + 20), v34);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentItemFetchRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010E2B8);
}

uint64_t sub_10010E2BC(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  int v17 = &a1[a3[7]];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for CurrentItemFetchRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010E450);
}

char *sub_10010E454(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[7]];

  return (char *)v15(v17, a2, a2, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for CurrentCKKSItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100221D50();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_1000046DC(&qword_1002997E0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    int v17 = (uint64_t *)((char *)a1 + v16);
    long long v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = type metadata accessor for CurrentCKKSItemSpecifier(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_1000046DC((uint64_t *)&unk_10029EF50);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = v18[1];
      *int v17 = *v18;
      v17[1] = v22;
      uint64_t v23 = v18[3];
      v17[2] = v18[2];
      v17[3] = v23;
      uint64_t v24 = *(int *)(v19 + 24);
      uint64_t v25 = (char *)v17 + v24;
      int v26 = (char *)v18 + v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8((uint64_t *)v25, (uint64_t *)v26, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t destroy for CurrentCKKSItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v12(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100221D50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + *(int *)(v9 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v4);
  }
  return result;
}

uint64_t initializeWithCopy for CurrentCKKSItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_100221D50();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC(&qword_1002997E0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029EF50);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v20;
    uint64_t v21 = v16[3];
    v15[2] = v16[2];
    v15[3] = v21;
    uint64_t v22 = *(int *)(v17 + 24);
    uint64_t v23 = (char *)v15 + v22;
    uint64_t v24 = (char *)v16 + v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7((uint64_t)v23, (uint64_t)v24, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithCopy for CurrentCKKSItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v31 + 24);
  ((void (*)(uint64_t, uint64_t))v30)(a1, a2);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = *((void *)v18 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v32);
      return a1;
    }
    sub_1000D7E78((uint64_t)v17, type metadata accessor for CurrentCKKSItemSpecifier);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v28 = sub_1000046DC((uint64_t *)&unk_10029EF50);
    memcpy(v17, v18, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = *((void *)v18 + 3);
  uint64_t v24 = *(int *)(v19 + 24);
  uint64_t v25 = &v17[v24];
  int v26 = &v18[v24];
  int v27 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v25, v26, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

char *initializeWithTake for CurrentCKKSItem(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100221D50();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000046DC(&qword_1002997E0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029EF50);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    long long v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
    v7(&v15[*(int *)(v17 + 24)], &v16[*(int *)(v17 + 24)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for CurrentCKKSItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100221DF0();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  int v29 = *(void (**)(char *, char *, uint64_t))(v30 + 40);
  ((void (*)(uint64_t, uint64_t))v29)(a1, a2);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000046DC(&qword_1002997E0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v27 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v28;
      swift_bridgeObjectRelease();
      v29(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v31);
      return a1;
    }
    sub_1000D7E78((uint64_t)v17, type metadata accessor for CurrentCKKSItemSpecifier);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v25 = sub_1000046DC((uint64_t *)&unk_10029EF50);
    memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  long long v24 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v24;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentCKKSItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010F630);
}

uint64_t sub_10010F630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10010F644(a1, a2, a3, &qword_1002997E0, (uint64_t *)&unk_10029EF50);
}

uint64_t sub_10010F644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v10 = sub_100221DF0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v12 = v10;
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    uint64_t v14 = a1;
LABEL_5:
    return v13(v14, a2, v12);
  }
  uint64_t v15 = sub_1000046DC(a4);
  uint64_t v16 = *(void *)(v15 - 8);
  if (*(_DWORD *)(v16 + 84) == a2)
  {
    uint64_t v12 = v15;
    uint64_t v14 = a1 + *(int *)(a3 + 20);
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    goto LABEL_5;
  }
  uint64_t v18 = sub_1000046DC(a5);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + *(int *)(a3 + 24);

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for CurrentCKKSItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010F7B8);
}

uint64_t sub_10010F7B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10010F7CC(a1, a2, a3, a4, &qword_1002997E0, (uint64_t *)&unk_10029EF50);
}

uint64_t sub_10010F7CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v12 = sub_100221DF0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    uint64_t v14 = v12;
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v16 = a1;
LABEL_5:
    return v15(v16, a2, a2, v14);
  }
  uint64_t v17 = sub_1000046DC(a5);
  uint64_t v18 = *(void *)(v17 - 8);
  if (*(_DWORD *)(v18 + 84) == a3)
  {
    uint64_t v14 = v17;
    uint64_t v16 = a1 + *(int *)(a4 + 20);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    goto LABEL_5;
  }
  uint64_t v20 = sub_1000046DC(a6);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + *(int *)(a4 + 24);

  return v21(v23, a2, a2, v22);
}

void sub_10010F938(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10010F974(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t), unint64_t *a6, void (*a7)(uint64_t))
{
  sub_100221DF0();
  if (v11 <= 0x3F)
  {
    sub_1000E271C(319, a4, a5);
    if (v12 <= 0x3F)
    {
      sub_1000E271C(319, a6, a7);
      if (v13 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *_s18TrustedPeersHelper30DirectPCSIdentityFetchResponseVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_100221DF0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t _s18TrustedPeersHelper30DirectPCSIdentityFetchResponseVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *_s18TrustedPeersHelper30DirectPCSIdentityFetchResponseVwcp_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_100221DF0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *_s18TrustedPeersHelper30DirectPCSIdentityFetchResponseVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s18TrustedPeersHelper30DirectPCSIdentityFetchResponseVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s18TrustedPeersHelper30DirectPCSIdentityFetchResponseVwta_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100221DF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentItemFetchResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10010FE94);
}

uint64_t sub_10010FE98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100221DF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CurrentItemFetchResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10010FF5C);
}

void *sub_10010FF60(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100221DF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100110008()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveUnreadableCKServerDataRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100221DF0();
    unint64_t v11 = *(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[6];
    unint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for Metrics(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1000046DC(&qword_10029F000);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v14[1];
      *unint64_t v13 = *v14;
      v13[1] = v19;
      uint64_t v31 = v11;
      uint64_t v20 = v14[3];
      v13[2] = v14[2];
      v13[3] = v20;
      uint64_t v21 = *(int *)(v15 + 24);
      uint64_t v22 = (char *)v13 + v21;
      uint64_t v23 = (char *)v14 + v21;
      swift_bridgeObjectRetain();
      unint64_t v11 = v31;
      swift_bridgeObjectRetain();
      v31(v22, v23, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v24 = a3[7];
    uint64_t v25 = (_DWORD *)((char *)v4 + v24);
    int v26 = (_DWORD *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for AccountInfo(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1000046DC(&qword_100299F50);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *uint64_t v25 = *v26;
      v11((unsigned char *)v25 + *(int *)(v27 + 20), (char *)v26 + *(int *)(v27 + 20), v10);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v4;
}

unsigned char *initializeWithCopy for RemoveUnreadableCKServerDataRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  unint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v29 = v10;
    uint64_t v18 = v13[3];
    v12[2] = v13[2];
    v12[3] = v18;
    uint64_t v19 = *(int *)(v14 + 24);
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    uint64_t v10 = v29;
    swift_bridgeObjectRetain();
    v29(v20, v21, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *uint64_t v23 = *v24;
    v10((unsigned char *)v23 + *(int *)(v25 + 20), (unsigned char *)v24 + *(int *)(v25 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

unsigned char *assignWithCopy for RemoveUnreadableCKServerDataRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100221DF0();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v34 + 24);
  ((void (*)(unsigned char *, unsigned char *))v33)(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      v11[2] = v12[2];
      v11[3] = v12[3];
      uint64_t v18 = *(int *)(v13 + 24);
      uint64_t v32 = (char *)v11 + v18;
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v32, v19, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v21 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v35);
LABEL_7:
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for AccountInfo(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      v33(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v35);
      return a1;
    }
    sub_1000D7E78((uint64_t)v23, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = sub_1000046DC(&qword_100299F50);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

unsigned char *initializeWithTake for RemoveUnreadableCKServerDataRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100221DF0();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for Metrics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000046DC(&qword_10029F000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((unsigned char *)v12 + *(int *)(v14 + 24), (unsigned char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = type metadata accessor for AccountInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1000046DC(&qword_100299F50);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v10((unsigned char *)v19 + *(int *)(v21 + 20), (unsigned char *)v20 + *(int *)(v21 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

unsigned char *assignWithTake for RemoveUnreadableCKServerDataRequest(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100221DF0();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v33 + 40);
  ((void (*)(unsigned char *, unsigned char *))v32)(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v35 = a1;
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      long long v18 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v18;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000D7E78((uint64_t)v11, type metadata accessor for Metrics);
LABEL_6:
    uint64_t v19 = sub_1000046DC(&qword_10029F000);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v30 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = v12[3];
  v11[2] = v12[2];
  v11[3] = v31;
  swift_bridgeObjectRelease();
  v32((char *)v11 + *(int *)(v13 + 24), (char *)v12 + *(int *)(v13 + 24), v34);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = &v35[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for AccountInfo(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      v32(&v21[*(int *)(v23 + 20)], &v22[*(int *)(v23 + 20)], v34);
      return v35;
    }
    sub_1000D7E78((uint64_t)v21, type metadata accessor for AccountInfo);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_1000046DC(&qword_100299F50);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return v35;
  }
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v21[*(int *)(v23 + 20)], &v22[*(int *)(v23 + 20)], v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return v35;
}

uint64_t getEnumTagSinglePayload for RemoveUnreadableCKServerDataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100111004);
}

uint64_t sub_100111004(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  uint64_t v10 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v15 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48);
    return v15(&a1[v13], a2, v11);
  }
  uint64_t v14 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v11 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v16 = sub_1000046DC(&qword_100299F50);
  int v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = &a1[a3[7]];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for RemoveUnreadableCKServerDataRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100111198);
}

unsigned char *sub_100111198(unsigned char *result, uint64_t a2, int a3, int *a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
    return result;
  }
  uint64_t v8 = sub_100221DF0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (unsigned char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_1000046DC(&qword_10029F000);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[7]];

  return (unsigned char *)v15(v17, a2, a2, v16);
}

void sub_100111314()
{
}

void sub_100111320()
{
  sub_100221DF0();
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t _s18TrustedPeersHelper28PerformATOPRVActionsResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  BOOL v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t _s18TrustedPeersHelper28PerformATOPRVActionsResponseVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_100221DF0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t _s18TrustedPeersHelper28PerformATOPRVActionsResponseVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s18TrustedPeersHelper28PerformATOPRVActionsResponseVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s18TrustedPeersHelper28PerformATOPRVActionsResponseVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s18TrustedPeersHelper28PerformATOPRVActionsResponseVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveUnreadableCKServerDataResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001116D4);
}

uint64_t sub_1001116D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoveUnreadableCKServerDataResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100111758);
}

uint64_t sub_10011175C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1001117CC()
{
  uint64_t result = sub_100221DF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100111858()
{
  return type metadata accessor for ViewKeys._StorageClass(0);
}

void sub_100111860()
{
  sub_1000E271C(319, (unint64_t *)&unk_10029D4E0, (void (*)(uint64_t))type metadata accessor for ViewKey);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10011191C()
{
  return type metadata accessor for EscrowPair._StorageClass(0);
}

void sub_100111924()
{
  sub_1000E271C(319, &qword_10029D638, (void (*)(uint64_t))type metadata accessor for Bottle);
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029D640, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100111A30()
{
  return type metadata accessor for EstablishRequest._StorageClass(0);
}

void sub_100111A38()
{
  sub_1000E271C(319, (unint64_t *)&unk_10029D758, (void (*)(uint64_t))type metadata accessor for Peer);
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029D638, (void (*)(uint64_t))type metadata accessor for Bottle);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
      if (v2 <= 0x3F)
      {
        sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_100111BF8()
{
  return type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
}

void sub_100111C00()
{
  sub_1000E271C(319, (unint64_t *)&unk_10029D758, (void (*)(uint64_t))type metadata accessor for Peer);
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029D638, (void (*)(uint64_t))type metadata accessor for Bottle);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, (unint64_t *)&unk_10029BB78, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
      if (v2 <= 0x3F)
      {
        sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
        if (v3 <= 0x3F)
        {
          sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t sub_100111E24()
{
  return type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
}

void sub_100111E2C()
{
  sub_1000E271C(319, (unint64_t *)&unk_10029D758, (void (*)(uint64_t))type metadata accessor for Peer);
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, &qword_10029AF10, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, &qword_10029AF18, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
      if (v2 <= 0x3F)
      {
        sub_1000E271C(319, (unint64_t *)&unk_10029B7E0, (void (*)(uint64_t))type metadata accessor for Metrics);
        if (v3 <= 0x3F)
        {
          sub_1000E271C(319, &qword_10029B7D8, (void (*)(uint64_t))type metadata accessor for AccountInfo);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t sub_100112050()
{
  return type metadata accessor for GetRepairActionResponse._StorageClass(0);
}

void sub_100112058()
{
  sub_1000E271C(319, (unint64_t *)&unk_10029DC50, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100112148()
{
  return type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
}

void sub_100112150()
{
  sub_1000E271C(319, &qword_10029DFE8, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  if (v0 <= 0x3F)
  {
    sub_1000E271C(319, (unint64_t *)&unk_10029AE68, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
    if (v1 <= 0x3F)
    {
      sub_1000E271C(319, (unint64_t *)&unk_10029DFF0, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

unint64_t sub_1001122DC()
{
  unint64_t result = qword_10029E3D0;
  if (!qword_10029E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029E3D0);
  }
  return result;
}

unint64_t sub_100112330()
{
  unint64_t result = qword_10029E3D8;
  if (!qword_10029E3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029E3D8);
  }
  return result;
}

BOOL static StreamingEncoderError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void StreamingEncoderError.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int StreamingEncoderError.hashValue.getter(char a1)
{
  return sub_100222B20();
}

BOOL sub_100112538(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100112550()
{
  Swift::UInt v1 = *v0;
  sub_100222B00();
  sub_100222B10(v1);
  return sub_100222B20();
}

void sub_100112598()
{
  sub_100222B10(*v0);
}

Swift::Int sub_1001125C4()
{
  Swift::UInt v1 = *v0;
  sub_100222B00();
  sub_100222B10(v1);
  return sub_100222B20();
}

unint64_t sub_10011260C()
{
  unint64_t result = qword_10029E4A0;
  if (!qword_10029E4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029E4A0);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for StreamingEncoderError(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StreamingEncoderError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StreamingEncoderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001127D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1001127F8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100112800(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StreamingEncoderError()
{
  return &type metadata for StreamingEncoderError;
}

uint64_t sub_10011281C()
{
  if (*(void *)(v0 + 32)) {
    sub_1001128F8();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for StreamingEncoderBase()
{
  return self;
}

uint64_t sub_1001128F8()
{
  if (*(void *)(v0 + 32))
  {
    sub_100112AA4();
    swift_bridgeObjectRetain();
    int v1 = sub_1002220C0();
    if (v2)
    {
      int v5 = v1;
      sub_100112AF8();
      swift_willThrowTypedImpl();
      swift_allocError();
      *unsigned int v6 = v5;
    }
    else
    {
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = 0;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100112A50();
    swift_allocError();
    *int v3 = 1;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for StreamingEncoderArray()
{
  return self;
}

uint64_t type metadata accessor for StreamingEncoderDict()
{
  return self;
}

unint64_t sub_100112A50()
{
  unint64_t result = qword_10029E7B8;
  if (!qword_10029E7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029E7B8);
  }
  return result;
}

unint64_t sub_100112AA4()
{
  unint64_t result = qword_10029E7C0;
  if (!qword_10029E7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029E7C0);
  }
  return result;
}

unint64_t sub_100112AF8()
{
  unint64_t result = qword_10029E7C8;
  if (!qword_10029E7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029E7C8);
  }
  return result;
}

uint64_t sub_100112B4C(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2)
  {
    id v4 = [a1 modelID];
    sub_100222270();

    v7._countAndFlagsBits = 0x5654656C707041;
    v7._object = (void *)0xE700000000000000;
    LOBYTE(v4) = sub_100222340(v7);
    swift_bridgeObjectRelease();
    if (v4) {
      return 3;
    }
    id v5 = [a1 modelID];
    sub_100222270();

    v8._countAndFlagsBits = 0x6363416F69647541;
    v8._object = (void *)0xEE0079726F737365;
    LOBYTE(v5) = sub_100222340(v8);
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
  }
  return v2;
}

uint64_t sub_100112C48(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100005A98((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_10018B1E8(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    swift_bridgeObjectRelease();
    return sub_10000B8E4(a2);
  }
  else
  {
    sub_10004015C(a1, &qword_100299EA0);
    sub_10000A8D8(a2, v7);
    sub_10000B8E4(a2);
    return sub_10004015C((uint64_t)v7, &qword_100299EA0);
  }
}

void *sub_100112D08(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_10000AC04((uint64_t)a1);
      if (v7)
      {
        id v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_100222930();

  if (!v4) {
    return 0;
  }
  sub_1000047D8(0, &qword_10029EDB8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_100112DE0(uint64_t a1)
{
  return sub_100112E0C(a1, sub_1001F4348, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1001F455C);
}

uint64_t sub_100112E0C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_1002226F0();
    uint64_t v8 = v7;
    sub_1002227B0();
    char v9 = sub_100222720();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      sub_1001B1EC4(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    uint64_t v10 = a3(v6, v8, v5 != 0, a1);
    sub_1001B1EC4(v6, v8, v5 != 0);
    return v10;
  }
  uint64_t result = a2(a1);
  if ((v13 & 1) == 0)
  {
    uint64_t v8 = v12;
    if (*(_DWORD *)(a1 + 36) == v12)
    {
      uint64_t v6 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100112F30(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100112F58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_100112F80(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for MachineMO();
    sub_1001A56AC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222490();
    uint64_t v1 = v27;
    uint64_t v26 = v28;
    uint64_t v2 = v29;
    uint64_t v3 = v30;
    unint64_t v4 = v31;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v23 = v2;
  int64_t v25 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v24 = (char *)&_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_100222790()) {
      goto LABEL_38;
    }
    type metadata accessor for MachineMO();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v32;
    swift_unknownObjectRelease();
    if (!v32) {
      goto LABEL_38;
    }
LABEL_31:
    id v15 = objc_msgSend(v11, "machineID", v23);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_100222270();
      uint64_t v19 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_100187FB4(0, *((void *)v24 + 2) + 1, 1, v24);
      }
      unint64_t v21 = *((void *)v24 + 2);
      unint64_t v20 = *((void *)v24 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v24 = sub_100187FB4((char *)(v20 > 1), v21 + 1, 1, v24);
      }
      *((void *)v24 + 2) = v21 + 1;
      uint64_t v22 = &v24[16 * v21];
      *((void *)v22 + 4) = v17;
      *((void *)v22 + 5) = v19;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v25) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v25) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v25) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v25) {
            goto LABEL_38;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v25) {
              goto LABEL_38;
            }
            unint64_t v13 = *(void *)(v26 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v25 != v14)
              {
                unint64_t v13 = *(void *)(v26 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_1001B30B0();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_100113300(uint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v4 = a2;
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for PolicyMO();
    sub_1001A56AC(&qword_10029EBE0, (void (*)(uint64_t))type metadata accessor for PolicyMO);
    sub_100222490();
    a1 = v22;
    uint64_t v21 = v23;
    uint64_t v5 = v24;
    uint64_t v6 = v25;
    unint64_t v7 = v26;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    id v11 = a2;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v19 = v5;
  int64_t v20 = (unint64_t)(v5 + 64) >> 6;
  if (a1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_29;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v21 + 8 * v16);
    uint64_t v14 = v6 + 1;
    if (!v17)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v20) {
        goto LABEL_32;
      }
      unint64_t v17 = *(void *)(v21 + 8 * v14);
      if (!v17)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v20) {
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v21 + 8 * v14);
        if (!v17)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v20) {
            goto LABEL_32;
          }
          unint64_t v17 = *(void *)(v21 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v6 + 5;
            if (v6 + 5 >= v20) {
              goto LABEL_32;
            }
            unint64_t v17 = *(void *)(v21 + 8 * v14);
            if (!v17)
            {
              uint64_t v18 = v6 + 6;
              while (v20 != v18)
              {
                unint64_t v17 = *(void *)(v21 + 8 * v18++);
                if (v17)
                {
                  uint64_t v14 = v18 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1001B30B0();

              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
LABEL_29:
    id v15 = *(id *)(*(void *)(a1 + 48) + 8 * v13);
    if (!v15) {
      goto LABEL_32;
    }
    while (1)
    {
      objc_msgSend(a2, "removePoliciesObject:", v15, v19);

      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((a1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_100222790())
      {
        type metadata accessor for PolicyMO();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v15 = v27;
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v27) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_100113618()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_10029E7D0);
  sub_100003CC8(v0, (uint64_t)qword_10029E7D0);
  return sub_100222080();
}

uint64_t sub_100113694(uint64_t a1)
{
  unint64_t v2 = sub_1001B823C();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1001136D0(uint64_t a1)
{
  unint64_t v2 = sub_1001B823C();

  return Error<>._code.getter(a1, v2);
}

unint64_t ContainerError.errorDescription.getter(void *a1, void *a2, char a3)
{
  unint64_t result = 0xD00000000000001ELL;
  switch(a3)
  {
    case 1:
      sub_100222840(26);
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD000000000000018;
      goto LABEL_18;
    case 2:
      unint64_t v14 = 0;
      sub_100222840(52);
      v15._countAndFlagsBits = 0xD000000000000013;
      v15._object = (void *)0x8000000100243C60;
      sub_100222310(v15);
      v16._countAndFlagsBits = (uint64_t)a1;
      v16._object = a2;
      sub_100222310(v16);
      v6._countAndFlagsBits = 0xD00000000000001FLL;
      unint64_t v7 = ") not on allowed machineID list";
      goto LABEL_10;
    case 3:
      return result;
    case 4:
      sub_100222840(25);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000017;
      goto LABEL_17;
    case 5:
      sub_100222840(45);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000002BLL;
      goto LABEL_17;
    case 6:
      return 0xD00000000000001ELL;
    case 7:
      sub_100222840(44);
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD00000000000002ALL;
      goto LABEL_18;
    case 8:
      sub_100222840(29);
      swift_bridgeObjectRelease();
      unint64_t v14 = 0x2072656550;
      v17._countAndFlagsBits = (uint64_t)a1;
      v17._object = a2;
      sub_100222310(v17);
      v6._countAndFlagsBits = 0xD000000000000016;
      unint64_t v7 = " not found in database";
LABEL_10:
      v6._object = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000);
      goto LABEL_11;
    case 9:
      unint64_t v14 = 0;
      id v9 = a1;
      sub_100222840(55);
      v18._countAndFlagsBits = 0xD000000000000035;
      v18._object = (void *)0x80000001002436D0;
      sub_100222310(v18);
      id v10 = [v9 description];
      uint64_t v11 = sub_100222270();
      unint64_t v13 = v12;

      v19._countAndFlagsBits = v11;
      v19._object = v13;
      sub_100222310(v19);
      swift_bridgeObjectRelease();
      sub_100113EE8(a1, a2, 9);
      return v14;
    case 10:
      return 0xD000000000000018;
    case 11:
      return 0xD000000000000022;
    case 12:
      sub_100222840(28);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000001ALL;
LABEL_17:
      unint64_t v14 = v8;
LABEL_18:
      v20._countAndFlagsBits = sub_100222A00();
      sub_100222310(v20);
      swift_bridgeObjectRelease();
      return v14;
    case 13:
      unint64_t result = 0xD000000000000019;
      switch((unint64_t)a1)
      {
        case 1uLL:
          unint64_t result = 0xD000000000000014;
          break;
        case 2uLL:
          unint64_t result = 0xD000000000000019;
          break;
        case 3uLL:
          unint64_t result = 0xD000000000000014;
          break;
        case 4uLL:
          unint64_t result = 0xD000000000000013;
          break;
        case 5uLL:
          unint64_t result = 0xD000000000000014;
          break;
        case 6uLL:
          unint64_t result = 0x626D656D206E6F6ELL;
          break;
        case 7uLL:
          unint64_t result = 0xD000000000000023;
          break;
        case 8uLL:
          unint64_t result = 0xD00000000000001CLL;
          break;
        case 9uLL:
          unint64_t result = 0xD000000000000020;
          break;
        case 0xAuLL:
          unint64_t result = 0xD000000000000025;
          break;
        case 0xBuLL:
          unint64_t result = 0xD00000000000002CLL;
          break;
        case 0xCuLL:
          unint64_t result = 0xD00000000000001FLL;
          break;
        case 0xDuLL:
          unint64_t result = 0xD000000000000019;
          break;
        case 0xEuLL:
        case 0x2EuLL:
          return 0xD000000000000018;
        case 0xFuLL:
          unint64_t result = 0xD000000000000024;
          break;
        case 0x10uLL:
          unint64_t result = 0xD00000000000002ALL;
          break;
        case 0x11uLL:
          unint64_t result = 0xD000000000000028;
          break;
        case 0x12uLL:
          unint64_t result = 0xD000000000000026;
          break;
        case 0x13uLL:
          unint64_t result = 0xD00000000000001FLL;
          break;
        case 0x14uLL:
          unint64_t result = 0xD00000000000001FLL;
          break;
        case 0x15uLL:
          unint64_t result = 0xD00000000000001ALL;
          break;
        case 0x16uLL:
          unint64_t result = 0xD000000000000029;
          break;
        case 0x17uLL:
          unint64_t result = 0xD00000000000001FLL;
          break;
        case 0x18uLL:
          unint64_t result = 0xD000000000000025;
          break;
        case 0x19uLL:
          unint64_t result = 0xD000000000000017;
          break;
        case 0x1AuLL:
          unint64_t result = 0xD000000000000011;
          break;
        case 0x1BuLL:
          unint64_t result = 0xD000000000000029;
          break;
        case 0x1CuLL:
          unint64_t result = 0xD00000000000002ELL;
          break;
        case 0x1DuLL:
          unint64_t result = 0xD00000000000001BLL;
          break;
        case 0x1EuLL:
          unint64_t result = 0xD00000000000001ELL;
          break;
        case 0x1FuLL:
          unint64_t result = 0xD000000000000045;
          break;
        case 0x20uLL:
          unint64_t result = 0xD000000000000022;
          break;
        case 0x21uLL:
          unint64_t result = 0xD000000000000011;
          break;
        case 0x22uLL:
          unint64_t result = 0xD00000000000002BLL;
          break;
        case 0x23uLL:
          unint64_t result = 0xD00000000000002DLL;
          break;
        case 0x24uLL:
          unint64_t result = 0xD000000000000026;
          break;
        case 0x25uLL:
          unint64_t result = 0xD000000000000011;
          break;
        case 0x26uLL:
          unint64_t result = 0xD000000000000019;
          break;
        case 0x27uLL:
          unint64_t result = 0xD000000000000027;
          break;
        case 0x28uLL:
          unint64_t result = 0xD000000000000023;
          break;
        case 0x29uLL:
          unint64_t result = 0xD000000000000019;
          break;
        case 0x2AuLL:
          unint64_t result = 0xD000000000000022;
          break;
        case 0x2BuLL:
          unint64_t result = 0xD00000000000002ALL;
          break;
        case 0x2CuLL:
          unint64_t result = 0xD00000000000001ALL;
          break;
        case 0x2DuLL:
          unint64_t result = 0xD00000000000001ALL;
          break;
        case 0x2FuLL:
          unint64_t result = 0xD000000000000016;
          break;
        case 0x30uLL:
          unint64_t result = 0xD000000000000016;
          break;
        default:
          return result;
      }
      return result;
    default:
      sub_100222840(26);
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD000000000000018;
      v6._countAndFlagsBits = (uint64_t)a1;
      v6._object = a2;
LABEL_11:
      sub_100222310(v6);
      return v14;
  }
}

void sub_100113EE8(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 8:
      swift_bridgeObjectRelease();
      break;
    case 3:
    case 6:
    case 10:
    case 11:
      swift_errorRelease();
      break;
    case 9:

      break;
    default:
      return;
  }
}

unint64_t sub_100113F5C()
{
  return ContainerError.errorDescription.getter(*(void **)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t static ContainerError.errorDomain.getter()
{
  return 0xD000000000000029;
}

uint64_t ContainerError.errorCode.getter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 11;
  switch(a3)
  {
    case 1:
      uint64_t result = 12;
      break;
    case 2:
      uint64_t result = 13;
      break;
    case 3:
      uint64_t result = 31;
      break;
    case 4:
      uint64_t result = 38;
      break;
    case 5:
      uint64_t result = 40;
      break;
    case 6:
      uint64_t result = 44;
      break;
    case 7:
      uint64_t result = 46;
      break;
    case 8:
      uint64_t result = 48;
      break;
    case 9:
      uint64_t result = 49;
      break;
    case 10:
      uint64_t result = 53;
      break;
    case 11:
      uint64_t result = 54;
      break;
    case 12:
      uint64_t result = 59;
      break;
    case 13:
      uint64_t result = qword_1002315A8[a1];
      break;
    default:
      return result;
  }
  return result;
}

id ContainerError.underlyingError.getter(void *a1, void *a2, char a3)
{
  id v3 = 0;
  switch(a3)
  {
    case 3:
      swift_errorRetain();
      id v3 = (id)sub_100221B30();
      unint64_t v8 = a1;
      id v9 = a2;
      char v10 = 3;
      goto LABEL_7;
    case 4:
    case 5:
    case 12:
      id v6 = objc_allocWithZone((Class)NSError);
      NSString v7 = sub_100222260();
      id v3 = [v6 initWithDomain:v7 code:a1 userInfo:0];

      return v3;
    case 6:
      swift_errorRetain();
      id v3 = (id)sub_100221B30();
      unint64_t v8 = a1;
      id v9 = a2;
      char v10 = 6;
      goto LABEL_7;
    case 10:
      swift_errorRetain();
      id v3 = (id)sub_100221B30();
      unint64_t v8 = a1;
      id v9 = a2;
      char v10 = 10;
      goto LABEL_7;
    case 11:
      swift_errorRetain();
      id v3 = (id)sub_100221B30();
      unint64_t v8 = a1;
      id v9 = a2;
      char v10 = 11;
LABEL_7:
      sub_100113EE8(v8, v9, v10);
      break;
    default:
      return v3;
  }
  return v3;
}

void *ContainerError.errorUserInfo.getter(void *a1, void *a2, unsigned __int8 a3)
{
  unint64_t v6 = ContainerError.errorDescription.getter(a1, a2, a3);
  if (v7)
  {
    unint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v10 = sub_100222270();
    uint64_t v12 = v11;
    uint64_t v25 = &type metadata for String;
    *(void *)&long long v24 = v8;
    *((void *)&v24 + 1) = v9;
    sub_100005A98(&v24, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10018A6E4(v23, v10, v12, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a3 <= 0xCu)
  {
    if (((1 << a3) & 0xC48) != 0)
    {
      swift_errorRetain();
      id v14 = (id)sub_100221B30();
      sub_100113EE8(a1, a2, a3);
LABEL_8:
      uint64_t v17 = sub_100222270();
      uint64_t v19 = v18;
      uint64_t v25 = (void *)sub_1000047D8(0, (unint64_t *)&qword_100299528);
      *(void *)&long long v24 = v14;
      sub_100005A98(&v24, v23);
      id v20 = v14;
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      sub_10018A6E4(v23, v17, v19, v21);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return &_swiftEmptyDictionarySingleton;
    }
    if (((1 << a3) & 0x1030) != 0)
    {
      id v15 = objc_allocWithZone((Class)NSError);
      NSString v16 = sub_100222260();
      id v14 = [v15 initWithDomain:v16 code:a1 userInfo:0];

      if (v14) {
        goto LABEL_8;
      }
    }
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1001143DC()
{
  uint64_t result = 11;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t result = 12;
      break;
    case 2:
      uint64_t result = 13;
      break;
    case 3:
      uint64_t result = 31;
      break;
    case 4:
      uint64_t result = 38;
      break;
    case 5:
      uint64_t result = 40;
      break;
    case 6:
      uint64_t result = 44;
      break;
    case 7:
      uint64_t result = 46;
      break;
    case 8:
      uint64_t result = 48;
      break;
    case 9:
      uint64_t result = 49;
      break;
    case 0xA:
      uint64_t result = 53;
      break;
    case 0xB:
      uint64_t result = 54;
      break;
    case 0xC:
      uint64_t result = 59;
      break;
    case 0xD:
      uint64_t result = qword_1002315A8[*(void *)v0];
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1001144B0()
{
  return ContainerError.errorUserInfo.getter(*(void **)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

BOOL sub_1001144BC()
{
  uint64_t v1 = v0;
  id v2 = [v0 userInfo];
  uint64_t v3 = sub_1002221D0();

  uint64_t v4 = sub_100222270();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_10000AB48(v4, v5), (v7 & 1) == 0))
  {
    long long v28 = 0u;
    long long v29 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1000663DC(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
LABEL_10:
    sub_10004015C((uint64_t)&v28, &qword_100299EA0);
    goto LABEL_11;
  }
  sub_1000046DC(&qword_100299D70);
  if (swift_dynamicCast())
  {
    unint64_t v8 = (void *)sub_100221B30();
    if ([v1 code] == (id)134110)
    {
      id v9 = [v1 domain];
      uint64_t v10 = sub_100222270();
      uint64_t v12 = v11;

      if (v10 == sub_100222270() && v12 == v13)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_100222A30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0) {
          goto LABEL_22;
        }
      }
      if ([v8 code] == (id)11)
      {
        id v22 = [v8 domain];
        uint64_t v23 = sub_100222270();
        uint64_t v25 = v24;

        if (v23 == sub_100222270() && v25 == v26)
        {
          swift_errorRelease();
          swift_bridgeObjectRelease_n();

          return 1;
        }
        char v27 = sub_100222A30();
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return (v27 & 1) != 0;
      }
    }
LABEL_22:
    swift_errorRelease();

    return 0;
  }
LABEL_11:
  if ([v1 code] == (id)11)
  {
    id v14 = [v1 domain];
    uint64_t v15 = sub_100222270();
    uint64_t v17 = v16;

    if (v15 == sub_100222270() && v17 == v18)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = sub_100222A30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  return 0;
}

id sub_100114818()
{
  id result = [v0 hasChanges];
  if (result)
  {
    id v10 = 0;
    if ([v0 save:&v10])
    {
      id v2 = v10;
      return [v0 refreshAllObjects];
    }
    else
    {
      id v3 = v10;
      sub_100221B40();

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_100222090();
      sub_100003CC8(v4, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v5 = sub_100222070();
      os_log_type_t v6 = sub_100222500();
      if (os_log_type_enabled(v5, v6))
      {
        char v7 = (uint8_t *)swift_slowAlloc();
        id v10 = (id)swift_slowAlloc();
        *(_DWORD *)char v7 = 136446210;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v8 = sub_1002222C0();
        sub_1001BEBDC(v8, v9, (uint64_t *)&v10);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to save moc: %{public}s", v7, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      return (id)swift_willThrow();
    }
  }
  return result;
}

void sub_100114A8C(void *a1, void (*a2)(void *, unsigned char *), uint64_t a3, void (*a4)(unint64_t), uint64_t a5)
{
}

void sub_100114ACC(void *a1, void (*a2)(void *, unsigned char *), uint64_t a3, void (*a4)(unint64_t), uint64_t a5, void (*a6)(void), void (*a7)(void))
{
  a6(0);
  uint64_t v15 = sub_1002225D0();
  if (v8)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v17 = sub_100222070();
    os_log_type_t v18 = sub_100222500();
    if (os_log_type_enabled(v17, v18))
    {
      char v19 = (uint8_t *)swift_slowAlloc();
      id v20 = (void *)swift_slowAlloc();
      *(_DWORD *)char v19 = 138543362;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      sub_100222690();
      *id v20 = v35;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to fetch count for chunkwise enumeration: %{public}@", v19, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_willThrow();
  }
  else
  {
    uint64_t v21 = v15;
    uint64_t v33 = a2;
    id v22 = [a1 fetchBatchSize];
    if (v22)
    {
      uint64_t v23 = (uint64_t)v22;
      BOOL v24 = v21 >= 0;
      if ((uint64_t)v22 > 0) {
        BOOL v24 = v21 < 1;
      }
      if (!v24)
      {
        uint64_t v30 = a3;
        unint64_t v31 = a4;
        uint64_t v32 = a5;
        uint64_t v25 = a7;
        uint64_t v26 = 0;
        do
        {
          if (__OFADD__(v26, v23)) {
            int64_t v27 = ((v26 + v23) >> 63) ^ 0x8000000000000000;
          }
          else {
            int64_t v27 = v26 + v23;
          }
          char v34 = 0;
          sub_100114DE0(a1, v26, v21, v7, v33, v30, &v34, v31, v32, v25);
          if (v34) {
            break;
          }
          BOOL v29 = v21 >= v27;
          if (v23 > 0) {
            BOOL v29 = v27 >= v21;
          }
          uint64_t v26 = v27;
        }
        while (!v29);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100114DA0(void *a1, void (*a2)(void *, unsigned char *), uint64_t a3, void (*a4)(unint64_t), uint64_t a5)
{
}

void sub_100114DE0(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, unsigned char *), uint64_t a6, unsigned char *a7, void (*a8)(unint64_t), uint64_t a9, void (*a10)(void))
{
  [a1 copy];
  sub_1002226B0();
  swift_unknownObjectRelease();
  sub_1000046DC(&qword_10029EBE8);
  swift_dynamicCast();
  uint64_t v17 = v40;
  [v40 setFetchBatchSize:0];
  [v40 setFetchOffset:a2];
  BOOL v18 = __OFSUB__(a3, a2);
  uint64_t v19 = a3 - a2;
  if (v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v20 = [a1 fetchBatchSize];
  if ((uint64_t)v20 >= v19) {
    id v21 = (id)v19;
  }
  else {
    id v21 = v20;
  }
  [v40 setFetchLimit:v21];
  a10(0);
  unint64_t v22 = sub_1002225E0();
  if (!v10)
  {
    unint64_t v28 = v22;
    uint64_t v36 = a8;
    id v35 = a4;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_100222970();
      if (v37)
      {
LABEL_11:
        uint64_t v17 = (void *)(v28 & 0xC000000000000001);
        uint64_t v30 = 4;
        while (1)
        {
          id v31 = v17 ? (id)sub_100222880() : *(id *)(v28 + 8 * v30);
          uint64_t v32 = v31;
          uint64_t v33 = v30 - 3;
          if (__OFADD__(v30 - 4, 1)) {
            break;
          }
          a5(v32, a7);

          if ((*a7 & 1) == 0)
          {
            ++v30;
            if (v33 != v37) {
              continue;
            }
          }
          goto LABEL_18;
        }
        __break(1u);
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v29 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v37 = v29;
      if (v29) {
        goto LABEL_11;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease();
    v36(v28);
    swift_bridgeObjectRelease();
    [v35 refreshAllObjects];

    return;
  }
  if (qword_100298EB8 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v23 = sub_100222090();
  sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  BOOL v24 = sub_100222070();
  os_log_type_t v25 = sub_100222500();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    int64_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138543362;
    swift_errorRetain();
    uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
    sub_100222690();
    *int64_t v27 = v39;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to fetch for chunkwise enumeration: %{public}@", v26, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
}

uint64_t sub_100115200(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000046DC((uint64_t *)&unk_10029EEE0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100229530;
  *(void *)(v7 + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(v7 + 40) = kSecClassInternetPassword;
  *(void *)(v7 + 64) = v8;
  *(void *)(v7 + 72) = kSecAttrAccessible;
  *(void *)(v7 + 80) = kSecAttrAccessibleWhenUnlocked;
  *(void *)(v7 + 104) = v8;
  *(void *)(v7 + 112) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(v7 + 120) = 1;
  *(void *)(v7 + 144) = &type metadata for Bool;
  *(void *)(v7 + 152) = kSecAttrAccessGroup;
  *(void *)(v7 + 160) = 0xD00000000000001ALL;
  *(void *)(v7 + 168) = 0x80000001002326F0;
  *(void *)(v7 + 184) = &type metadata for String;
  *(void *)(v7 + 192) = kSecAttrSynchronizable;
  *(unsigned char *)(v7 + 200) = 0;
  *(void *)(v7 + 224) = &type metadata for Bool;
  *(void *)(v7 + 232) = kSecAttrDescription;
  *(void *)(v7 + 240) = a3;
  *(void *)(v7 + 248) = a4;
  *(void *)(v7 + 264) = &type metadata for String;
  *(void *)(v7 + 272) = kSecAttrPath;
  *(void *)(v7 + 280) = a3;
  *(void *)(v7 + 288) = a4;
  *(void *)(v7 + 304) = &type metadata for String;
  *(void *)(v7 + 312) = kSecValueData;
  *(void *)(v7 + 344) = &type metadata for Data;
  *(void *)(v7 + 320) = a1;
  *(void *)(v7 + 328) = a2;
  swift_bridgeObjectRetain_n();
  uint64_t v64 = (id)kSecClass;
  CFStringRef v9 = (id)kSecClassInternetPassword;
  CFStringRef v10 = (id)kSecAttrAccessible;
  CFStringRef v11 = (id)kSecAttrAccessibleWhenUnlocked;
  uint64_t v63 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v12 = (id)kSecAttrAccessGroup;
  uint64_t v13 = (id)kSecAttrSynchronizable;
  id v14 = (id)kSecAttrDescription;
  uint64_t v15 = (id)kSecAttrPath;
  CFStringRef v16 = (id)kSecValueData;
  sub_1000059E8(a1, a2);
  unint64_t v17 = sub_10000926C(v7);
  CFTypeRef result = 0;
  sub_1001A56AC((unint64_t *)&qword_1002990E8, type metadata accessor for CFString);
  CFDictionaryRef isa = sub_1002221C0().super.isa;
  OSStatus v19 = SecItemAdd(isa, &result);

  if (v19 == -25299)
  {
    unint64_t v62 = (__CFString *)v12;
    sub_10000926C((uint64_t)&_swiftEmptyArrayStorage);
    uint64_t v20 = *(void *)(v17 + 16);
    id v21 = v64;
    unint64_t v22 = v21;
    if (v20 && (unint64_t v23 = sub_10000AA94((uint64_t)v21), (v24 & 1) != 0))
    {
      sub_1000663DC(*(void *)(v17 + 56) + 32 * v23, (uint64_t)&v68);
      sub_100005A98(&v68, v67);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10018A5A0(v67, v22, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A5F4((uint64_t)v22, &v68);

      sub_10004015C((uint64_t)&v68, &qword_100299EA0);
    }
    uint64_t v26 = *(void *)(v17 + 16);
    int64_t v27 = v13;
    unint64_t v28 = v27;
    unint64_t v66 = v22;
    if (v26 && (unint64_t v29 = sub_10000AA94((uint64_t)v27), (v30 & 1) != 0))
    {
      sub_1000663DC(*(void *)(v17 + 56) + 32 * v29, (uint64_t)&v68);
      sub_100005A98(&v68, v67);
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      sub_10018A5A0(v67, v28, v31);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A5F4((uint64_t)v28, &v68);

      sub_10004015C((uint64_t)&v68, &qword_100299EA0);
    }
    uint64_t v32 = *(void *)(v17 + 16);
    uint64_t v33 = v62;
    char v34 = v33;
    if (v32 && (unint64_t v35 = sub_10000AA94((uint64_t)v33), (v36 & 1) != 0))
    {
      sub_1000663DC(*(void *)(v17 + 56) + 32 * v35, (uint64_t)&v68);
      sub_100005A98(&v68, v67);
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      sub_10018A5A0(v67, v34, v37);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A5F4((uint64_t)v34, &v68);

      sub_10004015C((uint64_t)&v68, &qword_100299EA0);
    }
    if (*(void *)(v17 + 16))
    {
      CFStringRef v38 = (id)kSecAttrServer;
      uint64_t v39 = v14;
      unint64_t v40 = sub_10000AA94((uint64_t)v39);
      if (v41)
      {
        sub_1000663DC(*(void *)(v17 + 56) + 32 * v40, (uint64_t)&v68);
      }
      else
      {
        long long v68 = 0u;
        long long v69 = 0u;
      }

      if (*((void *)&v69 + 1)) {
        goto LABEL_24;
      }
    }
    else
    {
      long long v68 = 0u;
      long long v69 = 0u;
      CFStringRef v42 = (id)kSecAttrServer;
      if (*((void *)&v69 + 1))
      {
LABEL_24:
        sub_100005A98(&v68, v67);
        char v43 = swift_isUniquelyReferenced_nonNull_native();
        sub_10018A5A0(v67, (void *)kSecAttrServer, v43);

        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    sub_10004015C((uint64_t)&v68, &qword_100299EA0);
    sub_10000A5F4((uint64_t)kSecAttrServer, v67);

    sub_10004015C((uint64_t)v67, &qword_100299EA0);
LABEL_25:
    uint64_t v44 = *(void *)(v17 + 16);
    uint64_t v45 = v15;
    uint64_t v46 = v45;
    if (v44 && (unint64_t v47 = sub_10000AA94((uint64_t)v45), (v48 & 1) != 0))
    {
      sub_1000663DC(*(void *)(v17 + 56) + 32 * v47, (uint64_t)&v68);
      sub_100005A98(&v68, v67);
      char v49 = swift_isUniquelyReferenced_nonNull_native();
      sub_10018A5A0(v67, v46, v49);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A5F4((uint64_t)v46, &v68);

      sub_10004015C((uint64_t)&v68, &qword_100299EA0);
    }
    uint64_t v50 = *(void *)(v17 + 16);
    int v51 = v63;
    uint64_t v52 = v51;
    if (v50 && (unint64_t v53 = sub_10000AA94((uint64_t)v51), (v54 & 1) != 0))
    {
      sub_1000663DC(*(void *)(v17 + 56) + 32 * v53, (uint64_t)&v68);
      sub_100005A98(&v68, v67);
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      sub_10018A5A0(v67, v52, v55);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A5F4((uint64_t)v52, &v68);

      sub_10004015C((uint64_t)&v68, &qword_100299EA0);
    }
    *(void *)&v67[0] = v17;
    int v56 = v66;
    sub_10000A5F4((uint64_t)v56, &v68);

    sub_10004015C((uint64_t)&v68, &qword_100299EA0);
    CFDictionaryRef v57 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    CFDictionaryRef v58 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    OSStatus v19 = SecItemUpdate(v57, v58);

    if (!v19) {
      return swift_unknownObjectRelease();
    }
LABEL_34:
    sub_100042D4C();
    swift_allocError();
    *(void *)uint64_t v59 = v19;
    *(void *)(v59 + 8) = 0;
    *(unsigned char *)(v59 + 16) = 5;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  if (v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1001159DC(uint64_t a1, uint64_t a2)
{
  sub_1000046DC((uint64_t *)&unk_10029EEE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229530;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassInternetPassword;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = kSecAttrAccessGroup;
  *(void *)(inited + 80) = 0xD00000000000001ALL;
  *(void *)(inited + 88) = 0x80000001002326F0;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 112) = kSecAttrDescription;
  *(void *)(inited + 120) = a1;
  *(void *)(inited + 128) = a2;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = kSecReturnAttributes;
  *(unsigned char *)(inited + 160) = 1;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(void *)(inited + 192) = kSecReturnData;
  *(unsigned char *)(inited + 200) = 1;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(void *)(inited + 232) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 240) = 0;
  *(void *)(inited + 264) = &type metadata for Bool;
  *(void *)(inited + 272) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 280) = 1;
  *(void *)(inited + 304) = &type metadata for Bool;
  *(void *)(inited + 312) = kSecMatchLimit;
  *(void *)(inited + 344) = v5;
  *(void *)(inited + 320) = kSecMatchLimitOne;
  CFStringRef v6 = (id)kSecClass;
  CFStringRef v7 = (id)kSecClassInternetPassword;
  CFStringRef v8 = (id)kSecAttrAccessGroup;
  CFStringRef v9 = (id)kSecAttrDescription;
  swift_bridgeObjectRetain();
  CFStringRef v10 = (id)kSecReturnAttributes;
  CFStringRef v11 = (id)kSecReturnData;
  CFStringRef v12 = (id)kSecAttrSynchronizable;
  CFStringRef v13 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v14 = (id)kSecMatchLimit;
  CFStringRef v15 = (id)kSecMatchLimitOne;
  sub_10000926C(inited);
  CFTypeRef result = 0;
  sub_1001A56AC((unint64_t *)&qword_1002990E8, type metadata accessor for CFString);
  CFDictionaryRef isa = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v17 = SecItemCopyMatching(isa, &result);

  if (v17 || !result)
  {
    sub_100042D4C();
    swift_allocError();
    *(void *)uint64_t v21 = (int)v17;
    *(void *)(v21 + 8) = 0;
    char v22 = 4;
LABEL_9:
    *(unsigned char *)(v21 + 16) = v22;
    swift_willThrow();
    swift_unknownObjectRelease();
    return v17;
  }
  *(void *)&long long v25 = result;
  swift_unknownObjectRetain();
  sub_1000046DC((uint64_t *)&unk_10029EF10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v21 = xmmword_100231180;
    char v22 = 13;
    goto LABEL_9;
  }
  if (*(void *)(v24 + 16))
  {
    BOOL v18 = (id)kSecValueData;
    unint64_t v19 = sub_10000AA94((uint64_t)v18);
    if (v20)
    {
      sub_1000663DC(*(void *)(v24 + 56) + 32 * v19, (uint64_t)&v25);
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v26 + 1))
  {
    if (swift_dynamicCast()) {
      uint64_t v17 = v24;
    }
    else {
      uint64_t v17 = 0;
    }
  }
  else
  {
    sub_10004015C((uint64_t)&v25, &qword_100299EA0);
    uint64_t v17 = 0;
  }
  swift_unknownObjectRelease();
  return v17;
}

void sub_100115DB8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v16 = [self defaultManager];
  NSString v4 = sub_100222260();
  id v15 = [v16 identityForIdentifier:v4];

  if (!v15)
  {
    ((void (*)(void, void))a3)(0, 0);
    CFStringRef v10 = v16;
LABEL_14:

    return;
  }
  id v5 = [v15 resultType];
  if (v5 == (id)2)
  {
    id v11 = [v15 error];
    ((void (*)(void, id))a3)(0, v11);

    goto LABEL_13;
  }
  if (v5 == (id)1)
  {
    sub_100042D4C();
    uint64_t v13 = swift_allocError();
    long long v14 = xmmword_100231190;
  }
  else
  {
    if (!v5)
    {
      id v6 = v15;
      id v7 = [v6 value];
      if (v7)
      {
        CFStringRef v8 = v7;
        id v9 = [v7 keyPair];

        if (!v9)
        {
LABEL_9:
          id v7 = 0;
          goto LABEL_10;
        }
        self;
        id v7 = (id)swift_dynamicCastObjCClass();
        if (!v7)
        {

          goto LABEL_9;
        }
      }
LABEL_10:
      id v15 = v7;
      a3();

LABEL_13:
      CFStringRef v10 = v15;
      goto LABEL_14;
    }
    sub_100042D4C();
    uint64_t v13 = swift_allocError();
    long long v14 = xmmword_1002311A0;
  }
  *(_OWORD *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 16) = 13;
  ((void (*)(void, uint64_t))a3)(0, v13);

  swift_errorRelease();
}

uint64_t sub_100116018(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, void *a6)
{
  if (a1)
  {
    v23._countAndFlagsBits = a5;
    v23._object = a6;
    sub_100222310(v23);
    swift_retain();
    swift_bridgeObjectRetain();
    id v11 = a1;
    sub_10019CC74(0x6974707972636E65, 0xEF2079656B2D6E6FLL, a3, a4, a5, (uint64_t)a6, v11);

    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100222090();
    sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v15 = sub_100222070();
    os_log_type_t v16 = sub_100222500();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      uint64_t v21 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v18 = sub_1002222C0();
      uint64_t v21 = sub_1001BEBDC(v18, v19, &v20);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unable to load signing key: %{public}s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return ((uint64_t (*)(void, uint64_t))a3)(0, a2);
  }
}

void sub_1001162D0(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a1)
  {
    objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
    id v12 = a1;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_100043C0C(a5, a6, a7, v12);
    a3(v20, 0);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100222090();
    sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v15 = sub_100222070();
    os_log_type_t v16 = sub_100222500();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v18 = sub_1002222C0();
      sub_1001BEBDC(v18, v19, &v21);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unable to load encryption key: %{public}s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    a3(0, a2);
  }
}

void *sub_1001165B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    CFStringRef v8 = a1;
  }
  else {
    CFStringRef v8 = _swiftEmptyArrayStorage;
  }
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = sub_100197FB8((unint64_t)v8, a3, a2, a4);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v4)
  {
    uint64_t v10 = v9[2];
    if (v10)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v10; ++i)
      {
        id v12 = (void *)v9[i + 4];
        if (v12)
        {
          id v13 = v12;
          sub_1002223A0();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1002223F0();
          }
          sub_100222410();
          sub_1002223E0();
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

void sub_100116700(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, void *a6@<X8>)
{
  uint64_t v10 = *a1;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
  swift_unknownObjectRetain_n();
  id v12 = v10;
  id v13 = sub_100222070();
  os_log_type_t v14 = sub_1002224E0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v47 = a4;
    uint64_t v15 = swift_slowAlloc();
    id v52 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446466;
    swift_unknownObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029ED70);
    uint64_t v16 = sub_1002222C0();
    uint64_t v48 = a3;
    sub_1001BEBDC(v16, v17, (uint64_t *)&v52);
    sub_100222690();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    id v18 = v12;
    id v19 = [v18 description];
    os_log_type_t type = v14;
    id v20 = v12;
    uint64_t v21 = sub_100222270();
    unint64_t v23 = v22;

    uint64_t v24 = v21;
    id v12 = v20;
    sub_1001BEBDC(v24, v23, (uint64_t *)&v52);
    sub_100222690();

    a3 = v48;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, type, "Making TLKShare for %{public}s for key %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v47;
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  long long v25 = self;
  id v52 = 0;
  swift_unknownObjectRetain();
  id v26 = v12;
  swift_unknownObjectRetain();
  id v27 = [v25 share:v26 as:a3 to:a2 epoch:a4 poisoned:0 error:&v52];
  id v28 = v52;
  if (v27)
  {

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *a6 = v27;
    return;
  }
  unint64_t v29 = v28;
  int v51 = a6;
  uint64_t v30 = sub_100221B40();

  swift_willThrow();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  char v31 = (void *)sub_100221B30();
  id v32 = [v31 domain];
  uint64_t v33 = sub_100222270();
  uint64_t v35 = v34;

  if (v33 == 0x7974697275636573 && v35 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v36 = sub_100222A30();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
LABEL_15:
      swift_willThrow();

      *a5 = v30;
      return;
    }
  }
  if ([v31 code] != (id)-25300) {
    goto LABEL_15;
  }
  id v37 = v26;
  CFStringRef v38 = sub_100222070();
  os_log_type_t v39 = sub_1002224E0();
  if (os_log_type_enabled(v38, v39))
  {
    log = v38;
    unint64_t v40 = (uint8_t *)swift_slowAlloc();
    id v52 = (id)swift_slowAlloc();
    *(_DWORD *)unint64_t v40 = 136446210;
    id v41 = v37;
    id v42 = [v41 description];
    uint64_t v43 = sub_100222270();
    unint64_t v45 = v44;

    sub_1001BEBDC(v43, v45, (uint64_t *)&v52);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v39, "No TLK contents for %{public}s, no TLK share possible", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
  }
  *int v51 = 0;
}

uint64_t sub_100116CE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000046DC(&qword_10029ED58);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TLKShare(0);
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  unint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  id v20 = (char *)&v36 - v19;
  unint64_t v21 = (unint64_t)sub_1001165B4(a1, a2, a3, a4);
  if (v4) {
    return (uint64_t)v17;
  }
  unint64_t v22 = v21;
  uint64_t v23 = v37;
  char v36 = v20;
  uint64_t v42 = 0;
  if (!(v21 >> 62))
  {
    uint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_4;
    }
LABEL_18:
    unint64_t v17 = (char *)_swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v17;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_100222970();
  uint64_t v24 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_4:
  if (v24 >= 1)
  {
    uint64_t v26 = v23;
    uint64_t v27 = 0;
    unint64_t v40 = v22 & 0xC000000000000001;
    id v41 = v17;
    os_log_type_t v39 = (void (**)(char *, void, uint64_t, uint64_t))(v26 + 56);
    id v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    unint64_t v17 = (char *)_swiftEmptyArrayStorage;
    unint64_t v38 = v22;
    do
    {
      if (v40) {
        id v29 = (id)sub_100222880();
      }
      else {
        id v29 = *(id *)(v22 + 8 * v27 + 32);
      }
      char v31 = v29;
      *(&v36 - 2) = (char *)__chkstk_darwin(v29, v30);
      sub_1001A56AC(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
      uint64_t v32 = v42;
      sub_100221F70();
      uint64_t v42 = v32;
      (*v39)(v12, 0, 1, v13);

      if ((*v28)(v12, 1, v13) == 1)
      {
        sub_10004015C((uint64_t)v12, &qword_10029ED58);
        unint64_t v22 = v38;
      }
      else
      {
        uint64_t v33 = (uint64_t)v36;
        sub_1001B7B9C((uint64_t)v12, (uint64_t)v36, type metadata accessor for TLKShare);
        sub_1001B7B9C(v33, (uint64_t)v41, type metadata accessor for TLKShare);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v17 = (char *)sub_100187B18(0, *((void *)v17 + 2) + 1, 1, (unint64_t)v17);
        }
        unint64_t v22 = v38;
        unint64_t v35 = *((void *)v17 + 2);
        unint64_t v34 = *((void *)v17 + 3);
        if (v35 >= v34 >> 1) {
          unint64_t v17 = (char *)sub_100187B18(v34 > 1, v35 + 1, 1, (unint64_t)v17);
        }
        *((void *)v17 + 2) = v35 + 1;
        sub_1001B7B9C((uint64_t)v41, (uint64_t)&v17[((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v35], type metadata accessor for TLKShare);
      }
      ++v27;
    }
    while (v24 != v27);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void *sub_1001170DC(unint64_t a1, void *a2, uint64_t a3)
{
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain_n();
  id v7 = a2;
  CFStringRef v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    uint64_t v14 = a3;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_100222970();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_100222690();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    uint64_t v12 = *(void *)&v7[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID];
    unint64_t v11 = *(void *)&v7[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID + 8];
    swift_bridgeObjectRetain();
    sub_1001BEBDC(v12, v11, &v15);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Attempting to recover %ld shares for peer %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v14;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_100117348(a1, v7, 0, 0, a3);
}

void *sub_100117348(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v167 = (id)sub_100009878((uint64_t)_swiftEmptyArrayStorage);
  sub_1000046DC(&qword_10029EE38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229540;
  v169[0] = a2;
  type metadata accessor for OctagonSelfPeerKeys();
  sub_1001A56AC(&qword_10029EE40, (void (*)(uint64_t))type metadata accessor for OctagonSelfPeerKeys);
  os_log_type_t v9 = a2;
  sub_1002227F0();
  uint64_t v166 = (void *)inited;
  uint64_t v164 = (void *)sub_100009884((uint64_t)_swiftEmptyArrayStorage);
  if (a4)
  {
    uint64_t v10 = a4;
  }
  else
  {
    uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID + 8];
    swift_bridgeObjectRetain();
  }
  unint64_t v11 = v9;
  swift_bridgeObjectRetain();
  NSString v12 = sub_100222260();
  swift_bridgeObjectRelease();
  v169[0] = 0;
  id v13 = [(id)a5 peerWithID:v12 error:v169];

  unint64_t v14 = a1;
  unint64_t v163 = v9;
  if (v169[0])
  {
    id v15 = v169[0];

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    a5 = (uint64_t)v15;
    unint64_t v17 = sub_100222070();
    os_log_type_t v18 = sub_100222500();
    uint64_t v10 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      id v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138543362;
      a5 = (uint64_t)(id)a5;
      unint64_t v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v169[0] = v21;
      unint64_t v11 = v9;
      sub_100222690();
      *id v20 = v21;

      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v10, "Error getting ego peer from model: %{public}@", v19, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v17 = a5;
    }

    goto LABEL_18;
  }
  if (!v13)
  {
LABEL_18:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_100222090();
    sub_100003CC8(v33, (uint64_t)qword_10029E7D0);
    unint64_t v34 = sub_100222070();
    os_log_type_t v35 = sub_1002224E0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v10 = swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "No ego peer in model; no trusted peers", (uint8_t *)v10, 2u);
      swift_slowDealloc();
    }

    id v155 = 0;
    goto LABEL_23;
  }
  id v155 = v13;
  NSString v22 = [v155 peerID];
  if (!v22)
  {
    sub_100222270();
    NSString v22 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = *(void *)&v9[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey];
  v169[0] = 0;
  uint64_t v10 = (uint64_t)[(id)a5 calculateDynamicInfoForPeerWithID:v22 addingPeerIDs:0 removingPeerIDs:0 preapprovedKeys:0 signingKeyPair:v23 currentMachineIDs:0 error:v169];

  if (v10)
  {
    uint64_t v24 = qword_100298EB8;
    id v25 = v169[0];
    if (v24 != -1) {
      goto LABEL_95;
    }
    goto LABEL_14;
  }
  id v131 = v169[0];
  uint64_t v132 = sub_100221B40();

  a5 = v132;
  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v133 = sub_100222090();
  sub_100003CC8(v133, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v134 = sub_100222070();
  os_log_type_t v135 = sub_100222500();
  uint64_t v10 = v135;
  if (os_log_type_enabled(v134, v135))
  {
    a5 = swift_slowAlloc();
    v169[0] = (id)swift_slowAlloc();
    *(_DWORD *)a5 = 136446210;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v136 = sub_1002222C0();
    v168[0] = sub_1001BEBDC(v136, v137, (uint64_t *)v169);
    unint64_t v14 = a1;
    unint64_t v11 = v163;
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v10, "Unable to create dynamic info for share recovery: %{public}s", (uint8_t *)a5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_23:
  while (2)
  {
    if (v14 >> 62) {
      goto LABEL_87;
    }
    uint64_t v36 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v36)
    {
LABEL_25:
      if (v36 < 1)
      {
        __break(1u);
LABEL_95:
        swift_once();
LABEL_14:
        uint64_t v26 = sub_100222090();
        sub_100003CC8(v26, (uint64_t)qword_10029E7D0);
        uint64_t v27 = (id)v10;
        id v28 = sub_100222070();
        os_log_type_t v29 = sub_1002224E0();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          char v31 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = 138543362;
          v169[0] = v27;
          uint64_t v32 = v27;
          unint64_t v14 = a1;
          sub_100222690();
          *char v31 = v10;

          uint64_t v10 = (uint64_t)v30;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "Using computed dynamic info for share recovery: %{public}@", v30, 0xCu);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v28 = v27;
        }

        id v138 = [v27 includedPeerIDs];
        uint64_t v139 = sub_100222440();

        id v140 = (id)a5;
        a5 = 0;
        sub_10019A458(v139, v140, &v166);
        swift_bridgeObjectRelease();

        unint64_t v11 = v163;
        continue;
      }
      uint64_t v157 = 0;
      uint64_t v37 = 0;
      uint64_t v162 = &v11[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID];
      unint64_t v161 = v14 & 0xC000000000000001;
      unint64_t v156 = v14 + 32;
      unint64_t v14 = 40;
      uint64_t v159 = v36;
      while (1)
      {
        buf = v37;
        if (v161) {
          id v44 = (id)sub_100222880();
        }
        else {
          id v44 = *(id *)(v156 + 8 * (void)v37);
        }
        unint64_t v45 = v44;
        id v46 = [v44 receiverPeerID];
        uint64_t v47 = sub_100222270();
        uint64_t v49 = v48;

        if (v47 == *(void *)v162 && v49 == *((void *)v162 + 1))
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v51 = sub_100222A30();
          swift_bridgeObjectRelease();
          if ((v51 & 1) == 0)
          {
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v52 = sub_100222090();
            sub_100003CC8(v52, (uint64_t)qword_10029E7D0);
            id v53 = v45;
            char v54 = sub_100222070();
            os_log_type_t v55 = sub_1002224E0();
            if (os_log_type_enabled(v54, v55))
            {
              uint64_t v56 = swift_slowAlloc();
              v169[0] = (id)swift_slowAlloc();
              *(_DWORD *)uint64_t v56 = 136446210;
              id v57 = v53;
              id v58 = [v57 description];
              a5 = sub_100222270();
              unint64_t v60 = v59;

              uint64_t v36 = v159;
              *(void *)(v56 + 4) = sub_1001BEBDC(a5, v60, (uint64_t *)v169);

              unint64_t v11 = v163;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v54, v55, "Skipping %{public}s (wrong peerID)", (uint8_t *)v56, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            goto LABEL_30;
          }
        }
        uint64_t v61 = v166;
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_100222460();
        uint64_t v63 = v61[2];
        if (v63)
        {
          uint64_t v160 = v45;
          a5 = 0;
          do
          {
            sub_10000B888((uint64_t)&v61[5 * a5 + 4], (uint64_t)v169);
            Swift::Int v65 = *(void *)(v62 + 40);
            swift_bridgeObjectRetain();
            Swift::Int v66 = sub_1002227D0(v65);
            uint64_t v67 = -1 << *(unsigned char *)(v62 + 32);
            unint64_t v68 = v66 & ~v67;
            if ((*(void *)(v62 + 56 + ((v68 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v68))
            {
              uint64_t v69 = ~v67;
              while (1)
              {
                sub_10000B888(*(void *)(v62 + 48) + 40 * v68, (uint64_t)v168);
                char v70 = sub_1002227E0();
                sub_10000B8E4((uint64_t)v168);
                if (v70) {
                  break;
                }
                unint64_t v68 = (v68 + 1) & v69;
                if (((*(void *)(v62 + 56 + ((v68 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v68) & 1) == 0) {
                  goto LABEL_46;
                }
              }
            }
            else
            {
LABEL_46:
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              sub_10000B888((uint64_t)v169, (uint64_t)v168);
              sub_100191114((Swift::Int)v168, v68, isUniquelyReferenced_nonNull_native);
            }
            swift_bridgeObjectRelease();
            sub_10000B8E4((uint64_t)v169);
            ++a5;
          }
          while (a5 != v63);
          swift_bridgeObjectRelease();
          unint64_t v11 = v163;
          unint64_t v45 = v160;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        Class isa = sub_100222420().super.isa;
        swift_bridgeObjectRelease();
        v169[0] = 0;
        id v72 = [v45 recoverTLK:v11 trustedPeers:isa ckrecord:0 error:v169];

        id v73 = v169[0];
        if (v72)
        {
          v169[0] = 0;
          id v74 = v73;
          if ([v72 saveKeyMaterialToKeychain:v169])
          {
            id v75 = v169[0];
            id v76 = [v72 uuid];
            uint64_t v77 = sub_100222270();
            uint64_t v79 = v78;

            uint64_t v10 = (uint64_t)v72;
            uint64_t v80 = v167;
            char v81 = swift_isUniquelyReferenced_nonNull_native();
            v169[0] = v80;
            id v167 = (id)0x8000000000000000;
            sub_10018B4A8(v10, v77, v79, v81, (uint64_t *)&unk_10029EE70);
            id v167 = v169[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (__OFADD__(v157, 1))
            {
              __break(1u);
LABEL_87:
              swift_bridgeObjectRetain();
              uint64_t v36 = sub_100222970();
              if (!v36) {
                goto LABEL_88;
              }
              goto LABEL_25;
            }
            ++v157;
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v82 = sub_100222090();
            sub_100003CC8(v82, (uint64_t)qword_10029E7D0);
            id v83 = (id)v10;
            id v84 = v45;
            id v85 = v83;
            id v86 = v84;
            uint64_t v87 = sub_100222070();
            os_log_type_t v88 = sub_1002224E0();
            if (os_log_type_enabled(v87, v88))
            {
              uint64_t v89 = swift_slowAlloc();
              v169[0] = (id)swift_slowAlloc();
              *(_DWORD *)uint64_t v89 = 136446466;
              id v90 = v85;
              id v91 = [v90 description];
              uint64_t v92 = sub_100222270();
              unint64_t v94 = v93;

              v168[0] = sub_1001BEBDC(v92, v94, (uint64_t *)v169);
              sub_100222690();

              swift_bridgeObjectRelease();
              *(_WORD *)(v89 + 12) = 2082;
              id v95 = v86;
              a5 = (uint64_t)[v95 description];
              uint64_t v96 = sub_100222270();
              unint64_t v98 = v97;

              uint64_t v99 = v96;
              unint64_t v11 = v163;
              v168[0] = sub_1001BEBDC(v99, v98, (uint64_t *)v169);
              sub_100222690();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v87, v88, "Recovered %{public}s (from %{public}s", (uint8_t *)v89, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            goto LABEL_29;
          }
          id v102 = v169[0];
          uint64_t v101 = sub_100221B40();

          swift_willThrow();
        }
        else
        {
          id v100 = v169[0];
          uint64_t v101 = sub_100221B40();

          swift_willThrow();
        }
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v103 = sub_100222090();
        sub_100003CC8(v103, (uint64_t)qword_10029E7D0);
        id v104 = v45;
        swift_errorRetain();
        id v105 = v104;
        swift_errorRetain();
        uint64_t v106 = sub_100222070();
        os_log_type_t v107 = sub_100222500();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = swift_slowAlloc();
          v169[0] = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v108 = 136446466;
          id v109 = v105;
          id v110 = [v109 description];
          uint64_t v111 = sub_100222270();
          id v112 = v105;
          unint64_t v114 = v113;

          unint64_t v11 = v163;
          v168[0] = sub_1001BEBDC(v111, v114, (uint64_t *)v169);
          sub_100222690();

          id v105 = v112;
          swift_bridgeObjectRelease();
          *(_WORD *)(v108 + 12) = 2082;
          v168[0] = v101;
          swift_errorRetain();
          sub_1000046DC(&qword_100299D70);
          uint64_t v115 = sub_1002222C0();
          v168[0] = sub_1001BEBDC(v115, v116, (uint64_t *)v169);
          sub_100222690();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Failed to recover share %{public}s: %{public}s", (uint8_t *)v108, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
        }

        id v117 = [v105 tlkUUID];
        uint64_t v118 = sub_100222270();
        uint64_t v120 = v119;

        if (v164[2] && (unint64_t v121 = sub_10000AB48(v118, v120), (v122 & 1) != 0))
        {
          uint64_t v123 = *(void **)(v164[7] + 8 * v121);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          id v124 = [v105 tlkUUID];
          uint64_t v125 = sub_100222270();
          uint64_t v127 = v126;

          swift_errorRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v123 = sub_100187D80(0, v123[2] + 1, 1, v123);
          }
          unint64_t v129 = v123[2];
          unint64_t v128 = v123[3];
          a5 = v129 + 1;
          if (v129 >= v128 >> 1) {
            uint64_t v123 = sub_100187D80((void *)(v128 > 1), v129 + 1, 1, v123);
          }
          v123[2] = a5;
          v123[v129 + 4] = v101;
          char v130 = swift_isUniquelyReferenced_nonNull_native();
          v169[0] = v164;
          sub_10018B63C((uint64_t)v123, v125, v127, v130, &qword_1002995B0);
          uint64_t v164 = v169[0];
        }
        else
        {
          swift_bridgeObjectRelease();
          id v38 = [v105 tlkUUID];
          a5 = sub_100222270();
          os_log_type_t v39 = v105;
          uint64_t v41 = v40;

          sub_1000046DC(&qword_10029EE58);
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = xmmword_100229540;
          *(void *)(v42 + 32) = v101;
          swift_errorRetain();
          char v43 = swift_isUniquelyReferenced_nonNull_native();
          v169[0] = v164;
          sub_10018B63C(v42, a5, v41, v43, &qword_1002995B0);
          uint64_t v164 = v169[0];
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();
LABEL_29:
        uint64_t v36 = v159;
LABEL_30:
        uint64_t v37 = buf + 1;
        if (buf + 1 == (uint8_t *)v36) {
          goto LABEL_89;
        }
      }
    }
    break;
  }
LABEL_88:
  uint64_t v157 = 0;
LABEL_89:
  swift_bridgeObjectRelease();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v141 = sub_100222090();
  sub_100003CC8(v141, (uint64_t)qword_10029E7D0);
  uint64_t v142 = sub_100222070();
  os_log_type_t v143 = sub_1002224E0();
  if (os_log_type_enabled(v142, v143))
  {
    uint64_t v144 = (uint8_t *)swift_slowAlloc();
    v169[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v144 = 136446210;
    swift_beginAccess();
    sub_1000047D8(0, &qword_10029EE50);
    swift_bridgeObjectRetain();
    uint64_t v145 = sub_1002221E0();
    unint64_t v147 = v146;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v145, v147, (uint64_t *)v169);
    sub_100222690();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v142, v143, "Recovered TLKs: %{public}s", v144, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v148 = swift_bridgeObjectRetain();
  unint64_t v149 = sub_10018CBCC(v148);
  swift_bridgeObjectRelease();
  uint64_t v150 = swift_bridgeObjectRetain();
  sub_100119098(v150);
  id v151 = objc_allocWithZone((Class)TrustedPeersHelperTLKRecoveryResult);
  swift_bridgeObjectRetain();
  Class v152 = sub_100222420().super.isa;
  swift_bridgeObjectRelease();
  sub_1000046DC(&qword_10029EE48);
  Class v153 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  [v151 initWithSuccessfulKeyUUIDs:v152 totalTLKSharesRecovered:v157 tlkRecoveryErrors:v153];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v149;
}

void sub_100118A2C(void *a1, uint64_t a2, unint64_t a3, void **a4)
{
  NSString v8 = sub_100222260();
  *(void *)&v43[0] = 0;
  id v9 = [a1 peerWithID:v8 error:v43];

  p_vtable = VoucherMO.vtable;
  if (*(void *)&v43[0])
  {
    id v11 = *(id *)&v43[0];

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100222090();
    sub_100003CC8(v12, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain_n();
    id v13 = v11;
    unint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      *(void *)&v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a2, a3, (uint64_t *)v43);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2082;
      id v17 = v13;
      sub_1000046DC(&qword_100299D70);
      uint64_t v18 = sub_1002222C0();
      sub_1001BEBDC(v18, v19, (uint64_t *)v43);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error getting included peer (%s) from model: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      p_vtable = (void **)(VoucherMO + 24);
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_13;
  }
  if (!v9)
  {
LABEL_13:
    if (p_vtable[471] != (void *)-1) {
      swift_once();
    }
    uint64_t v38 = sub_100222090();
    sub_100003CC8(v38, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain_n();
    os_log_type_t v39 = sub_100222070();
    os_log_type_t v40 = sub_1002224E0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(void *)&v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a2, a3, (uint64_t *)v43);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "No peer for trusted ID %{public}s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  swift_bridgeObjectRetain();
  id v20 = v9;
  id v21 = [v20 permanentInfo];
  id v22 = [v21 encryptionPubKey];

  self;
  uint64_t v42 = swift_dynamicCastObjCClassUnconditional();
  id v23 = [v20 permanentInfo];
  id v24 = [v23 signingPubKey];

  self;
  uint64_t v25 = swift_dynamicCastObjCClassUnconditional();
  id v26 = objc_allocWithZone((Class)CKKSActualPeer);
  NSString v27 = sub_100222260();
  swift_bridgeObjectRelease();
  Class isa = sub_100222420().super.isa;
  id v29 = [v26 initWithPeerID:v27 encryptionPublicKey:v42 signingPublicKey:v25 viewList:isa];

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1000047D8(0, &qword_10029EE60);
  sub_1001B1ED0(&qword_10029EE68, &qword_10029EE60);
  id v30 = v29;
  sub_1002227F0();
  char v31 = *a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v31;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v31 = sub_100187E90(0, v31[2] + 1, 1, v31);
    *a4 = v31;
  }
  unint64_t v34 = v31[2];
  unint64_t v33 = v31[3];
  if (v34 >= v33 >> 1)
  {
    char v31 = sub_100187E90((void *)(v33 > 1), v34 + 1, 1, v31);
    *a4 = v31;
  }
  v31[2] = v34 + 1;
  os_log_type_t v35 = &v31[5 * v34];
  long long v36 = v43[0];
  long long v37 = v43[1];
  v35[8] = v44;
  *((_OWORD *)v35 + 2) = v36;
  *((_OWORD *)v35 + 3) = v37;
}

uint64_t sub_100119098(uint64_t a1)
{
  uint64_t result = sub_100222460();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    id v11 = (Swift::Int *)(*(void *)(a1 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1001902EC(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100119230()
{
  uint64_t result = (void *)sub_1000099A0((uint64_t)_swiftEmptyArrayStorage);
  off_10029E7E8 = result;
  return result;
}

uint64_t sub_100119258()
{
  uint64_t v0 = sub_100222550();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100222530();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = sub_100222120();
  __chkstk_darwin(v7 - 8, v8);
  sub_1000047D8(0, &qword_100298FF8);
  sub_100222100();
  v10[1] = _swiftEmptyArrayStorage;
  sub_1001A56AC(&qword_100299000, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000046DC(&qword_100299008);
  sub_1001B46CC((unint64_t *)&qword_100299010, &qword_100299008);
  sub_1002226C0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = sub_100222580();
  qword_10029E7F0 = result;
  return result;
}

void sub_1001194BC(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_100221B80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100298EC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v9 = off_10029E7E8;
  if (*((void *)off_10029E7E8 + 2) && (unint64_t v10 = sub_10000AC48(a1), (v11 & 1) != 0))
  {
    Swift::Int v12 = *(void **)(v9[7] + 8 * v10);
    swift_endAccess();
    *a2 = v12;
    id v13 = v12;
  }
  else
  {
    id v21 = a2;
    swift_endAccess();
    id v14 = objc_allocWithZone((Class)NSManagedObjectModel);
    sub_100221B60(v15);
    Swift::Int v17 = v16;
    id v18 = [v14 initWithContentsOfURL:v16];

    if (v18)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
      swift_beginAccess();
      id v19 = v18;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v22 = off_10029E7E8;
      off_10029E7E8 = (_UNKNOWN *)0x8000000000000000;
      sub_10018AEB8((uint64_t)v19, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
      off_10029E7E8 = v22;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      swift_endAccess();
      *id v21 = v19;
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1001196F4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  sub_100222840(16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  sub_100222310(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 44;
  v10._object = (void *)0xE100000000000000;
  sub_100222310(v10);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = a3;
  v11._object = a4;
  sub_100222310(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  sub_100222310(v12);
  return 0x656E6961746E6F43;
}

Swift::Int sub_1001197D4()
{
  return sub_100222B20();
}

uint64_t sub_10011985C()
{
  swift_bridgeObjectRetain();
  sub_1002222E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1002222E0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001198E0()
{
  return sub_100222B20();
}

uint64_t sub_100119964()
{
  return sub_1001196F4(*(void *)v0, *(void **)(v0 + 8), *(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100119970(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_100222A30(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_100222A30();
    }
  }
  return result;
}

id sub_100119A14()
{
  uint64_t v1 = v0;
  id v2 = [v0 egoPeerStableInfo];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_100221BF0();
  unint64_t v6 = v5;

  id v7 = [v1 egoPeerStableInfoSig];
  if (v7)
  {
    uint64_t v8 = sub_100221BF0();
    unint64_t v10 = v9;

    id v11 = objc_allocWithZone((Class)TPPeerStableInfo);
    Class isa = sub_100221BD0().super.isa;
    Class v13 = sub_100221BD0().super.isa;
    id v7 = [v11 initWithData:isa sig:v13];
    sub_100005A40(v8, v10);
    sub_100005A40(v4, v6);
  }
  else
  {
    sub_100005A40(v4, v6);
  }
  return v7;
}

uint64_t sub_100119B38()
{
  uint64_t v1 = v0;
  if (*(unsigned char *)(v0 + 40) != 1)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_100222090();
    sub_100003CC8(v3, (uint64_t)qword_10029E7D0);
    swift_retain();
    uint64_t v4 = sub_100222070();
    os_log_type_t v5 = sub_100222510();
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)unint64_t v6 = 136446210;
      uint64_t v7 = *(void *)(v1 + 24);
      unint64_t v8 = *(void *)(v1 + 32);
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v7, v8, &v14);
      sub_100222690();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Semaphore was not signaled by %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    unint64_t v9 = self;
    NSString v10 = sub_100222260();
    NSString v11 = sub_100222260();
    swift_bridgeObjectRetain();
    NSString v12 = sub_100222260();
    swift_bridgeObjectRelease();
    NSString v13 = sub_100222260();
    [v9 triggerAutoBugCaptureWithType:v10 subType:v11 subtypeContext:v12 domain:v13 events:0 payload:0 detectedProcess:0];

    _exit(1);
  }

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100119DE0()
{
  sub_100119B38();

  return _swift_deallocClassInstance(v0, 41, 7);
}

void sub_100119E14(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(v2 + 40))
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_100222090();
    sub_100003CC8(v4, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain_n();
    os_log_type_t v5 = sub_100222070();
    os_log_type_t v6 = sub_100222510();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a1, a2, &v16);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Semaphore double signaled by %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v8 = self;
    NSString v9 = sub_100222260();
    NSString v10 = sub_100222260();
    NSString v11 = sub_100222260();
    NSString v12 = sub_100222260();
    [v8 triggerAutoBugCaptureWithType:v9 subType:v10 subtypeContext:v11 domain:v12 events:0 payload:0 detectedProcess:0];

    _exit(1);
  }
  *(unsigned char *)(v2 + 40) = 1;
  uint64_t v3 = (void *)(*(void *)(v2 + 16) + OBJC_IVAR____TtC18TrustedPeersHelper9Container_operationWithSemaphore);
  *uint64_t v3 = 0;
  v3[1] = 0;
  swift_bridgeObjectRelease();
  id v14 = *(id *)(*(void *)(v2 + 16) + OBJC_IVAR____TtC18TrustedPeersHelper9Container_semaphore);
  sub_1002225B0();
}

uint64_t sub_10011A0E0()
{
  uint64_t v1 = v0;
  uint64_t v3 = *(void *)(v0 + 32);
  unint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = v3;
  if (v2 >> 60 == 15)
  {
    uint64_t v5 = sub_1001159DC(0x79654B43414D48, 0xE700000000000000);
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)(v1 + 32);
      unint64_t v8 = *(void *)(v1 + 40);
      *(void *)(v1 + 32) = v5;
      *(void *)(v1 + 40) = v6;
      uint64_t v9 = v7;
      unint64_t v10 = v8;
LABEL_11:
      sub_100039FCC(v9, v10);
      uint64_t v4 = *(void *)(v1 + 32);
      sub_10004BDEC(v4, *(void *)(v1 + 40));
      goto LABEL_12;
    }
    uint64_t v11 = sub_100222400();
    *(void *)(v11 + 16) = 32;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 32) = 0u;
    if (!SecRandomCopyBytes(kSecRandomDefault, 0x20uLL, (void *)(v11 + 32)))
    {
      uint64_t v16 = sub_10000D8C4(v11);
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      sub_100115200(v16, v18, 0x79654B43414D48, 0xE700000000000000);
      uint64_t v9 = *(void *)(v1 + 32);
      unint64_t v10 = *(void *)(v1 + 40);
      *(void *)(v1 + 32) = v16;
      *(void *)(v1 + 40) = v18;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100222090();
    sub_100003CC8(v12, (uint64_t)qword_10029E7D0);
    NSString v13 = sub_100222070();
    os_log_type_t v14 = sub_100222500();
    if (os_log_type_enabled(v13, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v15 = 67109120;
      sub_100222690();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "failed generating random bytes: %d", v15, 8u);
      swift_slowDealloc();
    }

    uint64_t v4 = 0;
  }
LABEL_12:
  sub_10004BDEC(v3, v2);
  return v4;
}

void sub_10011A8A4()
{
  uint64_t v2 = v0;
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = sub_100222260();
  id v5 = [v3 initWithEntityName:v4];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v6 = swift_allocObject();
  long long v21 = xmmword_100229540;
  *(_OWORD *)(v6 + 16) = xmmword_100229540;
  uint64_t v7 = *(void **)(v2 + 24);
  *(void *)(v6 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v6 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v6 + 32) = v7;
  id v8 = v7;
  uint64_t v9 = (void *)sub_1002224C0();
  [v5 setPredicate:v9];

  sub_1000046DC(&qword_10029EC28);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v21;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 32) = 0x444972656570;
  *(void *)(v10 + 40) = 0xE600000000000000;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v5 setPropertiesToFetch:isa];

  type metadata accessor for PeerMO();
  uint64_t v12 = sub_1002225D0();
  if (v1)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      unint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138543362;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      sub_100222690();
      *unint64_t v17 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to fetch peers: %{public}@", v16, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v23 = sub_100187FB4(0, v12 & ~(v12 >> 63), 0, (char *)&_swiftEmptyArrayStorage);
    id v18 = [v5 setFetchBatchSize:25];
    __chkstk_darwin(v18, v19);
    v20[2] = &v23;
    v20[3] = v2;
    sub_100114ACC(v5, (void (*)(void *, unsigned char *))ResetReason.rawValue.getter, 0, (void (*)(unint64_t))sub_1001B3FA0, (uint64_t)v20, (void (*)(void))type metadata accessor for PeerMO, (void (*)(void))type metadata accessor for PeerMO);
  }
}

uint64_t sub_10011AE8C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v7)
  {
    while (v7 >= 1)
    {
      uint64_t v29 = v4;
      unint64_t v30 = a3;
      uint64_t v9 = 0;
      a3 = v6 & 0xC000000000000001;
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        if (a3) {
          id v11 = (id)sub_100222880();
        }
        else {
          id v11 = *(id *)(v6 + 8 * v9 + 32);
        }
        uint64_t v12 = v11;
        id v13 = objc_msgSend(v11, "peerID", v29);
        if (v13)
        {
          os_log_type_t v14 = v13;
          unint64_t v15 = v6;
          uint64_t v16 = sub_100222270();
          uint64_t v18 = v17;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_100187FB4(0, *((void *)v10 + 2) + 1, 1, v10);
          }
          unint64_t v20 = *((void *)v10 + 2);
          unint64_t v19 = *((void *)v10 + 3);
          if (v20 >= v19 >> 1) {
            uint64_t v10 = sub_100187FB4((char *)(v19 > 1), v20 + 1, 1, v10);
          }
          *((void *)v10 + 2) = v20 + 1;
          long long v21 = &v10[16 * v20];
          *((void *)v21 + 4) = v16;
          *((void *)v21 + 5) = v18;
          unint64_t v6 = v15;
        }
        else
        {
        }
        ++v9;
      }
      while (v7 != v9);
      swift_bridgeObjectRelease();
      sub_10011B2A8((uint64_t)v10);
      uint64_t v22 = *(void **)(v30 + 16);
      swift_bridgeObjectRetain_n();
      id v23 = v22;
      uint64_t v24 = 4;
      uint64_t v25 = 0;
      if (a3)
      {
LABEL_17:
        id v26 = (id)sub_100222880();
        goto LABEL_19;
      }
      while (1)
      {
        id v26 = *(id *)(v6 + 8 * v24);
LABEL_19:
        NSString v27 = v26;
        BOOL v28 = __OFADD__(v25, 1);
        uint64_t v4 = v25 + 1;
        if (v28) {
          break;
        }
        if (([v26 hasChanges] & 1) == 0) {
          [v23 refreshObject:v27 mergeChanges:0];
        }

        if (v4 == v7)
        {

          return swift_bridgeObjectRelease_n();
        }
        uint64_t v25 = ++v24 - 4;
        if (a3) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t result = sub_100222970();
      uint64_t v7 = result;
      if (!result) {
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return sub_10011B2A8((uint64_t)&_swiftEmptyArrayStorage);
  }
  return result;
}

uint64_t sub_10011B0FC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_20;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v7 = *(void *)(v3 + 24) >> 1;
    if (v7 >= (uint64_t)(v4 + v2))
    {
      unint64_t v8 = *(void *)(a1 + 16);
      if (v8) {
        goto LABEL_5;
      }
LABEL_15:
      if (!v2) {
        goto LABEL_16;
      }
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_100222890();
  swift_bridgeObjectRelease();
  *uint64_t v1 = v3;
  uint64_t v7 = *(void *)(v3 + 24) >> 1;
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  if (v7 - v9 < (uint64_t)v8)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v10 = v3 + 8 * v9 + 32;
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_23;
  }
  sub_1000046DC(&qword_10029ED90);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(*v1 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (v13)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    uint64_t result = sub_1002229D0();
    __break(1u);
    return result;
  }
  *(void *)(*v1 + 16) = v14;
LABEL_16:
  swift_bridgeObjectRelease();

  return sub_1002223E0();
}

uint64_t sub_10011B2A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100187FB4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10011B3FC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_100222970();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100222970();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100222890();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1001927A4(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_100222970();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1002223E0();
}

uint64_t sub_10011B5C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_100187B18(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for TLKShare(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10011B82C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = sub_100222260();
  id v6 = [v4 initWithEntityName:v5];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100229540;
  uint64_t v8 = *(void **)(v2 + 24);
  *(void *)(v7 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v7 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v7 + 32) = v8;
  id v9 = v8;
  uint64_t v10 = (void *)sub_1002224C0();
  [v6 setPredicate:v10];

  type metadata accessor for PeerMO();
  uint64_t v12 = sub_1002225D0();

  if (v12 < 0)
  {
    sub_100222950();
    __break(1u);

    if (a1)
    {
      id v11 = 0;
      *a1 = 0;
    }
    else
    {
    }
    swift_errorRelease();
    return 0;
  }
  return v12;
}

void *sub_10011BC34(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)sub_1001A0BC8(*(void *)(v2 + 16), *(void **)(v2 + 24), a1, a2);
  id v4 = sub_10011C660(v3);

  sub_100114818();
  return v4;
}

void sub_10011BFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = sub_100222260();
  id v8 = [v6 initWithEntityName:v7];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100229540;
  uint64_t v10 = *(void **)(v3 + 24);
  *(void *)(v9 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v9 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v9 + 32) = v10;
  id v11 = v10;
  uint64_t v12 = (void *)sub_1002224C0();
  [v8 setPredicate:v12];

  [v8 setFetchBatchSize:25];
  v13[2] = v3;
  v13[3] = a1;
  v13[4] = a2;
  sub_100114ACC(v8, sub_1001B3F64, (uint64_t)v13, (void (*)(unint64_t))sub_1001B3F84, v3, (void (*)(void))type metadata accessor for PeerMO, (void (*)(void))type metadata accessor for PeerMO);
}

void sub_10011C1A4(void *a1, unsigned char *a2, uint64_t a3, void (*a4)(void *, char *))
{
  id v6 = sub_10011C660(a1);
  if (v6)
  {
    NSString v7 = v6;
    char v8 = 0;
    a4(v6, &v8);

    *a2 = v8;
  }
}

uint64_t sub_10011C248(unint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a2 + 16);
  sub_100114818();
  if (v2) {
    swift_errorRelease();
  }
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (i = v4; v5; uint64_t v5 = sub_100222970())
  {
    uint64_t v7 = 4;
    uint64_t v8 = 0;
    if ((a1 & 0xC000000000000001) != 0)
    {
LABEL_6:
      id v9 = (id)sub_100222880();
      goto LABEL_8;
    }
    while (1)
    {
      id v9 = *(id *)(a1 + 8 * v7);
LABEL_8:
      uint64_t v10 = v9;
      BOOL v11 = __OFADD__(v8, 1);
      uint64_t v12 = v8 + 1;
      if (v11) {
        break;
      }
      if (([v9 hasChanges] & 1) == 0) {
        [v4 refreshObject:v10 mergeChanges:0];
      }

      if (v12 == v5) {
        goto LABEL_14;
      }
      uint64_t v8 = ++v7 - 4;
      if ((a1 & 0xC000000000000001) != 0) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain_n();
    id v14 = v4;
  }
LABEL_14:

  return swift_bridgeObjectRelease_n();
}

id sub_10011C3C8(unint64_t a1, uint64_t a2, void *a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_100222970();
    uint64_t v5 = (uint64_t)result;
    uint64_t v29 = a3;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  uint64_t v29 = a3;
  if (!v5) {
    goto LABEL_17;
  }
LABEL_3:
  if (v5 < 1)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  unint64_t v31 = a1 & 0xC000000000000001;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (v31) {
      id v9 = (id)sub_100222880();
    }
    else {
      id v9 = *(id *)(a1 + 8 * v7 + 32);
    }
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, "machineID", v29);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_100222270();
      uint64_t v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_100187FB4(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v17 = *((void *)v8 + 2);
      unint64_t v16 = *((void *)v8 + 3);
      if (v17 >= v16 >> 1) {
        uint64_t v8 = sub_100187FB4((char *)(v16 > 1), v17 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v17 + 1;
      uint64_t v18 = &v8[16 * v17];
      *((void *)v18 + 4) = v13;
      *((void *)v18 + 5) = v15;
    }
    else
    {
    }
    ++v7;
  }
  while (v5 != v7);
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v8 + 2);
  if (v19)
  {
    BOOL v20 = (Swift::Int *)(v8 + 40);
    do
    {
      Swift::Int v22 = *(v20 - 1);
      Swift::Int v21 = *v20;
      swift_bridgeObjectRetain();
      sub_1001902EC(&v30, v22, v21);
      swift_bridgeObjectRelease();
      v20 += 2;
      --v19;
    }
    while (v19);
  }
  id result = (id)swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    id v23 = v29;
    uint64_t v24 = 4;
    uint64_t v25 = 0;
    if ((a1 & 0xC000000000000001) == 0) {
      goto LABEL_24;
    }
LABEL_23:
    for (id result = (id)sub_100222880(); ; id result = *(id *)(a1 + 8 * v24))
    {
      id v26 = result;
      BOOL v27 = __OFADD__(v25, 1);
      uint64_t v28 = v25 + 1;
      if (v27) {
        break;
      }
      if (([result hasChanges] & 1) == 0) {
        [v23 refreshObject:v26 mergeChanges:0];
      }

      if (v28 == v5)
      {

        return (id)swift_bridgeObjectRelease_n();
      }
      uint64_t v25 = ++v24 - 4;
      if ((a1 & 0xC000000000000001) != 0) {
        goto LABEL_23;
      }
LABEL_24:
      ;
    }
    __break(1u);
    goto LABEL_34;
  }
  return result;
}

void *sub_10011C660(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  id v2 = [v1 peerID];
  if (!v2)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100222090();
    sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
    uint64_t v24 = sub_100222070();
    os_log_type_t v25 = sub_100222500();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "DBAdapter PeerMO has no ID?", v26, 2u);
      swift_slowDealloc();
    }
    goto LABEL_17;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_100222270();
  unint64_t v6 = v5;

  id v104 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  id v7 = [v1 permanentInfo];
  if (!v7)
  {
LABEL_13:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100222090();
    sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_100222070();
    os_log_type_t v28 = sub_100222500();
    if (!os_log_type_enabled(v24, v28)) {
      goto LABEL_49;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    id v106 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446210;
    swift_bridgeObjectRetain();
    sub_1001BEBDC(v4, v6, (uint64_t *)&v106);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v24, v28, "DBAdapter peer %{public}s has no/incomplete permanent info/sig", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_17:
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_100221BF0();
  unint64_t v11 = v10;

  id v12 = [v1 permanentInfoSig];
  if (!v12)
  {
    sub_100005A40(v9, v11);
    goto LABEL_13;
  }
  uint64_t v13 = v12;
  uint64_t v103 = sub_100221BF0();
  unint64_t v15 = v14;

  uint64_t v101 = sub_10011A0E0();
  unint64_t v17 = v16;
  id v18 = [v1 hmacSig];
  unint64_t v99 = v17;
  unint64_t v100 = v15;
  unint64_t v98 = v11;
  uint64_t v102 = v4;
  id v95 = v1;
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_100221BF0();
    unint64_t v96 = v21;

    if (v17 >> 60 == 15)
    {
      sub_100005A40(v20, v96);
      uint64_t v22 = 1;
    }
    else
    {
      sub_1000059E8(v101, v17);
      v93.super.Class isa = sub_100221BD0().super.isa;
      v92.super.Class isa = sub_100221BD0().super.isa;
      id v30 = [v1 stableInfo];
      if (v30)
      {
        unint64_t v31 = v30;
        uint64_t v32 = sub_100221BF0();
        unint64_t v34 = v33;

        os_log_t log = (os_log_t)sub_100221BD0().super.isa;
        sub_100005A40(v32, v34);
      }
      else
      {
        os_log_t log = 0;
      }
      id v35 = [v1 stableInfoSig];
      if (v35)
      {
        long long v36 = v35;
        uint64_t v37 = sub_100221BF0();
        unint64_t v39 = v38;

        v89.super.Class isa = sub_100221BD0().super.isa;
        sub_100005A40(v37, v39);
      }
      else
      {
        v89.super.Class isa = 0;
      }
      id v40 = [v1 dynamicInfo];
      if (v40)
      {
        uint64_t v41 = v40;
        uint64_t v42 = sub_100221BF0();
        unint64_t v44 = v43;

        v88.super.Class isa = sub_100221BD0().super.isa;
        sub_100005A40(v42, v44);
      }
      else
      {
        v88.super.Class isa = 0;
      }
      id v45 = [v1 dynamicInfoSig];
      if (v45)
      {
        id v46 = v45;
        uint64_t v47 = v20;
        uint64_t v48 = sub_100221BF0();
        unint64_t v50 = v49;

        v94.super.Class isa = sub_100221BD0().super.isa;
        sub_100005A40(v48, v50);
      }
      else
      {
        uint64_t v47 = v20;
        v94.super.Class isa = 0;
      }
      char v51 = self;
      Class isa = sub_100221BD0().super.isa;
      Class v87 = sub_100221BD0().super.isa;
      unsigned int v85 = [v51 verifyHMACWithPermanentInfoData:v93.super.isa permanentInfoSig:v92.super.isa stableInfoData:log stableInfoSig:v89.super.isa dynamicInfoData:v88.super.isa dynamicInfoSig:v94.super.isa hmacKey:isa hmacSig:v87];
      sub_100005A40(v47, v96);
      sub_100039FCC(v101, v99);

      uint64_t v22 = v85 ^ 1;
      unint64_t v15 = v100;
      unint64_t v11 = v98;
    }
  }
  else
  {
    uint64_t v22 = 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v52 = v6;
  id v53 = v104;
  sub_1000059E8(v9, v11);
  sub_1000059E8(v103, v15);
  NSString v54 = sub_100222260();
  unint64_t v97 = v52;
  swift_bridgeObjectRelease();
  Class v55 = sub_100221BD0().super.isa;
  Class v56 = sub_100221BD0().super.isa;
  id v57 = [self permanentInfoWithPeerID:v54 data:v55 sig:v56 keyFactory:v53 checkSig:v22];
  id v104 = v53;

  sub_100005A40(v103, v15);
  sub_100005A40(v9, v11);

  if (!v57)
  {
    id v1 = v95;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_100222090();
    sub_100003CC8(v66, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_100222070();
    os_log_type_t v67 = sub_100222500();
    if (os_log_type_enabled(v24, v67))
    {
      unint64_t v68 = (uint8_t *)swift_slowAlloc();
      id v106 = (id)swift_slowAlloc();
      *(_DWORD *)unint64_t v68 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v102, v97, (uint64_t *)&v106);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v67, "DBAdapter unable to construct permanent info for peerID %{public}s", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100039FCC(v101, v99);
      uint64_t v69 = v53;
LABEL_45:

      sub_100005A40(v103, v100);
      sub_100005A40(v9, v98);
      return 0;
    }
    sub_100005A40(v9, v11);
    sub_100039FCC(v101, v99);
    sub_100005A40(v103, v100);
LABEL_49:

    swift_bridgeObjectRelease_n();
    return 0;
  }
  id v58 = sub_1001A0E10(v95);
  id v59 = sub_1001A1344(v95);
  id v60 = objc_allocWithZone((Class)TPPeer);
  id v106 = 0;
  id v61 = v57;
  id v62 = v58;
  id v63 = [v60 initWithPermanentInfo:v61 stableInfo:v62 dynamicInfo:v59 checkSig:v22 error:&v106];
  if (!v63)
  {
    id v70 = v106;
    sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_100222090();
    sub_100003CC8(v71, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v72 = sub_100222070();
    os_log_type_t v73 = sub_100222500();
    if (!os_log_type_enabled(v72, v73))
    {
      sub_100005A40(v9, v98);
      sub_100039FCC(v101, v99);
      sub_100005A40(v103, v100);

      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      return 0;
    }
    loga = v72;
    uint64_t v74 = swift_slowAlloc();
    id v75 = (void *)swift_slowAlloc();
    id v106 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v74 = 136446466;
    swift_bridgeObjectRetain();
    sub_1001BEBDC(v102, v97, (uint64_t *)&v106);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v74 + 12) = 2114;
    swift_errorRetain();
    uint64_t v105 = _swift_stdlib_bridgeErrorToNSError();
    sub_100222690();
    *id v75 = v105;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, loga, v73, "DBAdapter unable to init for peerID %{public}s): %{public}@", (uint8_t *)v74, 0x16u);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100039FCC(v101, v99);
    swift_errorRelease();

    uint64_t v69 = v59;
    goto LABEL_45;
  }
  uint64_t v64 = v63;
  id v65 = v106;
  swift_bridgeObjectRelease();

  if (v22)
  {
    if (v99 >> 60 != 15)
    {
      sub_10004BDEC(v101, v99);
      id v78 = v64;
      Class v79 = sub_100221BD0().super.isa;
      id v80 = [v78 calculateHmacWithHmacKey:v79];

      uint64_t v81 = sub_100221BF0();
      unint64_t v83 = v82;

      Class v84 = sub_100221BD0().super.isa;
      [v95 setHmacSig:v84];
      sub_100005A40(v9, v98);
      sub_100039FCC(v101, v99);
      sub_100005A40(v103, v100);

      sub_100005A40(v81, v83);
      sub_100039FCC(v101, v99);
      return v64;
    }
    [v95 setHmacSig:0];
    sub_100005A40(v9, v98);
    sub_100005A40(v103, v100);
  }
  else
  {
    id v76 = v64;
    sub_100005A40(v9, v98);
    sub_100039FCC(v101, v99);
    sub_100005A40(v103, v100);
  }
  return v64;
}

uint64_t sub_10011D408(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = sub_100222260();
  id v8 = [v6 initWithEntityName:v7];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100229540;
  unint64_t v10 = *(void **)(v3 + 24);
  *(void *)(v9 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v9 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v9 + 32) = v10;
  id v11 = v10;
  id v12 = (void *)sub_1002224C0();
  [v8 setPredicate:v12];

  [v8 setFetchBatchSize:50];
  uint64_t v13 = *(void **)(v3 + 16);
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  v17[2] = sub_1001B3F1C;
  v17[3] = v14;
  id v15 = v13;
  sub_100114ACC(v8, sub_1001B3F00, (uint64_t)v18, (void (*)(unint64_t))sub_1001B3F24, (uint64_t)v17, (void (*)(void))type metadata accessor for VoucherMO, (void (*)(void))type metadata accessor for VoucherMO);

  return swift_release();
}

void sub_10011D638(void *a1, unsigned char *a2, void (*a3)(id, char *))
{
  char v21 = 0;
  id v5 = a1;
  id v6 = [v5 voucherInfo];
  if (!v6) {
    goto LABEL_6;
  }
  NSString v7 = v6;
  uint64_t v8 = sub_100221BF0();
  unint64_t v10 = v9;

  id v11 = [v5 voucherInfoSig];
  if (!v11)
  {
    sub_100005A40(v8, v10);
LABEL_6:

    return;
  }
  id v12 = v11;
  uint64_t v19 = a3;
  uint64_t v20 = a2;
  uint64_t v13 = sub_100221BF0();
  unint64_t v15 = v14;

  Class isa = sub_100221BD0().super.isa;
  Class v17 = sub_100221BD0().super.isa;
  id v18 = [self voucherInfoWithData:isa sig:v17];
  sub_100005A40(v13, v15);
  sub_100005A40(v8, v10);

  if (v18)
  {
    v19(v18, &v21);

    *uint64_t v20 = v21;
  }
}

uint64_t sub_10011D7D8(void *a1, void *a2)
{
  sub_1000059A4(a1, a1[3]);
  *(void *)(swift_allocObject() + 16) = a2;
  id v3 = a2;
  sub_100222390();
  return swift_release();
}

uint64_t sub_10011D888(uint64_t a1, void (*a2)(void *))
{
  v5[3] = sub_1000046DC(&qword_10029EF00);
  v5[4] = sub_1001B46CC(&qword_10029EF08, &qword_10029EF00);
  v5[0] = a1;
  swift_bridgeObjectRetain();
  a2(v5);
  return sub_100004788((uint64_t)v5);
}

uint64_t sub_10011D960(int a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  unint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  swift_retain();
  a7(a6, v10);
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_10011DA3C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = sub_100222260();
  id v6 = [v4 initWithEntityName:v5];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100229540;
  uint64_t v8 = *(void **)(v2 + 24);
  *(void *)(v7 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v7 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v7 + 32) = v8;
  id v9 = v8;
  uint64_t v10 = (void *)sub_1002224C0();
  [v6 setPredicate:v10];

  type metadata accessor for VoucherMO();
  uint64_t v12 = sub_1002225D0();

  if (v12 < 0)
  {
    sub_100222950();
    __break(1u);

    if (a1)
    {
      id v11 = 0;
      *a1 = 0;
    }
    else
    {
    }
    swift_errorRelease();
    return 0;
  }
  return v12;
}

uint64_t sub_10011DE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_retain();
  uint64_t v6 = a4(a3);
  swift_release();
  return v6;
}

unint64_t sub_10011DE98(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = sub_100222260();
  id v8 = [v6 initWithEntityName:v7];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100229380;
  uint64_t v10 = *(void **)(v3 + 24);
  *(void *)(v9 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v9 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 96) = &type metadata for Int64;
  *(void *)(v9 + 104) = &protocol witness table for Int64;
  if (a1 < 0)
  {
    __break(1u);
    swift_once();
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    id v17 = v10;
    id v18 = sub_100222070();
    os_log_type_t v19 = sub_100222500();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      id v40 = v8;
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134349314;
      sub_100222690();
      *(_WORD *)(v20 + 12) = 2082;
      id v21 = v17;
      uint64_t v22 = a2;
      id v23 = [v21 description];
      uint64_t v24 = sub_100222270();
      unint64_t v26 = v25;

      a2 = v22;
      sub_1001BEBDC(v24, v26, &v41);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to fetch policy for version %{public}llu: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      id v8 = v40;
      swift_slowDealloc();
      swift_slowDealloc();

      if (a2)
      {
LABEL_5:
        id v27 = v17;
        *a2 = v17;
LABEL_16:

        swift_errorRelease();
        return 0;
      }
    }
    else
    {

      if (a2) {
        goto LABEL_5;
      }
    }

    goto LABEL_16;
  }
  *(void *)(v9 + 72) = a1;
  id v11 = v10;
  uint64_t v12 = (void *)sub_1002224C0();
  [v8 setPredicate:v12];

  sub_1000046DC(&qword_10029EC28);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100229380;
  *(void *)(v13 + 32) = 0x61447963696C6F70;
  *(void *)(v13 + 40) = 0xEA00000000006174;
  *(void *)(v13 + 88) = &type metadata for String;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = 0x61487963696C6F70;
  *(void *)(v13 + 72) = 0xEA00000000006873;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v8 setPropertiesToFetch:isa];

  [v8 setFetchLimit:1];
  type metadata accessor for PolicyMO();
  unint64_t result = sub_1002225E0();
  unint64_t v28 = result;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_23:

    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_100222970();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_23;
  }
LABEL_8:
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v29 = (id)sub_100222880();
    goto LABEL_11;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v29 = *(id *)(v28 + 32);
LABEL_11:
    id v30 = v29;
    swift_bridgeObjectRelease();
    id v31 = [v30 policyHash];
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = [v30 policyData];
      if (v33)
      {
        uint64_t v34 = sub_100221BF0();
        unint64_t v36 = v35;

        uint64_t v37 = self;
        Class v38 = sub_100221BD0().super.isa;
        id v33 = [v37 policyDocWithHash:v32 data:v38];

        sub_100005A40(v34, v36);
      }
      else
      {
      }
      return (unint64_t)v33;
    }

    return 0;
  }
  __break(1u);
  return result;
}

void sub_10011E4E8()
{
  uint64_t v2 = v0;
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = sub_100222260();
  id v5 = [v3 initWithEntityName:v4];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100229540;
  NSString v7 = *(void **)(v2 + 24);
  *(void *)(v6 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v6 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v6 + 32) = v7;
  id v8 = v7;
  uint64_t v9 = (void *)sub_1002224C0();
  [v5 setPredicate:v9];

  sub_1000046DC(&qword_10029EC28);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100229380;
  *(void *)(v10 + 32) = 0x6E6F6973726576;
  *(void *)(v10 + 40) = 0xE700000000000000;
  *(void *)(v10 + 88) = &type metadata for String;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = 0x61487963696C6F70;
  *(void *)(v10 + 72) = 0xEA00000000006873;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v5 setPropertiesToFetch:isa];

  type metadata accessor for PolicyMO();
  unint64_t v12 = sub_1002225E0();
  if (!v1)
  {
    unint64_t v19 = v12;
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_100222970();
      if (v20) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20)
      {
LABEL_7:
        id v33 = v5;
        uint64_t v21 = 4;
        while (1)
        {
          id v5 = (id)(v21 - 4);
          if ((v19 & 0xC000000000000001) != 0) {
            id v22 = (id)sub_100222880();
          }
          else {
            id v22 = *(id *)(v19 + 8 * v21);
          }
          id v23 = v22;
          uint64_t v24 = v21 - 3;
          if (__OFADD__(v5, 1))
          {
            __break(1u);
            goto LABEL_24;
          }
          id v25 = [v22 policyHash];
          if (v25)
          {
            unint64_t v26 = v25;
            uint64_t v27 = v20;
            sub_100222270();

            unint64_t v28 = (unint64_t)[v23 version];
            if ((v28 & 0x8000000000000000) != 0)
            {
              sub_100222950();
              __break(1u);
              return;
            }
            unint64_t v29 = v28;
            id v30 = objc_allocWithZone((Class)TPPolicyVersion);
            NSString v31 = sub_100222260();
            swift_bridgeObjectRelease();
            id v32 = [v30 initWithVersion:v29 hash:v31];

            uint64_t v20 = v27;
            if (v32)
            {
              sub_1002223A0();
              if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1002223F0();
              }
              sub_100222410();
              sub_1002223E0();
            }
          }
          else
          {
          }
          ++v21;
          if (v24 == v20)
          {
            swift_bridgeObjectRelease();
            id v5 = v33;
            goto LABEL_27;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    sub_1001A0974((unint64_t)&_swiftEmptyArrayStorage);

    swift_bridgeObjectRelease();
    return;
  }
  if (qword_100298EB8 != -1) {
LABEL_24:
  }
    swift_once();
  uint64_t v13 = sub_100222090();
  sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v14 = sub_100222070();
  os_log_type_t v15 = sub_100222500();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    id v17 = v5;
    id v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 138543362;
    swift_errorRetain();
    uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
    sub_100222690();
    *id v18 = v34;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to fetch policies: %{public}@", v16, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    id v5 = v17;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
}

uint64_t sub_10011EBD0()
{
  sub_100039FCC(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_10011EC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v104 = a5;
  uint64_t v105 = a8;
  uint64_t v100 = a4;
  uint64_t v90 = a3;
  uint64_t v99 = a2;
  uint64_t v89 = a1;
  uint64_t v11 = sub_1000046DC(&qword_100299D58);
  __chkstk_darwin(v11 - 8, v12);
  unint64_t v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100221B80();
  uint64_t v16 = *(void **)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  id v106 = (char *)&v84 - v22;
  uint64_t v23 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_semaphore;
  uint64_t v24 = v8;
  dispatch_semaphore_t v25 = dispatch_semaphore_create(1);
  id v95 = v8;
  uint64_t v94 = v23;
  *(void *)&v8[v23] = v25;
  unint64_t v26 = &v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_operationWithSemaphore];
  *(void *)unint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  NSData v92 = v26;
  uint64_t v93 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride;
  *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride] = 0;
  v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_testIgnoreCustodianUpdates] = 0;
  v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_testDontSetAccountSetting] = 0;
  *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_tlkSharesBatch] = 1000;
  v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_egoMachineIDVanished] = 0;
  v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_midVanishedFromTDL] = 0;
  v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_testHashMismatchDetected] = 0;
  uint64_t v27 = swift_allocObject();
  uint64_t v107 = v27;
  *(void *)(v27 + 16) = 0;
  uint64_t v103 = (void *)(v27 + 16);
  id v117 = 0;
  uint64_t v118 = 0;
  uint64_t v116 = 0;
  *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_darwinNotifier] = a6;
  uint64_t v91 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_managedConfigurationAdapter;
  *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_managedConfigurationAdapter] = a7;
  uint64_t v28 = (uint64_t)v24;
  swift_getObjectType();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v30 = self;
  uint64_t v98 = a7;
  swift_unknownObjectRetain();
  id v31 = [v30 bundleForClass:ObjCClassFromMetadata];
  uint64_t v101 = (uint64_t (*)())&unk_1002313F0;
  NSString v32 = sub_100222260();
  NSString v33 = sub_100222260();
  id v34 = [v31 URLForResource:v32 withExtension:v33];

  if (!v34) {
    goto LABEL_24;
  }
  sub_100221B70();

  unint64_t v35 = (void (*)(char *, char *, uint64_t))v16[4];
  v35(v14, v20, v15);
  ((void (*)(char *, void, uint64_t, uint64_t))v16[7])(v14, 0, 1, v15);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v16[6])(v14, 1, v15);
  if (result == 1)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v97 = v16;
  uint64_t v37 = v106;
  uint64_t v96 = v15;
  uint64_t v38 = ((uint64_t (*)(char *, char *, uint64_t))v35)(v106, v14, v15);
  uint64_t v15 = v28;
  if (qword_100298EC8 != -1) {
    uint64_t v38 = swift_once();
  }
  __chkstk_darwin(v38, v39);
  *(&v84 - 2) = (uint64_t)v37;
  sub_1000047D8(0, (unint64_t *)&unk_10029EB50);
  uint64_t v40 = v102;
  sub_100222560();
  uint64_t v102 = v40;
  uint64_t v41 = aBlock;
  id v42 = objc_allocWithZone((Class)NSPersistentContainer);
  unint64_t v43 = v41;
  NSString v44 = sub_100222260();
  id v45 = [v42 initWithName:v44 managedObjectModel:v43];

  unint64_t v14 = (char *)OBJC_IVAR____TtC18TrustedPeersHelper9Container_persistentContainer;
  *(void *)(v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_persistentContainer) = v45;
  sub_1000046DC(&qword_1002995D8);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1002311B0;
  id v47 = v104;
  *(void *)(v46 + 32) = v104;
  aBlock = (void **)v46;
  sub_1002223E0();
  sub_1000047D8(0, (unint64_t *)&unk_10029EB60);
  id v48 = v45;
  id v104 = v47;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v48 setPersistentStoreDescriptions:isa];

  unint64_t v50 = *(void **)&v14[v15];
  uint64_t v16 = [v50 newBackgroundContext];
  uint64_t v51 = v107;
  unint64_t v114 = sub_10018CADC;
  uint64_t v115 = v107;
  aBlock = _NSConcreteStackBlock;
  uint64_t v111 = 1107296256;
  id v112 = sub_10011FA70;
  unint64_t v113 = &unk_100283990;
  unint64_t v52 = _Block_copy(&aBlock);
  id v53 = v50;
  swift_retain();
  swift_release();
  [v53 loadPersistentStoresWithCompletionHandler:v52];
  _Block_release(v52);

  NSString v54 = v103;
  swift_beginAccess();
  if (!*(void *)(v51 + 16))
  {
    NSData v88 = v14;
    uint64_t v101 = 0;
    uint64_t v103 = 0;
    goto LABEL_11;
  }
  swift_errorRetain();
  Class v55 = (void *)sub_100221B30();
  if (!sub_1001144BC())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();

    swift_unknownObjectRelease();
    sub_100004788(v105);
    ((void (*)(char *, uint64_t))v97[1])(v106, v96);
    swift_release();

    id v62 = 0;
    goto LABEL_14;
  }
  uint64_t v101 = (uint64_t (*)())v55;
  uint64_t v108 = 0;
  Class v56 = (void *)swift_allocObject();
  id v57 = v104;
  v56[2] = v104;
  v56[3] = v16;
  v56[4] = v54;
  v56[5] = &v108;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_10018CB88;
  *(void *)(v58 + 24) = v56;
  uint64_t v103 = v56;
  unint64_t v114 = sub_10018CBA4;
  uint64_t v115 = v58;
  aBlock = _NSConcreteStackBlock;
  uint64_t v111 = 1107296256;
  id v112 = sub_100112F58;
  unint64_t v113 = &unk_100283A08;
  id v59 = _Block_copy(&aBlock);
  id v60 = v57;
  id v61 = v16;
  swift_retain();
  swift_release();
  [v61 performBlockAndWait:v59];
  _Block_release(v59);
  LOBYTE(v59) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v59)
  {
    __break(1u);
LABEL_24:
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v16[7])(v14, 1, 1, v15);
    goto LABEL_25;
  }
  if (v108)
  {
    swift_errorRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRelease();

    swift_unknownObjectRelease();
    sub_100004788(v105);
    ((void (*)(char *, uint64_t))v97[1])(v106, v96);
    swift_errorRelease();
    swift_release();

    id v62 = sub_10018CB88;
LABEL_14:
    uint64_t v71 = v118;
    swift_release();

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    type metadata accessor for Container();
    swift_deallocPartialClassInstance();
    sub_10018CB38((uint64_t)v62);
    return v15;
  }
  id v85 = v60;
  id v86 = v61;
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = 0;
  NSData v88 = v14;
  uint64_t v81 = *(void **)&v14[v15];
  unint64_t v114 = sub_10018CADC;
  uint64_t v115 = v80;
  aBlock = _NSConcreteStackBlock;
  uint64_t v111 = 1107296256;
  id v112 = sub_10011FA70;
  unint64_t v113 = &unk_100283A30;
  unint64_t v82 = _Block_copy(&aBlock);
  id v83 = v81;
  uint64_t v87 = v80;
  swift_retain();
  swift_release();
  [v83 loadPersistentStoresWithCompletionHandler:v82];
  _Block_release(v82);

  swift_beginAccess();
  if (*(void *)(v80 + 16))
  {
    swift_errorRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRelease();

    swift_unknownObjectRelease();
    sub_100004788(v105);
    ((void (*)(char *, uint64_t))v97[1])(v106, v96);
    swift_release();
    swift_errorRelease();
    swift_release();

    id v62 = sub_10018CB88;
    unint64_t v14 = v88;
    goto LABEL_14;
  }
  swift_errorRelease();
  swift_release();

  swift_errorRelease();
  uint64_t v101 = sub_10018CB88;
LABEL_11:
  uint64_t v63 = v99;
  id v64 = [self mergeByPropertyStoreTrumpMergePolicy];
  [v16 setMergePolicy:v64];

  __chkstk_darwin(v65, v66);
  uint64_t v67 = v89;
  *(&v84 - 8) = v89;
  *(&v84 - 7) = v63;
  uint64_t v68 = v90;
  uint64_t v69 = v100;
  *(&v84 - 6) = v90;
  *(&v84 - 5) = v69;
  *(&v84 - 4) = (uint64_t)v16;
  *(&v84 - 3) = (uint64_t)&v118;
  *(&v84 - 2) = (uint64_t)&v117;
  *(&v84 - 1) = (uint64_t)&v116;
  uint64_t v70 = v102;
  uint64_t result = sub_1002225C0();
  if (v70)
  {

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100004788(v105);
    ((void (*)(char *, uint64_t))v97[1])(v106, v96);
    swift_release();

    unint64_t v14 = v88;
    id v62 = v101;
    goto LABEL_14;
  }
  id v72 = (void *)(v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name);
  *id v72 = v67;
  v72[1] = v63;
  v72[2] = v68;
  v72[3] = v69;
  *(void *)(v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc) = v16;
  os_log_type_t v73 = v118;
  if (!v118) {
    goto LABEL_26;
  }
  *(void *)(v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) = v118;
  uint64_t result = sub_100065B18(v105, v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish);
  id v74 = v117;
  if (!v117)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(void *)(v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model) = v117;
  if (v116)
  {
    *(void *)(v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_dbAdapter) = v116;
    *(void *)(v15 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_escrowCacheTimeout) = 0x408C200000000000;
    id v75 = v16;
    id v76 = v73;
    id v77 = v74;
    swift_retain();

    id v78 = (objc_class *)type metadata accessor for Container();
    v109.receiver = (id)v15;
    v109.super_class = v78;
    uint64_t v15 = (uint64_t)objc_msgSendSuper2(&v109, "init");

    swift_unknownObjectRelease();
    sub_100004788(v105);
    ((void (*)(char *, uint64_t))v97[1])(v106, v96);
    swift_release();

    Class v79 = v118;
    swift_release();

    sub_10018CB38((uint64_t)v101);
    return v15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_10011FA70(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_10011FAFC(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_1000046DC(&qword_100299D58);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100221B80();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)v38 - v19;
  id v21 = [a1 URL];
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    return sub_10004015C((uint64_t)v11, &qword_100299D58);
  }
  uint64_t v22 = v21;
  v38[0] = a4;
  sub_100221B70();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v23(v11, v17, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_10004015C((uint64_t)v11, &qword_100299D58);
  }
  v23(v20, v11, v12);
  id v24 = [a2 persistentStoreCoordinator];
  if (v24)
  {
    unint64_t v26 = v24;
    sub_100221B60(v25);
    uint64_t v28 = v27;
    NSString v29 = [a1 type];
    if (!v29)
    {
      sub_100222270();
      NSString v29 = sub_100222260();
      swift_bridgeObjectRelease();
    }
    sub_1000095FC((uint64_t)_swiftEmptyArrayStorage);
    Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    v39[0] = 0;
    unsigned int v31 = [v26 destroyPersistentStoreAtURL:v28 withType:v29 options:isa error:v39];

    NSString v32 = (uint64_t *)v38[0];
    if (!v31)
    {
      id v36 = v39[0];
      uint64_t v37 = sub_100221B40();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
      *NSString v32 = v37;
      return swift_errorRelease();
    }
    NSString v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    id v34 = v39[0];
    v33(v20, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
  }
  swift_beginAccess();
  *a3 = 0;
  return swift_errorRelease();
}

uint64_t sub_10011FEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 16) = a2;
  swift_errorRetain();
  return swift_errorRelease();
}

void sub_10011FF20(id *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, id *a6, void **a7, void *a8)
{
  id v14 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v15 = sub_100222260();
  id v69 = [v14 initWithEntityName:v15];

  sub_1000046DC(&qword_100299578);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100229540;
  BOOL v18 = sub_100222270() == a3 && v17 == a4;
  uint64_t v67 = a3;
  if (v18)
  {
    uint64_t v19 = a6;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = a6;
    char v20 = sub_100222A30();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      uint64_t v70 = a1;
      uint64_t v71 = a2;
      swift_bridgeObjectRetain();
      v72._countAndFlagsBits = 45;
      v72._object = (void *)0xE100000000000000;
      sub_100222310(v72);
      swift_bridgeObjectRetain();
      v73._countAndFlagsBits = v67;
      v73._object = a4;
      sub_100222310(v73);
      swift_bridgeObjectRelease();
      uint64_t v22 = a1;
      uint64_t v21 = a2;
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = a1;
  uint64_t v21 = a2;
LABEL_9:
  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  *(void *)(v16 + 56) = &type metadata for String;
  *(void *)(v16 + 64) = sub_10000D794();
  *(void *)(v16 + 32) = v22;
  *(void *)(v16 + 40) = v21;
  uint64_t v23 = (void *)sub_1002224C0();
  [v69 setPredicate:v23];

  [v69 setFetchLimit:1];
  type metadata accessor for ContainerMO();
  unint64_t v24 = sub_1002225E0();
  if (v8)
  {

    return;
  }
  unint64_t v25 = v24;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_100222970();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v27 = v19;
  uint64_t v28 = a5;
  if (!v26)
  {
    swift_bridgeObjectRelease();
    id v35 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:a5];
    id v36 = *v27;
    *uint64_t v27 = v35;

    id v37 = *v27;
    if (!*v27)
    {
      __break(1u);
      goto LABEL_58;
    }
    if (sub_100222270() == v67 && v38 == a4)
    {
      id v39 = v37;
      swift_bridgeObjectRelease();
    }
    else
    {
      char v64 = sub_100222A30();
      id v40 = v37;
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0)
      {
        uint64_t v70 = a1;
        uint64_t v71 = a2;
        swift_bridgeObjectRetain();
        v74._countAndFlagsBits = 45;
        v74._object = (void *)0xE100000000000000;
        sub_100222310(v74);
        swift_bridgeObjectRetain();
        v75._countAndFlagsBits = v67;
        v75._object = a4;
        sub_100222310(v75);
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
LABEL_29:
    NSString v43 = sub_100222260();
    swift_bridgeObjectRelease();
    [v37 setName:v43];

    uint64_t v70 = 0;
    unsigned int v44 = [a5 save:&v70];
    unint64_t v25 = (unint64_t)v70;
    if (!v44)
    {
LABEL_32:
      uint64_t v46 = (id *)(id)v25;
      sub_100221B40();

      swift_willThrow();
LABEL_33:

      return;
    }
    id v45 = v70;
    id v32 = *v27;
    if (*v27) {
      goto LABEL_18;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((v25 & 0xC000000000000001) != 0)
  {
    id v29 = (id)sub_100222880();
  }
  else
  {
    if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_100222970();
      swift_bridgeObjectRelease();
      if (!v57) {
        goto LABEL_44;
      }
      goto LABEL_40;
    }
    id v29 = *(id *)(v25 + 32);
  }
  id v30 = v29;
  swift_bridgeObjectRelease();
  id v31 = *v27;
  *uint64_t v27 = v30;

  id v32 = *v27;
  if (!*v27) {
    goto LABEL_31;
  }
LABEL_18:
  id v33 = v32;
  sub_1001F6148(v33, a5);

  if (!*v27)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  id v34 = *v27;
  sub_1001F63A4(v34, a5);

  id v41 = *v27;
  if (!*v27) {
    goto LABEL_59;
  }
  type metadata accessor for Container();
  id v42 = v41;
  sub_1002045BC(v42, a5);

  if (!*v27) {
    goto LABEL_60;
  }
  id v47 = *v27;
  sub_1001A21AC(v47, (uint64_t)a5);

  if (!*v27)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  id v48 = *v27;
  unint64_t v49 = sub_1001A2C34(a5, v48, 0, 0xF000000000000000);
  uint64_t v51 = v50;

  unint64_t v52 = *a7;
  *a7 = v49;

  *a8 = v51;
  swift_release();
  if (!*v27)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  id v53 = *a7;
  if (!*a7)
  {
LABEL_63:
    __break(1u);
    return;
  }
  id v54 = *v27;
  id v55 = v53;
  sub_1001A4ECC(v54, v55);

  sub_100114818();
  [a5 reset];
  uint64_t v28 = v69;
  unint64_t v56 = sub_1002225E0();
  unint64_t v25 = v56;
  if (v56 >> 62) {
    goto LABEL_52;
  }
  uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v57) {
    goto LABEL_44;
  }
LABEL_40:
  if ((v25 & 0xC000000000000001) != 0)
  {
    id v58 = (id)sub_100222880();
  }
  else
  {
    if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_56;
    }
    id v58 = *(id *)(v25 + 32);
  }
  uint64_t v57 = (uint64_t)v58;
LABEL_44:
  swift_bridgeObjectRelease();
  id v59 = *v27;
  *uint64_t v27 = (id)v57;

  if (*v27) {
    goto LABEL_33;
  }
  uint64_t v28 = v69;
  if (qword_100298EB8 != -1) {
LABEL_56:
  }
    swift_once();
  uint64_t v60 = sub_100222090();
  sub_100003CC8(v60, (uint64_t)qword_10029E7D0);
  id v61 = sub_100222070();
  os_log_type_t v62 = sub_100222500();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v63 = 0;
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "containerMO could not be fetched again?", v63, 2u);
    swift_slowDealloc();
  }
}

void sub_1001206BC(void *a1, uint64_t a2)
{
  uint64_t v65 = &_swiftEmptySetSingleton;
  unint64_t v64 = (unint64_t)&_swiftEmptySetSingleton;
  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v6 = sub_100222260();
  id v7 = [v5 initWithEntityName:v6];

  [v7 setFetchBatchSize:5];
  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100229540;
  *(void *)(v8 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v8 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v8 + 32) = a1;
  id v9 = a1;
  uint64_t v10 = (void *)sub_1002224C0();
  [v7 setPredicate:v10];

  type metadata accessor for PolicyMO();
  uint64_t v11 = sub_1002225D0();
  if (v2)
  {

    return;
  }
  Swift::Int v12 = v11;
  sub_1000046DC(&qword_10029EBB0);
  sub_100222470(v12);
  __chkstk_darwin(v13, v14);
  v56[2] = a2;
  v56[3] = &v65;
  v56[4] = &v64;
  sub_100114ACC(v7, (void (*)(void *, unsigned char *))sub_1001A56F8, (uint64_t)v56, (void (*)(unint64_t))ResetReason.rawValue.getter, 0, (void (*)(void))type metadata accessor for PolicyMO, (void (*)(void))type metadata accessor for PolicyMO);
  NSString v15 = (void *)v64;
  if ((v64 & 0xC000000000000001) == 0)
  {
    uint64_t v27 = *(void *)(v64 + 16);
    id v59 = v9;
    uint64_t v60 = a2;
    if (v27) {
      goto LABEL_7;
    }
LABEL_11:
    uint64_t v62 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100222750();
  swift_bridgeObjectRelease();
  id v59 = v9;
  uint64_t v60 = a2;
  if (!v16) {
    goto LABEL_11;
  }
LABEL_7:
  id v17 = v9;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_100113300(v18, v17);
  swift_bridgeObjectRelease_n();
  unint64_t v64 = (unint64_t)&_swiftEmptySetSingleton;
  sub_100114818();
  uint64_t v62 = 0;
  NSString v15 = &_swiftEmptySetSingleton;
LABEL_12:
  uint64_t v28 = sub_10003981C((uint64_t *)&v65);
  uint64_t v29 = v28[2];
  if (!v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_4;
  }
  id v57 = v7;
  id v58 = v15;
  uint64_t v26 = 0;
  uint64_t v30 = 0;
  do
  {
    uint64_t v31 = (uint64_t)(v26 + 1);
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    BOOL v32 = __OFADD__(v30, 5);
    v30 += 5;
    if (v32) {
      uint64_t v30 = 0x7FFFFFFFFFFFFFFFLL;
    }
    ++v26;
  }
  while (v30 < v29);
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_10018D11C(0, v31 & ~(v31 >> 63), 0);
  if (v31 < 0)
  {
    __break(1u);
    return;
  }
  id v33 = v63;
  if (!v31)
  {
LABEL_37:
    id v61 = v28 + 4;
    uint64_t v40 = v31;
    while (1)
    {
      uint64_t v26 = (char *)(v40 + 5);
      if (__OFADD__(v40, 5)) {
        goto LABEL_62;
      }
      if (v29 >= (uint64_t)v26) {
        uint64_t v41 = v40 + 5;
      }
      else {
        uint64_t v41 = v29;
      }
      if (v41 < v40) {
        goto LABEL_63;
      }
      if (v31 < 0) {
        goto LABEL_64;
      }
      unint64_t v42 = v28[2];
      if (v42 < v40 || (uint64_t)v42 < v41) {
        goto LABEL_65;
      }
      uint64_t v63 = v33;
      unint64_t v45 = v33[2];
      unint64_t v44 = v33[3];
      swift_bridgeObjectRetain();
      if (v45 >= v44 >> 1)
      {
        sub_10018D11C(v44 > 1, v45 + 1, 1);
        id v33 = v63;
      }
      v33[2] = v45 + 1;
      uint64_t v46 = &v33[4 * v45];
      id v47 = v61;
      v46[4] = v28;
      v46[5] = v47;
      v46[6] = v40;
      v46[7] = (2 * v41) | 1;
      v40 += 5;
      if ((uint64_t)v26 >= v29) {
        goto LABEL_51;
      }
    }
  }
  uint64_t v31 = 0;
  while (v31 < (unint64_t)v29)
  {
    if (v31 == 0x7FFFFFFFFFFFFFFDLL) {
      goto LABEL_67;
    }
    if (v29 >= v31 + 5) {
      uint64_t v34 = v31 + 5;
    }
    else {
      uint64_t v34 = v29;
    }
    if (v34 < v31) {
      goto LABEL_68;
    }
    unint64_t v35 = v28[2];
    if (v35 < v31 || (uint64_t)v35 < v34) {
      goto LABEL_69;
    }
    uint64_t v63 = v33;
    unint64_t v38 = v33[2];
    unint64_t v37 = v33[3];
    swift_bridgeObjectRetain();
    if (v38 >= v37 >> 1)
    {
      sub_10018D11C(v37 > 1, v38 + 1, 1);
      id v33 = v63;
    }
    v33[2] = v38 + 1;
    id v39 = &v33[4 * v38];
    v39[4] = v28;
    v39[5] = v28 + 4;
    v39[6] = v31;
    v39[7] = (2 * v34) | 1;
    v31 += 5;
    if (!--v26)
    {
      if (v31 < v29) {
        goto LABEL_37;
      }
LABEL_51:
      swift_bridgeObjectRelease();
      uint64_t v48 = v33[2];
      if (v48)
      {
        swift_retain();
        unint64_t v49 = v33 + 7;
        while (1)
        {
          uint64_t v50 = *(v49 - 1);
          unint64_t v51 = *v49;
          uint64_t v53 = *(v49 - 3);
          uint64_t v52 = *(v49 - 2);
          swift_unknownObjectRetain();
          uint64_t v55 = v62;
          sub_100121270(v53, v52, v50, v51, v60, v59);
          uint64_t v62 = v55;
          if (v55) {
            break;
          }
          swift_unknownObjectRelease();
          v49 += 4;
          if (!--v48)
          {

            swift_release_n();
            goto LABEL_59;
          }
        }
        swift_bridgeObjectRelease();

        swift_release_n();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_release();

LABEL_59:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  swift_once();
  uint64_t v19 = sub_100222090();
  sub_100003CC8(v19, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  char v20 = sub_100222070();
  os_log_type_t v21 = sub_100222500();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138543362;
    swift_errorRetain();
    unint64_t v24 = v26;
    uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v63 = (void *)v25;
    sub_100222690();
    *uint64_t v23 = v25;
    uint64_t v26 = v24;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to save built-in policies to DB: %{public}@", v22, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_bridgeObjectRelease();
LABEL_4:
  swift_bridgeObjectRelease();
}

id sub_100120E64(void *a1, uint64_t a2, void *a3, uint64_t *a4)
{
  void (*v22)(id *__return_ptr, uint64_t);
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id result;
  char v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  void *v48;
  id v49;

  id v7 = [a1 policyHash];
  if (!v7)
  {
LABEL_17:
    uint64_t result = [a1 hasChanges];
    if (result) {
      return result;
    }
    return [a3 refreshObject:a1 mergeChanges:0];
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_100222270();
  uint64_t v11 = v10;
  id v12 = [a1 policyData];
  if (!v12)
  {
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }
  uint64_t v13 = v12;
  uint64_t v48 = a3;
  id v47 = a4;
  uint64_t v14 = sub_100221BF0();
  unint64_t v16 = v15;

  id v17 = self;
  Class isa = sub_100221BD0().super.isa;
  id v19 = [v17 policyDocWithHash:v8 data:isa];

  if (!v19)
  {
    sub_100005A40(v14, v16);
    swift_bridgeObjectRelease();
    a3 = v48;
    goto LABEL_17;
  }
  unint64_t v45 = v14;
  uint64_t v46 = v16;
  id v20 = a1;
  uint64_t v21 = sub_100039FE0(v20);

  if (*(void *)(v21 + 16))
  {
    unint64_t v44 = v19;
    uint64_t v22 = *(void (**)(id *__return_ptr, uint64_t))(v21 + 32);
    swift_retain();
    uint64_t v23 = swift_bridgeObjectRelease();
    v22(&v49, v23);
    swift_release();
    unint64_t v24 = v49;
    uint64_t v25 = [v49 version];

    uint64_t v26 = [v25 policyHash];
    uint64_t v27 = sub_100222270();
    uint64_t v29 = v28;

    if (v27 == v9 && v29 == v11)
    {
      uint64_t v30 = v20;
      swift_bridgeObjectRelease_n();
      BOOL v32 = v45;
      uint64_t v31 = v46;
      id v33 = v44;
    }
    else
    {
      uint64_t v30 = v20;
      unint64_t v37 = sub_100222A30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v32 = v45;
      uint64_t v31 = v46;
      id v33 = v44;
      if ((v37 & 1) == 0) {
        goto LABEL_14;
      }
    }
    unint64_t v38 = *v47;
    swift_bridgeObjectRetain();
    id v39 = [v33 version];
    uint64_t v40 = [v39 versionNumber];

    LOBYTE(v39) = sub_1000394B8((uint64_t)v40, v38);
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
      uint64_t v41 = [v33 version];
      unint64_t v42 = v33;
      NSString v43 = [v41 versionNumber];

      sub_10019075C((uint64_t *)&v49, (uint64_t)v43);
      sub_100005A40(v32, v31);

      goto LABEL_16;
    }
LABEL_14:
    sub_10019049C(&v49, v30, (void (*)(void))type metadata accessor for PolicyMO, &qword_10029EBF8, (void (*)(void))type metadata accessor for PolicyMO, (void (*)(void))type metadata accessor for PolicyMO);
    sub_100005A40(v32, v31);

LABEL_16:
    a3 = v48;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = [v19 version];
  unint64_t v35 = [v34 versionNumber];

  sub_10019075C((uint64_t *)&v49, (uint64_t)v35);
  sub_100005A40(v45, v16);

  uint64_t result = [v20 hasChanges];
  a3 = v48;
  if ((result & 1) == 0) {
    return [a3 refreshObject:a1 mergeChanges:0];
  }
  return result;
}

uint64_t sub_100121270(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  void (*v16)(void **__return_ptr);
  void *v17;
  void *v18;
  id v19;
  id v20;
  unint64_t v21;
  id v22;
  id v23;
  char **v24;
  NSString v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  objc_class *v39;
  void *v41;
  void *v42;

  uint64_t v7 = v6;
  int64_t v9 = a4 >> 1;
  if (a4 >> 1 != a3)
  {
    type metadata accessor for PolicyMO();
    uint64_t result = swift_getObjCClassFromMetadata();
    id v39 = (objc_class *)result;
    uint64_t v13 = v9 - a3;
    if (v9 <= a3)
    {
      __break(1u);
      return result;
    }
    swift_unknownObjectRetain();
    uint64_t v14 = a2 + 16 * a3 + 8;
    unint64_t v15 = &selRef_aessivkey;
    unint64_t v38 = a5;
    while (1)
    {
      unint64_t v16 = *(void (**)(void **__return_ptr))(v14 - 8);
      swift_retain_n();
      v16(&v42);
      uint64_t v18 = v42;
      id v19 = [objc_allocWithZone(v39) initWithContext:a5];
      id v20 = [v18 v15[299]];
      uint64_t v21 = (unint64_t)[v20 versionNumber];

      if ((v21 & 0x8000000000000000) != 0) {
        break;
      }
      [v19 setVersion:v21];
      uint64_t v22 = [v18 v15[299]];
      uint64_t v23 = [v22 policyHash];

      sub_100222270();
      uint64_t v41 = v17;
      unint64_t v24 = v15;

      uint64_t v25 = sub_100222260();
      swift_bridgeObjectRelease();
      [v19 setPolicyHash:v25];

      uint64_t v26 = [v18 protobuf];
      uint64_t v27 = sub_100221BF0();
      uint64_t v29 = v28;

      Class isa = sub_100221BD0().super.isa;
      uint64_t v31 = v27;
      unint64_t v15 = v24;
      sub_100005A40(v31, v29);
      [v19 setPolicyData:isa];

      [a6 addPoliciesObject:v19];
      swift_release_n();
      v14 += 16;
      --v13;
      a5 = v38;
      if (!v13)
      {
        swift_unknownObjectRelease();
        uint64_t v7 = v6;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_15:
    swift_once();
    goto LABEL_9;
  }
LABEL_7:
  uint64_t result = (uint64_t)sub_100114818();
  if (!v7) {
    return result;
  }
  if (qword_100298EB8 != -1) {
    goto LABEL_15;
  }
LABEL_9:
  BOOL v32 = sub_100222090();
  sub_100003CC8(v32, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v33 = sub_100222070();
  uint64_t v34 = sub_100222500();
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v35 = (uint8_t *)swift_slowAlloc();
    id v36 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v35 = 138543362;
    swift_errorRetain();
    unint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
    unint64_t v42 = (void *)v37;
    sub_100222690();
    *id v36 = v37;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Unable to save built-in policies to DB: %{public}@", v35, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_10012165C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  uint64_t v3 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  [v2 deleteObject:*(void *)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO)];
  type metadata accessor for ContainerMO();
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v2];
  id v5 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = v4;

  uint64_t v6 = *(void **)(v0 + v3);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16);
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24);
  if (v8 == sub_100222270() && v7 == v9)
  {
    id v13 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_100222A30();
    id v12 = v6;
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v26._countAndFlagsBits = 45;
      v26._object = (void *)0xE100000000000000;
      sub_100222310(v26);
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = v8;
      v27._object = v7;
      sub_100222310(v27);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
LABEL_9:
  NSString v14 = sub_100222260();
  swift_bridgeObjectRelease();
  [v6 setName:v14];

  uint64_t v15 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_dbAdapter;
  id v16 = *(id *)(v0 + v3);
  swift_retain();
  uint64_t v17 = sub_10011A0E0();
  unint64_t v19 = v18;
  swift_release();
  id v20 = sub_1001A2C34(v2, v16, v17, v19);
  uint64_t v22 = v21;
  sub_100039FCC(v17, v19);

  uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  *(void *)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model) = v20;

  *(void *)(v1 + v15) = v22;

  return swift_release();
}

id sub_10012187C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000046DC((uint64_t *)&unk_10029F0C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229380;
  strcpy((char *)(inited + 32), "permanentInfo");
  *(_WORD *)(inited + 46) = -4864;
  id v4 = [a1 permanentInfo];
  id v5 = [v4 dictionaryRepresentation];

  uint64_t v6 = sub_1002221D0();
  uint64_t v7 = sub_1000046DC(&qword_10029F0A8);
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = 0x444972656570;
  *(void *)(inited + 88) = 0xE600000000000000;
  id v8 = [a1 peerID];
  uint64_t v9 = sub_100222270();
  uint64_t v11 = v10;

  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 104) = v11;
  unint64_t v12 = sub_10000939C(inited);
  unint64_t v29 = v12;
  id v13 = [a1 stableInfo];
  if (v13)
  {
    NSString v14 = v13;
    id v15 = [v13 dictionaryRepresentation];
    uint64_t v16 = sub_1002221D0();

    uint64_t v28 = v7;
    *(void *)&long long v27 = v16;
    sub_100005A98(&v27, v26);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10018A6E4(v26, 0x6E49656C62617473, 0xEA00000000006F66, isUniquelyReferenced_nonNull_native);
    unint64_t v29 = v12;
    swift_bridgeObjectRelease();
    if ((SecIsInternalRelease() & 1) == 0)
    {
      sub_10000A6EC(0x6E5F6C6169726573, 0xED00007265626D75, &v27);
      sub_10004015C((uint64_t)&v27, &qword_100299EA0);
      sub_10000A6EC(0x6E5F656369766564, 0xEB00000000656D61, &v27);
      sub_10004015C((uint64_t)&v27, &qword_100299EA0);
    }
  }
  id result = objc_msgSend(a1, "dynamicInfo", a2);
  if (result)
  {
    unint64_t v19 = result;
    id v20 = [result dictionaryRepresentation];
    uint64_t v21 = sub_1002221D0();

    uint64_t v28 = v7;
    *(void *)&long long v27 = v21;
    sub_100005A98(&v27, v26);
    unint64_t v22 = v29;
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_10018A6E4(v26, 0x4963696D616E7964, 0xEB000000006F666ELL, v23);

    id result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v22 = v29;
  }
  *uint64_t v25 = v22;
  return result;
}

void sub_100121BE0(void (*a1)(id, uint64_t), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  v116[0] = 0;
  id v8 = [v7 viablePeerCountsByModelIDWithError:v116];
  id v9 = v116[0];
  if (!v8)
  {
    id v33 = v116[0];
    uint64_t v34 = sub_100221B40();

    swift_willThrow();
    unint64_t v35 = sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
    sub_100122A88(v34, 0xD000000000000019, 0x8000000100245370, v35, a1);
LABEL_11:
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return;
  }
  uint64_t v10 = v8;
  sub_1000047D8(0, &qword_10029EEF8);
  uint64_t v11 = sub_1002221D0();
  id v12 = v9;

  id v13 = *(void **)(v3 + v6);
  v116[0] = 0;
  id v14 = [v13 peerCountsByMachineIDWithError:v116];
  id v15 = v116[0];
  if (!v14)
  {
    id v36 = v116[0];
    uint64_t v37 = sub_100221B40();

    swift_willThrow();
    sub_100122A88(v37, 0xD000000000000015, 0x8000000100245390, v11, a1);
    goto LABEL_11;
  }
  uint64_t v16 = v14;
  uint64_t v17 = sub_1002221D0();
  id v18 = v15;

  id v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (v19)
  {
    id v20 = v19;
    uint64_t v112 = a2;
    v110._countAndFlagsBits = sub_100222270();
    v110._object = v21;
    unint64_t v22 = *(void **)(v3 + v6);
    v116[0] = 0;
    id v23 = [v22 peerWithID:v20 error:v116];
    unint64_t v24 = v23;
    unint64_t v114 = a1;
    uint64_t v107 = v11;
    uint64_t v111 = v17;
    if (v116[0])
    {
      id v25 = v116[0];

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_100222090();
      sub_100003CC8(v26, (uint64_t)qword_10029E7D0);
      id v27 = v25;
      uint64_t v28 = sub_100222070();
      os_log_type_t v29 = sub_100222500();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v108 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 138543362;
        id v31 = v27;
        BOOL v32 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v116[0] = v32;
        sub_100222690();
        *uint64_t v108 = v32;
        a1 = v114;

        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Error getting ego peer from model: %{public}@", v30, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v109 = 0;
      unint64_t v24 = 0;
      uint64_t v11 = v107;
    }
    else if (v23)
    {
      id v109 = [v23 permanentInfo];
    }
    else
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v93 = sub_100222090();
      sub_100003CC8(v93, (uint64_t)qword_10029E7D0);
      uint64_t v94 = sub_100222070();
      os_log_type_t v95 = sub_100222500();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v96 = 0;
        _os_log_impl((void *)&_mh_execute_header, v94, v95, "Couldn't find ego peer in model", v96, 2u);
        swift_slowDealloc();
      }

      id v109 = 0;
      unint64_t v24 = 0;
    }
    uint64_t v51 = swift_allocObject();
    uint64_t v52 = *(void **)(v3 + v6);
    v116[0] = 0;
    id v53 = v52;
    id v54 = [v53 statusOfPeerWithID:v20 error:v116];

    id v55 = v116[0];
    if (v116[0])
    {
      uint64_t v105 = v24;
      id v56 = v116[0];
      uint64_t v104 = (uint64_t)v55;
      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_100222090();
      sub_100003CC8(v57, (uint64_t)qword_10029E7D0);
      id v106 = v56;
      id v58 = sub_100222070();
      os_log_type_t v59 = sub_100222500();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        id v61 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 138543362;
        uint64_t v62 = v106;
        uint64_t v63 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v116[0] = v63;
        sub_100222690();
        void *v61 = v63;

        _os_log_impl((void *)&_mh_execute_header, v58, v59, "error calling statusOfPeer: %{public}@", v60, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v58 = v106;
      }

      if (v109)
      {
        id v70 = [v109 machineID];
        sub_100222270();
        uint64_t v72 = v71;
      }
      else
      {
        uint64_t v72 = 0;
      }
      NSString v73 = sub_100222260();
      swift_bridgeObjectRelease();
      if (v72)
      {
        NSString v74 = sub_100222260();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v74 = 0;
      }
      id v75 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
      Class isa = sub_1002221C0().super.isa;
      swift_bridgeObjectRelease();
      Class v77 = sub_1002221C0().super.isa;
      swift_bridgeObjectRelease();
      LOBYTE(v103) = 0;
      id v78 = [v75 initWithEgoPeerID:v73 egoPeerMachineID:v74 status:32 viablePeerCountsByModelID:isa peerCountsByMachineID:v77 isExcluded:0 isLocked:v103];

      Class v79 = v106;
      v114(v78, v104);

      swift_release();
    }
    else
    {
      *(void *)(v51 + 16) = v54;
      uint64_t v64 = swift_allocObject();
      *(unsigned char *)(v64 + 16) = v54 == (id)4;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = v64;
      *(void *)(v65 + 24) = v51;
      *(Swift::String *)(v65 + 32) = v110;
      *(void *)(v65 + 48) = v109;
      *(void *)(v65 + 56) = v11;
      *(void *)(v65 + 64) = v111;
      *(void *)(v65 + 72) = a1;
      *(void *)(v65 + 80) = v112;
      strcpy((char *)v116, "signing-key ");
      BYTE5(v116[1]) = 0;
      HIWORD(v116[1]) = -5120;
      sub_100222310(v110);
      uint64_t v66 = v24;
      id v67 = v116[0];
      id v68 = v116[1];
      id v69 = v109;
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_10019ED6C((uint64_t)v67, (uint64_t)v68, (void (*)(char *, uint64_t))sub_1001B81E0, v65, v110._countAndFlagsBits, v110._object);
      swift_retain();

      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    unint64_t v38 = *(void **)(v3 + v6);
    v116[0] = 0;
    unsigned int v39 = [v38 hasAnyPeersWithError:v116];
    id v40 = v116[0];
    if (v116[0])
    {
      id v41 = v116[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v115 = a1;
      uint64_t v42 = sub_100222090();
      sub_100003CC8(v42, (uint64_t)qword_10029E7D0);
      NSString v43 = v41;
      unint64_t v44 = sub_100222070();
      os_log_type_t v45 = sub_100222500();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        id v47 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 138543362;
        id v113 = v40;
        uint64_t v48 = v43;
        unint64_t v49 = v43;
        uint64_t v50 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v116[0] = v50;
        sub_100222690();
        *id v47 = v50;

        NSString v43 = v48;
        id v40 = v113;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "error calling hasAnyPeers: %{public}@", v46, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        unint64_t v44 = v43;
      }

      sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
      sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
      id v88 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
      Class v89 = sub_1002221C0().super.isa;
      swift_bridgeObjectRelease();
      Class v90 = sub_1002221C0().super.isa;
      swift_bridgeObjectRelease();
      LOBYTE(v103) = 0;
      id v91 = [v88 initWithEgoPeerID:0 egoPeerMachineID:0 status:32 viablePeerCountsByModelID:v89 peerCountsByMachineID:v90 isExcluded:0 isLocked:v103];

      NSData v92 = v43;
      v115(v91, (uint64_t)v40);
    }
    else
    {
      if (v39)
      {
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v80 = sub_100222090();
        sub_100003CC8(v80, (uint64_t)qword_10029E7D0);
        uint64_t v81 = sub_100222070();
        os_log_type_t v82 = sub_1002224E0();
        if (os_log_type_enabled(v81, v82))
        {
          id v83 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v83 = 0;
          _os_log_impl((void *)&_mh_execute_header, v81, v82, "Existing peers in account, but we don't have a peer ID. We are excluded.", v83, 2u);
          swift_slowDealloc();
        }

        id v84 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
        v85.super.Class isa = sub_1002221C0().super.isa;
        swift_bridgeObjectRelease();
        v86.super.Class isa = sub_1002221C0().super.isa;
        swift_bridgeObjectRelease();
        LOBYTE(v103) = 0;
        id v87 = [v84 initWithEgoPeerID:0 egoPeerMachineID:0 status:4 viablePeerCountsByModelID:v85.super.isa peerCountsByMachineID:v86.super.isa isExcluded:1 isLocked:v103];
      }
      else
      {
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v97 = sub_100222090();
        sub_100003CC8(v97, (uint64_t)qword_10029E7D0);
        uint64_t v98 = sub_100222070();
        os_log_type_t v99 = sub_1002224E0();
        if (os_log_type_enabled(v98, v99))
        {
          uint64_t v100 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v100 = 0;
          _os_log_impl((void *)&_mh_execute_header, v98, v99, "No existing peers in account", v100, 2u);
          swift_slowDealloc();
        }

        id v101 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
        v85.super.Class isa = sub_1002221C0().super.isa;
        swift_bridgeObjectRelease();
        v86.super.Class isa = sub_1002221C0().super.isa;
        swift_bridgeObjectRelease();
        LOBYTE(v103) = 0;
        id v87 = [v101 initWithEgoPeerID:0 egoPeerMachineID:0 status:32 viablePeerCountsByModelID:v85.super.isa peerCountsByMachineID:v86.super.isa isExcluded:0 isLocked:v103];
      }
      uint64_t v102 = v87;

      a1(v102, 0);
    }
  }
}

void sub_100122A88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v10 = sub_100222070();
  os_log_type_t v11 = sub_100222500();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    id v13 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    sub_1001BEBDC(a2, a3, &v20);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    sub_100222690();
    *id v13 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "error calling %s: %{public}@", (uint8_t *)v12, 0x16u);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_bridgeObjectRetain();
  sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
  id v14 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
  sub_1000047D8(0, &qword_10029EEF8);
  Class isa = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  Class v16 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  LOBYTE(v18) = 0;
  id v17 = [v14 initWithEgoPeerID:0 egoPeerMachineID:0 status:32 viablePeerCountsByModelID:isa peerCountsByMachineID:v16 isExcluded:0 isLocked:v18];

  a5(v17, a1);
}

void sub_100122DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, id a7, int a8, uint64_t a9, void (*a10)(id, uint64_t), uint64_t a11)
{
  id v11 = a7;
  uint64_t v12 = (unsigned __int8 *)(a3 + 16);
  id v75 = (uint64_t *)(a4 + 16);
  if (a2)
  {
    NSString v73 = (unsigned __int8 *)(a3 + 16);
    uint64_t v77 = a2;
    id v13 = (void *)sub_100221B30();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100222090();
    sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
    id v15 = v13;
    Class v16 = sub_100222070();
    os_log_type_t v17 = sub_100222500();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      v80[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v19 = v15;
      id v20 = [v19 description];
      uint64_t v21 = sub_100222270();
      unint64_t v23 = v22;

      sub_1001BEBDC(v21, v23, v80);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "trust status: Unable to load ego keys: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    if ([v15 code] == (id)-25300)
    {
      id v26 = [v15 domain];
      uint64_t v27 = sub_100222270();
      uint64_t v29 = v28;

      if (v27 == sub_100222270() && v29 == v30)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
      char v31 = sub_100222A30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_15:
        BOOL v32 = sub_100222070();
        os_log_type_t v33 = sub_1002224E0();
        id v34 = a7;
        if (os_log_type_enabled(v32, v33))
        {
          unint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v35 = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "trust status: Lost the ego key pair, returning 'excluded' in hopes of fixing up the identity", v35, 2u);
          swift_slowDealloc();
          id v36 = v15;
        }
        else
        {
          id v36 = v32;
          BOOL v32 = v15;
        }

        unint64_t v49 = v73;
        swift_beginAccess();
        unsigned __int8 *v73 = 1;
        swift_beginAccess();
        *id v75 = 4;
        swift_errorRetain();
        char v72 = 0;
        if (!a7) {
          goto LABEL_36;
        }
LABEL_35:
        id v51 = [v34 machineID];
        sub_100222270();
        id v34 = v52;

LABEL_36:
        swift_beginAccess();
        uint64_t v53 = *v75;
        swift_beginAccess();
        uint64_t v54 = *v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v55 = sub_100222260();
        swift_bridgeObjectRelease();
        if (v34)
        {
          NSString v56 = sub_100222260();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v56 = 0;
        }
        id v57 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
        sub_1000047D8(0, &qword_10029EEF8);
        Class isa = sub_1002221C0().super.isa;
        swift_bridgeObjectRelease();
        Class v59 = sub_1002221C0().super.isa;
        swift_bridgeObjectRelease();
        LOBYTE(v71) = v72;
        id v60 = [v57 initWithEgoPeerID:v55 egoPeerMachineID:v56 status:v53 viablePeerCountsByModelID:isa peerCountsByMachineID:v59 isExcluded:v54 isLocked:v71];

        a10(v60, v77);
        swift_errorRelease();
LABEL_44:

        return;
      }
    }
    id v34 = a7;
    if ([v15 code] == (id)-25308)
    {
      id v37 = [v15 domain];
      uint64_t v38 = sub_100222270();
      uint64_t v40 = v39;

      if (v38 == sub_100222270() && v40 == v41)
      {
        swift_bridgeObjectRelease_n();

LABEL_32:
        uint64_t v77 = 0;
        char v72 = 1;
        goto LABEL_34;
      }
      char v50 = sub_100222A30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v50) {
        goto LABEL_32;
      }
    }
    else
    {
    }
    swift_errorRetain();
    char v72 = 0;
LABEL_34:
    unint64_t v49 = v73;
    if (!a7) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a1)
  {
    if (a7)
    {
      id v24 = [a7 machineID];
      sub_100222270();
      id v11 = v25;
    }
    swift_beginAccess();
    uint64_t v78 = *v75;
    swift_beginAccess();
    unsigned int v76 = *v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v61 = sub_100222260();
    swift_bridgeObjectRelease();
    if (v11)
    {
      NSString v62 = sub_100222260();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v62 = 0;
    }
    id v63 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
    sub_1000047D8(0, &qword_10029EEF8);
    Class v64 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    Class v65 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    LOBYTE(v71) = 0;
    id v60 = [v63 initWithEgoPeerID:v61 egoPeerMachineID:v62 status:v78 viablePeerCountsByModelID:v64 peerCountsByMachineID:v65 isExcluded:v76 isLocked:v71];

    a10(v60, 0);
    goto LABEL_44;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_100222090();
  sub_100003CC8(v42, (uint64_t)qword_10029E7D0);
  NSString v43 = sub_100222070();
  os_log_type_t v44 = sub_1002224E0();
  if (os_log_type_enabled(v43, v44))
  {
    os_log_type_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "trust status: No error but Ego Peer Keys are nil", v45, 2u);
    swift_slowDealloc();
  }

  if (v11)
  {
    id v46 = [v11 machineID];
    sub_100222270();
    uint64_t v48 = v47;
  }
  else
  {
    uint64_t v48 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v66 = sub_100222260();
  swift_bridgeObjectRelease();
  if (v48)
  {
    NSString v67 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v67 = 0;
  }
  id v68 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
  sub_1000047D8(0, &qword_10029EEF8);
  Class v69 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  Class v70 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  LOBYTE(v71) = 0;
  id v79 = [v68 initWithEgoPeerID:v66 egoPeerMachineID:v67 status:4 viablePeerCountsByModelID:v69 peerCountsByMachineID:v70 isExcluded:1 isLocked:v71];

  a10(v79, 0);
}

uint64_t sub_100123818(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  if (a2) {
    os_log_type_t v7 = sub_100222500();
  }
  else {
    os_log_type_t v7 = sub_1002224F0();
  }
  os_log_type_t v8 = v7;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
  id v10 = a1;
  swift_errorRetain();
  id v11 = v10;
  swift_errorRetain();
  uint64_t v12 = sub_100222070();
  if (os_log_type_enabled(v12, v8))
  {
    id v20 = a4;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    [v11 egoStatus];
    id v14 = (id)TPPeerStatusToString();
    uint64_t v15 = sub_100222270();
    unint64_t v17 = v16;

    sub_1001BEBDC(v15, v17, &v21);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v22._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v22);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v18 = 0x203A726F727265;
    }
    else
    {
      uint64_t v18 = 0x73736563637573;
    }
    a4 = v20;
    sub_1001BEBDC(v18, 0xE700000000000000, &v21);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v8, "trustStatus complete: %{public}s %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD000000000000013, 0x8000000100244B20);
  return a4(v11, a2);
}

void sub_100123B2C(char *a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  id v6 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] changeToken];
  if (v6)
  {

    sub_100121BE0(a2, a3);
  }
  else
  {
    os_log_type_t v7 = (void *)swift_allocObject();
    _OWORD v7[2] = a2;
    v7[3] = a3;
    v7[4] = a1;
    swift_retain();
    os_log_type_t v8 = a1;
    sub_100175500(0, (uint64_t)sub_1001B3EB4, (uint64_t)v7);
    swift_release();
  }
}

void sub_100123C04(void *a1, uint64_t a2, objc_class *a3, objc_class *a4)
{
  if (!a1)
  {
    id v6 = *(void **)((char *)a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    os_log_type_t v8 = swift_allocObject();
    v8[2].Class isa = a4;
    v8[3].Class isa = (Class)a2;
    v8[4].Class isa = a3;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_1001B3EC4;
    *(void *)(a2 + 24) = v8;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_1002854E8;
    id v14 = _Block_copy(aBlock);
    uint64_t v15 = a4;
    swift_retain();
    swift_retain();
    swift_release();
    [v6 performBlockAndWait:v14];
    _Block_release(v14);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  id v6 = a1;
  swift_errorRetain();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v8 = sub_100222070();
  os_log_type_t v9 = sub_100222500();
  if (!os_log_type_enabled(v8, v9))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    goto LABEL_9;
  }
  id v10 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)id v10 = 136446210;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v11 = sub_1002222C0();
  sub_1001BEBDC(v11, v12, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unable to fetch changes, trust status is unknown: %{public}s", v10, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  swift_errorRelease();
LABEL_9:
  sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
  sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
  id v17 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
  sub_1000047D8(0, &qword_10029EEF8);
  Class isa = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  Class v19 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  LOBYTE(v21) = 0;
  id v20 = [v17 initWithEgoPeerID:0 egoPeerMachineID:0 status:32 viablePeerCountsByModelID:isa peerCountsByMachineID:v19 isExcluded:0 isLocked:v21];

  ((void (*)(id, void *))a2)(v20, v6);
}

uint64_t sub_10012401C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  id v6 = *(void **)&v2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v2;
  v7[3] = sub_1001B80F0;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1001B813C;
  *(void *)(v8 + 24) = v7;
  v13[4] = sub_1001B8924;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100286F78;
  os_log_type_t v9 = _Block_copy(v13);
  swift_retain();
  id v10 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  [v6 performBlockAndWait:v9];
  swift_release();
  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001241D0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  if (a3) {
    os_log_type_t v8 = sub_100222500();
  }
  else {
    os_log_type_t v8 = sub_1002224E0();
  }
  os_log_type_t v9 = v8;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100222090();
  sub_100003CC8(v10, (uint64_t)qword_10029E7D0);
  id v11 = a1;
  swift_errorRetain();
  id v12 = v11;
  swift_errorRetain();
  uint64_t v13 = sub_100222070();
  if (os_log_type_enabled(v13, v9))
  {
    uint64_t v20 = a2;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446466;
    id v15 = v12;
    sub_1000046DC(&qword_10029F108);
    uint64_t v16 = sub_1002222D0();
    sub_1001BEBDC(v16, v17, &v21);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    if (a3)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v22._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v22);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v18 = 0x203A726F727265;
    }
    else
    {
      uint64_t v18 = 0x73736563637573;
    }
    sub_1001BEBDC(v18, 0xE700000000000000, &v21);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v9, "fetch trust state complete: %{public}s %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v20;
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  return a4(a1, a2, a3);
}

void sub_1001244B8(char *a1, void (*a2)(id, void *, void))
{
  uint64_t v4 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v5 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v5) {
    goto LABEL_12;
  }
  id v6 = v5;
  uint64_t v7 = sub_100222270();
  unint64_t v9 = v8;
  id v10 = [*(id *)&a1[v4] egoPeerPermanentInfo];
  if (!v10)
  {
    swift_bridgeObjectRelease();

LABEL_12:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_100222090();
    sub_100003CC8(v50, (uint64_t)qword_10029E7D0);
    id v51 = sub_100222070();
    os_log_type_t v52 = sub_1002224E0();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "No peer ID => no trusted peers", v53, 2u);
      swift_slowDealloc();
    }

    id v184 = [objc_allocWithZone((Class)TrustedPeersHelperPeerState) initWithPeerID:0 isPreapproved:0 status:32 memberChanges:0 unknownMachineIDs:0 osVersion:0 walrus:0 webAccess:0];
    a2(v184, _swiftEmptyArrayStorage, 0);

    return;
  }
  id v11 = v10;
  uint64_t v12 = sub_100221BF0();
  unint64_t v14 = v13;

  id v15 = [*(id *)&a1[v4] egoPeerPermanentInfoSig];
  if (!v15)
  {

    sub_100005A40(v12, v14);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v16 = v15;
  id v183 = a2;
  uint64_t v174 = a1;
  uint64_t v17 = sub_100221BF0();
  unint64_t v19 = v18;

  id v20 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  swift_bridgeObjectRetain();
  sub_1000059E8(v12, v14);
  sub_1000059E8(v17, v19);
  uint64_t v168 = v7;
  NSString v21 = sub_100222260();
  swift_bridgeObjectRelease();
  unint64_t v22 = v14;
  Class isa = sub_100221BD0().super.isa;
  unint64_t v24 = v9;
  Class v25 = sub_100221BD0().super.isa;
  uint64_t v180 = v20;
  id v26 = [self permanentInfoWithPeerID:v21 data:isa sig:v25 keyFactory:v20];
  uint64_t v178 = v17;
  unint64_t v179 = v19;
  sub_100005A40(v17, v19);
  uint64_t v181 = v12;
  unint64_t v182 = v22;
  sub_100005A40(v12, v22);

  if (v26)
  {
    unint64_t v170 = v24;
    uint64_t v27 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    id v28 = *(id *)&v174[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    id v29 = objc_msgSend(objc_msgSend(v26, "signingPubKey"), "spki");
    swift_unknownObjectRelease();
    uint64_t v30 = sub_100221BF0();
    unint64_t v32 = v31;

    Class v33 = sub_100221BD0().super.isa;
    sub_100005A40(v30, v32);
    v187[0] = 0;
    unsigned int v34 = [v28 hasPotentiallyTrustedPeerPreapprovingKey:v33 error:v187];

    id v35 = v187[0];
    long long v173 = v26;
    if (v187[0])
    {
      id v36 = v187[0];
      swift_bridgeObjectRelease();

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_100222090();
      sub_100003CC8(v37, (uint64_t)qword_10029E7D0);
      uint64_t v38 = v36;
      uint64_t v39 = sub_100222070();
      os_log_type_t v40 = sub_100222500();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 138543362;
        NSString v43 = v38;
        os_log_type_t v44 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v187[0] = v44;
        sub_100222690();
        *uint64_t v42 = v44;

        os_log_type_t v45 = v40;
        id v46 = (void (*)(void, void, id))v183;
        _os_log_impl((void *)&_mh_execute_header, v39, v45, "fetchTrustState: error calling hasPotentiallyTrustedPeerPreapprovingKey %{public}@", v41, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v48 = v181;
        unint64_t v47 = v182;
        unint64_t v49 = v179;
      }
      else
      {

        uint64_t v39 = v38;
        uint64_t v48 = v181;
        unint64_t v47 = v182;
        unint64_t v49 = v19;
        id v46 = (void (*)(void, void, id))v183;
      }

      uint64_t v77 = v38;
      v46(0, 0, v35);

      sub_100005A40(v178, v49);
      sub_100005A40(v48, v47);
      return;
    }
    unsigned int v166 = v34;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100222090();
    sub_100003CC8(v60, (uint64_t)qword_10029E7D0);
    NSString v61 = sub_100222070();
    os_log_type_t v62 = sub_1002224E0();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v163 = v27;
      id v63 = (uint8_t *)swift_slowAlloc();
      Class v64 = (void *)swift_slowAlloc();
      *(_DWORD *)id v63 = 136446210;
      v187[0] = v64;
      if (v34) {
        uint64_t v65 = 0x6F72707061657270;
      }
      else {
        uint64_t v65 = 0xD000000000000013;
      }
      if (v34) {
        unint64_t v66 = 0xEB00000000646576;
      }
      else {
        unint64_t v66 = 0x8000000100244C70;
      }
      uint64_t v186 = sub_1001BEBDC(v65, v66, (uint64_t *)v187);
      sub_100222690();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "fetchTrustState: ego peer is %{public}s", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v27 = v163;
      swift_slowDealloc();
    }

    NSString v67 = *(void **)&v174[v27];
    v187[0] = 0;
    id v68 = [v67 getStableInfoForPeerWithID:v6 error:v187];
    id v69 = v187[0];
    if (v187[0])
    {
      id v70 = v187[0];

      swift_willThrow();
      id v71 = v70;
      swift_bridgeObjectRetain();
      id v72 = v71;
      NSString v73 = sub_100222070();
      os_log_type_t v74 = sub_100222500();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = swift_slowAlloc();
        unint64_t v175 = (void *)swift_slowAlloc();
        v187[0] = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v75 = 136315394;
        swift_bridgeObjectRetain();
        sub_1001BEBDC(v168, v170, (uint64_t *)v187);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v75 + 12) = 2114;
        id v76 = v72;
        uint64_t v186 = _swift_stdlib_bridgeErrorToNSError();
        sub_100222690();
        *unint64_t v175 = v186;

        _os_log_impl((void *)&_mh_execute_header, v73, v74, "fetchTrustState: error calling getStableInfoForPeer %s: %{public}@", (uint8_t *)v75, 0x16u);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v90 = v72;
      ((void (*)(void, void, id))v183)(0, 0, v69);
      sub_100005A40(v181, v182);
      sub_100005A40(v178, v179);

      return;
    }
    uint64_t v78 = *(void **)&v174[v27];
    v187[0] = 0;
    id v79 = [v78 statusOfPeerWithID:v6 error:v187];
    id v80 = v187[0];
    if (v187[0])
    {
      id v81 = v187[0];
      swift_bridgeObjectRelease();

      swift_willThrow();
      os_log_type_t v82 = v81;
      id v83 = sub_100222070();
      os_log_type_t v84 = sub_100222500();
      if (os_log_type_enabled(v83, v84))
      {
        NSDictionary v85 = (uint8_t *)swift_slowAlloc();
        uint64_t v176 = (void *)swift_slowAlloc();
        *(_DWORD *)NSDictionary v85 = 138543362;
        NSDictionary v86 = v82;
        id v87 = v82;
        id v88 = v68;
        Class v89 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v187[0] = v89;
        sub_100222690();
        *uint64_t v176 = v89;
        id v68 = v88;
        os_log_type_t v82 = v87;

        _os_log_impl((void *)&_mh_execute_header, v83, v84, "fetchTrustState error calling statusOfPeer: %{public}@", v85, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v83 = v82;
      }

      uint64_t v97 = v82;
      ((void (*)(void, void, id))v183)(0, 0, v80);
      sub_100005A40(v181, v182);
      sub_100005A40(v178, v179);

      return;
    }
    id v91 = v79;
    char v164 = sub_1001EA0EC();
    if (v68)
    {
      id v92 = v91;
      uint64_t v93 = v27;
      id v94 = [v68 osVersion];
      sub_100222270();
      uint64_t v96 = v95;

      uint64_t v27 = v93;
      id v91 = v92;
    }
    else
    {
      uint64_t v96 = 0;
    }
    id v98 = [v68 walrusSetting];
    id v99 = [v68 webAccess];
    NSString v100 = sub_100222260();
    swift_bridgeObjectRelease();
    if (v96)
    {
      NSString v101 = sub_100222260();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v101 = 0;
    }
    id v102 = [objc_allocWithZone((Class)TrustedPeersHelperPeerState) initWithPeerID:v100 isPreapproved:v166 status:v91 memberChanges:0 unknownMachineIDs:v164 & 1 osVersion:v101 walrus:v98 webAccess:v99];

    unint64_t v185 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v103 = *(void **)&v174[v27];
    v187[0] = 0;
    uint64_t v104 = v27;
    id v105 = v103;
    id v106 = [v105 peerWithID:v6 error:v187];

    if (v187[0])
    {
      id v107 = v187[0];

      swift_willThrow();
      uint64_t v108 = v107;
      id v109 = sub_100222070();
      os_log_type_t v110 = sub_100222500();
      if (os_log_type_enabled(v109, v110))
      {
        uint64_t v111 = (uint8_t *)swift_slowAlloc();
        uint64_t v112 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v111 = 138543362;
        uint64_t v108 = v108;
        id v113 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v187[0] = v113;
        sub_100222690();
        *uint64_t v112 = v113;

        _os_log_impl((void *)&_mh_execute_header, v109, v110, "Error getting ego peer from model: %{public}@", v111, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v109 = v108;
      }
    }
    else if (v106)
    {
      id v169 = v102;
      id v114 = v106;
      id v115 = [v114 trustedPeerIDs];
      uint64_t v116 = sub_100222440();

      id v117 = v114;
      uint64_t v118 = v174;
      sub_10019A648(v116, (uint64_t)v118, &v185, v117);
      swift_bridgeObjectRelease();

      id v119 = [v117 stableInfo];
      if (v119)
      {
        uint64_t v120 = v119;
        id v121 = [v119 recoveryEncryptionPublicKey];
        id v102 = v169;
        if (v121)
        {
          char v122 = v121;
          id v171 = v68;
          uint64_t v123 = sub_100221BF0();
          unint64_t v125 = v124;

          id v126 = [v120 recoverySigningPublicKey];
          if (v126)
          {
            uint64_t v127 = v126;
            uint64_t v128 = sub_100221BF0();
            unint64_t v165 = v129;
            uint64_t v167 = v128;

            switch(v125 >> 62)
            {
              case 1uLL:
                uint64_t v133 = (int)v123;
                uint64_t v134 = v123 >> 32;
                goto LABEL_74;
              case 2uLL:
                uint64_t v133 = *(void *)(v123 + 16);
                uint64_t v134 = *(void *)(v123 + 24);
LABEL_74:
                if (v133 != v134) {
                  goto LABEL_75;
                }
                goto LABEL_82;
              case 3uLL:
                goto LABEL_82;
              default:
                if ((v125 & 0xFF000000000000) == 0)
                {
LABEL_82:

                  sub_100005A40(v167, v165);
                  goto LABEL_83;
                }
LABEL_75:
                switch(v165 >> 62)
                {
                  case 1uLL:
                    uint64_t v141 = (int)v167;
                    uint64_t v142 = v167 >> 32;
                    goto LABEL_81;
                  case 2uLL:
                    uint64_t v141 = *(void *)(v167 + 16);
                    uint64_t v142 = *(void *)(v167 + 24);
LABEL_81:
                    if (v141 == v142) {
                      goto LABEL_82;
                    }
                    goto LABEL_77;
                  case 3uLL:
                    goto LABEL_82;
                  default:
                    if ((v165 & 0xFF000000000000) == 0) {
                      goto LABEL_82;
                    }
LABEL_77:
                    uint64_t v161 = v123;
                    id v162 = [objc_allocWithZone((Class)TPRecoveryKeyPair) initWithStableInfo:v120];
                    id v135 = *(id *)&v174[v104];
                    id v136 = [v117 permanentInfo];
                    id v137 = [v117 stableInfo];
                    v187[0] = 0;
                    id v138 = [v135 getViewsForPeer:v136 stableInfo:v137 error:v187];

                    id v139 = v187[0];
                    if (v138)
                    {
                      sub_100222440();
                      id v140 = v139;

                      sub_100007014(v162);
                      swift_bridgeObjectRelease();
                      sub_1002223A0();
                      if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
                        sub_1002223F0();
                      sub_100222410();
                      sub_1002223E0();

                      sub_100005A40(v161, v125);
                      sub_100005A40(v167, v165);
                    }
                    else
                    {
                      id v154 = v187[0];
                      uint64_t v155 = sub_100221B40();

                      swift_willThrow();
                      swift_errorRetain();
                      swift_errorRetain();
                      unint64_t v156 = sub_100222070();
                      os_log_type_t v157 = sub_100222500();
                      if (os_log_type_enabled(v156, v157))
                      {
                        uint64_t v158 = (uint8_t *)swift_slowAlloc();
                        v187[0] = (id)swift_slowAlloc();
                        *(_DWORD *)uint64_t v158 = 136446210;
                        uint64_t v186 = v155;
                        swift_errorRetain();
                        sub_1000046DC(&qword_100299D70);
                        uint64_t v159 = sub_1002222C0();
                        uint64_t v186 = sub_1001BEBDC(v159, v160, (uint64_t *)v187);
                        sub_100222690();
                        swift_bridgeObjectRelease();
                        swift_errorRelease();
                        swift_errorRelease();
                        _os_log_impl((void *)&_mh_execute_header, v156, v157, "Unable to add RK as a trusted peer: %{public}s", v158, 0xCu);
                        swift_arrayDestroy();
                        swift_slowDealloc();
                        swift_slowDealloc();

                        swift_errorRelease();
                        sub_100005A40(v167, v165);
                        sub_100005A40(v161, v125);
                      }
                      else
                      {

                        sub_100005A40(v161, v125);
                        sub_100005A40(v167, v165);

                        swift_errorRelease();
                        swift_errorRelease();
                        swift_errorRelease();
                      }
                    }
                    id v102 = v169;
                    id v68 = v171;
                    break;
                }
                break;
            }
          }
          else
          {

LABEL_83:
            sub_100005A40(v123, v125);

            id v68 = v171;
          }
        }
        else
        {
        }
      }
      else
      {

        id v102 = v169;
      }
      goto LABEL_84;
    }
    char v130 = sub_100222070();
    os_log_type_t v131 = sub_1002224E0();
    if (os_log_type_enabled(v130, v131))
    {
      uint64_t v132 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v132 = 0;
      _os_log_impl((void *)&_mh_execute_header, v130, v131, "No ego peer in model; no trusted peers", v132, 2u);
      swift_slowDealloc();
    }

    id v117 = 0;
LABEL_84:
    uint64_t v177 = v117;
    id v143 = v102;
    uint64_t v144 = sub_100222070();
    os_log_type_t v145 = sub_1002224E0();
    if (os_log_type_enabled(v144, v145))
    {
      uint64_t v146 = swift_slowAlloc();
      id v172 = v68;
      unint64_t v147 = (void *)swift_slowAlloc();
      v187[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v146 = 138543618;
      uint64_t v186 = (uint64_t)v143;
      id v148 = v143;
      sub_100222690();
      *unint64_t v147 = v143;

      *(_WORD *)(v146 + 12) = 2082;
      swift_beginAccess();
      sub_1000047D8(0, &qword_10029F100);
      swift_bridgeObjectRetain();
      uint64_t v149 = sub_1002223D0();
      unint64_t v151 = v150;
      swift_bridgeObjectRelease();
      sub_1001BEBDC(v149, v151, (uint64_t *)v187);
      sub_100222690();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v144, v145, "Returning trust state: %{public}@ %{public}s", (uint8_t *)v146, 0x16u);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      id v68 = v172;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_beginAccess();
    unint64_t v152 = v185;
    id v153 = v143;
    swift_bridgeObjectRetain();
    ((void (*)(id, unint64_t, void))v183)(v143, v152, 0);

    sub_100005A40(v181, v182);
    sub_100005A40(v178, v179);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();

  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_100222090();
  sub_100003CC8(v54, (uint64_t)qword_10029E7D0);
  NSString v55 = sub_100222070();
  os_log_type_t v56 = sub_100222500();
  if (os_log_type_enabled(v55, v56))
  {
    id v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v57 = 0;
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "fetchTrustState failed to create TPPeerPermanentInfo", v57, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  uint64_t v58 = swift_allocError();
  *(_OWORD *)uint64_t v59 = xmmword_1002297C0;
  *(unsigned char *)(v59 + 16) = 13;
  ((void (*)(void, void, uint64_t))v183)(0, 0, v58);
  swift_errorRelease();

  sub_100005A40(v17, v19);

  sub_100005A40(v12, v22);
}

void sub_100125CF0(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v10 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  NSString v11 = sub_100222260();
  id v85 = 0;
  id v12 = [v10 peerWithID:v11 error:&v85];

  if (v85)
  {
    id v13 = v85;

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    id v83 = a5;
    uint64_t v14 = sub_100222090();
    sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain_n();
    id v15 = v13;
    uint64_t v16 = sub_100222070();
    os_log_type_t v17 = sub_100222500();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      id v85 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a2, a3, (uint64_t *)&v85);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2082;
      id v19 = v15;
      sub_1000046DC(&qword_100299D70);
      uint64_t v20 = sub_1002222C0();
      sub_1001BEBDC(v20, v21, (uint64_t *)&v85);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Error getting trusted peer %s from model: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_11;
  }
  if (!v12)
  {
    id v83 = a5;
LABEL_11:
    id v29 = *(id *)(a1 + v9);
    NSString v30 = sub_100222260();
    uint64_t v31 = a1;
    id v32 = [v29 custodianPeerWithID:v30];

    if (v32)
    {
      id v33 = *(id *)(v31 + v9);
      id v34 = [v83 permanentInfo];
      id v35 = [v83 stableInfo];
      id v85 = 0;
      id v36 = [v33 getViewsForCRK:v32 donorPermanentInfo:v34 donorStableInfo:v35 error:&v85];

      id v37 = v85;
      if (v36)
      {
        sub_100222440();
        id v38 = v37;
      }
      else
      {
        id v43 = v85;
        sub_100221B40();

        swift_willThrow();
        swift_errorRelease();
      }
      id v44 = [v32 peerID];
      sub_100222270();

      id v45 = objc_msgSend(objc_msgSend(v32, "signingPublicKey"), "spki");
      swift_unknownObjectRelease();
      uint64_t v46 = sub_100221BF0();
      unint64_t v81 = v47;

      id v48 = objc_msgSend(objc_msgSend(v32, "encryptionPublicKey"), "spki");
      swift_unknownObjectRelease();
      uint64_t v49 = sub_100221BF0();
      os_log_type_t v82 = v32;
      unint64_t v51 = v50;

      id v52 = objc_allocWithZone((Class)TrustedPeersHelperPeer);
      swift_bridgeObjectRetain();
      NSString v53 = sub_100222260();
      swift_bridgeObjectRelease();
      uint64_t v54 = v46;
      Class isa = sub_100221BD0().super.isa;
      Class v56 = sub_100221BD0().super.isa;
      Class v57 = sub_100222420().super.isa;
      swift_bridgeObjectRelease();
      [v52 initWithPeerID:v53 signingSPKI:isa encryptionSPKI:v56 secureElementIdentity:0 viewList:v57];
      sub_100005A40(v49, v51);
      sub_100005A40(v54, v81);
      swift_bridgeObjectRelease();

      sub_1002223A0();
      if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1002223F0();
      }
      sub_100222410();
      sub_1002223E0();
    }
    else
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_100222090();
      sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
      swift_bridgeObjectRetain_n();
      os_log_type_t v40 = sub_100222070();
      os_log_type_t v41 = sub_1002224E0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        id v85 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 136446210;
        swift_bridgeObjectRetain();
        sub_1001BEBDC(a2, a3, (uint64_t *)&v85);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "No peer for trusted ID %{public}s", v42, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    return;
  }
  id v22 = *(id *)(a1 + v9);
  id v23 = v12;
  id v24 = [v23 permanentInfo];
  id v25 = [v23 stableInfo];
  id v85 = 0;
  id v26 = [v22 getViewsForPeer:v24 stableInfo:v25 error:&v85];

  id v27 = v85;
  if (v26)
  {
    sub_100222440();
    id v28 = v27;
  }
  else
  {
    id v58 = v85;
    sub_100221B40();

    swift_willThrow();
    swift_errorRelease();
  }
  id v59 = [v23 permanentInfo];
  id v60 = [v59 signingPubKey];

  NSString v61 = v23;
  id v62 = [v60 spki];
  swift_unknownObjectRelease();
  uint64_t v63 = sub_100221BF0();
  unint64_t v65 = v64;

  id v66 = [v23 permanentInfo];
  id v67 = [v66 encryptionPubKey];

  id v68 = [v67 spki];
  swift_unknownObjectRelease();
  uint64_t v69 = sub_100221BF0();
  unint64_t v79 = v70;

  id v80 = v61;
  id v71 = [v61 stableInfo];
  id v78 = [v71 secureElementIdentity];

  id v77 = objc_allocWithZone((Class)TrustedPeersHelperPeer);
  swift_bridgeObjectRetain();
  NSString v72 = sub_100222260();
  swift_bridgeObjectRelease();
  Class v73 = sub_100221BD0().super.isa;
  uint64_t v74 = v69;
  Class v75 = sub_100221BD0().super.isa;
  Class v76 = sub_100222420().super.isa;
  swift_bridgeObjectRelease();
  [v77 initWithPeerID:v72 signingSPKI:v73 encryptionSPKI:v75 secureElementIdentity:v78 viewList:v76];

  sub_100005A40(v74, v79);
  sub_100005A40(v63, v65);

  sub_1002223A0();
  if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1002223F0();
  }
  sub_100222410();
  sub_1002223E0();
}

uint64_t sub_1001267CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  id v6 = *(void **)&v2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v2;
  v7[3] = sub_1001B7FC0;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1001B7FE8;
  *(void *)(v8 + 24) = v7;
  v13[4] = sub_1001B8924;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100286E38;
  uint64_t v9 = _Block_copy(v13);
  swift_retain();
  id v10 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  [v6 performBlockAndWait:v9];
  swift_release();
  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100126980(char *a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v176 = a3;
  uint64_t v5 = 0;
  uint64_t v6 = sub_1000046DC(&qword_10029ED28);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v174 = (char *)&v168 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  unint64_t v175 = (char *)&v168 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v168 - v15;
  __chkstk_darwin(v14, v17);
  id v19 = (char *)&v168 - v18;
  unint64_t v20 = sub_1000095FC((uint64_t)_swiftEmptyArrayStorage);
  id v183 = (void *)v20;
  uint64_t v179 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v21 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  uint64_t v180 = a1;
  if (v21)
  {
    id v22 = v21;
    uint64_t v178 = sub_100222270();
    uint64_t v24 = v23;
    id v25 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    v187[0] = 0;
    id v26 = v25;
    id v27 = [v26 peerWithID:v22 error:v187];

    if (v187[0])
    {
      id v28 = v187[0];

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_100222090();
      sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
      NSString v30 = v28;
      uint64_t v31 = sub_100222070();
      os_log_type_t v32 = sub_100222500();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v177 = v16;
        id v33 = (uint8_t *)swift_slowAlloc();
        id v34 = (void *)swift_slowAlloc();
        long long v173 = v19;
        *(_DWORD *)id v33 = 138543362;
        NSString v30 = v30;
        id v35 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v187[0] = v35;
        a1 = v180;
        id v19 = v173;
        sub_100222690();
        void *v34 = v35;
        uint64_t v16 = v177;

        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Error getting ego peer from model: %{public}@", v33, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v31 = v30;
      }

      uint64_t v5 = 0;
    }
    else if (v27)
    {
      id v36 = v27;
      swift_bridgeObjectRelease();
      *(void *)&long long v185 = 1718379891;
      *((void *)&v185 + 1) = 0xE400000000000000;
      sub_1002227F0();
      sub_10012187C(v36, (uint64_t)&v185);
      uint64_t v38 = v185;
      uint64_t v186 = (void *)sub_1000046DC(&qword_10029F0A8);
      *(void *)&long long v185 = v38;
      sub_100005A98(&v185, v184);
      uint64_t v39 = v183;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v182 = v39;
      sub_10018B1E8(v184, (uint64_t)v187, isUniquelyReferenced_nonNull_native);
      id v183 = v182;
      swift_bridgeObjectRelease();
      sub_10000B8E4((uint64_t)v187);

      goto LABEL_14;
    }
    *(void *)&long long v185 = 1718379891;
    *((void *)&v185 + 1) = 0xE400000000000000;
    sub_1002227F0();
    sub_1000046DC(&qword_10029F0B0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_100229540;
    *(void *)(v41 + 32) = 0x444972656570;
    *(void *)(v41 + 40) = 0xE600000000000000;
    *(void *)(v41 + 48) = v178;
    *(void *)(v41 + 56) = v24;
    unint64_t v42 = sub_100009B94(v41);
    uint64_t v186 = (void *)sub_1000046DC(&qword_10029F0B8);
    *(void *)&long long v185 = v42;
    sub_100005A98(&v185, v184);
    unint64_t v20 = (unint64_t)v183;
  }
  else
  {
    *(void *)&long long v185 = 1718379891;
    *((void *)&v185 + 1) = 0xE400000000000000;
    sub_1002227F0();
    uint64_t v186 = (void *)sub_1000046DC(&qword_10029F098);
    *(void *)&long long v185 = &_swiftEmptyDictionarySingleton;
    sub_100005A98(&v185, v184);
  }
  char v43 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v182 = (void *)v20;
  sub_10018B1E8(v184, (uint64_t)v187, v43);
  id v183 = v182;
  swift_bridgeObjectRelease();
  sub_10000B8E4((uint64_t)v187);
LABEL_14:
  sub_100128234(a1);
  uint64_t v178 = sub_1001EAB00();
  *(void *)&long long v185 = 0xD000000000000019;
  *((void *)&v185 + 1) = 0x8000000100245050;
  sub_1002227F0();
  id v45 = [*(id *)&a1[v179] idmsTrustedDevicesVersion];
  if (v45)
  {
    uint64_t v46 = v45;
    uint64_t v47 = sub_100222270();
    uint64_t v49 = v48;

    uint64_t v186 = &type metadata for String;
    *(void *)&long long v185 = v47;
    *((void *)&v185 + 1) = v49;
    sub_100005A98(&v185, v184);
    unint64_t v50 = v183;
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v182 = v50;
    sub_10018B1E8(v184, (uint64_t)v187, v51);
    id v183 = v182;
    swift_bridgeObjectRelease();
    sub_10000B8E4((uint64_t)v187);
  }
  else
  {
    sub_10000A8D8((uint64_t)v187, &v185);
    sub_10000B8E4((uint64_t)v187);
    sub_10004015C((uint64_t)&v185, &qword_100299EA0);
  }
  *(void *)&long long v185 = 0xD00000000000001ELL;
  *((void *)&v185 + 1) = 0x8000000100245070;
  sub_1002227F0();
  id v52 = [*(id *)&a1[v179] idmsTrustedDeviceListFetchDate];
  if (v52)
  {
    NSString v53 = v52;
    sub_100221C80();

    uint64_t v54 = sub_100221CB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v16, 0, 1, v54);
  }
  else
  {
    uint64_t v54 = sub_100221CB0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v16, 1, 1, v54);
  }
  NSString v55 = (void *)v178;
  sub_1000D8B9C((uint64_t)v16, (uint64_t)v19, &qword_10029ED28);
  sub_100221CB0();
  uint64_t v56 = *(void *)(v54 - 8);
  unint64_t v170 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  int v57 = v170(v19, 1, v54);
  long long v173 = (char *)v54;
  uint64_t v172 = v56;
  uint64_t v171 = v56 + 48;
  if (v57 == 1)
  {
    sub_10004015C((uint64_t)v19, &qword_10029ED28);
    sub_10000A8D8((uint64_t)v187, &v185);
    sub_10000B8E4((uint64_t)v187);
    sub_10004015C((uint64_t)&v185, &qword_100299EA0);
  }
  else
  {
    uint64_t v186 = (void *)v54;
    id v58 = sub_1001B8004((uint64_t *)&v185);
    (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 32))(v58, v19, v54);
    sub_100005A98(&v185, v184);
    id v59 = v183;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v182 = v59;
    sub_10018B1E8(v184, (uint64_t)v187, v60);
    id v183 = v182;
    swift_bridgeObjectRelease();
    sub_10000B8E4((uint64_t)v187);
  }
  *(void *)&long long v185 = 0xD000000000000011;
  *((void *)&v185 + 1) = 0x8000000100245090;
  sub_1002227F0();
  id v61 = [v55 machineIDsInStatus:1];
  sub_100222440();

  uint64_t v62 = swift_bridgeObjectRetain();
  uint64_t v63 = sub_10018CDB4(v62);
  swift_bridgeObjectRelease();
  *(void *)&long long v185 = v63;
  sub_1001F35FC((uint64_t *)&v185);
  swift_bridgeObjectRelease();
  uint64_t v64 = v185;
  uint64_t v65 = sub_1000046DC(&qword_10029F0A0);
  uint64_t v186 = (void *)v65;
  *(void *)&long long v185 = v64;
  sub_100005A98(&v185, v184);
  id v66 = v183;
  char v67 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v182 = v66;
  sub_10018B1E8(v184, (uint64_t)v187, v67);
  id v68 = v182;
  id v183 = v182;
  swift_bridgeObjectRelease();
  sub_10000B8E4((uint64_t)v187);
  *(void *)&long long v185 = 0xD000000000000014;
  *((void *)&v185 + 1) = 0x80000001002450B0;
  sub_1002227F0();
  id v69 = [v55 machineIDsInStatus:2];
  sub_100222440();

  uint64_t v70 = swift_bridgeObjectRetain();
  id v71 = sub_10018CDB4(v70);
  swift_bridgeObjectRelease();
  *(void *)&long long v185 = v71;
  sub_1001F35FC((uint64_t *)&v185);
  swift_bridgeObjectRelease();
  uint64_t v186 = (void *)v65;
  sub_100005A98(&v185, v184);
  char v72 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v182 = v68;
  sub_10018B1E8(v184, (uint64_t)v187, v72);
  Class v73 = v182;
  id v183 = v182;
  swift_bridgeObjectRelease();
  sub_10000B8E4((uint64_t)v187);
  *(void *)&long long v185 = 0xD000000000000011;
  *((void *)&v185 + 1) = 0x80000001002450D0;
  sub_1002227F0();
  id v74 = [v55 machineIDsInStatus:3];
  sub_100222440();

  uint64_t v75 = swift_bridgeObjectRetain();
  Class v76 = sub_10018CDB4(v75);
  swift_bridgeObjectRelease();
  *(void *)&long long v185 = v76;
  sub_1001F35FC((uint64_t *)&v185);
  swift_bridgeObjectRelease();
  uint64_t v186 = (void *)v65;
  sub_100005A98(&v185, v184);
  char v77 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v182 = v73;
  sub_10018B1E8(v184, (uint64_t)v187, v77);
  id v78 = v182;
  id v183 = v182;
  swift_bridgeObjectRelease();
  sub_10000B8E4((uint64_t)v187);
  *(void *)&long long v185 = 0xD000000000000017;
  *((void *)&v185 + 1) = 0x80000001002450F0;
  sub_1002227F0();
  id v79 = [v55 machineIDsInStatus:4];
  sub_100222440();

  uint64_t v80 = swift_bridgeObjectRetain();
  unint64_t v81 = sub_10018CDB4(v80);
  swift_bridgeObjectRelease();
  *(void *)&long long v185 = v81;
  sub_1001F35FC((uint64_t *)&v185);
  swift_bridgeObjectRelease();
  uint64_t v186 = (void *)v65;
  sub_100005A98(&v185, v184);
  char v82 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v182 = v78;
  sub_10018B1E8(v184, (uint64_t)v187, v82);
  id v83 = v182;
  id v183 = v182;
  swift_bridgeObjectRelease();
  sub_10000B8E4((uint64_t)v187);
  *(void *)&long long v185 = 0xD000000000000018;
  *((void *)&v185 + 1) = 0x8000000100245110;
  sub_1002227F0();
  id v84 = [v55 machineIDsInStatus:5];
  sub_100222440();

  uint64_t v85 = swift_bridgeObjectRetain();
  NSDictionary v86 = sub_10018CDB4(v85);
  swift_bridgeObjectRelease();
  *(void *)&long long v185 = v86;
  sub_1001F35FC((uint64_t *)&v185);
  swift_bridgeObjectRelease();
  uint64_t v177 = (char *)v65;
  uint64_t v186 = (void *)v65;
  sub_100005A98(&v185, v184);
  char v87 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v182 = v83;
  sub_10018B1E8(v184, (uint64_t)v187, v87);
  id v88 = v182;
  id v183 = v182;
  swift_bridgeObjectRelease();
  sub_10000B8E4((uint64_t)v187);
  *(void *)&long long v185 = 0xD000000000000014;
  *((void *)&v185 + 1) = 0x8000000100245130;
  sub_1002227F0();
  id v89 = [*(id *)&v180[v179] honorIDMSListChanges];
  if (v89)
  {
    id v90 = v89;
    uint64_t v91 = sub_100222270();
    uint64_t v93 = v92;

    uint64_t v186 = &type metadata for String;
    *(void *)&long long v185 = v91;
    *((void *)&v185 + 1) = v93;
    sub_100005A98(&v185, v184);
    char v94 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v182 = v88;
    sub_10018B1E8(v184, (uint64_t)v187, v94);
    id v183 = v182;
    swift_bridgeObjectRelease();
    sub_10000B8E4((uint64_t)v187);
  }
  else
  {
    sub_10000A8D8((uint64_t)v187, &v185);
    sub_10000B8E4((uint64_t)v187);
    sub_10004015C((uint64_t)&v185, &qword_100299EA0);
  }
  *(void *)&long long v185 = 0xD00000000000001DLL;
  *((void *)&v185 + 1) = 0x8000000100245150;
  sub_1002227F0();
  uint64_t v95 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v96 = [*(id *)&v180[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model] recoverySigningPublicKey];
  if (v96)
  {
    uint64_t v97 = v96;
    uint64_t v98 = sub_100221BF0();
    uint64_t v100 = v99;

    uint64_t v186 = &type metadata for Data;
    *(void *)&long long v185 = v98;
    *((void *)&v185 + 1) = v100;
    sub_100005A98(&v185, v184);
    NSString v101 = v183;
    char v102 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v182 = v101;
    sub_10018B1E8(v184, (uint64_t)v187, v102);
    id v183 = v182;
    swift_bridgeObjectRelease();
    sub_10000B8E4((uint64_t)v187);
  }
  else
  {
    sub_10000A8D8((uint64_t)v187, &v185);
    sub_10000B8E4((uint64_t)v187);
    sub_10004015C((uint64_t)&v185, &qword_100299EA0);
  }
  *(void *)&long long v185 = 0xD000000000000020;
  *((void *)&v185 + 1) = 0x8000000100245170;
  sub_1002227F0();
  id v103 = [*(id *)&v180[v95] recoveryEncryptionPublicKey];
  if (v103)
  {
    uint64_t v104 = v103;
    uint64_t v105 = sub_100221BF0();
    uint64_t v107 = v106;

    uint64_t v186 = &type metadata for Data;
    *(void *)&long long v185 = v105;
    *((void *)&v185 + 1) = v107;
    sub_100005A98(&v185, v184);
    uint64_t v108 = v183;
    char v109 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v182 = v108;
    sub_10018B1E8(v184, (uint64_t)v187, v109);
    id v183 = v182;
    swift_bridgeObjectRelease();
    sub_10000B8E4((uint64_t)v187);
  }
  else
  {
    sub_10000A8D8((uint64_t)v187, &v185);
    sub_10000B8E4((uint64_t)v187);
    sub_10004015C((uint64_t)&v185, &qword_100299EA0);
  }
  *(void *)&long long v185 = 0xD000000000000018;
  *((void *)&v185 + 1) = 0x80000001002451A0;
  unint64_t v110 = (unint64_t)&type metadata for String;
  sub_1002227F0();
  uint64_t v111 = *(void **)&v180[v95];
  *(void *)&v184[0] = 0;
  id v112 = [v111 allRegisteredPolicyVersionsWithError:v184];
  id v113 = *(void **)&v184[0];
  if (v112)
  {
    id v114 = v112;
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
    sub_100222440();
    id v115 = v113;

    uint64_t v116 = swift_bridgeObjectRetain();
    id v117 = sub_10018CCB8(v116);
    swift_bridgeObjectRelease();
    *(void *)&v184[0] = v117;
    sub_10019323C((uint64_t *)v184);
    swift_bridgeObjectRelease();
    unint64_t v110 = *(void *)&v184[0];
    uint64_t v118 = v177;
    if ((*(void *)&v184[0] & 0x8000000000000000) != 0 || (*(void *)&v184[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v119 = sub_100222970();
      swift_release();
      if (v119) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v119 = *(void *)(*(void *)&v184[0] + 16);
      if (v119)
      {
LABEL_36:
        unint64_t v182 = _swiftEmptyArrayStorage;
        sub_10018D13C(0, v119 & ~(v119 >> 63), 0);
        if ((v119 & 0x8000000000000000) == 0)
        {
          uint64_t v168 = 0;
          id v169 = a2;
          uint64_t v120 = 0;
          id v121 = v182;
          do
          {
            if ((v110 & 0xC000000000000001) != 0) {
              id v122 = (id)sub_100222880();
            }
            else {
              id v122 = *(id *)(v110 + 8 * v120 + 32);
            }
            uint64_t v123 = v122;
            id v181 = objc_msgSend(v122, "versionNumber", v168, v169);
            *(void *)&v184[0] = sub_100222A00();
            *((void *)&v184[0] + 1) = v124;
            v188._countAndFlagsBits = 8236;
            v188._object = (void *)0xE200000000000000;
            sub_100222310(v188);
            id v125 = [v123 policyHash];
            uint64_t v126 = sub_100222270();
            uint64_t v128 = v127;

            v189._countAndFlagsBits = v126;
            v189._object = v128;
            sub_100222310(v189);

            swift_bridgeObjectRelease();
            long long v129 = v184[0];
            unint64_t v182 = v121;
            unint64_t v131 = v121[2];
            unint64_t v130 = v121[3];
            if (v131 >= v130 >> 1)
            {
              sub_10018D13C(v130 > 1, v131 + 1, 1);
              id v121 = v182;
            }
            ++v120;
            v121[2] = v131 + 1;
            *(_OWORD *)&v121[2 * v131 + 4] = v129;
          }
          while (v119 != v120);
          swift_release();
          a2 = v169;
          uint64_t v118 = v177;
          uint64_t v5 = v168;
          goto LABEL_52;
        }
        __break(1u);
        goto LABEL_66;
      }
    }
    swift_release();
    id v121 = _swiftEmptyArrayStorage;
LABEL_52:
    uint64_t v186 = v118;
    *(void *)&long long v185 = v121;
    sub_100005A98(&v185, v184);
    id v143 = v183;
    char v144 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v182 = v143;
    sub_10018B1E8(v184, (uint64_t)v187, v144);
    uint64_t v142 = v182;
    id v183 = v182;
    swift_bridgeObjectRelease();
    sub_10000B8E4((uint64_t)v187);
    id v139 = (void *)v178;
    goto LABEL_53;
  }
  id v132 = *(id *)&v184[0];
  sub_10000B8E4((uint64_t)v187);
  uint64_t v65 = sub_100221B40();

  swift_willThrow();
  if (qword_100298EB8 != -1) {
LABEL_66:
  }
    swift_once();
  uint64_t v133 = sub_100222090();
  sub_100003CC8(v133, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v134 = sub_100222070();
  os_log_type_t v135 = sub_100222500();
  if (os_log_type_enabled(v134, v135))
  {
    id v136 = (uint8_t *)swift_slowAlloc();
    id v137 = (void *)swift_slowAlloc();
    *(_DWORD *)id v136 = 138543362;
    swift_errorRetain();
    id v138 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v187[0] = v138;
    sub_100222690();
    *id v137 = v138;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v134, v135, "Error getting registered policy versions: %{public}@", v136, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  id v139 = (void *)v178;

  *(void *)&long long v185 = 0xD00000000000001DLL;
  *((void *)&v185 + 1) = 0x80000001002451C0;
  sub_1002227F0();
  *(void *)&long long v185 = 0;
  *((void *)&v185 + 1) = 0xE000000000000000;
  *(void *)&v184[0] = v65;
  sub_1000046DC(&qword_100299D70);
  sub_100222900();
  uint64_t v186 = (void *)v110;
  sub_100005A98(&v185, v184);
  id v140 = v183;
  char v141 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v182 = v140;
  sub_10018B1E8(v184, (uint64_t)v187, v141);
  uint64_t v142 = v182;
  id v183 = v182;
  swift_bridgeObjectRelease();
  sub_10000B8E4((uint64_t)v187);
  swift_errorRelease();
  uint64_t v5 = 0;
LABEL_53:
  id v145 = [*(id *)&v180[v179] accountSettings];
  if (v145)
  {
    uint64_t v146 = v145;
    uint64_t v147 = sub_100221BF0();
    unint64_t v149 = v148;

    uint64_t v150 = sub_1001A5B68(v147, v149);
    if (!v5)
    {
      uint64_t v151 = v150;
      if (v150)
      {
        *(void *)&long long v185 = 0x53746E756F636361;
        *((void *)&v185 + 1) = 0xEF73676E69747465;
        sub_1002227F0();
        uint64_t v152 = sub_100192D98(v151);
        swift_bridgeObjectRelease();
        uint64_t v186 = (void *)sub_1000046DC(&qword_10029F0A8);
        *(void *)&long long v185 = v152;
        sub_100005A98(&v185, v184);
        char v153 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v182 = v142;
        sub_10018B1E8(v184, (uint64_t)v187, v153);
        id v183 = v182;
        swift_bridgeObjectRelease();
        sub_10000B8E4((uint64_t)v187);
        *(void *)&long long v185 = 0xD000000000000013;
        *((void *)&v185 + 1) = 0x80000001002451E0;
        sub_1002227F0();
        id v154 = [*(id *)&v180[v179] accountSettingsDate];
        if (v154)
        {
          uint64_t v155 = v154;
          uint64_t v156 = (uint64_t)v174;
          sub_100221C80();

          uint64_t v157 = 0;
          uint64_t v158 = (uint64_t)v175;
        }
        else
        {
          uint64_t v157 = 1;
          uint64_t v158 = (uint64_t)v175;
          uint64_t v156 = (uint64_t)v174;
        }
        uint64_t v159 = v173;
        uint64_t v160 = v172;
        uint64_t v161 = (uint64_t (*)(uint64_t, uint64_t, char *))v170;
        (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v172 + 56))(v156, v157, 1, v173);
        sub_1000D8B9C(v156, v158, &qword_10029ED28);
        int v162 = v161(v158, 1, v159);
        id v139 = (void *)v178;
        if (v162 == 1)
        {
          sub_10004015C(v158, &qword_10029ED28);
          sub_10000A8D8((uint64_t)v187, &v185);
          sub_10000B8E4((uint64_t)v187);
          sub_10004015C((uint64_t)&v185, &qword_100299EA0);
          sub_100005A40(v147, v149);
          goto LABEL_64;
        }
        uint64_t v186 = v159;
        uint64_t v163 = sub_1001B8004((uint64_t *)&v185);
        (*(void (**)(uint64_t *, uint64_t, char *))(v160 + 32))(v163, v158, v159);
        sub_100005A98(&v185, v184);
        char v164 = v183;
        char v165 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v182 = v164;
        sub_10018B1E8(v184, (uint64_t)v187, v165);
        id v183 = v182;
        swift_bridgeObjectRelease();
        sub_10000B8E4((uint64_t)v187);
      }
      sub_100005A40(v147, v149);
      goto LABEL_64;
    }
    sub_100005A40(v147, v149);
    swift_errorRelease();
  }
LABEL_64:
  uint64_t v166 = swift_bridgeObjectRetain();
  a2(v166, 0);

  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100128234(char *a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = _swiftEmptyArrayStorage;
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  unint64_t v4 = v2 + 16;
  uint64_t v69 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  uint64_t v5 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v2;
  id v83 = sub_1001B80E0;
  uint64_t v84 = v6;
  aBlock = _NSConcreteStackBlock;
  uint64_t v80 = 1107296256;
  unint64_t v81 = sub_100129128;
  char v82 = &unk_100286EB0;
  uint64_t v7 = _Block_copy(&aBlock);
  id v8 = v5;
  id v68 = a1;
  swift_retain();
  swift_release();
  aBlock = 0;
  unsigned int v9 = [v8 enumeratePeersUsingBlock:v7 error:&aBlock];
  _Block_release(v7);

  uint64_t v10 = aBlock;
  if (v9) {
    goto LABEL_7;
  }
  uint64_t v11 = v10;
  sub_100221B40();

  swift_willThrow();
  if (qword_100298EB8 != -1) {
    goto LABEL_53;
  }
  while (1)
  {
    uint64_t v12 = sub_100222090();
    sub_100003CC8(v12, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v13 = sub_100222070();
    os_log_type_t v14 = sub_100222500();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138543362;
      swift_errorRetain();
      uint64_t v17 = (void **)_swift_stdlib_bridgeErrorToNSError();
      aBlock = v17;
      uint64_t v3 = _swiftEmptyArrayStorage;
      sub_100222690();
      *uint64_t v16 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error enumerating peers: %{public}@", v15, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v76 = 0xD000000000000015;
    unint64_t v77 = 0x80000001002452B0;
    sub_1002227F0();
    unint64_t v76 = 0;
    unint64_t v77 = 0xE000000000000000;
    sub_1000046DC(&qword_100299D70);
    sub_100222900();
    id v78 = &type metadata for String;
    sub_100112C48((uint64_t)&v76, (uint64_t)&aBlock);
    swift_errorRelease();
LABEL_7:
    unint64_t v76 = 0x7372656570;
    unint64_t v77 = 0xE500000000000000;
    sub_1002227F0();
    swift_beginAccess();
    unint64_t v18 = *(void *)v4;
    uint64_t v67 = sub_1000046DC(&qword_10029F0E0);
    id v78 = (void *)v67;
    unint64_t v76 = v18;
    swift_bridgeObjectRetain();
    sub_100112C48((uint64_t)&v76, (uint64_t)&aBlock);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v3;
    unint64_t v20 = *(void **)&a1[v69];
    id v83 = sub_1001B80E8;
    uint64_t v84 = v19;
    aBlock = _NSConcreteStackBlock;
    uint64_t v80 = 1107296256;
    unint64_t v81 = sub_100129128;
    char v82 = &unk_100286ED8;
    id v21 = _Block_copy(&aBlock);
    id v22 = v20;
    swift_retain();
    swift_release();
    aBlock = 0;
    unsigned int v23 = [v22 enumerateVouchersUsingBlock:v21 error:&aBlock];
    _Block_release(v21);

    uint64_t v24 = aBlock;
    if (!v23)
    {
      id v25 = v24;
      sub_100221B40();

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_100222090();
      sub_100003CC8(v26, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      id v27 = sub_100222070();
      os_log_type_t v28 = sub_100222500();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        id v66 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 138543362;
        swift_errorRetain();
        NSString v30 = v3;
        uint64_t v31 = (void **)_swift_stdlib_bridgeErrorToNSError();
        aBlock = v31;
        sub_100222690();
        *id v66 = v31;
        uint64_t v3 = v30;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Error enumerating vouchers: %{public}@", v29, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      unint64_t v76 = 0xD000000000000018;
      unint64_t v77 = 0x80000001002452F0;
      sub_1002227F0();
      unint64_t v76 = 0;
      unint64_t v77 = 0xE000000000000000;
      sub_1000046DC(&qword_100299D70);
      sub_100222900();
      id v78 = &type metadata for String;
      sub_100112C48((uint64_t)&v76, (uint64_t)&aBlock);
      swift_errorRelease();
    }
    unint64_t v76 = 0x7372656863756F76;
    unint64_t v77 = 0xE800000000000000;
    sub_1002227F0();
    swift_beginAccess();
    unint64_t v32 = *(void *)(v19 + 16);
    id v78 = (void *)v67;
    unint64_t v76 = v32;
    swift_bridgeObjectRetain();
    sub_100112C48((uint64_t)&v76, (uint64_t)&aBlock);
    unint64_t v76 = 0xD000000000000017;
    unint64_t v77 = 0x8000000100245310;
    sub_1002227F0();
    id v33 = [*(id *)&a1[v69] allCustodianRecoveryKeys];
    sub_1000047D8(0, &qword_10029EB80);
    unint64_t v4 = sub_1002223C0();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_100222970();
      swift_bridgeObjectRelease();
      if (!v34)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        id v36 = _swiftEmptyArrayStorage;
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v34 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v34) {
        goto LABEL_26;
      }
    }
    unint64_t v76 = (unint64_t)v3;
    sub_10018D15C(0, v34 & ~(v34 >> 63), 0);
    if ((v34 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_53:
    swift_once();
  }
  uint64_t v35 = 0;
  id v36 = (void *)v76;
  unint64_t v70 = v4 & 0xC000000000000001;
  unint64_t v37 = v4;
  do
  {
    if (v70) {
      id v38 = (id)sub_100222880();
    }
    else {
      id v38 = *(id *)(v4 + 8 * v35 + 32);
    }
    uint64_t v39 = v38;
    id v40 = objc_msgSend(v38, "dictionaryRepresentation", v66);
    uint64_t v41 = sub_1002221D0();

    unint64_t v76 = (unint64_t)v36;
    unint64_t v43 = v36[2];
    unint64_t v42 = v36[3];
    if (v43 >= v42 >> 1)
    {
      sub_10018D15C(v42 > 1, v43 + 1, 1);
      id v36 = (void *)v76;
    }
    ++v35;
    v36[2] = v43 + 1;
    v36[v43 + 4] = v41;
    unint64_t v4 = v37;
  }
  while (v34 != v35);
  swift_bridgeObjectRelease();
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_27:
  id v78 = (void *)v67;
  unint64_t v76 = (unint64_t)v36;
  sub_100112C48((uint64_t)&v76, (uint64_t)&aBlock);
  id v44 = [*(id *)&v68[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] bottles];
  if (v44)
  {
    id v45 = v44;
    aBlock = 0;
    type metadata accessor for BottleMO();
    sub_1001A56AC(&qword_100299690, (void (*)(uint64_t))type metadata accessor for BottleMO);
    sub_100222430();

    uint64_t v46 = (uint64_t)aBlock;
    if (aBlock)
    {
      unint64_t v76 = 0x73656C74746F62;
      unint64_t v77 = 0xE700000000000000;
      sub_1002227F0();
      unint64_t v71 = v46 & 0xC000000000000001;
      if ((v46 & 0xC000000000000001) != 0)
      {
        uint64_t v47 = sub_100222750();
        if (v47)
        {
LABEL_31:
          char v72 = v3;
          sub_10018D15C(0, v47 & ~(v47 >> 63), 0);
          if (v71)
          {
            uint64_t v48 = sub_1002226F0();
            char v50 = 1;
          }
          else
          {
            uint64_t v48 = sub_1001F4348(v46);
            char v50 = v52 & 1;
          }
          uint64_t v73 = v48;
          uint64_t v74 = v49;
          unsigned __int8 v75 = v50;
          if (v47 < 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
          }
          do
          {
            while (1)
            {
              sub_1001F455C(v73, v74, v75, v46);
              id v59 = v58;
              unint64_t v60 = sub_1001A576C(v58);

              id v61 = v72;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_10018D15C(0, v72[2] + 1, 1);
                id v61 = v72;
              }
              unint64_t v63 = v61[2];
              unint64_t v62 = v61[3];
              if (v63 >= v62 >> 1)
              {
                sub_10018D15C(v62 > 1, v63 + 1, 1);
                id v61 = v72;
              }
              v61[2] = v63 + 1;
              v61[v63 + 4] = v60;
              if (v71) {
                break;
              }
              uint64_t v53 = sub_1001F4474(v73, v74, v75, v46);
              uint64_t v55 = v54;
              char v57 = v56;
              sub_1001B1EC4(v73, v74, v75);
              uint64_t v73 = v53;
              uint64_t v74 = v55;
              unsigned __int8 v75 = v57 & 1;
              if (!--v47) {
                goto LABEL_49;
              }
            }
            if ((v75 & 1) == 0) {
              goto LABEL_55;
            }
            if (sub_100222710()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            sub_1000046DC(&qword_10029F0F0);
            uint64_t v64 = (void (*)(unint64_t *, void))sub_100222480();
            sub_1002227C0();
            v64(&v76, 0);
            --v47;
          }
          while (v47);
LABEL_49:
          sub_1001B1EC4(v73, v74, v75);
          swift_bridgeObjectRelease();
          char v51 = v72;
          goto LABEL_50;
        }
      }
      else
      {
        uint64_t v47 = *(void *)(v46 + 16);
        if (v47) {
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRelease();
      char v51 = _swiftEmptyArrayStorage;
LABEL_50:
      id v78 = (void *)v67;
      unint64_t v76 = (unint64_t)v51;
      goto LABEL_51;
    }
  }
  unint64_t v76 = 0x73656C74746F62;
  unint64_t v77 = 0xE700000000000000;
  sub_1002227F0();
  id v78 = (void *)sub_1000046DC(&qword_10029F0E8);
  unint64_t v76 = (unint64_t)v3;
LABEL_51:
  sub_100112C48((uint64_t)&v76, (uint64_t)&aBlock);
  swift_release();
  return swift_release();
}

uint64_t sub_100128F6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [a1 peerID];
  uint64_t v8 = sub_100222270();
  uint64_t v10 = v9;

  id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a3
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v19 = (void **)(a4 + 16);
    sub_10012187C(a1, (uint64_t)v26);
    uint64_t v21 = v26[0];
    swift_beginAccess();
    id v22 = *v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v19 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v22 = sub_1001880C4(0, v22[2] + 1, 1, v22);
      *uint64_t v19 = v22;
    }
    unint64_t v25 = v22[2];
    unint64_t v24 = v22[3];
    if (v25 >= v24 >> 1)
    {
      id v22 = sub_1001880C4((void *)(v24 > 1), v25 + 1, 1, v22);
      *uint64_t v19 = v22;
    }
    v22[2] = v25 + 1;
    v22[v25 + 4] = v21;
    return swift_endAccess();
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_100222270();
  uint64_t v15 = v14;

  if (v8 == v13 && v10 == v15) {
    return swift_bridgeObjectRelease_n();
  }
  char v17 = sub_100222A30();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10012912C(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void *)(a3 + 16);
  id v5 = [a1 dictionaryRepresentation];
  uint64_t v6 = sub_1002221D0();

  swift_beginAccess();
  id v7 = *(void **)(a3 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a3 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v7 = sub_1001880C4(0, v7[2] + 1, 1, v7);
    *unint64_t v4 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    id v7 = sub_1001880C4((void *)(v9 > 1), v10 + 1, 1, v7);
    *unint64_t v4 = v7;
  }
  _OWORD v7[2] = v10 + 1;
  v7[v10 + 4] = v6;
  return swift_endAccess();
}

void sub_10012923C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1001292B0(uint64_t a1, uint64_t a2)
{
  id v5 = *(void **)&v2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1001B7FA4;
  *(void *)(v7 + 24) = v6;
  v12[4] = sub_1001B8924;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100112F58;
  v12[3] = &unk_100286D98;
  uint64_t v8 = _Block_copy(v12);
  swift_retain();
  unint64_t v9 = v2;
  swift_retain();
  swift_release();
  [v5 performBlockAndWait:v8];
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100129428(void (*a1)(uint64_t, uint64_t, void), uint64_t a2, uint64_t a3)
{
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a3
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "honorIDMSListChanges"));
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_100222270();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  a1(v6, v8, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001294C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v2;
  v7[3] = sub_1001B7F1C;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1001B7F44;
  *(void *)(v8 + 24) = v7;
  v13[4] = sub_1001B8924;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100286D20;
  unint64_t v9 = _Block_copy(v13);
  swift_retain();
  unint64_t v10 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  [v6 performBlockAndWait:v9];
  swift_release();
  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10012967C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, const char *a5)
{
  if (a2) {
    os_log_type_t v9 = sub_100222500();
  }
  else {
    os_log_type_t v9 = sub_1002224E0();
  }
  os_log_type_t v10 = v9;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = sub_100222070();
  if (os_log_type_enabled(v12, v10))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v17._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v17);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v14 = 0x203A726F727265;
    }
    else
    {
      uint64_t v14 = 0x73736563637573;
    }
    sub_1001BEBDC(v14, 0xE700000000000000, &v16);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v10, a5, v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return a3(a1, a2);
}

void sub_1001298CC(NSObject *a1, void (*a2)(uint64_t, NSObject *))
{
  id v4 = [*(id *)((char *)&a1->isa + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) egoPeerID];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    uint64_t v7 = *(Class *)((char *)&a1->isa + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
    char v87 = 0;
    uint64_t v8 = a1;
    id v9 = v7;
    os_log_type_t v10 = (SEL *)&selRef_setAllSelves_;
    uint64_t v11 = [v9 peerWithID:v5 error:&v87];

    if (v87)
    {
      uint64_t v12 = v87;

      swift_willThrow();
LABEL_4:
      swift_errorRetain();
      a2(0, v12);
      swift_errorRelease();
      goto LABEL_5;
    }
    if (!v11)
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_100222090();
      sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
      os_log_type_t v24 = sub_100222500();
      unint64_t v25 = sub_100222070();
      if (os_log_type_enabled(v25, v24))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v24, "self peerID present but egoPeer not found", v26, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v27 = swift_allocError();
      *(_OWORD *)uint64_t v28 = xmmword_1002297D0;
      *(unsigned char *)(v28 + 16) = 13;
      a2(0, v27);
LABEL_5:
      swift_errorRelease();
      return;
    }
    uint64_t v84 = v6;
    id v78 = a2;
    unint64_t v86 = sub_100009B94((uint64_t)_swiftEmptyArrayStorage);
    if (qword_100298EB8 != -1) {
LABEL_70:
    }
      swift_once();
    uint64_t v15 = sub_100222090();
    sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
    os_log_type_t v16 = sub_1002224E0();
    Swift::String v17 = v11;
    unint64_t v18 = sub_100222070();
    os_log_type_t v19 = v16;
    id v79 = v8;
    if (os_log_type_enabled(v18, v16))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v20 = 138412290;
      char v87 = v17;
      id v22 = v17;
      sub_100222690();
      *uint64_t v21 = v11;

      os_log_type_t v10 = (SEL *)&selRef_setAllSelves_;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "egoPeer: %@", v20, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v18 = v17;
    }
    uint64_t v11 = v86;

    unint64_t v77 = v17;
    id v29 = [v17 dynamicInfo];
    if (v29)
    {
      NSString v30 = v29;
      id v31 = [v29 includedPeerIDs];

      unint64_t v32 = (unsigned char *)sub_100222440();
    }
    else
    {
      unint64_t v32 = &_swiftEmptySetSingleton;
    }
    id v33 = v8;
    unint64_t v34 = 0;
    char v82 = v32 + 56;
    uint64_t v35 = 1 << v32[32];
    uint64_t v36 = -1;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    unint64_t v37 = v36 & *((void *)v32 + 7);
    int64_t v83 = (unint64_t)(v35 + 63) >> 6;
    while (1)
    {
      if (v37)
      {
        uint64_t v8 = v11;
        uint64_t v85 = (v37 - 1) & v37;
        unint64_t v86 = v34;
        unint64_t v38 = __clz(__rbit64(v37)) | (v34 << 6);
      }
      else
      {
        int64_t v39 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        if (v39 >= v83) {
          goto LABEL_65;
        }
        unint64_t v40 = *(void *)&v82[8 * v39];
        int64_t v41 = v34 + 1;
        if (!v40)
        {
          int64_t v41 = v34 + 2;
          if ((uint64_t)(v34 + 2) >= v83) {
            goto LABEL_65;
          }
          unint64_t v40 = *(void *)&v82[8 * v41];
          if (!v40)
          {
            int64_t v41 = v34 + 3;
            if ((uint64_t)(v34 + 3) >= v83) {
              goto LABEL_65;
            }
            unint64_t v40 = *(void *)&v82[8 * v41];
            if (!v40)
            {
              unint64_t v42 = v34 + 4;
              if ((uint64_t)(v34 + 4) >= v83)
              {
LABEL_65:
                swift_release();
                uint64_t v76 = swift_bridgeObjectRetain();
                v78(v76, 0);
                swift_bridgeObjectRelease_n();

                return;
              }
              unint64_t v40 = *(void *)&v82[8 * v42];
              if (!v40)
              {
                while (1)
                {
                  int64_t v41 = v42 + 1;
                  if (__OFADD__(v42, 1)) {
                    goto LABEL_69;
                  }
                  if (v41 >= v83) {
                    goto LABEL_65;
                  }
                  unint64_t v40 = *(void *)&v82[8 * v41];
                  ++v42;
                  if (v40) {
                    goto LABEL_43;
                  }
                }
              }
              int64_t v41 = v34 + 4;
            }
          }
        }
LABEL_43:
        uint64_t v8 = v11;
        uint64_t v85 = (v40 - 1) & v40;
        unint64_t v86 = v41;
        unint64_t v38 = __clz(__rbit64(v40)) + (v41 << 6);
      }
      unint64_t v43 = v32;
      uint64_t v44 = *((void *)v32 + 6) + 16 * v38;
      uint64_t v11 = *(NSObject **)v44;
      uint64_t v45 = *(void *)(v44 + 8);
      swift_bridgeObjectRetain();
      uint64_t v47 = v33;
      id v48 = *(id *)((char *)&v33->isa + v84);
      NSString v49 = sub_100222260();
      char v87 = 0;
      char v50 = v10;
      os_log_type_t v10 = (SEL *)objc_msgSend(v48, v10[69], v49, &v87);

      if (v87)
      {
        uint64_t v12 = v87;

        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        a2 = v78;
        goto LABEL_4;
      }
      if (v10)
      {
        id v51 = [(SEL *)v10 stableInfo];
        if (v51)
        {
          char v52 = v51;
          id v53 = [v51 deviceName];

          if (v53) {
            break;
          }
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v65 = (uint64_t)v11;
      uint64_t v11 = v8;
      unint64_t v66 = sub_10000AB48(v65, v45);
      char v68 = v67;
      swift_bridgeObjectRelease();
      if (v68)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char v87 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10018C1E0();
          uint64_t v11 = v87;
        }
        swift_bridgeObjectRelease();
        sub_10000B0DC(v66, (uint64_t)v11);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      swift_bridgeObjectRelease();
      id v33 = v47;
LABEL_27:
      unint64_t v32 = v43;
      unint64_t v34 = v86;
      swift_bridgeObjectRelease();
      os_log_type_t v10 = v50;
      unint64_t v37 = v85;
    }
    uint64_t v80 = sub_100222270();
    uint64_t v81 = v54;

    swift_bridgeObjectRetain();
    uint64_t v55 = v8;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    char v87 = v8;
    unint64_t v58 = sub_10000AB48((uint64_t)v11, v45);
    Class isa = v8[2].isa;
    BOOL v60 = (v57 & 1) == 0;
    uint64_t v61 = (uint64_t)isa + v60;
    if (__OFADD__(isa, v60)) {
      goto LABEL_67;
    }
    uint64_t v8 = v57;
    if ((uint64_t)v55[3].isa < v61)
    {
      sub_100189394(v61, v56);
      unint64_t v62 = sub_10000AB48((uint64_t)v11, v45);
      if ((v8 & 1) != (v63 & 1))
      {
        sub_100222A60();
        __break(1u);
        return;
      }
      unint64_t v58 = v62;
      uint64_t v64 = v87;
      if ((v8 & 1) == 0) {
        goto LABEL_61;
      }
LABEL_59:
      unint64_t v70 = (uint64_t *)((char *)v64[7].isa + 16 * v58);
      swift_bridgeObjectRelease();
      uint64_t *v70 = v80;
      v70[1] = v81;
      uint64_t v11 = v64;
LABEL_63:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v33 = v79;
      goto LABEL_27;
    }
    if (v56)
    {
      uint64_t v64 = v87;
      if (v57) {
        goto LABEL_59;
      }
    }
    else
    {
      sub_10018C1E0();
      uint64_t v64 = v87;
      if (v8) {
        goto LABEL_59;
      }
    }
LABEL_61:
    v64[(v58 >> 6) + 8].Class isa = (Class)((uint64_t)v64[(v58 >> 6) + 8].isa | (1 << v58));
    unint64_t v71 = (NSObject **)((char *)v64[6].isa + 16 * v58);
    void *v71 = v11;
    v71[1] = v45;
    char v72 = (uint64_t *)((char *)v64[7].isa + 16 * v58);
    *char v72 = v80;
    v72[1] = v81;
    Class v73 = v64[2].isa;
    BOOL v74 = __OFADD__(v73, 1);
    unsigned __int8 v75 = (Class)((char *)v73 + 1);
    if (v74) {
      goto LABEL_68;
    }
    uint64_t v11 = v64;
    v64[2].Class isa = v75;
    swift_bridgeObjectRetain();
    goto LABEL_63;
  }
  sub_100042D4C();
  uint64_t v13 = swift_allocError();
  *(_OWORD *)uint64_t v14 = xmmword_1002297D0;
  *(unsigned char *)(v14 + 16) = 13;
  a2(0, v13);

  swift_errorRelease();
}

uint64_t sub_10012A220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  os_log_type_t v16 = v12;
  uint64_t v17 = sub_1001984DC(v16, 0xD000000000000082, 0x8000000100244F70);

  unint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = a11;
  v18[4] = a12;
  int v34 = 0;
  if (a10 == 1)
  {
    if (a7)
    {
      if (a8) {
        int v19 = 11;
      }
      else {
        int v19 = 9;
      }
      if ((a9 & 1) == 0) {
        goto LABEL_24;
      }
    }
    else
    {
      if (a8) {
        int v19 = 10;
      }
      else {
        int v19 = 8;
      }
      if ((a9 & 1) == 0) {
        goto LABEL_24;
      }
    }
  }
  else
  {
    if (a10 != 2) {
      goto LABEL_26;
    }
    if (a7)
    {
      if (a8) {
        int v19 = 19;
      }
      else {
        int v19 = 17;
      }
      if ((a9 & 1) == 0)
      {
LABEL_24:
        int v20 = 0;
        goto LABEL_25;
      }
    }
    else
    {
      if (a8) {
        int v19 = 18;
      }
      else {
        int v19 = 16;
      }
      if ((a9 & 1) == 0) {
        goto LABEL_24;
      }
    }
  }
  int v20 = 4;
LABEL_25:
  int v34 = v19 | v20;
LABEL_26:
  uint64_t v21 = *(void **)&v16[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a3;
  *(void *)(v22 + 40) = a4;
  *(void *)(v22 + 48) = a5;
  *(unsigned char *)(v22 + 56) = a6 & 1;
  *(void *)(v22 + 64) = &v34;
  *(unsigned char *)(v22 + 72) = a9 & 1;
  *(void *)(v22 + 80) = v16;
  *(void *)(v22 + 88) = sub_1001B7A4C;
  *(void *)(v22 + 96) = v18;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1001B7AF0;
  *(void *)(v23 + 24) = v22;
  aBlock[4] = sub_1001B8924;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_100286BE0;
  os_log_type_t v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  unint64_t v25 = v16;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v21 performBlockAndWait:v24];
  swift_release();
  swift_release();
  _Block_release(v24);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10012A520(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8, char *a9, uint64_t a10, uint64_t a11)
{
  int v33 = a8;
  uint64_t v34 = a10;
  uint64_t v35 = a11;
  uint64_t v18 = type metadata accessor for ResetRequest(0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v36 = sub_10019AC88(a1);
  char v37 = v22 & 1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  char v42 = a6;
  uint64_t v43 = a7;
  char v44 = v33;
  sub_1001A56AC((unint64_t *)&unk_10029F080, (void (*)(uint64_t))type metadata accessor for ResetRequest);
  sub_100221F70();
  uint64_t v23 = *(void *)&a9[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
  uint64_t v24 = *(void *)&a9[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
  sub_1000059A4(&a9[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v23);
  unint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = v34;
  uint64_t v27 = v35;
  v25[2] = a9;
  v25[3] = v26;
  v25[4] = v27;
  uint64_t v28 = *(void *)(v24 + 16);
  id v29 = *(void (**)(char *, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v28 + 8);
  NSString v30 = a9;
  swift_retain();
  v29(v21, sub_1001B7B90, v25, v23, v28);
  swift_release();
  return sub_1001B7EAC((uint64_t)v21, type metadata accessor for ResetRequest);
}

uint64_t sub_10012A714(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, int a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v28 = a6;
  int v31 = a8;
  int v32 = a10;
  uint64_t v29 = a9;
  uint64_t v16 = type metadata accessor for AccountInfo(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = a3 & 1;
  if (a5) {
    uint64_t v21 = a4;
  }
  else {
    uint64_t v21 = 0;
  }
  unint64_t v22 = 0xE000000000000000;
  if (a5) {
    unint64_t v23 = a5;
  }
  else {
    unint64_t v23 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v23;
  if (a7) {
    uint64_t v24 = v28;
  }
  else {
    uint64_t v24 = 0;
  }
  if (a7) {
    unint64_t v22 = a7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v24;
  *(void *)(a1 + 40) = v22;
  *(unsigned char *)(a1 + 48) = v31;
  uint64_t v30 = v29;
  sub_1001A56AC((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100221F70();
  uint64_t v25 = a1 + *(int *)(type metadata accessor for ResetRequest(0) + 40);
  sub_10004015C(v25, &qword_100299F50);
  sub_1001B7B9C((uint64_t)v20, v25, type metadata accessor for AccountInfo);
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v25, 0, 1, v16);
  *(unsigned char *)(a1 + 49) = v32;
  return result;
}

uint64_t sub_10012A940(uint64_t a1, char *a2, uint64_t isEscapingClosureAtFileLocation, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v7 = type metadata accessor for ResetResponse(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v11 = __chkstk_darwin(v7 - 8, v10);
  uint64_t v12 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = ((char *)&aBlock[-1] - v14);
  uint64_t v16 = sub_1000046DC(&qword_100299E88);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (uint64_t *)((char *)&aBlock[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v19, &qword_100299E88);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001B7B9C((uint64_t)v19, (uint64_t)v15, type metadata accessor for ResetResponse);
    uint64_t v26 = a2;
    uint64_t v27 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    sub_1001B7C04((uint64_t)v15, (uint64_t)v12, type metadata accessor for ResetResponse);
    unint64_t v28 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v29 = (v9 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a2;
    sub_1001B7B9C((uint64_t)v12, v30 + v28, type metadata accessor for ResetResponse);
    int v31 = (uint64_t *)(v30 + v29);
    uint64_t v20 = v36;
    *int v31 = isEscapingClosureAtFileLocation;
    v31[1] = v20;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1001B7E08;
    *(void *)(v32 + 24) = v30;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100286C80;
    int v33 = _Block_copy(aBlock);
    id v34 = v26;
    swift_retain();
    swift_retain();
    swift_release();
    [v27 performBlockAndWait:v33];
    _Block_release(v33);
    sub_1001B7EAC((uint64_t)v15, type metadata accessor for ResetResponse);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v20 = *v19;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v15 = sub_100222070();
  os_log_type_t v22 = sub_100222500();
  if (!os_log_type_enabled(v15, v22))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  unint64_t v23 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)unint64_t v23 = 136446210;
  uint64_t v38 = v20;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v24 = sub_1002222C0();
  uint64_t v38 = sub_1001BEBDC(v24, v25, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v15, v22, "reset failed: %{public}s", v23, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  swift_errorRetain();
  ((void (*)(uint64_t))isEscapingClosureAtFileLocation)(v20);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10012AE1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Changes(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012165C();
  [(id)swift_getObjCClassFromMetadata() post:OTCliqueChanged];
  uint64_t v14 = type metadata accessor for ResetResponse(0);
  sub_10000D830(a2 + *(int *)(v14 + 20), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    *(void *)uint64_t v13 = 0;
    *((void *)v13 + 1) = 0xE000000000000000;
    *((void *)v13 + 2) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v13 + 24) = xmmword_100229520;
    *(_OWORD *)(v13 + 40) = xmmword_100229520;
    v13[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Changes);
  }
  sub_10017AB04((uint64_t)v13, 0);
  sub_1001B7EAC((uint64_t)v13, type metadata accessor for Changes);
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100222090();
  sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
  uint64_t v16 = sub_100222070();
  os_log_type_t v17 = sub_1002224E0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "reset succeded", v18, 2u);
    swift_slowDealloc();
  }

  return a3(0);
}

uint64_t sub_10012B2CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_100184C80(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.info.getter, "performCkserverUnreadableRemoval complete %{public}s", 0xD000000000000055, 0x8000000100244AC0);
}

uint64_t sub_10012B304(char a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22[16] = a1;
  v22[17] = a2;
  v22[18] = a3;
  sub_1001A56AC(&qword_10029AA48, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
  sub_100221F70();
  uint64_t v16 = *(void *)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24);
  uint64_t v17 = *(void *)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32);
  sub_1000059A4((void *)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish), v16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  *(void *)(v18 + 24) = a6;
  uint64_t v19 = *(void *)(v17 + 16);
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v19 + 144);
  swift_retain();
  v20(v15, sub_1001B3EA8, v18, v16, v19);
  swift_release();
  return sub_1001B7EAC((uint64_t)v15, type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_10012B4B4(unsigned char *a1, char a2, char a3, char a4)
{
  uint64_t v8 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AccountInfo(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (int *)((char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *a1 = a2;
  if (a3)
  {
    if (a4) {
      int v17 = 19;
    }
    else {
      int v17 = 17;
    }
    if (a2)
    {
LABEL_6:
      int v18 = 4;
      goto LABEL_12;
    }
  }
  else
  {
    if (a4) {
      int v17 = 18;
    }
    else {
      int v17 = 16;
    }
    if (a2) {
      goto LABEL_6;
    }
  }
  int v18 = 0;
LABEL_12:
  uint64_t v19 = (uint64_t)&a1[*(int *)(type metadata accessor for RemoveUnreadableCKServerDataRequest(0) + 28)];
  sub_10000D830(v19, (uint64_t)v11, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    *uint64_t v16 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v11, &qword_100299F50);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v11, (uint64_t)v16, type metadata accessor for AccountInfo);
  }
  *uint64_t v16 = v17 | v18;
  sub_10004015C(v19, &qword_100299F50);
  sub_1001B7B9C((uint64_t)v16, v19, type metadata accessor for AccountInfo);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
}

uint64_t sub_10012B6EC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299D60);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v7, (uint64_t *)&unk_100299D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *v7;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = sub_100222070();
    os_log_type_t v11 = sub_100222500();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v21 = v8;
      uint64_t v22 = v13;
      *(_DWORD *)uint64_t v12 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v14 = sub_1002222C0();
      uint64_t v21 = sub_1001BEBDC(v14, v15, &v22);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "performCkserverUnreadableRemoval failed: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(v8);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    int v17 = sub_100222070();
    os_log_type_t v18 = sub_100222520();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "performCkserverUnreadableRemoval success", v19, 2u);
      swift_slowDealloc();
    }

    a2(0);
    return sub_10004015C((uint64_t)v7, (uint64_t *)&unk_100299D60);
  }
}

uint64_t sub_10012BA40(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_100184C80(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.info.getter, "localReset complete %{public}s", 0xD000000000000012, 0x8000000100244AA0);
}

uint64_t sub_10012BA78(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  sub_10012165C();
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v9 = 0;
  if ([v4 save:&v9])
  {
    id v5 = v9;
    return a2(0);
  }
  else
  {
    id v7 = v9;
    uint64_t v8 = sub_100221B40();

    swift_willThrow();
    swift_errorRetain();
    a2(v8);
    swift_errorRelease();
    return swift_errorRelease();
  }
}

uint64_t sub_10012BB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a12) {
    os_log_type_t v20 = sub_100222500();
  }
  else {
    os_log_type_t v20 = sub_1002224E0();
  }
  os_log_type_t v21 = v20;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100222090();
  sub_100003CC8(v22, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  unint64_t v23 = sub_100222070();
  if (os_log_type_enabled(v23, v21))
  {
    uint64_t v29 = a6;
    uint64_t v24 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    swift_bridgeObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v25 = sub_1002222C0();
    sub_1001BEBDC(v25, v26, v32);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    if (a12)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v33._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v33);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v27 = 0x203A726F727265;
    }
    else
    {
      uint64_t v27 = 0x73736563637573;
    }
    sub_1001BEBDC(v27, 0xE700000000000000, v32);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v21, "prepare complete peerID: %{public}s %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a6 = v29;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD0000000000000F2, 0x80000001002449A0);
  return a14(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_10012BEE0(void *a1, uint64_t a2, void (*a3)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, char *a7, int a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  if (!a1 || a2)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100222090();
    sub_100003CC8(v24, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v25 = sub_100222070();
    os_log_type_t v26 = sub_1002224E0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v56 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v28 = sub_1002222C0();
      uint64_t v56 = sub_1001BEBDC(v28, v29, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Unable to fetch policy: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (a5)
      {
LABEL_7:
        uint64_t v30 = a5;
LABEL_10:
        swift_errorRetain();
        a3(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, v30);
        return swift_errorRelease();
      }
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      if (a5) {
        goto LABEL_7;
      }
    }
    sub_100042D4C();
    uint64_t v30 = swift_allocError();
    *(_OWORD *)uint64_t v31 = xmmword_1002311C0;
    *(unsigned char *)(v31 + 16) = 13;
    goto LABEL_10;
  }
  id v36 = a1;
  id v37 = v36;
  if (a6)
  {
    id v38 = [v36 version];
    uint64_t v39 = *(void **)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride];
    *(void *)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride] = v38;
  }
  id v53 = *(id *)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v40 = swift_allocObject();
  id v41 = v37;
  char v52 = v37;
  uint64_t v42 = v40;
  *(_DWORD *)(v40 + 16) = a8;
  *(void *)(v40 + 24) = a9;
  *(void *)(v40 + 32) = v41;
  *(void *)(v40 + 40) = a10;
  *(void *)(v40 + 48) = a11;
  *(void *)(v40 + 56) = a12;
  *(void *)(v40 + 64) = a13;
  *(void *)(v40 + 72) = a14;
  *(void *)(v40 + 80) = a15;
  *(void *)(v40 + 88) = a16;
  *(void *)(v40 + 96) = a17;
  *(void *)(v40 + 104) = a18;
  *(void *)(v40 + 112) = a19;
  *(void *)(v40 + 120) = a7;
  *(void *)(v40 + 128) = a20;
  *(void *)(v40 + 136) = a3;
  *(void *)(v40 + 144) = a4;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = sub_1001B3D80;
  *(void *)(v43 + 24) = v42;
  aBlock[4] = (uint64_t)sub_1001B8924;
  aBlock[5] = v43;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100112F58;
  aBlock[3] = (uint64_t)&unk_100285420;
  char v44 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v45 = a7;
  swift_retain();
  id v46 = a20;
  id v47 = a19;
  id v48 = a9;
  swift_retain();
  id v49 = v52;
  id v50 = a10;
  swift_bridgeObjectRetain();
  id v51 = a12;
  swift_bridgeObjectRetain();
  swift_release();
  [v53 performBlockAndWait:v44];

  _Block_release(v44);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v49) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10012C3B8(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, NSObject *, uint64_t))
{
  unsigned int v116 = sub_100112B4C(a2, a1);
  id v18 = [a3 version];
  id v19 = [v18 versionNumber];

  if (qword_100298BB0 != -1) {
    swift_once();
  }
  id v20 = [(id)qword_1002A0268 versionNumber];
  if (a4)
  {
    id v21 = a4;
    id v22 = [v21 walrus];
    if (v22)
    {
      unint64_t v23 = v22;
      id v24 = [objc_allocWithZone((Class)TPPBPeerStableInfoSetting) init];
      if (v24)
      {
        uint64_t v25 = v24;
        id v26 = v24;
        objc_msgSend(v26, "setValue:", objc_msgSend(v23, "enabled"));
      }
      else
      {
        uint64_t v25 = 0;
      }
    }
    else
    {
      uint64_t v25 = 0;
    }
    id v28 = [v21 webAccess];
    if (v28)
    {
      unint64_t v29 = v28;
      id v30 = [objc_allocWithZone((Class)TPPBPeerStableInfoSetting) init];
      if (v30)
      {
        uint64_t v27 = v30;
        id v31 = v30;
        objc_msgSend(v31, "setValue:", objc_msgSend(v29, "enabled"));
      }
      else
      {
        uint64_t v27 = 0;
      }
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v29 = v21;
    }
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v25 = 0;
  }
  if (v19 >= v20)
  {
    id v124 = (id)qword_1002A0268;
    id v126 = [a3 version];
  }
  else
  {
    id v124 = [a3 version];
    id v126 = 0;
  }
  id v32 = objc_allocWithZone((Class)TPPeerStableInfo);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v33 = a13;
  swift_bridgeObjectRetain();
  id v113 = a6;
  id v34 = v25;
  id v35 = v27;
  uint64_t v36 = swift_bridgeObjectRetain();
  id v37 = sub_1001AA754(1, (uint64_t)v124, (uint64_t)v126, a5, v116, (uint64_t)a6, (uint64_t)v25, (uint64_t)v27, a7, v36, a9, a10, a11, a12, (uint64_t)v33, 0, 0xF000000000000000, 0, 0xF000000000000000,
                      0);

  id v125 = v34;
  id v112 = v35;

  uint64_t v38 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v39 = *(id *)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  NSString v40 = [a2 peerID];
  if (!v40)
  {
    sub_100222270();
    NSString v40 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  [v39 setEgoPeerID:v40];

  id v41 = *(id *)(a14 + v38);
  id v42 = [a2 data];
  uint64_t v43 = sub_100221BF0();
  unint64_t v45 = v44;

  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v43, v45);
  [v41 setEgoPeerPermanentInfo:isa];

  id v47 = *(id *)(a14 + v38);
  id v48 = [a2 sig];
  uint64_t v49 = sub_100221BF0();
  unint64_t v51 = v50;

  Class v52 = sub_100221BD0().super.isa;
  sub_100005A40(v49, v51);
  [v47 setEgoPeerPermanentInfoSig:v52];

  id v53 = *(id *)(a14 + v38);
  id v54 = [v37 data];
  uint64_t v55 = sub_100221BF0();
  unint64_t v57 = v56;

  Class v58 = sub_100221BD0().super.isa;
  sub_100005A40(v55, v57);
  [v53 setEgoPeerStableInfo:v58];

  id v59 = *(id *)(a14 + v38);
  id v60 = [v37 sig];
  uint64_t v61 = sub_100221BF0();
  unint64_t v63 = v62;

  Class v64 = sub_100221BD0().super.isa;
  sub_100005A40(v61, v63);
  [v59 setEgoPeerStableInfoSig:v64];

  type metadata accessor for BottleMO();
  uint64_t v65 = *(void **)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  unint64_t v66 = v37;
  id v67 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v65];
  swift_bridgeObjectRetain();
  NSString v69 = sub_100222260();
  swift_bridgeObjectRelease();
  [v67 setPeerID:v69];

  swift_bridgeObjectRetain();
  NSString v70 = sub_100222260();
  swift_bridgeObjectRelease();
  [v67 setBottleID:v70];

  uint64_t v71 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI);
  unint64_t v72 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI + 8);
  sub_1000059E8(*(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI), *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI + 8));
  Class v73 = sub_100221BD0().super.isa;
  sub_100005A40(v71, v72);
  [v67 setEscrowedSigningSPKI:v73];

  uint64_t v74 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey);
  unint64_t v75 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey + 8);
  sub_1000059E8(*(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey), *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey + 8));
  Class v76 = sub_100221BD0().super.isa;
  sub_100005A40(v74, v75);
  [v67 setSignatureUsingEscrowKey:v76];

  uint64_t v77 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey);
  unint64_t v78 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey + 8);
  sub_1000059E8(*(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey), *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey + 8));
  Class v79 = sub_100221BD0().super.isa;
  sub_100005A40(v77, v78);
  [v67 setSignatureUsingPeerKey:v79];

  uint64_t v80 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents);
  unint64_t v81 = *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents + 8);
  sub_1000059E8(*(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents), *(void *)(a15 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents + 8));
  Class v82 = sub_100221BD0().super.isa;
  sub_100005A40(v80, v81);
  [v67 setContents:v82];

  [*(id *)(a14 + v38) addBottlesObject:v67];
  id v83 = [a2 modelID];
  LODWORD(v82) = sub_100222270();
  LODWORD(v81) = v84;

  uint64_t v85 = sub_10015A2F8((int)v82, v81, v66);
  unint64_t v86 = v66;
  swift_bridgeObjectRelease();
  id v128 = 0;
  if ([v65 save:&v128])
  {
    id v87 = v128;
    id v88 = [a2 peerID];
    uint64_t v121 = sub_100222270();
    uint64_t v127 = v89;

    id v90 = [a2 data];
    uint64_t v91 = sub_100221BF0();
    unint64_t v118 = v92;

    id v93 = [a2 sig];
    uint64_t v94 = sub_100221BF0();
    unint64_t v123 = v95;

    id v96 = [v86 data];
    uint64_t v97 = sub_100221BF0();
    unint64_t v117 = v98;

    id v99 = [v86 sig];
    uint64_t v100 = sub_100221BF0();
    unint64_t v102 = v101;

    id v115 = v85;
    a16(v121, v127, v91, v118, v94, v123, v97, v117, v100, v102, v85, 0);

    sub_100005A40(v100, v102);
    sub_100005A40(v97, v117);
    sub_100005A40(v94, v123);
    sub_100005A40(v91, v118);

    return swift_bridgeObjectRelease();
  }
  else
  {
    id v104 = v128;
    uint64_t v105 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v106 = sub_100222090();
    sub_100003CC8(v106, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v107 = sub_100222070();
    os_log_type_t v108 = sub_100222500();
    if (os_log_type_enabled(v107, v108))
    {
      char v109 = (uint8_t *)swift_slowAlloc();
      id v128 = (id)swift_slowAlloc();
      *(_DWORD *)char v109 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v110 = sub_1002222C0();
      sub_1001BEBDC(v110, v111, (uint64_t *)&v128);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "Unable to save identity: %{public}s", v109, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a16(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, v105);
    swift_errorRelease();
    return swift_errorRelease();
  }
}

uint64_t sub_10012D024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a15) {
    os_log_type_t v23 = sub_100222500();
  }
  else {
    os_log_type_t v23 = sub_1002224E0();
  }
  os_log_type_t v24 = v23;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100222090();
  sub_100003CC8(v25, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v26 = sub_100222070();
  if (os_log_type_enabled(v26, v24))
  {
    uint64_t v32 = a6;
    uint64_t v27 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    swift_bridgeObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v35);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    if (a15)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v36._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v36);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v30 = 0x203A726F727265;
    }
    else
    {
      uint64_t v30 = 0x73736563637573;
    }
    sub_1001BEBDC(v30, 0xE700000000000000, v35);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v24, "prepareInheritancePeer complete peerID: %{public}s %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a6 = v32;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD0000000000000FDLL, 0x80000001002448A0);
  return a17(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_10012D3C4(uint64_t a1, void (*a2)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t), uint64_t a3, void *a4, char *a5, void *a6, uint64_t a7, void *a8, void *a9, void *a10, int a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v238 = a8;
  uint64_t v239 = a6;
  uint64_t v240 = a7;
  id v241 = a4;
  uint64_t v23 = sub_100221CB0();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v208 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000046DC(&qword_100299818);
  __chkstk_darwin(v28 - 8, v29);
  id v31 = (char *)v208 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100221D00();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v34);
  Swift::String v36 = (char *)v208 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = a3;
  if (a1)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_100222090();
    sub_100003CC8(v37, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v38 = sub_100222070();
    os_log_type_t v39 = sub_100222500();
    if (os_log_type_enabled(v38, v39))
    {
      NSString v40 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v243 = swift_slowAlloc();
      *(_DWORD *)NSString v40 = 136446210;
      uint64_t v245 = a1;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v41 = sub_1002222C0();
      uint64_t v245 = sub_1001BEBDC(v41, v42, (uint64_t *)&v243);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "prepareInheritancePeer unable to fetch changes: %{public}s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return ((uint64_t (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))a2)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, a1);
  }
  uint64_t v231 = v23;
  uint64_t v232 = v27;
  uint64_t v230 = v24;
  uint64_t v233 = a5;
  uint64_t v234 = v36;
  uint64_t v44 = v240;
  id v43 = v241;
  uint64_t v235 = a2;
  id v45 = [v241 uuid];
  sub_100222270();
  uint64_t v236 = v33;
  uint64_t v237 = v32;

  uint64_t v46 = v237;
  sub_100221CC0();
  uint64_t v47 = v236;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v31, 1, v46) == 1)
  {
    sub_10004015C((uint64_t)v31, &qword_100299818);
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_100222090();
    sub_100003CC8(v48, (uint64_t)qword_10029E7D0);
    id v49 = v43;
    unint64_t v50 = sub_100222070();
    os_log_type_t v51 = sub_1002224E0();
    if (os_log_type_enabled(v50, v51))
    {
      Class v52 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v243 = swift_slowAlloc();
      *(_DWORD *)Class v52 = 136446210;
      id v53 = [v49 uuid];
      uint64_t v54 = sub_100222270();
      unint64_t v56 = v55;

      uint64_t v245 = sub_1001BEBDC(v54, v56, (uint64_t *)&v243);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Unable to parse uuid: %{public}s", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100042D4C();
    uint64_t v77 = swift_allocError();
    *(_OWORD *)uint64_t v78 = xmmword_100229920;
    *(unsigned char *)(v78 + 16) = 13;
    v235(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v77);
    return swift_errorRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v234, v31, v46);
  uint64_t v58 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v59 = v233;
  id v60 = *(id *)&v233[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  Class isa = sub_100221CE0().super.isa;
  id v62 = [v60 findCustodianRecoveryKeyWithUUID:isa];

  if (v62)
  {
    unint64_t v63 = *(void **)&v59[v58];
    *(void *)&long long v243 = 0;
    unsigned int v64 = [v63 isCustodianRecoveryKeyTrusted:v62 error:&v243];
    uint64_t v65 = v243;
    if ((void)v243)
    {
      id v66 = (id)v243;
      swift_willThrow();
      id v67 = v235;
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_100222090();
      sub_100003CC8(v68, (uint64_t)qword_10029E7D0);
      NSString v69 = v66;
      NSString v70 = sub_100222070();
      os_log_type_t v71 = sub_100222500();
      if (os_log_type_enabled(v70, v71))
      {
        unint64_t v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        id v241 = v62;
        uint64_t v74 = (void *)v73;
        *(_DWORD *)unint64_t v72 = 138543362;
        unint64_t v75 = v69;
        uint64_t v76 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v243 = v76;
        id v67 = v235;
        sub_100222690();
        *uint64_t v74 = v76;

        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Error determining whether Custodian Recovery Key is trusted: %{public}@", v72, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        id v62 = v241;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        NSString v70 = v69;
      }
      uint64_t v102 = v237;

      id v103 = v69;
      v67(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v65);

      return (*(uint64_t (**)(char *, uint64_t))(v236 + 8))(v234, v102);
    }
    id v88 = v235;
    uint64_t v89 = v237;
    if (v64)
    {
      id v90 = [v43 recoveryString];
      if (v90)
      {
        uint64_t v91 = v90;
        uint64_t v92 = sub_100222270();
        unint64_t v94 = v93;

        id v95 = [v43 salt];
        if (v95)
        {
          id v96 = v95;
          uint64_t v97 = sub_100222270();
          unint64_t v99 = v98;

          type metadata accessor for CustodianRecoveryKey();
          swift_allocObject();
          id v100 = v62;
          uint64_t v101 = sub_10000603C(v100, v92, v94, v97, v99);
          uint64_t v118 = *(void *)(v101 + 16);
          uint64_t v119 = *(void **)(v118 + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey);
          uint64_t v229 = v101;
          uint64_t v120 = *(void **)(v118 + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey);
          uint64_t v121 = qword_100298EB8;
          id v122 = v119;
          id v123 = v120;
          id v241 = v122;
          id v124 = v123;
          uint64_t v125 = v229;
          id v228 = v124;
          swift_retain();
          if (v121 != -1) {
            swift_once();
          }
          uint64_t v227 = a9;
          uint64_t v126 = sub_100222090();
          sub_100003CC8(v126, (uint64_t)qword_10029E7D0);
          swift_retain_n();
          uint64_t v127 = sub_100222070();
          os_log_type_t v128 = sub_1002224E0();
          int v129 = v128;
          if (os_log_type_enabled(v127, v128))
          {
            uint64_t v226 = v127;
            uint64_t v130 = swift_slowAlloc();
            LODWORD(v224) = v129;
            unint64_t v131 = (uint8_t *)v130;
            uint64_t v225 = swift_slowAlloc();
            *(void *)&long long v243 = v225;
            *(_DWORD *)unint64_t v131 = 136446210;
            uint64_t v223 = v131 + 12;
            long long v222 = v131 + 4;
            id v132 = v131;
            id v133 = [*(id *)(*(void *)(v125 + 16)+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey) publicKey];
            id v134 = [v133 keyData];

            uint64_t v135 = sub_100221BF0();
            unint64_t v137 = v136;

            uint64_t v138 = sub_100221BE0(0);
            unint64_t v140 = v139;
            uint64_t v141 = v135;
            uint64_t v125 = v229;
            sub_100005A40(v141, v137);
            uint64_t v245 = sub_1001BEBDC(v138, v140, (uint64_t *)&v243);
            sub_100222690();
            swift_release_n();
            swift_bridgeObjectRelease();
            uint64_t v142 = v226;
            _os_log_impl((void *)&_mh_execute_header, v226, (os_log_type_t)v224, "prepareInheritancePeer signingPubKey: %{public}s", v132, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          swift_retain_n();
          id v143 = sub_100222070();
          os_log_type_t v144 = sub_1002224E0();
          int v145 = v144;
          BOOL v146 = os_log_type_enabled(v143, v144);
          uint64_t v147 = (uint64_t)v227;
          if (v146)
          {
            LODWORD(v226) = v145;
            unint64_t v148 = (_DWORD *)swift_slowAlloc();
            uint64_t v225 = swift_slowAlloc();
            *(void *)&long long v243 = v225;
            *(void *)&long long v224 = v148;
            *unint64_t v148 = 136446210;
            uint64_t v223 = v148 + 3;
            long long v222 = v148 + 1;
            id v149 = [*(id *)(*(void *)(v125 + 16)+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey) publicKey];
            id v150 = [v149 keyData];

            uint64_t v151 = sub_100221BF0();
            unint64_t v153 = v152;

            uint64_t v154 = sub_100221BE0(0);
            unint64_t v156 = v155;
            sub_100005A40(v151, v153);
            uint64_t v245 = sub_1001BEBDC(v154, v156, (uint64_t *)&v243);
            sub_100222690();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v143, (os_log_type_t)v226, "prepareInheritancePeer encryptionPubKey: %{public}s", (uint8_t *)v224, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          uint64_t v157 = (uint64_t)v232;
          sub_1000047D8(0, &qword_10029EEC8);
          id v158 = v241;
          id v241 = v228;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100221CA0();
          sub_100221C70();
          double v160 = v159;
          (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v157, v231);
          double v161 = v160 * 1000.0;
          if ((~COERCE__INT64(v160 * 1000.0) & 0x7FF0000000000000) != 0)
          {
            if (v161 > -1.0)
            {
              if (v161 < 1.84467441e19)
              {
                id v162 = sub_1001A6444((uint64_t)v239, v44, (uint64_t)v238, v147, 1, (uint64_t)v158, (uint64_t)v241, (unint64_t)v161, 1);
                uint64_t v223 = v100;
                uint64_t v218 = a18;
                uint64_t v219 = a16;
                uint64_t v220 = a14;
                uint64_t v239 = a13;
                LODWORD(v222) = a11;

                id v228 = v162;
                id v163 = [v228 peerID];
                char v164 = (void *)sub_100222270();
                uint64_t v166 = v165;

                strcpy((char *)&v243, "signing-key ");
                BYTE13(v243) = 0;
                HIWORD(v243) = -5120;
                uint64_t v216 = v164;
                v246._countAndFlagsBits = (uint64_t)v164;
                uint64_t v227 = v166;
                v246._object = v166;
                sub_100222310(v246);
                uint64_t v167 = *((void *)&v243 + 1);
                uint64_t v225 = v243;
                uint64_t v168 = self;
                uint64_t v232 = (char *)a17;
                swift_bridgeObjectRetain();
                uint64_t v240 = a19;
                swift_bridgeObjectRetain();
                id v169 = v158;
                swift_retain();
                uint64_t v221 = a10;
                unint64_t v170 = a10;
                uint64_t v171 = v233;
                uint64_t v231 = a12;
                swift_bridgeObjectRetain();
                uint64_t v233 = v239;
                uint64_t v230 = a15;
                swift_bridgeObjectRetain();
                *(void *)&long long v215 = v168;
                id v172 = [v168 defaultManager];
                id v173 = objc_allocWithZone((Class)_SFIdentity);
                unint64_t v238 = v169;
                id v174 = [v173 initWithKeyPair:v169];
                SFAccessibilityMakeWithMode();
                long long v224 = v243;
                uint64_t v175 = v244;
                id v176 = objc_allocWithZone((Class)_SFAccessPolicy);
                long long v243 = v224;
                uint64_t v244 = v175;
                id v177 = [v176 initWithAccessibility:&v243 sharingPolicy:0];
                NSString v178 = sub_100222260();
                [v177 setAccessGroup:v178];

                uint64_t v225 = v167;
                NSString v179 = sub_100222260();
                *(void *)&long long v243 = 0;
                *(void *)&long long v224 = v172;
                id v217 = v174;
                LOBYTE(v178) = [v172 setIdentity:v174 forIdentifier:v179 accessPolicy:v177 error:&v243];

                uint64_t v180 = (void *)v243;
                uint64_t v226 = v170;
                if (v178)
                {
                  id v213 = v177;
                  *(void *)&long long v243 = 0x6974707972636E65;
                  *((void *)&v243 + 1) = 0xEF2079656B2D6E6FLL;
                  v247._countAndFlagsBits = (uint64_t)v216;
                  v247._object = v227;
                  sub_100222310(v247);
                  uint64_t v181 = *((void *)&v243 + 1);
                  v208[1] = v243;
                  uint64_t v216 = v238;
                  swift_retain();
                  id v212 = v228;
                  uint64_t v182 = v242;
                  swift_retain();
                  uint64_t v209 = v170;
                  v210 = v171;
                  swift_bridgeObjectRetain();
                  v211 = v233;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v183 = v180;
                  id v184 = [(id)v215 defaultManager];
                  id v185 = objc_allocWithZone((Class)_SFIdentity);
                  id v186 = [v185 initWithKeyPair:v241];
                  SFAccessibilityMakeWithMode();
                  long long v215 = v243;
                  uint64_t v187 = v244;
                  id v188 = objc_allocWithZone((Class)_SFAccessPolicy);
                  long long v243 = v215;
                  uint64_t v244 = v187;
                  id v189 = [v188 initWithAccessibility:&v243 sharingPolicy:0];
                  NSString v190 = sub_100222260();
                  [v189 setAccessGroup:v190];

                  *(void *)&long long v215 = v181;
                  NSString v191 = sub_100222260();
                  *(void *)&long long v243 = 0;
                  LODWORD(v181) = [v184 setIdentity:v186 forIdentifier:v191 accessPolicy:v189 error:&v243];

                  uint64_t v214 = v171;
                  if (v181)
                  {
                    id v192 = (id)v243;
                    uint64_t v193 = v210;
                    long long v194 = v212;
                    sub_10012F948(1, 0, v235, v182, v221, v210, (int)v222, v212, v231, v239, v220, v230, v219, (uint64_t)v232, v218, v240, v216, v229);

                    swift_release();
                  }
                  else
                  {
                    id v203 = (id)v243;
                    uint64_t v204 = sub_100221B40();

                    swift_willThrow();
                    swift_errorRetain();
                    uint64_t v193 = v210;
                    long long v194 = v212;
                    sub_10012F948(0, v204, v235, v182, v221, v210, (int)v222, v212, v231, v239, v220, v230, v219, (uint64_t)v232, v218, v240, v216, v229);

                    swift_errorRelease();
                    swift_errorRelease();

                    swift_release();
                  }
                  uint64_t v201 = v237;
                  id v205 = v217;
                  uint64_t v206 = v213;

                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  uint64_t v202 = v223;
                  uint64_t v200 = v228;
                  uint64_t v198 = v214;
                }
                else
                {
                  id v195 = (id)v243;
                  uint64_t v196 = sub_100221B40();

                  swift_willThrow();
                  swift_errorRetain();
                  id v197 = v228;
                  uint64_t v198 = v171;
                  id v199 = v241;
                  sub_10012F308(0, v196, v235, v242, (uint64_t)v241, (uint64_t)v216, v227, v221, v171, (int)v222, v228, v231, v239, v220, v230, v219, (uint64_t)v232, v218, v240,
                    v238,
                    v229);

                  swift_errorRelease();
                  swift_errorRelease();

                  uint64_t v200 = v197;
                  swift_release();
                  uint64_t v201 = v237;
                  uint64_t v202 = v223;
                }

                swift_bridgeObjectRelease();
                swift_release_n();
                uint64_t v207 = v238;

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return (*(uint64_t (**)(char *, uint64_t))(v236 + 8))(v234, v201);
              }
LABEL_65:
              __break(1u);
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_65;
        }
        swift_bridgeObjectRelease();
      }
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v114 = sub_100222090();
      sub_100003CC8(v114, (uint64_t)qword_10029E7D0);
      id v115 = sub_100222070();
      os_log_type_t v116 = sub_1002224E0();
      if (os_log_type_enabled(v115, v116))
      {
        unint64_t v117 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v117 = 0;
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "Bad format CRK: recovery string or salt not set", v117, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v111 = swift_allocError();
      long long v113 = xmmword_100229950;
    }
    else
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v107 = sub_100222090();
      sub_100003CC8(v107, (uint64_t)qword_10029E7D0);
      os_log_type_t v108 = sub_100222070();
      os_log_type_t v109 = sub_1002224E0();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v110 = 0;
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "Custodian Recovery Key is not trusted", v110, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v111 = swift_allocError();
      long long v113 = xmmword_100229930;
    }
    *(_OWORD *)uint64_t v112 = v113;
    *(unsigned char *)(v112 + 16) = 13;
    v88(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v111);
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v236 + 8))(v234, v89);
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v79 = sub_100222090();
  sub_100003CC8(v79, (uint64_t)qword_10029E7D0);
  id v80 = v43;
  unint64_t v81 = sub_100222070();
  os_log_type_t v82 = sub_1002224E0();
  if (os_log_type_enabled(v81, v82))
  {
    id v83 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v243 = swift_slowAlloc();
    *(_DWORD *)id v83 = 136446210;
    id v84 = [v80 uuid];
    uint64_t v85 = sub_100222270();
    unint64_t v87 = v86;

    uint64_t v245 = sub_1001BEBDC(v85, v87, (uint64_t *)&v243);
    sub_100222690();

    uint64_t v47 = v236;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "Unable to find custodian recovery key %{public}s on model", v83, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v104 = v237;
  sub_100042D4C();
  uint64_t v105 = swift_allocError();
  *(_OWORD *)uint64_t v106 = xmmword_100229920;
  *(unsigned char *)(v106 + 16) = 13;
  v235(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v105);
  swift_errorRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v234, v104);
}

void sub_10012F308(char a1, uint64_t a2, void (*a3)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, int a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (a1)
  {
    v54[0] = (id)0x6974707972636E65;
    v54[1] = (id)0xEF2079656B2D6E6FLL;
    v56._countAndFlagsBits = a6;
    v56._object = a7;
    sub_100222310(v56);
    uint64_t v23 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v51 = a20;
    uint64_t v24 = a4;
    id v25 = a11;
    swift_retain();
    id v50 = a8;
    id v26 = a9;
    swift_bridgeObjectRetain();
    id v27 = a13;
    swift_bridgeObjectRetain();
    id v28 = [v23 defaultManager];
    id v29 = [objc_allocWithZone((Class)_SFIdentity) initWithKeyPair:a5];
    SFAccessibilityMakeWithMode();
    id v30 = [objc_allocWithZone((Class)_SFAccessPolicy) initWithAccessibility:v54 sharingPolicy:0];
    NSString v31 = sub_100222260();
    [v30 setAccessGroup:v31];

    NSString v32 = sub_100222260();
    v54[0] = 0;
    LODWORD(v31) = [v28 setIdentity:v29 forIdentifier:v32 accessPolicy:v30 error:v54];

    if (v31)
    {
      id v33 = v54[0];
      sub_10012F948(1, 0, a3, v24, a8, v26, a10, v25, a12, a13, a14, a15, a16, a17, a18, a19, v51, a21);

      swift_release();
    }
    else
    {
      id v41 = v54[0];
      id v49 = v27;
      unint64_t v42 = v26;
      id v43 = v25;
      uint64_t v44 = v24;
      uint64_t v45 = sub_100221B40();

      swift_willThrow();
      swift_errorRetain();
      sub_10012F948(0, v45, a3, v44, a8, v42, a10, v43, a12, a13, a14, a15, a16, a17, a18, a19, v51, a21);

      swift_errorRelease();
      swift_errorRelease();

      id v25 = v43;
      id v26 = v42;
      id v27 = v49;
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_100222090();
    sub_100003CC8(v35, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    Swift::String v36 = sub_100222070();
    os_log_type_t v37 = sub_100222500();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      v54[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446210;
      uint64_t v55 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v39 = sub_1002222C0();
      uint64_t v55 = sub_1001BEBDC(v39, v40, (uint64_t *)v54);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unable to save signing key: %{public}s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v46 = a2;
    if (!a2)
    {
      sub_100042D4C();
      uint64_t v46 = swift_allocError();
      *(_OWORD *)uint64_t v47 = xmmword_1002311D0;
      *(unsigned char *)(v47 + 16) = 13;
    }
    swift_errorRetain();
    a3(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v46);
    swift_errorRelease();
  }
}

void sub_10012F948(char a1, uint64_t a2, void (*a3)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t), uint64_t a4, void *a5, void *a6, int a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (a1)
  {
    if (a5)
    {
      id v44 = a5;
    }
    else
    {
      if (qword_100298BA8 != -1) {
        swift_once();
      }
      id v44 = (id)qword_1002A0260;
    }
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = a3;
    *(void *)(v34 + 24) = a4;
    *(void *)(v34 + 32) = a2;
    *(void *)(v34 + 40) = a5;
    *(void *)(v34 + 48) = a6;
    *(_DWORD *)(v34 + 56) = a7;
    *(void *)(v34 + 64) = a8;
    *(void *)(v34 + 72) = a9;
    *(void *)(v34 + 80) = a10;
    *(void *)(v34 + 88) = a11;
    *(void *)(v34 + 96) = a12;
    *(void *)(v34 + 104) = a13;
    *(void *)(v34 + 112) = a14;
    *(void *)(v34 + 120) = a15;
    *(void *)(v34 + 128) = a16;
    *(void *)(v34 + 136) = a17;
    *(void *)(v34 + 144) = a18;
    sub_1000046DC(&qword_1002995D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002311B0;
    *(void *)(inited + 32) = v44;
    unint64_t v45 = inited;
    sub_1002223E0();
    id v36 = a5;
    swift_retain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v37 = a17;
    id v38 = a8;
    id v39 = v44;
    unint64_t v40 = a6;
    swift_bridgeObjectRetain();
    id v41 = a10;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1001A0974(v45);
    swift_bridgeObjectRelease();
    id v43 = v39;
    swift_retain();
    sub_1001AA2E4(v42, v40, (void (*)(void))sub_1001B3940, v34, v43);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_100222090();
    sub_100003CC8(v26, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v27 = sub_100222070();
    os_log_type_t v28 = sub_100222500();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      unint64_t v45 = swift_slowAlloc();
      *(_DWORD *)id v29 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v30 = sub_1002222C0();
      sub_1001BEBDC(v30, v31, (uint64_t *)&v45);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unable to save encryption key: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v32 = a2;
    if (!a2)
    {
      sub_100042D4C();
      uint64_t v32 = swift_allocError();
      *(_OWORD *)uint64_t v33 = xmmword_1002311D0;
      *(unsigned char *)(v33 + 16) = 13;
    }
    swift_errorRetain();
    a3(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v32);
    swift_errorRelease();
  }
}

uint64_t sub_10012FDD0(void *a1, uint64_t a2, void (*a3)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, char *a7, int a8, void *a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (!a1 || a2)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100222090();
    sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v24 = sub_100222070();
    os_log_type_t v25 = sub_1002224E0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v53 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v27 = sub_1002222C0();
      uint64_t v53 = sub_1001BEBDC(v27, v28, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Unable to fetch policy: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (a5)
      {
LABEL_7:
        uint64_t v29 = a5;
LABEL_10:
        swift_errorRetain();
        a3(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v29);
        return swift_errorRelease();
      }
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      if (a5) {
        goto LABEL_7;
      }
    }
    sub_100042D4C();
    uint64_t v29 = swift_allocError();
    *(_OWORD *)uint64_t v30 = xmmword_1002311C0;
    *(unsigned char *)(v30 + 16) = 13;
    goto LABEL_10;
  }
  id v35 = a1;
  id v36 = v35;
  if (a6)
  {
    id v37 = [v35 version];
    id v38 = *(void **)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride];
    *(void *)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride] = v37;
  }
  id v50 = *(id *)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v39 = swift_allocObject();
  id v40 = v36;
  id v49 = v36;
  uint64_t v41 = v39;
  *(_DWORD *)(v39 + 16) = a8;
  *(void *)(v39 + 24) = a9;
  *(void *)(v39 + 32) = v40;
  *(void *)(v39 + 40) = a10;
  *(void *)(v39 + 48) = a11;
  *(void *)(v39 + 56) = a12;
  *(void *)(v39 + 64) = a13;
  *(void *)(v39 + 72) = a14;
  *(void *)(v39 + 80) = a15;
  *(void *)(v39 + 88) = a16;
  *(void *)(v39 + 96) = a17;
  *(void *)(v39 + 104) = a18;
  *(void *)(v39 + 112) = a7;
  *(void *)(v39 + 120) = a3;
  *(void *)(v39 + 128) = a4;
  *(void *)(v39 + 136) = a19;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_1001B3A50;
  *(void *)(v42 + 24) = v41;
  aBlock[4] = (uint64_t)sub_1001B8924;
  aBlock[5] = v42;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100112F58;
  aBlock[3] = (uint64_t)&unk_100285150;
  id v43 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v44 = a7;
  swift_retain();
  swift_retain();
  id v45 = a18;
  id v46 = a9;
  swift_retain();
  id v47 = v49;
  swift_bridgeObjectRetain();
  id v48 = a11;
  swift_bridgeObjectRetain();
  swift_release();
  [v50 performBlockAndWait:v43];

  _Block_release(v43);
  LOBYTE(v47) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v47) {
    __break(1u);
  }
  return result;
}

void sub_1001302A0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void (*a14)(void, void, void, void, void), uint64_t a15, uint64_t a16)
{
  unint64_t v175 = a8;
  uint64_t v176 = a7;
  unint64_t v177 = a6;
  uint64_t v178 = a4;
  id v179 = a5;
  uint64_t RecoverableTLKSharesRequest = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  __chkstk_darwin(RecoverableTLKSharesRequest, v19);
  unint64_t v170 = (char *)v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v171 = a2;
  LODWORD(v174) = sub_100112B4C(a2, a1);
  id v21 = [a3 version];
  id v22 = [v21 versionNumber];

  if (qword_100298BB0 != -1) {
    swift_once();
  }
  id v173 = a14;
  uint64_t v23 = (void *)qword_1002A0268;
  if (v22 >= [(id)qword_1002A0268 versionNumber])
  {
    id v24 = v23;
    id v25 = [a3 version];
  }
  else
  {
    id v24 = [a3 version];
    id v25 = 0;
  }
  uint64_t v172 = a15;
  id v26 = objc_allocWithZone((Class)TPPeerStableInfo);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v27 = a12;
  uint64_t v28 = v178;
  swift_bridgeObjectRetain();
  uint64_t v29 = (uint64_t)v179;
  id v30 = v179;
  uint64_t v31 = swift_bridgeObjectRetain();
  id v179 = sub_1001AA754(1, (uint64_t)v24, (uint64_t)v25, v28, v174, v29, 0, 0, v177, v31, v175, a9, a10, a11, (uint64_t)v27, 0, 0xF000000000000000, 0, 0xF000000000000000,
           1);

  uint64_t v32 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v33 = *(id *)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  id v34 = v171;
  NSString v35 = [v171 peerID];
  if (!v35)
  {
    sub_100222270();
    NSString v35 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  [v33 setEgoPeerID:v35];

  id v36 = *(id *)(a13 + v32);
  id v37 = [v34 data];
  uint64_t v38 = sub_100221BF0();
  unint64_t v40 = v39;

  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v38, v40);
  [v36 setEgoPeerPermanentInfo:isa];

  id v42 = *(id *)(a13 + v32);
  id v43 = [v34 sig];
  uint64_t v44 = sub_100221BF0();
  unint64_t v46 = v45;

  Class v47 = sub_100221BD0().super.isa;
  sub_100005A40(v44, v46);
  [v42 setEgoPeerPermanentInfoSig:v47];

  id v48 = *(id *)(a13 + v32);
  id v49 = v179;
  id v50 = [v179 data];
  uint64_t v51 = sub_100221BF0();
  unint64_t v53 = v52;

  Class v54 = sub_100221BD0().super.isa;
  sub_100005A40(v51, v53);
  [v48 setEgoPeerStableInfo:v54];

  id v55 = *(id *)(a13 + v32);
  id v56 = [v49 sig];
  uint64_t v57 = sub_100221BF0();
  unint64_t v59 = v58;

  Class v60 = sub_100221BD0().super.isa;
  sub_100005A40(v57, v59);
  [v55 setEgoPeerStableInfoSig:v60];

  uint64_t v61 = *(void **)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v181 = 0;
  if ([v61 save:&v181])
  {
    id v62 = *(void **)(a13 + v32);
    id v63 = v181;
    id v64 = [v62 egoPeerID];
    if (v64)
    {
      uint64_t v65 = v64;
      sub_100222270();

      id v66 = [*(id *)(a13 + v32) egoPeerPermanentInfo];
      if (v66)
      {
        id v67 = v66;
        uint64_t v68 = sub_100221BF0();
        unint64_t v70 = v69;

        id v71 = [*(id *)(a13 + v32) egoPeerPermanentInfoSig];
        if (v71)
        {
          unint64_t v72 = v71;
          uint64_t v178 = sub_100221BF0();
          unint64_t v74 = v73;

          id v75 = [*(id *)(a13 + v32) egoPeerStableInfo];
          if (v75)
          {
            uint64_t v76 = v75;
            uint64_t v176 = sub_100221BF0();
            unint64_t v177 = v77;

            id v78 = [*(id *)(a13 + v32) egoPeerStableInfoSig];
            if (v78)
            {
              uint64_t v79 = v78;
              id v80 = (void *)sub_100221BF0();
              unint64_t v81 = v70;
              unint64_t v174 = v82;
              unint64_t v175 = v74;
              id v171 = v80;

              id v83 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
              sub_1000059E8(v68, v70);
              uint64_t v84 = v178;
              sub_1000059E8(v178, v74);
              NSString v85 = sub_100222260();
              id v168 = v85;
              swift_bridgeObjectRelease();
              Class v86 = sub_100221BD0().super.isa;
              Class v87 = sub_100221BD0().super.isa;
              id v88 = [self permanentInfoWithPeerID:v85 data:v86 sig:v87 keyFactory:v83];
              id v167 = v83;

              sub_100005A40(v84, v175);
              sub_100005A40(v68, v81);

              id v168 = v88;
              if (!v88)
              {
                sub_100042D4C();
                uint64_t v143 = swift_allocError();
                *(_OWORD *)uint64_t v144 = xmmword_1002297C0;
                *(unsigned char *)(v144 + 16) = 13;
                ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v143);
                swift_errorRelease();

                sub_100005A40((uint64_t)v171, v174);
                sub_100005A40(v176, v177);
                sub_100005A40(v178, v175);
                uint64_t v145 = v68;
                unint64_t v146 = v81;
LABEL_53:
                sub_100005A40(v145, v146);
                goto LABEL_54;
              }
              uint64_t v165 = v68;
              unint64_t v166 = v81;
              id v89 = objc_allocWithZone((Class)TPPeerStableInfo);
              uint64_t v91 = v176;
              unint64_t v90 = v177;
              sub_1000059E8(v176, v177);
              uint64_t v92 = (uint64_t)v171;
              unint64_t v93 = v174;
              sub_1000059E8((uint64_t)v171, v174);
              Class v94 = sub_100221BD0().super.isa;
              Class v95 = sub_100221BD0().super.isa;
              id v96 = [v89 initWithData:v94 sig:v95];
              sub_100005A40(v92, v93);
              sub_100005A40(v91, v90);

              if (v96)
              {
                uint64_t v97 = v96;
                id v98 = v168;
                id v99 = [v168 modelID];
                int v100 = sub_100222270();
                int v102 = v101;

                unint64_t v156 = sub_10015A2F8(v100, v102, v97);
                swift_bridgeObjectRelease();
                sub_1001A56AC(&qword_10029A830, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
                sub_100221F70();
                uint64_t v157 = *(void *)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32);
                uint64_t RecoverableTLKSharesRequest = *(void *)(a13
                                                        + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish
                                                        + 24);
                v164[1] = sub_1000059A4((void *)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish), RecoverableTLKSharesRequest);
                id v158 = (void *)swift_allocObject();
                v158[2] = v173;
                v158[3] = v172;
                v158[4] = v98;
                v158[5] = v97;
                v158[6] = v156;
                v158[7] = a16;
                uint64_t v159 = *(void *)(v157 + 16);
                id v173 = *(void (**)(void, void, void, void, void))(v159 + 72);
                swift_retain();
                id v160 = v98;
                double v161 = v97;
                id v162 = v156;
                swift_retain();
                uint64_t v163 = (uint64_t)v170;
                v173(v170, sub_1001B3B48, v158, RecoverableTLKSharesRequest, v159);

                swift_release();
                sub_100005A40((uint64_t)v171, v174);
                sub_100005A40(v176, v177);

                sub_100005A40(v178, v175);
                sub_100005A40(v165, v166);
                sub_1001B7EAC(v163, type metadata accessor for FetchRecoverableTLKSharesRequest);
                return;
              }
              unint64_t v126 = v175;
              if (qword_100298EB8 != -1) {
                swift_once();
              }
              uint64_t v147 = sub_100222090();
              sub_100003CC8(v147, (uint64_t)qword_10029E7D0);
              unint64_t v148 = sub_100222070();
              os_log_type_t v149 = sub_1002224E0();
              BOOL v150 = os_log_type_enabled(v148, v149);
              uint64_t v151 = (uint64_t)v171;
              uint64_t v68 = v165;
              unint64_t v70 = v166;
              id v152 = v167;
              if (v150)
              {
                unint64_t v153 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)unint64_t v153 = 0;
                _os_log_impl((void *)&_mh_execute_header, v148, v149, "Invalid stableinfo or signature", v153, 2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v154 = swift_allocError();
              *(_OWORD *)uint64_t v155 = xmmword_100229940;
              *(unsigned char *)(v155 + 16) = 13;
              ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v154);
              swift_errorRelease();

              sub_100005A40(v151, v174);
              sub_100005A40(v176, v177);
              uint64_t v135 = v178;
            }
            else
            {
              unint64_t v126 = v74;
              swift_bridgeObjectRelease();
              uint64_t v136 = v178;
              if (qword_100298EB8 != -1) {
                swift_once();
              }
              uint64_t v137 = sub_100222090();
              sub_100003CC8(v137, (uint64_t)qword_10029E7D0);
              uint64_t v138 = sub_100222070();
              os_log_type_t v139 = sub_1002224E0();
              if (os_log_type_enabled(v138, v139))
              {
                unint64_t v140 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)unint64_t v140 = 0;
                _os_log_impl((void *)&_mh_execute_header, v138, v139, "stableInfoSig does not exist", v140, 2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v141 = swift_allocError();
              *(_OWORD *)uint64_t v142 = xmmword_1002311E0;
              *(unsigned char *)(v142 + 16) = 13;
              ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v141);
              swift_errorRelease();
              sub_100005A40(v176, v177);
              uint64_t v135 = v136;
            }
          }
          else
          {
            unint64_t v126 = v74;
            swift_bridgeObjectRelease();
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v127 = sub_100222090();
            sub_100003CC8(v127, (uint64_t)qword_10029E7D0);
            os_log_type_t v128 = sub_100222070();
            os_log_type_t v129 = sub_1002224E0();
            BOOL v130 = os_log_type_enabled(v128, v129);
            uint64_t v131 = v178;
            if (v130)
            {
              id v132 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v132 = 0;
              _os_log_impl((void *)&_mh_execute_header, v128, v129, "stableInfo does not exist", v132, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v133 = swift_allocError();
            *(_OWORD *)uint64_t v134 = xmmword_1002311E0;
            *(unsigned char *)(v134 + 16) = 13;
            ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v133);
            swift_errorRelease();
            uint64_t v135 = v131;
          }
          sub_100005A40(v135, v126);
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v120 = sub_100222090();
          sub_100003CC8(v120, (uint64_t)qword_10029E7D0);
          uint64_t v121 = sub_100222070();
          os_log_type_t v122 = sub_1002224E0();
          if (os_log_type_enabled(v121, v122))
          {
            id v123 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v123 = 0;
            _os_log_impl((void *)&_mh_execute_header, v121, v122, "permanentInfoSig does not exist", v123, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v124 = swift_allocError();
          *(_OWORD *)uint64_t v125 = xmmword_1002311E0;
          *(unsigned char *)(v125 + 16) = 13;
          ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v124);
          swift_errorRelease();
        }
        uint64_t v145 = v68;
        unint64_t v146 = v70;
        goto LABEL_53;
      }
      swift_bridgeObjectRelease();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v114 = sub_100222090();
      sub_100003CC8(v114, (uint64_t)qword_10029E7D0);
      id v115 = sub_100222070();
      os_log_type_t v116 = sub_1002224E0();
      if (os_log_type_enabled(v115, v116))
      {
        unint64_t v117 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v117 = 0;
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "permanentInfo does not exist", v117, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v118 = swift_allocError();
      *(_OWORD *)uint64_t v119 = xmmword_1002311E0;
      *(unsigned char *)(v119 + 16) = 13;
      ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v118);
    }
    else
    {
      sub_100042D4C();
      uint64_t v112 = swift_allocError();
      *(_OWORD *)uint64_t v113 = xmmword_1002297D0;
      *(unsigned char *)(v113 + 16) = 13;
      ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v112);
    }
    swift_errorRelease();
LABEL_54:

    return;
  }
  id v103 = v181;
  uint64_t v104 = sub_100221B40();

  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v105 = sub_100222090();
  sub_100003CC8(v105, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v106 = sub_100222070();
  os_log_type_t v107 = sub_100222500();
  if (os_log_type_enabled(v106, v107))
  {
    os_log_type_t v108 = (uint8_t *)swift_slowAlloc();
    id v181 = (id)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v108 = 136446210;
    uint64_t v180 = v104;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v109 = sub_1002222C0();
    uint64_t v180 = sub_1001BEBDC(v109, v110, (uint64_t *)&v181);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v106, v107, "Unable to save inheritance identity: %{public}s", v108, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v111 = (void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))v173;
  swift_errorRetain();
  v111(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v104);
  swift_errorRelease();
  swift_errorRelease();
}

uint64_t sub_10013185C(uint64_t *a1, uint64_t a2)
{
  id v3 = [*(id *)(a2 + 24) peerID];
  uint64_t v4 = sub_100222270();
  uint64_t v6 = v5;

  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v6;
  return result;
}

uint64_t sub_1001318CC(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v99 = a4;
  uint64_t v100 = a6;
  uint64_t v102 = a3;
  uint64_t RecoverableTLKShares = type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
  uint64_t v101 = *(void *)(RecoverableTLKShares - 8);
  __chkstk_darwin(RecoverableTLKShares - 8, v12);
  uint64_t v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecoverableTLKSharesResponse = type metadata accessor for FetchRecoverableTLKSharesResponse(0);
  uint64_t v17 = __chkstk_darwin(RecoverableTLKSharesResponse - 8, v16);
  uint64_t v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  id v22 = (char *)&v91 - v21;
  uint64_t v23 = sub_1000046DC(&qword_100299DC8);
  __chkstk_darwin(v23, v24);
  id v26 = (char **)((char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v26, &qword_100299DC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *v26;
    if (qword_100298EB8 == -1)
    {
LABEL_3:
      uint64_t v27 = sub_100222090();
      sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v28 = sub_100222070();
      os_log_type_t v29 = sub_100222500();
      if (os_log_type_enabled(v28, v29))
      {
        id v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        uint64_t v103 = (uint64_t)v19;
        uint64_t v104 = v31;
        *(_DWORD *)id v30 = 136446210;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v32 = sub_1002222C0();
        uint64_t v103 = sub_1001BEBDC(v32, v33, (uint64_t *)&v104);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "fetchRecoverableTlkshares failed: %{public}s", v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_errorRetain();
      ((void (*)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, char *))a2)(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, v19);
      swift_errorRelease();
      return swift_errorRelease();
    }
LABEL_33:
    swift_once();
    goto LABEL_3;
  }
  uint64_t v96 = a7;
  uint64_t v97 = (void (*)(uint64_t, uint64_t, uint64_t, unint64_t, id, void *, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void *, void))a2;
  sub_1001B7B9C((uint64_t)v26, (uint64_t)v22, type metadata accessor for FetchRecoverableTLKSharesResponse);
  id v98 = (uint64_t *)v22;
  uint64_t v34 = *(void *)v22;
  int64_t v35 = *(void *)(*(void *)v22 + 16);
  id v36 = _swiftEmptyArrayStorage;
  if (v35)
  {
    Class v95 = a5;
    uint64_t v104 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10018D17C(0, v35, 0);
    uint64_t v37 = v34 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
    uint64_t v38 = *(void *)(v101 + 72);
    id v36 = v104;
    do
    {
      sub_1001B7C04(v37, (uint64_t)v14, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      uint64_t v39 = *(void *)(*((void *)v14 + 2) + 16);
      sub_1001B7EAC((uint64_t)v14, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10018D17C(0, v36[2] + 1, 1);
        id v36 = v104;
      }
      unint64_t v41 = v36[2];
      unint64_t v40 = v36[3];
      if (v41 >= v40 >> 1)
      {
        sub_10018D17C(v40 > 1, v41 + 1, 1);
        id v36 = v104;
      }
      v36[2] = v41 + 1;
      v36[v41 + 4] = v39;
      v37 += v38;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    a5 = v95;
  }
  uint64_t v42 = v36[2];
  if (v42)
  {
    a2 = 0;
    id v43 = v36 + 4;
    uint64_t v44 = v98;
    while (1)
    {
      uint64_t v45 = *v43++;
      BOOL v46 = __OFADD__(a2, v45);
      a2 = (void *)((char *)a2 + v45);
      if (v46) {
        break;
      }
      if (!--v42) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
  a2 = 0;
  uint64_t v44 = v98;
LABEL_21:
  swift_bridgeObjectRelease();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_100222090();
  sub_100003CC8(v48, (uint64_t)qword_10029E7D0);
  sub_1001B7C04((uint64_t)v44, (uint64_t)v19, type metadata accessor for FetchRecoverableTLKSharesResponse);
  id v49 = sub_100222070();
  os_log_type_t v50 = sub_1002224E0();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 134218240;
    unint64_t v52 = *(void **)(*(void *)v19 + 16);
    sub_1001B7EAC((uint64_t)v19, type metadata accessor for FetchRecoverableTLKSharesResponse);
    uint64_t v104 = v52;
    sub_100222690();
    *(_WORD *)(v51 + 12) = 2048;
    uint64_t v104 = a2;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "fetchRecoverableTlkshares succeeded: found %ld views and %ld total TLKShares", (uint8_t *)v51, 0x16u);
    swift_slowDealloc();
  }
  else
  {
    sub_1001B7EAC((uint64_t)v19, type metadata accessor for FetchRecoverableTLKSharesResponse);
  }

  uint64_t v53 = *v44;
  uint64_t v104 = _swiftEmptyArrayStorage;
  uint64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    uint64_t v55 = v53 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
    uint64_t v56 = *(void *)(v101 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001B7C04(v55, (uint64_t)v14, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      uint64_t v57 = sub_100044CEC();
      sub_1001B7EAC((uint64_t)v14, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      sub_10011B3FC((unint64_t)v57);
      v55 += v56;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease();
    unint64_t v58 = v104;
  }
  else
  {
    unint64_t v58 = _swiftEmptyArrayStorage;
  }
  id v59 = v99;
  id v60 = [v99 peerID];
  uint64_t v61 = sub_100222270();
  uint64_t v101 = v62;

  id v63 = [v59 data];
  uint64_t v64 = sub_100221BF0();
  unint64_t v66 = v65;

  id v67 = [v59 sig];
  id v99 = (id)sub_100221BF0();
  Class v95 = v68;

  id v69 = [a5 data];
  uint64_t v70 = sub_100221BF0();
  unint64_t v93 = v71;
  uint64_t v94 = v70;

  id v72 = [a5 sig];
  uint64_t v73 = sub_100221BF0();
  uint64_t v91 = v73;
  unint64_t v92 = v74;
  unint64_t v75 = v74;

  id v76 = [*(id *)(v96 + 24) peerID];
  uint64_t v77 = sub_100222270();
  uint64_t v79 = v78;

  unint64_t v90 = v75;
  uint64_t v89 = v73;
  uint64_t v80 = v61;
  uint64_t v81 = v64;
  uint64_t v82 = v64;
  unint64_t v83 = v66;
  unint64_t v84 = v66;
  uint64_t v85 = (uint64_t)v99;
  uint64_t v86 = v94;
  unint64_t v87 = (unint64_t)v95;
  unint64_t v88 = v93;
  v97(v80, v101, v82, v84, v99, v95, v94, v93, v89, v90, v100, v77, v79, v58, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(v91, v92);
  sub_100005A40(v86, v88);
  sub_100005A40(v85, v87);
  sub_100005A40(v81, v83);
  swift_bridgeObjectRelease();
  return sub_1001B7EAC((uint64_t)v98, type metadata accessor for FetchRecoverableTLKSharesResponse);
}

uint64_t sub_1001321C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v2;
  v7[3] = sub_1001B79E0;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1001B79EC;
  *(void *)(v8 + 24) = v7;
  v13[4] = sub_1001B8924;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100286B40;
  id v9 = _Block_copy(v13);
  swift_retain();
  uint64_t v10 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  [v6 performBlockAndWait:v9];
  swift_release();
  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100132374(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (a2) {
    os_log_type_t v6 = sub_100222500();
  }
  else {
    os_log_type_t v6 = sub_1002224E0();
  }
  os_log_type_t v7 = v6;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v9 = sub_100222070();
  if (os_log_type_enabled(v9, v7))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    sub_100222690();
    *(_WORD *)(v10 + 12) = 2082;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v14._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v14);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v11 = 0x203A726F727265;
    }
    else
    {
      uint64_t v11 = 0x73736563637573;
    }
    sub_1001BEBDC(v11, 0xE700000000000000, &v13);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v7, "getEgoEpoch complete: %llu %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  return a3(a1, a2);
}

void sub_1001325F0(uint64_t a1, void (*a2)(void, void))
{
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (v4)
  {
    uint64_t v5 = v4;
    os_log_type_t v6 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
    id v28 = 0;
    id v7 = v6;
    id v8 = [v7 peerWithID:v5 error:&v28];

    id v9 = v28;
    if (v28)
    {
      id v10 = v28;

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_100222090();
      sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
      uint64_t v12 = v10;
      uint64_t v13 = sub_100222070();
      os_log_type_t v14 = sub_100222500();
      if (os_log_type_enabled(v13, v14))
      {
        unint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v15 = 138543362;
        uint64_t v16 = v12;
        uint64_t v17 = a2;
        uint64_t v18 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v28 = v18;
        sub_100222690();
        *uint64_t v27 = v18;
        a2 = v17;

        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error getting ego peer from model: %{public}@", v15, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v13 = v12;
      }

      uint64_t v24 = v12;
      a2(0, v9);
    }
    else if (v8)
    {
      id v21 = v8;
      id v22 = [v21 permanentInfo];
      id v23 = [v22 epoch];

      a2(v23, 0);
    }
    else
    {
      sub_100042D4C();
      uint64_t v25 = swift_allocError();
      *(_OWORD *)uint64_t v26 = xmmword_1002297D0;
      *(unsigned char *)(v26 + 16) = 13;
      a2(0, v25);
      swift_errorRelease();
    }
  }
  else
  {
    sub_100042D4C();
    uint64_t v19 = swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_1002297D0;
    *(unsigned char *)(v20 + 16) = 13;
    a2(0, v19);
    swift_errorRelease();
  }
}

uint64_t sub_1001329C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, void, void, void, void))
{
  if (a5) {
    os_log_type_t v13 = sub_100222500();
  }
  else {
    os_log_type_t v13 = sub_1002224E0();
  }
  os_log_type_t v14 = v13;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100222090();
  sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v16 = sub_100222070();
  if (os_log_type_enabled(v16, v14))
  {
    id v22 = a7;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446466;
    swift_bridgeObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v18 = sub_1002222C0();
    sub_1001BEBDC(v18, v19, &v23);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    if (a5)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v24._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v24);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v20 = 0x203A726F727265;
    }
    else
    {
      uint64_t v20 = 0x73736563637573;
    }
    sub_1001BEBDC(v20, 0xE700000000000000, &v23);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v14, "establish complete peer: %{public}s %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a7 = v22;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD000000000000034, 0x8000000100244830);
  return a7(a1, a2, a3, a4, a5);
}

uint64_t sub_100132CEC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, void, void *, void, uint64_t), uint64_t a6)
{
  swift_retain();
  sub_1001AA9A8(a2, a3, a4, a1, a5, a6);

  return swift_release();
}

uint64_t sub_100132D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = *(void **)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v10 = (void *)swift_allocObject();
  void v10[2] = v4;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  v10[6] = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1001B76FC;
  *(void *)(v11 + 24) = v10;
  v16[4] = sub_1001B8924;
  v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100112F58;
  v16[3] = &unk_100286960;
  uint64_t v12 = _Block_copy(v16);
  os_log_type_t v13 = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v12];
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100132F04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10017B8E4();
  id v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  v10[4] = a1;
  v10[5] = a4;
  v10[6] = a5;
  swift_retain();
  id v11 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100175500(0, (uint64_t)sub_1001B7774, (uint64_t)v10);

  return swift_release();
}

uint64_t sub_1001331C4(void *a1, uint64_t a2, objc_class *a3, objc_class *a4, objc_class *a5, objc_class *a6)
{
  if (!a1)
  {
    id v8 = *(void **)((char *)a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    id v10 = swift_allocObject();
    v10[2].Class isa = a4;
    v10[3].Class isa = (Class)a2;
    v10[4].Class isa = a3;
    v10[5].Class isa = a5;
    v10[6].Class isa = a6;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_1001B7800;
    *(void *)(a2 + 24) = v10;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100286A00;
    uint64_t v18 = _Block_copy(aBlock);
    unint64_t v19 = a4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v8 performBlockAndWait:v18];
    _Block_release(v18);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  id v8 = a1;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v10 = sub_100222070();
  os_log_type_t v11 = sub_100222500();
  if (!os_log_type_enabled(v10, v11))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v12 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v12 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v13 = sub_1002222C0();
  sub_1001BEBDC(v13, v14, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v10, v11, "fetchAfterEstablish failed to fetch changes: %{public}s", v12, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  return ((uint64_t (*)(void, void, void *, void, void *))a2)(0, 0, _swiftEmptyArrayStorage, 0, v8);
}

uint64_t sub_100133518(char *a1, void (*a2)(uint64_t, uint64_t, void *, NSObject *, uint64_t), uint64_t a3, objc_class *a4, uint64_t a5)
{
  uint64_t v10 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v11 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v11) {
    goto LABEL_15;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_100222270();
  unint64_t v15 = v14;
  id v16 = [*(id *)&a1[v10] egoPeerPermanentInfo];
  if (!v16)
  {
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  uint64_t v17 = v16;
  uint64_t v102 = a5;
  uint64_t v103 = v13;
  uint64_t v18 = a3;
  unint64_t v19 = a2;
  uint64_t v20 = sub_100221BF0();
  unint64_t v22 = v21;

  id v23 = [*(id *)&a1[v10] egoPeerPermanentInfoSig];
  if (!v23)
  {

    uint64_t v52 = v20;
    unint64_t v53 = v22;
LABEL_14:
    sub_100005A40(v52, v53);
    swift_bridgeObjectRelease();
    a2 = v19;
    goto LABEL_15;
  }
  Swift::String v24 = v23;
  uint64_t v104 = v20;
  unint64_t v105 = v22;
  uint64_t v25 = sub_100221BF0();
  unint64_t v27 = v26;

  id v28 = [*(id *)&a1[v10] egoPeerStableInfo];
  if (!v28)
  {

    sub_100005A40(v25, v27);
    uint64_t v52 = v104;
    unint64_t v53 = v105;
    goto LABEL_14;
  }
  os_log_type_t v29 = v28;
  unint64_t v99 = v15;
  unint64_t v100 = v27;
  uint64_t v101 = v25;
  uint64_t v30 = sub_100221BF0();
  unint64_t v32 = v31;

  id v33 = [*(id *)&a1[v10] egoPeerStableInfoSig];
  a2 = v19;
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v97 = v30;
    unint64_t v98 = v32;
    uint64_t v35 = sub_100221BF0();
    unint64_t v37 = v36;

    uint64_t v38 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    id v107 = 0;
    id v39 = v38;
    unsigned int v40 = [v39 hasPeerWithID:v12 error:&v107];

    uint64_t v41 = (uint64_t)v107;
    uint64_t v96 = v35;
    if (v107)
    {
      id v42 = v107;
      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_100222090();
      sub_100003CC8(v43, (uint64_t)qword_10029E7D0);
      id v44 = v42;
      swift_bridgeObjectRetain();
      id v45 = v44;
      BOOL v46 = sub_100222070();
      os_log_type_t v47 = sub_1002224E0();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        unint64_t v92 = (void *)swift_slowAlloc();
        id v107 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136446466;
        swift_bridgeObjectRetain();
        sub_1001BEBDC(v103, v99, (uint64_t *)&v107);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v48 + 12) = 2114;
        id v94 = v45;
        id v49 = v45;
        uint64_t v106 = _swift_stdlib_bridgeErrorToNSError();
        sub_100222690();
        *unint64_t v92 = v106;

        _os_log_impl((void *)&_mh_execute_header, v46, v47, "fetchAfterEstablish: error finding peer %{public}s in model: %{public}@", (uint8_t *)v48, 0x16u);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v45 = v94;
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v51 = v104;
      unint64_t v50 = v105;
      id v71 = v45;
      a2(0, 0, _swiftEmptyArrayStorage, 0, v41);

      sub_100005A40(v35, v37);
      uint64_t v72 = v97;
      unint64_t v73 = v98;
    }
    else
    {
      if (v40)
      {
        id v95 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
        swift_bridgeObjectRetain();
        sub_1000059E8(v104, v105);
        sub_1000059E8(v101, v100);
        NSString v93 = sub_100222260();
        swift_bridgeObjectRelease();
        Class isa = sub_100221BD0().super.isa;
        Class v61 = sub_100221BD0().super.isa;
        id v62 = [self permanentInfoWithPeerID:v93 data:isa sig:v61 keyFactory:v95];
        sub_100005A40(v101, v100);
        sub_100005A40(v104, v105);

        if (v62)
        {
          id v63 = objc_allocWithZone((Class)TPPeerStableInfo);
          sub_1000059E8(v97, v98);
          sub_1000059E8(v96, v37);
          Class v64 = sub_100221BD0().super.isa;
          Class v65 = sub_100221BD0().super.isa;
          id v66 = [v63 initWithData:v64 sig:v65];
          sub_100005A40(v96, v37);
          sub_100005A40(v97, v98);

          if (!v66)
          {
            swift_bridgeObjectRelease();
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v85 = sub_100222090();
            sub_100003CC8(v85, (uint64_t)qword_10029E7D0);
            uint64_t v86 = sub_100222070();
            os_log_type_t v87 = sub_1002224E0();
            if (os_log_type_enabled(v86, v87))
            {
              unint64_t v88 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v88 = 0;
              _os_log_impl((void *)&_mh_execute_header, v86, v87, "cannot create TPPeerStableInfo", v88, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v89 = swift_allocError();
            *(_OWORD *)uint64_t v90 = xmmword_100229940;
            *(unsigned char *)(v90 + 16) = 13;
            a2(0, 0, _swiftEmptyArrayStorage, 0, v89);
            swift_errorRelease();

            sub_100005A40(v96, v37);
            sub_100005A40(v97, v98);
            sub_100005A40(v101, v100);
            uint64_t v81 = v104;
            unint64_t v82 = v105;
            return sub_100005A40(v81, v82);
          }
          swift_bridgeObjectRetain();
          swift_retain();
          id v67 = a1;
          id v68 = v62;
          id v69 = v66;
          sub_1001AB944(a4, v102, v67, a2, v18, v67, v68, v69, v103, v99);

          swift_release();
          swift_bridgeObjectRelease_n();
          sub_100005A40(v96, v37);
          uint64_t v70 = v97;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_100042D4C();
          uint64_t v83 = swift_allocError();
          *(_OWORD *)uint64_t v84 = xmmword_1002297C0;
          *(unsigned char *)(v84 + 16) = 13;
          a2(0, 0, _swiftEmptyArrayStorage, 0, v83);
          swift_errorRelease();

          sub_100005A40(v96, v37);
          uint64_t v70 = v97;
        }
        sub_100005A40(v70, v98);
        sub_100005A40(v101, v100);
        uint64_t v81 = v104;
        unint64_t v82 = v105;
        return sub_100005A40(v81, v82);
      }
      uint64_t v74 = v30;
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v75 = sub_100222090();
      sub_100003CC8(v75, (uint64_t)qword_10029E7D0);
      swift_bridgeObjectRetain();
      id v76 = sub_100222070();
      os_log_type_t v77 = sub_1002224E0();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc();
        id v107 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v78 = 136446210;
        swift_bridgeObjectRetain();
        sub_1001BEBDC(v103, v99, (uint64_t *)&v107);
        uint64_t v74 = v97;
        sub_100222690();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "fetchAfterEstablish: did not find peer %{public}s in model", v78, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v51 = v104;
      unint64_t v50 = v105;
      sub_100042D4C();
      uint64_t v79 = swift_allocError();
      *(_OWORD *)uint64_t v80 = xmmword_1002311F0;
      *(unsigned char *)(v80 + 16) = 13;
      a2(0, 0, _swiftEmptyArrayStorage, 0, v79);
      swift_errorRelease();
      sub_100005A40(v96, v37);
      uint64_t v72 = v74;
      unint64_t v73 = v98;
    }
    sub_100005A40(v72, v73);
    sub_100005A40(v101, v100);
    uint64_t v81 = v51;
    unint64_t v82 = v50;
    return sub_100005A40(v81, v82);
  }

  sub_100005A40(v30, v32);
  sub_100005A40(v101, v100);
  sub_100005A40(v104, v105);
  swift_bridgeObjectRelease();
LABEL_15:
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_100222090();
  sub_100003CC8(v54, (uint64_t)qword_10029E7D0);
  uint64_t v55 = sub_100222070();
  os_log_type_t v56 = sub_1002224E0();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v57 = 0;
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "fetchAfterEstablish: failed to fetch egoPeerID", v57, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  uint64_t v58 = swift_allocError();
  *(_OWORD *)uint64_t v59 = xmmword_1002297D0;
  *(unsigned char *)(v59 + 16) = 13;
  a2(0, 0, _swiftEmptyArrayStorage, 0, v58);

  return swift_errorRelease();
}

void sub_100134174(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void *, NSObject *, uint64_t), int a4, int a5, id a6, NSObject *a7, uint64_t a8, uint64_t a9)
{
  if (a2)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100222090();
    sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = sub_100222070();
    os_log_type_t v13 = sub_100222500();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)unint64_t v14 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v15 = sub_1002222C0();
      sub_1001BEBDC(v15, v16, &v31);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "fetchAfterEstablish failed to update TLKs: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    a3(0, 0, _swiftEmptyArrayStorage, 0, a2);
  }
  else
  {
    id v20 = [a6 modelID];
    int v21 = sub_100222270();
    int v23 = v22;

    Swift::String v24 = sub_10015A2F8(v21, v23, a7);
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_100222090();
    sub_100003CC8(v25, (uint64_t)qword_10029E7D0);
    unint64_t v26 = sub_100222070();
    os_log_type_t v27 = sub_1002224E0();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "fetchAfterEstablish succeeded", v28, 2u);
      swift_slowDealloc();
    }

    if (a1) {
      os_log_type_t v29 = a1;
    }
    else {
      os_log_type_t v29 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    uint64_t v30 = v24;
    a3(a8, a9, v29, v24, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001346E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void *, void, uint64_t), uint64_t a5)
{
  os_log_type_t v6 = v5;
  uint64_t v12 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v13 = [*(id *)&v5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v13) {
    goto LABEL_16;
  }
  unint64_t v14 = v13;
  uint64_t v15 = sub_100222270();
  uint64_t v17 = v16;

  id v18 = [*(id *)&v6[v12] egoPeerPermanentInfo];
  if (!v18)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    sub_100042D4C();
    uint64_t v53 = swift_allocError();
    *(_OWORD *)uint64_t v54 = xmmword_1002297D0;
    *(unsigned char *)(v54 + 16) = 13;
    a4(0, 0, _swiftEmptyArrayStorage, 0, v53);
    return swift_errorRelease();
  }
  unint64_t v19 = v18;
  uint64_t v97 = a3;
  uint64_t v98 = v15;
  uint64_t v20 = sub_100221BF0();
  unint64_t v22 = v21;

  id v23 = [*(id *)&v6[v12] egoPeerPermanentInfoSig];
  if (!v23)
  {
LABEL_14:
    sub_100005A40(v20, v22);
    goto LABEL_15;
  }
  Swift::String v24 = v23;
  uint64_t v95 = a1;
  uint64_t v25 = sub_100221BF0();
  unint64_t v99 = v26;

  id v27 = [*(id *)&v6[v12] egoPeerStableInfo];
  if (!v27)
  {
LABEL_13:
    sub_100005A40(v25, v99);
    goto LABEL_14;
  }
  id v28 = v27;
  uint64_t v88 = a2;
  uint64_t v96 = a4;
  uint64_t v29 = sub_100221BF0();
  unint64_t v31 = v30;

  id v32 = [*(id *)&v6[v12] egoPeerStableInfoSig];
  if (!v32)
  {
    sub_100005A40(v29, v31);
    a4 = v96;
    goto LABEL_13;
  }
  id v33 = v32;
  unint64_t v92 = v31;
  uint64_t v93 = v29;
  uint64_t v94 = sub_100221BF0();
  unint64_t v91 = v34;

  id v35 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  swift_bridgeObjectRetain();
  sub_1000059E8(v20, v22);
  sub_1000059E8(v25, v99);
  NSString v36 = sub_100222260();
  swift_bridgeObjectRelease();
  Class isa = sub_100221BD0().super.isa;
  Class v38 = sub_100221BD0().super.isa;
  uint64_t v89 = v35;
  id v39 = [self permanentInfoWithPeerID:v36 data:isa sig:v38 keyFactory:v35];
  sub_100005A40(v25, v99);
  unint64_t v90 = v22;
  sub_100005A40(v20, v22);

  id v87 = v39;
  if (v39)
  {
    id v40 = objc_allocWithZone((Class)TPPeerStableInfo);
    sub_1000059E8(v93, v92);
    sub_1000059E8(v94, v91);
    Class v41 = sub_100221BD0().super.isa;
    Class v42 = sub_100221BD0().super.isa;
    id v43 = [v40 initWithData:v41 sig:v42];
    sub_100005A40(v94, v91);
    sub_100005A40(v93, v92);

    if (v43)
    {
      uint64_t v86 = v43;
      id v44 = [v39 machineID];
      uint64_t v45 = sub_100222270();
      unint64_t v47 = v46;

      LOBYTE(v44) = sub_1001EAE4C(v45, v47);
      swift_bridgeObjectRelease();
      if (v44)
      {
        uint64_t v48 = (void *)swift_allocObject();
        v48[2] = v96;
        v48[3] = a5;
        v48[4] = v6;
        v48[5] = v95;
        v48[6] = v39;
        v48[7] = v88;
        v48[8] = v98;
        v102._countAndFlagsBits = v98;
        v48[9] = v17;
        v48[10] = v86;
        v48[11] = v97;
        v48[12] = v20;
        v48[13] = v90;
        v48[14] = v25;
        v48[15] = v99;
        v48[16] = v93;
        v48[17] = v92;
        v48[18] = v94;
        v48[19] = v91;
        strcpy((char *)v100, "signing-key ");
        BYTE5(v100[1]) = 0;
        HIWORD(v100[1]) = -5120;
        v102._object = v17;
        sub_100222310(v102);
        swift_bridgeObjectRetain_n();
        sub_1000059E8(v20, v90);
        sub_1000059E8(v25, v99);
        sub_1000059E8(v93, v92);
        sub_1000059E8(v94, v91);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        id v49 = v6;
        swift_bridgeObjectRetain();
        id v50 = v39;
        swift_bridgeObjectRetain();
        id v51 = v86;
        sub_10019ED6C(v100[0], v100[1], (void (*)(char *, uint64_t))sub_1001B7678, (uint64_t)v48, v98, v17);

        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        sub_100005A40(v94, v91);
        sub_100005A40(v93, v92);
        sub_100005A40(v25, v99);
        sub_100005A40(v20, v90);
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v65 = sub_100222090();
        sub_100003CC8(v65, (uint64_t)qword_10029E7D0);
        id v66 = v39;
        id v67 = sub_100222070();
        os_log_type_t v68 = sub_1002224E0();
        id v69 = &selRef_setAllSelves_;
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          v100[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v70 = 136446210;
          id v71 = [v66 machineID];
          uint64_t v72 = sub_100222270();
          unint64_t v74 = v73;

          id v69 = &selRef_setAllSelves_;
          v100[2] = sub_1001BEBDC(v72, v74, v100);
          sub_100222690();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "establish: self machineID %{public}s not on list", v70, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        id v75 = objc_allocWithZone((Class)SecTapToRadar);
        NSString v76 = sub_100222260();
        NSString v77 = sub_100222260();
        NSString v78 = sub_100222260();
        id v79 = [v75 initTapToRadar:v76 description:v77 radar:v78];

        [v79 trigger];
        id v80 = [v66 v69[155]];
        uint64_t v81 = sub_100222270();
        uint64_t v83 = v82;

        sub_100042D4C();
        uint64_t v84 = swift_allocError();
        *(void *)uint64_t v85 = v81;
        *(void *)(v85 + 8) = v83;
        *(unsigned char *)(v85 + 16) = 2;
        v96(0, 0, _swiftEmptyArrayStorage, 0, v84);
        swift_errorRelease();

        sub_100005A40(v94, v91);
        sub_100005A40(v93, v92);
        sub_100005A40(v25, v99);
        return sub_100005A40(v20, v90);
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_100222090();
    sub_100003CC8(v59, (uint64_t)qword_10029E7D0);
    id v60 = sub_100222070();
    os_log_type_t v61 = sub_1002224E0();
    if (os_log_type_enabled(v60, v61))
    {
      id v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "cannot create TPPeerStableInfo", v62, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v63 = swift_allocError();
    *(_OWORD *)uint64_t v64 = xmmword_100229940;
    *(unsigned char *)(v64 + 16) = 13;
    v96(0, 0, _swiftEmptyArrayStorage, 0, v63);
    swift_errorRelease();

    sub_100005A40(v94, v91);
    sub_100005A40(v93, v92);
    sub_100005A40(v25, v99);
    uint64_t v57 = v20;
    unint64_t v58 = v90;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100042D4C();
    uint64_t v55 = swift_allocError();
    *(_OWORD *)uint64_t v56 = xmmword_1002297C0;
    *(unsigned char *)(v56 + 16) = 13;
    v96(0, 0, _swiftEmptyArrayStorage, 0, v55);
    swift_errorRelease();

    sub_100005A40(v94, v91);
    sub_100005A40(v93, v92);
    sub_100005A40(v25, v99);
    uint64_t v57 = v20;
    unint64_t v58 = v22;
  }

  return sub_100005A40(v57, v58);
}

uint64_t sub_100135218(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20 = a3;
  if (a1)
  {
    id v41 = *(id *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    unint64_t v26 = (void *)swift_allocObject();
    _OWORD v26[2] = a6;
    v26[3] = a1;
    void v26[4] = a7;
    v26[5] = a8;
    v26[6] = a3;
    v26[7] = a4;
    v26[8] = a5;
    v26[9] = a9;
    v26[10] = a10;
    v26[11] = a11;
    v26[12] = a12;
    v26[13] = a13;
    v26[14] = a14;
    v26[15] = a15;
    v26[16] = a16;
    v26[17] = a17;
    v26[18] = a18;
    v26[19] = a19;
    v26[20] = a20;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1001B3618;
    *(void *)(v20 + 24) = v26;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = v20;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100284FE8;
    id v27 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v28 = a1;
    swift_bridgeObjectRetain();
    id v29 = a7;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v30 = a5;
    swift_bridgeObjectRetain();
    id v31 = a11;
    sub_1000059E8(a13, a14);
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    swift_retain();
    swift_release();
    [v41 performBlockAndWait:v27];

    _Block_release(v27);
    LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v27 & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  uint64_t v33 = a2;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_100222090();
  sub_100003CC8(v34, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v35 = sub_100222070();
  os_log_type_t v36 = sub_100222500();
  if (os_log_type_enabled(v35, v36))
  {
    unint64_t v37 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v37 = 136446210;
    uint64_t v44 = v33;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v38 = sub_1002222C0();
    uint64_t v44 = sub_1001BEBDC(v38, v39, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Don't have my own peer keys; can't establish: %{public}s",
      v37,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return ((uint64_t (*)(void, void, void *, void, uint64_t))v20)(0, 0, _swiftEmptyArrayStorage, 0, v33);
}

uint64_t sub_100135674(unint64_t a1, uint64_t a2, void *a3, unint64_t a4, void (*a5)(void, void, void, void, void), uint64_t a6, char *a7, char *a8, char *a9, objc_class *a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17, unint64_t a18, unint64_t a19)
{
  uint64_t v288 = a7;
  unint64_t v289 = a8;
  v292 = a5;
  uint64_t v295 = a2;
  uint64_t v272 = type metadata accessor for EstablishRequest(0);
  __chkstk_darwin(v272, v23);
  uint64_t v273 = (char *)&v268 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  unint64_t v275 = (char *)&v268 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v271 = (uint64_t)&v268 - v30;
  uint64_t v278 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v274 = *(void *)(v278 - 8);
  uint64_t v32 = __chkstk_darwin(v278, v31);
  v270 = (_OWORD *)((char *)&v268 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32, v34);
  uint64_t v269 = (_OWORD *)((char *)&v268 - v35);
  uint64_t v276 = type metadata accessor for Bottle(0);
  uint64_t v37 = __chkstk_darwin(v276, v36);
  uint64_t v280 = (uint64_t)&v268 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v39);
  uint64_t v281 = (uint64_t)&v268 - v40;
  uint64_t v41 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v41 - 8, v42);
  uint64_t v284 = (uint64_t)&v268 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v283 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v282 = *(void *)(v283 - 8);
  __chkstk_darwin(v283, v44);
  unint64_t v285 = (unint64_t)&v268 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for TLKShare(0);
  v299 = *(char **)(v46 - 8);
  v300 = (void *)v46;
  uint64_t v48 = __chkstk_darwin(v46, v47);
  unint64_t v294 = (unint64_t)&v268 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48, v50);
  v296 = (char *)&v268 - v51;
  uint64_t v286 = type metadata accessor for Peer(0);
  uint64_t v53 = __chkstk_darwin(v286, v52);
  uint64_t v279 = (uint64_t)&v268 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v53, v55);
  uint64_t v277 = (uint64_t)&v268 - v57;
  uint64_t v59 = __chkstk_darwin(v56, v58);
  uint64_t v287 = (uint64_t)&v268 - v60;
  __chkstk_darwin(v59, v61);
  uint64_t v290 = (uint64_t)&v268 - v62;
  uint64_t v63 = type metadata accessor for ViewKeys(0);
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v66 = __chkstk_darwin(v63, v65);
  os_log_type_t v68 = (char *)&v268 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v66, v69);
  id v71 = (char *)&v268 - v70;
  unint64_t v301 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_100222970();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v72 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v73 = _swiftEmptyArrayStorage;
  uint64_t v297 = a4;
  uint64_t v293 = a6;
  v291 = a3;
  if (v72)
  {
    v305 = (char *)_swiftEmptyArrayStorage;
    sub_10018D1F8(0, v72 & ~(v72 >> 63), 0);
    if (v72 < 0)
    {
LABEL_115:
      __break(1u);
      swift_once();
      uint64_t v98 = sub_100222090();
      sub_100003CC8(v98, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v99 = sub_100222070();
      os_log_type_t v100 = sub_100222500();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        v305 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v101 = 136446210;
        uint64_t v304 = a6;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v102 = sub_1002222C0();
        uint64_t v304 = sub_1001BEBDC(v102, v103, (uint64_t *)&v305);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        uint64_t v104 = "Unable to make TLKShares for self: %{public}s";
LABEL_53:
        _os_log_impl((void *)&_mh_execute_header, v99, v100, v104, v101, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_55:

        swift_errorRetain();
        v292(0, 0, _swiftEmptyArrayStorage, 0, a6);
        swift_errorRelease();
        return swift_errorRelease();
      }
LABEL_54:
      swift_errorRelease();
      swift_errorRelease();
      goto LABEL_55;
    }
    unint64_t v302 = v301 & 0xC000000000000001;
    v303 = (char *)v72;
    if ((v301 & 0xC000000000000001) != 0)
    {
      unint64_t v74 = 0;
      a6 = 0;
      do
      {
        uint64_t v75 = sub_100222880();
        uint64_t v266 = __chkstk_darwin(v75, v76);
        sub_1001A56AC(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
        sub_100221F70();
        swift_unknownObjectRelease();
        NSString v77 = v305;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D1F8(0, *((void *)v77 + 2) + 1, 1);
          NSString v77 = v305;
        }
        unint64_t v79 = *((void *)v77 + 2);
        unint64_t v78 = *((void *)v77 + 3);
        if (v79 >= v78 >> 1)
        {
          sub_10018D1F8(v78 > 1, v79 + 1, 1);
          NSString v77 = v305;
        }
        ++v74;
        *((void *)v77 + 2) = v79 + 1;
        sub_1001B7B9C((uint64_t)v71, (uint64_t)&v77[((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v79], type metadata accessor for ViewKeys);
      }
      while (v303 != v74);
    }
    else
    {
      unint64_t v82 = v301 + 32;
      uint64_t v83 = sub_1001A56AC(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
      uint64_t v298 = v83;
      a6 = 0;
      uint64_t v85 = v303;
      do
      {
        __chkstk_darwin(v83, v84);
        uint64_t v266 = (uint64_t)v86;
        id v87 = v86;
        sub_100221F70();

        NSString v77 = v305;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D1F8(0, *((void *)v77 + 2) + 1, 1);
          NSString v77 = v305;
        }
        unint64_t v89 = *((void *)v77 + 2);
        unint64_t v88 = *((void *)v77 + 3);
        if (v89 >= v88 >> 1)
        {
          sub_10018D1F8(v88 > 1, v89 + 1, 1);
          NSString v77 = v305;
        }
        *((void *)v77 + 2) = v89 + 1;
        uint64_t v83 = sub_1001B7B9C((uint64_t)v68, (uint64_t)&v77[((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v89], type metadata accessor for ViewKeys);
        v82 += 8;
        --v85;
      }
      while (v85);
    }
    unint64_t v90 = v77;
    v305 = (char *)_swiftEmptyArrayStorage;
    sub_1002228D0();
    unint64_t v91 = 0;
    a3 = v291;
    unint64_t v92 = v301;
    uint64_t v81 = v294;
    do
    {
      if (v302) {
        id v93 = (id)sub_100222880();
      }
      else {
        id v93 = *(id *)(v92 + 8 * (void)v91 + 32);
      }
      uint64_t v94 = v93;
      ++v91;
      id v95 = [v93 tlk];

      sub_1002228B0();
      sub_1002228E0();
      sub_1002228F0();
      sub_1002228C0();
    }
    while (v303 != v91);
    unint64_t v73 = v305;
    a4 = v297;
    id v80 = v90;
  }
  else
  {
    a6 = 0;
    id v80 = (char *)_swiftEmptyArrayStorage;
    uint64_t v81 = v294;
  }
  uint64_t v96 = (uint64_t)[a3 epoch];
  uint64_t v97 = v295;
  if (v96 < 0)
  {
    __break(1u);
    goto LABEL_115;
  }
  unint64_t v105 = (void *)sub_100116CE4((char *)v73, v295, v295, v96);
  swift_bridgeObjectRelease();
  v303 = v80;
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_100222970();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v106 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v106)
  {
    unint64_t v110 = _swiftEmptyArrayStorage;
    goto LABEL_50;
  }
  v305 = (char *)_swiftEmptyArrayStorage;
  sub_10018D1BC(0, v106 & ~(v106 >> 63), 0);
  if (v106 < 0)
  {
    __break(1u);
    swift_once();
    uint64_t v122 = sub_100222090();
    sub_100003CC8(v122, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v99 = sub_100222070();
    os_log_type_t v100 = sub_100222500();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc();
      v305 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v101 = 136446210;
      uint64_t v304 = 0;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v123 = sub_1002222C0();
      uint64_t v304 = sub_1001BEBDC(v123, v124, (uint64_t *)&v305);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v104 = "Unable to create peer for joining: %{public}s";
      goto LABEL_53;
    }
    goto LABEL_54;
  }
  if ((a4 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v106; ++i)
    {
      uint64_t v108 = sub_100222880();
      uint64_t v266 = __chkstk_darwin(v108, v109);
      sub_1001A56AC(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
      sub_100221F70();
      swift_unknownObjectRelease();
      unint64_t v110 = v305;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10018D1BC(0, v110[2] + 1, 1);
        unint64_t v110 = v305;
      }
      unint64_t v112 = v110[2];
      unint64_t v111 = v110[3];
      if (v112 >= v111 >> 1)
      {
        sub_10018D1BC(v111 > 1, v112 + 1, 1);
        unint64_t v110 = v305;
      }
      v110[2] = v112 + 1;
      sub_1001B7B9C((uint64_t)v296, (uint64_t)v110+ ((v299[80] + 32) & ~(unint64_t)v299[80])+ *((void *)v299 + 9) * v112, type metadata accessor for TLKShare);
    }
  }
  else
  {
    unint64_t v113 = a4 + 32;
    uint64_t v114 = sub_1001A56AC(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
    do
    {
      __chkstk_darwin(v114, v115);
      uint64_t v266 = (uint64_t)v116;
      id v117 = v116;
      sub_100221F70();

      unint64_t v110 = v305;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10018D1BC(0, v110[2] + 1, 1);
        unint64_t v110 = v305;
      }
      unint64_t v119 = v110[2];
      unint64_t v118 = v110[3];
      if (v119 >= v118 >> 1)
      {
        sub_10018D1BC(v118 > 1, v119 + 1, 1);
        unint64_t v110 = v305;
      }
      v110[2] = v119 + 1;
      uint64_t v114 = sub_1001B7B9C(v81, (uint64_t)v110+ ((v299[80] + 32) & ~(unint64_t)v299[80])+ *((void *)v299 + 9) * v119, type metadata accessor for TLKShare);
      v113 += 8;
      --v106;
    }
    while (v106);
  }
  a3 = v291;
  uint64_t v97 = v295;
LABEL_50:
  v305 = (char *)v105;
  sub_10011B5C8((uint64_t)v110);
  uint64_t v120 = v305;
  uint64_t v121 = v287;
  id v126 = sub_10015ED1C(v287, v289, a9, a3, a10, 0, 0, a11, _swiftEmptyArrayStorage, v97);
  sub_1001B7B9C(v121, v290, type metadata accessor for Peer);
  uint64_t v127 = qword_100298EB8;
  id v128 = v126;
  os_log_type_t v129 = v128;
  if (v127 != -1) {
    swift_once();
  }
  uint64_t v130 = sub_100222090();
  uint64_t v131 = sub_100003CC8(v130, (uint64_t)qword_10029E7D0);
  id v132 = v129;
  unint64_t v302 = v131;
  uint64_t v133 = sub_100222070();
  os_log_type_t v134 = sub_1002224E0();
  BOOL v135 = os_log_type_enabled(v133, v134);
  v299 = a9;
  v300 = v120;
  if (v135)
  {
    uint64_t v136 = (uint8_t *)swift_slowAlloc();
    uint64_t v137 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v136 = 138543362;
    v305 = (char *)v132;
    uint64_t v138 = v132;
    os_log_type_t v139 = v132;
    sub_100222690();
    *uint64_t v137 = v138;

    id v132 = v138;
    _os_log_impl((void *)&_mh_execute_header, v133, v134, "dynamic info: %{public}@", v136, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v133 = v132;
  }
  uint64_t v140 = v285;
  uint64_t v141 = v284;

  sub_10000D830(v290 + *(int *)(v286 + 32), v141, &qword_100299F18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v282 + 48))(v141, 1, v283) == 1)
  {
    *(_OWORD *)uint64_t v140 = xmmword_100229520;
    *(_OWORD *)(v140 + 16) = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v141, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C(v141, v140, type metadata accessor for SignedPeerStableInfo);
  }
  uint64_t v142 = *(void *)v140;
  unint64_t v143 = *(void *)(v140 + 8);
  uint64_t v144 = *(void *)(v140 + 16);
  unint64_t v145 = *(void *)(v140 + 24);
  id v146 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v142, v143);
  sub_1000059E8(v144, v145);
  Class isa = sub_100221BD0().super.isa;
  Class v148 = sub_100221BD0().super.isa;
  id v149 = [v146 initWithData:isa sig:v148];
  uint64_t v150 = v140;
  uint64_t v151 = (uint64_t)v149;
  sub_100005A40(v144, v145);
  sub_100005A40(v142, v143);

  sub_1001B7EAC(v150, type metadata accessor for SignedPeerStableInfo);
  if (!v151)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v155 = sub_100222070();
    os_log_type_t v156 = sub_1002224E0();
    if (os_log_type_enabled(v155, v156))
    {
      uint64_t v157 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v157 = 0;
      _os_log_impl((void *)&_mh_execute_header, v155, v156, "Unable to create new peer stable info for joining", v157, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v158 = swift_allocError();
    *(_OWORD *)uint64_t v159 = xmmword_100229940;
    *(unsigned char *)(v159 + 16) = 13;
    v292(0, 0, _swiftEmptyArrayStorage, 0, v158);

    swift_errorRelease();
    return sub_1001B7EAC(v290, type metadata accessor for Peer);
  }
  uint64_t v152 = v280;
  unint64_t v153 = v289;
  unint64_t v154 = (unint64_t)v299;
  sub_1001807DC((uint64_t)v289, (uint64_t)v299, v280);
  unint64_t v285 = a15;
  sub_1001B7B9C(v152, v281, type metadata accessor for Bottle);
  swift_bridgeObjectRetain_n();
  id v160 = sub_100222070();
  os_log_type_t v161 = sub_1002224E0();
  BOOL v162 = os_log_type_enabled(v160, v161);
  uint64_t v298 = v132;
  uint64_t v295 = 0;
  v296 = (char *)v151;
  uint64_t v284 = a14;
  if (v162)
  {
    uint64_t v163 = (uint8_t *)swift_slowAlloc();
    v305 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v163 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v304 = sub_1001BEBDC((uint64_t)v153, v154, (uint64_t *)&v305);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v160, v161, "Beginning establish for peer %{public}s", v163, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000059E8(a12, a13);
  sub_1000059E8(a12, a13);
  char v164 = sub_100222070();
  os_log_type_t v165 = sub_1002224E0();
  BOOL v166 = os_log_type_enabled(v164, v165);
  unint64_t v294 = a17;
  uint64_t v287 = a16;
  if (v166)
  {
    id v167 = (uint8_t *)swift_slowAlloc();
    v305 = (char *)swift_slowAlloc();
    *(_DWORD *)id v167 = 136446210;
    uint64_t v168 = sub_100221BE0(0);
    uint64_t v304 = sub_1001BEBDC(v168, v169, (uint64_t *)&v305);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_100005A40(a12, a13);
    sub_100005A40(a12, a13);
    _os_log_impl((void *)&_mh_execute_header, v164, v165, "Establish permanentInfo: %{public}s", v167, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100005A40(a12, a13);
    sub_100005A40(a12, a13);
  }

  unint64_t v170 = v285;
  uint64_t v171 = v284;
  uint64_t v173 = a18;
  unint64_t v172 = a19;
  sub_1000059E8(v284, v285);
  sub_1000059E8(v171, v170);
  unint64_t v174 = sub_100222070();
  os_log_type_t v175 = sub_1002224E0();
  if (os_log_type_enabled(v174, v175))
  {
    uint64_t v176 = (uint8_t *)swift_slowAlloc();
    v305 = (char *)swift_slowAlloc();
    unint64_t v285 = a18;
    *(_DWORD *)uint64_t v176 = 136446210;
    uint64_t v177 = sub_100221BE0(0);
    uint64_t v304 = sub_1001BEBDC(v177, v178, (uint64_t *)&v305);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_100005A40(v171, v170);
    uint64_t v173 = v285;
    sub_100005A40(v171, v170);
    _os_log_impl((void *)&_mh_execute_header, v174, v175, "Establish permanentInfoSig: %{public}s", v176, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100005A40(v171, v170);
    sub_100005A40(v171, v170);
  }

  unint64_t v179 = v294;
  uint64_t v180 = v287;
  sub_1000059E8(v287, v294);
  sub_1000059E8(v180, v179);
  id v181 = sub_100222070();
  os_log_type_t v182 = sub_1002224E0();
  if (os_log_type_enabled(v181, v182))
  {
    id v183 = (uint8_t *)swift_slowAlloc();
    id v184 = (void *)swift_slowAlloc();
    unint64_t v285 = a19;
    v305 = (char *)v184;
    *(_DWORD *)id v183 = 136446210;
    uint64_t v185 = sub_100221BE0(0);
    uint64_t v304 = sub_1001BEBDC(v185, v186, (uint64_t *)&v305);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_100005A40(v180, v179);
    sub_100005A40(v180, v179);
    _os_log_impl((void *)&_mh_execute_header, v181, v182, "Establish stableInfo: %{public}s", v183, 0xCu);
    swift_arrayDestroy();
    unint64_t v172 = v285;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100005A40(v180, v179);
    sub_100005A40(v180, v179);
  }

  sub_1000059E8(v173, v172);
  sub_1000059E8(v173, v172);
  uint64_t v187 = sub_100222070();
  os_log_type_t v188 = sub_1002224E0();
  if (os_log_type_enabled(v187, v188))
  {
    id v189 = (uint8_t *)swift_slowAlloc();
    v305 = (char *)swift_slowAlloc();
    *(_DWORD *)id v189 = 136446210;
    uint64_t v190 = sub_100221BE0(0);
    uint64_t v304 = sub_1001BEBDC(v190, v191, (uint64_t *)&v305);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_100005A40(v173, v172);
    sub_100005A40(v173, v172);
    _os_log_impl((void *)&_mh_execute_header, v187, v188, "Establish stableInfoSig: %{public}s", v189, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100005A40(v173, v172);
    sub_100005A40(v173, v172);
  }

  uint64_t v192 = (uint64_t)v275;
  uint64_t v193 = v278;
  uint64_t v194 = v279;
  id v195 = v300;
  uint64_t v196 = v277;
  sub_1001B7C04(v290, v277, type metadata accessor for Peer);
  id v197 = sub_100222070();
  os_log_type_t v198 = sub_1002224E0();
  if (os_log_type_enabled(v197, v198))
  {
    id v199 = (uint8_t *)swift_slowAlloc();
    v305 = (char *)swift_slowAlloc();
    *(_DWORD *)id v199 = 136446210;
    uint64_t v200 = v271;
    sub_10000D830(v196 + *(int *)(v286 + 36), v271, &qword_10029ECA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v274 + 48))(v200, 1, v193) == 1)
    {
      uint64_t v201 = v269;
      *uint64_t v269 = xmmword_100229520;
      v201[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v200, &qword_10029ECA0);
    }
    else
    {
      uint64_t v201 = v269;
      sub_1001B7B9C(v200, (uint64_t)v269, type metadata accessor for SignedPeerDynamicInfo);
    }
    uint64_t v202 = *(void *)v201;
    unint64_t v203 = *((void *)v201 + 1);
    sub_1000059E8(*(void *)v201, v203);
    sub_1001B7EAC((uint64_t)v201, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v204 = sub_100221BE0(0);
    unint64_t v206 = v205;
    sub_100005A40(v202, v203);
    uint64_t v304 = sub_1001BEBDC(v204, v206, (uint64_t *)&v305);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v277, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v197, v198, "Establish dynamicInfo: %{public}s", v199, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v193 = v278;
    uint64_t v194 = v279;
    id v195 = v300;
  }
  else
  {
    sub_1001B7EAC(v196, type metadata accessor for Peer);
  }
  sub_1001B7C04(v290, v194, type metadata accessor for Peer);
  uint64_t v207 = sub_100222070();
  os_log_type_t v208 = sub_1002224E0();
  if (os_log_type_enabled(v207, v208))
  {
    uint64_t v209 = (uint8_t *)swift_slowAlloc();
    v305 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v209 = 136446210;
    sub_10000D830(v194 + *(int *)(v286 + 36), v192, &qword_10029ECA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v274 + 48))(v192, 1, v193) == 1)
    {
      v210 = v270;
      _OWORD *v270 = xmmword_100229520;
      v210[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v211 = v192;
      id v212 = v210;
      sub_10004015C(v211, &qword_10029ECA0);
    }
    else
    {
      uint64_t v213 = v192;
      id v212 = v270;
      sub_1001B7B9C(v213, (uint64_t)v270, type metadata accessor for SignedPeerDynamicInfo);
    }
    uint64_t v214 = *((void *)v212 + 2);
    unint64_t v215 = *((void *)v212 + 3);
    sub_1000059E8(v214, v215);
    sub_1001B7EAC((uint64_t)v212, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v216 = sub_100221BE0(0);
    unint64_t v218 = v217;
    sub_100005A40(v214, v215);
    uint64_t v304 = sub_1001BEBDC(v216, v218, (uint64_t *)&v305);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v279, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v207, v208, "Establish dynamicInfoSig: %{public}s", v209, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v195 = v300;
  }
  else
  {
    sub_1001B7EAC(v194, type metadata accessor for Peer);
  }
  uint64_t v219 = v303;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v220 = sub_100222070();
  os_log_type_t v221 = sub_1002224E0();
  if (os_log_type_enabled(v220, v221))
  {
    uint64_t v222 = swift_slowAlloc();
    *(_DWORD *)uint64_t v222 = 134218240;
    v305 = (char *)*((void *)v219 + 2);
    sub_100222690();
    swift_bridgeObjectRelease();
    *(_WORD *)(v222 + 12) = 2048;
    v305 = (char *)v195[2];
    sub_100222690();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v220, v221, "Establish introducing %ld key sets, %ld tlk shares", (uint8_t *)v222, 0x16u);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v223 = v295;
  sub_1001A56AC((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);
  uint64_t v224 = sub_100221F40();
  if (!v223)
  {
    uint64_t v226 = v224;
    unint64_t v227 = v225;
    uint64_t v228 = sub_100221BE0(0);
    unint64_t v230 = v229;
    sub_100005A40(v226, v227);
    swift_bridgeObjectRetain();
    uint64_t v231 = sub_100222070();
    os_log_type_t v232 = sub_1002224E0();
    if (os_log_type_enabled(v231, v232))
    {
      uint64_t v233 = (uint8_t *)swift_slowAlloc();
      v305 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v233 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v304 = sub_1001BEBDC(v228, v230, (uint64_t *)&v305);
      id v195 = v300;
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v231, v232, "Establish bottle: %{public}s", v233, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1001A56AC((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
    uint64_t v258 = sub_100221F40();
    unint64_t v260 = v259;
    uint64_t v261 = sub_100221BE0(0);
    unint64_t v263 = v262;
    sub_100005A40(v258, v260);
    swift_bridgeObjectRetain();
    uint64_t v234 = sub_100222070();
    os_log_type_t v264 = sub_1002224E0();
    if (!os_log_type_enabled(v234, v264))
    {

      uint64_t v239 = swift_bridgeObjectRelease_n();
      goto LABEL_108;
    }
    uint64_t v265 = (uint8_t *)swift_slowAlloc();
    v305 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v265 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v304 = sub_1001BEBDC(v261, v263, (uint64_t *)&v305);
    id v195 = v300;
    sub_100222690();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v234, v264, "Establish peer: %{public}s", v265, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_107;
  }
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v234 = sub_100222070();
  os_log_type_t v235 = sub_100222500();
  if (!os_log_type_enabled(v234, v235))
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_107:

    goto LABEL_108;
  }
  uint64_t v236 = (uint8_t *)swift_slowAlloc();
  v305 = (char *)swift_slowAlloc();
  *(_DWORD *)uint64_t v236 = 136446210;
  uint64_t v304 = v223;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v237 = sub_1002222C0();
  uint64_t v304 = sub_1001BEBDC(v237, v238, (uint64_t *)&v305);
  id v195 = v300;
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v234, v235, "Establish unable to encode bottle/peer: %{public}s", v236, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v239 = swift_errorRelease();
LABEL_108:
  id v241 = v273;
  uint64_t v242 = v288;
  __chkstk_darwin(v239, v240);
  uint64_t v243 = v281;
  *(&v268 - 4) = v290;
  *(&v268 - 3) = v243;
  uint64_t v244 = v303;
  uint64_t v266 = (uint64_t)v303;
  uint64_t v267 = v195;
  sub_1001A56AC(&qword_10029A6A8, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
  sub_100221F70();
  swift_bridgeObjectRelease();
  uint64_t v245 = *(void *)&v242[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
  unint64_t v302 = *(void *)&v242[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
  v300 = sub_1000059A4(&v242[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v302);
  Swift::String v246 = (void *)swift_allocObject();
  v246[2] = v244;
  v246[3] = v242;
  uint64_t v248 = v291;
  Swift::String v247 = v292;
  uint64_t v249 = (uint64_t)v241;
  long long v251 = v296;
  uint64_t v250 = v297;
  v246[4] = v291;
  v246[5] = v251;
  uint64_t v252 = v293;
  v246[6] = v247;
  v246[7] = v252;
  uint64_t v253 = (uint64_t)v299;
  v246[8] = v289;
  v246[9] = v253;
  v246[10] = v301;
  v246[11] = v250;
  uint64_t v254 = *(void *)(v245 + 16);
  v303 = *(char **)(v254 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v255 = v242;
  id v256 = v248;
  id v257 = v251;
  swift_retain();
  ((void (*)(uint64_t, uint64_t (*)(uint64_t), void *, unint64_t, uint64_t))v303)(v249, sub_1001B36EC, v246, v302, v254);

  swift_release();
  sub_1001B7EAC(v249, type metadata accessor for EstablishRequest);
  sub_1001B7EAC(v281, type metadata accessor for Bottle);
  return sub_1001B7EAC(v290, type metadata accessor for Peer);
}

uint64_t sub_100137E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Bottle(0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for Peer(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = &v24[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B7C04(a2, (uint64_t)v17, type metadata accessor for Peer);
  swift_bridgeObjectRetain();
  EstablishRequest.peer.setter((uint64_t)v17);
  sub_1001B7C04(a3, (uint64_t)v13, type metadata accessor for Bottle);
  EstablishRequest.bottle.setter((uint64_t)v13);
  uint64_t v18 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v19 = swift_retain();
    *(void *)(a1 + v18) = sub_100099D34(v19);
    swift_release();
  }
  uint64_t v20 = (void *)(*(void *)(a1 + v18)
                 + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  *uint64_t v20 = a4;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v21 = swift_retain();
    *(void *)(a1 + v18) = sub_100099D34(v21);
    swift_release();
  }
  unint64_t v22 = (void *)(*(void *)(a1 + v18)
                 + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  *unint64_t v22 = a5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001380A0(uint64_t a1, uint64_t a2, uint8_t *a3, void *a4, NSObject *a5, void (*a6)(uint64_t, uint64_t, void *, NSObject *, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v130 = a8;
  uint64_t v144 = a6;
  uint64_t v145 = a7;
  id v138 = a4;
  os_log_type_t v139 = a5;
  uint64_t v142 = a3;
  uint64_t v151 = sub_100221D50();
  uint64_t v133 = *(void *)(v151 - 8);
  uint64_t v13 = __chkstk_darwin(v151, v12);
  uint64_t v150 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  id v149 = (char *)&v126 - v16;
  uint64_t v17 = sub_100221E10();
  uint64_t v134 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v131 = (uint64_t)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v132 = (uint64_t)&v126 - v27;
  __chkstk_darwin(v26, v28);
  uint64_t v136 = (uint64_t)&v126 - v29;
  uint64_t v30 = type metadata accessor for Changes(0);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v33 = __chkstk_darwin(v30, v32);
  os_log_type_t v129 = (uint8_t **)((char *)&v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __chkstk_darwin(v33, v35);
  uint64_t v140 = (char *)&v126 - v37;
  __chkstk_darwin(v36, v38);
  uint64_t v40 = (char *)&v126 - v39;
  uint64_t v135 = type metadata accessor for EstablishResponse(0);
  __chkstk_darwin(v135, v41);
  uint64_t v147 = (uint8_t **)((char *)&v126 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = sub_1000046DC((uint64_t *)&unk_10029EEB0);
  __chkstk_darwin(v146, v43);
  Class v148 = (uint64_t *)((char *)&v126 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_100222090();
  uint64_t v46 = sub_100003CC8(v45, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain_n();
  uint64_t v47 = sub_100222070();
  os_log_type_t v48 = sub_1002224E0();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v143 = v46;
  uint64_t v137 = v20;
  if (v49)
  {
    uint64_t v141 = v30;
    uint64_t v50 = swift_slowAlloc();
    id v128 = v40;
    uint64_t v51 = (uint8_t *)v50;
    uint64_t v127 = swift_slowAlloc();
    v153[0] = v127;
    *(_DWORD *)uint64_t v51 = 136446210;
    id v126 = v51 + 4;
    type metadata accessor for ViewKeys(0);
    uint64_t v52 = v17;
    uint64_t v53 = a1;
    uint64_t v54 = v31;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1002223D0();
    unint64_t v57 = v56;
    swift_bridgeObjectRelease();
    uint64_t v58 = v55;
    uint64_t v31 = v54;
    a1 = v53;
    uint64_t v17 = v52;
    uint64_t v152 = sub_1001BEBDC(v58, v57, v153);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    uint64_t v30 = v141;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Establish: viewKeys: %{public}s", v51, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v40 = v128;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v59 = v148;
  sub_10000D830(a1, (uint64_t)v148, (uint64_t *)&unk_10029EEB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v60 = *v59;
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v61 = (void *)sub_100221B30();
    unsigned int v62 = [v61 isCuttlefishError:1001];

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    if (v62)
    {
      uint64_t v63 = sub_100222070();
      os_log_type_t v64 = sub_1002224E0();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v65 = 0;
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "establish returned failed, trying fetch", v65, 2u);
        swift_slowDealloc();
      }

      sub_100132D68(a10, a11, (uint64_t)v144, v145);
    }
    else
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v70 = sub_100222070();
      os_log_type_t v71 = sub_100222500();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v152 = v60;
        v153[0] = v73;
        *(_DWORD *)uint64_t v72 = 136446210;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v74 = sub_1002222C0();
        uint64_t v152 = sub_1001BEBDC(v74, v75, v153);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "establish failed: %{public}s", v72, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_errorRetain();
      v144(0, 0, _swiftEmptyArrayStorage, 0, v60);
      swift_errorRelease();
    }
    return swift_errorRelease();
  }
  else
  {
    uint64_t v66 = (uint64_t)v59;
    uint64_t v67 = v147;
    sub_1001B7B9C(v66, (uint64_t)v147, type metadata accessor for EstablishResponse);
    id v128 = (char *)v67 + *(int *)(v135 + 24);
    uint64_t v68 = v136;
    sub_10000D830((uint64_t)v128, v136, (uint64_t *)&unk_10029EC90);
    uint64_t v135 = *(void *)(v31 + 48);
    int v69 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v135)(v68, 1, v30);
    uint64_t v146 = v31 + 48;
    if (v69 == 1)
    {
      *(void *)uint64_t v40 = 0;
      *((void *)v40 + 1) = 0xE000000000000000;
      *((void *)v40 + 2) = _swiftEmptyArrayStorage;
      *(_OWORD *)(v40 + 24) = xmmword_100229520;
      *(_OWORD *)(v40 + 40) = xmmword_100229520;
      v40[56] = 0;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v68, (uint64_t *)&unk_10029EC90);
    }
    else
    {
      sub_1001B7B9C(v68, (uint64_t)v40, type metadata accessor for Changes);
    }
    uint64_t v76 = v137;
    sub_100221E00();
    sub_1001A56AC(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
    uint64_t v77 = (uint64_t)v40;
    uint64_t v78 = 0;
    uint64_t v79 = sub_100221F20();
    unint64_t v81 = v80;
    (*(void (**)(char *, uint64_t))(v134 + 8))(v76, v17);
    sub_1001B7EAC(v77, type metadata accessor for Changes);
    swift_bridgeObjectRetain();
    unint64_t v82 = sub_100222070();
    os_log_type_t v83 = sub_1002224E0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      Class v148 = (uint64_t *)swift_slowAlloc();
      v153[0] = (uint64_t)v148;
      *(_DWORD *)uint64_t v84 = 136446210;
      uint64_t v78 = 0;
      swift_bridgeObjectRetain();
      uint64_t v152 = sub_1001BEBDC(v79, v81, v153);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Establish returned changes: %{public}s", v84, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v86 = *v147;
    v153[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v87 = *(void *)(v86 + 16);
    if (v87)
    {
      uint64_t v137 = 0;
      uint64_t v141 = v30;
      Class v148 = (uint64_t *)sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
      unint64_t v88 = *(void (**)(char *, unint64_t, uint64_t))(v133 + 16);
      unint64_t v89 = v86 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
      uint64_t v90 = *(void *)(v133 + 72);
      unint64_t v91 = (void (**)(char *, uint64_t))(v133 + 8);
      uint64_t v136 = v86;
      swift_bridgeObjectRetain();
      unint64_t v92 = v149;
      do
      {
        uint64_t v93 = v151;
        v88(v92, v89, v151);
        v88(v150, (unint64_t)v92, v93);
        uint64_t v94 = sub_100222620();
        (*v91)(v92, v93);
        if (v94)
        {
          sub_1002223A0();
          if (*(void *)((v153[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1002223F0();
          }
          sub_100222410();
          sub_1002223E0();
        }
        v89 += v90;
        --v87;
      }
      while (v87);
      id v95 = (void *)v153[0];
      uint64_t v30 = v141;
      uint64_t v78 = (uint64_t)v137;
    }
    else
    {
      swift_bridgeObjectRetain();
      id v95 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    id v96 = [v138 modelID];
    int v97 = sub_100222270();
    int v99 = v98;

    os_log_type_t v100 = v142;
    uint64_t v101 = sub_10015A2F8(v97, v99, v139);
    uint64_t v102 = (uint64_t)v140;
    if (v78)
    {
      swift_bridgeObjectRelease();
      swift_errorRetain();
      swift_errorRetain();
      id v107 = sub_100222070();
      os_log_type_t v108 = sub_100222500();
      if (os_log_type_enabled(v107, v108))
      {
        uint64_t v109 = (uint8_t *)swift_slowAlloc();
        uint64_t v110 = swift_slowAlloc();
        uint64_t v152 = v78;
        v153[0] = v110;
        *(_DWORD *)uint64_t v109 = 136446210;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v111 = sub_1002222C0();
        uint64_t v152 = sub_1001BEBDC(v111, v112, v153);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v107, v108, "establish handling failed: %{public}s", v109, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_errorRetain();
      v144(0, 0, v95, 0, v78);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      unint64_t v103 = v101;
      swift_bridgeObjectRelease();
      uint64_t v104 = v132;
      sub_10000D830((uint64_t)v128, v132, (uint64_t *)&unk_10029EC90);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v135)(v104, 1, v30) == 1)
      {
        *(void *)uint64_t v102 = 0;
        *(void *)(v102 + 8) = 0xE000000000000000;
        *(void *)(v102 + 16) = _swiftEmptyArrayStorage;
        *(_OWORD *)(v102 + 24) = xmmword_100229520;
        *(_OWORD *)(v102 + 40) = xmmword_100229520;
        *(unsigned char *)(v102 + 56) = 0;
        _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
        uint64_t v105 = sub_10004015C(v104, (uint64_t *)&unk_10029EC90);
      }
      else
      {
        uint64_t v105 = sub_1001B7B9C(v104, v102, type metadata accessor for Changes);
      }
      __chkstk_darwin(v105, v106);
      *(&v126 - 4) = (uint8_t *)v102;
      *(&v126 - 3) = v100;
      *((unsigned char *)&v126 - 16) = 0;
      sub_1002225C0();
      sub_1001B7EAC(v102, type metadata accessor for Changes);
      uint64_t v113 = v131;
      sub_10000D830((uint64_t)v128, v131, (uint64_t *)&unk_10029EC90);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v135)(v113, 1, v30) == 1)
      {
        uint64_t v114 = v129;
        void *v129 = 0;
        v114[1] = 0xE000000000000000;
        v114[2] = _swiftEmptyArrayStorage;
        *(_OWORD *)(v114 + 3) = xmmword_100229520;
        *(_OWORD *)(v114 + 5) = xmmword_100229520;
        *((unsigned char *)v114 + 56) = 0;
        _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
        sub_10004015C(v113, (uint64_t *)&unk_10029EC90);
      }
      else
      {
        uint64_t v114 = v129;
        sub_1001B7B9C(v113, (uint64_t)v129, type metadata accessor for Changes);
      }
      char v115 = *((unsigned char *)v114 + 56);
      sub_1001B7EAC((uint64_t)v114, type metadata accessor for Changes);
      os_log_type_t v116 = sub_100222070();
      os_log_type_t v117 = sub_1002224E0();
      BOOL v118 = os_log_type_enabled(v116, v117);
      if (v115)
      {
        if (v118)
        {
          unint64_t v119 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v119 = 0;
          _os_log_impl((void *)&_mh_execute_header, v116, v117, "establish succeeded, but more changes need fetching...", v119, 2u);
          swift_slowDealloc();
        }

        uint64_t v120 = (void *)swift_allocObject();
        uint64_t v121 = v145;
        v120[2] = v144;
        v120[3] = v121;
        uint64_t v122 = v130;
        v120[4] = v95;
        v120[5] = v122;
        v120[6] = a9;
        v120[7] = v103;
        uint64_t v123 = v103;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_100174E30(0, (uint64_t)sub_1001B377C, (uint64_t)v120);

        swift_release();
      }
      else
      {
        if (v118)
        {
          unint64_t v124 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v124 = 0;
          _os_log_impl((void *)&_mh_execute_header, v116, v117, "establish succeeded", v124, 2u);
          swift_slowDealloc();
        }

        uint64_t v125 = v103;
        v144(v130, a9, v95, v103, 0);
        swift_bridgeObjectRelease();
      }
    }
    return sub_1001B7EAC((uint64_t)v147, type metadata accessor for EstablishResponse);
  }
}

uint64_t sub_100139304(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_100222090();
    sub_100003CC8(v10, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v11 = sub_100222070();
    os_log_type_t v12 = sub_1002224E0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v14 = sub_1002222C0();
      sub_1001BEBDC(v14, v15, &v29);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "fetch-after-establish failed: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = a4;
    uint64_t v26 = 0;
    uint64_t v27 = a1;
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_100222090();
    sub_100003CC8(v19, (uint64_t)qword_10029E7D0);
    uint64_t v20 = sub_100222070();
    os_log_type_t v21 = sub_1002224E0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "fetch-after-establish succeeded", v22, 2u);
      swift_slowDealloc();
    }

    uint64_t v23 = a5;
    uint64_t v24 = a6;
    uint64_t v25 = a4;
    uint64_t v26 = a7;
    uint64_t v27 = 0;
  }
  return a2(v23, v24, v25, v26, v27);
}

uint64_t sub_1001395DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  return sub_1001726D8(a1, a2, a3, a4, a5, "setRecoveryKey complete: %{public}s", 0xD000000000000030, 0x8000000100244440);
}

uint64_t sub_100139624(uint64_t a1, uint64_t (*a2)(void, uint64_t), uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a1) {
    return a2(0, a1);
  }
  uint64_t v17 = *(void **)&a4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a5;
  v18[6] = a6;
  v18[7] = a7;
  v18[8] = a8;
  v18[9] = a9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1001B17E0;
  *(void *)(v19 + 24) = v18;
  v22[4] = sub_1001B8924;
  v22[5] = v19;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100112F58;
  v22[3] = &unk_100284160;
  uint64_t v20 = _Block_copy(v22);
  os_log_type_t v21 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v17 performBlockAndWait:v20];
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v17) {
    __break(1u);
  }
  return result;
}

void sub_1001397F8(char *a1, uint64_t (*a2)(void, uint64_t), uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v16 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v17 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v150 = v16;
    uint64_t v152 = a2;
    uint64_t v19 = a1;
    uint64_t v20 = sub_100222270();
    uint64_t v22 = v21;

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = (char *)sub_100006E20(a4, a5, a6, a7);
    id v149 = v22;
    uint64_t v147 = v20;
    uint64_t v146 = a8;
    uint64_t v148 = a3;
    uint64_t v30 = v19;
    uint64_t v31 = *(void **)&v19[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    id v153 = v29;
    uint64_t v32 = OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys;
    id v33 = v31;
    swift_bridgeObjectRetain();
    NSString v34 = sub_100222260();
    swift_bridgeObjectRelease();
    v154[0] = 0;
    unsigned __int8 v35 = [v33 anyTrustedPeerDistrustsOtherPeer:v34 error:v154];

    if (v154[0])
    {
      id v36 = (id)v154[0];
      swift_bridgeObjectRelease();
      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_100222090();
      sub_100003CC8(v37, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v38 = sub_100222070();
      os_log_type_t v39 = sub_100222500();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        v154[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136446210;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v41 = sub_1002222C0();
        sub_1001BEBDC(v41, v42, v154);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "failed to create recovery keys: %{public}s", v40, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      sub_100042D4C();
      uint64_t v43 = swift_allocError();
      *(void *)uint64_t v44 = v36;
      *(void *)(v44 + 8) = 0;
      *(unsigned char *)(v44 + 16) = 3;
      swift_errorRetain();
      v152(0, v43);
      swift_errorRelease();
      swift_errorRelease();
      goto LABEL_17;
    }
    if (v35)
    {
      swift_bridgeObjectRelease();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_100222090();
      sub_100003CC8(v45, (uint64_t)qword_10029E7D0);
      uint64_t v46 = sub_100222070();
      os_log_type_t v47 = sub_100222500();
      if (os_log_type_enabled(v46, v47))
      {
        os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Recovery key is distrusted!", v48, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v49 = swift_allocError();
      *(_OWORD *)uint64_t v50 = xmmword_100229930;
      *(unsigned char *)(v50 + 16) = 13;
      v152(0, v49);
      swift_errorRelease();
      goto LABEL_17;
    }
    id v51 = [*(id *)(*(void *)&v29[v32]+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingVerificationKey) keyData];
    uint64_t v52 = sub_100221BF0();
    unint64_t v54 = v53;

    id v55 = [*(id *)(*(void *)&v29[v32]+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionVerificationKey) keyData];
    uint64_t v144 = sub_100221BF0();
    unint64_t v145 = v56;

    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_100222090();
    sub_100003CC8(v57, (uint64_t)qword_10029E7D0);
    sub_1000059E8(v52, v54);
    sub_1000059E8(v52, v54);
    uint64_t v58 = sub_100222070();
    os_log_type_t v59 = sub_1002224E0();
    uint64_t v142 = v52;
    unint64_t v143 = v54;
    if (os_log_type_enabled(v58, v59))
    {
      unint64_t v60 = v54;
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      v154[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v61 = 136446210;
      uint64_t v62 = sub_100221BE0(0);
      sub_1001BEBDC(v62, v63, v154);
      sub_100222690();
      swift_bridgeObjectRelease();
      sub_100005A40(v52, v60);
      sub_100005A40(v52, v60);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "setRecoveryKey signingPubKey: %{public}s", v61, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100005A40(v52, v54);
      sub_100005A40(v52, v54);
    }

    unint64_t v64 = v145;
    sub_1000059E8(v144, v145);
    sub_1000059E8(v144, v145);
    uint64_t v65 = sub_100222070();
    os_log_type_t v66 = sub_1002224E0();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      v154[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136446210;
      uint64_t v68 = sub_100221BE0(0);
      sub_1001BEBDC(v68, v69, v154);
      sub_100222690();
      swift_bridgeObjectRelease();
      sub_100005A40(v144, v145);
      sub_100005A40(v144, v145);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "setRecoveryKey encryptionPubKey: %{public}s", v67, 0xCu);
      swift_arrayDestroy();
      unint64_t v64 = v145;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100005A40(v144, v145);
      sub_100005A40(v144, v145);
    }

    unint64_t v70 = v143;
    uint64_t v71 = v150;
    id v72 = [*(id *)&v19[v150] egoPeerStableInfo];
    if (!v72)
    {
      swift_bridgeObjectRelease();
      os_log_type_t v100 = sub_100222070();
      os_log_type_t v101 = sub_1002224E0();
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v102 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v102 = 0;
        _os_log_impl((void *)&_mh_execute_header, v100, v101, "stableInfo does not exist", v102, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v103 = swift_allocError();
      *(_OWORD *)uint64_t v104 = xmmword_1002311E0;
      *(unsigned char *)(v104 + 16) = 13;
      v152(0, v103);
      swift_errorRelease();
      sub_100005A40(v144, v64);
      uint64_t v99 = v142;
      goto LABEL_42;
    }
    uint64_t v73 = v72;
    uint64_t v74 = sub_100221BF0();
    unint64_t v151 = v75;

    id v76 = [*(id *)&v19[v71] egoPeerStableInfoSig];
    if (v76)
    {
      uint64_t v77 = v76;
      uint64_t v78 = sub_100221BF0();
      unint64_t v80 = v79;

      id v81 = [*(id *)&v30[v71] egoPeerPermanentInfo];
      if (v81)
      {
        unint64_t v82 = v81;
        uint64_t v140 = sub_100221BF0();
        unint64_t v84 = v83;

        id v85 = [*(id *)&v30[v71] egoPeerPermanentInfoSig];
        if (v85)
        {
          uint64_t v86 = v85;
          uint64_t v138 = sub_100221BF0();
          unint64_t v139 = v87;

          id v88 = objc_allocWithZone((Class)TPPeerStableInfo);
          sub_1000059E8(v74, v151);
          sub_1000059E8(v78, v80);
          Class isa = sub_100221BD0().super.isa;
          Class v90 = sub_100221BD0().super.isa;
          id v91 = [v88 initWithData:isa sig:v90];
          sub_100005A40(v78, v80);
          sub_100005A40(v74, v151);

          if (v91)
          {
            uint64_t v136 = v91;
            id v92 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
            swift_bridgeObjectRetain();
            sub_1000059E8(v140, v84);
            sub_1000059E8(v138, v139);
            NSString v93 = sub_100222260();
            swift_bridgeObjectRelease();
            Class v94 = sub_100221BD0().super.isa;
            Class v95 = sub_100221BD0().super.isa;
            uint64_t v135 = v92;
            id v96 = [self permanentInfoWithPeerID:v93 data:v94 sig:v95 keyFactory:v92];
            sub_100005A40(v138, v139);
            sub_100005A40(v140, v84);

            if (v96)
            {
              strcpy((char *)v154, "signing-key ");
              BYTE5(v154[1]) = 0;
              HIWORD(v154[1]) = -5120;
              v156._countAndFlagsBits = v147;
              v156._object = v149;
              sub_100222310(v156);
              uint64_t v134 = v154[0];
              uint64_t v141 = v154[1];
              sub_1000059E8(v142, v143);
              sub_1000059E8(v144, v145);
              swift_bridgeObjectRetain();
              swift_retain();
              int v97 = v30;
              swift_bridgeObjectRetain();
              id v98 = v96;
              id v137 = v136;
              unint64_t v70 = v143;
              sub_10019F010(v134, v141, v152, v148, v97, v146, (uint64_t)&v153, v98, v137, v142, v143, v144, v145, v147, (uint64_t)v149);
              swift_bridgeObjectRelease();
              sub_100005A40(v144, v145);
              sub_100005A40(v142, v143);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();

              swift_bridgeObjectRelease();
              sub_100005A40(v138, v139);
              sub_100005A40(v140, v84);
              sub_100005A40(v78, v80);
              sub_100005A40(v74, v151);
              sub_100005A40(v144, v145);
              uint64_t v99 = v142;
LABEL_42:
              unint64_t v105 = v70;
LABEL_55:
              sub_100005A40(v99, v105);
LABEL_17:

              return;
            }
            swift_bridgeObjectRelease();
            os_log_type_t v129 = sub_100222070();
            uint64_t v130 = sub_1002224E0();
            unint64_t v64 = v145;
            if (os_log_type_enabled(v129, (os_log_type_t)v130))
            {
              uint64_t v131 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v131 = 0;
              _os_log_impl((void *)&_mh_execute_header, v129, (os_log_type_t)v130, "cannot create TPPeerPermanentInfo", v131, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v132 = swift_allocError();
            *(_OWORD *)uint64_t v133 = xmmword_100229940;
            *(unsigned char *)(v133 + 16) = 13;
            v152(0, v132);
            swift_errorRelease();

            sub_100005A40(v138, v139);
            uint64_t v127 = v140;
            unint64_t v128 = v84;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v122 = sub_100222070();
            os_log_type_t v123 = sub_1002224E0();
            if (os_log_type_enabled(v122, v123))
            {
              unint64_t v124 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v124 = 0;
              _os_log_impl((void *)&_mh_execute_header, v122, v123, "cannot create TPPeerStableInfo", v124, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v125 = swift_allocError();
            *(_OWORD *)uint64_t v126 = xmmword_100229940;
            *(unsigned char *)(v126 + 16) = 13;
            v152(0, v125);
            swift_errorRelease();
            sub_100005A40(v138, v139);
            uint64_t v127 = v140;
            unint64_t v128 = v84;
          }
          sub_100005A40(v127, v128);
          sub_100005A40(v78, v80);
          uint64_t v121 = v74;
LABEL_54:
          sub_100005A40(v121, v151);
          sub_100005A40(v144, v64);
          uint64_t v99 = v142;
          unint64_t v105 = v143;
          goto LABEL_55;
        }
        swift_bridgeObjectRelease();
        os_log_type_t v116 = sub_100222070();
        os_log_type_t v117 = sub_1002224E0();
        if (os_log_type_enabled(v116, v117))
        {
          BOOL v118 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)BOOL v118 = 0;
          _os_log_impl((void *)&_mh_execute_header, v116, v117, "permInfoSig does not exist", v118, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v119 = swift_allocError();
        *(_OWORD *)uint64_t v120 = xmmword_1002311E0;
        *(unsigned char *)(v120 + 16) = 13;
        v152(0, v119);
        swift_errorRelease();
        sub_100005A40(v140, v84);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v111 = sub_100222070();
        os_log_type_t v112 = sub_1002224E0();
        if (os_log_type_enabled(v111, v112))
        {
          uint64_t v113 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v113 = 0;
          _os_log_impl((void *)&_mh_execute_header, v111, v112, "permanentInfo does not exist", v113, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v114 = swift_allocError();
        *(_OWORD *)uint64_t v115 = xmmword_1002311E0;
        *(unsigned char *)(v115 + 16) = 13;
        v152(0, v114);
        swift_errorRelease();
      }
      sub_100005A40(v78, v80);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v106 = sub_100222070();
      os_log_type_t v107 = sub_1002224E0();
      if (os_log_type_enabled(v106, v107))
      {
        os_log_type_t v108 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v108 = 0;
        _os_log_impl((void *)&_mh_execute_header, v106, v107, "stableInfoSig does not exist", v108, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v109 = swift_allocError();
      *(_OWORD *)uint64_t v110 = xmmword_1002311E0;
      *(unsigned char *)(v110 + 16) = 13;
      v152(0, v109);
      swift_errorRelease();
    }
    uint64_t v121 = v74;
    goto LABEL_54;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100222090();
  sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
  uint64_t v24 = sub_100222070();
  os_log_type_t v25 = sub_1002224E0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "no prepared identity, cannot set recovery key", v26, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  uint64_t v27 = swift_allocError();
  *(_OWORD *)uint64_t v28 = xmmword_1002297D0;
  *(unsigned char *)(v28 + 16) = 13;
  a2(0, v27);

  swift_errorRelease();
}

uint64_t sub_10013AAC0(void *a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a1)
  {
    id v37 = *(id *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a6;
    v19[3] = a7;
    v19[4] = a8;
    v19[5] = a9;
    v19[6] = a5;
    v19[7] = a1;
    v19[8] = a10;
    v19[9] = a11;
    v19[10] = a12;
    v19[11] = a13;
    v19[12] = a14;
    v19[13] = a15;
    v19[14] = a3;
    v19[15] = a4;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1001B1880;
    *(void *)(v20 + 24) = v19;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = v20;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_1002841D8;
    os_log_type_t v21 = _Block_copy(aBlock);
    id v22 = a1;
    swift_bridgeObjectRetain();
    id v23 = a8;
    id v24 = a9;
    os_log_type_t v25 = a5;
    sub_1000059E8(a10, a11);
    sub_1000059E8(a12, a13);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    [v37 performBlockAndWait:v21];

    _Block_release(v21);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  uint64_t v28 = a2;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_100222090();
  sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v30 = sub_100222070();
  os_log_type_t v31 = sub_100222500();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136446210;
    uint64_t v41 = v28;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v33 = sub_1002222C0();
    uint64_t v41 = sub_1001BEBDC(v33, v34, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "handle: no signing key pair: %{public}s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return a3(0, v28);
}

uint64_t sub_10013AE94(unint64_t a1, void *a2, void *a3, void *a4, char *a5, void *a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, void *a11, void *a12, void *a13, unint64_t a14)
{
  id v114 = a6;
  id v118 = a4;
  uint64_t v111 = type metadata accessor for SetRecoveryKeyRequest(0);
  __chkstk_darwin(v111, v22);
  uint64_t v113 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for SignedPeerStableInfo(0);
  __chkstk_darwin(v110, v24);
  os_log_type_t v112 = (uint64_t *)((char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_100222970();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v27 = _swiftEmptyArrayStorage;
  unint64_t v115 = a8;
  if (v26)
  {
    uint64_t v119 = _swiftEmptyArrayStorage;
    uint64_t v28 = &v119;
    sub_1002228D0();
    if (v26 < 0)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    os_log_type_t v116 = a3;
    unint64_t v117 = a7;
    uint64_t v29 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v30 = (id)sub_100222880();
      }
      else {
        id v30 = *(id *)(a1 + 8 * v29 + 32);
      }
      os_log_type_t v31 = v30;
      ++v29;
      id v15 = [v30 tlk];

      sub_1002228B0();
      sub_1002228E0();
      sub_1002228F0();
      sub_1002228C0();
    }
    while (v26 != v29);
    uint64_t v27 = v119;
    a3 = v116;
    a7 = v117;
  }
  swift_beginAccess();
  uint64_t v28 = (void **)*(id *)(*a2 + OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys);
  uint64_t v32 = (uint64_t)[a3 epoch];
  id v14 = v118;
  if (v32 < 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  a2 = a13;
  a1 = a14;
  a3 = 0;
  uint64_t v26 = sub_100116CE4(v27, (uint64_t)v28, (uint64_t)v28, v32);
  swift_bridgeObjectRelease();

  id v33 = [v14 bestPolicyVersion];
  uint64_t v28 = (void **)sub_10017ECC4((uint64_t)[v33 versionNumber]);
  unint64_t v34 = (char *)[v14 clock];
  id v15 = v34 + 1;
  if (v34 != (char *)-1)
  {
    id v109 = v33;
    if (qword_100298BB0 == -1) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  swift_once();
LABEL_14:
  id v106 = (id)qword_1002A0268;
  id v105 = [v28 version];
  id v35 = [v14 policySecrets];
  if (v35)
  {
    id v36 = v35;
    uint64_t v99 = sub_1002221D0();
  }
  else
  {
    uint64_t v99 = 0;
  }
  unsigned int v98 = [v14 syncUserControllableViews];
  id v103 = [v14 secureElementIdentity];
  id v102 = [v14 walrusSetting];
  id v101 = [v14 webAccess];
  id v37 = [v14 deviceName];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v96 = sub_100222270();
    uint64_t v95 = v39;
  }
  else
  {
    uint64_t v96 = 0;
    uint64_t v95 = 0;
  }
  uint64_t v107 = v26;
  os_log_type_t v116 = (void *)a9;
  unint64_t v117 = a10;
  id v40 = [v14 serialNumber];
  id v108 = v28;
  uint64_t v104 = (uint64_t)v15;
  os_log_type_t v100 = a2;
  unint64_t v97 = a1;
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v94 = sub_100222270();
    uint64_t v93 = v42;
  }
  else
  {
    uint64_t v94 = 0;
    uint64_t v93 = 0;
  }
  id v43 = v118;
  id v44 = [v118 osVersion];
  uint64_t v45 = sub_100222270();
  uint64_t v47 = v46;

  LOBYTE(v44) = [v43 isInheritedAccount];
  id v48 = objc_allocWithZone((Class)TPPeerStableInfo);
  uint64_t v49 = (uint64_t)v116;
  unint64_t v50 = v117;
  sub_1000059E8((uint64_t)v116, v117);
  unint64_t v51 = v115;
  sub_1000059E8(a7, v115);
  id v52 = v114;
  uint64_t v53 = a7;
  id v54 = v52;
  char v91 = (char)v44;
  uint64_t v89 = v49;
  unint64_t v90 = v50;
  uint64_t v88 = v47;
  uint64_t v87 = v45;
  id v55 = v105;
  id v56 = v106;
  id v57 = v102;
  id v58 = v103;
  id v59 = v101;
  id v60 = sub_1001AA754(v104, (uint64_t)v106, (uint64_t)v105, v99, v98, (uint64_t)v103, (uint64_t)v102, (uint64_t)v101, v96, v95, v94, v93, v87, v88, (uint64_t)v52, v53, v51, v89, v90,
          v91);
  if (a3)
  {
    swift_bridgeObjectRelease();

    uint64_t v61 = (void (*)(void, void *))v100;
    swift_errorRetain();
    v61(0, a3);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    id v118 = a12;
    unint64_t v63 = v58;
    id v114 = a11;
    unint64_t v64 = v60;

    uint64_t v65 = a5;
    os_log_type_t v66 = v112;
    id v67 = v64;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    id v68 = [v67 data];
    uint64_t v69 = sub_100221BF0();
    uint64_t v71 = v70;

    *os_log_type_t v66 = v69;
    v66[1] = v71;
    id v72 = [v67 sig];
    uint64_t v73 = sub_100221BF0();
    uint64_t v75 = v74;

    v66[2] = v73;
    v66[3] = v75;
    __chkstk_darwin(v76, v77);
    sub_1001A56AC((unint64_t *)&unk_10029ED40, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
    sub_100221F70();
    swift_bridgeObjectRelease();
    uint64_t v78 = *(void *)&v65[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
    uint64_t v79 = *(void *)&v65[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
    sub_1000059A4(&v65[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v78);
    unint64_t v80 = (void *)swift_allocObject();
    v80[2] = v65;
    v80[3] = v67;
    unint64_t v81 = v97;
    uint64_t v80[4] = v100;
    v80[5] = v81;
    uint64_t v82 = *(void *)(v79 + 16);
    unint64_t v83 = *(void (**)(char *, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v82 + 40);
    id v84 = v67;
    id v85 = v65;
    swift_retain();
    uint64_t v86 = (uint64_t)v113;
    v83(v113, sub_1001B1954, v80, v78, v82);

    swift_release();
    sub_1001B7EAC(v86, type metadata accessor for SetRecoveryKeyRequest);
    return sub_1001B7EAC((uint64_t)v66, type metadata accessor for SignedPeerStableInfo);
  }
}

uint64_t sub_10013B740(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = a8;
  uint64_t v35 = a9;
  uint64_t v36 = a10;
  uint64_t v34 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v17 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2;
  a1[3] = a3;
  uint64_t v21 = a1[4];
  unint64_t v22 = a1[5];
  a1[4] = a4;
  a1[5] = a5;
  sub_1000059E8(a4, a5);
  sub_100005A40(v21, v22);
  uint64_t v23 = a1[6];
  unint64_t v24 = a1[7];
  a1[6] = a6;
  a1[7] = a7;
  sub_1000059E8(a6, a7);
  sub_100005A40(v23, v24);
  sub_1001B7C04(v33, (uint64_t)v20, type metadata accessor for SignedPeerStableInfo);
  uint64_t v25 = (uint64_t)a1 + *(int *)(type metadata accessor for SetRecoveryKeyRequest(0) + 44);
  sub_10004015C(v25, &qword_100299F18);
  sub_1001B7B9C((uint64_t)v20, v25, type metadata accessor for SignedPeerStableInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v25, 0, 1, v34);
  uint64_t v26 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = v26;
  id v27 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v36
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "changeToken"));
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_100222270();
    unint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    unint64_t v31 = 0xE000000000000000;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v29;
  a1[1] = v31;
  return result;
}

uint64_t sub_10013B978(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v40 = a3;
  uint64_t v41 = a5;
  uint64_t v8 = type metadata accessor for SetRecoveryKeyResponse(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = __chkstk_darwin(v8 - 8, v11);
  uint64_t v13 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = ((char *)&v39 - v15);
  uint64_t v17 = sub_1000046DC(&qword_100299E48);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (uint64_t *)((char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v20, &qword_100299E48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001B7B9C((uint64_t)v20, (uint64_t)v16, type metadata accessor for SetRecoveryKeyResponse);
    uint64_t v26 = a2;
    id v39 = *(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    sub_1001B7C04((uint64_t)v16, (uint64_t)v13, type metadata accessor for SetRecoveryKeyResponse);
    unint64_t v27 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v28 = (v10 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = swift_allocObject();
    unint64_t v30 = v40;
    *(void *)(v29 + 16) = a2;
    *(void *)(v29 + 24) = v30;
    sub_1001B7B9C((uint64_t)v13, v29 + v27, type metadata accessor for SetRecoveryKeyResponse);
    unint64_t v31 = (uint64_t *)(v29 + v28);
    uint64_t v32 = v41;
    *unint64_t v31 = a4;
    v31[1] = v32;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_1001B1B14;
    *(void *)(v33 + 24) = v29;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100284278;
    uint64_t v34 = _Block_copy(aBlock);
    id v35 = v26;
    id v36 = v30;
    swift_retain();
    swift_retain();
    swift_release();
    [v39 performBlockAndWait:v34];
    _Block_release(v34);
    sub_1001B7EAC((uint64_t)v16, type metadata accessor for SetRecoveryKeyResponse);
    LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v34 & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  id v40 = (void *)a4;
  a4 = *v20;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v16 = sub_100222070();
  os_log_type_t v22 = sub_100222500();
  if (!os_log_type_enabled(v16, v22))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v23 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v23 = 136446210;
  uint64_t v43 = a4;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v24 = sub_1002222C0();
  uint64_t v43 = sub_1001BEBDC(v24, v25, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v16, v22, "setRecoveryKey failed: %{public}s", v23, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  uint64_t v38 = (void (*)(void, uint64_t))v40;
  swift_errorRetain();
  v38(0, a4);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10013BE70(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *, void), uint64_t a5)
{
  uint64_t v54 = a5;
  id v55 = a4;
  uint64_t v56 = a3;
  uint64_t v59 = sub_100221D50();
  uint64_t v52 = *(void *)(v59 - 8);
  uint64_t v8 = __chkstk_darwin(v59, v7);
  id v58 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  id v57 = (char *)&v51 - v11;
  uint64_t v12 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Changes(0);
  uint64_t v53 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v21 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  id v22 = [a2 data];
  uint64_t v23 = sub_100221BF0();
  unint64_t v25 = v24;

  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v23, v25);
  [v21 setEgoPeerStableInfo:isa];

  id v27 = *(id *)(a1 + v20);
  id v28 = [a2 sig];
  uint64_t v29 = sub_100221BF0();
  unint64_t v31 = v30;

  Class v32 = sub_100221BD0().super.isa;
  uint64_t v33 = (uint64_t *)v56;
  sub_100005A40(v29, v31);
  [v27 setEgoPeerStableInfoSig:v32];

  uint64_t v34 = type metadata accessor for SetRecoveryKeyResponse(0);
  sub_10000D830((uint64_t)v33 + *(int *)(v34 + 24), (uint64_t)v15, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v15, 1, v16) == 1)
  {
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0xE000000000000000;
    *((void *)v19 + 2) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v19 + 24) = xmmword_100229520;
    *(_OWORD *)(v19 + 40) = xmmword_100229520;
    v19[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v15, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v15, (uint64_t)v19, type metadata accessor for Changes);
  }
  sub_10017AB04((uint64_t)v19, 0);
  sub_1001B7EAC((uint64_t)v19, type metadata accessor for Changes);
  id v35 = v55;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_100222090();
  sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
  id v37 = sub_100222070();
  os_log_type_t v38 = sub_1002224E0();
  if (os_log_type_enabled(v37, v38))
  {
    id v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "setRecoveryKey succeeded", v39, 2u);
    swift_slowDealloc();
  }

  uint64_t v40 = *v33;
  unint64_t v60 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v41 = *(void *)(v40 + 16);
  if (v41)
  {
    uint64_t v56 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
    uint64_t v43 = v40 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    uint64_t v44 = *(void *)(v52 + 72);
    uint64_t v45 = (void (**)(char *, uint64_t))(v52 + 8);
    uint64_t v53 = v40;
    swift_bridgeObjectRetain();
    uint64_t v46 = v57;
    do
    {
      uint64_t v47 = v59;
      v42(v46, v43, v59);
      v42(v58, (uint64_t)v46, v47);
      uint64_t v48 = sub_100222620();
      (*v45)(v46, v47);
      if (v48)
      {
        sub_1002223A0();
        if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
      v43 += v44;
      --v41;
    }
    while (v41);
    uint64_t v49 = (void *)v60;
    id v35 = v55;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v35(v49, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013C5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  int v50 = a7;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v48 = a1;
  uint64_t v49 = a3;
  uint64_t v52 = a2;
  uint64_t v12 = sub_100221D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12, v15);
  uint64_t v16 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  uint64_t v17 = v9;
  uint64_t v18 = sub_1001984DC(v17, 0xD000000000000046, 0x8000000100244F20);

  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_allocObject();
  *((void *)v19 + 2) = v18;
  *((void *)v19 + 3) = a8;
  uint64_t v47 = v19;
  *((void *)v19 + 4) = a9;
  uint64_t v20 = qword_100298EB8;
  uint64_t v51 = v18;
  swift_retain();
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
  id v22 = sub_100222070();
  os_log_type_t v23 = sub_1002224E0();
  if (os_log_type_enabled(v22, v23))
  {
    unint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "beginning a createCustodianRecoveryKey", v24, 2u);
    swift_slowDealloc();
  }

  id v46 = *(id *)&v17[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v12);
  unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v26 = (v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = v12;
  id v45 = v17;
  unint64_t v29 = (v28 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v30 + v25, v16, v44);
  unint64_t v31 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + v26);
  uint64_t v33 = v47;
  uint64_t v32 = v48;
  *unint64_t v31 = sub_1001B6904;
  v31[1] = v33;
  uint64_t v34 = (void *)(v30 + v27);
  uint64_t v35 = v52;
  void *v34 = v32;
  v34[1] = v35;
  uint64_t v36 = (void *)(v30 + v28);
  uint64_t v38 = v53;
  uint64_t v37 = v54;
  *uint64_t v36 = v49;
  v36[1] = v38;
  *(_DWORD *)(v30 + v29) = v50;
  *(void *)(v30 + ((v29 + 11) & 0xFFFFFFFFFFFFFFF8)) = v37;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1001B6A88;
  *(void *)(v39 + 24) = v30;
  aBlock[4] = sub_1001B8924;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_100286780;
  uint64_t v40 = _Block_copy(aBlock);
  id v41 = v45;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v46 performBlockAndWait:v40];
  swift_release();
  swift_release();
  _Block_release(v40);
  LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v37) {
    __break(1u);
  }
  return result;
}

void sub_10013CA0C(char *a1, unint64_t a2, void (*a3)(void, void, uint64_t), uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, int a9, uint64_t a10)
{
  uint64_t v199 = a5;
  unint64_t v200 = a8;
  unint64_t v197 = a6;
  uint64_t v198 = a7;
  uint64_t v204 = a3;
  uint64_t v205 = a4;
  uint64_t v12 = sub_100221D00();
  uint64_t v202 = *(void *)(v12 - 8);
  uint64_t v203 = v12;
  uint64_t v13 = *(void *)(v202 + 64);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v177 - v19;
  __chkstk_darwin(v18, v21);
  os_log_type_t v23 = (char *)&v177 - v22;
  id v24 = *(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  unint64_t v201 = a2;
  Class isa = sub_100221CE0().super.isa;
  id v26 = [v24 findCustodianRecoveryKeyWithUUID:isa];

  if (v26)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100222090();
    sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
    uint64_t v28 = v202;
    uint64_t v29 = v203;
    (*(void (**)(char *, unint64_t, uint64_t))(v202 + 16))(v16, v201, v203);
    uint64_t v30 = sub_100222070();
    os_log_type_t v31 = sub_100222500();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      v206[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315138;
      sub_1001A56AC((unint64_t *)&unk_10029ED00, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v33 = sub_100222A00();
      uint64_t v207 = sub_1001BEBDC(v33, v34, v206);
      sub_100222690();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v29);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "CRK UUID %s already exists", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v29);
    }

    sub_100042D4C();
    uint64_t v45 = swift_allocError();
    *(_OWORD *)uint64_t v46 = xmmword_100231200;
    *(unsigned char *)(v46 + 16) = 13;
    v204(0, 0, v45);
    goto LABEL_16;
  }
  uint64_t v193 = v13;
  uint64_t v194 = v20;
  int v196 = a9;
  unint64_t v35 = v200;
  uint64_t v195 = a10;
  uint64_t v36 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v37 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v37)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_100222090();
    sub_100003CC8(v47, (uint64_t)qword_10029E7D0);
    uint64_t v48 = sub_100222070();
    os_log_type_t v49 = sub_1002224E0();
    if (os_log_type_enabled(v48, v49))
    {
      int v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "no prepared identity, cannot create custodian recovery key", v50, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v51 = swift_allocError();
    *(_OWORD *)uint64_t v52 = xmmword_1002297D0;
    *(unsigned char *)(v52 + 16) = 13;
    v204(0, 0, v51);
    goto LABEL_16;
  }
  uint64_t v38 = v37;
  unint64_t v192 = v36;
  uint64_t v39 = sub_100222270();
  id v41 = v40;

  uint64_t v42 = v202 + 16;
  uint64_t v43 = *(void (**)(char *, unint64_t, uint64_t))(v202 + 16);
  v43(v23, v201, v203);
  unint64_t v44 = v197;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_100007590((uint64_t)v23, v199, v44, v198, v35, v196);
  uint64_t v187 = v39;
  uint64_t v54 = qword_100298EB8;
  swift_retain();
  if (v54 != -1) {
    swift_once();
  }
  uint64_t v55 = sub_100222090();
  uint64_t v56 = sub_100003CC8(v55, (uint64_t)qword_10029E7D0);
  swift_retain_n();
  uint64_t v191 = v56;
  id v57 = sub_100222070();
  os_log_type_t v58 = sub_1002224E0();
  int v59 = v58;
  BOOL v60 = os_log_type_enabled(v57, v58);
  id v189 = a1;
  uint64_t v190 = v41;
  uint64_t v188 = v53;
  if (v60)
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    LODWORD(v186) = v59;
    *(_DWORD *)uint64_t v61 = 136446210;
    v206[0] = v62;
    uint64_t v185 = v61 + 4;
    id v63 = objc_msgSend(objc_msgSend(*(id *)(v53 + 24), "signingPublicKey"), "spki");
    swift_unknownObjectRelease();
    uint64_t v64 = sub_100221BF0();
    unint64_t v66 = v65;

    uint64_t v67 = sub_100221BE0(0);
    unint64_t v69 = v68;
    sub_100005A40(v64, v66);
    uint64_t v70 = v67;
    uint64_t v53 = v188;
    uint64_t v207 = sub_1001BEBDC(v70, v69, v206);
    sub_100222690();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v186, "createCustodianRecoveryKey signingPubKey: %{public}s", v61, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  uint64_t v71 = sub_100222070();
  os_log_type_t v72 = sub_1002224E0();
  int v73 = v72;
  if (os_log_type_enabled(v71, v72))
  {
    LODWORD(v185) = v73;
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    *(_DWORD *)uint64_t v74 = 136446210;
    v206[0] = v75;
    unint64_t v186 = v43;
    id v76 = objc_msgSend(objc_msgSend(*(id *)(v53 + 24), "encryptionPublicKey"), "spki");
    swift_unknownObjectRelease();
    uint64_t v77 = sub_100221BF0();
    unint64_t v79 = v78;

    uint64_t v80 = sub_100221BE0(0);
    unint64_t v82 = v81;
    sub_100005A40(v77, v79);
    uint64_t v207 = sub_1001BEBDC(v80, v82, v206);
    sub_100222690();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v185, "createCustodianRecoveryKey encryptionPubKey: %{public}s", v74, 0xCu);
    swift_arrayDestroy();
    uint64_t v43 = v186;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  unint64_t v83 = v189;
  unint64_t v84 = v192;
  id v85 = [*(id *)&v189[v192] egoPeerPermanentInfo];
  if (!v85)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v142 = sub_100222070();
    os_log_type_t v143 = sub_1002224E0();
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v144 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v144 = 0;
      _os_log_impl((void *)&_mh_execute_header, v142, v143, "permanentInfo does not exist", v144, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v145 = swift_allocError();
    *(_OWORD *)uint64_t v146 = xmmword_1002311E0;
    *(unsigned char *)(v146 + 16) = 13;
    v204(0, 0, v145);
    swift_release();
    goto LABEL_16;
  }
  uint64_t v86 = v85;
  uint64_t v87 = sub_100221BF0();
  unint64_t v89 = v88;

  id v90 = [*(id *)&v83[v84] egoPeerPermanentInfoSig];
  if (!v90)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v147 = sub_100222070();
    os_log_type_t v148 = sub_1002224E0();
    if (os_log_type_enabled(v147, v148))
    {
      id v149 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v149 = 0;
      _os_log_impl((void *)&_mh_execute_header, v147, v148, "permInfoSig does not exist", v149, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v150 = swift_allocError();
    *(_OWORD *)uint64_t v151 = xmmword_1002311E0;
    *(unsigned char *)(v151 + 16) = 13;
    v204(0, 0, v150);
    swift_release();
    sub_100005A40(v87, v89);
    goto LABEL_16;
  }
  char v91 = v90;
  unint64_t v186 = v43;
  uint64_t v179 = v42;
  uint64_t v92 = sub_100221BF0();
  unint64_t v94 = v93;

  id v95 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  swift_bridgeObjectRetain();
  sub_1000059E8(v87, v89);
  sub_1000059E8(v92, v94);
  NSString v96 = sub_100222260();
  swift_bridgeObjectRelease();
  unint64_t v97 = v89;
  Class v98 = sub_100221BD0().super.isa;
  Class v99 = sub_100221BD0().super.isa;
  os_log_type_t v100 = self;
  id v183 = v95;
  id v101 = [v100 permanentInfoWithPeerID:v96 data:v98 sig:v99 keyFactory:v95];
  uint64_t v181 = v92;
  unint64_t v182 = v94;
  id v102 = v101;
  sub_100005A40(v92, v94);
  uint64_t v185 = (uint8_t *)v87;
  unint64_t v184 = v97;
  sub_100005A40(v87, v97);

  id v180 = v102;
  if (!v102)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v152 = sub_100222070();
    os_log_type_t v153 = sub_1002224E0();
    if (os_log_type_enabled(v152, v153))
    {
      unint64_t v154 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v154 = 0;
      _os_log_impl((void *)&_mh_execute_header, v152, v153, "cannot create TPPeerPermanentInfo", v154, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v155 = swift_allocError();
    *(_OWORD *)uint64_t v156 = xmmword_1002297C0;
    *(unsigned char *)(v156 + 16) = 13;
    v204(0, 0, v155);
    swift_release();
    sub_100005A40((uint64_t)v185, v184);
    sub_100005A40(v181, v182);
    goto LABEL_44;
  }
  id v103 = v189;
  unint64_t v104 = v192;
  id v105 = [*(id *)&v189[v192] egoPeerStableInfo];
  if (!v105)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v157 = sub_100222070();
    os_log_type_t v158 = sub_1002224E0();
    BOOL v159 = os_log_type_enabled(v157, v158);
    unint64_t v160 = v184;
    if (v159)
    {
      os_log_type_t v161 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v161 = 0;
      _os_log_impl((void *)&_mh_execute_header, v157, v158, "stableInfo does not exist", v161, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v162 = swift_allocError();
    *(_OWORD *)uint64_t v163 = xmmword_100229940;
    *(unsigned char *)(v163 + 16) = 13;
    v204(0, 0, v162);
    swift_release();
    sub_100005A40((uint64_t)v185, v160);
    sub_100005A40(v181, v182);

LABEL_44:
    char v164 = &v209;
LABEL_52:

LABEL_16:
    swift_errorRelease();
    return;
  }
  id v106 = v105;
  uint64_t v107 = sub_100221BF0();
  unint64_t v109 = v108;

  id v110 = [*(id *)&v103[v104] egoPeerStableInfoSig];
  uint64_t v111 = (uint64_t)v185;
  if (!v110)
  {
    swift_release();
    swift_bridgeObjectRelease();
    os_log_type_t v165 = sub_100222070();
    os_log_type_t v166 = sub_1002224E0();
    if (os_log_type_enabled(v165, v166))
    {
      id v167 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v167 = 0;
      _os_log_impl((void *)&_mh_execute_header, v165, v166, "stableInfoSig does not exist", v167, 2u);
      uint64_t v111 = (uint64_t)v185;
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v168 = swift_allocError();
    *(_OWORD *)uint64_t v169 = xmmword_100229940;
    *(unsigned char *)(v169 + 16) = 13;
    v204(0, 0, v168);
    swift_release();
    sub_100005A40(v111, v184);
    sub_100005A40(v181, v182);

    uint64_t v170 = v107;
    unint64_t v171 = v109;
    goto LABEL_51;
  }
  os_log_type_t v112 = v110;
  uint64_t v113 = (void (*)(void, void, uint64_t))sub_100221BF0();
  unint64_t v115 = v114;

  id v116 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v107, v109);
  sub_1000059E8((uint64_t)v113, v115);
  Class v117 = sub_100221BD0().super.isa;
  Class v118 = sub_100221BD0().super.isa;
  id v119 = [v116 initWithData:v117 sig:v118];
  sub_100005A40((uint64_t)v113, v115);
  sub_100005A40(v107, v109);

  if (!v119)
  {
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v172 = sub_100222070();
    os_log_type_t v173 = sub_1002224E0();
    if (os_log_type_enabled(v172, v173))
    {
      unint64_t v174 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v174 = 0;
      _os_log_impl((void *)&_mh_execute_header, v172, v173, "cannot create TPPeerStableInfo", v174, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v175 = swift_allocError();
    *(_OWORD *)uint64_t v176 = xmmword_100229940;
    *(unsigned char *)(v176 + 16) = 13;
    v204(0, 0, v175);
    swift_release();
    sub_100005A40((uint64_t)v185, v184);
    sub_100005A40(v181, v182);

    sub_100005A40(v107, v109);
    uint64_t v170 = (uint64_t)v113;
    unint64_t v171 = v115;
LABEL_51:
    sub_100005A40(v170, v171);
    char v164 = &v208;
    goto LABEL_52;
  }
  strcpy((char *)v206, "signing-key ");
  BYTE5(v206[1]) = 0;
  HIWORD(v206[1]) = -5120;
  uint64_t v120 = v187;
  v211._countAndFlagsBits = v187;
  v211._object = v190;
  sub_100222310(v211);
  uint64_t v191 = v206[0];
  uint64_t v178 = v206[1];
  v186(v194, v201, v203);
  unint64_t v201 = v115;
  uint64_t v121 = v202;
  uint64_t v122 = *(unsigned __int8 *)(v202 + 80);
  unint64_t v192 = v109;
  uint64_t v123 = (v122 + 88) & ~v122;
  unint64_t v124 = (v193 + v123 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v125 = (v124 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v186 = (void (*)(char *, unint64_t, uint64_t))((v125 + 19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = (char *)swift_allocObject();
  uint64_t v127 = v204;
  uint64_t v204 = v113;
  uint64_t v128 = v205;
  *((void *)v126 + 2) = v127;
  *((void *)v126 + 3) = v128;
  uint64_t v193 = v107;
  os_log_type_t v129 = v189;
  uint64_t v130 = v188;
  *((void *)v126 + 4) = v189;
  *((void *)v126 + 5) = v130;
  id v131 = v180;
  *((void *)v126 + 6) = v180;
  *((void *)v126 + 7) = v119;
  uint64_t v132 = v194;
  *((void *)v126 + 8) = v195;
  *((void *)v126 + 9) = v120;
  *((void *)v126 + 10) = v190;
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(&v126[v123], v132, v203);
  uint64_t v133 = &v126[v124];
  unint64_t v134 = v200;
  unint64_t v135 = v197;
  *(void *)uint64_t v133 = v199;
  *((void *)v133 + 1) = v135;
  uint64_t v136 = &v126[v125];
  *(void *)uint64_t v136 = v198;
  *((void *)v136 + 1) = v134;
  *(_DWORD *)((char *)v186 + (void)v126) = v196;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v137 = v129;
  id v138 = v131;
  unint64_t v139 = v119;
  id v140 = v138;
  id v141 = v139;
  swift_bridgeObjectRetain();
  sub_100115DB8(v191, v178, (void (*)(void))sub_1001B6CA0);
  swift_release();
  sub_100005A40((uint64_t)v185, v184);
  sub_100005A40(v181, v182);

  sub_100005A40(v193, v192);
  sub_100005A40((uint64_t)v204, v201);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_10013DFF4(void *a1, unint64_t a2, uint64_t (*a3)(void, void, unint64_t), uint64_t isEscapingClosureAtFileLocation, char *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  uint64_t v70 = a3;
  id v71 = a7;
  uint64_t v23 = sub_100221D00();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v23, v26);
  uint64_t v28 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    int v63 = a17;
    uint64_t v61 = a15;
    uint64_t v62 = a16;
    uint64_t v59 = a13;
    uint64_t v60 = a14;
    uint64_t v69 = a11;
    uint64_t v57 = a10;
    os_log_type_t v58 = a1;
    uint64_t v68 = a9;
    uint64_t v29 = a5;
    uint64_t v30 = *(void **)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    id v64 = a5;
    id v66 = v30;
    os_log_type_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    uint64_t v56 = v27;
    v31((char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), a12, v27);
    unint64_t v32 = (*(unsigned __int8 *)(v24 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v67 = isEscapingClosureAtFileLocation;
    unint64_t v33 = (v25 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v65 = a6;
    a2 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (char *)swift_allocObject();
    *((void *)v34 + 2) = v29;
    *((void *)v34 + 3) = a6;
    *((void *)v34 + 4) = v71;
    *((void *)v34 + 5) = a8;
    uint64_t v35 = v67;
    uint64_t v36 = v57;
    *((void *)v34 + 6) = v68;
    *((void *)v34 + 7) = v36;
    id v37 = v58;
    *((void *)v34 + 8) = v69;
    *((void *)v34 + 9) = v37;
    *((void *)v34 + 10) = v70;
    *((void *)v34 + 11) = v35;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v34[v32], v28, v56);
    uint64_t v38 = &v34[v33];
    uint64_t v39 = v60;
    *(void *)uint64_t v38 = v59;
    *((void *)v38 + 1) = v39;
    uint64_t v40 = &v34[a2];
    uint64_t v41 = v62;
    *(void *)uint64_t v40 = v61;
    *((void *)v40 + 1) = v41;
    *(_DWORD *)&v34[(a2 + 19) & 0xFFFFFFFFFFFFFFF8] = v63;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_1001B6ED0;
    *(void *)(v42 + 24) = v34;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = v42;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100286820;
    uint64_t v43 = _Block_copy(aBlock);
    id v44 = v37;
    id v45 = v64;
    id v46 = v71;
    id v47 = a8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    [v66 performBlockAndWait:v43];

    _Block_release(v43);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_100222090();
  sub_100003CC8(v49, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  int v50 = sub_100222070();
  os_log_type_t v51 = sub_100222500();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v67 = isEscapingClosureAtFileLocation;
    uint64_t v53 = (uint8_t *)v52;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136446210;
    uint64_t v73 = a2;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v54 = sub_1002222C0();
    uint64_t v73 = sub_1001BEBDC(v54, v55, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "handle: no signing key pair: %{public}s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return v70(0, 0, a2);
}

uint64_t sub_10013E504(char *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void, void, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  uint64_t v129 = a8;
  uint64_t v130 = a7;
  uint64_t v128 = sub_100221D00();
  uint64_t v126 = *(void *)(v128 - 8);
  __chkstk_darwin(v128, v22);
  uint64_t v127 = v23;
  uint64_t v132 = (char *)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
  __chkstk_darwin(v125, v24);
  unint64_t v134 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v124 = (id)type metadata accessor for SignedPeerDynamicInfo(0);
  __chkstk_darwin(v124, v26);
  uint64_t v133 = (uint64_t *)((char *)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = type metadata accessor for SignedCustodianRecoveryKey(0);
  __chkstk_darwin(v28, v29);
  id v137 = (uint64_t *)((char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v131 = a1;
  unint64_t v32 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  uint64_t v33 = *(void *)(a2 + 24);
  id v139 = 0;
  id v34 = [v32 getViewsForCRK:v33 donorPermanentInfo:a3 donorStableInfo:a4 error:&v139];
  id v35 = v139;
  if (!v34)
  {
    id v101 = v139;
    uint64_t v102 = sub_100221B40();

    swift_willThrow();
    swift_errorRetain();
    a9(0, 0, v102);
    swift_errorRelease();
    return swift_errorRelease();
  }
  uint64_t v36 = v34;
  uint64_t v135 = a10;
  uint64_t v136 = a9;
  uint64_t v37 = sub_100222440();
  id v38 = v35;

  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1001990E4(a5, v37);
  swift_bridgeObjectRelease_n();
  id v40 = *(id *)(a2 + 16);
  uint64_t v41 = (uint64_t)[a3 epoch];
  if (v41 < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v42 = sub_100116CE4(v39, (uint64_t)v40, (uint64_t)v40, v41);
  swift_bridgeObjectRelease();

  uint64_t v123 = v42;
  uint64_t v43 = v137;
  swift_retain();
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v44 = [*(id *)(a2 + 24) data];
  uint64_t v45 = sub_100221BF0();
  uint64_t v47 = v46;

  *uint64_t v43 = v45;
  v43[1] = v47;
  id v48 = [*(id *)(a2 + 24) sig];
  uint64_t v49 = sub_100221BF0();
  uint64_t v51 = v50;

  swift_release();
  _OWORD v43[2] = v49;
  v43[3] = v51;
  uint64_t v121 = a2;
  id v52 = [*(id *)(a2 + 24) peerID];
  uint64_t v53 = sub_100222270();
  uint64_t v55 = v54;

  uint64_t v56 = *(void **)&v131[v31];
  uint64_t v57 = v131;
  id v58 = v56;
  uint64_t v59 = a6;
  uint64_t v60 = v130;
  NSString v61 = sub_100222260();
  sub_1000046DC((uint64_t *)&unk_100299820);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_100229540;
  uint64_t v120 = v53;
  *(void *)(v62 + 32) = v53;
  *(void *)(v62 + 40) = v55;
  uint64_t v122 = v55;
  swift_bridgeObjectRetain();
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v64 = (void *)sub_1001EAB00();
  id v139 = 0;
  id v65 = [v58 calculateDynamicInfoForPeerWithID:v61 addingPeerIDs:isa removingPeerIDs:0 preapprovedKeys:0 signingKeyPair:v129 currentMachineIDs:v64 error:&v139];

  if (!v65)
  {
    id v104 = v139;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 == -1)
    {
LABEL_7:
      uint64_t v105 = sub_100222090();
      sub_100003CC8(v105, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      id v106 = sub_100222070();
      os_log_type_t v107 = sub_100222500();
      if (os_log_type_enabled(v106, v107))
      {
        unint64_t v108 = (uint8_t *)swift_slowAlloc();
        id v139 = (id)swift_slowAlloc();
        *(_DWORD *)unint64_t v108 = 136446210;
        uint64_t v138 = a2;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v109 = sub_1002222C0();
        uint64_t v138 = sub_1001BEBDC(v109, v110, (uint64_t *)&v139);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v106, v107, "Error preparing dynamic info: %{public}s", v108, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      uint64_t v111 = v136;
      os_log_type_t v112 = (char *)v137;
      swift_errorRetain();
      v111(0, 0, a2);
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v100 = (uint64_t)v112;
      return sub_1001B7EAC(v100, type metadata accessor for SignedCustodianRecoveryKey);
    }
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  LODWORD(v129) = a16;
  uint64_t v119 = a15;
  uint64_t v118 = a14;
  uint64_t v117 = a13;
  uint64_t v116 = a12;
  uint64_t v115 = a11;
  id v66 = v133;
  id v67 = v139;
  id v68 = v65;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v69 = [v68 data];
  uint64_t v70 = sub_100221BF0();
  uint64_t v72 = v71;

  *id v66 = v70;
  v66[1] = v72;
  id v124 = v68;
  id v73 = [v68 sig];
  uint64_t v74 = sub_100221BF0();
  uint64_t v76 = v75;

  v66[2] = v74;
  v66[3] = v76;
  __chkstk_darwin(v77, v78);
  *(&v115 - 8) = v59;
  *(&v115 - 7) = v60;
  uint64_t v80 = v122;
  uint64_t v79 = v123;
  *(&v115 - 6) = v120;
  *(&v115 - 5) = v80;
  *(&v115 - 4) = (uint64_t)v137;
  *(&v115 - 3) = v79;
  uint64_t v113 = v66;
  unint64_t v114 = v57;
  sub_1001A56AC((unint64_t *)&unk_10029F070, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
  sub_100221F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)&v57[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
  uint64_t v130 = *(void *)&v57[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
  uint64_t v123 = v81;
  uint64_t v125 = (uint64_t)sub_1000059A4(&v57[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v130);
  uint64_t v82 = v126;
  uint64_t v83 = v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v132, v115, v128);
  unint64_t v84 = (*(unsigned __int8 *)(v82 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  unint64_t v85 = (v127 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v86 = (v85 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v87 = (v86 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v88 = (v87 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v89 = swift_allocObject();
  *(void *)(v89 + 16) = v57;
  (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v89 + v84, v132, v83);
  *(void *)(v89 + v85) = v121;
  id v90 = (void *)(v89 + v86);
  uint64_t v91 = v117;
  *id v90 = v116;
  v90[1] = v91;
  uint64_t v92 = (void *)(v89 + v87);
  uint64_t v93 = v119;
  *uint64_t v92 = v118;
  v92[1] = v93;
  *(_DWORD *)(v89 + v88) = v129;
  unint64_t v94 = (void *)(v89 + ((v88 + 11) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v95 = v135;
  void *v94 = v136;
  v94[1] = v95;
  uint64_t v96 = *(void *)(v123 + 16);
  unint64_t v97 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v96 + 48);
  swift_retain();
  Class v98 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v99 = (uint64_t)v134;
  v97(v134, sub_1001B7118, v89, v130, v96);
  swift_release();

  sub_1001B7EAC(v99, type metadata accessor for AddCustodianRecoveryKeyRequest);
  sub_1001B7EAC((uint64_t)v133, type metadata accessor for SignedPeerDynamicInfo);
  uint64_t v100 = (uint64_t)v137;
  return sub_1001B7EAC(v100, type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t sub_10013EF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v40 = a8;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v37 = a4;
  uint64_t v41 = a9;
  uint64_t v13 = type metadata accessor for SignedPeerDynamicInfo(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Peer(0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v22 = (void *)swift_retain();
    *(void *)(a1 + v21) = sub_1000A7424(v22);
    swift_release();
  }
  uint64_t v23 = *(void *)(a1 + v21);
  swift_beginAccess();
  *(void *)(v23 + 32) = a2;
  *(void *)(v23 + 40) = a3;
  uint64_t v24 = swift_bridgeObjectRelease();
  __chkstk_darwin(v24, v25);
  uint64_t v26 = v38;
  *(&v37 - 4) = v37;
  *(&v37 - 3) = v26;
  *(&v37 - 2) = v39;
  sub_1001A56AC((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  sub_100221F70();
  AddCustodianRecoveryKeyRequest.peer.setter((uint64_t)v20);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = (void *)swift_retain();
    *(void *)(a1 + v21) = sub_1000A7424(v27);
    swift_release();
  }
  uint64_t v28 = (void *)(*(void *)(a1 + v21)
                 + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  *uint64_t v28 = a7;
  swift_bridgeObjectRelease();
  sub_1001B7C04(v40, (uint64_t)v16, type metadata accessor for SignedPeerDynamicInfo);
  AddCustodianRecoveryKeyRequest.dynamicInfoAndSig.setter((uint64_t)v16);
  id v29 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v41
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "changeToken"));
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = sub_100222270();
    unint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v33 = 0xE000000000000000;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    id v34 = (void *)swift_retain();
    *(void *)(a1 + v21) = sub_1000A7424(v34);
    swift_release();
  }
  uint64_t v35 = *(void *)(a1 + v21);
  swift_beginAccess();
  *(void *)(v35 + 16) = v31;
  *(void *)(v35 + 24) = v33;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013F2E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  sub_1001B7C04(a4, (uint64_t)v12, type metadata accessor for SignedCustodianRecoveryKey);
  uint64_t v13 = (uint64_t)a1 + *(int *)(type metadata accessor for Peer(0) + 44);
  sub_10004015C(v13, &qword_100299F28);
  sub_1001B7B9C((uint64_t)v12, v13, type metadata accessor for SignedCustodianRecoveryKey);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
}

uint64_t sub_10013F444(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, void (*a10)(void, void, uint64_t), uint64_t a11)
{
  uint64_t v60 = a6;
  uint64_t v61 = a8;
  uint64_t v58 = a5;
  uint64_t v59 = a7;
  uint64_t v62 = a4;
  uint64_t v57 = a3;
  uint64_t v64 = a11;
  id v65 = a10;
  id v66 = a2;
  uint64_t v63 = sub_100221D00();
  uint64_t v12 = *(void *)(v63 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v63, v14);
  uint64_t v15 = type metadata accessor for AddCustodianRecoveryKeyResponse(0);
  uint64_t v56 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v56 + 64);
  uint64_t v18 = __chkstk_darwin(v15 - 8, v17);
  uint64_t v19 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = sub_1000046DC(&qword_100299DD8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (uint64_t *)((char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v26, &qword_100299DD8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    int v53 = a9;
    id v52 = type metadata accessor for AddCustodianRecoveryKeyResponse;
    uint64_t v55 = v22;
    sub_1001B7B9C((uint64_t)v26, (uint64_t)v22, type metadata accessor for AddCustodianRecoveryKeyResponse);
    id v54 = *(id *)&v66[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    sub_1001B7C04((uint64_t)v22, (uint64_t)v19, type metadata accessor for AddCustodianRecoveryKeyResponse);
    id v34 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v51 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v34(v51, v57, v63);
    unint64_t v35 = (*(unsigned __int8 *)(v56 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    unint64_t v36 = (v16 + *(unsigned __int8 *)(v12 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v37 = (v13 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v39 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = (v39 + 19) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v66;
    sub_1001B7B9C((uint64_t)v19, v41 + v35, v52);
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v41 + v36, v51, v63);
    uint64_t v42 = v61;
    *(void *)(v41 + v37) = v62;
    uint64_t v43 = (void *)(v41 + v38);
    uint64_t v44 = v60;
    *uint64_t v43 = v58;
    v43[1] = v44;
    uint64_t v45 = (void *)(v41 + v39);
    void *v45 = v59;
    v45[1] = v42;
    *(_DWORD *)(v41 + v40) = v53;
    uint64_t v46 = (void *)(v41 + ((v40 + 11) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v47 = v64;
    *uint64_t v46 = v65;
    v46[1] = v47;
    id v29 = swift_allocObject();
    v29[2].Class isa = (Class)sub_1001B747C;
    v29[3].Class isa = (Class)v41;
    aBlock[4] = (uint64_t)sub_1001B8924;
    id v68 = v29;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_1002868C0;
    id v48 = _Block_copy(aBlock);
    uint64_t v27 = (uint64_t)v68;
    uint64_t v49 = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v54 performBlockAndWait:v48];
    _Block_release(v48);
    sub_1001B7EAC((uint64_t)v55, type metadata accessor for AddCustodianRecoveryKeyResponse);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v48 & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v27 = *v26;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_100222090();
  sub_100003CC8(v28, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v29 = sub_100222070();
  os_log_type_t v30 = sub_100222500();
  if (!os_log_type_enabled(v29, v30))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v31 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v31 = 136446210;
  uint64_t v69 = v27;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v32 = sub_1002222C0();
  uint64_t v69 = sub_1001BEBDC(v32, v33, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v29, v30, "CreateCustodianRecoveryKey failed: %{public}s", v31, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  swift_errorRetain();
  v65(0, 0, v27);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10013FAA0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, void (*a10)(void *, id, void), uint64_t a11)
{
  uint64_t v66 = a7;
  uint64_t v67 = a8;
  uint64_t v64 = a5;
  uint64_t v65 = a6;
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v68 = a11;
  uint64_t v71 = sub_100221D50();
  uint64_t v61 = *(void *)(v71 - 8);
  uint64_t v13 = __chkstk_darwin(v71, v12);
  uint64_t v70 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13, v15);
  uint64_t v17 = &v58[-v16];
  uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = &v58[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for Changes(0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = &v58[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = type metadata accessor for AddCustodianRecoveryKeyResponse(0);
  sub_10000D830((uint64_t)a2 + *(int *)(v27 + 24), (uint64_t)v21, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    *(void *)uint64_t v26 = 0;
    *((void *)v26 + 1) = 0xE000000000000000;
    *((void *)v26 + 2) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v26 + 24) = xmmword_100229520;
    *(_OWORD *)(v26 + 40) = xmmword_100229520;
    v26[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v21, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v21, (uint64_t)v26, type metadata accessor for Changes);
  }
  sub_10017AB04((uint64_t)v26, 0);
  sub_1001B7EAC((uint64_t)v26, type metadata accessor for Changes);
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  unsigned int v59 = a9;
  uint64_t v28 = sub_100222090();
  sub_100003CC8(v28, (uint64_t)qword_10029E7D0);
  id v29 = sub_100222070();
  os_log_type_t v30 = sub_1002224E0();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "CreateCustodianRecoveryKey succeeded", v31, 2u);
    swift_slowDealloc();
  }
  uint64_t v60 = a10;

  uint64_t v32 = *a2;
  unint64_t v72 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v69 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    id v34 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v61 + 16);
    uint64_t v35 = v32 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
    uint64_t v36 = *(void *)(v61 + 72);
    unint64_t v37 = (void (**)(unsigned char *, uint64_t))(v61 + 8);
    uint64_t v61 = v32;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v38 = v71;
      v34(v17, v35, v71);
      v34(v70, (uint64_t)v17, v38);
      uint64_t v39 = sub_100222620();
      (*v37)(v17, v38);
      if (v39)
      {
        sub_1002223A0();
        if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
      v35 += v36;
      --v33;
    }
    while (v33);
    unint64_t v40 = (void *)v72;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  sub_100221CD0();
  uint64_t v41 = v63;
  id v42 = objc_msgSend(objc_msgSend(*(id *)(v63 + 24), "encryptionPublicKey"), "spki");
  swift_unknownObjectRelease();
  uint64_t v43 = sub_100221BF0();
  unint64_t v45 = v44;

  id v46 = objc_msgSend(objc_msgSend(*(id *)(v41 + 24), "signingPublicKey"), "spki");
  swift_unknownObjectRelease();
  uint64_t v47 = sub_100221BF0();
  unint64_t v49 = v48;

  id v50 = objc_allocWithZone((Class)TrustedPeersHelperCustodianRecoveryKey);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v51 = sub_100222260();
  swift_bridgeObjectRelease();
  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v43, v45);
  Class v53 = sub_100221BD0().super.isa;
  sub_100005A40(v47, v49);
  NSString v54 = sub_100222260();
  swift_bridgeObjectRelease();
  NSString v55 = sub_100222260();
  swift_bridgeObjectRelease();
  id v56 = [v50 initWithUUID:v51 encryptionKey:isa signingKey:v53 recoveryString:v54 salt:v55 kind:v59];

  v60(v40, v56, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001402DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_100184C80(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.info.getter, "removeCustodianRecoveryKey complete: %{public}s", 0xD000000000000027, 0x80000001002443B0);
}

void sub_100140314(char *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100221D00();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v14 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v69 = a2;
    uint64_t v70 = a3;
    uint64_t v16 = sub_100222270();
    uint64_t v18 = v17;

    id v19 = *(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    Class isa = sub_100221CE0().super.isa;
    id v71 = [v19 findCustodianRecoveryKeyWithUUID:isa];

    if (v71)
    {
      id v21 = [v71 peerID];
      uint64_t v22 = sub_100222270();
      uint64_t v24 = v23;

      if (v22 == v16 && v24 == v18)
      {
        swift_bridgeObjectRelease();
LABEL_21:
        swift_bridgeObjectRelease();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_100222090();
        sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
        unint64_t v40 = sub_100222070();
        os_log_type_t v41 = sub_1002224E0();
        if (os_log_type_enabled(v40, v41))
        {
          id v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "Self-distrust via peerID not allowed", v42, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        swift_allocError();
        *(_OWORD *)uint64_t v43 = xmmword_1002311F0;
        *(unsigned char *)(v43 + 16) = 13;
        v69();
        swift_errorRelease();
        id v44 = v71;

        return;
      }
      char v26 = sub_100222A30();
      swift_bridgeObjectRelease();
      uint64_t v27 = v70;
      if (v26) {
        goto LABEL_21;
      }
      sub_1000046DC((uint64_t *)&unk_100299820);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100229540;
      *(void *)(inited + 32) = v22;
      *(void *)(inited + 40) = v24;
      swift_bridgeObjectRetain();
      Swift::Int v48 = sub_100199C04(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      unint64_t v49 = (void *)swift_allocObject();
      v49[2] = a1;
      v49[3] = v22;
      v49[4] = v24;
      id v50 = v69;
      v49[5] = v71;
      v49[6] = v50;
      v49[7] = v27;
      NSString v51 = *(void **)&a1[v13];
      id v52 = a1;
      swift_retain_n();
      id v53 = v71;
      swift_bridgeObjectRetain();
      NSString v54 = v52;
      id v55 = v53;
      id v56 = [v51 egoPeerID];
      if (v56)
      {
        uint64_t v57 = v56;
        uint64_t v58 = sub_100222270();
        uint64_t v60 = v59;

        strcpy((char *)v72, "signing-key ");
        BYTE5(v72[1]) = 0;
        HIWORD(v72[1]) = -5120;
        v74._countAndFlagsBits = v58;
        v74._object = v60;
        sub_100222310(v74);
        uint64_t v61 = v72[0];
        uint64_t v62 = v72[1];
        uint64_t v63 = v54;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10019F374(v61, v62, (uint64_t)sub_1001B1690, (uint64_t)v49, (uint64_t)v63, v58, (uint64_t)v60, v48, (void (*)(void))sub_10014ED98);
        swift_bridgeObjectRelease();
        swift_release_n();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_100222090();
        sub_100003CC8(v64, (uint64_t)qword_10029E7D0);
        uint64_t v65 = sub_100222070();
        os_log_type_t v66 = sub_1002224E0();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl((void *)&_mh_execute_header, v65, v66, "No dynamic info for self?", v67, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        swift_allocError();
        *(_OWORD *)uint64_t v68 = xmmword_1002297D0;
        *(unsigned char *)(v68 + 16) = 13;
        v69();
        swift_errorRelease();

        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_100222090();
      sub_100003CC8(v33, (uint64_t)qword_10029E7D0);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a4, v8);
      id v34 = sub_100222070();
      os_log_type_t v35 = sub_1002224E0();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        v72[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 136446210;
        sub_1001A56AC((unint64_t *)&unk_10029ED00, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v37 = sub_100222A00();
        v72[8] = sub_1001BEBDC(v37, v38, v72);
        sub_100222690();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Unable to find custodian recovery key %{public}s on model", v36, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }

      unint64_t v45 = v69;
      sub_100042D4C();
      swift_allocError();
      *(_OWORD *)uint64_t v46 = xmmword_100229920;
      *(unsigned char *)(v46 + 16) = 13;
      v45();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_100222090();
    sub_100003CC8(v28, (uint64_t)qword_10029E7D0);
    id v29 = sub_100222070();
    os_log_type_t v30 = sub_1002224E0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "No dynamic info for self?", v31, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v32 = xmmword_1002297D0;
    *(unsigned char *)(v32 + 16) = 13;
    a2();
    swift_errorRelease();
  }
}

uint64_t sub_100140C68(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t))
{
  if (a1)
  {
    uint64_t v7 = 0;
LABEL_5:
    a6(a1);
    return sub_10018CB38((uint64_t)v7);
  }
  id v19 = a6;
  id v20 = *(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  uint64_t v13 = swift_allocObject();
  uint64_t v7 = sub_1001B176C;
  *(void *)(v13 + 16) = sub_1001B176C;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_1002840E8;
  id v14 = _Block_copy(aBlock);
  uint64_t v15 = a2;
  swift_bridgeObjectRetain();
  id v16 = a5;
  swift_retain();
  swift_release();
  [v20 performBlockAndWait:v14];
  _Block_release(v14);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    a6 = v19;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_100140E28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  NSString v7 = sub_100222260();
  [v6 removeCustodianRecoveryKey:v7];

  uint64_t v8 = type metadata accessor for CustodianRecoveryKeyMO();
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:*(void *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc)];
  id v10 = [a4 data];
  uint64_t v11 = sub_100221BF0();
  unint64_t v13 = v12;

  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v11, v13);
  [v9 setCrkInfo:isa];

  id v15 = [a4 sig];
  uint64_t v16 = sub_100221BF0();
  unint64_t v18 = v17;

  Class v19 = sub_100221BD0().super.isa;
  sub_100005A40(v16, v18);
  [v9 setCrkInfoSig:v19];

  id v20 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  sub_1000046DC(&qword_10029EC28);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100229540;
  *(void *)(v21 + 56) = v8;
  *(void *)(v21 + 32) = v9;
  sub_1000047D8(0, &qword_1002991B8);
  id v22 = v20;
  id v23 = v9;
  id v24 = (id)sub_1002225F0();
  [v22 removeCustodianRecoveryKeys:v24];
}

uint64_t sub_10014104C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  return sub_1001726D8(a1, a2, a3, a4, a5, "findCustodianRecoveryKey complete: %{public}s", 0xD000000000000025, 0x8000000100244380);
}

void sub_100141094(uint64_t a1, uint64_t a2, void (*a3)(void, void))
{
  uint64_t v5 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v6 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  Class isa = sub_100221CE0().super.isa;
  id v8 = [v6 findCustodianRecoveryKeyWithUUID:isa];

  if (v8)
  {
    id v9 = *(void **)(a1 + v5);
    id v51 = 0;
    id v10 = v8;
    unsigned int v11 = [v9 isCustodianRecoveryKeyTrusted:v10 error:&v51];
    id v12 = v51;
    if (v51)
    {
      id v13 = v51;
      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_100222090();
      sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
      id v15 = v13;
      uint64_t v16 = sub_100222070();
      os_log_type_t v17 = sub_100222500();
      if (os_log_type_enabled(v16, v17))
      {
        id v50 = a3;
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        unint64_t v49 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v18 = 138543362;
        Class v19 = v15;
        id v20 = v15;
        id v21 = v10;
        id v22 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v51 = v22;
        sub_100222690();
        *unint64_t v49 = v22;
        id v10 = v21;
        id v15 = v20;

        a3 = v50;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "error determine whether CRK is trusted: %{public}@", v18, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v16 = v15;
      }

      unint64_t v38 = v15;
      a3(0, v12);
    }
    else
    {
      if (v11)
      {
        sub_100221CD0();
        id v23 = objc_msgSend(objc_msgSend(v10, "encryptionPublicKey"), "spki");
        swift_unknownObjectRelease();
        uint64_t v24 = sub_100221BF0();
        unint64_t v26 = v25;

        id v27 = objc_msgSend(objc_msgSend(v10, "signingPublicKey"), "spki");
        swift_unknownObjectRelease();
        uint64_t v28 = sub_100221BF0();
        unint64_t v30 = v29;

        id v31 = [v10 kind];
        id v32 = objc_allocWithZone((Class)TrustedPeersHelperCustodianRecoveryKey);
        uint64_t v33 = v10;
        NSString v34 = sub_100222260();
        swift_bridgeObjectRelease();
        Class v35 = sub_100221BD0().super.isa;
        sub_100005A40(v24, v26);
        Class v36 = sub_100221BD0().super.isa;
        sub_100005A40(v28, v30);
        id v37 = [v32 initWithUUID:v34 encryptionKey:v35 signingKey:v36 recoveryString:0 salt:0 kind:v31];

        a3(v37, 0);
      }
      else
      {
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_100222090();
        sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
        id v37 = v10;
        unint64_t v40 = sub_100222070();
        os_log_type_t v41 = sub_1002224F0();
        if (os_log_type_enabled(v40, v41))
        {
          id v42 = (uint8_t *)swift_slowAlloc();
          id v51 = (id)swift_slowAlloc();
          *(_DWORD *)id v42 = 136315138;
          id v43 = [v37 peerID];
          uint64_t v44 = sub_100222270();
          unint64_t v46 = v45;

          sub_1001BEBDC(v44, v46, (uint64_t *)&v51);
          sub_100222690();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "CRK %s is not trusted", v42, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_100042D4C();
        uint64_t v47 = swift_allocError();
        *(_OWORD *)uint64_t v48 = xmmword_100229930;
        *(unsigned char *)(v48 + 16) = 13;
        a3(0, v47);
        swift_errorRelease();
      }
    }
  }
  else
  {
    a3(0, 0);
  }
}

uint64_t sub_1001416D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  return sub_100151044(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, "vouchWithBottle complete: %{public}s", 0xD00000000000003DLL, 0x80000001002447F0);
}

uint64_t sub_10014172C(char *a1, uint64_t a2, uint64_t a3, void (*a4)(void, unint64_t, void, unint64_t, void, void, uint64_t), uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10)
{
  id v15 = (void *)sub_1000408F0(a2);

  swift_bridgeObjectRelease();
  id v17 = v15;
  id v18 = [v17 contents];
  if (v18)
  {
    Class v19 = v18;
    uint64_t v106 = sub_100221BF0();
    unint64_t v107 = v20;

    id v21 = [v17 signatureUsingEscrowKey];
    if (v21)
    {
      id v22 = v21;
      unint64_t v102 = a7;
      uint64_t v23 = sub_100221BF0();
      unint64_t v25 = v24;

      id v26 = [v17 signatureUsingPeerKey];
      if (v26)
      {
        id v27 = v26;
        uint64_t v104 = v23;
        unint64_t v105 = v25;
        uint64_t v23 = sub_100221BF0();
        unint64_t v25 = v28;

        id v29 = [v17 peerID];
        id v103 = v17;
        if (v29)
        {
          uint64_t v100 = v23;
          unint64_t v101 = v25;
          uint64_t v99 = a5;
          uint64_t v98 = sub_100222270();
          uint64_t v31 = v30;
          uint64_t v32 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
          uint64_t v33 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
          aBlock[0] = 0;
          id v34 = v33;
          id v35 = [v34 peerWithID:v29 error:aBlock];

          if (aBlock[0])
          {
            aBlock[0];
            swift_bridgeObjectRelease();

            swift_willThrow();
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v36 = sub_100222090();
            sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
            swift_errorRetain();
            swift_errorRetain();
            id v37 = sub_100222070();
            os_log_type_t v38 = sub_100222500();
            if (os_log_type_enabled(v37, v38))
            {
              uint64_t v39 = (uint8_t *)swift_slowAlloc();
              aBlock[0] = (id)swift_slowAlloc();
              *(_DWORD *)uint64_t v39 = 136446210;
              swift_errorRetain();
              sub_1000046DC(&qword_100299D70);
              uint64_t v40 = sub_1002222C0();
              sub_1001BEBDC(v40, v41, (uint64_t *)aBlock);
              sub_100222690();
              swift_bridgeObjectRelease();
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v37, v38, "vouchWithBottle: Verification of bottled signature failed: %{public}s", v39, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_errorRelease();
              swift_errorRelease();
            }

            sub_100042D4C();
            uint64_t v54 = swift_allocError();
            *(_OWORD *)uint64_t v55 = xmmword_100231210;
            *(unsigned char *)(v55 + 16) = 13;
            a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v54);

            sub_100005A40(v104, v105);
            swift_errorRelease();
            swift_errorRelease();
            sub_100005A40(v100, v101);
            return sub_100005A40(v106, v107);
          }
          uint64_t v97 = v32;
          if (v35)
          {
            id v51 = [v35 permanentInfo];
            id v52 = [v51 signingPubKey];

            self;
            uint64_t v53 = swift_dynamicCastObjCClass();
            if (v53)
            {
              sub_10020415C(v106, v107, v100, v101, v53);

              swift_unknownObjectRelease();
              objc_allocWithZone((Class)type metadata accessor for BottledPeer());
              sub_1000059E8(v106, v107);
              sub_1000059E8(a6, v102);
              swift_bridgeObjectRetain();
              sub_1000059E8(v104, v105);
              sub_1000059E8(v100, v101);
              id v73 = sub_10020226C(v106, v107, a6, v102, a8, a9, v104, v105, v100, v101);
              if (qword_100298EB8 != -1) {
                swift_once();
              }
              uint64_t v74 = sub_100222090();
              sub_100003CC8(v74, (uint64_t)qword_10029E7D0);
              uint64_t v75 = v73;
              uint64_t v76 = sub_100222070();
              os_log_type_t v77 = sub_1002224E0();
              if (os_log_type_enabled(v76, v77))
              {
                uint64_t v78 = (uint8_t *)swift_slowAlloc();
                aBlock[0] = (id)swift_slowAlloc();
                *(_DWORD *)uint64_t v78 = 136446210;
                uint64_t v80 = *(void *)&v75[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerID];
                unint64_t v79 = *(void *)&v75[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerID + 8];
                swift_bridgeObjectRetain();
                sub_1001BEBDC(v80, v79, (uint64_t *)aBlock);
                sub_100222690();

                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v76, v77, "Have a bottle for peer %{public}s", v78, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
              }
              uint64_t v81 = *(void **)&a1[v97];
              id v82 = *(id *)&v75[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerKeys];
              id v83 = v81;
              unint64_t v84 = sub_1001170DC(a10, v82, (uint64_t)v83);
              unint64_t v86 = v85;

              unint64_t v87 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
              unint64_t v88 = (void *)swift_allocObject();
              v88[2] = a1;
              v88[3] = a4;
              v88[4] = v99;
              v88[5] = v98;
              v88[6] = v31;
              v88[7] = v75;
              v88[8] = v84;
              v88[9] = v86;
              uint64_t v89 = (void *)swift_allocObject();
              v89[2] = sub_1001B340C;
              v89[3] = v88;
              aBlock[4] = sub_1001B8924;
              uint64_t aBlock[5] = v89;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = (id)1107296256;
              aBlock[2] = sub_100112F58;
              aBlock[3] = &unk_100284D40;
              id v90 = _Block_copy(aBlock);
              uint64_t v91 = v75;
              uint64_t v92 = a1;
              swift_retain();
              id v93 = v86;
              swift_retain();
              swift_release();
              [v87 performBlockAndWait:v90];

              sub_100005A40(v104, v105);
              _Block_release(v90);
              sub_100005A40(v100, v101);
              sub_100005A40(v106, v107);
              uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
              swift_release();
              uint64_t result = swift_release();
              if (isEscapingClosureAtFileLocation)
              {
                __break(1u);
                swift_errorRelease();
                swift_errorRelease();

                sub_100042D4C();
                uint64_t v95 = swift_allocError();
                *(_OWORD *)uint64_t v96 = xmmword_100231210;
                *(unsigned char *)(v96 + 16) = 13;
                a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v95);

                sub_100005A40(v104, v105);
                swift_errorRelease();
                swift_errorRelease();
                swift_errorRelease();
                sub_100005A40(v99, v101);
                return sub_100005A40(v106, v107);
              }
              return result;
            }
            os_log_type_t v66 = v35;
            unint64_t v56 = v101;
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v60 = v100;
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v67 = sub_100222090();
            sub_100003CC8(v67, (uint64_t)qword_10029E7D0);
            uint64_t v68 = sub_100222070();
            os_log_type_t v69 = sub_1002224E0();
            unint64_t v61 = v107;
            uint64_t v62 = v106;
            if (os_log_type_enabled(v68, v69))
            {
              uint64_t v70 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v70 = 0;
              _os_log_impl((void *)&_mh_execute_header, v68, v69, "vouchWithBottle: Unable to create a sponsor public key", v70, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v71 = swift_allocError();
            *(_OWORD *)uint64_t v72 = xmmword_100231220;
            *(unsigned char *)(v72 + 16) = 13;
            a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v71);

            sub_100005A40(v104, v105);
          }
          else
          {
            unint64_t v56 = v101;
            swift_bridgeObjectRelease();
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v57 = sub_100222090();
            sub_100003CC8(v57, (uint64_t)qword_10029E7D0);
            uint64_t v58 = sub_100222070();
            os_log_type_t v59 = sub_1002224E0();
            uint64_t v60 = v100;
            unint64_t v61 = v107;
            uint64_t v62 = v106;
            if (os_log_type_enabled(v58, v59))
            {
              uint64_t v63 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v63 = 0;
              _os_log_impl((void *)&_mh_execute_header, v58, v59, "vouchWithBottle: Unable to find peer that created the bottle", v63, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v64 = swift_allocError();
            *(_OWORD *)uint64_t v65 = xmmword_1002297E0;
            *(unsigned char *)(v65 + 16) = 13;
            a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v64);

            sub_100005A40(v104, v105);
          }
          swift_errorRelease();
          sub_100005A40(v60, v56);
          return sub_100005A40(v62, v61);
        }
        sub_100042D4C();
        uint64_t v49 = swift_allocError();
        *(_OWORD *)uint64_t v50 = xmmword_100231230;
        *(unsigned char *)(v50 + 16) = 13;
        a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v49);

        sub_100005A40(v104, v105);
      }
      else
      {

        sub_100042D4C();
        uint64_t v47 = swift_allocError();
        *(_OWORD *)uint64_t v48 = xmmword_100231240;
        *(unsigned char *)(v48 + 16) = 13;
        a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v47);
      }
      swift_errorRelease();
      sub_100005A40(v23, v25);
    }
    else
    {

      sub_100042D4C();
      uint64_t v45 = swift_allocError();
      *(_OWORD *)uint64_t v46 = xmmword_100231250;
      *(unsigned char *)(v46 + 16) = 13;
      a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v45);

      swift_errorRelease();
    }
    return sub_100005A40(v106, v107);
  }
  else
  {

    sub_100042D4C();
    uint64_t v42 = swift_allocError();
    *(_OWORD *)uint64_t v43 = xmmword_100231260;
    *(unsigned char *)(v43 + 16) = 13;
    a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v42);

    return swift_errorRelease();
  }
}

uint64_t sub_100142ADC(char *a1, void (*a2)(void, unint64_t, void, unint64_t, void, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v16 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v17 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v17)
  {
    id v18 = v17;
    uint64_t v111 = a4;
    uint64_t v113 = a2;
    uint64_t v19 = sub_100222270();
    id v21 = v20;

    id v22 = [*(id *)&a1[v16] egoPeerPermanentInfo];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v110 = v19;
      uint64_t v24 = sub_100221BF0();
      unint64_t v112 = v25;

      id v26 = [*(id *)&a1[v16] egoPeerPermanentInfoSig];
      if (v26)
      {
        id v27 = v26;
        uint64_t v107 = a5;
        uint64_t v108 = a7;
        uint64_t v28 = sub_100221BF0();
        unint64_t v30 = v29;

        id v31 = [*(id *)&a1[v16] egoPeerStableInfo];
        if (v31)
        {
          uint64_t v32 = v31;
          unint64_t v101 = a8;
          uint64_t v109 = sub_100221BF0();
          unint64_t v34 = v33;

          id v35 = [*(id *)&a1[v16] egoPeerStableInfoSig];
          if (v35)
          {
            uint64_t v36 = v35;
            uint64_t v100 = a6;
            uint64_t v104 = a3;
            uint64_t v37 = sub_100221BF0();
            unint64_t v105 = v38;
            uint64_t v106 = v37;

            id v39 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
            swift_bridgeObjectRetain();
            sub_1000059E8(v24, v112);
            sub_1000059E8(v28, v30);
            NSString v40 = sub_100222260();
            swift_bridgeObjectRelease();
            Class isa = sub_100221BD0().super.isa;
            Class v42 = sub_100221BD0().super.isa;
            unint64_t v102 = v39;
            id v43 = [self permanentInfoWithPeerID:v40 data:isa sig:v42 keyFactory:v39];
            unint64_t v103 = v30;
            sub_100005A40(v28, v30);
            sub_100005A40(v24, v112);

            if (v43)
            {
              id v44 = objc_allocWithZone((Class)TPPeerStableInfo);
              sub_1000059E8(v109, v34);
              sub_1000059E8(v106, v105);
              Class v45 = sub_100221BD0().super.isa;
              Class v46 = sub_100221BD0().super.isa;
              id v47 = [v44 initWithData:v45 sig:v46];
              sub_100005A40(v106, v105);
              sub_100005A40(v109, v34);

              if (v47)
              {
                uint64_t v48 = v47;
                uint64_t v49 = (void *)swift_allocObject();
                v49[2] = v113;
                v49[3] = v104;
                v49[4] = a1;
                v49[5] = v43;
                v49[6] = v48;
                v49[7] = v111;
                v49[8] = v107;
                v49[9] = v100;
                v49[10] = v108;
                v49[11] = v101;
                strcpy((char *)v114, "signing-key ");
                BYTE5(v114[1]) = 0;
                HIWORD(v114[1]) = -5120;
                v116._countAndFlagsBits = v110;
                v116._object = v21;
                sub_100222310(v116);
                swift_bridgeObjectRetain_n();
                swift_retain();
                swift_retain();
                uint64_t v50 = a1;
                id v51 = v43;
                id v52 = v48;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v53 = v101;
                id v54 = v100;
                sub_10019ED6C(v114[0], v114[1], (void (*)(char *, uint64_t))sub_1001B34C0, (uint64_t)v49, v110, v21);

                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                sub_100005A40(v106, v105);
                sub_100005A40(v109, v34);
                sub_100005A40(v28, v103);
                sub_100005A40(v24, v112);
                return swift_bridgeObjectRelease();
              }
              id v93 = v43;
              swift_bridgeObjectRelease();
              if (qword_100298EB8 != -1) {
                swift_once();
              }
              uint64_t v94 = sub_100222090();
              sub_100003CC8(v94, (uint64_t)qword_10029E7D0);
              uint64_t v95 = sub_100222070();
              os_log_type_t v96 = sub_1002224E0();
              if (os_log_type_enabled(v95, v96))
              {
                uint64_t v97 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v97 = 0;
                _os_log_impl((void *)&_mh_execute_header, v95, v96, "Invalid stableinfo or signature; van't vouch for them",
                  v97,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v98 = swift_allocError();
              *(_OWORD *)uint64_t v99 = xmmword_100229940;
              *(unsigned char *)(v99 + 16) = 13;
              v113(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v98);
              swift_errorRelease();

              sub_100005A40(v106, v105);
              sub_100005A40(v109, v34);
              sub_100005A40(v28, v103);
              uint64_t v86 = v24;
            }
            else
            {
              swift_bridgeObjectRelease();
              if (qword_100298EB8 != -1) {
                swift_once();
              }
              uint64_t v87 = sub_100222090();
              sub_100003CC8(v87, (uint64_t)qword_10029E7D0);
              unint64_t v88 = sub_100222070();
              os_log_type_t v89 = sub_1002224E0();
              if (os_log_type_enabled(v88, v89))
              {
                id v90 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)id v90 = 0;
                _os_log_impl((void *)&_mh_execute_header, v88, v89, "Invalid permenent info or signature; can't vouch for them",
                  v90,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v91 = swift_allocError();
              *(_OWORD *)uint64_t v92 = xmmword_1002297C0;
              *(unsigned char *)(v92 + 16) = 13;
              v113(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v91);
              swift_errorRelease();

              sub_100005A40(v106, v105);
              sub_100005A40(v109, v34);
              sub_100005A40(v28, v30);
              uint64_t v86 = v24;
            }
            goto LABEL_41;
          }
          swift_bridgeObjectRelease();
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v80 = sub_100222090();
          sub_100003CC8(v80, (uint64_t)qword_10029E7D0);
          uint64_t v81 = sub_100222070();
          os_log_type_t v82 = sub_1002224E0();
          if (os_log_type_enabled(v81, v82))
          {
            id v83 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v83 = 0;
            _os_log_impl((void *)&_mh_execute_header, v81, v82, "stableInfoSig does not exist", v83, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v84 = swift_allocError();
          *(_OWORD *)uint64_t v85 = xmmword_1002311E0;
          *(unsigned char *)(v85 + 16) = 13;
          v113(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v84);
          swift_errorRelease();
          sub_100005A40(v109, v34);
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v74 = sub_100222090();
          sub_100003CC8(v74, (uint64_t)qword_10029E7D0);
          uint64_t v75 = sub_100222070();
          os_log_type_t v76 = sub_1002224E0();
          if (os_log_type_enabled(v75, v76))
          {
            os_log_type_t v77 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v77 = 0;
            _os_log_impl((void *)&_mh_execute_header, v75, v76, "stableInfo does not exist", v77, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v78 = swift_allocError();
          *(_OWORD *)uint64_t v79 = xmmword_1002311E0;
          *(unsigned char *)(v79 + 16) = 13;
          v113(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v78);
          swift_errorRelease();
        }
        sub_100005A40(v28, v30);
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v68 = sub_100222090();
        sub_100003CC8(v68, (uint64_t)qword_10029E7D0);
        os_log_type_t v69 = sub_100222070();
        os_log_type_t v70 = sub_1002224E0();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v71 = 0;
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "permanentInfoSig does not exist", v71, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v72 = swift_allocError();
        *(_OWORD *)uint64_t v73 = xmmword_1002311E0;
        *(unsigned char *)(v73 + 16) = 13;
        v113(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v72);
        swift_errorRelease();
      }
      uint64_t v86 = v24;
LABEL_41:
      return sub_100005A40(v86, v112);
    }
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_100222090();
    sub_100003CC8(v62, (uint64_t)qword_10029E7D0);
    uint64_t v63 = sub_100222070();
    os_log_type_t v64 = sub_1002224E0();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "permanentInfo does not exist", v65, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v66 = swift_allocError();
    *(_OWORD *)uint64_t v67 = xmmword_1002311E0;
    *(unsigned char *)(v67 + 16) = 13;
    v113(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v66);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_100222090();
    sub_100003CC8(v56, (uint64_t)qword_10029E7D0);
    uint64_t v57 = sub_100222070();
    os_log_type_t v58 = sub_1002224E0();
    if (os_log_type_enabled(v57, v58))
    {
      os_log_type_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "As a nonmember, can't vouch for someone else", v59, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v60 = swift_allocError();
    *(_OWORD *)uint64_t v61 = xmmword_1002311E0;
    *(unsigned char *)(v61 + 16) = 13;
    a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v60);
  }

  return swift_errorRelease();
}

void sub_100143834(void *a1, void *a2, void (*a3)(uint64_t, unint64_t, uint64_t, unint64_t, void *, uint64_t, id), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12)
{
  if (!a1)
  {
    id v20 = a2;
    if (qword_100298EB8 == -1)
    {
LABEL_6:
      uint64_t v24 = sub_100222090();
      sub_100003CC8(v24, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v25 = sub_100222070();
      os_log_type_t v26 = sub_100222500();
      if (os_log_type_enabled(v25, v26))
      {
        id v27 = (uint8_t *)swift_slowAlloc();
        id v48 = (id)swift_slowAlloc();
        *(_DWORD *)id v27 = 136446210;
        swift_errorRetain();
        sub_1000046DC((uint64_t *)&unk_1002996A0);
        uint64_t v28 = sub_1002222C0();
        sub_1001BEBDC(v28, v29, (uint64_t *)&v48);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Error loading ego peer keys: %{public}s", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v20);
      return;
    }
LABEL_17:
    swift_once();
    goto LABEL_6;
  }
  id v15 = *(id *)(a5 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v16 = a1;
  NSString v17 = sub_100222260();
  uint64_t v18 = *(void *)(*(void *)(a10 + OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerKeys)
                  + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey);
  id v48 = 0;
  id v19 = [v15 createVoucherForCandidate:a6 stableInfo:a7 withSponsorID:v17 reason:1 signingKeyPair:v18 error:&v48];

  id v20 = v48;
  if (v19)
  {
    id v21 = v16;
    id v22 = v20;
    uint64_t v23 = (uint64_t)[a6 epoch];
    if ((v23 & 0x8000000000000000) == 0)
    {
      unint64_t v38 = sub_1001165B4(a11, (uint64_t)v21, (uint64_t)v21, v23);

      id v39 = [v19 data];
      uint64_t v40 = sub_100221BF0();
      unint64_t v42 = v41;

      id v43 = [v19 sig];
      uint64_t v44 = sub_100221BF0();
      unint64_t v46 = v45;

      a3(v40, v42, v44, v46, v38, a12, 0);
      swift_bridgeObjectRelease();
      sub_100005A40(v44, v46);
      sub_100005A40(v40, v42);

      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  id v30 = v48;
  uint64_t v31 = sub_100221B40();

  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100222090();
  sub_100003CC8(v32, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v33 = sub_100222070();
  os_log_type_t v34 = sub_100222500();
  if (os_log_type_enabled(v33, v34))
  {
    id v35 = (uint8_t *)swift_slowAlloc();
    id v48 = (id)swift_slowAlloc();
    *(_DWORD *)id v35 = 136446210;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v36 = sub_1002222C0();
    sub_1001BEBDC(v36, v37, (uint64_t *)&v48);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Error creating voucher with bottle: %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, (id)v31);
  swift_errorRelease();
  swift_errorRelease();
}

uint64_t sub_100143E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  return sub_100151044(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, "vouchWithRecoveryKey complete: %{public}s", 0xD000000000000037, 0x80000001002447B0);
}

uint64_t sub_100143E68(char *a1, void (*a2)(void, unint64_t, void, unint64_t, void, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100222090();
  sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
  id v15 = sub_100222070();
  os_log_type_t v16 = sub_1002224E0();
  if (os_log_type_enabled(v15, v16))
  {
    NSString v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "beginning a vouchWithRecoveryKey", v17, 2u);
    swift_slowDealloc();
  }

  uint64_t v18 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v19 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v19)
  {
    id v20 = v19;
    uint64_t v100 = sub_100222270();
    id v22 = v21;

    id v23 = [*(id *)&a1[v18] egoPeerPermanentInfo];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v99 = a6;
      uint64_t v25 = sub_100221BF0();
      unint64_t v101 = v26;

      id v27 = [*(id *)&a1[v18] egoPeerPermanentInfoSig];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v96 = a5;
        uint64_t v97 = a7;
        uint64_t v29 = sub_100221BF0();
        unint64_t v31 = v30;

        id v32 = [*(id *)&a1[v18] egoPeerStableInfo];
        if (v32)
        {
          unint64_t v33 = v32;
          uint64_t v88 = a8;
          uint64_t v34 = sub_100221BF0();
          unint64_t v98 = v35;

          id v36 = [*(id *)&a1[v18] egoPeerStableInfoSig];
          if (v36)
          {
            unint64_t v37 = v36;
            uint64_t v95 = v34;
            uint64_t v91 = a3;
            uint64_t v93 = sub_100221BF0();
            unint64_t v94 = v38;

            id v39 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
            swift_bridgeObjectRetain();
            sub_1000059E8(v25, v101);
            sub_1000059E8(v29, v31);
            NSString v40 = sub_100222260();
            unint64_t v41 = v22;
            unint64_t v42 = v40;
            uint64_t v92 = v41;
            swift_bridgeObjectRelease();
            Class isa = sub_100221BD0().super.isa;
            Class v44 = sub_100221BD0().super.isa;
            os_log_type_t v89 = v39;
            id v45 = [self permanentInfoWithPeerID:v42 data:isa sig:v44 keyFactory:v39];
            uint64_t v90 = v29;
            sub_100005A40(v29, v31);
            sub_100005A40(v25, v101);

            if (v45)
            {
              uint64_t v87 = v45;
              id v46 = objc_allocWithZone((Class)TPPeerStableInfo);
              sub_1000059E8(v34, v98);
              sub_1000059E8(v93, v94);
              Class v47 = sub_100221BD0().super.isa;
              Class v48 = sub_100221BD0().super.isa;
              id v49 = [v46 initWithData:v47 sig:v48];
              sub_100005A40(v93, v94);
              sub_100005A40(v34, v98);

              if (v49)
              {
                uint64_t v50 = (void *)swift_allocObject();
                v50[2] = a2;
                v50[3] = v91;
                v50[4] = a4;
                v50[5] = v96;
                v50[6] = v99;
                v50[7] = v97;
                v50[8] = a1;
                v50[9] = v87;
                v50[10] = v49;
                v50[11] = v88;
                strcpy((char *)v104, "signing-key ");
                BYTE5(v104[1]) = 0;
                HIWORD(v104[1]) = -5120;
                v106._countAndFlagsBits = v100;
                v106._object = v92;
                sub_100222310(v106);
                swift_bridgeObjectRetain_n();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v51 = a1;
                id v52 = v87;
                id v53 = v49;
                swift_bridgeObjectRetain();
                sub_10019ED6C(v104[0], v104[1], (void (*)(char *, uint64_t))sub_1001B31C0, (uint64_t)v50, v100, v92);

                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                sub_100005A40(v93, v94);
                sub_100005A40(v95, v98);
                sub_100005A40(v90, v31);
                sub_100005A40(v25, v101);
                return swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              os_log_type_t v82 = sub_100222070();
              os_log_type_t v83 = sub_1002224E0();
              if (os_log_type_enabled(v82, v83))
              {
                uint64_t v84 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v84 = 0;
                _os_log_impl((void *)&_mh_execute_header, v82, v83, "Invalid stableinfo or signature; van't vouch for them",
                  v84,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v85 = swift_allocError();
              *(_OWORD *)uint64_t v86 = xmmword_100229940;
              *(unsigned char *)(v86 + 16) = 13;
              a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v85);
              swift_errorRelease();

              sub_100005A40(v93, v94);
              sub_100005A40(v34, v98);
              sub_100005A40(v90, v31);
              uint64_t v76 = v25;
            }
            else
            {
              swift_bridgeObjectRelease();
              os_log_type_t v77 = sub_100222070();
              os_log_type_t v78 = sub_1002224E0();
              if (os_log_type_enabled(v77, v78))
              {
                uint64_t v79 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v79 = 0;
                _os_log_impl((void *)&_mh_execute_header, v77, v78, "Invalid permenent info or signature; can't vouch for them",
                  v79,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v80 = swift_allocError();
              *(_OWORD *)uint64_t v81 = xmmword_1002297C0;
              *(unsigned char *)(v81 + 16) = 13;
              a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v80);
              swift_errorRelease();

              sub_100005A40(v93, v94);
              sub_100005A40(v34, v98);
              sub_100005A40(v29, v31);
              uint64_t v76 = v25;
            }
            goto LABEL_34;
          }
          swift_bridgeObjectRelease();
          uint64_t v71 = sub_100222070();
          os_log_type_t v72 = sub_1002224E0();
          if (os_log_type_enabled(v71, v72))
          {
            uint64_t v73 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v73 = 0;
            _os_log_impl((void *)&_mh_execute_header, v71, v72, "stableInfoSig does not exist", v73, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v74 = swift_allocError();
          *(_OWORD *)uint64_t v75 = xmmword_1002311E0;
          *(unsigned char *)(v75 + 16) = 13;
          a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v74);
          swift_errorRelease();
          sub_100005A40(v34, v98);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v66 = sub_100222070();
          os_log_type_t v67 = sub_1002224E0();
          if (os_log_type_enabled(v66, v67))
          {
            uint64_t v68 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v68 = 0;
            _os_log_impl((void *)&_mh_execute_header, v66, v67, "stableInfo does not exist", v68, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v69 = swift_allocError();
          *(_OWORD *)uint64_t v70 = xmmword_1002311E0;
          *(unsigned char *)(v70 + 16) = 13;
          a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v69);
          swift_errorRelease();
        }
        sub_100005A40(v29, v31);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v61 = sub_100222070();
        os_log_type_t v62 = sub_1002224E0();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v63 = 0;
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "permanentInfoSig does not exist", v63, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v64 = swift_allocError();
        *(_OWORD *)uint64_t v65 = xmmword_1002311E0;
        *(unsigned char *)(v65 + 16) = 13;
        a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v64);
        swift_errorRelease();
      }
      uint64_t v76 = v25;
LABEL_34:
      return sub_100005A40(v76, v101);
    }
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_100222070();
    os_log_type_t v56 = sub_1002224E0();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      os_log_type_t v58 = "permanentInfo does not exist";
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v55 = sub_100222070();
    os_log_type_t v56 = sub_1002224E0();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      os_log_type_t v58 = "As a nonmember, can't vouch for someone else";
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v55, v56, v58, v57, 2u);
      swift_slowDealloc();
    }
  }

  sub_100042D4C();
  uint64_t v59 = swift_allocError();
  *(_OWORD *)uint64_t v60 = xmmword_1002311E0;
  *(unsigned char *)(v60 + 16) = 13;
  a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v59);

  return swift_errorRelease();
}

void sub_1001449E4(void *a1, void *a2, void (*a3)(void, unint64_t, void, unint64_t, void, void, id), uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12)
{
  if (a1)
  {
    id v17 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = (char *)sub_100006E20(a5, a6, a7, a8);
    id v139 = v17;
    uint64_t v26 = OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys;
    id v27 = *(void **)(*(void *)&v25[OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys]
                   + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey);
    uint64_t v142 = v25;
    id v28 = [v27 publicKey];
    id v29 = [v28 keyData];

    uint64_t v30 = sub_100221BF0();
    unint64_t v32 = v31;

    uint64_t v134 = v26;
    uint64_t v135 = v25;
    id v33 = [*(id *)(*(void *)&v25[v26] + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey) publicKey];
    id v34 = [v33 keyData];

    uint64_t v35 = sub_100221BF0();
    unint64_t v37 = v36;

    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_100222090();
    sub_100003CC8(v38, (uint64_t)qword_10029E7D0);
    sub_1000059E8(v30, v32);
    sub_1000059E8(v30, v32);
    id v39 = sub_100222070();
    os_log_type_t v40 = sub_1002224E0();
    uint64_t v143 = v30;
    unint64_t v141 = v37;
    uint64_t v41 = v30;
    unint64_t v42 = v32;
    if (os_log_type_enabled(v39, v40))
    {
      id v43 = (uint8_t *)swift_slowAlloc();
      id v145 = (id)swift_slowAlloc();
      *(_DWORD *)id v43 = 136446210;
      uint64_t v44 = sub_100221BE0(0);
      sub_1001BEBDC(v44, v45, (uint64_t *)&v145);
      sub_100222690();
      swift_bridgeObjectRelease();
      sub_100005A40(v143, v32);
      sub_100005A40(v143, v32);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "vouchWithRecoveryKey signingPubKey: %{public}s", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100005A40(v41, v32);
      sub_100005A40(v41, v32);
    }

    sub_1000059E8(v35, v37);
    sub_1000059E8(v35, v37);
    id v46 = sub_100222070();
    os_log_type_t v47 = sub_1002224E0();
    unint64_t v138 = v32;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = v35;
      id v49 = (uint8_t *)swift_slowAlloc();
      id v145 = (id)swift_slowAlloc();
      *(_DWORD *)id v49 = 136446210;
      uint64_t v50 = sub_100221BE0(0);
      sub_1001BEBDC(v50, v51, (uint64_t *)&v145);
      sub_100222690();
      swift_bridgeObjectRelease();
      sub_100005A40(v48, v37);
      sub_100005A40(v48, v37);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "vouchWithRecoveryKey encryptionPubKey: %{public}s", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v35 = v48;
      swift_slowDealloc();
    }
    else
    {
      sub_100005A40(v35, v37);
      sub_100005A40(v35, v37);
    }

    uint64_t v52 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    id v53 = *(void **)(a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
    id v145 = 0;
    unsigned int v54 = [v53 isRecoveryKeyEnrolledWithError:&v145];
    id v55 = v145;
    if (v145)
    {
      uint64_t v136 = v35;
      id v56 = v145;

      swift_willThrow();
      uint64_t v57 = v56;
      os_log_type_t v58 = sub_100222070();
      os_log_type_t v59 = sub_100222500();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 138543362;
        os_log_type_t v62 = v57;
        uint64_t v63 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v145 = v63;
        sub_100222690();
        void *v61 = v63;

        unint64_t v42 = v32;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Error determining whether Recovery Key is enrolled: %{public}@", v60, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        os_log_type_t v58 = v57;
      }

      os_log_type_t v83 = v57;
      a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v55);

      sub_100005A40(v143, v42);
      sub_100005A40(v136, v141);

      return;
    }
    if (v54)
    {
      uint64_t v64 = *(void **)(a9 + v52);
      id v65 = objc_allocWithZone((Class)TPRecoveryKeyPair);
      uint64_t v66 = v143;
      sub_1000059E8(v143, v32);
      sub_1000059E8(v35, v141);
      id v67 = v64;
      Class isa = sub_100221BD0().super.isa;
      Class v69 = sub_100221BD0().super.isa;
      id v70 = [v65 initWithSigningKeyData:isa encryptionKeyData:v69];
      uint64_t v137 = v35;
      sub_100005A40(v35, v141);
      sub_100005A40(v143, v42);

      id v145 = 0;
      id v71 = [v67 peerIDThatTrustsRecoveryKeys:v70 canIntroducePeer:a10 stableInfo:a11 error:&v145];

      id v72 = v145;
      if (v145)
      {
        id v73 = v145;

        swift_willThrow();
        uint64_t v74 = v73;
        uint64_t v75 = sub_100222070();
        os_log_type_t v76 = sub_100222500();
        os_log_type_t v77 = a3;
        if (os_log_type_enabled(v75, v76))
        {
          os_log_type_t v78 = (uint8_t *)swift_slowAlloc();
          uint64_t v79 = (void *)swift_slowAlloc();
          *(_DWORD *)os_log_type_t v78 = 138543362;
          uint64_t v80 = v74;
          uint64_t v81 = (void *)_swift_stdlib_bridgeErrorToNSError();
          id v145 = v81;
          sub_100222690();
          *uint64_t v79 = v81;
          unint64_t v82 = v138;

          os_log_type_t v77 = a3;
          _os_log_impl((void *)&_mh_execute_header, v75, v76, "Failed to get peer that trusts RK: %{public}@", v78, 0xCu);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v75 = v74;
          unint64_t v82 = v138;
        }

        uint64_t v107 = v74;
        v77(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v72);

        sub_100005A40(v143, v82);
        sub_100005A40(v137, v141);

        return;
      }
      if (v71)
      {
        uint64_t v91 = sub_100222270();
        uint64_t v93 = v92;
        unint64_t v94 = *(void **)(a9 + v52);
        id v95 = *(id *)&v135[v134];
        id v96 = v94;
        uint64_t v133 = sub_100117348(a12, v95, v91, v93, (uint64_t)v96);
        uint64_t v132 = v97;

        swift_bridgeObjectRelease();
        unint64_t v98 = *(void **)&v135[v134];
        id v99 = *(id *)(a9 + v52);
        uint64_t v100 = v98;

        id v101 = *(id *)&v100[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey];
        id v145 = 0;
        id v102 = [v99 createVoucherForCandidate:a10 stableInfo:a11 withSponsorID:v71 reason:5 signingKeyPair:v101 error:&v145];

        id v103 = v145;
        if (v102)
        {
          id v104 = v139;
          id v105 = v103;
          uint64_t v106 = (uint64_t)[a10 epoch];
          if (v106 < 0) {
            __break(1u);
          }
          uint64_t v121 = sub_1001165B4(v133, (uint64_t)v104, (uint64_t)v104, v106);
          swift_bridgeObjectRelease();

          id v122 = [v102 data];
          uint64_t v123 = sub_100221BF0();
          unint64_t v125 = v124;

          id v126 = [v102 sig];
          id v140 = v102;
          uint64_t v127 = sub_100221BF0();
          unint64_t v129 = v128;

          uint64_t v130 = v104;
          id v131 = v132;
          a3(v123, v125, v127, v129, v121, v132, 0);

          sub_100005A40(v143, v138);
          sub_100005A40(v137, v141);
          swift_bridgeObjectRelease();

          sub_100005A40(v127, v129);
          sub_100005A40(v123, v125);
        }
        else
        {
          id v113 = v145;
          swift_bridgeObjectRelease();
          uint64_t v114 = sub_100221B40();

          swift_willThrow();
          unint64_t v115 = v138;
          swift_errorRetain();
          swift_errorRetain();
          Swift::String v116 = sub_100222070();
          os_log_type_t v117 = sub_100222500();
          if (os_log_type_enabled(v116, v117))
          {
            uint64_t v118 = (uint8_t *)swift_slowAlloc();
            id v145 = (id)swift_slowAlloc();
            *(_DWORD *)uint64_t v118 = 136446210;
            swift_errorRetain();
            sub_1000046DC(&qword_100299D70);
            uint64_t v119 = sub_1002222C0();
            sub_1001BEBDC(v119, v120, (uint64_t *)&v145);
            unint64_t v115 = v138;
            sub_100222690();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v116, v117, "Error creating voucher using recovery key set: %{public}s", v118, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
          }

          swift_errorRetain();
          a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, (id)v114);

          sub_100005A40(v143, v115);
          sub_100005A40(v137, v141);

          swift_errorRelease();
          swift_errorRelease();
        }
        return;
      }

      uint64_t v108 = sub_100222070();
      os_log_type_t v109 = sub_1002224E0();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v110 = 0;
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "Untrusted recovery key set", v110, 2u);
        uint64_t v66 = v143;
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v111 = swift_allocError();
      *(_OWORD *)uint64_t v112 = xmmword_100229930;
      *(unsigned char *)(v112 + 16) = 13;
      a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, (id)v111);

      sub_100005A40(v66, v138);
      uint64_t v90 = v137;
    }
    else
    {

      uint64_t v84 = sub_100222070();
      os_log_type_t v85 = sub_1002224E0();
      uint64_t v86 = v143;
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v87 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v87 = 0;
        _os_log_impl((void *)&_mh_execute_header, v84, v85, "Recovery Key is not enrolled", v87, 2u);
        uint64_t v86 = v143;
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v88 = swift_allocError();
      *(_OWORD *)uint64_t v89 = xmmword_100229920;
      *(unsigned char *)(v89 + 16) = 13;
      a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, (id)v88);

      sub_100005A40(v86, v32);
      uint64_t v90 = v35;
    }
    sub_100005A40(v90, v141);

    swift_errorRelease();
    return;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100222090();
  sub_100003CC8(v19, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v20 = sub_100222070();
  os_log_type_t v21 = sub_100222500();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    id v145 = (id)swift_slowAlloc();
    *(_DWORD *)id v22 = 136446210;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v23 = sub_1002222C0();
    sub_1001BEBDC(v23, v24, (uint64_t *)&v145);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Don't have my own peer keys; can't vouch with recovery key: %{public}s",
      v22,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, a2);
}

uint64_t sub_100145D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void), uint64_t a6)
{
  return sub_1001855E8(a1, a2, a3, a4, a5, a6, "recoverTLKSharesForInheritor complete: %{public}s", 0xD000000000000032, 0x8000000100244770);
}

uint64_t sub_100145D70(char *a1, void (*a2)(void, void, uint64_t), uint64_t a3, void *a4, uint64_t a5)
{
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100222090();
  sub_100003CC8(v10, (uint64_t)qword_10029E7D0);
  unsigned int v11 = sub_100222070();
  os_log_type_t v12 = sub_1002224E0();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "beginning a recoverTLKSharesForInheritor", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v15 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v15)
  {
    id v43 = sub_100222070();
    os_log_type_t v44 = sub_1002224E0();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v45 = 0;
      id v46 = "As a nonmember, can't vouch for someone else";
LABEL_16:
      _os_log_impl((void *)&_mh_execute_header, v43, v44, v46, v45, 2u);
      swift_slowDealloc();
    }
LABEL_17:

    sub_100042D4C();
    uint64_t v47 = swift_allocError();
    *(_OWORD *)uint64_t v48 = xmmword_1002311E0;
    *(unsigned char *)(v48 + 16) = 13;
    a2(0, 0, v47);
    return swift_errorRelease();
  }
  os_log_type_t v16 = v15;
  uint64_t v17 = sub_100222270();
  uint64_t v19 = v18;

  id v20 = [*(id *)&a1[v14] egoPeerPermanentInfo];
  if (!v20)
  {
    swift_bridgeObjectRelease();
    id v43 = sub_100222070();
    os_log_type_t v44 = sub_1002224E0();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v45 = 0;
      id v46 = "permanentInfo does not exist";
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  os_log_type_t v21 = v20;
  uint64_t v68 = a5;
  Class v69 = a2;
  uint64_t v22 = v17;
  id v67 = a4;
  uint64_t v23 = sub_100221BF0();
  unint64_t v25 = v24;

  id v26 = [*(id *)&a1[v14] egoPeerPermanentInfoSig];
  if (v26)
  {
    id v27 = v26;
    uint64_t v66 = a3;
    uint64_t v28 = sub_100221BF0();
    id v29 = v19;
    unint64_t v30 = v25;
    unint64_t v32 = v31;

    id v33 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
    swift_bridgeObjectRetain();
    sub_1000059E8(v23, v30);
    sub_1000059E8(v28, v32);
    uint64_t v62 = v22;
    NSString v34 = sub_100222260();
    uint64_t v64 = v29;
    swift_bridgeObjectRelease();
    Class isa = sub_100221BD0().super.isa;
    Class v36 = sub_100221BD0().super.isa;
    uint64_t v63 = v33;
    id v37 = [self permanentInfoWithPeerID:v34 data:isa sig:v36 keyFactory:v33];
    unint64_t v65 = v32;
    sub_100005A40(v28, v32);
    sub_100005A40(v23, v30);

    if (v37)
    {
      uint64_t v38 = (void *)swift_allocObject();
      void v38[2] = v69;
      v38[3] = v66;
      v38[4] = v67;
      v38[5] = a1;
      v38[6] = v37;
      v38[7] = v68;
      strcpy((char *)v70, "signing-key ");
      BYTE5(v70[1]) = 0;
      HIWORD(v70[1]) = -5120;
      v72._countAndFlagsBits = v62;
      v72._object = v64;
      sub_100222310(v72);
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      id v39 = v67;
      os_log_type_t v40 = a1;
      id v41 = v37;
      swift_bridgeObjectRetain();
      sub_10019ED6C(v70[0], v70[1], (void (*)(char *, uint64_t))sub_1001B3148, (uint64_t)v38, v62, v64);

      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_100005A40(v28, v32);
      sub_100005A40(v23, v30);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v57 = sub_100222070();
    uint64_t v58 = sub_1002224E0();
    if (os_log_type_enabled(v57, (os_log_type_t)v58))
    {
      os_log_type_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v58, "Invalid permenent info or signature; can't vouch for them",
        v59,
        2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v60 = swift_allocError();
    *(_OWORD *)uint64_t v61 = xmmword_1002297C0;
    *(unsigned char *)(v61 + 16) = 13;
    v69(0, 0, v60);
    swift_errorRelease();

    sub_100005A40(v28, v65);
    uint64_t v55 = v23;
    unint64_t v56 = v30;
  }
  else
  {
    unint64_t v49 = v25;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_100222070();
    os_log_type_t v51 = sub_1002224E0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "permanentInfoSig does not exist", v52, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v53 = swift_allocError();
    *(_OWORD *)uint64_t v54 = xmmword_1002311E0;
    *(unsigned char *)(v54 + 16) = 13;
    v69(0, 0, v53);
    swift_errorRelease();
    uint64_t v55 = v23;
    unint64_t v56 = v49;
  }

  return sub_100005A40(v55, v56);
}

void sub_10014646C(void *a1, uint64_t a2, void (*a3)(void, void, id), uint64_t a4, void *a5, uint64_t a6, void *a7, NSObject *a8)
{
  uint64_t v176 = a8;
  uint64_t v15 = sub_1000046DC(&qword_100299818);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v167 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100221D00();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v167 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v177 = v23;
    uint64_t v179 = a3;
    id v178 = a1;
    id v24 = [a5 uuid];
    sub_100222270();
    uint64_t v180 = v20;

    sub_100221CC0();
    uint64_t v25 = v180;
    swift_bridgeObjectRelease();
    int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v19);
    uint64_t v181 = a4;
    if (v26 == 1)
    {
      sub_10004015C((uint64_t)v18, &qword_100299818);
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_100222090();
      sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
      id v28 = a5;
      id v29 = sub_100222070();
      os_log_type_t v30 = sub_1002224E0();
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        id v183 = (id)swift_slowAlloc();
        *(_DWORD *)unint64_t v31 = 136446210;
        id v32 = [v28 uuid];
        uint64_t v33 = sub_100222270();
        unint64_t v35 = v34;

        uint64_t v182 = sub_1001BEBDC(v33, v35, (uint64_t *)&v183);
        sub_100222690();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to parse uuid: %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_100042D4C();
      uint64_t v62 = swift_allocError();
      *(_OWORD *)uint64_t v63 = xmmword_100229920;
      *(unsigned char *)(v63 + 16) = 13;
      v179(0, 0, (id)v62);
      swift_errorRelease();

      return;
    }
    uint64_t v43 = v19;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v177, v18, v19);
    uint64_t v44 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    id v45 = *(id *)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
    Class isa = sub_100221CE0().super.isa;
    uint64_t v47 = [v45 findCustodianRecoveryKeyWithUUID:isa];

    if (v47)
    {
      uint64_t v48 = *(void **)(a6 + v44);
      id v183 = 0;
      unsigned int v49 = [v48 isCustodianRecoveryKeyTrusted:v47 error:&v183];
      id v50 = v183;
      if (v183)
      {
        id v51 = v183;
        swift_willThrow();
        uint64_t v52 = v179;
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_100222090();
        sub_100003CC8(v53, (uint64_t)qword_10029E7D0);
        uint64_t v54 = v51;
        uint64_t v55 = sub_100222070();
        os_log_type_t v56 = sub_1002224E0();
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = (uint8_t *)swift_slowAlloc();
          unint64_t v174 = swift_slowAlloc();
          *(_DWORD *)uint64_t v57 = 138543362;
          uint64_t v58 = v54;
          uint64_t v176 = v47;
          os_log_type_t v59 = v58;
          uint64_t v60 = v43;
          uint64_t v61 = (void *)_swift_stdlib_bridgeErrorToNSError();
          id v183 = v61;
          sub_100222690();
          v174->Class isa = (Class)v61;
          uint64_t v43 = v60;

          uint64_t v47 = v176;
          _os_log_impl((void *)&_mh_execute_header, v55, v56, "error determining whether Custodian Recovery Key is trusted: %{public}@", v57, 0xCu);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          uint64_t v52 = v179;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v55 = v54;
        }
        uint64_t v85 = v180;

        uint64_t v86 = v54;
        v52(0, 0, v50);

        (*(void (**)(char *, uint64_t))(v85 + 8))(v177, v43);
        return;
      }
      id v73 = (void (*)(void, void, uint64_t))v179;
      if (v49)
      {
        id v74 = [a5 recoveryString];
        if (v74)
        {
          uint64_t v75 = v74;
          uint64_t v76 = sub_100222270();
          unint64_t v78 = v77;

          id v79 = [a5 salt];
          if (v79)
          {
            uint64_t v80 = v79;
            uint64_t v81 = sub_100222270();
            unint64_t v83 = v82;

            type metadata accessor for CustodianRecoveryKey();
            swift_allocObject();
            unint64_t v174 = v47;
            uint64_t v84 = sub_10000603C(v174, v76, v78, v81, v83);
            uint64_t v175 = v43;
            uint64_t v100 = v84;
            uint64_t v101 = qword_100298EB8;
            swift_retain();
            if (v101 != -1) {
              swift_once();
            }
            uint64_t v102 = sub_100222090();
            uint64_t v103 = sub_100003CC8(v102, (uint64_t)qword_10029E7D0);
            swift_retain_n();
            uint64_t v172 = v103;
            id v104 = sub_100222070();
            os_log_type_t v105 = sub_1002224E0();
            BOOL v106 = os_log_type_enabled(v104, v105);
            uint64_t v173 = v100;
            if (v106)
            {
              os_log_t v171 = v104;
              uint64_t v107 = (uint8_t *)swift_slowAlloc();
              uint64_t v170 = (void *)swift_slowAlloc();
              id v183 = v170;
              *(_DWORD *)uint64_t v107 = 136446210;
              uint64_t v169 = v107 + 12;
              uint64_t v168 = v107 + 4;
              id v108 = [*(id *)(*(void *)(v100 + 16)+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey) publicKey];
              id v109 = [v108 keyData];

              uint64_t v110 = sub_100221BF0();
              unint64_t v112 = v111;

              uint64_t v113 = sub_100221BE0(0);
              unint64_t v115 = v114;
              uint64_t v116 = v110;
              uint64_t v100 = v173;
              sub_100005A40(v116, v112);
              uint64_t v182 = sub_1001BEBDC(v113, v115, (uint64_t *)&v183);
              sub_100222690();
              swift_release_n();
              swift_bridgeObjectRelease();
              os_log_t v117 = v171;
              _os_log_impl((void *)&_mh_execute_header, v171, v105, "recoverTLKSharesForInheritor signingPubKey: %{public}s", v107, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            swift_retain_n();
            uint64_t v118 = sub_100222070();
            os_log_type_t v119 = sub_1002224E0();
            int v120 = v119;
            if (os_log_type_enabled(v118, v119))
            {
              os_log_t v171 = v118;
              uint64_t v121 = swift_slowAlloc();
              LODWORD(v169) = v120;
              id v122 = (uint8_t *)v121;
              uint64_t v170 = (void *)swift_slowAlloc();
              id v183 = v170;
              *(_DWORD *)id v122 = 136446210;
              uint64_t v168 = v122 + 12;
              id v167 = v122 + 4;
              id v123 = objc_msgSend(*(id *)(*(void *)(v100 + 16)+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey), "publicKey", v122 + 4, v122 + 12);
              id v124 = [v123 keyData];

              uint64_t v125 = sub_100221BF0();
              unint64_t v127 = v126;

              uint64_t v128 = sub_100221BE0(0);
              unint64_t v130 = v129;
              sub_100005A40(v125, v127);
              uint64_t v182 = sub_1001BEBDC(v128, v130, (uint64_t *)&v183);
              sub_100222690();
              swift_release_n();
              swift_bridgeObjectRelease();
              os_log_t v131 = v171;
              _os_log_impl((void *)&_mh_execute_header, v171, (os_log_type_t)v169, "recoverTLKSharesForInheritor encryptionPubKey: %{public}s", v122, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            uint64_t v132 = (void (*)(void *, NSObject *, id))v179;
            uint64_t v25 = v180;
            uint64_t v133 = *(void **)(a6 + v44);
            id v183 = 0;
            id v134 = [v133 peerIDThatTrustsCustodianRecoveryKeys:v174 canIntroducePeer:a7 stableInfo:0 error:&v183];
            uint64_t v135 = v134;
            id v136 = v183;
            if (v183)
            {
              id v137 = v183;
              swift_release();

              swift_willThrow();
              unint64_t v138 = v137;
              id v139 = sub_100222070();
              os_log_type_t v140 = sub_100222500();
              if (os_log_type_enabled(v139, v140))
              {
                uint64_t v141 = swift_slowAlloc();
                uint64_t v176 = v138;
                uint64_t v142 = (uint8_t *)v141;
                uint64_t v143 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v142 = 138543362;
                uint64_t v144 = v176;
                id v145 = (void *)_swift_stdlib_bridgeErrorToNSError();
                id v183 = v145;
                sub_100222690();
                *uint64_t v143 = v145;
                uint64_t v132 = (void (*)(void *, NSObject *, id))v179;

                _os_log_impl((void *)&_mh_execute_header, v139, v140, "Error getting peer that trusts CRK: %{public}@", v142, 0xCu);
                sub_1000046DC(&qword_100298F90);
                swift_arrayDestroy();
                swift_slowDealloc();
                unint64_t v138 = v176;
                swift_slowDealloc();
              }
              else
              {

                id v139 = v138;
              }
              uint64_t v156 = v180;
              uint64_t v157 = v175;

              os_log_type_t v158 = v138;
              v132(0, 0, v136);
              swift_release();

              (*(void (**)(char *, uint64_t))(v156 + 8))(v177, v157);
              return;
            }
            if (v134)
            {
              uint64_t v146 = sub_100222270();
              uint64_t v148 = v147;

              id v149 = *(id *)(v173 + 16);
              swift_release();
              id v150 = *(id *)(a6 + v44);
              uint64_t v151 = sub_100117348((unint64_t)v176, v149, v146, v148, (uint64_t)v150);
              uint64_t v176 = v152;

              swift_bridgeObjectRelease();
              id v153 = v178;
              uint64_t v154 = (uint64_t)[a7 epoch];
              if (v154 < 0)
              {
                __break(1u);
                return;
              }
              uint64_t v155 = sub_1001165B4(v151, (uint64_t)v153, (uint64_t)v153, v154);
              uint64_t v25 = v180;
              char v164 = v155;
              swift_bridgeObjectRelease();

              os_log_type_t v165 = v176;
              os_log_type_t v166 = v176;
              v132(v164, v165, 0);
              swift_release();

              swift_bridgeObjectRelease();
LABEL_34:
              (*(void (**)(char *, uint64_t))(v25 + 8))(v177, v175);
              return;
            }
            swift_release();
            BOOL v159 = sub_100222070();
            uint64_t v160 = sub_1002224E0();
            if (os_log_type_enabled(v159, (os_log_type_t)v160))
            {
              os_log_type_t v161 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)os_log_type_t v161 = 0;
              _os_log_impl((void *)&_mh_execute_header, v159, (os_log_type_t)v160, "Untrusted custodian recovery key set", v161, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v162 = swift_allocError();
            *(_OWORD *)uint64_t v163 = xmmword_100229930;
            *(unsigned char *)(v163 + 16) = 13;
            v132(0, 0, (id)v162);
            swift_errorRelease();
            swift_release();

LABEL_33:
            goto LABEL_34;
          }
          swift_bridgeObjectRelease();
        }
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v96 = sub_100222090();
        sub_100003CC8(v96, (uint64_t)qword_10029E7D0);
        uint64_t v97 = sub_100222070();
        os_log_type_t v98 = sub_1002224E0();
        if (os_log_type_enabled(v97, v98))
        {
          id v99 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v99 = 0;
          _os_log_impl((void *)&_mh_execute_header, v97, v98, "Bad format CRK: recovery string or salt not set", v99, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v94 = swift_allocError();
        long long v95 = xmmword_100229950;
      }
      else
      {
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v89 = sub_100222090();
        sub_100003CC8(v89, (uint64_t)qword_10029E7D0);
        uint64_t v90 = sub_100222070();
        os_log_type_t v91 = sub_1002224E0();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v92 = 0;
          _os_log_impl((void *)&_mh_execute_header, v90, v91, "Custodian Recovery Key is not trusted", v92, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v94 = swift_allocError();
        long long v95 = xmmword_100229930;
      }
      *(_OWORD *)uint64_t v93 = v95;
      *(unsigned char *)(v93 + 16) = 13;
      v73(0, 0, v94);
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v180 + 8))(v177, v43);
      return;
    }
    uint64_t v175 = v43;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_100222090();
    sub_100003CC8(v64, (uint64_t)qword_10029E7D0);
    id v65 = a5;
    uint64_t v66 = sub_100222070();
    os_log_type_t v67 = sub_1002224E0();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      id v183 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v68 = 136446210;
      id v69 = [v65 uuid];
      uint64_t v70 = sub_100222270();
      unint64_t v72 = v71;

      uint64_t v182 = sub_1001BEBDC(v70, v72, (uint64_t *)&v183);
      uint64_t v25 = v180;
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Unable to find custodian recovery key %{public}s on model", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100042D4C();
    uint64_t v87 = swift_allocError();
    *(_OWORD *)uint64_t v88 = xmmword_100229920;
    *(unsigned char *)(v88 + 16) = 13;
    v179(0, 0, (id)v87);
    swift_errorRelease();
    goto LABEL_33;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_100222090();
  sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v37 = sub_100222070();
  os_log_type_t v38 = sub_100222500();
  if (os_log_type_enabled(v37, v38))
  {
    id v39 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v40 = (void *)swift_slowAlloc();
    uint64_t v181 = a4;
    uint64_t v182 = a2;
    id v183 = v40;
    *(_DWORD *)id v39 = 136446210;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v41 = sub_1002222C0();
    uint64_t v182 = sub_1001BEBDC(v41, v42, (uint64_t *)&v183);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Don't have my own peer keys; can't establish: %{public}s",
      v39,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  a3(0, 0, (id)a2);
}

uint64_t sub_100147C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  return sub_100151044(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, "vouchWithCustodianRecoveryKey complete: %{public}s", 0xD000000000000033, 0x8000000100244730);
}

uint64_t sub_100147CA8(char *a1, void (*a2)(void, unint64_t, void, unint64_t, void, void, uint64_t), uint64_t a3, void *a4, uint64_t a5)
{
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100222090();
  sub_100003CC8(v10, (uint64_t)qword_10029E7D0);
  unsigned int v11 = sub_100222070();
  os_log_type_t v12 = sub_1002224E0();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "beginning a vouchWithCustodianRecoveryKey", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v15 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v100 = a3;
    uint64_t v17 = sub_100222270();
    uint64_t v19 = v18;

    id v20 = [*(id *)&a1[v14] egoPeerPermanentInfo];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v99 = sub_100221BF0();
      unint64_t v23 = v22;

      id v24 = [*(id *)&a1[v14] egoPeerPermanentInfoSig];
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v98 = v17;
        long long v95 = a4;
        uint64_t v26 = sub_100221BF0();
        unint64_t v28 = v27;

        id v29 = [*(id *)&a1[v14] egoPeerStableInfo];
        if (v29)
        {
          os_log_type_t v30 = v29;
          uint64_t v89 = a5;
          uint64_t v97 = sub_100221BF0();
          unint64_t v32 = v31;

          id v33 = [*(id *)&a1[v14] egoPeerStableInfoSig];
          if (v33)
          {
            unint64_t v34 = v33;
            uint64_t v92 = a2;
            uint64_t v35 = sub_100221BF0();
            unint64_t v93 = v36;
            uint64_t v94 = v35;

            id v96 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
            swift_bridgeObjectRetain();
            sub_1000059E8(v99, v23);
            sub_1000059E8(v26, v28);
            NSString v37 = sub_100222260();
            swift_bridgeObjectRelease();
            Class isa = sub_100221BD0().super.isa;
            Class v39 = sub_100221BD0().super.isa;
            os_log_type_t v91 = v19;
            os_log_type_t v40 = v37;
            id v41 = [self permanentInfoWithPeerID:v37 data:isa sig:v39 keyFactory:v96];
            sub_100005A40(v26, v28);
            unint64_t v90 = v23;
            sub_100005A40(v99, v23);

            if (v41)
            {
              uint64_t v88 = v41;
              id v42 = objc_allocWithZone((Class)TPPeerStableInfo);
              sub_1000059E8(v97, v32);
              sub_1000059E8(v94, v93);
              Class v43 = sub_100221BD0().super.isa;
              Class v44 = sub_100221BD0().super.isa;
              id v45 = [v42 initWithData:v43 sig:v44];
              sub_100005A40(v94, v93);
              sub_100005A40(v97, v32);

              if (v45)
              {
                id v46 = (void *)swift_allocObject();
                v46[2] = v92;
                v46[3] = v100;
                v46[4] = v95;
                v46[5] = a1;
                v46[6] = v88;
                v46[7] = v45;
                v46[8] = v89;
                strcpy((char *)v101, "signing-key ");
                BYTE5(v101[1]) = 0;
                HIWORD(v101[1]) = -5120;
                v103._countAndFlagsBits = v98;
                v103._object = v91;
                sub_100222310(v103);
                swift_bridgeObjectRetain_n();
                swift_retain();
                swift_retain();
                id v47 = v95;
                uint64_t v48 = a1;
                id v49 = v88;
                id v50 = v45;
                swift_bridgeObjectRetain();
                sub_10019ED6C(v101[0], v101[1], (void (*)(char *, uint64_t))sub_1001B3118, (uint64_t)v46, v98, v91);

                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                sub_100005A40(v94, v93);
                sub_100005A40(v97, v32);
                sub_100005A40(v26, v28);
                sub_100005A40(v99, v90);
                return swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              unint64_t v83 = sub_100222070();
              os_log_type_t v84 = sub_1002224E0();
              if (os_log_type_enabled(v83, v84))
              {
                uint64_t v85 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v85 = 0;
                _os_log_impl((void *)&_mh_execute_header, v83, v84, "Invalid stableinfo or signature; van't vouch for them",
                  v85,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v86 = swift_allocError();
              *(_OWORD *)uint64_t v87 = xmmword_100229940;
              *(unsigned char *)(v87 + 16) = 13;
              v92(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v86);
              swift_errorRelease();

              sub_100005A40(v94, v93);
              sub_100005A40(v97, v32);
              uint64_t v81 = v26;
              unint64_t v82 = v28;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v76 = sub_100222070();
              uint64_t v77 = sub_1002224E0();
              if (os_log_type_enabled(v76, (os_log_type_t)v77))
              {
                unint64_t v78 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)unint64_t v78 = 0;
                _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v77, "Invalid permenent info or signature; can't vouch for them",
                  v78,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v79 = swift_allocError();
              *(_OWORD *)uint64_t v80 = xmmword_1002297C0;
              *(unsigned char *)(v80 + 16) = 13;
              v92(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v79);
              swift_errorRelease();

              sub_100005A40(v94, v93);
              sub_100005A40(v97, v32);
              uint64_t v81 = v26;
              unint64_t v82 = v28;
            }
            sub_100005A40(v81, v82);
            uint64_t v74 = v99;
            unint64_t v75 = v90;
            goto LABEL_34;
          }
          swift_bridgeObjectRelease();
          id v69 = sub_100222070();
          os_log_type_t v70 = sub_1002224E0();
          if (os_log_type_enabled(v69, v70))
          {
            unint64_t v71 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v71 = 0;
            _os_log_impl((void *)&_mh_execute_header, v69, v70, "stableInfoSig does not exist", v71, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v72 = swift_allocError();
          *(_OWORD *)uint64_t v73 = xmmword_1002311E0;
          *(unsigned char *)(v73 + 16) = 13;
          a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v72);
          swift_errorRelease();
          sub_100005A40(v97, v32);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v64 = sub_100222070();
          os_log_type_t v65 = sub_1002224E0();
          if (os_log_type_enabled(v64, v65))
          {
            uint64_t v66 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v66 = 0;
            _os_log_impl((void *)&_mh_execute_header, v64, v65, "stableInfo does not exist", v66, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v67 = swift_allocError();
          *(_OWORD *)uint64_t v68 = xmmword_1002311E0;
          *(unsigned char *)(v68 + 16) = 13;
          a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v67);
          swift_errorRelease();
        }
        sub_100005A40(v26, v28);
      }
      else
      {
        swift_bridgeObjectRelease();
        os_log_type_t v59 = sub_100222070();
        os_log_type_t v60 = sub_1002224E0();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v61 = 0;
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "permanentInfoSig does not exist", v61, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v62 = swift_allocError();
        *(_OWORD *)uint64_t v63 = xmmword_1002311E0;
        *(unsigned char *)(v63 + 16) = 13;
        a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v62);
        swift_errorRelease();
      }
      uint64_t v74 = v99;
      unint64_t v75 = v23;
LABEL_34:
      return sub_100005A40(v74, v75);
    }
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_100222070();
    os_log_type_t v55 = sub_1002224E0();
    if (os_log_type_enabled(v52, v55))
    {
      os_log_type_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v55, "permanentInfo does not exist", v56, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v52 = sub_100222070();
    os_log_type_t v53 = sub_1002224E0();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "As a nonmember, can't vouch for someone else", v54, 2u);
      swift_slowDealloc();
    }
  }

  sub_100042D4C();
  uint64_t v57 = swift_allocError();
  *(_OWORD *)uint64_t v58 = xmmword_1002311E0;
  *(unsigned char *)(v58 + 16) = 13;
  a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v57);

  return swift_errorRelease();
}

void sub_100148858(void *a1, uint64_t a2, void (*a3)(void, void, void, void, void, void, void), uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, unint64_t a9)
{
  uint64_t v207 = a6;
  uint64_t v16 = sub_1000046DC(&qword_100299818);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v193 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100221D00();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  id v24 = (char *)&v193 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v202 = a7;
    uint64_t v203 = v24;
    uint64_t v205 = a4;
    id v204 = a1;
    id v25 = [a5 uuid];
    sub_100222270();

    sub_100221CC0();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_10004015C((uint64_t)v19, &qword_100299818);
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_100222090();
      sub_100003CC8(v26, (uint64_t)qword_10029E7D0);
      id v27 = a5;
      unint64_t v28 = sub_100222070();
      os_log_type_t v29 = sub_1002224E0();
      if (os_log_type_enabled(v28, v29))
      {
        os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
        unint64_t v31 = (void *)swift_slowAlloc();
        unint64_t v206 = a3;
        id v209 = v31;
        *(_DWORD *)os_log_type_t v30 = 136446210;
        id v32 = [v27 uuid];
        uint64_t v33 = sub_100222270();
        unint64_t v35 = v34;

        uint64_t v208 = sub_1001BEBDC(v33, v35, (uint64_t *)&v209);
        sub_100222690();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to parse uuid %{public}s", v30, 0xCu);
        swift_arrayDestroy();
        a3 = v206;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_100042D4C();
      uint64_t v63 = swift_allocError();
      *(_OWORD *)uint64_t v64 = xmmword_100229920;
      *(unsigned char *)(v64 + 16) = 13;
      a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v63);
      swift_errorRelease();

      return;
    }
    uint64_t v43 = v21;
    uint64_t v44 = v20;
    unint64_t v206 = a3;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v203, v19, v20);
    uint64_t v45 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    id v46 = v207;
    id v47 = *(id *)((char *)v207 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
    Class isa = sub_100221CE0().super.isa;
    id v49 = [v47 findCustodianRecoveryKeyWithUUID:isa];

    if (v49)
    {
      id v50 = *(void **)((char *)v46 + v45);
      id v209 = 0;
      unsigned int v51 = [v50 isCustodianRecoveryKeyTrusted:v49 error:&v209];
      id v52 = v209;
      if (v209)
      {
        uint64_t v201 = v44;
        id v53 = v209;
        swift_willThrow();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v54 = sub_100222090();
        sub_100003CC8(v54, (uint64_t)qword_10029E7D0);
        os_log_type_t v55 = v53;
        os_log_type_t v56 = sub_100222070();
        os_log_type_t v57 = sub_1002224E0();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v200 = v43;
          uint64_t v58 = swift_slowAlloc();
          uint64_t v207 = v49;
          os_log_type_t v59 = (uint8_t *)v58;
          os_log_type_t v60 = (void *)swift_slowAlloc();
          *(_DWORD *)os_log_type_t v59 = 138543362;
          uint64_t v61 = v55;
          uint64_t v62 = (void *)_swift_stdlib_bridgeErrorToNSError();
          id v209 = v62;
          sub_100222690();
          *os_log_type_t v60 = v62;
          uint64_t v43 = v200;

          _os_log_impl((void *)&_mh_execute_header, v56, v57, "Error determining whether Custodian Recovery Key is trusted: %{public}@", v59, 0xCu);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          swift_slowDealloc();
          id v49 = v207;
          swift_slowDealloc();
        }
        else
        {

          os_log_type_t v56 = v55;
        }
        uint64_t v85 = (void (*)(void, unint64_t, void, unint64_t, void, void, id))v206;

        uint64_t v86 = v55;
        v85(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v52);

        goto LABEL_31;
      }
      if (v51)
      {
        id v74 = [a5 recoveryString];
        if (v74)
        {
          unint64_t v75 = v74;
          uint64_t v76 = sub_100222270();
          unint64_t v78 = v77;

          id v79 = [a5 salt];
          if (v79)
          {
            uint64_t v80 = v79;
            uint64_t v201 = v44;
            uint64_t v81 = sub_100222270();
            unint64_t v83 = v82;

            type metadata accessor for CustodianRecoveryKey();
            swift_allocObject();
            uint64_t v199 = v49;
            uint64_t v84 = sub_10000603C(v199, v76, v78, v81, v83);
            uint64_t v200 = v43;
            uint64_t v105 = v84;
            uint64_t v106 = qword_100298EB8;
            swift_retain();
            if (v106 != -1) {
              swift_once();
            }
            uint64_t v107 = sub_100222090();
            uint64_t v108 = sub_100003CC8(v107, (uint64_t)qword_10029E7D0);
            swift_retain_n();
            uint64_t v197 = v108;
            id v109 = sub_100222070();
            os_log_type_t v110 = sub_1002224E0();
            BOOL v111 = os_log_type_enabled(v109, v110);
            uint64_t v198 = a8;
            if (v111)
            {
              uint64_t v112 = swift_slowAlloc();
              id v196 = (id)swift_slowAlloc();
              id v209 = v196;
              *(_DWORD *)uint64_t v112 = 136446210;
              os_log_t v195 = (os_log_t)(v112 + 12);
              uint64_t v194 = (uint8_t *)(v112 + 4);
              id v113 = [*(id *)(*(void *)(v105 + 16)+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey) publicKey];
              id v114 = [v113 keyData];

              uint64_t v115 = sub_100221BF0();
              unint64_t v117 = v116;

              uint64_t v118 = sub_100221BE0(0);
              unint64_t v120 = v119;
              sub_100005A40(v115, v117);
              uint64_t v208 = sub_1001BEBDC(v118, v120, (uint64_t *)&v209);
              sub_100222690();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v109, v110, "vouchWithCustodianRecoveryKey signingPubKey: %{public}s", (uint8_t *)v112, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            swift_retain_n();
            uint64_t v121 = sub_100222070();
            os_log_type_t v122 = sub_1002224E0();
            int v123 = v122;
            if (os_log_type_enabled(v121, v122))
            {
              os_log_t v195 = v121;
              LODWORD(v196) = v123;
              id v124 = (uint8_t *)swift_slowAlloc();
              id v209 = (id)swift_slowAlloc();
              *(_DWORD *)id v124 = 136446210;
              uint64_t v194 = v124 + 12;
              uint64_t v193 = v124 + 4;
              id v125 = objc_msgSend(*(id *)(*(void *)(v105 + 16)+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey), "publicKey", v124 + 4, v124 + 12);
              id v126 = [v125 keyData];

              uint64_t v127 = sub_100221BF0();
              unint64_t v129 = v128;

              uint64_t v130 = sub_100221BE0(0);
              unint64_t v132 = v131;
              sub_100005A40(v127, v129);
              uint64_t v208 = sub_1001BEBDC(v130, v132, (uint64_t *)&v209);
              sub_100222690();
              swift_release_n();
              swift_bridgeObjectRelease();
              os_log_t v133 = v195;
              _os_log_impl((void *)&_mh_execute_header, v195, (os_log_type_t)v196, "vouchWithCustodianRecoveryKey encryptionPubKey: %{public}s", v124, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            id v134 = *(void **)((char *)v207 + v45);
            id v209 = 0;
            id v135 = [v134 peerIDThatTrustsCustodianRecoveryKeys:v199 canIntroducePeer:v202 stableInfo:v198 error:&v209];
            id v136 = v135;
            id v137 = v209;
            if (!v209)
            {
              if (v135)
              {
                uint64_t v145 = sub_100222270();
                uint64_t v147 = v146;
                uint64_t v148 = v207;
                id v149 = *(void **)((char *)v207 + v45);
                id v150 = *(id *)(v105 + 16);
                id v151 = v149;
                uint64_t v152 = sub_100117348(a9, v150, v145, v147, (uint64_t)v151);
                id v196 = v153;

                swift_bridgeObjectRelease();
                uint64_t v154 = *(void **)(v105 + 16);
                id v155 = *(id *)((char *)v148 + v45);
                uint64_t v156 = v154;
                swift_release();
                id v157 = *(id *)&v156[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey];

                id v209 = 0;
                os_log_type_t v158 = v202;
                id v159 = [v155 createVoucherForCandidate:v202 stableInfo:v198 withSponsorID:v136 reason:5 signingKeyPair:v157 error:&v209];

                id v160 = v209;
                if (!v159)
                {
                  id v171 = v209;
                  swift_bridgeObjectRelease();
                  uint64_t v172 = sub_100221B40();

                  swift_willThrow();
                  uint64_t v173 = v206;
                  swift_errorRetain();
                  swift_errorRetain();
                  unint64_t v174 = sub_100222070();
                  os_log_type_t v175 = sub_100222500();
                  if (os_log_type_enabled(v174, v175))
                  {
                    uint64_t v176 = (uint8_t *)swift_slowAlloc();
                    uint64_t v177 = (void *)swift_slowAlloc();
                    uint64_t v208 = v172;
                    id v209 = v177;
                    *(_DWORD *)uint64_t v176 = 136446210;
                    swift_errorRetain();
                    sub_1000046DC(&qword_100299D70);
                    uint64_t v178 = sub_1002222C0();
                    uint64_t v208 = sub_1001BEBDC(v178, v179, (uint64_t *)&v209);
                    uint64_t v173 = v206;
                    sub_100222690();
                    swift_bridgeObjectRelease();
                    swift_errorRelease();
                    swift_errorRelease();
                    _os_log_impl((void *)&_mh_execute_header, v174, v175, "Error creating voucher using custodian recovery key set: %{public}s", v176, 0xCu);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                    swift_errorRelease();
                    swift_errorRelease();
                  }

                  uint64_t v180 = v200;
                  uint64_t v181 = v201;
                  swift_errorRetain();
                  v173(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v172);
                  swift_errorRelease();

                  swift_errorRelease();
                  swift_release();

                  (*(void (**)(char *, uint64_t))(v180 + 8))(v203, v181);
                  return;
                }
                uint64_t v207 = (void *)v105;
                id v161 = v204;
                id v162 = v160;
                uint64_t v163 = (uint64_t)[v158 epoch];
                char v164 = (void (*)(uint64_t, unint64_t, uint64_t, unint64_t, void *, id, void))v206;
                if (v163 < 0)
                {
                  __break(1u);
                  return;
                }
                uint64_t v182 = sub_1001165B4(v152, (uint64_t)v161, (uint64_t)v161, v163);
                swift_bridgeObjectRelease();

                id v183 = [v159 data];
                uint64_t v184 = sub_100221BF0();
                unint64_t v186 = v185;

                id v187 = [v159 sig];
                uint64_t v188 = sub_100221BF0();
                unint64_t v190 = v189;

                id v191 = v196;
                id v192 = v196;
                v164(v184, v186, v188, v190, v182, v191, 0);
                swift_bridgeObjectRelease();

                sub_100005A40(v188, v190);
                sub_100005A40(v184, v186);
                swift_release();
              }
              else
              {
                swift_release();
                os_log_type_t v166 = sub_100222070();
                os_log_type_t v167 = sub_1002224E0();
                if (os_log_type_enabled(v166, v167))
                {
                  uint64_t v168 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v168 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v166, v167, "Untrusted custodian recovery key set", v168, 2u);
                  swift_slowDealloc();
                }

                sub_100042D4C();
                uint64_t v169 = swift_allocError();
                *(_OWORD *)uint64_t v170 = xmmword_100229930;
                *(unsigned char *)(v170 + 16) = 13;
                v206(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v169);
                swift_errorRelease();
                swift_release();
              }
              (*(void (**)(char *, uint64_t))(v200 + 8))(v203, v201);
              return;
            }
            id v138 = v209;
            swift_release();

            swift_willThrow();
            id v139 = v138;
            os_log_type_t v140 = sub_100222070();
            os_log_type_t v141 = sub_1002224E0();
            if (os_log_type_enabled(v140, v141))
            {
              uint64_t v142 = (uint8_t *)swift_slowAlloc();
              uint64_t v207 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v142 = 138543362;
              uint64_t v143 = v139;
              uint64_t v144 = (void *)_swift_stdlib_bridgeErrorToNSError();
              id v209 = v144;
              sub_100222690();
              *uint64_t v207 = v144;

              _os_log_impl((void *)&_mh_execute_header, v140, v141, "Error getting peer that trusts CRK: %{public}@", v142, 0xCu);
              sub_1000046DC(&qword_100298F90);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              os_log_type_t v140 = v139;
            }
            os_log_type_t v165 = (void (*)(void, unint64_t, void, unint64_t, void, void, id))v206;
            uint64_t v43 = v200;

            uint64_t v86 = v139;
            v165(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v137);
            swift_release();

LABEL_31:
            (*(void (**)(char *, uint64_t))(v43 + 8))(v203, v201);
            return;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v90 = v44;
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v100 = sub_100222090();
        sub_100003CC8(v100, (uint64_t)qword_10029E7D0);
        uint64_t v101 = sub_100222070();
        os_log_type_t v102 = sub_1002224E0();
        BOOL v103 = os_log_type_enabled(v101, v102);
        long long v95 = v206;
        if (v103)
        {
          id v104 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v104 = 0;
          _os_log_impl((void *)&_mh_execute_header, v101, v102, "Bad format CRK: recovery string or salt not set", v104, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v98 = swift_allocError();
        long long v99 = xmmword_100229950;
      }
      else
      {
        uint64_t v90 = v44;
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v91 = sub_100222090();
        sub_100003CC8(v91, (uint64_t)qword_10029E7D0);
        uint64_t v92 = sub_100222070();
        os_log_type_t v93 = sub_1002224E0();
        BOOL v94 = os_log_type_enabled(v92, v93);
        long long v95 = v206;
        if (v94)
        {
          id v96 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v96 = 0;
          _os_log_impl((void *)&_mh_execute_header, v92, v93, "Custodian Recovery Key is not trusted", v96, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v98 = swift_allocError();
        long long v99 = xmmword_100229930;
      }
      *(_OWORD *)uint64_t v97 = v99;
      *(unsigned char *)(v97 + 16) = 13;
      v95(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v98);
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v203, v90);
      return;
    }
    uint64_t v200 = v43;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_100222090();
    sub_100003CC8(v65, (uint64_t)qword_10029E7D0);
    id v66 = a5;
    uint64_t v67 = sub_100222070();
    os_log_type_t v68 = sub_1002224E0();
    if (os_log_type_enabled(v67, v68))
    {
      id v69 = (uint8_t *)swift_slowAlloc();
      id v209 = (id)swift_slowAlloc();
      uint64_t v201 = v44;
      *(_DWORD *)id v69 = 136446210;
      id v70 = [v66 uuid];
      uint64_t v71 = sub_100222270();
      unint64_t v73 = v72;

      uint64_t v208 = sub_1001BEBDC(v71, v73, (uint64_t *)&v209);
      uint64_t v44 = v201;
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Unable to find custodian recovery key %{public}s on model", v69, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v87 = v206;
    sub_100042D4C();
    uint64_t v88 = swift_allocError();
    *(_OWORD *)uint64_t v89 = xmmword_100229920;
    *(unsigned char *)(v89 + 16) = 13;
    v87(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v88);
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v200 + 8))(v203, v44);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_100222090();
    sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    NSString v37 = sub_100222070();
    os_log_type_t v38 = sub_100222500();
    if (os_log_type_enabled(v37, v38))
    {
      Class v39 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v40 = (void *)swift_slowAlloc();
      unint64_t v206 = a3;
      uint64_t v208 = a2;
      id v209 = v40;
      *(_DWORD *)Class v39 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v41 = sub_1002222C0();
      uint64_t v208 = sub_1001BEBDC(v41, v42, (uint64_t *)&v209);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Don't have my own peer keys; can't establish: %{public}s",
        v39,
        0xCu);
      swift_arrayDestroy();
      a3 = v206;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, a2);
  }
}

uint64_t sub_10014A234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  return sub_100151044(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, "vouchWithReroll complete: %{public}s", 0xD00000000000002BLL, 0x8000000100244700);
}

uint64_t sub_10014A288(char *a1, void (*a2)(void, unint64_t, void, unint64_t, void, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
  os_log_type_t v12 = sub_100222070();
  os_log_type_t v13 = sub_1002224E0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "beginning a vouchWithReroll", v14, 2u);
    swift_slowDealloc();
  }

  uint64_t v15 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v16 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_100222270();
    uint64_t v20 = v19;

    id v21 = [*(id *)&a1[v15] egoPeerPermanentInfo];
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v98 = v18;
      uint64_t v23 = sub_100221BF0();
      unint64_t v99 = v24;

      id v25 = [*(id *)&a1[v15] egoPeerPermanentInfoSig];
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v94 = a4;
        uint64_t v95 = a5;
        uint64_t v27 = sub_100221BF0();
        unint64_t v29 = v28;

        id v30 = [*(id *)&a1[v15] egoPeerStableInfo];
        if (v30)
        {
          unint64_t v31 = v30;
          uint64_t v87 = a6;
          uint64_t v97 = sub_100221BF0();
          unint64_t v33 = v32;

          id v34 = [*(id *)&a1[v15] egoPeerStableInfoSig];
          if (v34)
          {
            unint64_t v35 = v34;
            unint64_t v93 = v33;
            uint64_t v89 = a3;
            uint64_t v91 = sub_100221BF0();
            unint64_t v92 = v36;

            id v96 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
            swift_bridgeObjectRetain();
            sub_1000059E8(v23, v99);
            sub_1000059E8(v27, v29);
            NSString v37 = sub_100222260();
            swift_bridgeObjectRelease();
            Class isa = sub_100221BD0().super.isa;
            Class v39 = sub_100221BD0().super.isa;
            uint64_t v90 = v20;
            os_log_type_t v40 = v37;
            id v41 = [self permanentInfoWithPeerID:v37 data:isa sig:v39 keyFactory:v96];
            sub_100005A40(v27, v29);
            uint64_t v88 = v23;
            sub_100005A40(v23, v99);

            if (v41)
            {
              uint64_t v86 = v41;
              id v42 = objc_allocWithZone((Class)TPPeerStableInfo);
              sub_1000059E8(v97, v93);
              sub_1000059E8(v91, v92);
              Class v43 = sub_100221BD0().super.isa;
              Class v44 = sub_100221BD0().super.isa;
              id v45 = [v42 initWithData:v43 sig:v44];
              sub_100005A40(v91, v92);
              sub_100005A40(v97, v93);

              if (v45)
              {
                id v46 = (void *)swift_allocObject();
                v46[2] = a2;
                v46[3] = v89;
                v46[4] = v94;
                v46[5] = v95;
                v46[6] = v87;
                v46[7] = a1;
                v46[8] = v86;
                v46[9] = v45;
                strcpy((char *)v101, "signing-key ");
                BYTE5(v101[1]) = 0;
                HIWORD(v101[1]) = -5120;
                v103._countAndFlagsBits = v98;
                v103._object = v90;
                sub_100222310(v103);
                swift_bridgeObjectRetain_n();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v47 = a1;
                id v48 = v86;
                id v49 = v45;
                sub_10019ED6C(v101[0], v101[1], (void (*)(char *, uint64_t))sub_1001B3018, (uint64_t)v46, v98, v90);

                swift_bridgeObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                sub_100005A40(v91, v92);
                sub_100005A40(v97, v93);
                sub_100005A40(v27, v29);
                sub_100005A40(v23, v99);
                return swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              uint64_t v81 = sub_100222070();
              os_log_type_t v82 = sub_1002224E0();
              if (os_log_type_enabled(v81, v82))
              {
                unint64_t v83 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)unint64_t v83 = 0;
                _os_log_impl((void *)&_mh_execute_header, v81, v82, "Invalid stableinfo or signature; van't vouch for them",
                  v83,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v84 = swift_allocError();
              *(_OWORD *)uint64_t v85 = xmmword_100229940;
              *(unsigned char *)(v85 + 16) = 13;
              a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v84);
              swift_errorRelease();

              sub_100005A40(v91, v92);
              sub_100005A40(v97, v93);
              uint64_t v79 = v27;
              unint64_t v80 = v29;
            }
            else
            {
              swift_bridgeObjectRelease();
              id v74 = sub_100222070();
              os_log_type_t v75 = sub_1002224E0();
              if (os_log_type_enabled(v74, v75))
              {
                uint64_t v76 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v76 = 0;
                _os_log_impl((void *)&_mh_execute_header, v74, v75, "Invalid permenent info or signature; can't vouch for them",
                  v76,
                  2u);
                swift_slowDealloc();
              }

              sub_100042D4C();
              uint64_t v77 = swift_allocError();
              *(_OWORD *)uint64_t v78 = xmmword_1002297C0;
              *(unsigned char *)(v78 + 16) = 13;
              a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v77);
              swift_errorRelease();

              sub_100005A40(v91, v92);
              sub_100005A40(v97, v33);
              uint64_t v79 = v27;
              unint64_t v80 = v29;
            }
            sub_100005A40(v79, v80);
            uint64_t v73 = v88;
            goto LABEL_34;
          }
          uint64_t v57 = v23;
          swift_bridgeObjectRelease();
          os_log_type_t v68 = sub_100222070();
          os_log_type_t v69 = sub_1002224E0();
          if (os_log_type_enabled(v68, v69))
          {
            id v70 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v70 = 0;
            _os_log_impl((void *)&_mh_execute_header, v68, v69, "stableInfoSig does not exist", v70, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v71 = swift_allocError();
          *(_OWORD *)uint64_t v72 = xmmword_1002311E0;
          *(unsigned char *)(v72 + 16) = 13;
          a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v71);
          swift_errorRelease();
          sub_100005A40(v97, v33);
        }
        else
        {
          uint64_t v57 = v23;
          swift_bridgeObjectRelease();
          uint64_t v63 = sub_100222070();
          os_log_type_t v64 = sub_1002224E0();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v65 = 0;
            _os_log_impl((void *)&_mh_execute_header, v63, v64, "stableInfo does not exist", v65, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v66 = swift_allocError();
          *(_OWORD *)uint64_t v67 = xmmword_1002311E0;
          *(unsigned char *)(v67 + 16) = 13;
          a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v66);
          swift_errorRelease();
        }
        sub_100005A40(v27, v29);
      }
      else
      {
        uint64_t v57 = v23;
        swift_bridgeObjectRelease();
        uint64_t v58 = sub_100222070();
        os_log_type_t v59 = sub_1002224E0();
        if (os_log_type_enabled(v58, v59))
        {
          os_log_type_t v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v60 = 0;
          _os_log_impl((void *)&_mh_execute_header, v58, v59, "permanentInfoSig does not exist", v60, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v61 = swift_allocError();
        *(_OWORD *)uint64_t v62 = xmmword_1002311E0;
        *(unsigned char *)(v62 + 16) = 13;
        a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v61);
        swift_errorRelease();
      }
      uint64_t v73 = v57;
LABEL_34:
      return sub_100005A40(v73, v99);
    }
    swift_bridgeObjectRelease();
    unsigned int v51 = sub_100222070();
    os_log_type_t v52 = sub_1002224E0();
    if (os_log_type_enabled(v51, v52))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v53 = 0;
      uint64_t v54 = "permanentInfo does not exist";
      goto LABEL_19;
    }
  }
  else
  {
    unsigned int v51 = sub_100222070();
    os_log_type_t v52 = sub_1002224E0();
    if (os_log_type_enabled(v51, v52))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v53 = 0;
      uint64_t v54 = "As a nonmember, can't vouch for someone else";
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v51, v52, v54, v53, 2u);
      swift_slowDealloc();
    }
  }

  sub_100042D4C();
  uint64_t v55 = swift_allocError();
  *(_OWORD *)uint64_t v56 = xmmword_1002311E0;
  *(unsigned char *)(v56 + 16) = 13;
  a2(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v55);

  return swift_errorRelease();
}

uint64_t sub_10014ADEC(void *a1, uint64_t a2, uint64_t (*a3)(void, unint64_t, void, unint64_t, void, void, uint64_t), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, void *a9, void *a10)
{
  if (a1)
  {
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = a3;
    v17[3] = a4;
    void v17[4] = a7;
    v17[5] = a5;
    v17[6] = a6;
    v17[7] = a8;
    v17[8] = a9;
    v17[9] = a10;
    v17[10] = a1;
    strcpy((char *)v30, "signing-key ");
    BYTE5(v30[1]) = 0;
    HIWORD(v30[1]) = -5120;
    v32._countAndFlagsBits = a5;
    v32._object = a6;
    sub_100222310(v32);
    swift_bridgeObjectRetain_n();
    id v18 = a1;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v19 = a8;
    id v20 = a9;
    id v21 = a10;
    sub_10019ED6C(v30[0], v30[1], (void (*)(char *, uint64_t))sub_1001B3098, (uint64_t)v17, a5, a6);

    swift_bridgeObjectRelease();
    swift_release_n();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100222090();
    sub_100003CC8(v24, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v25 = sub_100222070();
    os_log_type_t v26 = sub_100222500();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      v30[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v31 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v28 = sub_1002222C0();
      uint64_t v31 = sub_1001BEBDC(v28, v29, v30);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Don't have my own peer keys; can't establish: %{public}s",
        v27,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, a2);
  }
}

void sub_10014B110(void *a1, void *a2, void (*a3)(void, unint64_t, void, unint64_t, void, void, void *), void (*a4)(void, unint64_t, void, unint64_t, void, void, void *), unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  if (!a1)
  {
    uint64_t v17 = a2;
    a4 = a3;
    if (qword_100298EB8 == -1)
    {
LABEL_6:
      uint64_t v29 = sub_100222090();
      sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      id v30 = sub_100222070();
      os_log_type_t v31 = sub_100222500();
      if (os_log_type_enabled(v30, v31))
      {
        Swift::String v32 = (uint8_t *)swift_slowAlloc();
        id v55 = (id)swift_slowAlloc();
        *(_DWORD *)Swift::String v32 = 136446210;
        swift_errorRetain();
        sub_1000046DC((uint64_t *)&unk_1002996A0);
        uint64_t v33 = sub_1002222C0();
        sub_1001BEBDC(v33, v34, (uint64_t *)&v55);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Don't have my own peer keys; can't establish: %{public}s",
          v32,
          0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      a4(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, v17);
      return;
    }
LABEL_17:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v17 = a9;
  uint64_t v18 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v19 = *(id *)(a8 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v20 = a1;
  id v21 = sub_100117348(a5, v20, a6, a7, (uint64_t)v19);
  id v53 = v22;

  id v23 = *(id *)(a8 + v18);
  NSString v24 = sub_100222260();
  uint64_t v25 = *(void *)&v20[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey];
  id v55 = 0;
  id v26 = [v23 createVoucherForCandidate:a9 stableInfo:a10 withSponsorID:v24 reason:2 signingKeyPair:v25 error:&v55];

  if (v26)
  {
    id v27 = v55;
    uint64_t v28 = (uint64_t)[a9 epoch];
    if ((v28 & 0x8000000000000000) == 0)
    {
      Class v43 = sub_1001165B4(v21, a11, a11, v28);
      swift_bridgeObjectRelease();
      id v44 = [v26 data];
      uint64_t v45 = sub_100221BF0();
      unint64_t v47 = v46;

      id v48 = [v26 sig];
      uint64_t v49 = sub_100221BF0();
      unint64_t v51 = v50;

      id v52 = v53;
      a3(v45, v47, v49, v51, v43, v53, 0);
      swift_bridgeObjectRelease();

      sub_100005A40(v49, v51);
      sub_100005A40(v45, v47);

      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  id v35 = v55;
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_100221B40();

  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_100222090();
  sub_100003CC8(v37, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v38 = sub_100222070();
  os_log_type_t v39 = sub_100222500();
  if (os_log_type_enabled(v38, v39))
  {
    os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
    id v55 = (id)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v40 = 136446210;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v41 = sub_1002222C0();
    sub_1001BEBDC(v41, v42, (uint64_t *)&v55);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Error creating voucher using reroll: %{public}s", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  a3(0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0, (void *)v36);
  swift_errorRelease();
  swift_errorRelease();
}

uint64_t sub_10014B734(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  id v23 = v20;
  uint64_t v31 = sub_1001984DC(v23, 0xD000000000000083, 0x8000000100244E90);

  NSString v24 = (void *)swift_allocObject();
  v24[2] = v31;
  v24[3] = a19;
  v24[4] = a20;
  id v36 = *(id *)&v23[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = sub_1001B6444;
  *(void *)(v25 + 32) = v24;
  *(void *)(v25 + 40) = a1;
  *(void *)(v25 + 48) = a2;
  *(void *)(v25 + 56) = a3;
  *(void *)(v25 + 64) = a4;
  *(void *)(v25 + 72) = a5;
  *(void *)(v25 + 80) = a6;
  *(void *)(v25 + 88) = a7;
  *(void *)(v25 + 96) = a8;
  *(void *)(v25 + 104) = a9;
  *(void *)(v25 + 112) = a10;
  *(void *)(v25 + 120) = a12;
  *(void *)(v25 + 128) = a13;
  *(void *)(v25 + 136) = a14;
  *(void *)(v25 + 144) = a15;
  *(void *)(v25 + 152) = a16;
  *(void *)(v25 + 160) = a17;
  *(unsigned char *)(v25 + 168) = a18;
  *(void *)(v25 + 176) = a11;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1001B6520;
  *(void *)(v26 + 24) = v25;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_100286550;
  id v27 = _Block_copy(aBlock);
  uint64_t v28 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000059E8(a3, a4);
  sub_1000059E8(a5, a6);
  sub_1000059E8(a7, a8);
  sub_1000059E8(a9, a10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  [v36 performBlockAndWait:v27];
  swift_release();
  swift_release();
  _Block_release(v27);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v27) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10014BA80(char *a1, void (*a2)(void, unint64_t, void, unint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21)
{
  uint64_t v25 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v26 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v26)
  {
    id v27 = v26;
    uint64_t v97 = sub_100222270();
    uint64_t v29 = v28;

    id v30 = [*(id *)&a1[v25] egoPeerPermanentInfo];
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v96 = a5;
      Swift::String v32 = a1;
      uint64_t v33 = sub_100221BF0();
      unint64_t v35 = v34;

      uint64_t v91 = v32;
      id v36 = [*(id *)&v32[v25] egoPeerPermanentInfoSig];
      if (v36)
      {
        uint64_t v37 = v36;
        uint64_t v94 = a2;
        uint64_t v95 = a3;
        uint64_t v38 = sub_100221BF0();
        unint64_t v40 = v39;

        id v41 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
        swift_bridgeObjectRetain();
        id v42 = v41;
        sub_1000059E8(v33, v35);
        sub_1000059E8(v38, v40);
        NSString v43 = sub_100222260();
        swift_bridgeObjectRelease();
        Class isa = sub_100221BD0().super.isa;
        Class v45 = sub_100221BD0().super.isa;
        id v89 = self;
        unint64_t v46 = v29;
        id v47 = [v89 permanentInfoWithPeerID:v43 data:isa sig:v45 keyFactory:v42];
        unint64_t v92 = v42;

        sub_100005A40(v38, v40);
        uint64_t v48 = v33;
        sub_100005A40(v33, v35);

        uint64_t v90 = v47;
        if (v47)
        {
          uint64_t v87 = v33;
          unint64_t v88 = v40;
          id v49 = v92;
          swift_bridgeObjectRetain();
          sub_1000059E8(a6, a7);
          sub_1000059E8(a8, a9);
          NSString v50 = sub_100222260();
          swift_bridgeObjectRelease();
          Class v51 = sub_100221BD0().super.isa;
          Class v52 = sub_100221BD0().super.isa;
          id v53 = [v89 permanentInfoWithPeerID:v50 data:v51 sig:v52 keyFactory:v49];
          unint64_t v93 = v49;

          sub_100005A40(a8, a9);
          sub_100005A40(a6, a7);

          if (!v53)
          {
            swift_bridgeObjectRelease();
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v74 = sub_100222090();
            sub_100003CC8(v74, (uint64_t)qword_10029E7D0);
            os_log_type_t v75 = sub_100222070();
            os_log_type_t v76 = sub_1002224E0();
            if (os_log_type_enabled(v75, v76))
            {
              uint64_t v77 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v77 = 0;
              _os_log_impl((void *)&_mh_execute_header, v75, v76, "Invalid permenent info or signature; can't vouch for them",
                v77,
                2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v78 = swift_allocError();
            *(_OWORD *)uint64_t v79 = xmmword_1002297C0;
            *(unsigned char *)(v79 + 16) = 13;
            v94(0, 0xF000000000000000, 0, 0xF000000000000000, v78);
            swift_errorRelease();

            sub_100005A40(v38, v88);
            uint64_t v80 = v33;
            goto LABEL_31;
          }
          uint64_t v101 = v53;
          id v54 = objc_allocWithZone((Class)TPPeerStableInfo);
          sub_1000059E8(a10, a11);
          sub_1000059E8(a12, a13);
          Class v55 = sub_100221BD0().super.isa;
          Class v56 = sub_100221BD0().super.isa;
          id v57 = [v54 initWithData:v55 sig:v56];
          sub_100005A40(a12, a13);
          sub_100005A40(a10, a11);

          if (v57)
          {
            uint64_t v58 = swift_allocObject();
            *(void *)(v58 + 16) = a4;
            *(void *)(v58 + 24) = v96;
            *(void *)(v58 + 32) = v101;
            *(void *)(v58 + 40) = v94;
            *(void *)(v58 + 48) = v95;
            *(void *)(v58 + 56) = a14;
            *(void *)(v58 + 64) = a15;
            *(void *)(v58 + 72) = a16;
            *(void *)(v58 + 80) = a17;
            *(void *)(v58 + 88) = a18;
            *(void *)(v58 + 96) = a19;
            *(unsigned char *)(v58 + 104) = a20 & 1;
            *(void *)(v58 + 112) = v91;
            *(void *)(v58 + 120) = v57;
            *(void *)(v58 + 128) = v97;
            *(void *)(v58 + 136) = v46;
            *(void *)(v58 + 144) = a21;
            *(void *)(v58 + 152) = v90;
            strcpy((char *)v103, "signing-key ");
            BYTE5(v103[1]) = 0;
            HIWORD(v103[1]) = -5120;
            v105._countAndFlagsBits = v97;
            v105._object = v46;
            sub_100222310(v105);
            swift_bridgeObjectRetain();
            id v59 = v91;
            id v60 = v57;
            swift_bridgeObjectRetain();
            id v61 = v90;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_retain();
            id v62 = v101;
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_10019ED6C(v103[0], v103[1], (void (*)(char *, uint64_t))sub_1001B6618, v58, v97, v46);

            swift_bridgeObjectRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
            sub_100005A40(v38, v88);
            sub_100005A40(v87, v35);
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v81 = sub_100222090();
          sub_100003CC8(v81, (uint64_t)qword_10029E7D0);
          os_log_type_t v82 = sub_100222070();
          os_log_type_t v83 = sub_1002224E0();
          uint64_t v48 = v33;
          if (os_log_type_enabled(v82, v83))
          {
            uint64_t v84 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v84 = 0;
            _os_log_impl((void *)&_mh_execute_header, v82, v83, "Invalid stableinfo or signature; van't vouch for them",
              v84,
              2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v85 = swift_allocError();
          *(_OWORD *)uint64_t v86 = xmmword_100229940;
          *(unsigned char *)(v86 + 16) = 13;
          v94(0, 0xF000000000000000, 0, 0xF000000000000000, v85);
          swift_errorRelease();

          uint64_t v72 = v38;
          unint64_t v73 = v88;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_100042D4C();
          uint64_t v70 = swift_allocError();
          *(_OWORD *)uint64_t v71 = xmmword_1002297C0;
          *(unsigned char *)(v71 + 16) = 13;
          v94(0, 0xF000000000000000, 0, 0xF000000000000000, v70);
          swift_errorRelease();

          uint64_t v72 = v38;
          unint64_t v73 = v40;
        }
        sub_100005A40(v72, v73);
        uint64_t v80 = v48;
LABEL_31:
        return sub_100005A40(v80, v35);
      }
      sub_100005A40(v33, v35);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v64 = sub_100222090();
  sub_100003CC8(v64, (uint64_t)qword_10029E7D0);
  uint64_t v65 = sub_100222070();
  os_log_type_t v66 = sub_1002224E0();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v67 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "As a nonmember, can't vouch for someone else", v67, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  uint64_t v68 = swift_allocError();
  *(_OWORD *)uint64_t v69 = xmmword_1002311E0;
  *(unsigned char *)(v69 + 16) = 13;
  a2(0, 0xF000000000000000, 0, 0xF000000000000000, v68);

  return swift_errorRelease();
}

uint64_t sub_10014C46C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t (*a6)(void, unint64_t, void, unint64_t, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  id v20 = a6;
  if (a1)
  {
    uint64_t v25 = a1;
    uint64_t v48 = sub_100222270();
    uint64_t v58 = a4;
    uint64_t v28 = v27;
    swift_bridgeObjectRetain();
    id v50 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001B4E5C();
    LOBYTE(v25) = v29;
    id v30 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
    id v31 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
    id v32 = sub_100062F10(0, a8, a9, a10, a11, a12, a13, v48, v28, (char)v25, a14 & 1, v30);
    sub_1000046DC(&qword_1002995D8);
    unint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002311B0;
    *(void *)(inited + 32) = [a16 bestPolicyVersion];
    sub_1002223E0();
    id v49 = (void *)sub_1001A0974(inited);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v53 = a5;
    swift_errorRetain();
    id v34 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v51 = v32;
    swift_retain();
    unint64_t v35 = a15;
    id v36 = a16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v37 = a20;
    sub_1001ACBFC(v49, v35, a2, v51, a6, a7, v35, v53, v36, a17, a18, v34, a19, v37, a3, v58, a10, a11, a12, a13);

    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();

    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_100222090();
    sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    id v40 = a5;
    swift_errorRetain();
    swift_bridgeObjectRetain();
    id v41 = v40;
    swift_errorRetain();
    id v42 = sub_100222070();
    os_log_type_t v43 = sub_100222500();
    if (os_log_type_enabled(v42, v43))
    {
      id v57 = v20;
      uint64_t v44 = swift_slowAlloc();
      Class v55 = (void *)swift_slowAlloc();
      v61[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136446722;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a3, a4, v61);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2114;
      id v45 = v41;
      sub_100222690();
      void *v55 = v41;

      *(_WORD *)(v44 + 22) = 2082;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v46 = sub_1002222C0();
      sub_1001BEBDC(v46, v47, v61);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Don't have my own keys: can't vouch for %{public}s(%{public}@): %{public}s", (uint8_t *)v44, 0x20u);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      id v20 = v57;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    return v20(0, 0xF000000000000000, 0, 0xF000000000000000, a2);
  }
}

uint64_t sub_10014CA4C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t), uint64_t a8, unint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  id v149 = a7;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v23);
  id v138 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v25 - 8, v26);
  id v139 = (char *)&v131 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v136 = (uint64_t)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v143 = (uint64_t)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v34 - 8, v35);
  uint64_t v142 = (uint64_t)&v131 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v37 - 8, v38);
  uint64_t v145 = (uint64_t)&v131 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v141 = (uint64_t *)type metadata accessor for Metrics(0);
  uint64_t v134 = *(v141 - 1);
  __chkstk_darwin(v141, v40);
  uint64_t v144 = (uint64_t)&v131 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v43 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  uint64_t v135 = a4;
  uint64_t v44 = a5;
  NSString v45 = sub_100222260();
  uint64_t v146 = a6;
  uint64_t v46 = *(void *)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey);
  id v151 = 0;
  id v47 = [v43 createVoucherForCandidate:a2 stableInfo:a3 withSponsorID:v45 reason:4 signingKeyPair:v46 error:&v151];

  id v48 = v151;
  if (v47)
  {
    uint64_t v140 = a8;
    uint64_t v49 = a1;
    id v50 = *(void **)(a1 + v42);
    id v151 = 0;
    id v147 = v47;
    id v51 = v48;
    id v148 = a2;
    id v52 = [v50 getViewsForPeer:a2 stableInfo:a3 error:&v151];
    id v53 = v151;
    if (v52)
    {
      id v54 = v52;
      uint64_t v55 = sub_100222440();
      id v56 = v53;
    }
    else
    {
      uint64_t v65 = v151;
      sub_100221B40();

      swift_willThrow();
      swift_errorRelease();
      uint64_t v55 = 0;
    }
    uint64_t v132 = v44;
    id v151 = _swiftEmptyArrayStorage;
    uint64_t v66 = a1;
    if (a9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_100222970();
      if (v67) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v67 = *(void *)((a9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v67)
      {
LABEL_11:
        if (v67 < 1)
        {
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          swift_once();
          uint64_t v82 = sub_100222090();
          sub_100003CC8(v82, (uint64_t)qword_10029E7D0);
          swift_bridgeObjectRetain();
          id v83 = v148;
          swift_errorRetain();
          swift_bridgeObjectRetain();
          id v84 = v83;
          swift_errorRetain();
          uint64_t v85 = sub_100222070();
          os_log_type_t v86 = sub_100222500();
          if (os_log_type_enabled(v85, v86))
          {
            uint64_t v87 = swift_slowAlloc();
            unint64_t v88 = (void *)swift_slowAlloc();
            id v148 = (id)swift_slowAlloc();
            id v151 = v148;
            *(_DWORD *)uint64_t v87 = 136446722;
            swift_bridgeObjectRetain();
            uint64_t v150 = sub_1001BEBDC(a11, v55, (uint64_t *)&v151);
            sub_100222690();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v87 + 12) = 2114;
            uint64_t v150 = (uint64_t)v84;
            id v89 = v84;
            sub_100222690();
            *unint64_t v88 = v84;

            *(_WORD *)(v87 + 22) = 2082;
            uint64_t v150 = 0;
            swift_errorRetain();
            sub_1000046DC(&qword_100299D70);
            uint64_t v90 = sub_1002222C0();
            uint64_t v150 = sub_1001BEBDC(v90, v91, (uint64_t *)&v151);
            sub_100222690();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v85, v86, "Unable to make TLKShares for beneficiary %{public}s(%{public}@): %{public}s", (uint8_t *)v87, 0x20u);
            sub_1000046DC(&qword_100298F90);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_errorRelease();
            swift_errorRelease();
          }

          swift_errorRetain();
          v149(0, 0xF000000000000000, 0, 0xF000000000000000, 0);

          swift_errorRelease();
          return swift_errorRelease();
        }
        uint64_t v133 = v49;
        for (uint64_t i = 0; i != v67; ++i)
        {
          if ((a9 & 0xC000000000000001) != 0) {
            id v69 = (id)sub_100222880();
          }
          else {
            id v69 = *(id *)(a9 + 8 * i + 32);
          }
          uint64_t v70 = v69;
          if ([v69 newUpload])
          {
          }
          else
          {
            sub_1002228B0();
            sub_1002228E0();
            sub_1002228F0();
            sub_1002228C0();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v71 = v151;
        uint64_t v66 = v133;
LABEL_25:
        unint64_t v74 = (unint64_t)sub_100197BBC((unint64_t)v71, v55);
        swift_release();
        swift_bridgeObjectRelease();
        if (v74 >> 62)
        {
          uint64_t v55 = sub_100222970();
          if (v55) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v55 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v55)
          {
LABEL_27:
            id v151 = _swiftEmptyArrayStorage;
            sub_1002228D0();
            if (v55 < 0) {
              goto LABEL_54;
            }
            uint64_t v75 = 0;
            do
            {
              if ((v74 & 0xC000000000000001) != 0) {
                id v76 = (id)sub_100222880();
              }
              else {
                id v76 = *(id *)(v74 + 8 * v75 + 32);
              }
              uint64_t v77 = v76;
              ++v75;
              id v78 = [v76 tlk];

              sub_1002228B0();
              sub_1002228E0();
              sub_1002228F0();
              sub_1002228C0();
            }
            while (v55 != v75);
            uint64_t v79 = v151;
            swift_bridgeObjectRelease();
            goto LABEL_36;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v79 = _swiftEmptyArrayStorage;
LABEL_36:
        uint64_t v80 = (uint64_t)[a10 epoch];
        if ((v80 & 0x8000000000000000) == 0)
        {
          uint64_t v81 = v66;
          uint64_t v92 = sub_100116CE4(v79, v146, (uint64_t)v148, v80);
          uint64_t v93 = swift_bridgeObjectRelease();
          if (*(void *)(v92 + 16))
          {
            __chkstk_darwin(v93, v94);
            *(&v131 - 4) = v96;
            *(&v131 - 3) = v95;
            *(&v131 - 2) = v98;
            *(&v131 - 1) = v97;
            sub_1001A56AC((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
            sub_100221F70();
            id v148 = 0;
            unint64_t v99 = (void (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))sub_1000059A4((void *)(v81 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish), *(void *)(v81 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24));
            id v100 = [*(id *)(v81 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) changeToken];
            if (v100)
            {
              uint64_t v101 = v100;
              uint64_t v146 = sub_100222270();
              unint64_t v103 = v102;
            }
            else
            {
              uint64_t v146 = 0;
              unint64_t v103 = 0xE000000000000000;
            }
            uint64_t v117 = type metadata accessor for SignedPeerStableInfo(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v145, 1, 1, v117);
            uint64_t v118 = type metadata accessor for SignedPeerDynamicInfo(0);
            uint64_t v119 = v142;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v142, 1, 1, v118);
            uint64_t v120 = type metadata accessor for IdmsTrustedDevicesVersion(0);
            uint64_t v121 = v143;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v143, 1, 1, v120);
            uint64_t v122 = v136;
            sub_1001B7C04(v144, v136, type metadata accessor for Metrics);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t *))(v134 + 56))(v122, 0, 1, v141);
            uint64_t v123 = type metadata accessor for AccountInfo(0);
            uint64_t v124 = (uint64_t)v139;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v139, 1, 1, v123);
            id v125 = (void *)swift_allocObject();
            os_log_type_t v141 = &v131;
            uint64_t v126 = v140;
            v125[2] = v149;
            v125[3] = v126;
            id v127 = v147;
            v125[4] = v147;
            id v149 = *v99;
            __chkstk_darwin(v125, v128);
            *(&v131 - 12) = v146;
            *(&v131 - 11) = v103;
            uint64_t v129 = v132;
            *(&v131 - 10) = v135;
            *(&v131 - 9) = v129;
            *(&v131 - 8) = v145;
            *(&v131 - 7) = v119;
            *(&v131 - 6) = v92;
            *(&v131 - 5) = (uint64_t)_swiftEmptyArrayStorage;
            *(&v131 - 4) = v121;
            *(&v131 - 3) = v122;
            *(&v131 - 2) = v124;
            sub_1001A56AC(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
            swift_retain();
            uint64_t v130 = (uint64_t)v138;
            sub_100221F70();
            RetryingCKCodeService.updateTrust(_:completion:)(v130, (uint64_t)sub_1001B68B4, (uint64_t)v125);
            sub_1001B7EAC(v130, type metadata accessor for UpdateTrustRequest);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();

            sub_10004015C(v124, &qword_100299F50);
            sub_10004015C(v122, &qword_10029F000);
            sub_10004015C(v143, &qword_10029ED20);
            sub_10004015C(v142, &qword_10029ECA0);
            sub_10004015C(v145, &qword_100299F18);
            return sub_1001B7EAC(v144, type metadata accessor for Metrics);
          }
          else
          {
            swift_bridgeObjectRelease();
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v104 = sub_100222090();
            sub_100003CC8(v104, (uint64_t)qword_10029E7D0);
            Swift::String v105 = sub_100222070();
            os_log_type_t v106 = sub_1002224E0();
            if (os_log_type_enabled(v105, v106))
            {
              uint64_t v107 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v107 = 0;
              _os_log_impl((void *)&_mh_execute_header, v105, v106, "No TLKShares to upload for new peer, returning voucher", v107, 2u);
              swift_slowDealloc();
            }

            id v108 = v147;
            id v109 = [v147 data];
            uint64_t v110 = sub_100221BF0();
            unint64_t v112 = v111;

            id v113 = [v108 sig];
            uint64_t v114 = sub_100221BF0();
            unint64_t v116 = v115;

            v149(v110, v112, v114, v116, 0);
            sub_100005A40(v114, v116);
            return sub_100005A40(v110, v112);
          }
        }
        __break(1u);
        goto LABEL_53;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v71 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  id v57 = v151;
  uint64_t v58 = sub_100221B40();

  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v59 = sub_100222090();
  sub_100003CC8(v59, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v60 = sub_100222070();
  os_log_type_t v61 = sub_100222500();
  if (os_log_type_enabled(v60, v61))
  {
    id v62 = (uint8_t *)swift_slowAlloc();
    id v151 = (void *)swift_slowAlloc();
    *(_DWORD *)id v62 = 136446210;
    uint64_t v150 = v58;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v63 = sub_1002222C0();
    uint64_t v150 = sub_1001BEBDC(v63, v64, (uint64_t *)&v151);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "Error creating voucher: %{public}s", v62, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v72 = v149;
  swift_errorRetain();
  v72(0, 0xF000000000000000, 0, 0xF000000000000000, v58);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10014DB08(uint64_t a1, void (*a2)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t), uint64_t a3, void *a4)
{
  uint64_t v66 = a3;
  uint64_t v67 = a2;
  uint64_t v6 = sub_100221D50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v63 - v13;
  uint64_t updated = type metadata accessor for UpdateTrustResponse(0);
  __chkstk_darwin(updated - 8, v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029ED10);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (uint64_t *)((char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v22, (uint64_t *)&unk_10029ED10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = *v22;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100222090();
    sub_100003CC8(v24, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v25 = sub_100222070();
    os_log_type_t v26 = sub_100222500();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v71 = v23;
      uint64_t v72 = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v29 = sub_1002222C0();
      uint64_t v71 = sub_1001BEBDC(v29, v30, (uint64_t *)&v72);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Unable to upload new tlkshares: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v46 = [a4 data];
    uint64_t v47 = sub_100221BF0();
    unint64_t v49 = v48;

    id v50 = [a4 sig];
    uint64_t v51 = sub_100221BF0();
    unint64_t v53 = v52;

    swift_errorRetain();
    v67(v47, v49, v51, v53, v23);
    swift_errorRelease();
    sub_100005A40(v51, v53);
    sub_100005A40(v47, v49);
    return swift_errorRelease();
  }
  else
  {
    sub_1001B7B9C((uint64_t)v22, (uint64_t)v18, type metadata accessor for UpdateTrustResponse);
    uint64_t v31 = *(void *)v18;
    uint64_t v32 = *(void *)(*(void *)v18 + 16);
    uint64_t v65 = v18;
    if (v32)
    {
      unint64_t v64 = a4;
      uint64_t v72 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1002228D0();
      uint64_t v33 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      uint64_t v34 = v7 + 16;
      id v69 = v35;
      uint64_t v70 = v33;
      uint64_t v36 = *(unsigned __int8 *)(v34 + 64);
      uint64_t v63 = v31;
      uint64_t v37 = (char *)(v31 + ((v36 + 32) & ~v36));
      uint64_t v68 = *(void *)(v34 + 56);
      do
      {
        uint64_t v38 = v69;
        v69(v14, v37, v6);
        v38(v11, v14, v6);
        sub_100222620();
        (*(void (**)(char *, uint64_t))(v34 - 8))(v14, v6);
        sub_1002228B0();
        sub_1002228E0();
        sub_1002228F0();
        sub_1002228C0();
        v37 += v68;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease();
      a4 = v64;
    }
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_100222090();
    sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_100222070();
    os_log_type_t v41 = sub_1002224E0();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446210;
      swift_bridgeObjectRetain();
      sub_1000046DC(&qword_10029ED90);
      uint64_t v43 = sub_1002223D0();
      unint64_t v45 = v44;
      swift_bridgeObjectRelease();
      uint64_t v71 = sub_1001BEBDC(v43, v45, (uint64_t *)&v72);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Uploaded new tlkshares: %{public}s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v55 = objc_msgSend(a4, "data", v63);
    uint64_t v56 = sub_100221BF0();
    unint64_t v58 = v57;

    id v59 = [a4 sig];
    uint64_t v60 = sub_100221BF0();
    unint64_t v62 = v61;

    v67(v56, v58, v60, v62, 0);
    sub_100005A40(v60, v62);
    sub_100005A40(v56, v58);
    return sub_1001B7EAC((uint64_t)v65, type metadata accessor for UpdateTrustResponse);
  }
}

uint64_t sub_10014E27C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_100184C80(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.info.getter, "departByDistrustingSelf complete: %{public}s", 0xD00000000000001FLL, 0x8000000100244570);
}

uint64_t sub_10014E2B4(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_100222270();
    uint64_t v9 = v8;

    sub_1000046DC((uint64_t *)&unk_100299820);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100229540;
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v9;
    Swift::Int v11 = sub_100199C04(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_10014EB30(v11, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_1002224E0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No dynamic info for self?", v16, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_1002297D0;
    *(unsigned char *)(v17 + 16) = 13;
    a2();
    return swift_errorRelease();
  }
}

uint64_t sub_10014E4C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_100184C80(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.info.getter, "distrust complete: %{public}s", 0xD000000000000018, 0x8000000100244550);
}

uint64_t sub_10014E4FC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_100222270();
    uint64_t v11 = v10;

    LOBYTE(v8) = sub_100039584(v9, v11, a4);
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return sub_10014EB30(a4, a2, a3);
    }
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100222090();
    sub_100003CC8(v12, (uint64_t)qword_10029E7D0);
    uint64_t v13 = sub_100222070();
    os_log_type_t v14 = sub_1002224E0();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Self-distrust via peerID not allowed", v15, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    swift_allocError();
    long long v17 = xmmword_1002311F0;
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_100222090();
    sub_100003CC8(v18, (uint64_t)qword_10029E7D0);
    uint64_t v19 = sub_100222070();
    os_log_type_t v20 = sub_1002224E0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "No dynamic info for self?", v21, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    swift_allocError();
    long long v17 = xmmword_1002297D0;
  }
  *(_OWORD *)uint64_t v16 = v17;
  *(unsigned char *)(v16 + 16) = 13;
  a2();

  return swift_errorRelease();
}

uint64_t sub_10014E7A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v39 = a1;
  uint64_t v3 = sub_1000046DC(&qword_10029ED28);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100221CB0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v37 = (char *)&v34 - v14;
  uint64_t v38 = sub_100221DC0();
  uint64_t v35 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v15);
  uint64_t v36 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  uint64_t v18 = a2;
  id v19 = [*(id *)(a2 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) idmsTrustedDevicesVersion];
  if (v19)
  {
    os_log_type_t v20 = v19;
    uint64_t v21 = sub_100222270();
    unint64_t v23 = v22;
  }
  else
  {
    unint64_t v23 = 0xE700000000000000;
    uint64_t v21 = 0x6E776F6E6B6E75;
  }
  uint64_t v24 = v39;
  swift_bridgeObjectRelease();
  uint64_t *v24 = v21;
  v24[1] = v23;
  id v25 = [*(id *)(v18 + v17) idmsTrustedDeviceListFetchDate];
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_8;
  }
  os_log_type_t v26 = v25;
  sub_100221C80();

  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v27(v6, v12, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_8:
    sub_100221C60();
    sub_10004015C((uint64_t)v6, &qword_10029ED28);
    goto LABEL_9;
  }
  v27(v37, v6, v7);
LABEL_9:
  uint64_t v28 = v36;
  sub_100221DA0();
  uint64_t v29 = (uint64_t)v39 + *(int *)(type metadata accessor for IdmsTrustedDevicesVersion(0) + 24);
  sub_10004015C(v29, (uint64_t *)&unk_10029ED30);
  uint64_t v30 = v35;
  uint64_t v31 = v28;
  uint64_t v32 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v29, v31, v38);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, v32);
}

uint64_t sub_10014EB30(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [*(id *)&v3[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_100222270();
    uint64_t v12 = v11;

    strcpy((char *)v20, "signing-key ");
    BYTE5(v20[1]) = 0;
    HIWORD(v20[1]) = -5120;
    v22._countAndFlagsBits = v10;
    v22._object = v12;
    sub_100222310(v22);
    swift_retain();
    id v13 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10019F374(v20[0], v20[1], (uint64_t)a2, a3, (uint64_t)v13, v10, (uint64_t)v12, a1, (void (*)(void))sub_10014ED98);
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_100222090();
    sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
    uint64_t v16 = sub_100222070();
    os_log_type_t v17 = sub_1002224E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No dynamic info for self?", v18, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v19 = xmmword_1002297D0;
    *(unsigned char *)(v19 + 16) = 13;
    a2();
    return swift_errorRelease();
  }
}

uint64_t sub_10014ED98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    uint64_t v15 = *(void **)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a5;
    v16[3] = a6;
    v16[4] = a7;
    v16[5] = a8;
    void v16[6] = a1;
    v16[7] = a3;
    v16[8] = a4;
    a3 = swift_allocObject();
    *(void *)(a3 + 16) = sub_1001B16AC;
    *(void *)(a3 + 24) = v16;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = a3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100284048;
    os_log_type_t v17 = _Block_copy(aBlock);
    id v18 = a1;
    uint64_t v19 = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    [v15 performBlockAndWait:v17];

    _Block_release(v17);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  uint64_t v22 = a2;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100222090();
  sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v24 = sub_100222070();
  os_log_type_t v25 = sub_100222500();
  if (os_log_type_enabled(v24, v25))
  {
    os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v26 = 136446210;
    uint64_t v30 = v22;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v27 = sub_1002222C0();
    uint64_t v30 = sub_1001BEBDC(v27, v28, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "No longer have signing key pair; can't sign distrust: %{public}s",
      v26,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return ((uint64_t (*)(uint64_t))a3)(v22);
}

uint64_t sub_10014F0F8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  id v76 = a6;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v12);
  unint64_t v74 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SignedPeerDynamicInfo(0);
  __chkstk_darwin(v14, v15);
  os_log_type_t v17 = (uint64_t *)((char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v18 = *(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  uint64_t v71 = a2;
  uint64_t v72 = a3;
  NSString v19 = sub_100222260();
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_10018CDB4(v20);
  swift_bridgeObjectRelease();
  Class isa = sub_1002223B0().super.isa;
  swift_release();
  uint64_t v22 = (void *)sub_1001EAB00();
  id v78 = 0;
  id v23 = [v18 calculateDynamicInfoForPeerWithID:v19 addingPeerIDs:0 removingPeerIDs:isa preapprovedKeys:0 signingKeyPair:a5 currentMachineIDs:v22 error:&v78];

  id v24 = v78;
  if (v23)
  {
    id v25 = v23;
    id v26 = v24;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    id v27 = [v25 data];
    uint64_t v28 = sub_100221BF0();
    uint64_t v30 = v29;

    *os_log_type_t v17 = v28;
    v17[1] = v30;
    id v31 = [v25 sig];
    uint64_t v32 = sub_100221BF0();
    uint64_t v34 = v33;

    v17[2] = v32;
    v17[3] = v34;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_100222090();
    sub_100003CC8(v35, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain_n();
    id v75 = v25;
    uint64_t v36 = sub_100222070();
    os_log_type_t v37 = sub_1002224E0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v68 = (void *)swift_slowAlloc();
      id v69 = (void *)swift_slowAlloc();
      id v78 = v69;
      *(_DWORD *)uint64_t v38 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_100222450();
      uint64_t v70 = a7;
      uint64_t v40 = v39;
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      uint64_t v77 = sub_1001BEBDC(v40, v42, (uint64_t *)&v78);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2114;
      uint64_t v77 = (uint64_t)v75;
      id v43 = v75;
      a7 = v70;
      sub_100222690();
      *uint64_t v68 = v23;

      _os_log_impl((void *)&_mh_execute_header, v36, v37, "attempting distrust for %{public}s with: %{public}@", (uint8_t *)v38, 0x16u);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v54 = v75;
      uint64_t v44 = swift_bridgeObjectRelease_n();
    }
    __chkstk_darwin(v44, v45);
    uint64_t v55 = v71;
    *(&v67 - 4) = (uint64_t)a1;
    *(&v67 - 3) = v55;
    uint64_t v65 = v72;
    uint64_t v66 = v17;
    sub_1001A56AC(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
    uint64_t v56 = (uint64_t)v74;
    sub_100221F70();
    uint64_t v57 = *(void *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
    uint64_t v58 = *(void *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
    sub_1000059A4(&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v57);
    id v59 = (void *)swift_allocObject();
    uint64_t v60 = v76;
    v59[2] = a1;
    v59[3] = v60;
    v59[4] = a7;
    uint64_t v61 = *(void *)(v58 + 16);
    unint64_t v62 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v61 + 32);
    uint64_t v63 = a1;
    swift_retain();
    v62(v56, sub_1001B170C, v59, v57, v61);
    swift_release();

    sub_1001B7EAC(v56, type metadata accessor for UpdateTrustRequest);
    return sub_1001B7EAC((uint64_t)v17, type metadata accessor for SignedPeerDynamicInfo);
  }
  else
  {
    id v46 = v78;
    uint64_t v47 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_100222090();
    sub_100003CC8(v48, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v49 = sub_100222070();
    os_log_type_t v50 = sub_100222500();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      id v78 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136446210;
      uint64_t v77 = v47;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v52 = sub_1002222C0();
      uint64_t v77 = sub_1001BEBDC(v52, v53, (uint64_t *)&v78);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Error preparing dynamic info: %{public}s", v51, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v76(v47);
    swift_errorRelease();
    return swift_errorRelease();
  }
}

uint64_t sub_10014F8EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  v38[1] = a4;
  uint64_t v39 = a3;
  v38[0] = a2;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Changes(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for UpdateTrustResponse(0);
  __chkstk_darwin(updated, v15);
  os_log_type_t v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029ED10);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (void *)((char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v21, (uint64_t *)&unk_10029ED10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = *v21;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100222090();
    sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v24 = sub_100222070();
    os_log_type_t v25 = sub_100222500();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v40 = v22;
      uint64_t v41 = v27;
      *(_DWORD *)id v26 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v28 = sub_1002222C0();
      uint64_t v40 = sub_1001BEBDC(v28, v29, &v41);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "updateTrust failed: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v39(v22);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    sub_1001B7B9C((uint64_t)v21, (uint64_t)v17, type metadata accessor for UpdateTrustResponse);
    sub_10000D830((uint64_t)&v17[*(int *)(updated + 24)], (uint64_t)v8, (uint64_t *)&unk_10029EC90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      *(void *)uint64_t v13 = 0;
      *((void *)v13 + 1) = 0xE000000000000000;
      *((void *)v13 + 2) = _swiftEmptyArrayStorage;
      *(_OWORD *)(v13 + 24) = xmmword_100229520;
      *(_OWORD *)(v13 + 40) = xmmword_100229520;
      v13[56] = 0;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v30 = sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
    }
    else
    {
      uint64_t v30 = sub_1001B7B9C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Changes);
    }
    __chkstk_darwin(v30, v31);
    v38[-4] = v13;
    v38[-3] = v33;
    LOBYTE(v38[-2]) = 0;
    sub_1002225C0();
    sub_1001B7EAC((uint64_t)v13, type metadata accessor for Changes);
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_100222090();
    sub_100003CC8(v34, (uint64_t)qword_10029E7D0);
    uint64_t v35 = sub_100222070();
    os_log_type_t v36 = sub_1002224E0();
    if (os_log_type_enabled(v35, v36))
    {
      os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "distrust succeeded", v37, 2u);
      swift_slowDealloc();
    }

    v39(0);
    return sub_1001B7EAC((uint64_t)v17, type metadata accessor for UpdateTrustResponse);
  }
}

uint64_t sub_100150078(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_100184C80(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.default.getter, "drop complete: %{public}s", 0xD000000000000014, 0x8000000100244530);
}

id sub_1001500B0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (!v8)
  {
    if (qword_100298EB8 != -1) {
LABEL_51:
    }
      swift_once();
    uint64_t v20 = sub_100222090();
    sub_100003CC8(v20, (uint64_t)qword_10029E7D0);
    uint64_t v21 = sub_100222070();
    os_log_type_t v22 = sub_100222500();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No dynamic info for self?", v23, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v17 = swift_allocError();
    long long v19 = xmmword_1002297D0;
    goto LABEL_12;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_100222270();
  uint64_t v12 = v11;

  LOBYTE(v9) = sub_100039584(v10, v12, a4);
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Self-drop not allowed", v16, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v17 = swift_allocError();
    long long v19 = xmmword_1002311F0;
LABEL_12:
    *(_OWORD *)uint64_t v18 = v19;
    *(unsigned char *)(v18 + 16) = 13;
    a2(v17);
    swift_errorRelease();
    id v24 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    return [v24 rollback];
  }
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v26 = a4 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & *(void *)(a4 + 56);
  a2 = (void (*)(uint64_t))((unint64_t)(v27 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  if (!v29) {
    goto LABEL_19;
  }
LABEL_18:
  unint64_t v31 = __clz(__rbit64(v29));
  v29 &= v29 - 1;
  for (unint64_t i = v31 | (v30 << 6); ; unint64_t i = __clz(__rbit64(v34)) + (v30 << 6))
  {
    os_log_type_t v36 = (uint64_t *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v38 = *v36;
    unint64_t v37 = v36[1];
    swift_bridgeObjectRetain();
    sub_1001509FC(a1, v38, v37);
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_18;
    }
LABEL_19:
    if (__OFADD__(v30++, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v30 >= (uint64_t)a2) {
      goto LABEL_36;
    }
    unint64_t v34 = *(void *)(v26 + 8 * v30);
    if (!v34) {
      break;
    }
LABEL_29:
    unint64_t v29 = (v34 - 1) & v34;
  }
  uint64_t v35 = v30 + 1;
  if (v30 + 1 >= (uint64_t)a2) {
    goto LABEL_36;
  }
  unint64_t v34 = *(void *)(v26 + 8 * v35);
  if (v34) {
    goto LABEL_28;
  }
  uint64_t v35 = v30 + 2;
  if (v30 + 2 >= (uint64_t)a2) {
    goto LABEL_36;
  }
  unint64_t v34 = *(void *)(v26 + 8 * v35);
  if (v34)
  {
LABEL_28:
    uint64_t v30 = v35;
    goto LABEL_29;
  }
  uint64_t v35 = v30 + 3;
  if (v30 + 3 < (uint64_t)a2)
  {
    unint64_t v34 = *(void *)(v26 + 8 * v35);
    if (!v34)
    {
      while (1)
      {
        uint64_t v30 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_50;
        }
        if (v30 >= (uint64_t)a2) {
          goto LABEL_36;
        }
        unint64_t v34 = *(void *)(v26 + 8 * v30);
        ++v35;
        if (v34) {
          goto LABEL_29;
        }
      }
    }
    goto LABEL_28;
  }
LABEL_36:
  swift_release();
  uint64_t v40 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v59 = 0;
  if ([v40 save:&v59])
  {
    uint64_t v41 = qword_100298EB8;
    id v42 = v59;
    if (v41 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_100222090();
    sub_100003CC8(v43, (uint64_t)qword_10029E7D0);
    uint64_t v44 = sub_100222070();
    os_log_type_t v45 = sub_100222520();
    if (os_log_type_enabled(v44, v45))
    {
      id v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Saved MOC to drop peer MOs", v46, 2u);
      swift_slowDealloc();
    }

    v57(0);
  }
  else
  {
    id v47 = v59;
    uint64_t v48 = sub_100221B40();

    swift_willThrow();
    unint64_t v49 = v57;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_100222090();
    sub_100003CC8(v50, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v51 = sub_100222070();
    os_log_type_t v52 = sub_100222500();
    if (os_log_type_enabled(v51, v52))
    {
      unint64_t v53 = (uint8_t *)swift_slowAlloc();
      id v54 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v53 = 138477827;
      swift_errorRetain();
      uint64_t v55 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v59 = v55;
      unint64_t v49 = v57;
      sub_100222690();
      *id v54 = v55;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Failed to save MOC to drop peers: %{private}@", v53, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v49(v48);
    swift_errorRelease();
    swift_errorRelease();
  }
  return objc_msgSend(v40, "rollback", v56, v57, v58);
}

void sub_1001509FC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_dbAdapter);
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = *(void **)(v7 + 24);
  swift_retain();
  uint64_t v10 = (void *)sub_1001A0BC8(v8, v9, a2, a3);
  swift_release();
  if (!v3)
  {
    if (v10)
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_100222090();
      sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_100222070();
      os_log_type_t v13 = sub_100222520();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136380675;
        swift_bridgeObjectRetain();
        sub_1001BEBDC(a2, a3, &v19);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Dropping MO for %{private}s", v14, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      [*(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc) deleteObject:v10];
    }
    else
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_100222090();
      sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
      swift_bridgeObjectRetain_n();
      uint64_t v16 = sub_100222070();
      os_log_type_t v17 = sub_100222520();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136380675;
        swift_bridgeObjectRetain();
        sub_1001BEBDC(a2, a3, &v19);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "MO for peer not found, but that's ok: %{private}s", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

uint64_t sub_100150D84(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  uint64_t v5 = v2;
  uint64_t v6 = sub_1001984DC(v5, 0xD00000000000001BLL, 0x8000000100244E70);

  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = qword_100298EB8;
  swift_retain();
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
  uint64_t v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "beginning a fetchEscrowContents", v12, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v13 = *(void **)&v5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v5;
  v14[3] = sub_1001B63C8;
  v14[4] = v7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1001B6424;
  *(void *)(v15 + 24) = v14;
  void v20[4] = sub_1001B8924;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  uint64_t v20[2] = sub_100112F58;
  v20[3] = &unk_1002864B0;
  uint64_t v16 = _Block_copy(v20);
  os_log_type_t v17 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  [v13 performBlockAndWait:v16];
  swift_release();
  swift_release();
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100151044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10, const char *a11, uint64_t a12, unint64_t a13)
{
  if (a7) {
    os_log_type_t v17 = sub_100222500();
  }
  else {
    os_log_type_t v17 = sub_1002224E0();
  }
  os_log_type_t v18 = v17;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100222090();
  sub_100003CC8(v19, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v20 = sub_100222070();
  if (os_log_type_enabled(v20, v18))
  {
    uint64_t v24 = a6;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446210;
    if (a7)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v29._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v29);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v22 = 0x203A726F727265;
    }
    else
    {
      uint64_t v22 = 0x73736563637573;
    }
    sub_1001BEBDC(v22, 0xE700000000000000, &v28);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v18, a11, v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a6 = v24;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(a12, a13);
  return a9(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1001512E4(uint64_t a1, void (*a2)(void, unint64_t, void, void, void, unint64_t, uint64_t))
{
  uint64_t v4 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (v5)
  {
    uint64_t v6 = v5;
    sub_100222270();

    id v7 = [*(id *)(a1 + v4) bottles];
    if (v7)
    {
      uint64_t v8 = v7;
      type metadata accessor for BottleMO();
      sub_1001A56AC(&qword_100299690, (void (*)(uint64_t))type metadata accessor for BottleMO);
      sub_100222430();
    }
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
    uint64_t v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "fetchEscrowContents failed", v12, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v14 = swift_allocError();
    long long v15 = xmmword_100231290;
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    os_log_type_t v17 = sub_100222070();
    os_log_type_t v18 = sub_1002224E0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "fetchEscrowContents failed", v19, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v14 = swift_allocError();
    long long v15 = xmmword_1002297D0;
  }
  *(_OWORD *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 16) = 13;
  a2(0, 0xF000000000000000, 0, 0, 0, 0xF000000000000000, v14);

  return swift_errorRelease();
}

uint64_t sub_100151C64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_100119E14(0xD000000000000036, 0x80000001002444F0);
  if (a3)
  {
    swift_errorRetain();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446210;
      uint64_t v19 = v17;
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v20._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v20);
      swift_bridgeObjectRelease();
      sub_1001B1FD4(a1, a2, 1);
      sub_1001BEBDC(0x203A726F727265, 0xE700000000000000, &v19);
      sub_100222690();
      swift_bridgeObjectRelease();
      sub_1001B1FD4(a1, a2, 1);
      sub_1001B1FD4(a1, a2, 1);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "fetchViableBottles failed with %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001B1FD4(a1, a2, 1);
      sub_1001B1FD4(a1, a2, 1);
    }

    swift_errorRetain();
    a5(0, 0, a1);
    sub_1001B1FD4(a1, a2, 1);
    return sub_1001B1FD4(a1, a2, 1);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134349312;
      sub_100222690();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2050;
      sub_100222690();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "fetchViableBottles succeeded with %{public}ld viable bottles and %{public}ld partial bottles", (uint8_t *)v12, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return a5(a1, a2, 0);
  }
}

void sub_100152084(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F040);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)v46 - v11;
  __chkstk_darwin(v10, v13);
  os_log_type_t v15 = (void *)((char *)v46 - v14);
  sub_10000D830(a1, (uint64_t)v46 - v14, &qword_10029F040);
  uint64_t ViableBottlesResponse = type metadata accessor for FetchViableBottlesResponse(0);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(ViableBottlesResponse - 8) + 48);
  if (v17((char *)v15, 1, ViableBottlesResponse) != 1)
  {
    uint64_t v22 = *v15;
    swift_bridgeObjectRetain();
    sub_1001B7EAC((uint64_t)v15, type metadata accessor for FetchViableBottlesResponse);
    sub_10000D830(a1, (uint64_t)v12, &qword_10029F040);
    p_vtable = VoucherMO.vtable;
    if (v17(v12, 1, ViableBottlesResponse) == 1)
    {
      sub_10004015C((uint64_t)v12, &qword_10029F040);
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_100222090();
      sub_100003CC8(v24, (uint64_t)qword_10029E7D0);
      os_log_type_t v25 = sub_100222070();
      os_log_type_t v26 = sub_1002224E0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "fetchViableBottles returned no partially viable bottles, but that's ok", v27, 2u);
        p_vtable = (void **)(VoucherMO + 24);
        swift_slowDealloc();
      }

      uint64_t v28 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v28 = (void *)*((void *)v12 + 1);
      swift_bridgeObjectRetain();
      sub_1001B7EAC((uint64_t)v12, type metadata accessor for FetchViableBottlesResponse);
    }
    sub_10000D830(a1, (uint64_t)v8, &qword_10029F040);
    if (v17(v8, 1, ViableBottlesResponse) == 1)
    {
      sub_10004015C((uint64_t)v8, &qword_10029F040);
      if (p_vtable[471] != (void *)-1) {
        swift_once();
      }
      uint64_t v29 = sub_100222090();
      sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
      uint64_t v30 = sub_100222070();
      os_log_type_t v31 = sub_1002224E0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "fetchViableBottles returned no legacy escrow records", v32, 2u);
        swift_slowDealloc();
      }

      uint64_t v33 = _swiftEmptyArrayStorage;
      uint64_t v34 = *(void *)(v22 + 16);
      if (v34)
      {
LABEL_20:
        v46[0] = v28;
        uint64_t v35 = *(void *)(type metadata accessor for EscrowPair(0) - 8);
        uint64_t v36 = v22 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        uint64_t v37 = *(void *)(v35 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_10015278C(v36, v2, (SEL *)&selRef_fullyViableEscrowRecords, sub_1001B8908, "fetchViableBottles already knows about record, re-adding entry, label = %{public}s", (SEL *)&selRef_removeFullyViableEscrowRecords_, 0, sub_1001B88EC);
          v36 += v37;
          --v34;
        }
        while (v34);
        swift_bridgeObjectRelease_n();
        uint64_t v28 = (void *)v46[0];
        uint64_t v38 = *(void *)(v46[0] + 16);
        if (v38)
        {
LABEL_23:
          uint64_t v39 = *(void *)(type metadata accessor for EscrowPair(0) - 8);
          uint64_t v40 = (uint64_t)v28
              + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
          uint64_t v41 = *(void *)(v39 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_10015278C(v40, v2, (SEL *)&selRef_partiallyViableEscrowRecords, sub_1001B63A4, "fetchViableBottles already knows about record, re-adding entry: %{public}s", (SEL *)&selRef_removePartiallyViableEscrowRecords_, 1u, sub_1001B6384);
            v40 += v41;
            --v38;
          }
          while (v38);
          swift_bridgeObjectRelease_n();
          uint64_t v42 = v33[2];
          if (v42) {
            goto LABEL_26;
          }
          goto LABEL_32;
        }
LABEL_31:
        swift_bridgeObjectRelease();
        uint64_t v42 = v33[2];
        if (v42)
        {
LABEL_26:
          uint64_t v43 = *(void *)(type metadata accessor for EscrowInformation(0) - 8);
          uint64_t v44 = (uint64_t)v33
              + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
          uint64_t v45 = *(void *)(v43 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_100154398(v44, v2);
            v44 += v45;
            --v42;
          }
          while (v42);
          swift_bridgeObjectRelease_n();
          return;
        }
LABEL_32:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v33 = (void *)*((void *)v8 + 2);
      swift_bridgeObjectRetain();
      sub_1001B7EAC((uint64_t)v8, type metadata accessor for FetchViableBottlesResponse);
      uint64_t v34 = *(void *)(v22 + 16);
      if (v34) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v28[2];
    if (v38) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
  sub_10004015C((uint64_t)v15, &qword_10029F040);
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100222090();
  sub_100003CC8(v18, (uint64_t)qword_10029E7D0);
  uint64_t v19 = sub_100222070();
  os_log_type_t v20 = sub_1002224E0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "fetchViableBottles returned no viable bottles", v21, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10015278C(uint64_t a1, uint64_t a2, SEL *a3, uint64_t (*a4)(id *), const char *a5, SEL *a6, unsigned int a7, uint64_t (*a8)(id *))
{
  uint64_t v114 = a8;
  unsigned int v113 = a7;
  uint64_t v110 = a6;
  id v109 = a5;
  unint64_t v112 = a4;
  uint64_t v118 = a3;
  uint64_t v122 = a2;
  uint64_t v9 = sub_1000046DC((uint64_t *)&unk_10029F060);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v120 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  os_log_type_t v15 = (char *)&v109 - v14;
  uint64_t v16 = type metadata accessor for EscrowInformation(0);
  uint64_t v119 = *(void **)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16, v17);
  unint64_t v111 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v20);
  uint64_t v121 = (const char **)((char *)&v109 - v21);
  uint64_t v22 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v22 - 8, v23);
  os_log_type_t v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for Bottle(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  unint64_t v115 = (char *)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v31);
  uint64_t v33 = (char *)&v109 - v32;
  unint64_t v116 = (uint8_t *)*(int *)(type metadata accessor for EscrowPair(0) + 20);
  uint64_t v117 = a1;
  uint64_t v34 = *(void *)&v116[a1];
  uint64_t v35 = v34
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v35, (uint64_t)v25, &qword_100299F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    *(_OWORD *)uint64_t v33 = xmmword_100229520;
    *((_OWORD *)v33 + 1) = xmmword_100229520;
    *((_OWORD *)v33 + 2) = xmmword_100229520;
    *((_OWORD *)v33 + 3) = xmmword_100229520;
    *((void *)v33 + 8) = 0;
    *((void *)v33 + 9) = 0xE000000000000000;
    *((void *)v33 + 10) = 0;
    *((void *)v33 + 11) = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_100299F38);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v25, (uint64_t)v33, type metadata accessor for Bottle);
  }
  uint64_t v36 = v34
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  sub_10000D830(v36, (uint64_t)v15, (uint64_t *)&unk_10029F060);
  uint64_t v37 = (uint64_t (*)(char *, uint64_t, uint64_t))v119[6];
  int v38 = v37(v15, 1, v16);
  uint64_t v39 = v121;
  if (v38 == 1)
  {
    void *v121 = 0;
    v39[1] = 0;
    id v39[3] = 0;
    v39[4] = 0;
    v39[2] = 0xE000000000000000;
    *((unsigned char *)v39 + 40) = 1;
    v39[6] = 0;
    *((unsigned char *)v39 + 56) = 1;
    v39[8] = 0;
    v39[9] = 0xE000000000000000;
    v39[10] = 0;
    v39[11] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v40 = (char *)v39 + *(int *)(v16 + 48);
    uint64_t v41 = sub_100221DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
    uint64_t v42 = (char *)v39 + *(int *)(v16 + 52);
    uint64_t v43 = type metadata accessor for EscrowInformation.Metadata(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
    sub_10004015C((uint64_t)v15, (uint64_t *)&unk_10029F060);
    uint64_t v34 = *(void *)&v116[v117];
  }
  else
  {
    sub_1001B7B9C((uint64_t)v15, (uint64_t)v121, type metadata accessor for EscrowInformation);
  }
  uint64_t v44 = v34
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  uint64_t v45 = v44;
  uint64_t v46 = (uint64_t)v120;
  sub_10000D830(v45, (uint64_t)v120, (uint64_t *)&unk_10029F060);
  int v47 = v37((char *)v46, 1, v16);
  sub_10004015C(v46, (uint64_t *)&unk_10029F060);
  if (v47 == 1)
  {
    uint64_t v48 = v122;
    uint64_t v49 = v123;
  }
  else
  {
    uint64_t v50 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
    uint64_t v48 = v122;
    id v51 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v122
                                                                + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), *v118));
    uint64_t v49 = v123;
    if (v51)
    {
      os_log_type_t v52 = v51;
      uint64_t v125 = 0;
      uint64_t v53 = type metadata accessor for EscrowRecordMO();
      uint64_t v54 = sub_1001A56AC((unint64_t *)&qword_10029F050, (void (*)(uint64_t))type metadata accessor for EscrowRecordMO);
      sub_100222430();

      if (v125)
      {
        uint64_t v119 = (void *)v54;
        uint64_t v120 = v33;
        __chkstk_darwin(v55, v56);
        *(&v109 - 2) = (const char *)v39;
        Swift::Int v58 = sub_10018E120(v112, (uint64_t)(&v109 - 4), v57, &qword_10029F058, (uint64_t (*)(void))type metadata accessor for EscrowRecordMO);
        if ((v58 & 0xC000000000000001) != 0) {
          uint64_t v59 = sub_100222750();
        }
        else {
          uint64_t v59 = *(void *)(v58 + 16);
        }
        uint64_t v60 = (uint64_t)v111;
        if (v59)
        {
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v61 = sub_100222090();
          sub_100003CC8(v61, (uint64_t)qword_10029E7D0);
          sub_1001B7C04((uint64_t)v39, v60, type metadata accessor for EscrowInformation);
          unint64_t v62 = sub_100222070();
          os_log_type_t v63 = sub_1002224E0();
          if (os_log_type_enabled(v62, v63))
          {
            uint64_t v123 = v49;
            uint64_t v64 = swift_slowAlloc();
            uint64_t v118 = (SEL *)v53;
            uint64_t v65 = (uint8_t *)v64;
            uint64_t v117 = swift_slowAlloc();
            uint64_t v125 = v117;
            *(_DWORD *)uint64_t v65 = 136446210;
            unint64_t v116 = v65 + 4;
            uint64_t v66 = *(void *)(v60 + 8);
            unint64_t v67 = *(void *)(v60 + 16);
            swift_bridgeObjectRetain();
            uint64_t v124 = sub_1001BEBDC(v66, v67, &v125);
            uint64_t v48 = v122;
            sub_100222690();
            uint64_t v49 = v123;
            swift_bridgeObjectRelease();
            sub_1001B7EAC(v60, type metadata accessor for EscrowInformation);
            _os_log_impl((void *)&_mh_execute_header, v62, v63, v109, v65, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_1001B7EAC(v60, type metadata accessor for EscrowInformation);
          }

          id v68 = *(id *)(v48 + v50);
          Class isa = sub_100222420().super.isa;
          swift_release();
          objc_msgSend(v68, *v110, isa);

          uint64_t v39 = v121;
        }
        else
        {
          swift_release();
        }
        sub_1001FB26C((uint64_t)v39, v113);
        uint64_t v33 = v120;
      }
    }
  }
  uint64_t v70 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v71 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v48
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "bottles", v109));
  if (!v71) {
    goto LABEL_33;
  }
  uint64_t v72 = v71;
  uint64_t v125 = 0;
  type metadata accessor for BottleMO();
  sub_1001A56AC(&qword_100299690, (void (*)(uint64_t))type metadata accessor for BottleMO);
  sub_100222430();

  if (!v125) {
    goto LABEL_33;
  }
  __chkstk_darwin(v73, v74);
  *(&v109 - 2) = v33;
  Swift::Int v76 = sub_10018E120(v114, (uint64_t)(&v109 - 4), v75, (uint64_t *)&unk_10029EE90, (uint64_t (*)(void))type metadata accessor for BottleMO);
  uint64_t v77 = (v76 & 0xC000000000000001) != 0 ? sub_100222750() : *(void *)(v76 + 16);
  uint64_t v78 = (uint64_t)v115;
  swift_release();
  if (v77)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_100222090();
    sub_100003CC8(v79, (uint64_t)qword_10029E7D0);
    sub_1001B7C04((uint64_t)v33, v78, type metadata accessor for Bottle);
    uint64_t v80 = sub_100222070();
    os_log_type_t v81 = sub_1002224E0();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      uint64_t v120 = v33;
      *(_DWORD *)uint64_t v82 = 136446210;
      uint64_t v83 = *(void *)(v78 + 80);
      unint64_t v84 = *(void *)(v78 + 88);
      swift_bridgeObjectRetain();
      uint64_t v124 = sub_1001BEBDC(v83, v84, &v125);
      uint64_t v33 = v120;
      sub_100222690();
      uint64_t v39 = v121;
      swift_bridgeObjectRelease();
      sub_1001B7EAC(v78, type metadata accessor for Bottle);
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "fetchViableBottles already knows about bottle: %{public}s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001B7EAC(v78, type metadata accessor for Bottle);
    }
  }
  else
  {
LABEL_33:
    type metadata accessor for BottleMO();
    id v85 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:*(void *)(v48 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc)];
    swift_bridgeObjectRetain();
    NSString v86 = sub_100222260();
    swift_bridgeObjectRelease();
    [v85 setPeerID:v86];

    swift_bridgeObjectRetain();
    NSString v87 = sub_100222260();
    swift_bridgeObjectRelease();
    [v85 setBottleID:v87];

    uint64_t v88 = *((void *)v33 + 2);
    unint64_t v89 = *((void *)v33 + 3);
    sub_1000059E8(v88, v89);
    Class v90 = sub_100221BD0().super.isa;
    sub_100005A40(v88, v89);
    [v85 setEscrowedSigningSPKI:v90];

    uint64_t v91 = *((void *)v33 + 4);
    unint64_t v92 = *((void *)v33 + 5);
    sub_1000059E8(v91, v92);
    Class v93 = sub_100221BD0().super.isa;
    sub_100005A40(v91, v92);
    [v85 setSignatureUsingEscrowKey:v93];

    uint64_t v94 = *((void *)v33 + 6);
    unint64_t v95 = *((void *)v33 + 7);
    sub_1000059E8(v94, v95);
    Class v96 = sub_100221BD0().super.isa;
    sub_100005A40(v94, v95);
    [v85 setSignatureUsingPeerKey:v96];

    uint64_t v97 = *(void *)v33;
    unint64_t v98 = *((void *)v33 + 1);
    sub_1000059E8(*(void *)v33, v98);
    Class v99 = sub_100221BD0().super.isa;
    sub_100005A40(v97, v98);
    [v85 setContents:v99];

    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v100 = sub_100222090();
    sub_100003CC8(v100, (uint64_t)qword_10029E7D0);
    uint64_t v80 = v85;
    uint64_t v101 = sub_100222070();
    os_log_type_t v102 = sub_1002224E0();
    if (os_log_type_enabled(v101, v102))
    {
      unint64_t v103 = (uint8_t *)swift_slowAlloc();
      uint64_t v119 = (void *)swift_slowAlloc();
      uint64_t v120 = v33;
      uint64_t v123 = v49;
      *(_DWORD *)unint64_t v103 = 138543362;
      uint64_t v125 = (uint64_t)v80;
      uint64_t v104 = v70;
      Swift::String v105 = v80;
      uint64_t v39 = v121;
      sub_100222690();
      *uint64_t v119 = v80;

      uint64_t v70 = v104;
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "fetchViableBottles saving new bottle: %{public}@", v103, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      uint64_t v33 = v120;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v101 = v80;
    }
    uint64_t v106 = v122;

    id v107 = *(id *)(v106 + v70);
    [v107 addBottlesObject:v80];
  }
  sub_1001B7EAC((uint64_t)v39, type metadata accessor for EscrowInformation);
  return sub_1001B7EAC((uint64_t)v33, type metadata accessor for Bottle);
}

uint64_t sub_100153620(void **a1, uint64_t a2)
{
  uint64_t v5 = sub_1000046DC(&qword_10029A098);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v9 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EscrowInformation(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  id v18 = [v17 label];
  if (!v18)
  {
    sub_1001B7C04(a2, (uint64_t)v16, type metadata accessor for EscrowInformation);
    goto LABEL_10;
  }
  uint64_t v19 = v18;
  uint64_t v40 = v9;
  uint64_t v42 = v2;
  uint64_t v20 = sub_100222270();
  uint64_t v22 = v21;

  if (v20 == *(void *)(a2 + 8) && v22 == *(void *)(a2 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1001B7C04(a2, (uint64_t)v16, type metadata accessor for EscrowInformation);
    goto LABEL_7;
  }
  char v23 = sub_100222A30();
  swift_bridgeObjectRelease();
  sub_1001B7C04(a2, (uint64_t)v16, type metadata accessor for EscrowInformation);
  if ((v23 & 1) == 0)
  {
LABEL_10:
    sub_1001B7EAC((uint64_t)v16, type metadata accessor for EscrowInformation);
LABEL_25:
    char v37 = 0;
    return v37 & 1;
  }
LABEL_7:
  id v24 = [v17 escrowMetadata];
  if (v24)
  {
    os_log_type_t v25 = v24;
    id v26 = [v24 bottleID];

    if (v26)
    {
      uint64_t v27 = sub_100222270();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
  }
  uint64_t v30 = v40;
  sub_10000D830((uint64_t)&v16[*(int *)(v13 + 52)], (uint64_t)v8, &qword_10029A098);
  uint64_t v31 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v8, 1, v41) == 1)
  {
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v32 = *(int *)(v31 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)&v12[v32] = qword_100299ED8;
    swift_retain();
    sub_10004015C((uint64_t)v8, &qword_10029A098);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v8, (uint64_t)v12, type metadata accessor for EscrowInformation.Metadata);
  }
  uint64_t v33 = (uint64_t *)(*(void *)&v12[*(int *)(v31 + 20)]
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
  swift_beginAccess();
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  swift_bridgeObjectRetain();
  sub_1001B7EAC((uint64_t)v12, type metadata accessor for EscrowInformation.Metadata);
  if (!v29)
  {
    sub_1001B7EAC((uint64_t)v16, type metadata accessor for EscrowInformation);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (v27 == v35 && v29 == v34) {
    char v37 = 1;
  }
  else {
    char v37 = sub_100222A30();
  }
  swift_bridgeObjectRelease();
  sub_1001B7EAC((uint64_t)v16, type metadata accessor for EscrowInformation);
  swift_bridgeObjectRelease();
  return v37 & 1;
}

uint64_t sub_100153A9C(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Bottle(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v12 = &v70[-v11];
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = &v70[-v15];
  uint64_t v18 = __chkstk_darwin(v14, v17);
  uint64_t v20 = &v70[-v19];
  __chkstk_darwin(v18, v21);
  char v23 = &v70[-v22];
  id v72 = *a1;
  id v24 = [v72 peerID];
  if (!v24)
  {
    sub_1001B7C04(a2, (uint64_t)v23, type metadata accessor for Bottle);
    goto LABEL_17;
  }
  os_log_type_t v25 = v24;
  uint64_t v26 = sub_100222270();
  uint64_t v28 = v27;

  if (v26 == *(void *)(a2 + 64) && v28 == *(void *)(a2 + 72))
  {
    swift_bridgeObjectRelease();
    sub_1001B7C04(a2, (uint64_t)v23, type metadata accessor for Bottle);
  }
  else
  {
    char v30 = sub_100222A30();
    swift_bridgeObjectRelease();
    sub_1001B7C04(a2, (uint64_t)v23, type metadata accessor for Bottle);
    if ((v30 & 1) == 0) {
      goto LABEL_17;
    }
  }
  id v31 = [v72 bottleID];
  if (!v31)
  {
LABEL_17:
    sub_1001B7EAC((uint64_t)v23, type metadata accessor for Bottle);
    sub_1001B7C04(a2, (uint64_t)v20, type metadata accessor for Bottle);
    goto LABEL_18;
  }
  uint64_t v32 = v31;
  uint64_t v33 = sub_100222270();
  uint64_t v35 = v34;

  if (v33 == *((void *)v23 + 10) && v35 == *((void *)v23 + 11))
  {
    sub_1001B7EAC((uint64_t)v23, type metadata accessor for Bottle);
    swift_bridgeObjectRelease();
    sub_1001B7C04(a2, (uint64_t)v20, type metadata accessor for Bottle);
  }
  else
  {
    char v37 = sub_100222A30();
    sub_1001B7EAC((uint64_t)v23, type metadata accessor for Bottle);
    swift_bridgeObjectRelease();
    sub_1001B7C04(a2, (uint64_t)v20, type metadata accessor for Bottle);
    if ((v37 & 1) == 0)
    {
LABEL_18:
      sub_1001B7EAC((uint64_t)v20, type metadata accessor for Bottle);
LABEL_19:
      sub_1001B7C04(a2, (uint64_t)v16, type metadata accessor for Bottle);
LABEL_20:
      sub_1001B7EAC((uint64_t)v16, type metadata accessor for Bottle);
LABEL_21:
      sub_1001B7C04(a2, (uint64_t)v12, type metadata accessor for Bottle);
LABEL_22:
      sub_1001B7EAC((uint64_t)v12, type metadata accessor for Bottle);
LABEL_23:
      sub_1001B7C04(a2, (uint64_t)v8, type metadata accessor for Bottle);
LABEL_24:
      sub_1001B7EAC((uint64_t)v8, type metadata accessor for Bottle);
      goto LABEL_25;
    }
  }
  id v40 = [v72 escrowedSigningSPKI];
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = sub_100221BF0();
    unint64_t v44 = v43;

    uint64_t v45 = *((void *)v20 + 2);
    unint64_t v46 = *((void *)v20 + 3);
    if (v44 >> 60 != 15)
    {
      sub_1000059E8(*((void *)v20 + 2), *((void *)v20 + 3));
      sub_10004BDEC(v42, v44);
      int v71 = sub_10003FE7C(v42, v44, v45, v46);
      sub_100005A40(v45, v46);
      sub_100039FCC(v42, v44);
      sub_1001B7EAC((uint64_t)v20, type metadata accessor for Bottle);
      sub_100039FCC(v42, v44);
      sub_1001B7C04(a2, (uint64_t)v16, type metadata accessor for Bottle);
      if ((v71 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v42 = 0;
    uint64_t v45 = *((void *)v20 + 2);
    unint64_t v46 = *((void *)v20 + 3);
    unint64_t v44 = 0xF000000000000000;
  }
  sub_1000059E8(v45, v46);
  sub_1001B7EAC((uint64_t)v20, type metadata accessor for Bottle);
  sub_100039FCC(v42, v44);
  if (v46 >> 60 != 15)
  {
    sub_100039FCC(v45, v46);
    goto LABEL_19;
  }
  sub_1001B7C04(a2, (uint64_t)v16, type metadata accessor for Bottle);
LABEL_35:
  id v47 = [v72 signatureUsingEscrowKey];
  if (v47)
  {
    uint64_t v48 = v47;
    uint64_t v49 = sub_100221BF0();
    unint64_t v51 = v50;

    uint64_t v52 = *((void *)v16 + 4);
    unint64_t v53 = *((void *)v16 + 5);
    if (v51 >> 60 != 15)
    {
      sub_1000059E8(*((void *)v16 + 4), *((void *)v16 + 5));
      sub_10004BDEC(v49, v51);
      char v54 = sub_10003FE7C(v49, v51, v52, v53);
      sub_100005A40(v52, v53);
      sub_100039FCC(v49, v51);
      sub_1001B7EAC((uint64_t)v16, type metadata accessor for Bottle);
      sub_100039FCC(v49, v51);
      sub_1001B7C04(a2, (uint64_t)v12, type metadata accessor for Bottle);
      if ((v54 & 1) == 0) {
        goto LABEL_22;
      }
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v52 = *((void *)v16 + 4);
    unint64_t v53 = *((void *)v16 + 5);
    unint64_t v51 = 0xF000000000000000;
  }
  sub_1000059E8(v52, v53);
  sub_1001B7EAC((uint64_t)v16, type metadata accessor for Bottle);
  sub_100039FCC(v49, v51);
  if (v53 >> 60 != 15)
  {
    sub_100039FCC(v52, v53);
    goto LABEL_21;
  }
  sub_1001B7C04(a2, (uint64_t)v12, type metadata accessor for Bottle);
LABEL_43:
  id v55 = [v72 signatureUsingPeerKey];
  if (v55)
  {
    uint64_t v56 = v55;
    uint64_t v57 = sub_100221BF0();
    unint64_t v59 = v58;

    uint64_t v60 = *((void *)v12 + 6);
    unint64_t v61 = *((void *)v12 + 7);
    if (v59 >> 60 != 15)
    {
      sub_1000059E8(*((void *)v12 + 6), *((void *)v12 + 7));
      sub_10004BDEC(v57, v59);
      char v62 = sub_10003FE7C(v57, v59, v60, v61);
      sub_100005A40(v60, v61);
      sub_100039FCC(v57, v59);
      sub_1001B7EAC((uint64_t)v12, type metadata accessor for Bottle);
      sub_100039FCC(v57, v59);
      sub_1001B7C04(a2, (uint64_t)v8, type metadata accessor for Bottle);
      if ((v62 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_51;
    }
  }
  else
  {
    uint64_t v57 = 0;
    uint64_t v60 = *((void *)v12 + 6);
    unint64_t v61 = *((void *)v12 + 7);
    unint64_t v59 = 0xF000000000000000;
  }
  sub_1000059E8(v60, v61);
  sub_1001B7EAC((uint64_t)v12, type metadata accessor for Bottle);
  sub_100039FCC(v57, v59);
  if (v61 >> 60 != 15)
  {
    sub_100039FCC(v60, v61);
    goto LABEL_23;
  }
  sub_1001B7C04(a2, (uint64_t)v8, type metadata accessor for Bottle);
LABEL_51:
  id v63 = [v72 contents];
  if (v63)
  {
    uint64_t v64 = v63;
    uint64_t v65 = sub_100221BF0();
    unint64_t v67 = v66;

    uint64_t v68 = *(void *)v8;
    unint64_t v69 = *((void *)v8 + 1);
    if (v67 >> 60 != 15)
    {
      sub_1000059E8(*(void *)v8, *((void *)v8 + 1));
      sub_10004BDEC(v65, v67);
      char v38 = sub_10003FE7C(v65, v67, v68, v69);
      sub_100005A40(v68, v69);
      sub_100039FCC(v65, v67);
      sub_1001B7EAC((uint64_t)v8, type metadata accessor for Bottle);
      sub_100039FCC(v65, v67);
      return v38 & 1;
    }
  }
  else
  {
    uint64_t v65 = 0;
    uint64_t v68 = *(void *)v8;
    unint64_t v69 = *((void *)v8 + 1);
    unint64_t v67 = 0xF000000000000000;
  }
  sub_1000059E8(v68, v69);
  sub_1001B7EAC((uint64_t)v8, type metadata accessor for Bottle);
  sub_100039FCC(v65, v67);
  if (v69 >> 60 == 15)
  {
    char v38 = 1;
    return v38 & 1;
  }
  sub_100039FCC(v68, v69);
LABEL_25:
  char v38 = 0;
  return v38 & 1;
}

void sub_100154398(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EscrowInformation(0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v13 = (char *)v48 - v12;
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)v48 - v15;
  uint64_t v17 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "legacyEscrowRecords"));
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v57 = 0;
    uint64_t v20 = type metadata accessor for EscrowRecordMO();
    uint64_t v55 = sub_1001A56AC((unint64_t *)&qword_10029F050, (void (*)(uint64_t))type metadata accessor for EscrowRecordMO);
    sub_100222430();

    if (v57)
    {
      uint64_t v54 = v20;
      __chkstk_darwin(v21, v22);
      v48[-2] = a1;
      Swift::Int v24 = sub_10018E120(sub_1001B6364, (uint64_t)&v48[-4], v23, &qword_10029F058, (uint64_t (*)(void))type metadata accessor for EscrowRecordMO);
      if ((v24 & 0xC000000000000001) != 0)
      {
        uint64_t v25 = sub_100222750();
        p_vtable = VoucherMO.vtable;
        if (v25)
        {
LABEL_5:
          unint64_t v53 = v13;
          if (p_vtable[471] != (void *)-1) {
            swift_once();
          }
          uint64_t v27 = sub_100222090();
          sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
          sub_1001B7C04(a1, (uint64_t)v16, type metadata accessor for EscrowInformation);
          uint64_t v28 = sub_100222070();
          os_log_type_t v29 = sub_1002224E0();
          if (os_log_type_enabled(v28, v29))
          {
            uint64_t v52 = v2;
            uint64_t v30 = swift_slowAlloc();
            unint64_t v51 = v9;
            id v31 = (uint8_t *)v30;
            uint64_t v49 = swift_slowAlloc();
            uint64_t v57 = v49;
            uint64_t v50 = a2;
            *(_DWORD *)id v31 = 136446210;
            v48[1] = v31 + 4;
            uint64_t v32 = *((void *)v16 + 1);
            unint64_t v33 = *((void *)v16 + 2);
            swift_bridgeObjectRetain();
            uint64_t v56 = sub_1001BEBDC(v32, v33, &v57);
            a2 = v50;
            sub_100222690();
            swift_bridgeObjectRelease();
            sub_1001B7EAC((uint64_t)v16, type metadata accessor for EscrowInformation);
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "fetchViableBottles already knows about legacy record %{public}s, re-adding entry", v31, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v9 = v51;
            swift_slowDealloc();
          }
          else
          {
            sub_1001B7EAC((uint64_t)v16, type metadata accessor for EscrowInformation);
          }

          uint64_t v13 = v53;
          id v34 = *(id *)(a2 + v17);
          Class isa = sub_100222420().super.isa;
          swift_release();
          [v34 removeLegacyEscrowRecords:isa];

LABEL_13:
          v58._countAndFlagsBits = 0x656C62756F642ELL;
          v58._object = (void *)0xE700000000000000;
          if (sub_100222350(v58))
          {
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v36 = sub_100222090();
            sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
            sub_1001B7C04(a1, (uint64_t)v13, type metadata accessor for EscrowInformation);
            char v37 = sub_100222070();
            os_log_type_t v38 = sub_1002224E0();
            if (os_log_type_enabled(v37, v38))
            {
              uint64_t v39 = (uint8_t *)swift_slowAlloc();
              uint64_t v57 = swift_slowAlloc();
              *(_DWORD *)uint64_t v39 = 136446210;
              uint64_t v40 = (uint64_t)v13;
              uint64_t v41 = *((void *)v13 + 1);
              unint64_t v42 = *((void *)v13 + 2);
              swift_bridgeObjectRetain();
              uint64_t v56 = sub_1001BEBDC(v41, v42, &v57);
              sub_100222690();
              swift_bridgeObjectRelease();
              sub_1001B7EAC(v40, type metadata accessor for EscrowInformation);
              unint64_t v43 = "ignoring double enrollment record %{public}s";
LABEL_25:
              _os_log_impl((void *)&_mh_execute_header, v37, v38, v43, v39, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
LABEL_28:

              return;
            }
            uint64_t v44 = (uint64_t)v13;
          }
          else
          {
            v59._object = (void *)0x8000000100244E50;
            v59._countAndFlagsBits = 0xD000000000000016;
            if (sub_100222340(v59))
            {
              sub_1001FB26C(a1, 2);
              return;
            }
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v45 = sub_100222090();
            sub_100003CC8(v45, (uint64_t)qword_10029E7D0);
            sub_1001B7C04(a1, (uint64_t)v9, type metadata accessor for EscrowInformation);
            char v37 = sub_100222070();
            os_log_type_t v38 = sub_1002224E0();
            if (os_log_type_enabled(v37, v38))
            {
              uint64_t v39 = (uint8_t *)swift_slowAlloc();
              uint64_t v57 = swift_slowAlloc();
              *(_DWORD *)uint64_t v39 = 136446210;
              uint64_t v46 = *((void *)v9 + 1);
              unint64_t v47 = *((void *)v9 + 2);
              swift_bridgeObjectRetain();
              uint64_t v56 = sub_1001BEBDC(v46, v47, &v57);
              sub_100222690();
              swift_bridgeObjectRelease();
              sub_1001B7EAC((uint64_t)v9, type metadata accessor for EscrowInformation);
              unint64_t v43 = "ignoring non-iCDP record: %{public}s";
              goto LABEL_25;
            }
            uint64_t v44 = (uint64_t)v9;
          }
          sub_1001B7EAC(v44, type metadata accessor for EscrowInformation);
          goto LABEL_28;
        }
      }
      else
      {
        p_vtable = (void **)(VoucherMO + 24);
        if (*(void *)(v24 + 16)) {
          goto LABEL_5;
        }
      }
      swift_release();
      goto LABEL_13;
    }
  }
}

uint64_t sub_100154B04(id *a1, uint64_t a2)
{
  id v3 = [*a1 label];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_100222270();
    uint64_t v7 = v6;

    if (v5 == *(void *)(a2 + 8) && v7 == *(void *)(a2 + 16)) {
      char v9 = 1;
    }
    else {
      char v9 = sub_100222A30();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_100154BAC(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if ((a3 & 1) == 0) {
    return a4(a1, a2, 0);
  }
  swift_errorRetain();
  a4(0, 0, a1);

  return sub_1001B1FD4(a1, a2, 1);
}

uint64_t sub_100154C40(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029E7D0);
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "beginning a removeEscrowCache", v9, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  uint64_t v10 = v3;
  uint64_t v11 = sub_1001984DC(v10, 0xD000000000000019, 0x8000000100244E30);

  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a1;
  v12[4] = a2;
  uint64_t v13 = *(void **)&v10[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v10;
  v14[3] = sub_1001B62B8;
  v14[4] = v12;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1001B6310;
  *(void *)(v15 + 24) = v14;
  void v20[4] = sub_1001B8924;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  uint64_t v20[2] = sub_100112F58;
  v20[3] = &unk_100286410;
  uint64_t v16 = _Block_copy(v20);
  uint64_t v17 = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v13 performBlockAndWait:v16];
  swift_release();
  swift_release();
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

id sub_100154F08()
{
  uint64_t v1 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) fullyViableEscrowRecords];
  if (v2)
  {
    id v3 = v2;
    [*(id *)(v0 + v1) removeFullyViableEscrowRecords:v2];
  }
  id v4 = [*(id *)(v0 + v1) partiallyViableEscrowRecords];
  if (v4)
  {
    uint64_t v5 = v4;
    [*(id *)(v0 + v1) removePartiallyViableEscrowRecords:v4];
  }
  id v6 = [*(id *)(v0 + v1) legacyEscrowRecords];
  if (v6)
  {
    uint64_t v7 = v6;
    [*(id *)(v0 + v1) removeLegacyEscrowRecords:v6];
  }
  os_log_type_t v8 = *(void **)(v0 + v1);

  return [v8 setEscrowFetchDate:0];
}

uint64_t sub_100154FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  os_log_type_t v8 = v7;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100222090();
  sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
  uint64_t v16 = sub_100222070();
  os_log_type_t v17 = sub_1002224E0();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v18 = 134217984;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "beginning a fetchViableBottles from source %ld", v18, 0xCu);
    swift_slowDealloc();
  }

  if (a1 == 2) {
    return sub_1001572C8(a2, a3, a4, a5, a6, a7);
  }
  if (a1 == 1) {
    return sub_100155860(0, a6, a7);
  }
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v20[2] = a6;
  v20[3] = a7;
  void v20[4] = v8;
  v20[5] = a2;
  void v20[6] = a3;
  v20[7] = a4;
  v20[8] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  id v21 = v8;
  swift_bridgeObjectRetain();
  sub_100155860(1, (uint64_t)sub_1001B627C, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1001551FC(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((a3 & 1) == 0 && (*(void *)(a1 + 16) || *(void *)(a2 + 16)))
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    os_log_type_t v17 = sub_100222070();
    os_log_type_t v18 = sub_1002224E0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "fetchViableBottlesFromCache returned bottles", v19, 2u);
      swift_slowDealloc();
    }

    return a4(a1, a2, 0);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_100222090();
    sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
    uint64_t v22 = sub_100222070();
    os_log_type_t v23 = sub_1002224E0();
    if (os_log_type_enabled(v22, v23))
    {
      Swift::Int v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "fetchViableBottlesFromCache did not return any bottles, checking cuttlefish", v24, 2u);
      swift_slowDealloc();
    }

    return sub_1001572C8(a7, a8, a9, a10, (uint64_t)a4, a5);
  }
}

uint64_t sub_100155410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  char v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134217984;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "starting fetchEscrowRecordsWithSemaphore from source %ld", v11, 0xCu);
    swift_slowDealloc();
  }

  if (a1 == 2)
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a2;
    v13[3] = a3;
    v13[4] = v4;
    swift_retain();
    id v14 = v4;
    sub_1001572C8(0, 0, 0, 0, (uint64_t)sub_1001B61F0, (uint64_t)v13);
  }
  else
  {
    if (a1 == 1) {
      return sub_100155DF4(0, a2, a3);
    }
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a2;
    v15[3] = a3;
    v15[4] = v4;
    swift_retain();
    id v16 = v4;
    sub_100155DF4(1, (uint64_t)sub_1001B61DC, (uint64_t)v15);
  }
  return swift_release();
}

uint64_t sub_100155618(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, void), uint64_t a4, void *a5)
{
  if ((a2 & 1) != 0 || !*(void *)(a1 + 16))
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100222090();
    sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
    uint64_t v15 = sub_100222070();
    os_log_type_t v16 = sub_1002224E0();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "fetchEscrowRecordsFromCache did not return any records, checking cuttlefish", v17, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v18 = (void *)swift_allocObject();
    v18[2] = a3;
    v18[3] = a4;
    v18[4] = a5;
    swift_retain();
    id v19 = a5;
    sub_1001572C8(0, 0, 0, 0, (uint64_t)sub_1001B895C, (uint64_t)v18);
    return swift_release();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
    os_log_type_t v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "fetchEscrowRecordsFromCache returned records", v12, 2u);
      swift_slowDealloc();
    }

    return a3(a1, 0);
  }
}

uint64_t sub_100155860(char a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  uint64_t v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 67109120;
    LODWORD(v19[0]) = a1 & 1;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "starting fetchViableBottlesFromCacheWithSemaphore and will check timeout: %{BOOL}d", v11, 8u);
    swift_slowDealloc();
  }

  uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v4;
  *(unsigned char *)(v13 + 24) = a1 & 1;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1001B6170;
  *(void *)(v14 + 24) = v13;
  v19[4] = sub_1001B8924;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100112F58;
  v19[3] = &unk_1002862D0;
  uint64_t v15 = _Block_copy(v19);
  os_log_type_t v16 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  [v12 performBlockAndWait:v15];
  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100155AC8(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t, void))
{
  uint64_t v5 = qword_100298EB8;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029E7D0);
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67109120;
    LODWORD(v13) = a2 & 1;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "starting fetchFromEscrowCacheWithSemaphore and will check timeout: %{BOOL}d", v9, 8u);
    swift_slowDealloc();
  }

  __chkstk_darwin(v10, v11);
  sub_1000046DC((uint64_t *)&unk_10029F030);
  sub_1002225C0();
  a3(v13, v14, v15);
  sub_1001B1FD4(v13, v14, v15);
  return swift_release();
}

BOOL sub_100155CC4(uint64_t *a1)
{
  id v2 = sub_1001FEE08();
  id v3 = [v2 viableBottles];
  uint64_t v4 = sub_1002223C0();

  *a1 = v4;
  id v5 = [v2 partialBottles];
  uint64_t v6 = sub_1002223C0();

  a1[1] = v6;
  id v7 = [v2 viableBottles];
  uint64_t v8 = sub_1002223C0();

  uint64_t v9 = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v9)
  {

    return 0;
  }
  else
  {
    id v11 = [v2 partialBottles];
    uint64_t v12 = sub_1002223C0();

    uint64_t v13 = *(void *)(v12 + 16);
    swift_bridgeObjectRelease();
    return v13 == 0;
  }
}

uint64_t sub_100155DF4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  uint64_t v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v11 = 67109120;
    LODWORD(v19[0]) = a1 & 1;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "starting fetchEscrowRecordsFromCacheWithSemaphore and will check timeout: %{BOOL}d", v11, 8u);
    swift_slowDealloc();
  }

  uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v4;
  *(unsigned char *)(v13 + 24) = a1 & 1;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1001B60B8;
  *(void *)(v14 + 24) = v13;
  v19[4] = sub_1001B8924;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100112F58;
  v19[3] = &unk_100286258;
  unsigned __int8 v15 = _Block_copy(v19);
  os_log_type_t v16 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  [v12 performBlockAndWait:v15];
  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10015605C(uint64_t a1, char a2, void (*a3)(uint64_t, void))
{
  uint64_t v5 = qword_100298EB8;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029E7D0);
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67109120;
    LODWORD(v13) = a2 & 1;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "starting fetchFromEscrowCacheWithSemaphore and will check timeout: %{BOOL}d", v9, 8u);
    swift_slowDealloc();
  }

  __chkstk_darwin(v10, v11);
  sub_1000046DC(&qword_10029F048);
  sub_1002225C0();
  a3(v13, v14);
  sub_1001B6120(v13, v14);
  return swift_release();
}

uint64_t sub_100156250(void *a1)
{
  sub_1001FEFA4();
  unint64_t v3 = v2;
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    os_log_type_t v18 = a1;
    if (v4) {
      goto LABEL_3;
    }
LABEL_17:
    id v7 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease_n();
    *os_log_type_t v18 = v7;
    return v7[2] == 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_100222970();
  uint64_t v4 = result;
  os_log_type_t v18 = a1;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    id v7 = _swiftEmptyArrayStorage;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_100222880();
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      id v10 = [v8 data];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_100221BF0();
        uint64_t v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v7 = sub_1001881D4(0, v7[2] + 1, 1, v7);
        }
        unint64_t v16 = v7[2];
        unint64_t v15 = v7[3];
        if (v16 >= v15 >> 1) {
          id v7 = sub_1001881D4((void *)(v15 > 1), v16 + 1, 1, v7);
        }
        _OWORD v7[2] = v16 + 1;
        os_log_type_t v17 = &v7[2 * v16];
        void v17[4] = v12;
        v17[5] = v14;
      }
      else
      {
      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_100156404(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v55 = a3;
  uint64_t v6 = sub_100221CB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v9, v12);
  unint64_t v15 = (char *)&v54 - v14;
  __chkstk_darwin(v13, v16);
  uint64_t v54 = (char *)&v54 - v17;
  uint64_t v18 = sub_1000046DC(&qword_10029ED28);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v54 - v24;
  if (a1(&v56))
  {
    id v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v55
                                                                + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "escrowFetchDate"));
    if (v26)
    {
      uint64_t v27 = v26;
      sub_100221C80();

      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v25, 1, v6) != 1)
      {
        sub_10004015C((uint64_t)v25, &qword_10029ED28);
        goto LABEL_5;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v25, 1, 1, v6);
    }
    sub_10004015C((uint64_t)v25, &qword_10029ED28);
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_100222090();
    sub_100003CC8(v43, (uint64_t)qword_10029E7D0);
    uint64_t v44 = sub_100222070();
    os_log_type_t v45 = sub_1002224E0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "no cached records were found, no saved escrowFetchDate either, returning no cache error", v46, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v38 = swift_allocError();
    long long v48 = xmmword_1002312A0;
    goto LABEL_32;
  }
LABEL_5:
  if (a4)
  {
    id v28 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v55
                                                                + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "escrowFetchDate"));
    if (v28)
    {
      os_log_type_t v29 = v28;
      sub_100221C80();

      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v30(v22, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6) != 1)
      {
        id v31 = v54;
        v30(v54, v22, v6);
        sub_100221CA0();
        sub_100221C20();
        char v32 = sub_100221C40();
        unint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
        v33(v11, v6);
        v33(v15, v6);
        if (v32)
        {
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v34 = sub_100222090();
          sub_100003CC8(v34, (uint64_t)qword_10029E7D0);
          uint64_t v35 = sub_100222070();
          os_log_type_t v36 = sub_1002224E0();
          if (os_log_type_enabled(v35, v36))
          {
            char v37 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v37 = 0;
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "escrow cache still valid", v37, 2u);
            swift_slowDealloc();
          }

          v33(v31, v6);
          return v56;
        }
        v33(v31, v6);
        goto LABEL_27;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v22, 1, 1, v6);
    }
    sub_10004015C((uint64_t)v22, &qword_10029ED28);
LABEL_27:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_100222090();
    sub_100003CC8(v49, (uint64_t)qword_10029E7D0);
    uint64_t v50 = sub_100222070();
    os_log_type_t v51 = sub_1002224E0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "escrow cache no longer valid", v52, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v38 = swift_allocError();
    long long v48 = xmmword_100231280;
LABEL_32:
    *(_OWORD *)uint64_t v47 = v48;
    *(unsigned char *)(v47 + 16) = 13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v38;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_100222090();
  sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
  uint64_t v40 = sub_100222070();
  os_log_type_t v41 = sub_1002224E0();
  if (os_log_type_enabled(v40, v41))
  {
    unint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "skipping timeout check and directly returning cached records", v42, 2u);
    swift_slowDealloc();
  }

  return v56;
}

uint64_t sub_100156B6C(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v56 = a3;
  uint64_t v6 = sub_100221CB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v9, v12);
  unint64_t v15 = (char *)&v54 - v14;
  __chkstk_darwin(v13, v16);
  uint64_t v55 = (char *)&v54 - v17;
  uint64_t v18 = sub_1000046DC(&qword_10029ED28);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v54 - v24;
  if (a1(&v57))
  {
    id v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v56
                                                                + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "escrowFetchDate"));
    if (v26)
    {
      uint64_t v27 = v26;
      sub_100221C80();

      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v25, 1, v6) != 1)
      {
        sub_10004015C((uint64_t)v25, &qword_10029ED28);
        goto LABEL_5;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v25, 1, 1, v6);
    }
    sub_10004015C((uint64_t)v25, &qword_10029ED28);
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_100222090();
    sub_100003CC8(v43, (uint64_t)qword_10029E7D0);
    uint64_t v44 = sub_100222070();
    os_log_type_t v45 = sub_1002224E0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "no cached records were found, no saved escrowFetchDate either, returning no cache error", v46, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v38 = swift_allocError();
    long long v48 = xmmword_1002312A0;
    goto LABEL_32;
  }
LABEL_5:
  if (a4)
  {
    id v28 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v56
                                                                + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "escrowFetchDate"));
    if (v28)
    {
      os_log_type_t v29 = v28;
      sub_100221C80();

      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v30(v22, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6) != 1)
      {
        id v31 = v55;
        v30(v55, v22, v6);
        sub_100221CA0();
        sub_100221C20();
        char v32 = sub_100221C40();
        unint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
        v33(v11, v6);
        v33(v15, v6);
        if (v32)
        {
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v34 = sub_100222090();
          sub_100003CC8(v34, (uint64_t)qword_10029E7D0);
          uint64_t v35 = sub_100222070();
          os_log_type_t v36 = sub_1002224E0();
          if (os_log_type_enabled(v35, v36))
          {
            char v37 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v37 = 0;
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "escrow cache still valid", v37, 2u);
            swift_slowDealloc();
          }

          v33(v31, v6);
          return v57;
        }
        v33(v31, v6);
        goto LABEL_27;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v22, 1, 1, v6);
    }
    sub_10004015C((uint64_t)v22, &qword_10029ED28);
LABEL_27:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_100222090();
    sub_100003CC8(v49, (uint64_t)qword_10029E7D0);
    uint64_t v50 = sub_100222070();
    os_log_type_t v51 = sub_1002224E0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "escrow cache no longer valid", v52, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v38 = swift_allocError();
    long long v48 = xmmword_100231280;
LABEL_32:
    *(_OWORD *)uint64_t v47 = v48;
    *(unsigned char *)(v47 + 16) = 13;
    swift_bridgeObjectRelease();
    return v38;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_100222090();
  sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
  uint64_t v40 = sub_100222070();
  os_log_type_t v41 = sub_1002224E0();
  if (os_log_type_enabled(v40, v41))
  {
    unint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "skipping timeout check and directly returning cached records", v42, 2u);
    swift_slowDealloc();
  }

  return v57;
}

uint64_t sub_1001572C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v32 = a5;
  uint64_t ViableBottlesRequest = type metadata accessor for FetchViableBottlesRequest(0);
  __chkstk_darwin(ViableBottlesRequest, v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100222090();
  sub_100003CC8(v17, (uint64_t)qword_10029E7D0);
  uint64_t v18 = sub_100222070();
  os_log_type_t v19 = sub_1002224E0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    id v31 = v7;
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "starting fetchViableBottlesWithSemaphoreFromCuttlefish", v20, 2u);
    uint64_t v7 = v31;
    swift_slowDealloc();
  }

  __chkstk_darwin(v21, v22);
  *(&v30 - 4) = a3;
  *(&v30 - 3) = a4;
  *(&v30 - 2) = a1;
  *(&v30 - 1) = a2;
  sub_1001A56AC((unint64_t *)&unk_10029F020, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
  sub_100221F70();
  uint64_t v23 = *(void *)&v7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
  uint64_t v24 = *(void *)&v7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
  sub_1000059A4(&v7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v23);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v32;
  v25[3] = a6;
  v25[4] = v7;
  uint64_t v26 = *(void *)(v24 + 16);
  uint64_t v27 = *(void (**)(char *, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v26 + 64);
  swift_retain();
  id v28 = v7;
  v27(v16, sub_1001B606C, v25, v23, v26);
  swift_release();
  return sub_1001B7EAC((uint64_t)v16, type metadata accessor for FetchViableBottlesRequest);
}

uint64_t sub_100157598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a3;
  uint64_t v24 = a2;
  uint64_t v8 = type metadata accessor for Metrics(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (OctagonPlatformSupportsSOS() && (uint64_t v13 = SOSCompatibilityModeEnabled(), !v13))
  {
    uint64_t v19 = 0;
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_100222090();
    sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
    uint64_t v16 = sub_100222070();
    os_log_type_t v17 = sub_1002224E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = a4;
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Requesting Cuttlefish to filter records by Octagon Only", v18, 2u);
      a4 = v23;
      swift_slowDealloc();
    }

    uint64_t v19 = 1;
  }
  *(void *)a1 = v19;
  *(unsigned char *)(a1 + 8) = 1;
  __chkstk_darwin(v13, v14);
  uint64_t v20 = v25;
  *(&v23 - 4) = v24;
  *(&v23 - 3) = v20;
  *(&v23 - 2) = a4;
  *(&v23 - 1) = a5;
  sub_1001A56AC((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100221F70();
  uint64_t v21 = a1 + *(int *)(type metadata accessor for FetchViableBottlesRequest(0) + 24);
  sub_10004015C(v21, &qword_10029F000);
  sub_1001B7B9C((uint64_t)v12, v21, type metadata accessor for Metrics);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v8);
}

uint64_t sub_100157864(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = 0;
  }
  if (a3) {
    unint64_t v9 = a3;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = v8;
  a1[3] = v9;
  if (a5)
  {
    unint64_t v10 = a5;
  }
  else
  {
    a4 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = a4;
  a1[1] = v10;
  return result;
}

uint64_t sub_1001578F8(uint64_t a1, void (*a2)(uint64_t, unint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t ViableBottlesResponse = type metadata accessor for FetchViableBottlesResponse(0);
  __chkstk_darwin(ViableBottlesResponse - 8, v9);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000046DC(&qword_100299E28);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (void *)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v15, &qword_100299E28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *v15;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100222090();
    sub_100003CC8(v17, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = sub_100222070();
    os_log_type_t v19 = sub_100222500();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v32 = v16;
      uint64_t v33 = v21;
      *(_DWORD *)uint64_t v20 = 136446210;
      v28[1] = a3;
      uint64_t v29 = 0x203A726F727265;
      unint64_t v30 = 0xE700000000000000;
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v34._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v34);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v29 = sub_1001BEBDC(v29, v30, &v33);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "fetchViableBottles failed with %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(v16, 0, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v22 = sub_1001B7B9C((uint64_t)v15, (uint64_t)v11, type metadata accessor for FetchViableBottlesResponse);
    __chkstk_darwin(v22, v23);
    v28[-2] = a4;
    v28[-1] = v11;
    sub_1000046DC((uint64_t *)&unk_10029F030);
    sub_1002225C0();
    uint64_t v24 = v29;
    uint64_t v25 = v30;
    char v26 = v31;
    a2(v29, v30, v31);
    sub_1001B1FD4(v24, v25, v26);
    return sub_1001B7EAC((uint64_t)v11, type metadata accessor for FetchViableBottlesResponse);
  }
}

void sub_100157CF0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  Class v99 = a3;
  uint64_t v5 = sub_1000046DC(&qword_100299F38);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v104 = (uint64_t)v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  unint64_t v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)v94 - v10);
  uint64_t v108 = type metadata accessor for Bottle(0);
  uint64_t v97 = *(void *)(v108 - 8);
  uint64_t v12 = __chkstk_darwin(v108, v11);
  uint64_t v14 = (char *)v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)v94 - v16;
  uint64_t v107 = type metadata accessor for EscrowPair(0);
  uint64_t v96 = *(void *)(v107 - 8);
  uint64_t v19 = __chkstk_darwin(v107, v18);
  uint64_t v106 = (uint64_t)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v21);
  uint64_t v105 = (uint64_t)v94 - v22;
  uint64_t v23 = sub_100221CB0();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000046DC(&qword_10029F040);
  __chkstk_darwin(v28 - 8, v29);
  unsigned __int8 v31 = (char *)v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100154F08();
  unint64_t v98 = (void *)a2;
  sub_1001B7C04(a2, (uint64_t)v31, type metadata accessor for FetchViableBottlesResponse);
  uint64_t ViableBottlesResponse = type metadata accessor for FetchViableBottlesResponse(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ViableBottlesResponse - 8) + 56))(v31, 0, 1, ViableBottlesResponse);
  sub_100152084((uint64_t)v31);
  sub_10004015C((uint64_t)v31, &qword_10029F040);
  id v33 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  sub_100221CA0();
  Class isa = sub_100221C30().super.isa;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  [v33 setEscrowFetchDate:isa];

  uint64_t v35 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  uint64_t v111 = 0;
  unsigned int v36 = [v35 save:&v111];
  if (v36)
  {
    uint64_t v37 = qword_100298EB8;
    id v38 = (id)v111;
    if (v37 != -1) {
      swift_once();
    }
    unsigned int v95 = v36;
    uint64_t v39 = sub_100222090();
    v94[1] = sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
    uint64_t v40 = sub_100222070();
    os_log_type_t v41 = sub_1002224E0();
    if (os_log_type_enabled(v40, v41))
    {
      unint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "fetchViableBottles saved bottles and records", v42, 2u);
      swift_slowDealloc();
    }

    uint64_t v43 = *v98;
    int64_t v44 = *(void *)(*v98 + 16);
    os_log_type_t v45 = _swiftEmptyArrayStorage;
    if (v44)
    {
      v110[0] = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10018D13C(0, v44, 0);
      unint64_t v46 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      v94[0] = v43;
      uint64_t v47 = v43 + v46;
      os_log_type_t v102 = *(void **)(v96 + 72);
      *(void *)&long long v101 = v97 + 48;
      long long v100 = xmmword_100229520;
      uint64_t v48 = v108;
      do
      {
        uint64_t v49 = v105;
        sub_1001B7C04(v47, v105, type metadata accessor for EscrowPair);
        uint64_t v50 = *(void *)(v49 + *(int *)(v107 + 20))
            + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
        swift_beginAccess();
        uint64_t v51 = v50;
        uint64_t v52 = v103;
        sub_10000D830(v51, (uint64_t)v103, &qword_100299F38);
        if ((*(unsigned int (**)(void, uint64_t, uint64_t))v101)(v52, 1, v48) == 1)
        {
          long long v53 = v100;
          *(_OWORD *)uint64_t v17 = v100;
          *((_OWORD *)v17 + 1) = v53;
          *((_OWORD *)v17 + 2) = v53;
          *((_OWORD *)v17 + 3) = v53;
          *((void *)v17 + 8) = 0;
          *((void *)v17 + 9) = 0xE000000000000000;
          *((void *)v17 + 10) = 0;
          *((void *)v17 + 11) = 0xE000000000000000;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          sub_10004015C((uint64_t)v52, &qword_100299F38);
        }
        else
        {
          sub_1001B7B9C((uint64_t)v52, (uint64_t)v17, type metadata accessor for Bottle);
        }
        uint64_t v55 = *((void *)v17 + 10);
        uint64_t v54 = *((void *)v17 + 11);
        swift_bridgeObjectRetain();
        sub_1001B7EAC((uint64_t)v17, type metadata accessor for Bottle);
        sub_1001B7EAC(v105, type metadata accessor for EscrowPair);
        os_log_type_t v45 = (void *)v110[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D13C(0, v45[2] + 1, 1);
          os_log_type_t v45 = (void *)v110[0];
        }
        unint64_t v57 = v45[2];
        unint64_t v56 = v45[3];
        if (v57 >= v56 >> 1)
        {
          sub_10018D13C(v56 > 1, v57 + 1, 1);
          os_log_type_t v45 = (void *)v110[0];
        }
        v45[2] = v57 + 1;
        Swift::String v58 = &v45[2 * v57];
        unsigned char v58[4] = v55;
        v58[5] = v54;
        v47 += (uint64_t)v102;
        --v44;
        uint64_t v48 = v108;
      }
      while (v44);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v48 = v108;
    }
    uint64_t v67 = v98[1];
    int64_t v68 = *(void *)(v67 + 16);
    unint64_t v66 = _swiftEmptyArrayStorage;
    os_log_type_t v102 = v45;
    if (v68)
    {
      unsigned int v113 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10018D13C(0, v68, 0);
      uint64_t v69 = *(unsigned __int8 *)(v96 + 80);
      *(void *)&long long v100 = v67;
      uint64_t v70 = v67 + ((v69 + 32) & ~v69);
      uint64_t v105 = *(void *)(v96 + 72);
      unint64_t v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
      long long v101 = xmmword_100229520;
      do
      {
        uint64_t v71 = v106;
        sub_1001B7C04(v70, v106, type metadata accessor for EscrowPair);
        uint64_t v72 = *(void *)(v71 + *(int *)(v107 + 20))
            + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
        swift_beginAccess();
        uint64_t v73 = v72;
        uint64_t v74 = v104;
        sub_10000D830(v73, v104, &qword_100299F38);
        if ((*v103)(v74, 1, v48) == 1)
        {
          long long v75 = v101;
          *(_OWORD *)uint64_t v14 = v101;
          *((_OWORD *)v14 + 1) = v75;
          *((_OWORD *)v14 + 2) = v75;
          *((_OWORD *)v14 + 3) = v75;
          *((void *)v14 + 8) = 0;
          *((void *)v14 + 9) = 0xE000000000000000;
          *((void *)v14 + 10) = 0;
          *((void *)v14 + 11) = 0xE000000000000000;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          sub_10004015C(v74, &qword_100299F38);
        }
        else
        {
          sub_1001B7B9C(v74, (uint64_t)v14, type metadata accessor for Bottle);
        }
        uint64_t v77 = *((void *)v14 + 10);
        uint64_t v76 = *((void *)v14 + 11);
        swift_bridgeObjectRetain();
        sub_1001B7EAC((uint64_t)v14, type metadata accessor for Bottle);
        sub_1001B7EAC(v106, type metadata accessor for EscrowPair);
        unint64_t v66 = v113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D13C(0, v66[2] + 1, 1);
          unint64_t v66 = v113;
        }
        unint64_t v79 = v66[2];
        unint64_t v78 = v66[3];
        if (v79 >= v78 >> 1)
        {
          sub_10018D13C(v78 > 1, v79 + 1, 1);
          unint64_t v66 = v113;
        }
        v66[2] = v79 + 1;
        uint64_t v80 = &v66[2 * v79];
        uint64_t v80[4] = v77;
        v80[5] = v76;
        v70 += v105;
        --v68;
        uint64_t v48 = v108;
      }
      while (v68);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain_n();
    os_log_type_t v81 = sub_100222070();
    os_log_type_t v82 = sub_1002224E0();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      unsigned int v113 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 136446210;
      uint64_t v108 = (uint64_t)(v83 + 4);
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1002223D0();
      unint64_t v86 = v85;
      swift_bridgeObjectRelease();
      uint64_t v109 = sub_1001BEBDC(v84, v86, (uint64_t *)&v113);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "fetchViableBottles returned viable bottles: %{public}s", v83, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    NSString v87 = sub_100222070();
    os_log_type_t v88 = sub_1002224E0();
    if (os_log_type_enabled(v87, v88))
    {
      unint64_t v89 = (uint8_t *)swift_slowAlloc();
      unsigned int v113 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v89 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_1002223D0();
      unint64_t v92 = v91;
      swift_bridgeObjectRelease();
      uint64_t v109 = sub_1001BEBDC(v90, v92, (uint64_t *)&v113);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "fetchViableBottles returned partial bottles: %{public}s", v89, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v36) = v95;
    uint64_t v60 = v102;
  }
  else
  {
    id v59 = (id)v111;
    uint64_t v60 = (void *)sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_100222090();
    sub_100003CC8(v61, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    char v62 = sub_100222070();
    os_log_type_t v63 = sub_100222500();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = (void *)swift_slowAlloc();
      unsigned int v95 = 0;
      v110[0] = (uint64_t)v65;
      *(_DWORD *)uint64_t v64 = 136446210;
      uint64_t v111 = 0x203A726F727265;
      unint64_t v112 = 0xE700000000000000;
      unsigned int v113 = v60;
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v114._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v114);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v111 = sub_1001BEBDC(v111, v112, v110);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "fetchViableBottles unable to save bottles and records with %{public}s", v64, 0xCu);
      swift_arrayDestroy();
      LOBYTE(v36) = v95;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v66 = 0;
  }
  Class v93 = v99;
  *Class v99 = v60;
  v93[1] = v66;
  *((unsigned char *)v93 + 16) = v36 ^ 1;
}

uint64_t sub_100158B18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void))
{
  sub_1000046DC(&qword_10029F048);
  sub_1002225C0();
  a4(v6, v7);
  return sub_1001B6120(v6, v7);
}

uint64_t sub_100158BCC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4 = a3;
  if (a3)
  {
    uint64_t result = swift_errorRetain();
LABEL_21:
    *(void *)a4 = a1;
    *(unsigned char *)(a4 + 8) = v4 & 1;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = a2;
  swift_bridgeObjectRetain();
  sub_1001FEFA4();
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100222970();
    uint64_t v11 = result;
  }
  else
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  char v25 = v4;
  uint64_t v24 = a4;
  if (!v11)
  {
    a1 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v4 = v25;
    a4 = v24;
    goto LABEL_21;
  }
  if (v11 >= 1)
  {
    uint64_t v12 = 0;
    a1 = _swiftEmptyArrayStorage;
    do
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v13 = (id)sub_100222880();
      }
      else {
        id v13 = *(id *)(v10 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, "data", v23);
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = sub_100221BF0();
        uint64_t v19 = v18;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a1 = sub_1001881D4(0, a1[2] + 1, 1, a1);
        }
        unint64_t v21 = a1[2];
        unint64_t v20 = a1[3];
        if (v21 >= v20 >> 1) {
          a1 = sub_1001881D4((void *)(v20 > 1), v21 + 1, 1, a1);
        }
        a1[2] = v21 + 1;
        uint64_t v22 = &a1[2 * v21];
        v22[4] = v17;
        v22[5] = v19;
      }
      else
      {
      }
      ++v12;
    }
    while (v11 != v12);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_100158DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (a3) {
    os_log_type_t v9 = sub_100222500();
  }
  else {
    os_log_type_t v9 = sub_1002224E0();
  }
  os_log_type_t v10 = v9;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = sub_100222070();
  if (os_log_type_enabled(v12, v10))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)id v13 = 136446210;
    if (a3)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v17._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v17);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v14 = 0x203A726F727265;
    }
    else
    {
      uint64_t v14 = 0x73736563637573;
    }
    sub_1001BEBDC(v14, 0xE700000000000000, &v16);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v10, "fetchCurrentPolicy complete: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD00000000000003DLL, 0x80000001002444B0);
  return a5(a1, a2, a3);
}

void sub_100159054(char *a1, uint64_t a2, uint64_t a3, void (*a4)(NSObject *, id, id), uint64_t a5, char a6)
{
  uint64_t v10 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v11 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v11) {
    goto LABEL_14;
  }
  uint64_t v12 = v11;
  sub_100222270();

  id v13 = [*(id *)&a1[v10] egoPeerPermanentInfo];
  if (!v13)
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_100222090();
    sub_100003CC8(v50, (uint64_t)qword_10029E7D0);
    uint64_t v51 = sub_100222070();
    os_log_type_t v52 = sub_100222500();
    if (os_log_type_enabled(v51, v52))
    {
      long long v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "fetchCurrentPolicy failed to find ego peer information", v53, 2u);
      swift_slowDealloc();
    }

    if (a3)
    {
      uint64_t v54 = self;
      NSString v55 = sub_100222260();
      id v56 = [v54 mungeModelID:v55];

      NSString v57 = v56;
      if (!v56)
      {
        sub_100222270();
        NSString v57 = sub_100222260();
        swift_bridgeObjectRelease();
      }
      char v58 = a6;
      uint64_t v59 = sub_100222270();
      unint64_t v61 = v60;
      uint64_t v62 = qword_100298BA8;
      id v63 = *(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
      if (v62 != -1) {
        swift_once();
      }
      id v142 = 0;
      id v64 = objc_msgSend(v63, "policyWithVersion:error:", objc_msgSend((id)qword_1002A0260, "versionNumber"), &v142);

      id v65 = v142;
      if (v142)
      {
        id v66 = v142;
        swift_bridgeObjectRelease();

        swift_willThrow();
        uint64_t v67 = v66;
        int64_t v68 = sub_100222070();
        os_log_type_t v69 = sub_100222500();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          uint64_t v71 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v70 = 138543362;
          uint64_t v72 = v67;
          uint64_t v73 = v67;
          uint64_t v74 = (void *)_swift_stdlib_bridgeErrorToNSError();
          id v142 = v74;
          sub_100222690();
          void *v71 = v74;

          uint64_t v67 = v72;
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "error finding prevailing policy: %{public}@", v70, 0xCu);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          int64_t v68 = v67;
        }

        unint64_t v91 = v67;
        a4(0, 0, v65);

        return;
      }
      if (v64)
      {
        id v80 = v64;
        sub_1000094D4((uint64_t)_swiftEmptyArrayStorage);
        Class isa = sub_1002221C0().super.isa;
        swift_bridgeObjectRelease();
        id v82 = [objc_allocWithZone((Class)type metadata accessor for PolicyRedactionCrypter()) init];
        id v142 = 0;
        id v83 = [v80 policyWithSecrets:isa decrypter:v82 error:&v142];

        id v84 = v142;
        if (v83)
        {
          id v142 = 0;
          id v85 = v84;
          unint64_t v86 = [v83 syncingPolicyForModel:v57 syncUserControllableViews:0 isInheritedAccount:v58 & 1 error:&v142];

          if (v86)
          {
            id v87 = v142;
            swift_bridgeObjectRetain();
            os_log_type_t v88 = sub_100222070();
            os_log_type_t v89 = sub_1002224E0();
            if (os_log_type_enabled(v88, v89))
            {
              id v139 = v80;
              uint64_t v90 = (uint8_t *)swift_slowAlloc();
              id v142 = (id)swift_slowAlloc();
              *(_DWORD *)uint64_t v90 = 136446210;
              swift_bridgeObjectRetain();
              sub_1001BEBDC(v59, v61, (uint64_t *)&v142);
              sub_100222690();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v88, v89, "returning a policy for model ID %{public}s", v90, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              id v80 = v139;
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            unsigned int v113 = v86;
            a4(v86, 0, 0);

            return;
          }
          id v105 = v142;
          swift_bridgeObjectRelease();
          sub_100221B40();

          swift_willThrow();
        }
        else
        {
          id v97 = v142;
          swift_bridgeObjectRelease();

          sub_100221B40();
          swift_willThrow();
        }
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v106 = sub_100222070();
        os_log_type_t v107 = sub_100222500();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = (uint8_t *)swift_slowAlloc();
          id v142 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v108 = 136446210;
          swift_errorRetain();
          sub_1000046DC(&qword_100299D70);
          uint64_t v109 = sub_1002222C0();
          sub_1001BEBDC(v109, v110, (uint64_t *)&v142);
          sub_100222690();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "fetchCurrentPolicy failed to prevailing policy: %{public}s", v108, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        sub_100042D4C();
        uint64_t v111 = swift_allocError();
        *(_OWORD *)uint64_t v112 = xmmword_1002297D0;
        *(unsigned char *)(v112 + 16) = 13;
        a4(0, 0, (id)v111);

        swift_errorRelease();
      }
      else
      {
        swift_bridgeObjectRelease();

        unint64_t v92 = sub_100222070();
        os_log_type_t v93 = sub_1002224E0();
        if (os_log_type_enabled(v92, v93))
        {
          uint64_t v94 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v94 = 0;
          _os_log_impl((void *)&_mh_execute_header, v92, v93, "prevailing policy is missing?", v94, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v95 = swift_allocError();
        *(_OWORD *)uint64_t v96 = xmmword_1002297D0;
        *(unsigned char *)(v96 + 16) = 13;
        a4(0, 0, (id)v95);
      }
      swift_errorRelease();
      return;
    }
    long long v75 = sub_100222070();
    os_log_type_t v76 = sub_1002224E0();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "no model ID override; returning error", v77, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v78 = swift_allocError();
    *(_OWORD *)uint64_t v79 = xmmword_1002297D0;
    *(unsigned char *)(v79 + 16) = 13;
    a4(0, 0, (id)v78);
    swift_errorRelease();
    return;
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_100221BF0();
  unint64_t v17 = v16;

  id v18 = [*(id *)&a1[v10] egoPeerPermanentInfoSig];
  if (!v18)
  {
LABEL_12:
    sub_100005A40(v15, v17);
    goto LABEL_13;
  }
  uint64_t v19 = v18;
  uint64_t v137 = sub_100221BF0();
  unint64_t v138 = v20;

  id v21 = [*(id *)&a1[v10] egoPeerStableInfo];
  if (!v21)
  {
LABEL_11:
    sub_100005A40(v137, v138);
    goto LABEL_12;
  }
  uint64_t v22 = v21;
  char v136 = a6;
  uint64_t v134 = a2;
  uint64_t v23 = sub_100221BF0();
  unint64_t v25 = v24;

  id v26 = [*(id *)&a1[v10] egoPeerStableInfoSig];
  if (!v26)
  {
    sub_100005A40(v23, v25);
    a6 = v136;
    goto LABEL_11;
  }
  uint64_t v27 = v26;
  uint64_t v130 = v23;
  unint64_t v131 = v25;
  uint64_t v132 = sub_100221BF0();
  unint64_t v133 = v28;

  id v29 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  sub_1000059E8(v15, v17);
  sub_1000059E8(v137, v138);
  NSString v30 = sub_100222260();
  swift_bridgeObjectRelease();
  Class v31 = sub_100221BD0().super.isa;
  Class v32 = sub_100221BD0().super.isa;
  id v33 = [self permanentInfoWithPeerID:v30 data:v31 sig:v32 keyFactory:v29];
  uint64_t v129 = v29;

  sub_100005A40(v137, v138);
  sub_100005A40(v15, v17);

  uint64_t v128 = v33;
  if (v33)
  {
    id v34 = objc_allocWithZone((Class)TPPeerStableInfo);
    uint64_t v35 = v130;
    sub_1000059E8(v130, v131);
    sub_1000059E8(v132, v133);
    Class v36 = sub_100221BD0().super.isa;
    Class v37 = sub_100221BD0().super.isa;
    id v38 = [v34 initWithData:v36 sig:v37];
    sub_100005A40(v132, v133);
    sub_100005A40(v130, v131);

    if (v38)
    {
      uint64_t v39 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
      id v142 = 0;
      id v40 = [v39 allPolicyVersionsWithError:&v142];
      id v41 = v142;
      if (v40)
      {
        unint64_t v42 = v40;
        sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
        sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
        uint64_t v43 = sub_100222440();
        id v44 = v41;

        swift_bridgeObjectRetain();
        id v45 = v128;
        id v46 = v38;
        swift_retain();
        uint64_t v47 = a1;
        sub_1001AD9FC(v43, v47, v47, v134, a3, v45, v46, a4, a5);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        sub_100005A40(v132, v133);
        sub_100005A40(v130, v131);
        sub_100005A40(v137, v138);
        uint64_t v48 = v15;
        unint64_t v49 = v17;
      }
      else
      {
        uint64_t v135 = v38;
        id v120 = v142;
        uint64_t v121 = sub_100221B40();

        swift_willThrow();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v122 = sub_100222090();
        sub_100003CC8(v122, (uint64_t)qword_10029E7D0);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v123 = sub_100222070();
        os_log_type_t v124 = sub_100222500();
        if (os_log_type_enabled(v123, v124))
        {
          uint64_t v125 = (uint8_t *)swift_slowAlloc();
          uint64_t v126 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = 138543362;
          swift_errorRetain();
          id v127 = (void *)_swift_stdlib_bridgeErrorToNSError();
          id v142 = v127;
          sub_100222690();
          void *v126 = v127;
          uint64_t v35 = v130;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v123, v124, "Error fetching all policy versions: %{public}@", v125, 0xCu);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        swift_errorRetain();
        a4(0, 0, (id)v121);
        swift_errorRelease();
        swift_errorRelease();

        sub_100005A40(v132, v133);
        sub_100005A40(v35, v131);
        sub_100005A40(v137, v138);
        uint64_t v48 = v15;
        unint64_t v49 = v17;
      }
      sub_100005A40(v48, v49);
      return;
    }
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v114 = sub_100222090();
    sub_100003CC8(v114, (uint64_t)qword_10029E7D0);
    unint64_t v115 = sub_100222070();
    os_log_type_t v116 = sub_100222500();
    if (os_log_type_enabled(v115, v116))
    {
      uint64_t v117 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v117 = 0;
      _os_log_impl((void *)&_mh_execute_header, v115, v116, "fetchCurrentPolicy failed to create TPPeerStableInfo", v117, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v118 = swift_allocError();
    *(_OWORD *)uint64_t v119 = xmmword_100229940;
    *(unsigned char *)(v119 + 16) = 13;
    a4(0, 0, (id)v118);
    swift_errorRelease();

    sub_100005A40(v132, v133);
    sub_100005A40(v130, v131);
    sub_100005A40(v137, v138);
    uint64_t v104 = v15;
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v98 = sub_100222090();
    sub_100003CC8(v98, (uint64_t)qword_10029E7D0);
    Class v99 = sub_100222070();
    os_log_type_t v100 = sub_100222500();
    if (os_log_type_enabled(v99, v100))
    {
      long long v101 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v101 = 0;
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "fetchCurrentPolicy failed to create TPPeerPermanentInfo", v101, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v102 = swift_allocError();
    *(_OWORD *)uint64_t v103 = xmmword_1002297C0;
    *(unsigned char *)(v103 + 16) = 13;
    a4(0, 0, (id)v102);
    swift_errorRelease();

    sub_100005A40(v132, v133);
    sub_100005A40(v130, v131);
    sub_100005A40(v137, v138);
    uint64_t v104 = v15;
  }

  sub_100005A40(v104, v17);
}

NSObject *sub_10015A2F8(int a1, int a2, NSObject *a3)
{
  char v4 = a3;
  id v5 = [a3 bestPolicyVersion];
  id v6 = [v5 versionNumber];
  if (qword_100298BB0 != -1) {
    swift_once();
  }
  if (v6 >= [(id)qword_1002A0268 versionNumber])
  {
    id v13 = v5;
    uint64_t v8 = v13;
  }
  else
  {
    if (qword_100298BA8 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_100298EB8;
    uint64_t v8 = (id)qword_1002A0260;
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
    uint64_t v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Ignoring policy version from pre-CKKS4All peer", v12, 2u);
      swift_slowDealloc();
    }
  }
  __chkstk_darwin(v13, v14);
  sub_1000046DC(&qword_10029F018);
  sub_1002225C0();
  if (!v3)
  {
    if (v34)
    {
      uint64_t v15 = v34;
      id v16 = [v4 policySecrets];
      if (v16)
      {
        unint64_t v17 = v16;
        sub_1002221D0();
      }
      else
      {
        sub_1000094D4((uint64_t)&_swiftEmptyArrayStorage);
      }
      Class isa = sub_1002221C0().super.isa;
      swift_bridgeObjectRelease();
      id v24 = [objc_allocWithZone((Class)type metadata accessor for PolicyRedactionCrypter()) init];
      id v34 = 0;
      id v25 = [v15 policyWithSecrets:isa decrypter:v24 error:&v34];

      if (v25)
      {
        id v26 = v34;
        NSString v27 = sub_100222260();
        id v28 = [v4 syncUserControllableViews];
        id v29 = [v4 isInheritedAccount];
        id v34 = 0;
        char v4 = [v25 syncingPolicyForModel:v27 syncUserControllableViews:v28 isInheritedAccount:v29 error:&v34];

        if (v4)
        {
          NSString v30 = v34;

          return v4;
        }
        char v4 = v34;
        sub_100221B40();

        swift_willThrow();
      }
      else
      {
        char v4 = v34;
        sub_100221B40();

        swift_willThrow();
      }
    }
    else
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_100222090();
      sub_100003CC8(v18, (uint64_t)qword_10029E7D0);
      uint64_t v8 = v8;
      uint64_t v19 = sub_100222070();
      os_log_type_t v20 = sub_1002224E0();
      if (os_log_type_enabled(v19, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        id v33 = (void *)swift_slowAlloc();
        id v34 = v8;
        *(_DWORD *)id v21 = 138543362;
        uint64_t v22 = v8;
        sub_100222690();
        *id v33 = v8;

        _os_log_impl((void *)&_mh_execute_header, v19, v20, "best policy(%{public}@) is missing?", v21, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v19 = v8;
      }

      char v4 = [v8 versionNumber];
      sub_100042D4C();
      swift_allocError();
      *(void *)uint64_t v31 = v4;
      *(void *)(v31 + 8) = 0;
      *(unsigned char *)(v31 + 16) = 1;
      swift_willThrow();
    }

    return v4;
  }

  return v4;
}

void sub_10015A8F4(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v5 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v7 = 0;
  id v6 = objc_msgSend(v5, "policyWithVersion:error:", objc_msgSend(a2, "versionNumber"), &v7);

  if (v7)
  {
    v7;

    swift_willThrow();
  }
  else
  {
    *a3 = v6;
  }
}

uint64_t sub_10015A9D0(uint64_t a1, uint64_t a2, void (*a3)(Swift::Int, uint64_t))
{
  if (a1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      Swift::Int v5 = sub_100192B10();
    }
    else {
      Swift::Int v5 = sub_10019300C(a1);
    }
    Swift::Int v6 = v5;
  }
  else
  {
    Swift::Int v6 = 0;
  }
  a3(v6, a2);

  return swift_bridgeObjectRelease();
}

void sub_10015AA64(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5)
{
  if (a2)
  {
    a3(0);
  }
  else if (a1 && (id v8 = a5, v9 = sub_100112D08(v8, a1), v8, v9))
  {
    id v19 = v9;
    ((void (*)(void *, void))a3)(v9, 0);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_100222090();
    sub_100003CC8(v10, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain_n();
    os_log_type_t v11 = sub_100222070();
    os_log_type_t v12 = sub_1002224E0();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)id v13 = 136446210;
      swift_bridgeObjectRetain();
      sub_1000046DC((uint64_t *)&unk_10029EED0);
      uint64_t v14 = sub_1002222C0();
      sub_1001BEBDC(v14, v15, &v20);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "fetchPolicyDocument: didn't return policy of version: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v16 = [a5 versionNumber];
    sub_100042D4C();
    uint64_t v17 = swift_allocError();
    *(void *)uint64_t v18 = v16;
    *(void *)(v18 + 8) = 0;
    *(unsigned char *)(v18 + 16) = 1;
    ((void (*)(void, uint64_t))a3)(0, v17);
    swift_errorRelease();
  }
}

uint64_t sub_10015AD28(unint64_t *a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v5 = *a1;
  if ((*a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
    sub_100222490();
    unint64_t v5 = (unint64_t)v48[1];
    Swift::Int v6 = v48[2];
    uint64_t v8 = (uint64_t)v48[3];
    int64_t v7 = (int64_t)v48[4];
    unint64_t v9 = (unint64_t)v48[5];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(v5 + 32);
    Swift::Int v6 = (void *)(v5 + 56);
    uint64_t v8 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(v5 + 56);
    swift_bridgeObjectRetain();
    int64_t v7 = 0;
  }
  uint64_t v43 = v8;
  int64_t v47 = (unint64_t)(v8 + 64) >> 6;
  id v46 = a3;
  id v44 = v6;
  uint64_t v45 = a2;
  while (1)
  {
    int64_t v15 = v7;
    if ((v5 & 0x8000000000000000) != 0) {
      break;
    }
    if (v9)
    {
      unint64_t v16 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v17 = v16 | (v7 << 6);
    }
    else
    {
      ++v7;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
LABEL_51:
        __break(1u);
      }
      if (v7 >= v47) {
        return sub_1001B30B0();
      }
      unint64_t v18 = v6[v7];
      if (!v18)
      {
        int64_t v19 = v15 + 2;
        if (v15 + 2 >= v47) {
          return sub_1001B30B0();
        }
        unint64_t v18 = v6[v19];
        if (v18) {
          goto LABEL_24;
        }
        int64_t v19 = v15 + 3;
        if (v15 + 3 >= v47) {
          return sub_1001B30B0();
        }
        unint64_t v18 = v6[v19];
        if (v18)
        {
LABEL_24:
          int64_t v7 = v19;
        }
        else
        {
          int64_t v7 = v15 + 4;
          if (v15 + 4 >= v47) {
            return sub_1001B30B0();
          }
          unint64_t v18 = v6[v7];
          if (!v18)
          {
            int64_t v41 = v15 + 5;
            do
            {
              if (v47 == v41) {
                return sub_1001B30B0();
              }
              unint64_t v18 = v6[v41++];
            }
            while (!v18);
            int64_t v7 = v41 - 1;
          }
        }
      }
      unint64_t v9 = (v18 - 1) & v18;
      unint64_t v17 = __clz(__rbit64(v18)) + (v7 << 6);
    }
    id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    if (!v14) {
      return sub_1001B30B0();
    }
LABEL_27:
    id v20 = objc_msgSend(v14, "versionNumber", v43);
    id v21 = *(void **)(a2 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
    v48[0] = 0;
    id v22 = [v21 policyWithVersion:v20 error:v48];
    uint64_t v23 = v22;
    if (v48[0])
    {
      id v13 = v48[0];

      swift_willThrow();
      goto LABEL_9;
    }
    if (v22)
    {
      if (qword_100298BA8 != -1) {
        swift_once();
      }
      [(id)qword_1002A0260 versionNumber];
      id v24 = [v23 version];
      id v25 = [v24 policyHash];

      uint64_t v26 = sub_100222270();
      uint64_t v28 = v27;

      id v29 = [v14 policyHash];
      uint64_t v30 = sub_100222270();
      uint64_t v32 = v31;

      if (v26 == v30 && v28 == v32)
      {
        swift_bridgeObjectRelease_n();
        a2 = v45;
        id v33 = v46;
        Swift::Int v6 = v44;
LABEL_35:
        id v35 = [v23 version];
        uint64_t v36 = *v33;
        if ((*v33 & 0xC000000000000001) != 0)
        {
          if (v36 >= 0) {
            v36 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          id v37 = v23;
          uint64_t v38 = sub_100222920();
          if (__OFADD__(v38, 1)) {
            goto LABEL_51;
          }
          *id v33 = sub_100188398(v36, v38 + 1);
        }
        else
        {
          id v39 = v23;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v48[0] = (id)*v33;
        *id v33 = 0x8000000000000000;
        sub_10018B334((uint64_t)v23, v35, isUniquelyReferenced_nonNull_native);
        *id v33 = (uint64_t)v48[0];

        swift_bridgeObjectRelease();
        id v13 = (id)sub_1001943DC(v14);

LABEL_9:
        id v14 = v13;
        goto LABEL_10;
      }
      char v34 = sub_100222A30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v45;
      id v33 = v46;
      Swift::Int v6 = v44;
      if (v34) {
        goto LABEL_35;
      }
    }
    else
    {
LABEL_10:
    }
  }
  if (sub_100222790())
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v48[0];
    swift_unknownObjectRelease();
    if (v14) {
      goto LABEL_27;
    }
  }
  return sub_1001B30B0();
}

uint64_t sub_10015B258(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  id v39 = a1;
  uint64_t v5 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  unint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  unint64_t v44 = *a2 & 0xC000000000000001;
  if (v44)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100222750();
    if (v11) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    int64_t v15 = _swiftEmptyArrayStorage;
LABEL_23:
    id v37 = v39;
    uint64_t result = swift_bridgeObjectRelease();
    *id v37 = v15;
    return result;
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_6;
  }
LABEL_3:
  unint64_t v49 = _swiftEmptyArrayStorage;
  sub_10018D234(0, v11 & ~(v11 >> 63), 0);
  if (v44)
  {
    uint64_t result = sub_1002226F0();
    unsigned __int8 v14 = 1;
  }
  else
  {
    uint64_t result = sub_1001F43D4(v10);
    unsigned __int8 v14 = v16 & 1;
  }
  uint64_t v46 = result;
  uint64_t v47 = v13;
  unsigned __int8 v48 = v14;
  if ((v11 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v10 < 0) {
      uint64_t v17 = v10;
    }
    uint64_t v42 = v5;
    uint64_t v43 = v17;
    id v40 = v9;
    uint64_t v41 = v6;
    do
    {
      while (1)
      {
        sub_1001F47D8(v46, v47, v48, v10);
        uint64_t v30 = v29;
        *(&v38 - 2) = __chkstk_darwin(v29, v31);
        sub_1001A56AC(&qword_10029A298, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
        uint64_t v32 = v3;
        sub_100221F70();

        id v33 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D234(0, v33[2] + 1, 1);
          id v33 = v49;
        }
        unint64_t v35 = v33[2];
        unint64_t v34 = v33[3];
        if (v35 >= v34 >> 1)
        {
          sub_10018D234(v34 > 1, v35 + 1, 1);
          id v33 = v49;
        }
        v33[2] = v35 + 1;
        uint64_t result = sub_1001B7B9C((uint64_t)v9, (uint64_t)v33+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v35, type metadata accessor for PolicyDocumentKey);
        if (v44) {
          break;
        }
        uint64_t v18 = v46;
        uint64_t v19 = v47;
        unsigned __int8 v20 = v48;
        uint64_t v21 = sub_1001F4474(v46, v47, v48, v10);
        uint64_t v23 = v22;
        uint64_t v24 = v10;
        char v26 = v25;
        char v27 = v20;
        unint64_t v9 = v40;
        sub_1001B1EC4(v18, v19, v27);
        uint64_t v46 = v21;
        uint64_t v47 = v23;
        uint64_t v3 = v32;
        unsigned __int8 v28 = v26 & 1;
        uint64_t v10 = v24;
        uint64_t v6 = v41;
        unsigned __int8 v48 = v28;
        if (!--v11) {
          goto LABEL_22;
        }
      }
      if ((v48 & 1) == 0) {
        goto LABEL_25;
      }
      if (sub_100222710()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1000046DC(&qword_10029EDF0);
      uint64_t v36 = (void (*)(char *, void))sub_100222480();
      sub_1002227C0();
      v36(v45, 0);
      --v11;
    }
    while (v11);
LABEL_22:
    sub_1001B1EC4(v46, v47, v48);
    swift_bridgeObjectRelease();
    int64_t v15 = v49;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10015B648(void *a1, id a2)
{
  *a1 = [a2 versionNumber];
  id v4 = [a2 policyHash];
  uint64_t v5 = sub_100222270();
  uint64_t v7 = v6;

  uint64_t result = swift_bridgeObjectRelease();
  a1[1] = v5;
  a1[2] = v7;
  return result;
}

uint64_t sub_10015B6D0(uint64_t a1, char *a2, void (*a3)(void, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v45 = a2;
  uint64_t PolicyDocumentsResponse = type metadata accessor for FetchPolicyDocumentsResponse(0);
  uint64_t v10 = *(void *)(PolicyDocumentsResponse - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v13 = __chkstk_darwin(PolicyDocumentsResponse - 8, v12);
  unsigned __int8 v14 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = sub_1000046DC((uint64_t *)&unk_10029EDC0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char **)((char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v21, (uint64_t *)&unk_10029EDC0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v42 = a5 + 16;
    uint64_t v43 = a6 + 16;
    sub_1001B7B9C((uint64_t)v21, (uint64_t)v17, type metadata accessor for FetchPolicyDocumentsResponse);
    unsigned __int8 v28 = v45;
    id v44 = *(id *)&v45[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    sub_1001B7C04((uint64_t)v17, (uint64_t)v14, type metadata accessor for FetchPolicyDocumentsResponse);
    unint64_t v29 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v30 = (v11 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    sub_1001B7B9C((uint64_t)v14, v33 + v29, type metadata accessor for FetchPolicyDocumentsResponse);
    unint64_t v34 = (void *)(v33 + v30);
    uint64_t v35 = v47;
    void *v34 = v46;
    v34[1] = v35;
    *(void *)(v33 + v31) = v42;
    *(void *)(v33 + v32) = v43;
    *(void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v28;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_1001B1E00;
    *(void *)(v36 + 24) = v33;
    aBlock[4] = (uint64_t)sub_1001B8924;
    unint64_t v49 = v36;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100284430;
    id v37 = _Block_copy(aBlock);
    uint64_t v23 = v49;
    swift_retain();
    id v38 = v28;
    swift_retain();
    swift_release();
    [v44 performBlockAndWait:v37];
    _Block_release(v37);
    sub_1001B7EAC((uint64_t)v17, type metadata accessor for FetchPolicyDocumentsResponse);
    LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v37 & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v17 = *v21;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100222090();
  sub_100003CC8(v22, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v23 = sub_100222070();
  os_log_type_t v24 = sub_100222500();
  if (!os_log_type_enabled(v23, v24))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  char v25 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)char v25 = 136446210;
  uint64_t v50 = (uint64_t)v17;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v26 = sub_1002222C0();
  uint64_t v50 = sub_1001BEBDC(v26, v27, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v23, v24, "FetchPolicyDocuments failed: %{public}s", v25, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  id v40 = v46;
  swift_errorRetain();
  v40(0, v17);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_10015BBEC(uint64_t *a1, void (*a2)(void, uint64_t), uint64_t a3, uint64_t *a4, uint64_t a5, char *a6)
{
  uint64_t v152 = a6;
  uint64_t v144 = a5;
  uint64_t v10 = sub_1000046DC(&qword_100299668);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  unsigned __int8 v14 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  uint64_t v147 = (uint64_t)&v131 - v16;
  uint64_t v17 = (char **)type metadata accessor for PolicyDocumentKey(0);
  uint64_t v18 = (uint64_t)*(v17 - 1);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v146 = (char **)((char *)&v131 - v24);
  uint64_t v148 = type metadata accessor for PolicyDocumentMapEntry(0);
  uint64_t v25 = *(void *)(v148 - 8);
  uint64_t v27 = __chkstk_darwin(v148, v26);
  uint64_t v29 = __chkstk_darwin(v27, v28);
  __chkstk_darwin(v29, v30);
  unint64_t v34 = (uint64_t *)((char *)&v131 - v33);
  uint64_t v35 = *a1;
  if (*(void *)(v35 + 16))
  {
    uint64_t v150 = *(void *)(v35 + 16);
    uint64_t v133 = v32;
    uint64_t v132 = v22;
    unint64_t v131 = v14;
    uint64_t v134 = v31;
    uint64_t v136 = a3;
    uint64_t v137 = a2;
    id v143 = self;
    uint64_t v141 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc;
    uint64_t v139 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
    uint64_t v36 = v35 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v135 = v35;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v145 = (id *)(v18 + 48);
    uint64_t v138 = *(void *)(v25 + 72);
    id v142 = v34;
    uint64_t v140 = v17;
    id v151 = a4;
    while (1)
    {
      sub_1001B7C04(v36, (uint64_t)v34, type metadata accessor for PolicyDocumentMapEntry);
      uint64_t v39 = v147;
      sub_10000D830((uint64_t)v34 + *(int *)(v148 + 24), v147, &qword_100299668);
      id v40 = *v145;
      int v41 = ((uint64_t (*)(uint64_t, uint64_t, char **))*v145)(v39, 1, v17);
      uint64_t v149 = v36;
      uint64_t v42 = v146;
      if (v41 == 1)
      {
        *uint64_t v146 = 0;
        v42[1] = 0;
        v42[2] = 0xE000000000000000;
        _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
        sub_10004015C(v39, &qword_100299668);
      }
      else
      {
        sub_1001B7B9C(v39, (uint64_t)v146, type metadata accessor for PolicyDocumentKey);
      }
      swift_bridgeObjectRetain();
      sub_1001B7EAC((uint64_t)v42, type metadata accessor for PolicyDocumentKey);
      NSString v43 = sub_100222260();
      swift_bridgeObjectRelease();
      uint64_t v44 = *v34;
      unint64_t v45 = v34[1];
      sub_1000059E8(*v34, v45);
      Class isa = sub_100221BD0().super.isa;
      sub_100005A40(v44, v45);
      id v47 = [v143 policyDocWithHash:v43 data:isa];

      if (!v47)
      {
        swift_bridgeObjectRelease();
        if (qword_100298EB8 != -1) {
          goto LABEL_44;
        }
        goto LABEL_17;
      }
      id v48 = v47;
      uint64_t v49 = swift_bridgeObjectRetain();
      sub_10019768C(v49, v48);
      uint64_t v51 = v50;
      swift_bridgeObjectRelease();

      if (!v51) {
        break;
      }
      id v52 = [v51 policyHash];
      uint64_t v53 = sub_100222270();
      NSString v55 = v54;

      id v56 = [v48 version];
      id v57 = [v56 policyHash];

      uint64_t v58 = sub_100222270();
      unint64_t v34 = v59;

      if (v53 == v58 && v55 == v34)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v60 = sub_100222A30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v102 = sub_100222090();
          sub_100003CC8(v102, (uint64_t)qword_10029E7D0);
          id v103 = v48;
          id v104 = v51;
          id v105 = v103;
          id v106 = v104;
          os_log_type_t v107 = sub_100222070();
          os_log_type_t v108 = sub_1002224E0();
          if (os_log_type_enabled(v107, v108))
          {
            uint64_t v109 = swift_slowAlloc();
            uint64_t v152 = (char *)swift_slowAlloc();
            v154[0] = v152;
            *(_DWORD *)uint64_t v109 = 136446466;
            id v110 = [v106 policyHash];
            uint64_t v111 = sub_100222270();
            unint64_t v113 = v112;

            uint64_t v153 = sub_1001BEBDC(v111, v113, (uint64_t *)v154);
            sub_100222690();

            swift_bridgeObjectRelease();
            *(_WORD *)(v109 + 12) = 2082;
            id v114 = [v105 version];
            id v115 = [v114 policyHash];

            uint64_t v116 = sub_100222270();
            unint64_t v118 = v117;

            uint64_t v153 = sub_1001BEBDC(v116, v118, (uint64_t *)v154);
            sub_100222690();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v107, v108, "Requested hash %{public}s does not match fetched hash %{public}s", (uint8_t *)v109, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          id v127 = v137;
          uint64_t v128 = (uint64_t)v142;
          sub_100042D4C();
          uint64_t v129 = swift_allocError();
          *(_OWORD *)uint64_t v130 = xmmword_1002312B0;
          *(unsigned char *)(v130 + 16) = 13;
          v127(0, v129);
          swift_errorRelease();

          uint64_t v101 = v128;
          goto LABEL_42;
        }
      }
      swift_beginAccess();
      unint64_t v61 = (void *)sub_1001943DC(v51);
      swift_endAccess();

      uint64_t v17 = &selRef_aessivkey;
      id v62 = [v48 version];
      swift_beginAccess();
      id v63 = v48;
      sub_1001882E4((uint64_t)v63, v62);
      swift_endAccess();

      type metadata accessor for PolicyMO();
      id v64 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:*(void *)&v152[v141]];
      id v40 = [v63 version];
      unint64_t v65 = (unint64_t)[v40 versionNumber];

      if ((v65 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_44:
        swift_once();
LABEL_17:
        uint64_t v68 = sub_100222090();
        sub_100003CC8(v68, (uint64_t)qword_10029E7D0);
        uint64_t v69 = v133;
        sub_1001B7C04((uint64_t)v34, v133, type metadata accessor for PolicyDocumentMapEntry);
        uint64_t v70 = v134;
        sub_1001B7C04((uint64_t)v34, v134, type metadata accessor for PolicyDocumentMapEntry);
        uint64_t v71 = sub_100222070();
        os_log_type_t v72 = sub_1002224E0();
        if (os_log_type_enabled(v71, v72))
        {
          uint64_t v73 = swift_slowAlloc();
          v154[0] = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v73 = 136446466;
          uint64_t v74 = v69 + *(int *)(v148 + 24);
          uint64_t v75 = (uint64_t)v131;
          sub_10000D830(v74, (uint64_t)v131, &qword_100299668);
          if (((unsigned int (*)(uint64_t, uint64_t, char **))v40)(v75, 1, v17) == 1)
          {
            os_log_type_t v76 = v132;
            *uint64_t v132 = 0;
            v76[1] = 0;
            v76[2] = 0xE000000000000000;
            _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
            sub_10004015C(v75, &qword_100299668);
          }
          else
          {
            os_log_type_t v76 = v132;
            sub_1001B7B9C(v75, (uint64_t)v132, type metadata accessor for PolicyDocumentKey);
          }
          uint64_t v119 = (uint64_t)v76;
          uint64_t v120 = v76[1];
          unint64_t v121 = v76[2];
          swift_bridgeObjectRetain();
          sub_1001B7EAC(v119, type metadata accessor for PolicyDocumentKey);
          uint64_t v153 = sub_1001BEBDC(v120, v121, (uint64_t *)v154);
          sub_100222690();
          swift_bridgeObjectRelease();
          sub_1001B7EAC(v133, type metadata accessor for PolicyDocumentMapEntry);
          *(_WORD *)(v73 + 12) = 2082;
          uint64_t v122 = v134;
          uint64_t v123 = sub_100221BE0(0);
          uint64_t v153 = sub_1001BEBDC(v123, v124, (uint64_t *)v154);
          sub_100222690();
          swift_bridgeObjectRelease();
          sub_1001B7EAC(v122, type metadata accessor for PolicyDocumentMapEntry);
          _os_log_impl((void *)&_mh_execute_header, v71, v72, "Can't make policy document with hash %{public}s and data %{public}s", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1001B7EAC(v69, type metadata accessor for PolicyDocumentMapEntry);
          sub_1001B7EAC(v70, type metadata accessor for PolicyDocumentMapEntry);
        }

        sub_100042D4C();
        uint64_t v125 = swift_allocError();
        *(_OWORD *)uint64_t v126 = xmmword_1002312B0;
        *(unsigned char *)(v126 + 16) = 13;
        v137(0, v125);
        swift_errorRelease();
        uint64_t v101 = (uint64_t)v34;
        goto LABEL_42;
      }
      [v64 setVersion:v65];
      id v66 = [v63 version];
      NSString v67 = [v66 policyHash];

      if (!v67)
      {
        sub_100222270();
        NSString v67 = sub_100222260();
        swift_bridgeObjectRelease();
      }
      [v64 setPolicyHash:v67];

      sub_1000059E8(v44, v45);
      Class v37 = sub_100221BD0().super.isa;
      sub_100005A40(v44, v45);
      [v64 setPolicyData:v37];

      [*(id *)&v152[v139] addPoliciesObject:v64];
      unint64_t v34 = v142;
      sub_1001B7EAC((uint64_t)v142, type metadata accessor for PolicyDocumentMapEntry);
      uint64_t v36 = v149 + v138;
      a4 = v151;
      BOOL v38 = v150-- == 1;
      uint64_t v17 = v140;
      if (v38)
      {
        swift_bridgeObjectRelease();
        a2 = v137;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v77 = sub_100222090();
    sub_100003CC8(v77, (uint64_t)qword_10029E7D0);
    uint64_t v78 = v48;
    uint64_t v79 = sub_100222070();
    os_log_type_t v80 = sub_1002224E0();
    BOOL v81 = os_log_type_enabled(v79, v80);
    uint64_t v82 = (uint64_t)v142;
    if (v81)
    {
      id v83 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v83 = 134217984;
      id v84 = [v78 version];
      id v85 = [v84 versionNumber];

      v154[0] = v85;
      sub_100222690();

      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Received a policy version we didn't request: %llu", v83, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      uint64_t v79 = v78;
    }
    uint64_t v98 = v137;

    sub_100042D4C();
    uint64_t v99 = swift_allocError();
    *(_OWORD *)uint64_t v100 = xmmword_1002312B0;
    *(unsigned char *)(v100 + 16) = 13;
    v98(0, v99);
    swift_errorRelease();

    uint64_t v101 = v82;
LABEL_42:
    sub_1001B7EAC(v101, type metadata accessor for PolicyDocumentMapEntry);
  }
  else
  {
LABEL_25:
    unint64_t v86 = *(void **)&v152[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    v154[0] = 0;
    unsigned __int8 v87 = [v86 save:v154];
    id v88 = v154[0];
    if (v87)
    {
      swift_beginAccess();
      uint64_t v89 = *a4;
      swift_bridgeObjectRetain();
      id v90 = v88;
      unint64_t v91 = (void *)sub_100112E0C(v89, sub_1001F43D4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1001F47D8);
      swift_bridgeObjectRelease();
      if (v91)
      {
        id v92 = [v91 versionNumber];
        sub_100042D4C();
        uint64_t v93 = swift_allocError();
        *(void *)uint64_t v94 = v92;
        *(void *)(v94 + 8) = 0;
        *(unsigned char *)(v94 + 16) = 1;
        a2(0, v93);
        swift_errorRelease();
      }
      else
      {
        swift_beginAccess();
        uint64_t v97 = swift_bridgeObjectRetain();
        a2(v97, 0);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v95 = v154[0];
      uint64_t v96 = sub_100221B40();

      swift_willThrow();
      swift_errorRetain();
      a2(0, v96);
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10015CD28(void *a1, uint64_t a2, unint64_t a3)
{
  if (a3) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = 0;
  }
  if (a3) {
    unint64_t v5 = a3;
  }
  else {
    unint64_t v5 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return result;
}

uint64_t sub_10015CD80(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t RecoverableTLKShares = type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
  uint64_t v7 = *(void *)(RecoverableTLKShares - 8);
  __chkstk_darwin(RecoverableTLKShares - 8, v8);
  uint64_t v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecoverableTLKSharesResponse = type metadata accessor for FetchRecoverableTLKSharesResponse(0);
  uint64_t v13 = __chkstk_darwin(RecoverableTLKSharesResponse - 8, v12);
  uint64_t v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  unint64_t v18 = (unint64_t)v55 - v17;
  uint64_t v19 = sub_1000046DC(&qword_100299DC8);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (void *)((char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v22, &qword_100299DC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v18 = *v22;
    if (qword_100298EB8 == -1)
    {
LABEL_3:
      uint64_t v23 = sub_100222090();
      sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v24 = sub_100222070();
      os_log_type_t v25 = sub_100222500();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        uint64_t v58 = v18;
        uint64_t v59 = v27;
        *(_DWORD *)uint64_t v26 = 136446210;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v28 = sub_1002222C0();
        uint64_t v58 = sub_1001BEBDC(v28, v29, (uint64_t *)&v59);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "fetchRecoverableTlkshares failed: %{public}s", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_errorRetain();
      ((void (*)(void, unint64_t))a2)(0, v18);
      swift_errorRelease();
      return swift_errorRelease();
    }
LABEL_32:
    swift_once();
    goto LABEL_3;
  }
  v55[1] = a3;
  id v56 = a2;
  sub_1001B7B9C((uint64_t)v22, v18, type metadata accessor for FetchRecoverableTLKSharesResponse);
  id v57 = (uint64_t *)v18;
  uint64_t v30 = *(void *)v18;
  int64_t v31 = *(void *)(*(void *)v18 + 16);
  uint64_t v32 = _swiftEmptyArrayStorage;
  v55[0] = v7;
  if (v31)
  {
    uint64_t v59 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10018D17C(0, v31, 0);
    uint64_t v33 = v30 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v34 = *(void *)(v7 + 72);
    uint64_t v35 = v59;
    do
    {
      sub_1001B7C04(v33, (uint64_t)v10, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      uint64_t v36 = *(void *)(*((void *)v10 + 2) + 16);
      sub_1001B7EAC((uint64_t)v10, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10018D17C(0, v35[2] + 1, 1);
        uint64_t v35 = v59;
      }
      unint64_t v18 = v35[2];
      unint64_t v37 = v35[3];
      if (v18 >= v37 >> 1)
      {
        sub_10018D17C(v37 > 1, v18 + 1, 1);
        uint64_t v35 = v59;
      }
      uint64_t v35[2] = v18 + 1;
      v35[v18 + 4] = v36;
      v33 += v34;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v32 = _swiftEmptyArrayStorage;
    uint64_t v38 = v35[2];
    if (v38)
    {
LABEL_13:
      a2 = 0;
      uint64_t v39 = v35 + 4;
      id v40 = v57;
      while (1)
      {
        uint64_t v41 = *v39++;
        BOOL v42 = __OFADD__(a2, v41);
        a2 = (void *)((char *)a2 + v41);
        if (v42) {
          break;
        }
        if (!--v38) {
          goto LABEL_21;
        }
      }
      __break(1u);
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v35 = _swiftEmptyArrayStorage;
    uint64_t v38 = _swiftEmptyArrayStorage[2];
    if (v38) {
      goto LABEL_13;
    }
  }
  a2 = 0;
  id v40 = v57;
LABEL_21:
  swift_bridgeObjectRelease();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_100222090();
  sub_100003CC8(v44, (uint64_t)qword_10029E7D0);
  sub_1001B7C04((uint64_t)v40, (uint64_t)v15, type metadata accessor for FetchRecoverableTLKSharesResponse);
  unint64_t v45 = sub_100222070();
  os_log_type_t v46 = sub_1002224E0();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 134218240;
    id v48 = *(void **)(*(void *)v15 + 16);
    sub_1001B7EAC((uint64_t)v15, type metadata accessor for FetchRecoverableTLKSharesResponse);
    uint64_t v59 = v48;
    sub_100222690();
    *(_WORD *)(v47 + 12) = 2048;
    uint64_t v59 = a2;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "fetchRecoverableTlkshares succeeded: found %ld views and %ld total TLKShares", (uint8_t *)v47, 0x16u);
    swift_slowDealloc();
  }
  else
  {
    sub_1001B7EAC((uint64_t)v15, type metadata accessor for FetchRecoverableTLKSharesResponse);
  }
  uint64_t v49 = (void (*)(void *, void))v56;

  uint64_t v50 = *v40;
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v51 = *(void *)(v50 + 16);
  if (v51)
  {
    uint64_t v52 = v50 + ((*(unsigned __int8 *)(v55[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55[0] + 80));
    uint64_t v53 = *(void *)(v55[0] + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001B7C04(v52, (uint64_t)v10, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      uint64_t v54 = sub_100044CEC();
      sub_1001B7EAC((uint64_t)v10, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
      sub_10011B3FC((unint64_t)v54);
      v52 += v53;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
    uint64_t v32 = v59;
  }
  v49(v32, 0);
  swift_bridgeObjectRelease();
  return sub_1001B7EAC((uint64_t)v57, type metadata accessor for FetchRecoverableTLKSharesResponse);
}

void sub_10015D4A0(void *a1, unint64_t a2, char a3)
{
  id v7 = [a1 permanentInfo];
  NSString v8 = [v7 peerID];

  if (!v8)
  {
    sub_100222270();
    NSString v8 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for PeerMO();
  uint64_t v84 = v3;
  uint64_t v82 = *(void *)(v3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v82];
  [v9 setPeerID:v8];

  id v10 = [a1 permanentInfo];
  id v11 = [v10 data];

  uint64_t v12 = sub_100221BF0();
  unint64_t v14 = v13;

  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v12, v14);
  [v9 setPermanentInfo:isa];

  id v16 = [a1 permanentInfo];
  id v17 = [v16 sig];

  uint64_t v18 = sub_100221BF0();
  unint64_t v20 = v19;

  Class v21 = sub_100221BD0().super.isa;
  sub_100005A40(v18, v20);
  id v83 = v9;
  [v9 setPermanentInfoSig:v21];

  uint64_t v22 = (objc_class *)[a1 stableInfo];
  Class v23 = v22;
  if (v22)
  {
    id v24 = [(objc_class *)v22 data];

    uint64_t v25 = sub_100221BF0();
    unint64_t v27 = v26;

    Class v23 = sub_100221BD0().super.isa;
    sub_100005A40(v25, v27);
  }
  uint64_t v28 = v4;
  unint64_t v29 = v83;
  [v83 setStableInfo:v23];

  uint64_t v30 = (objc_class *)[a1 stableInfo];
  Class v31 = v30;
  if (v30)
  {
    id v32 = [(objc_class *)v30 sig];

    uint64_t v33 = sub_100221BF0();
    unint64_t v35 = v34;

    Class v31 = sub_100221BD0().super.isa;
    sub_100005A40(v33, v35);
  }
  [v83 setStableInfoSig:v31];

  uint64_t v36 = (objc_class *)[a1 dynamicInfo];
  Class v37 = v36;
  if (v36)
  {
    id v38 = [(objc_class *)v36 data];

    uint64_t v39 = sub_100221BF0();
    unint64_t v41 = v40;

    Class v37 = sub_100221BD0().super.isa;
    sub_100005A40(v39, v41);
  }
  [v83 setDynamicInfo:v37];

  BOOL v42 = (objc_class *)[a1 dynamicInfo];
  Class v43 = v42;
  if (v42)
  {
    id v44 = [(objc_class *)v42 sig];

    uint64_t v45 = sub_100221BF0();
    unint64_t v47 = v46;

    Class v43 = sub_100221BD0().super.isa;
    sub_100005A40(v45, v47);
  }
  [v83 setDynamicInfoSig:v43];

  [v83 setIsEgoPeer:a3 & 1];
  uint64_t v48 = v84;
  swift_retain();
  uint64_t v49 = sub_10011A0E0();
  unint64_t v51 = v50;
  swift_release();
  if (v51 >> 60 == 15)
  {
    [v83 setHmacSig:0];
  }
  else
  {
    Class v52 = sub_100221BD0().super.isa;
    id v53 = [a1 calculateHmacWithHmacKey:v52];

    uint64_t v54 = sub_100221BF0();
    unint64_t v56 = v55;

    Class v57 = sub_100221BD0().super.isa;
    uint64_t v48 = v84;
    sub_100005A40(v54, v56);
    [v83 setHmacSig:v57];

    sub_100039FCC(v49, v51);
  }
  uint64_t v58 = &selRef_aessivkey;
  [*(id *)(v48 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) addPeersObject:v83];
  if (!a2)
  {
LABEL_30:

    return;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v59 = sub_100222970();
    if (v59) {
      goto LABEL_17;
    }
LABEL_32:

    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v59 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v59) {
    goto LABEL_32;
  }
LABEL_17:
  uint64_t v85 = v59 - 1;
  if (v59 >= 1)
  {
    uint64_t v60 = 0;
    if ((a2 & 0xC000000000000001) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    for (id i = (id)sub_100222880(); ; id i = *(id *)(a2 + 8 * v60 + 32))
    {
      id v62 = i;
      id v63 = [v29 vouchers];
      if (v63)
      {
        id v64 = v63;
        type metadata accessor for VoucherMO();
        sub_1001A56AC(&qword_10029EF88, (void (*)(uint64_t))type metadata accessor for VoucherMO);
        sub_100222430();
      }
      swift_bridgeObjectRelease();
      id v65 = v62;
      uint64_t v66 = v28;
      sub_1001A5E08((uint64_t)&_swiftEmptySetSingleton, v65);
      char v68 = v67;
      swift_bridgeObjectRelease();

      if (v68)
      {
      }
      else
      {
        type metadata accessor for VoucherMO();
        id v69 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v82];
        id v70 = [v65 v58[37]];
        uint64_t v71 = sub_100221BF0();
        unint64_t v73 = v72;

        Class v74 = sub_100221BD0().super.isa;
        sub_100005A40(v71, v73);
        [v69 setVoucherInfo:v74];

        id v75 = [v65 sig];
        uint64_t v76 = sub_100221BF0();
        unint64_t v78 = v77;

        Class v79 = sub_100221BD0().super.isa;
        uint64_t v80 = v76;
        uint64_t v58 = &selRef_aessivkey;
        sub_100005A40(v80, v78);
        [v69 setVoucherInfoSig:v79];

        uint64_t v28 = v66;
        unint64_t v29 = v83;
        [v83 addVouchersObject:v69];
      }
      if (v85 == v60) {
        break;
      }
      ++v60;
      if ((a2 & 0xC000000000000001) != 0) {
        goto LABEL_19;
      }
LABEL_20:
      ;
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_30;
  }
  __break(1u);
}

void sub_10015DC68(unint64_t a1, unint64_t a2, void *a3, uint64_t a4, NSObject *a5)
{
  uint64_t v7 = v5;
  uint64_t v65 = a4;
  id v69 = a3;
  id v70 = a5;
  unint64_t v64 = a2;
  uint64_t v9 = type metadata accessor for TLKShare(0);
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  uint64_t v11 = __chkstk_darwin(v9, v10);
  unint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  id v16 = (char *)&v60 - v15;
  uint64_t v17 = type metadata accessor for ViewKeys(0);
  uint64_t v71 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  unint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = _swiftEmptyArrayStorage;
  Class v21 = (char *)(a1 >> 62);
  if (a1 >> 62) {
    goto LABEL_77;
  }
  uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    id v62 = v21;
    id v63 = v16;
    unint64_t v73 = a1;
    uint64_t v74 = v7;
    uint64_t v60 = v13;
    if (v22)
    {
      if (v22 < 1)
      {
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      uint64_t v23 = 0;
      Class v21 = (char *)(a1 & 0xC000000000000001);
      do
      {
        if (v21) {
          id v24 = (id)sub_100222880();
        }
        else {
          id v24 = *(id *)(a1 + 8 * v23 + 32);
        }
        uint64_t v25 = v24;
        if (objc_msgSend(v24, "newUpload", v60))
        {
          sub_1002228B0();
          id v16 = (char *)v76[2];
          sub_1002228E0();
          sub_1002228F0();
          sub_1002228C0();
        }
        else
        {
        }
        ++v23;
        a1 = v73;
      }
      while (v22 != v23);
      swift_bridgeObjectRelease();
      uint64_t v6 = (uint64_t)v76;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
    }
    uint64_t v26 = ((unint64_t)v6 >> 62) & 1;
    if (v6 < 0) {
      LODWORD(v26) = 1;
    }
    int v61 = v26;
    if (v26 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_100222970();
      swift_release();
    }
    else
    {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    uint64_t v72 = v6;
    if (v7)
    {
      uint64_t v76 = _swiftEmptyArrayStorage;
      sub_10018D1F8(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0) {
        goto LABEL_80;
      }
      uint64_t v27 = 0;
      Class v21 = (char *)(v6 & 0xC000000000000001);
      do
      {
        if (v21) {
          id v28 = (id)sub_100222880();
        }
        else {
          id v28 = *(id *)(v6 + 8 * v27 + 32);
        }
        uint64_t v30 = v28;
        *(&v60 - 2) = (char *)__chkstk_darwin(v28, v29);
        sub_1001A56AC(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
        uint64_t v31 = v74;
        sub_100221F70();

        id v32 = v76;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v74 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10018D1F8(0, v32[2] + 1, 1);
          id v32 = v76;
        }
        unint64_t v35 = v32[2];
        unint64_t v34 = v32[3];
        id v16 = (char *)(v35 + 1);
        if (v35 >= v34 >> 1)
        {
          sub_10018D1F8(v34 > 1, v35 + 1, 1);
          id v32 = v76;
        }
        ++v27;
        uint64_t v32[2] = v16;
        sub_1001B7B9C((uint64_t)v20, (uint64_t)v32+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v35, type metadata accessor for ViewKeys);
        uint64_t v6 = v72;
      }
      while (v7 != v27);
      a1 = v73;
    }
    if (v62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_100222970();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    Class v37 = _swiftEmptyArrayStorage;
    if (v36)
    {
      uint64_t v76 = _swiftEmptyArrayStorage;
      sub_1002228D0();
      if (v36 < 0) {
        goto LABEL_81;
      }
      uint64_t v7 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v38 = (id)sub_100222880();
        }
        else {
          id v38 = *(id *)(v73 + 8 * v7 + 32);
        }
        uint64_t v39 = v38;
        ++v7;
        id v40 = objc_msgSend(v38, "tlk", v60);

        sub_1002228B0();
        sub_1002228E0();
        sub_1002228F0();
        sub_1002228C0();
      }
      while (v36 != v7);
      Class v37 = v76;
    }
    unint64_t v41 = (char *)v74;
    uint64_t v42 = sub_100116CE4(v37, (uint64_t)v69, (uint64_t)v69, (uint64_t)v70);
    id v16 = v41;
    if (v41)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    Class v21 = (char *)v42;
    swift_bridgeObjectRelease();
    if (!(v64 >> 62))
    {
      uint64_t v43 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_46;
    }
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_100222970();
    swift_bridgeObjectRelease();
LABEL_46:
    unint64_t v73 = (unint64_t)v21;
    if (!v43)
    {
      unint64_t v20 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_64;
    }
    uint64_t v76 = _swiftEmptyArrayStorage;
    sub_10018D1BC(0, v43 & ~(v43 >> 63), 0);
    if (v43 < 0) {
      break;
    }
    if ((v64 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v43; ++i)
      {
        uint64_t v45 = sub_100222880();
        *(&v60 - 2) = (char *)__chkstk_darwin(v45, v46);
        sub_1001A56AC(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
        sub_100221F70();
        swift_unknownObjectRelease();
        unint64_t v20 = (char *)v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D1BC(0, *((void *)v20 + 2) + 1, 1);
          unint64_t v20 = (char *)v76;
        }
        unint64_t v48 = *((void *)v20 + 2);
        unint64_t v47 = *((void *)v20 + 3);
        if (v48 >= v47 >> 1)
        {
          sub_10018D1BC(v47 > 1, v48 + 1, 1);
          unint64_t v20 = (char *)v76;
        }
        *((void *)v20 + 2) = v48 + 1;
        sub_1001B7B9C((uint64_t)v63, (uint64_t)&v20[((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v48], type metadata accessor for TLKShare);
      }
    }
    else
    {
      unint64_t v49 = v64 + 32;
      uint64_t v50 = sub_1001A56AC(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
      uint64_t v74 = v50;
      uint64_t v52 = (uint64_t)v60;
      do
      {
        __chkstk_darwin(v50, v51);
        *(&v60 - 2) = v53;
        uint64_t v54 = v53;
        sub_100221F70();

        unint64_t v20 = (char *)v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D1BC(0, *((void *)v20 + 2) + 1, 1);
          unint64_t v20 = (char *)v76;
        }
        unint64_t v56 = *((void *)v20 + 2);
        unint64_t v55 = *((void *)v20 + 3);
        if (v56 >= v55 >> 1)
        {
          sub_10018D1BC(v55 > 1, v56 + 1, 1);
          unint64_t v20 = (char *)v76;
        }
        *((void *)v20 + 2) = v56 + 1;
        uint64_t v50 = sub_1001B7B9C(v52, (uint64_t)&v20[((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v56], type metadata accessor for TLKShare);
        v49 += 8;
        --v43;
      }
      while (v43);
    }
    uint64_t v6 = v72;
LABEL_64:
    uint64_t v76 = _swiftEmptyArrayStorage;
    if (v61)
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = (char *)sub_100222970();
      swift_release();
      if (!v13) {
        goto LABEL_75;
      }
    }
    else
    {
      unint64_t v13 = *(char **)(v6 + 16);
      if (!v13)
      {
LABEL_75:
        swift_release();
        unint64_t v75 = v73;
        uint64_t v59 = swift_bridgeObjectRetain();
        sub_10011B5C8(v59);
        sub_10011B5C8((uint64_t)v20);
        swift_bridgeObjectRelease();
        return;
      }
    }
    a1 = v6 & 0xC000000000000001;
    uint64_t v6 = 4;
    while (1)
    {
      uint64_t v7 = v6 - 4;
      id v57 = a1 ? (id)sub_100222880() : *(id *)(v72 + 8 * v6);
      uint64_t v58 = v57;
      Class v21 = (char *)(v6 - 3);
      if (__OFADD__(v7, 1)) {
        break;
      }
      sub_10015E630(v66, v65, v58, v69, v70);
      if (v16) {
        goto LABEL_84;
      }
      id v16 = 0;

      ++v6;
      if (v21 == v13) {
        goto LABEL_75;
      }
    }
    __break(1u);
LABEL_77:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100222970();
  }
  __break(1u);
LABEL_84:
  __break(1u);
}

void sub_10015E630(char *a1, uint64_t a2, void *a3, void *a4, NSObject *a5)
{
  id v9 = *(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  id v10 = [a3 tlk];
  id v11 = [v10 zoneID];

  NSString v12 = [v11 zoneName];
  if (!v12)
  {
    sub_100222270();
    NSString v12 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  id v55 = 0;
  id v13 = [v9 getPeerIDsTrustedByPeerWithDynamicInfo:a2 toAccessView:v12 error:&v55];

  id v14 = v55;
  p_vtable = VoucherMO.vtable;
  if (v13)
  {
    uint64_t v50 = a4;
    os_log_t log = a5;
    uint64_t v16 = sub_100222440();
    id v17 = v14;

    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_100222090();
    sub_100003CC8(v18, (uint64_t)qword_10029E7D0);
    id v19 = a3;
    swift_bridgeObjectRetain_n();
    id v20 = v19;
    Class v21 = sub_100222070();
    os_log_type_t v22 = sub_1002224E0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      id v55 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446466;
      unint64_t v49 = a3;
      id v24 = [v20 tlk];
      id v25 = [v24 description];
      uint64_t v26 = sub_100222270();
      unint64_t v28 = v27;

      sub_1001BEBDC(v26, v28, (uint64_t *)&v55);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_100222450();
      unint64_t v31 = v30;
      swift_bridgeObjectRelease();
      sub_1001BEBDC(v29, v31, (uint64_t *)&v55);
      p_vtable = (void **)(VoucherMO + 24);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      a3 = v49;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Planning to share %{public}s with peers %{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v33 = a1;
    uint64_t v34 = sub_100199344(v16, (uint64_t)v33);
    if (!v54)
    {
      unint64_t v45 = v34;
      swift_bridgeObjectRelease();

      id v46 = v20;
      id v47 = v50;
      unint64_t v48 = sub_10019812C(v45, v46, v47, (uint64_t)log);
      swift_bridgeObjectRelease();

      sub_10011B5C8((uint64_t)v48);
      return;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v32 = v55;
    sub_100221B40();

    swift_willThrow();
  }
  if (p_vtable[471] != (void *)-1) {
    swift_once();
  }
  uint64_t v35 = sub_100222090();
  sub_100003CC8(v35, (uint64_t)qword_10029E7D0);
  id v36 = a3;
  swift_errorRetain();
  id v37 = v36;
  swift_errorRetain();
  id v38 = sub_100222070();
  os_log_type_t v39 = sub_100222500();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    loga = v38;
    unint64_t v41 = (void *)swift_slowAlloc();
    id v55 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138543618;
    id v42 = v37;
    sub_100222690();
    void *v41 = v37;

    *(_WORD *)(v40 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v43 = sub_1002222C0();
    sub_1001BEBDC(v43, v44, (uint64_t *)&v55);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, loga, v39, "Unable to create TLKShares for keyset %{public}@: %{public}s", (uint8_t *)v40, 0x16u);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
}

id sub_10015ED1C(uint64_t a1, char *a2, char *a3, void *a4, objc_class *a5, void *a6, NSString a7, uint64_t a8, void *a9, uint64_t a10)
{
  id v89 = a6;
  id v90 = a5;
  uint64_t v91 = a10;
  uint64_t v86 = sub_100222090();
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v17);
  uint64_t v85 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = v10;
  uint64_t v80 = (char *)OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v19 = *(id *)(v10 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  NSString v20 = sub_100222260();
  if (a7) {
    a7 = sub_100222260();
  }
  uint64_t v83 = a1;
  uint64_t v82 = a3;
  BOOL v81 = a2;
  if (a8) {
    v21.super.Class isa = sub_1002223B0().super.isa;
  }
  else {
    v21.super.Class isa = 0;
  }
  uint64_t v88 = OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey;
  id v22 = *(id *)(v91 + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey);
  uint64_t v23 = (void *)sub_1001EAB00();
  id v94 = 0;
  id v24 = a4;
  id v25 = v90;
  id v26 = [v19 dynamicInfoForJoiningPeerID:v20 peerPermanentInfo:a4 peerStableInfo:v90 sponsorID:a7 preapprovedKeys:v21.super.isa signingKeyPair:v22 currentMachineIDs:v23 error:&v94];

  id v89 = v26;
  if (!v26)
  {
    id v33 = v94;
    sub_100221B40();

    swift_willThrow();
    return v89;
  }
  id v27 = v94;
  if (sub_10015F7E0((uint64_t)[(objc_class *)v25 syncUserControllableViews], (uint64_t)&off_1002815E0))
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 1;
    id v31 = v89;
    id v32 = v24;
LABEL_35:
    v95[0] = 0;
    v95[1] = v30;
    long long v96 = 0u;
    long long v97 = 0u;
    uint64_t v98 = 0;
    uint64_t v99 = v28;
    uint64_t v100 = 0;
    uint64_t v101 = v29;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    uint64_t v102 = 0;
    id v64 = *(id *)(v91 + v88);
    uint64_t v65 = v25;
    id v34 = v31;
    uint64_t v66 = v87;
    uint64_t v67 = (void *)sub_10017EDF4((char *)v95, v32, v65, v31, (uint64_t)v64, a9);

    if (v66)
    {

      sub_1001B4204(0, v30, 0, 0, 0, 0, 0, v28, 0, v29, 0, 0, 0);
    }
    else
    {
      sub_1001B4204(0, v30, 0, 0, 0, 0, 0, v28, 0, v29, 0, 0, 0);
      uint64_t v68 = type metadata accessor for Peer(0);
      __chkstk_darwin(v68, v69);
      id v70 = v82;
      *(&v80 - 8) = v81;
      *(&v80 - 7) = v70;
      unint64_t v75 = v32;
      uint64_t v76 = v67;
      unint64_t v77 = v90;
      id v78 = v34;
      Class v79 = a9;
      sub_1001A56AC((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
      sub_100221F70();
    }
    return v34;
  }
  id v32 = v24;
  id v35 = [v24 modelID];
  sub_100222270();

  v105._countAndFlagsBits = 0x5654656C707041;
  v105._object = (void *)0xE700000000000000;
  LOBYTE(v35) = sub_100222340(v105);
  swift_bridgeObjectRelease();
  if (v35)
  {
    uint64_t v36 = 3;
    uint64_t v37 = v86;
    uint64_t v38 = v84;
    goto LABEL_15;
  }
  id v39 = [v24 modelID];
  sub_100222270();

  v106._countAndFlagsBits = 0x6363416F69647541;
  v106._object = (void *)0xEE0079726F737365;
  LOBYTE(v39) = sub_100222340(v106);
  swift_bridgeObjectRelease();
  uint64_t v37 = v86;
  uint64_t v38 = v84;
  if ((v39 & 1) != 0
    || (id v40 = [v32 modelID],
        sub_100222270(),
        v40,
        v107._countAndFlagsBits = 0x6863746157,
        v107._object = (void *)0xE500000000000000,
        LOBYTE(v40) = sub_100222340(v107),
        swift_bridgeObjectRelease(),
        (v40 & 1) != 0))
  {
    uint64_t v36 = 3;
    goto LABEL_15;
  }
  id v47 = *(void **)&v80[v92];
  id v94 = 0;
  id v48 = [v47 userViewSyncabilityConsensusAmongTrustedPeers:v89 error:&v94];
  if (!v94)
  {
    uint64_t v36 = (uint64_t)v48;
    unint64_t v41 = v85;
    if (v48 != 2) {
      goto LABEL_16;
    }
    if ([*(id *)(v92 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_managedConfigurationAdapter) isCloudKeychainSyncAllowed])
    {
      uint64_t v36 = 2;
      goto LABEL_16;
    }
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    sub_100003CC8(v37, (uint64_t)qword_10029E7D0);
    uint64_t v72 = sub_100222070();
    os_log_type_t v73 = sub_1002224E0();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "user-controllable views disabled by profile", v74, 2u);
      swift_slowDealloc();
    }

    uint64_t v36 = 1;
LABEL_15:
    unint64_t v41 = v85;
LABEL_16:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_100003CC8(v37, (uint64_t)qword_10029E7D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v41, v42, v37);
    uint64_t v43 = sub_100222070();
    os_log_type_t v44 = sub_1002224E0();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = (char *)swift_slowAlloc();
      id v94 = v80;
      *(_DWORD *)unint64_t v45 = 136446210;
      switch((int)v36)
      {
        case 0:
          id v46 = @"UNKNOWN";
          goto LABEL_31;
        case 1:
          id v46 = @"DISABLED";
          goto LABEL_31;
        case 2:
          id v46 = @"ENABLED";
          goto LABEL_31;
        case 3:
          id v46 = @"FOLLOWING";
LABEL_31:
          id v57 = v46;
          break;
        default:
          id v46 = +[NSString stringWithFormat:@"(unknown: %i)", v36];
          break;
      }
      os_log_type_t v58 = v44;
      uint64_t v84 = v36;
      uint64_t v59 = v46;
      if (!v59)
      {
        __break(1u);
        JUMPOUT(0x10015F7D0);
      }
      uint64_t v60 = v59;
      uint64_t v61 = sub_100222270();
      unint64_t v63 = v62;

      uint64_t v93 = sub_1001BEBDC(v61, v63, (uint64_t *)&v94);
      sub_100222690();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v58, "join: setting 'user view sync' control as: %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v38 + 8))(v85, v86);
      LODWORD(v36) = v84;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
    }
    uint64_t v30 = 0;
    uint64_t v29 = v36;
    uint64_t v28 = 1;
    id v31 = v89;
    id v25 = v90;
    goto LABEL_35;
  }
  id v49 = v94;
  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  sub_100003CC8(v37, (uint64_t)qword_10029E7D0);
  uint64_t v50 = v49;
  uint64_t v51 = sub_100222070();
  os_log_type_t v52 = sub_100222500();
  if (os_log_type_enabled(v51, v52))
  {
    id v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    *(_DWORD *)id v53 = 138543362;
    id v55 = v50;
    unint64_t v56 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v94 = v56;
    sub_100222690();
    *uint64_t v54 = v56;

    _os_log_impl((void *)&_mh_execute_header, v51, v52, "error getting user view sync consensus: %{public}@", v53, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v51 = v50;
  }

  swift_willThrow();
  id v34 = v89;

  return v34;
}

uint64_t sub_10015F7E0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10015F844(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v72 = a8;
  id v68 = a7;
  id v64 = a6;
  uint64_t v65 = a5;
  uint64_t v12 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v70 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  __chkstk_darwin(v12, v13);
  uint64_t v69 = (uint64_t *)((char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (uint64_t *)((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (uint64_t *)((char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  id v24 = a4;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v25 = [v24 data];
  uint64_t v26 = sub_100221BF0();
  uint64_t v28 = v27;

  *uint64_t v23 = v26;
  v23[1] = v28;
  id v29 = [v24 sig];
  uint64_t v30 = sub_100221BF0();
  uint64_t v32 = v31;

  _OWORD v23[2] = v30;
  v23[3] = v32;
  id v33 = (int *)type metadata accessor for Peer(0);
  uint64_t v34 = (uint64_t)a1 + v33[7];
  sub_10004015C(v34, &qword_10029EF80);
  sub_1001B7B9C((uint64_t)v23, v34, type metadata accessor for SignedPeerPermanentInfo);
  uint64_t v35 = v19;
  uint64_t v36 = v65;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v35);
  id v37 = v36;
  if (!v36) {
    id v37 = v64;
  }
  uint64_t v38 = v67;
  id v39 = v36;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v40 = [v37 data];
  uint64_t v41 = sub_100221BF0();
  uint64_t v43 = v42;

  *uint64_t v18 = v41;
  v18[1] = v43;
  id v44 = [v37 sig];
  uint64_t v45 = sub_100221BF0();
  uint64_t v47 = v46;

  v18[2] = v45;
  v18[3] = v47;
  uint64_t v48 = (uint64_t)a1 + v33[8];
  sub_10004015C(v48, &qword_100299F18);
  sub_1001B7B9C((uint64_t)v18, v48, type metadata accessor for SignedPeerStableInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v48, 0, 1, v38);
  uint64_t v49 = v71;
  uint64_t v50 = v69;
  id v51 = v68;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v52 = [v51 data];
  uint64_t v53 = sub_100221BF0();
  uint64_t v55 = v54;

  *uint64_t v50 = v53;
  v50[1] = v55;
  id v56 = [v51 sig];
  uint64_t v57 = sub_100221BF0();
  uint64_t v59 = v58;

  v50[2] = v57;
  v50[3] = v59;
  uint64_t v60 = (uint64_t)a1 + v33[9];
  sub_10004015C(v60, &qword_10029ECA0);
  sub_1001B7B9C((uint64_t)v50, v60, type metadata accessor for SignedPeerDynamicInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v60, 0, 1, v49);
  uint64_t v61 = v72;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  a1[2] = v61;
  return result;
}

uint64_t sub_10015FCF4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  id v31 = v16;
  uint64_t v18 = sub_1001984DC(v31, 0xD000000000000074, 0x8000000100244DB0);

  uint64_t v30 = (void *)swift_allocObject();
  uint64_t v30[2] = v18;
  v30[3] = a15;
  v30[4] = a16;
  uint64_t v19 = sub_100222270();
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001B4E5C();
  char v23 = v22;
  id v24 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v25 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v29 = sub_100062F10(0, a8, a9, a10, a11, a12, a13, v19, v21, v23, a14, v24);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1001B4E08;
  *(void *)(v26 + 24) = v30;
  *(void *)(v26 + 32) = v29;
  *(void *)(v26 + 40) = a8;
  *(void *)(v26 + 48) = a9;
  *(void *)(v26 + 56) = a10;
  *(void *)(v26 + 64) = a11;
  *(void *)(v26 + 72) = a12;
  *(void *)(v26 + 80) = a13;
  *(unsigned char *)(v26 + 88) = a14;
  *(void *)(v26 + 96) = v31;
  *(void *)(v26 + 104) = a1;
  *(void *)(v26 + 112) = a2;
  *(void *)(v26 + 120) = a3;
  *(void *)(v26 + 128) = a4;
  *(void *)(v26 + 136) = a7;
  *(void *)(v26 + 144) = a5;
  *(void *)(v26 + 152) = a6;
  v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v27 = v29;
  sub_1000059E8(a1, a2);
  sub_1000059E8(a3, a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100174E30(0, (uint64_t)sub_1001B5018, v26);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_10015FFA0(uint64_t a1, void (*a2)(void, void, void *, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12, uint64_t a13, unint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (a1)
  {
    a2(0, 0, _swiftEmptyArrayStorage, 0, a1);
    uint64_t v21 = self;
    uint64_t v38 = (void *)sub_100221B30();
    [v21 sendMetricWithEvent:a4 success:0 error:v38];
  }
  else
  {
    [self sendMetricWithEvent:a4 success:1 error:0];
    uint64_t v35 = sub_100222270();
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001B4E5C();
    char v29 = v28;
    uint64_t v30 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
    objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
    uint64_t v34 = a7;
    id v31 = sub_100062F10(0, a5, a6, a7, a8, a9, a10, v35, v27, v29, a11 & 1, v30);
    __chkstk_darwin(v31, v32);
    sub_1000046DC(&qword_100299698);
    sub_1002225C0();
    if (v39)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v33 = v31;
      uint64_t v36 = a12;
      sub_1000059E8(a13, a14);
      sub_1000059E8(a15, a16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1001AE354(v39, v36, v33, v36, a13, a14, a15, a16, (uint64_t)a2, a3, a17, a18, a19, v34, a8, a9, a10, a5, a6,
        a11 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100005A40(a15, a16);
      sub_100005A40(a13, a14);
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

void sub_10016038C(uint64_t a1@<X0>, void (*a2)(void, void, void *, void, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  BOOL v5 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v19 = 0;
  id v6 = [v5 allPolicyVersionsWithError:&v19];
  id v7 = v19;
  if (v6)
  {
    NSString v8 = v6;
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
    uint64_t v9 = sub_100222440();
    id v10 = v7;
  }
  else
  {
    id v11 = v19;
    uint64_t v12 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138543362;
      swift_errorRetain();
      uint64_t v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v19 = v17;
      sub_100222690();
      *uint64_t v18 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error fetching all policy versions: %{public}@", v16, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(0, 0, _swiftEmptyArrayStorage, 0, v12);
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v9 = 0;
  }
  *a3 = v9;
}

void sub_100160684(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void, void, void *, void, uint64_t), uint64_t a6, char *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_1000059E8(a1, a2);
  sub_1000059E8(a3, a4);
  Class isa = sub_100221BD0().super.isa;
  Class v25 = sub_100221BD0().super.isa;
  id v26 = [self voucherInfoWithData:isa sig:v25];
  sub_100005A40(a3, a4);
  sub_100005A40(a1, a2);

  if (v26)
  {
    uint64_t v141 = a5;
    uint64_t v143 = a6;
    id v27 = *(id *)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    NSString v28 = [v26 sponsorID];
    if (!v28)
    {
      sub_100222270();
      NSString v28 = sub_100222260();
      swift_bridgeObjectRelease();
    }
    v145[0] = 0;
    id v29 = [v27 peerWithID:v28 error:v145];

    uint64_t v30 = v145[0];
    if (v145[0])
    {
      id v31 = (id)v145[0];

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_100222090();
      sub_100003CC8(v32, (uint64_t)qword_10029E7D0);
      id v33 = v26;
      id v34 = v31;
      id v35 = v33;
      id v36 = v34;
      id v37 = sub_100222070();
      os_log_type_t v38 = sub_100222500();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v140 = (void *)swift_slowAlloc();
        v145[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 136315394;
        id v40 = [v35 sponsorID];
        uint64_t v41 = sub_100222270();
        unint64_t v43 = v42;

        sub_1001BEBDC(v41, v43, v145);
        sub_100222690();

        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2114;
        id v44 = v36;
        uint64_t v144 = _swift_stdlib_bridgeErrorToNSError();
        sub_100222690();
        *uint64_t v140 = v144;

        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Error getting sponsor (%s): %{public}@", (uint8_t *)v39, 0x16u);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v89 = v36;
      v141(0, 0, _swiftEmptyArrayStorage, 0, v30);

      return;
    }
    if (!v29)
    {
      id v90 = [v26 sponsorID];
      uint64_t v91 = sub_100222270();
      uint64_t v93 = v92;

      sub_100042D4C();
      uint64_t v94 = swift_allocError();
      *(void *)uint64_t v95 = v91;
      *(void *)(v95 + 8) = v93;
      *(unsigned char *)(v95 + 16) = 0;
      a5(0, 0, _swiftEmptyArrayStorage, 0, v94);
      swift_errorRelease();

      return;
    }
    uint64_t v47 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
    uint64_t v48 = *(void **)&a7[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO];
    id v137 = v29;
    id v49 = [v48 egoPeerID];
    if (v49)
    {
      uint64_t v50 = v49;
      uint64_t v51 = sub_100222270();
      uint64_t v53 = v52;

      id v54 = [*(id *)&a7[v47] egoPeerPermanentInfo];
      if (v54)
      {
        uint64_t v55 = v54;
        uint64_t v135 = sub_100221BF0();
        unint64_t v136 = v56;

        id v57 = [*(id *)&a7[v47] egoPeerPermanentInfoSig];
        if (v57)
        {
          uint64_t v58 = v57;
          uint64_t v59 = sub_100221BF0();
          unint64_t v133 = v60;
          uint64_t v134 = v59;

          id v61 = [*(id *)&a7[v47] egoPeerStableInfo];
          if (v61)
          {
            unint64_t v62 = v61;
            uint64_t v63 = sub_100221BF0();
            unint64_t v65 = v64;

            id v66 = [*(id *)&a7[v47] egoPeerStableInfoSig];
            if (v66)
            {
              uint64_t v67 = v66;
              uint64_t v128 = v63;
              unint64_t v129 = v65;
              uint64_t v130 = sub_100221BF0();
              unint64_t v131 = v68;

              id v132 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
              swift_bridgeObjectRetain();
              sub_1000059E8(v135, v136);
              sub_1000059E8(v134, v133);
              v127._countAndFlagsBits = v51;
              NSString v69 = sub_100222260();
              swift_bridgeObjectRelease();
              Class v70 = sub_100221BD0().super.isa;
              Class v71 = sub_100221BD0().super.isa;
              id v72 = [self permanentInfoWithPeerID:v69 data:v70 sig:v71 keyFactory:v132];
              sub_100005A40(v134, v133);
              sub_100005A40(v135, v136);

              if (!v72)
              {
                swift_bridgeObjectRelease();
                sub_100042D4C();
                uint64_t v98 = swift_allocError();
                *(_OWORD *)uint64_t v99 = xmmword_1002297C0;
                *(unsigned char *)(v99 + 16) = 13;
                v141(0, 0, _swiftEmptyArrayStorage, 0, v98);

                sub_100005A40(v135, v136);
                sub_100005A40(v134, v133);
                sub_100005A40(v128, v129);

                swift_errorRelease();
                sub_100005A40(v130, v131);

                return;
              }
              v127._object = v53;
              id v73 = objc_allocWithZone((Class)TPPeerStableInfo);
              unint64_t v74 = v129;
              sub_1000059E8(v128, v129);
              sub_1000059E8(v130, v131);
              Class v75 = sub_100221BD0().super.isa;
              Class v76 = sub_100221BD0().super.isa;
              id v77 = [v73 initWithData:v75 sig:v76];
              sub_100005A40(v130, v131);
              sub_100005A40(v128, v129);

              if (!v77)
              {
                swift_bridgeObjectRelease();
                sub_100042D4C();
                uint64_t v100 = swift_allocError();
                *(_OWORD *)uint64_t v101 = xmmword_100229940;
                *(unsigned char *)(v101 + 16) = 13;
                v141(0, 0, _swiftEmptyArrayStorage, 0, v100);

                sub_100005A40(v135, v136);
                sub_100005A40(v134, v133);
                sub_100005A40(v128, v129);

                sub_100005A40(v130, v131);
                swift_errorRelease();

                return;
              }
              id v78 = v77;
              id v79 = [v72 machineID];
              uint64_t v80 = sub_100222270();
              unint64_t v82 = v81;

              LOBYTE(v79) = sub_1001EAE4C(v80, v82);
              swift_bridgeObjectRelease();
              if (v79)
              {
                uint64_t v83 = swift_allocObject();
                *(void *)(v83 + 16) = v141;
                *(void *)(v83 + 24) = v143;
                *(void *)(v83 + 32) = a7;
                *(Swift::String *)(v83 + 40) = v127;
                *(void *)(v83 + 56) = v72;
                *(void *)(v83 + 64) = v78;
                *(void *)(v83 + 72) = v137;
                *(void *)(v83 + 80) = a8;
                *(void *)(v83 + 88) = v26;
                *(void *)(v83 + 96) = a9;
                *(void *)(v83 + 104) = a10;
                *(void *)(v83 + 112) = v135;
                *(void *)(v83 + 120) = v136;
                *(void *)(v83 + 128) = v134;
                *(void *)(v83 + 136) = v133;
                *(void *)(v83 + 144) = a11;
                *(void *)(v83 + 152) = a12;
                *(void *)(v83 + 160) = a13;
                *(void *)(v83 + 168) = a14;
                *(void *)(v83 + 176) = a15;
                *(void *)(v83 + 184) = a16;
                *(unsigned char *)(v83 + 192) = a17 & 1;
                strcpy((char *)v145, "signing-key ");
                BYTE5(v145[1]) = 0;
                HIWORD(v145[1]) = -5120;
                sub_100222310(v127);
                uint64_t v84 = v145[1];
                uint64_t v138 = v145[0];
                swift_bridgeObjectRetain_n();
                id v142 = v137;
                sub_1000059E8(v135, v136);
                sub_1000059E8(v134, v133);
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain();
                uint64_t v85 = a7;
                id v86 = v72;
                id v87 = v78;
                swift_bridgeObjectRetain();
                id v88 = v26;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_10019ED6C(v138, v84, (void (*)(char *, uint64_t))sub_1001B5328, v83, v127._countAndFlagsBits, v127._object);

                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease_n();
                sub_100005A40(v135, v136);
                sub_100005A40(v134, v133);
                sub_100005A40(v128, v129);

                sub_100005A40(v130, v131);
                swift_bridgeObjectRelease();
                swift_release();

                return;
              }
              swift_bridgeObjectRelease();
              if (qword_100298EB8 != -1) {
                swift_once();
              }
              uint64_t v102 = sub_100222090();
              sub_100003CC8(v102, (uint64_t)qword_10029E7D0);
              id v103 = v72;
              uint64_t v104 = sub_100222070();
              os_log_type_t v105 = sub_1002224E0();
              if (os_log_type_enabled(v104, v105))
              {
                Swift::String v106 = (uint8_t *)swift_slowAlloc();
                v145[0] = swift_slowAlloc();
                *(_DWORD *)Swift::String v106 = 136446210;
                Swift::String v107 = v78;
                id v108 = v26;
                id v109 = [v103 machineID];
                uint64_t v110 = sub_100222270();
                unint64_t v112 = v111;

                id v26 = v108;
                id v78 = v107;
                sub_1001BEBDC(v110, v112, v145);
                sub_100222690();

                unint64_t v113 = v103;
                unint64_t v74 = v129;
                uint64_t v114 = v128;
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v104, v105, "join: self machineID %{public}s not on list", v106, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                id v115 = &selRef_setAllSelves_;
              }
              else
              {
                uint64_t v114 = v128;

                unint64_t v113 = v103;
                id v115 = &selRef_setAllSelves_;
              }
              id v116 = objc_allocWithZone((Class)SecTapToRadar);
              NSString v117 = sub_100222260();
              NSString v118 = sub_100222260();
              NSString v119 = sub_100222260();
              id v120 = [v116 initTapToRadar:v117 description:v118 radar:v119];

              [v120 trigger];
              id v121 = [v113 v115[155]];
              uint64_t v122 = sub_100222270();
              uint64_t v124 = v123;

              sub_100042D4C();
              uint64_t v125 = swift_allocError();
              *(void *)uint64_t v126 = v122;
              *(void *)(v126 + 8) = v124;
              *(unsigned char *)(v126 + 16) = 2;
              v141(0, 0, _swiftEmptyArrayStorage, 0, v125);

              sub_100005A40(v135, v136);
              sub_100005A40(v134, v133);
              sub_100005A40(v114, v74);

              sub_100005A40(v130, v131);
LABEL_30:
              swift_errorRelease();
              return;
            }
            sub_100005A40(v63, v65);
          }
          sub_100005A40(v134, v133);
        }
        sub_100005A40(v135, v136);
      }
      swift_bridgeObjectRelease();
    }
    sub_100042D4C();
    uint64_t v96 = swift_allocError();
    *(_OWORD *)uint64_t v97 = xmmword_1002297D0;
    *(unsigned char *)(v97 + 16) = 13;
    v141(0, 0, _swiftEmptyArrayStorage, 0, v96);

    goto LABEL_30;
  }
  sub_100042D4C();
  uint64_t v45 = swift_allocError();
  *(_OWORD *)uint64_t v46 = xmmword_1002312C0;
  *(unsigned char *)(v46 + 16) = 13;
  a5(0, 0, _swiftEmptyArrayStorage, 0, v45);

  swift_errorRelease();
}

uint64_t sub_1001615F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  uint64_t v25 = a3;
  if (a1)
  {
    id v51 = *(id *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a5;
    *(void *)(v31 + 24) = a6;
    *(void *)(v31 + 32) = a7;
    *(void *)(v31 + 40) = a8;
    *(void *)(v31 + 48) = a9;
    *(void *)(v31 + 56) = a10;
    *(void *)(v31 + 64) = a11;
    *(void *)(v31 + 72) = a12;
    *(void *)(v31 + 80) = a1;
    *(void *)(v31 + 88) = a3;
    *(void *)(v31 + 96) = a4;
    *(void *)(v31 + 104) = a13;
    *(void *)(v31 + 112) = a14;
    *(void *)(v31 + 120) = a15;
    *(void *)(v31 + 128) = a16;
    *(void *)(v31 + 136) = a17;
    *(void *)(v31 + 144) = a18;
    *(void *)(v31 + 152) = a19;
    *(void *)(v31 + 160) = a20;
    *(void *)(v31 + 168) = a21;
    *(void *)(v31 + 176) = a22;
    *(void *)(v31 + 184) = a23;
    *(void *)(v31 + 192) = a24;
    *(unsigned char *)(v31 + 200) = a25 & 1;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_1001B5434;
    *(void *)(v25 + 24) = v31;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = v25;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100286118;
    uint64_t v32 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v33 = a12;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = a1;
    id v35 = a5;
    swift_bridgeObjectRetain();
    id v36 = a8;
    id v37 = a9;
    id v38 = a10;
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    [v51 performBlockAndWait:v32];

    _Block_release(v32);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  uint64_t v41 = a2;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_100222090();
  sub_100003CC8(v42, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v43 = sub_100222070();
  os_log_type_t v44 = sub_100222500();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136446210;
    uint64_t v54 = v41;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v46 = sub_1002222C0();
    uint64_t v54 = sub_1001BEBDC(v46, v47, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Don't have my own peer keys; can't join: %{public}s",
      v45,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return ((uint64_t (*)(void, void, void *, void, uint64_t))v25)(0, 0, _swiftEmptyArrayStorage, 0, v41);
}

uint64_t sub_100161ABC(char *a1, char *a2, char *a3, void *a4, objc_class *a5, void *a6, void *a7, char *a8, void *a9, void (*a10)(void, void, void *, void, uint64_t), uint64_t a11, unint64_t a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17, objc_class *a18, void *a19, char *a20,char *a21,uint64_t a22,char *a23,unsigned __int8 a24)
{
  v384 = a8;
  v385 = a5;
  id v386 = a7;
  v387 = a2;
  v390 = a1;
  v391 = a4;
  v381 = (void (*)(void, void, void *, void, uint64_t))a10;
  uint64_t v382 = a11;
  v388 = a3;
  v389 = a9;
  uint64_t v361 = type metadata accessor for JoinWithVoucherRequest(0);
  __chkstk_darwin(v361, v25);
  v368 = (char *)&v344 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v358 = type metadata accessor for Metrics(0);
  __chkstk_darwin(v358, v27);
  uint64_t v367 = (uint64_t)&v344 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for SignedVoucher(0);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v31);
  uint64_t v375 = (uint64_t)&v344 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v35 = __chkstk_darwin(v33 - 8, v34);
  uint64_t v355 = (uint64_t)&v344 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v37);
  uint64_t v354 = (uint64_t)&v344 - v38;
  uint64_t v357 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v356 = *(void *)(v357 - 8);
  uint64_t v40 = __chkstk_darwin(v357, v39);
  v351 = (_OWORD *)((char *)&v344 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v40, v42);
  v350 = (_OWORD *)((char *)&v344 - v43);
  uint64_t v44 = type metadata accessor for Bottle(0);
  uint64_t v46 = __chkstk_darwin(v44 - 8, v45);
  uint64_t v370 = (uint64_t)&v344 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v48);
  v371 = (objc_class *)((char *)&v344 - v49);
  uint64_t v50 = sub_1000046DC(&qword_100299F18);
  uint64_t v52 = __chkstk_darwin(v50 - 8, v51);
  uint64_t v353 = (uint64_t)&v344 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v52, v54);
  uint64_t v352 = (uint64_t)&v344 - v56;
  uint64_t v58 = __chkstk_darwin(v55, v57);
  unint64_t v373 = (unint64_t)&v344 - v59;
  __chkstk_darwin(v58, v60);
  v376 = (char *)&v344 - v61;
  uint64_t v378 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v380 = *(void *)(v378 - 8);
  uint64_t v63 = __chkstk_darwin(v378, v62);
  v349 = (_OWORD *)((char *)&v344 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = __chkstk_darwin(v63, v65);
  v348 = (_OWORD *)((char *)&v344 - v67);
  uint64_t v69 = __chkstk_darwin(v66, v68);
  v372 = (_OWORD *)((char *)&v344 - v70);
  __chkstk_darwin(v69, v71);
  id v73 = (char *)&v344 - v72;
  uint64_t v377 = type metadata accessor for Peer(0);
  uint64_t v359 = *(void *)(v377 - 8);
  uint64_t v74 = *(void *)(v359 + 64);
  uint64_t v76 = __chkstk_darwin(v377, v75);
  uint64_t v360 = (uint64_t)&v344 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __chkstk_darwin(v76, v77);
  uint64_t v362 = (uint64_t)&v344 - v79;
  uint64_t v81 = __chkstk_darwin(v78, v80);
  uint64_t v365 = (uint64_t)&v344 - v82;
  uint64_t v84 = __chkstk_darwin(v81, v83);
  uint64_t v364 = (uint64_t)&v344 - v85;
  uint64_t v87 = __chkstk_darwin(v84, v86);
  uint64_t v369 = (uint64_t)&v344 - v88;
  uint64_t v90 = __chkstk_darwin(v87, v89);
  uint64_t v366 = (uint64_t)&v344 - v91;
  uint64_t v93 = __chkstk_darwin(v90, v92);
  uint64_t v363 = (uint64_t)&v344 - v94;
  uint64_t v96 = __chkstk_darwin(v93, v95);
  uint64_t v98 = (char *)&v344 - v97;
  __chkstk_darwin(v96, v99);
  uint64_t v379 = (uint64_t)&v344 - v100;
  id v374 = a6;
  id v101 = [a6 peerID];
  v383 = (void *)sub_100222270();
  id v103 = v102;

  sub_1000046DC(&qword_10029F008);
  uint64_t v104 = *(objc_class **)(v30 + 72);
  unint64_t v105 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = xmmword_100229540;
  v393 = (uint64_t (*)(void, void, void))v384;
  sub_1001A56AC(&qword_10029F010, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
  uint64_t v107 = (uint64_t)v389;
  sub_100221F70();
  uint64_t v343 = v107;
  uint64_t v108 = (uint64_t)v98;
  id v109 = sub_10015ED1C((uint64_t)v98, v387, v388, v391, v385, v383, v103, (uint64_t)v386, (void *)v106, v343);
  uint64_t v110 = (uint64_t)v73;
  unint64_t v347 = v105;
  v385 = v104;
  uint64_t v346 = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v111 = v379;
  sub_1001B7B9C(v108, v379, type metadata accessor for Peer);
  v383 = (void *)(v111 + *(int *)(v377 + 32));
  uint64_t v112 = (uint64_t)v376;
  sub_10000D830((uint64_t)v383, (uint64_t)v376, &qword_100299F18);
  uint64_t v113 = v380 + 48;
  v384 = *(char **)(v380 + 48);
  int v114 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v384)(v112, 1, v378);
  id v386 = v109;
  uint64_t v380 = v113;
  uint64_t v115 = v110;
  if (v114 == 1)
  {
    *(_OWORD *)uint64_t v110 = xmmword_100229520;
    *(_OWORD *)(v110 + 16) = xmmword_100229520;
    id v116 = v109;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v112, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C(v112, v110, type metadata accessor for SignedPeerStableInfo);
    id v117 = v109;
  }
  uint64_t v118 = *(void *)v110;
  unint64_t v119 = *(void *)(v110 + 8);
  uint64_t v120 = *(void *)(v110 + 16);
  unint64_t v121 = *(void *)(v110 + 24);
  id v122 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v118, v119);
  sub_1000059E8(v120, v121);
  Class isa = sub_100221BD0().super.isa;
  v124.super.Class isa = sub_100221BD0().super.isa;
  uint64_t v125 = (char *)[v122 initWithData:isa sig:v124.super.isa];
  sub_100005A40(v120, v121);
  sub_100005A40(v118, v119);

  sub_1001B7EAC(v115, type metadata accessor for SignedPeerStableInfo);
  if (!v125)
  {
    id v135 = v386;

    unint64_t v136 = v381;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v137 = sub_100222090();
    sub_100003CC8(v137, (uint64_t)qword_10029E7D0);
    uint64_t v138 = sub_100222070();
    os_log_type_t v139 = sub_1002224E0();
    if (os_log_type_enabled(v138, v139))
    {
      uint64_t v140 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v140 = 0;
      _os_log_impl((void *)&_mh_execute_header, v138, v139, "Unable to create new peer stable info for joining", v140, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v141 = swift_allocError();
    *(_OWORD *)uint64_t v142 = xmmword_100229940;
    *(unsigned char *)(v142 + 16) = 13;
    v136(0, 0, _swiftEmptyArrayStorage, 0, v141);

    goto LABEL_29;
  }
  uint64_t v126 = [v391 epoch];
  id v127 = v386;
  if (((unint64_t)v126 & 0x8000000000000000) != 0)
  {
    __break(1u);
    swift_once();
    uint64_t v129 = sub_100222090();
    sub_100003CC8(v129, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v130 = sub_100222070();
    os_log_type_t v131 = sub_100222500();
    if (os_log_type_enabled(v130, v131))
    {
      id v132 = (uint8_t *)swift_slowAlloc();
      id v394 = (id)swift_slowAlloc();
      *(_DWORD *)id v132 = 136446210;
      v391 = v132 + 4;
      v392 = 0;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v133 = sub_1002222C0();
      v392 = (void *)sub_1001BEBDC(v133, v134, (uint64_t *)&v394);
      id v127 = v386;
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v130, v131, "Unable to process keys before joining: %{public}s", v132, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v151 = v381;
    swift_errorRetain();
    v151(0, 0, _swiftEmptyArrayStorage, 0, 0);

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v152 = type metadata accessor for Peer;
    Class v153 = v124.super.isa;
    return sub_1001B7EAC((uint64_t)v153, v152);
  }
  uint64_t v128 = v390;
  sub_10015DC68(a12, a13, v389, (uint64_t)v386, v126);
  uint64_t v144 = v143;
  v389 = v145;
  uint64_t v146 = *(void **)&v128[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  uint64_t v147 = v373;
  sub_10000D830((uint64_t)v383, v373, &qword_100299F18);
  int v148 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v384)(v147, 1, v378);
  v376 = v125;
  uint64_t v345 = v144;
  uint64_t v149 = v372;
  if (v148 == 1)
  {
    _OWORD *v372 = xmmword_100229520;
    v149[1] = xmmword_100229520;
    id v150 = v146;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v147, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C(v147, (uint64_t)v372, type metadata accessor for SignedPeerStableInfo);
    id v154 = v146;
  }
  uint64_t v155 = *(void *)v149;
  unint64_t v156 = *((void *)v149 + 1);
  uint64_t v157 = *((void *)v149 + 2);
  unint64_t v158 = *((void *)v149 + 3);
  id v159 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v155, v156);
  sub_1000059E8(v157, v158);
  Class v160 = sub_100221BD0().super.isa;
  Class v161 = sub_100221BD0().super.isa;
  id v162 = [v159 initWithData:v160 sig:v161];
  sub_100005A40(v157, v158);
  sub_100005A40(v155, v156);

  sub_1001B7EAC((uint64_t)v149, type metadata accessor for SignedPeerStableInfo);
  NSString v163 = [v374 peerID];
  if (!v163)
  {
    sub_100222270();
    NSString v163 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  id v394 = 0;
  unsigned int v164 = [v146 checkIntroductionForCandidate:v391 stableInfo:v162 withSponsorID:v163 error:&v394];

  id v165 = v394;
  id v166 = v386;
  os_log_type_t v167 = v376;
  if (!v164)
  {
    uint64_t v169 = v165;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v170 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v171 = sub_100222090();
    sub_100003CC8(v171, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v172 = sub_100222070();
    os_log_type_t v173 = sub_100222500();
    if (os_log_type_enabled(v172, v173))
    {
      unint64_t v174 = (uint8_t *)swift_slowAlloc();
      id v394 = (id)swift_slowAlloc();
      *(_DWORD *)unint64_t v174 = 136446210;
      v392 = (void *)v170;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v175 = sub_1002222C0();
      v392 = (void *)sub_1001BEBDC(v175, v176, (uint64_t *)&v394);
      id v166 = v386;
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v172, v173, "Error checking introduction: %{public}s", v174, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v177 = v381;
    uint64_t v111 = v379;
    swift_errorRetain();
    v177(0, 0, _swiftEmptyArrayStorage, 0, v170);

    swift_errorRelease();
LABEL_29:
    swift_errorRelease();
    uint64_t v152 = type metadata accessor for Peer;
    Class v153 = (Class)v111;
    return sub_1001B7EAC((uint64_t)v153, v152);
  }
  uint64_t v168 = v370;
  sub_1001807DC((uint64_t)v387, (uint64_t)v388, v370);
  sub_1001B7B9C(v168, (uint64_t)v371, type metadata accessor for Bottle);
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  unint64_t v373 = a17;
  uint64_t v179 = sub_100222090();
  uint64_t v180 = (void *)sub_100003CC8(v179, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain_n();
  uint64_t v181 = sub_100222070();
  os_log_type_t v182 = sub_1002224E0();
  BOOL v183 = os_log_type_enabled(v181, v182);
  v383 = v180;
  id v374 = 0;
  if (v183)
  {
    uint64_t v184 = (uint8_t *)swift_slowAlloc();
    id v394 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v184 = 136446210;
    unint64_t v185 = v388;
    swift_bridgeObjectRetain();
    v392 = (void *)sub_1001BEBDC((uint64_t)v387, (unint64_t)v185, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v181, v182, "Beginning join for peer %{public}s", v184, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000059E8(a14, a15);
  sub_1000059E8(a14, a15);
  unint64_t v186 = sub_100222070();
  os_log_type_t v187 = sub_1002224E0();
  if (os_log_type_enabled(v186, v187))
  {
    uint64_t v188 = (uint8_t *)swift_slowAlloc();
    id v394 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v188 = 136446210;
    uint64_t v189 = sub_100221BE0(0);
    v392 = (void *)sub_1001BEBDC(v189, v190, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_100005A40(a14, a15);
    sub_100005A40(a14, a15);
    _os_log_impl((void *)&_mh_execute_header, v186, v187, "Join permanentInfo: %{public}s", v188, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100005A40(a14, a15);
    sub_100005A40(a14, a15);
  }

  uint64_t v191 = v379;
  unint64_t v192 = v347;
  unint64_t v193 = v373;
  sub_1000059E8(a16, v373);
  sub_1000059E8(a16, v193);
  uint64_t v194 = sub_100222070();
  os_log_type_t v195 = sub_1002224E0();
  if (os_log_type_enabled(v194, v195))
  {
    id v196 = (uint8_t *)swift_slowAlloc();
    id v394 = (id)swift_slowAlloc();
    *(_DWORD *)id v196 = 136446210;
    uint64_t v197 = sub_100221BE0(0);
    v392 = (void *)sub_1001BEBDC(v197, v198, (uint64_t *)&v394);
    sub_100222690();
    uint64_t v191 = v379;
    swift_bridgeObjectRelease();
    sub_100005A40(a16, v193);
    sub_100005A40(a16, v193);
    _os_log_impl((void *)&_mh_execute_header, v194, v195, "Join permanentInfoSig: %{public}s", v196, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100005A40(a16, v193);
    sub_100005A40(a16, v193);
  }

  uint64_t v199 = v369;
  uint64_t v200 = v366;
  uint64_t v201 = v363;
  sub_1001B7C04(v191, v363, type metadata accessor for Peer);
  uint64_t v202 = sub_100222070();
  os_log_type_t v203 = sub_1002224E0();
  if (os_log_type_enabled(v202, v203))
  {
    id v204 = (uint8_t *)swift_slowAlloc();
    id v394 = (id)swift_slowAlloc();
    *(_DWORD *)id v204 = 136446210;
    uint64_t v205 = v352;
    sub_10000D830(v201 + *(int *)(v377 + 32), v352, &qword_100299F18);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v384)(v205, 1, v378) == 1)
    {
      unint64_t v206 = v348;
      _OWORD *v348 = xmmword_100229520;
      v206[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v205, &qword_100299F18);
    }
    else
    {
      unint64_t v206 = v348;
      sub_1001B7B9C(v205, (uint64_t)v348, type metadata accessor for SignedPeerStableInfo);
    }
    uint64_t v207 = *(void *)v206;
    unint64_t v208 = *((void *)v206 + 1);
    sub_1000059E8(*(void *)v206, v208);
    sub_1001B7EAC((uint64_t)v206, type metadata accessor for SignedPeerStableInfo);
    uint64_t v209 = sub_100221BE0(0);
    unint64_t v211 = v210;
    sub_100005A40(v207, v208);
    v392 = (void *)sub_1001BEBDC(v209, v211, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v363, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v202, v203, "Join stableInfo: %{public}s", v204, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v192 = v347;
    uint64_t v191 = v379;
    uint64_t v199 = v369;
    uint64_t v200 = v366;
  }
  else
  {
    sub_1001B7EAC(v201, type metadata accessor for Peer);
  }
  sub_1001B7C04(v191, v200, type metadata accessor for Peer);
  id v212 = sub_100222070();
  os_log_type_t v213 = sub_1002224E0();
  if (os_log_type_enabled(v212, v213))
  {
    uint64_t v214 = (uint8_t *)swift_slowAlloc();
    id v394 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v214 = 136446210;
    uint64_t v215 = v353;
    sub_10000D830(v200 + *(int *)(v377 + 32), v353, &qword_100299F18);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v384)(v215, 1, v378) == 1)
    {
      uint64_t v216 = v349;
      _OWORD *v349 = xmmword_100229520;
      v216[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v215, &qword_100299F18);
    }
    else
    {
      uint64_t v216 = v349;
      sub_1001B7B9C(v215, (uint64_t)v349, type metadata accessor for SignedPeerStableInfo);
    }
    uint64_t v217 = *((void *)v216 + 2);
    unint64_t v218 = *((void *)v216 + 3);
    sub_1000059E8(v217, v218);
    sub_1001B7EAC((uint64_t)v216, type metadata accessor for SignedPeerStableInfo);
    uint64_t v219 = sub_100221BE0(0);
    unint64_t v221 = v220;
    sub_100005A40(v217, v218);
    v392 = (void *)sub_1001BEBDC(v219, v221, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v366, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v212, v213, "Join stableInfoSig: %{public}s", v214, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v192 = v347;
    uint64_t v191 = v379;
    uint64_t v199 = v369;
  }
  else
  {
    sub_1001B7EAC(v200, type metadata accessor for Peer);
  }
  sub_1001B7C04(v191, v199, type metadata accessor for Peer);
  uint64_t v222 = sub_100222070();
  os_log_type_t v223 = sub_1002224E0();
  if (os_log_type_enabled(v222, v223))
  {
    uint64_t v224 = (uint8_t *)swift_slowAlloc();
    id v394 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v224 = 136446210;
    uint64_t v225 = v354;
    sub_10000D830(v199 + *(int *)(v377 + 36), v354, &qword_10029ECA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v356 + 48))(v225, 1, v357) == 1)
    {
      uint64_t v226 = v350;
      _OWORD *v350 = xmmword_100229520;
      v226[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v225, &qword_10029ECA0);
    }
    else
    {
      uint64_t v226 = v350;
      sub_1001B7B9C(v225, (uint64_t)v350, type metadata accessor for SignedPeerDynamicInfo);
    }
    uint64_t v227 = *(void *)v226;
    unint64_t v228 = *((void *)v226 + 1);
    sub_1000059E8(*(void *)v226, v228);
    sub_1001B7EAC((uint64_t)v226, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v229 = sub_100221BE0(0);
    unint64_t v231 = v230;
    sub_100005A40(v227, v228);
    v392 = (void *)sub_1001BEBDC(v229, v231, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v369, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v222, v223, "Join dynamicInfo: %{public}s", v224, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v192 = v347;
    uint64_t v191 = v379;
  }
  else
  {
    sub_1001B7EAC(v199, type metadata accessor for Peer);
  }
  uint64_t v232 = v364;
  sub_1001B7C04(v191, v364, type metadata accessor for Peer);
  uint64_t v233 = sub_100222070();
  os_log_type_t v234 = sub_1002224E0();
  if (os_log_type_enabled(v233, v234))
  {
    os_log_type_t v235 = (uint8_t *)swift_slowAlloc();
    id v394 = (id)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v235 = 136446210;
    uint64_t v236 = v232 + *(int *)(v377 + 36);
    uint64_t v237 = v355;
    sub_10000D830(v236, v355, &qword_10029ECA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v356 + 48))(v237, 1, v357) == 1)
    {
      unint64_t v238 = v351;
      _OWORD *v351 = xmmword_100229520;
      v238[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v237, &qword_10029ECA0);
    }
    else
    {
      unint64_t v238 = v351;
      sub_1001B7B9C(v237, (uint64_t)v351, type metadata accessor for SignedPeerDynamicInfo);
    }
    uint64_t v239 = *((void *)v238 + 2);
    unint64_t v240 = *((void *)v238 + 3);
    sub_1000059E8(v239, v240);
    sub_1001B7EAC((uint64_t)v238, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v241 = sub_100221BE0(0);
    unint64_t v243 = v242;
    sub_100005A40(v239, v240);
    v392 = (void *)sub_1001BEBDC(v241, v243, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v364, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v233, v234, "Join dynamicInfoSig: %{public}s", v235, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v192 = v347;
    uint64_t v191 = v379;
  }
  else
  {
    sub_1001B7EAC(v232, type metadata accessor for Peer);
  }
  uint64_t v244 = v365;
  sub_1001B7C04(v191, v365, type metadata accessor for Peer);
  uint64_t v245 = sub_100222070();
  int v246 = sub_1002224E0();
  if (os_log_type_enabled(v245, (os_log_type_t)v246))
  {
    Swift::String v247 = (uint8_t *)swift_slowAlloc();
    v384 = (char *)swift_slowAlloc();
    id v394 = v384;
    *(_DWORD *)Swift::String v247 = 136446210;
    uint64_t v248 = *(void *)(v244 + 16);
    int64_t v249 = *(void *)(v248 + 16);
    uint64_t v250 = v375;
    if (v249)
    {
      LODWORD(v380) = v246;
      v392 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10018D13C(0, v249, 0);
      uint64_t v251 = v248 + v192;
      uint64_t v252 = v392;
      do
      {
        sub_1001B7C04(v251, v250, type metadata accessor for SignedVoucher);
        uint64_t v253 = sub_100221BE0(0);
        uint64_t v255 = v254;
        sub_1001B7EAC(v250, type metadata accessor for SignedVoucher);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D13C(0, v252[2] + 1, 1);
          uint64_t v252 = v392;
        }
        unint64_t v257 = v252[2];
        unint64_t v256 = v252[3];
        uint64_t v258 = v385;
        if (v257 >= v256 >> 1)
        {
          sub_10018D13C(v256 > 1, v257 + 1, 1);
          uint64_t v258 = v385;
          uint64_t v252 = v392;
        }
        v252[2] = v257 + 1;
        unint64_t v259 = &v252[2 * v257];
        v259[4] = v253;
        v259[5] = v255;
        v251 += (uint64_t)v258;
        --v249;
        uint64_t v250 = v375;
      }
      while (v249);
      swift_bridgeObjectRelease();
      uint64_t v191 = v379;
      unint64_t v192 = v347;
      LOBYTE(v246) = v380;
    }
    else
    {
      uint64_t v191 = v379;
    }
    uint64_t v261 = sub_1002223D0();
    unint64_t v263 = v262;
    swift_bridgeObjectRelease();
    v392 = (void *)sub_1001BEBDC(v261, v263, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v365, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v245, (os_log_type_t)v246, "Join vouchers: %{public}s", v247, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v260 = v362;
  }
  else
  {
    sub_1001B7EAC(v244, type metadata accessor for Peer);

    uint64_t v260 = v362;
  }
  sub_1001B7C04(v191, v260, type metadata accessor for Peer);
  os_log_type_t v264 = sub_100222070();
  int v265 = sub_1002224E0();
  if (os_log_type_enabled(v264, (os_log_type_t)v265))
  {
    uint64_t v266 = (uint8_t *)swift_slowAlloc();
    v384 = (char *)swift_slowAlloc();
    id v394 = v384;
    *(_DWORD *)uint64_t v266 = 136446210;
    uint64_t v267 = *(void *)(v260 + 16);
    int64_t v268 = *(void *)(v267 + 16);
    if (v268)
    {
      LODWORD(v380) = v265;
      v392 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10018D13C(0, v268, 0);
      uint64_t v269 = v267 + v192;
      v270 = v392;
      do
      {
        uint64_t v271 = v375;
        sub_1001B7C04(v269, v375, type metadata accessor for SignedVoucher);
        uint64_t v272 = sub_100221BE0(0);
        uint64_t v274 = v273;
        sub_1001B7EAC(v271, type metadata accessor for SignedVoucher);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D13C(0, v270[2] + 1, 1);
          v270 = v392;
        }
        unint64_t v276 = v270[2];
        unint64_t v275 = v270[3];
        uint64_t v277 = v385;
        if (v276 >= v275 >> 1)
        {
          sub_10018D13C(v275 > 1, v276 + 1, 1);
          uint64_t v277 = v385;
          v270 = v392;
        }
        v270[2] = v276 + 1;
        uint64_t v278 = &v270[2 * v276];
        v278[4] = v272;
        v278[5] = v274;
        v269 += (uint64_t)v277;
        --v268;
      }
      while (v268);
      swift_bridgeObjectRelease();
      LOBYTE(v265) = v380;
    }
    uint64_t v279 = sub_1002223D0();
    unint64_t v281 = v280;
    swift_bridgeObjectRelease();
    v392 = (void *)sub_1001BEBDC(v279, v281, (uint64_t *)&v394);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v362, type metadata accessor for Peer);
    _os_log_impl((void *)&_mh_execute_header, v264, (os_log_type_t)v265, "Join voucher signatures: %{public}s", v266, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001B7EAC(v260, type metadata accessor for Peer);
  }
  uint64_t v282 = v389;
  swift_bridgeObjectRetain();
  uint64_t v283 = sub_100222070();
  os_log_type_t v284 = sub_1002224E0();
  if (os_log_type_enabled(v283, v284))
  {
    unint64_t v285 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v285 = 134217984;
    id v394 = (id)v282[2];
    sub_100222690();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v283, v284, "Uploading %ld tlk shares", v285, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v286 = v374;
  uint64_t v288 = a20;
  uint64_t v287 = (uint64_t)a21;
  uint64_t v289 = (uint64_t)a19;
  v385 = a18;
  sub_1001A56AC((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  uint64_t v290 = sub_100221F40();
  v383 = a19;
  if (v286)
  {
    swift_errorRetain();
    swift_errorRetain();
    v292 = sub_100222070();
    os_log_type_t v293 = sub_1002224E0();
    if (os_log_type_enabled(v292, v293))
    {
      unint64_t v294 = (uint8_t *)swift_slowAlloc();
      uint64_t v295 = (void *)swift_slowAlloc();
      v384 = a20;
      id v394 = v295;
      *(_DWORD *)unint64_t v294 = 136446210;
      v392 = v286;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v296 = sub_1002222C0();
      v392 = (void *)sub_1001BEBDC(v296, v297, (uint64_t *)&v394);
      sub_100222690();
      uint64_t v289 = (uint64_t)v383;
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v292, v293, "Join unable to encode peer: %{public}s", v294, 0xCu);
      swift_arrayDestroy();
      uint64_t v288 = v384;
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v298 = swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v308 = v367;
  }
  else
  {
    uint64_t v300 = v290;
    unint64_t v301 = v291;
    v384 = a21;
    uint64_t v302 = sub_100221BE0(0);
    unint64_t v304 = v303;
    sub_100005A40(v300, v301);
    swift_bridgeObjectRetain();
    v305 = sub_100222070();
    os_log_type_t v306 = sub_1002224E0();
    if (os_log_type_enabled(v305, v306))
    {
      uint64_t v307 = (uint8_t *)swift_slowAlloc();
      id v394 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v307 = 136446210;
      swift_bridgeObjectRetain();
      v392 = (void *)sub_1001BEBDC(v302, v304, (uint64_t *)&v394);
      uint64_t v289 = (uint64_t)v383;
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v305, v306, "Join peer: %{public}s", v307, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v298 = swift_bridgeObjectRelease_n();
    }
    uint64_t v308 = v367;
    uint64_t v287 = (uint64_t)v384;
  }
  uint64_t v378 = a22;
  __chkstk_darwin(v298, v299);
  *(&v344 - 4) = (uint64_t)v385;
  *(&v344 - 3) = v289;
  v342 = v288;
  uint64_t v343 = v287;
  sub_1001A56AC((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100221F70();
  id v309 = [*(id *)&v390[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] changeToken];
  LODWORD(v380) = a24;
  v384 = a23;
  if (v309)
  {
    v311 = v309;
    uint64_t v312 = sub_100222270();
    unint64_t v314 = v313;
  }
  else
  {
    uint64_t v312 = 0;
    unint64_t v314 = 0xE000000000000000;
  }
  __chkstk_darwin(v309, v310);
  *(&v344 - 8) = v312;
  *(&v344 - 7) = v314;
  uint64_t v315 = v379;
  uint64_t v316 = (uint64_t)v371;
  *(&v344 - 6) = v379;
  *(&v344 - 5) = v316;
  v317 = v390;
  uint64_t v318 = v345;
  *(&v344 - 4) = (uint64_t)v389;
  *(&v344 - 3) = v318;
  v342 = v317;
  uint64_t v343 = v308;
  sub_1001A56AC(&qword_10029A6D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
  sub_100221F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v319 = v317;
  uint64_t v320 = *(void *)&v317[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
  v389 = *(void **)&v317[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
  uint64_t v377 = (uint64_t)sub_1000059A4(&v317[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], (uint64_t)v389);
  uint64_t v321 = v360;
  sub_1001B7C04(v315, v360, type metadata accessor for Peer);
  unint64_t v322 = (*(unsigned __int8 *)(v359 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v359 + 80);
  unint64_t v323 = (v346 + v322 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v324 = (v323 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v325 = (v324 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v326 = swift_allocObject();
  id v327 = v386;
  *(void *)(v326 + 16) = v319;
  *(void *)(v326 + 24) = v327;
  v329 = v383;
  v328 = (uint64_t (*)(void, void, void))v384;
  *(void *)(v326 + 32) = v378;
  *(void *)(v326 + 40) = v328;
  *(void *)(v326 + 48) = v385;
  *(void *)(v326 + 56) = v329;
  *(unsigned char *)(v326 + 64) = v380 & 1;
  sub_1001B7B9C(v321, v326 + v322, type metadata accessor for Peer);
  v330 = v391;
  *(void *)(v326 + v323) = v391;
  v331 = v376;
  *(void *)(v326 + v324) = v376;
  v332 = (void *)(v326 + v325);
  uint64_t v333 = v382;
  void *v332 = v381;
  v332[1] = v333;
  v334 = (void *)(v326 + ((v325 + 23) & 0xFFFFFFFFFFFFFFF8));
  v335 = v388;
  void *v334 = v387;
  v334[1] = v335;
  uint64_t v336 = *(void *)(v320 + 16);
  v337 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t, void *, uint64_t))(v336 + 24);
  swift_bridgeObjectRetain();
  id v338 = v330;
  id v339 = v331;
  swift_retain();
  swift_bridgeObjectRetain();
  v340 = v390;
  swift_bridgeObjectRetain();
  uint64_t v341 = (uint64_t)v368;
  v337(v368, sub_1001B58C8, v326, v389, v336);

  swift_release();
  sub_1001B7EAC(v341, type metadata accessor for JoinWithVoucherRequest);
  sub_1001B7EAC(v367, type metadata accessor for Metrics);
  sub_1001B7EAC(v379, type metadata accessor for Peer);
  uint64_t v152 = type metadata accessor for Bottle;
  Class v153 = v371;
  return sub_1001B7EAC((uint64_t)v153, v152);
}

uint64_t sub_100164A00(uint64_t a1, id a2)
{
  id v4 = [a2 data];
  uint64_t v5 = sub_100221BF0();
  uint64_t v7 = v6;

  sub_100005A40(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  id v8 = [a2 sig];
  uint64_t v9 = sub_100221BF0();
  uint64_t v11 = v10;

  uint64_t result = sub_100005A40(*(void *)(a1 + 16), *(void *)(a1 + 24));
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  return result;
}

uint64_t sub_100164AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v44 = a8;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v39 = a2;
  uint64_t v13 = type metadata accessor for Metrics(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v45 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  __chkstk_darwin(v16, v17);
  id v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Bottle(0);
  __chkstk_darwin(v20 - 8, v21);
  char v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Peer(0);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v27 = (char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  uint64_t v42 = a6;
  swift_bridgeObjectRetain();
  uint64_t v43 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v29 = swift_retain();
    *(void *)(a1 + v28) = sub_10009D384(v29);
    swift_release();
  }
  uint64_t v30 = *(void *)(a1 + v28);
  swift_beginAccess();
  *(void *)(v30 + 16) = v39;
  *(void *)(v30 + 24) = a3;
  swift_bridgeObjectRelease();
  sub_1001B7C04(v40, (uint64_t)v27, type metadata accessor for Peer);
  JoinWithVoucherRequest.peer.setter((uint64_t)v27);
  sub_1001B7C04(v41, (uint64_t)v23, type metadata accessor for Bottle);
  JoinWithVoucherRequest.bottle.setter((uint64_t)v23);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v31 = swift_retain();
    *(void *)(a1 + v28) = sub_10009D384(v31);
    swift_release();
  }
  uint64_t v32 = (void *)(*(void *)(a1 + v28)
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  *uint64_t v32 = v42;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v33 = swift_retain();
    *(void *)(a1 + v28) = sub_10009D384(v33);
    swift_release();
  }
  uint64_t v34 = (void *)(*(void *)(a1 + v28)
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  void *v34 = v43;
  uint64_t v35 = swift_bridgeObjectRelease();
  __chkstk_darwin(v35, v36);
  *(&v39 - 2) = v44;
  sub_1001A56AC(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
  sub_100221F70();
  JoinWithVoucherRequest.trustedDevicesVersion.setter((uint64_t)v19);
  uint64_t v37 = v45;
  sub_1001B7C04(a9, v45, type metadata accessor for Metrics);
  return JoinWithVoucherRequest.metrics.setter(v37);
}

uint64_t sub_100164EF0(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, void *a10, void *a11, void (*a12)(void, void, void *, void, uint64_t), uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v74 = a8;
  uint64_t v77 = a7;
  id v78 = a3;
  uint64_t v72 = a4;
  uint64_t v73 = a6;
  uint64_t v75 = a2;
  uint64_t v76 = a13;
  uint64_t v79 = a5;
  uint64_t v80 = a12;
  uint64_t v16 = type metadata accessor for Peer(0);
  uint64_t v71 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v71 + 64);
  __chkstk_darwin(v16 - 8, v18);
  id v19 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for JoinWithVoucherResponse(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v24 = __chkstk_darwin(v20 - 8, v23);
  uint64_t v25 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)&v63 - v27;
  uint64_t v29 = sub_1000046DC((uint64_t *)&unk_10029EE20);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (uint64_t *)((char *)&v63 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v32, (uint64_t *)&unk_10029EE20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v67 = a14;
    uint64_t v68 = a15;
    uint64_t v66 = a11;
    uint64_t v65 = a10;
    uint64_t v64 = type metadata accessor for JoinWithVoucherResponse;
    uint64_t v69 = v28;
    sub_1001B7B9C((uint64_t)v32, (uint64_t)v28, type metadata accessor for JoinWithVoucherResponse);
    uint64_t v40 = v75;
    id v70 = *(id *)&v75[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    sub_1001B7C04(a9, (uint64_t)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Peer);
    sub_1001B7C04((uint64_t)v28, (uint64_t)v25, type metadata accessor for JoinWithVoucherResponse);
    unint64_t v41 = (*(unsigned __int8 *)(v71 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    unint64_t v42 = (v17 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v44 = (*(unsigned __int8 *)(v21 + 80) + v43 + 8) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    unint64_t v45 = (v22 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = swift_allocObject();
    uint64_t v48 = v72;
    *(void *)(v47 + 16) = v78;
    *(void *)(v47 + 24) = v48;
    uint64_t v49 = v73;
    *(void *)(v47 + 32) = v79;
    *(void *)(v47 + 40) = v49;
    *(void *)(v47 + 48) = v77;
    *(unsigned char *)(v47 + 56) = v74 & 1;
    *(void *)(v47 + 64) = v40;
    sub_1001B7B9C((uint64_t)v19, v47 + v41, type metadata accessor for Peer);
    uint64_t v50 = v65;
    *(void *)(v47 + v42) = v65;
    uint64_t v51 = v66;
    *(void *)(v47 + v43) = v66;
    sub_1001B7B9C((uint64_t)v25, v47 + v44, v64);
    uint64_t v52 = (void *)(v47 + v45);
    uint64_t v53 = v76;
    *uint64_t v52 = v80;
    v52[1] = v53;
    uint64_t v54 = (void *)(v47 + v46);
    uint64_t v55 = v68;
    *uint64_t v54 = v67;
    v54[1] = v55;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_1001B5EAC;
    *(void *)(v33 + 24) = v47;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_1002861B8;
    uint64_t v56 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v57 = v75;
    id v58 = v50;
    id v59 = v51;
    swift_retain();
    swift_bridgeObjectRetain();
    id v60 = v78;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    [v70 performBlockAndWait:v56];
    _Block_release(v56);
    sub_1001B7EAC((uint64_t)v69, type metadata accessor for JoinWithVoucherResponse);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v33 = *v32;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_100222090();
  sub_100003CC8(v34, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t isEscapingClosureAtFileLocation = sub_100222070();
  os_log_type_t v36 = sub_100222500();
  if (!os_log_type_enabled((os_log_t)isEscapingClosureAtFileLocation, v36))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v37 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v37 = 136446210;
  uint64_t v82 = v33;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v38 = sub_1002222C0();
  uint64_t v82 = sub_1001BEBDC(v38, v39, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, (os_log_t)isEscapingClosureAtFileLocation, v36, "joinWithVoucher failed: %{public}s", v37, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  uint64_t v62 = v80;
  swift_errorRetain();
  v62(0, 0, _swiftEmptyArrayStorage, 0, v33);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_100165598(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void (*a8)(uint64_t, id, void *, NSObject *, void), void *a9, NSObject *a10, void *a11, void (*a12)(uint64_t, id, void *, NSObject *, void), uint64_t a13, uint64_t a14, void *a15)
{
  uint64_t v118 = a8;
  uint64_t v119 = a7;
  LODWORD(v111) = a6;
  uint64_t v117 = a4;
  id v116 = a2;
  uint64_t v115 = a10;
  id v114 = a9;
  uint64_t v122 = sub_100221D50();
  uint64_t v104 = *(void *)(v122 - 8);
  uint64_t v19 = __chkstk_darwin(v122, v18);
  unint64_t v121 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v21);
  uint64_t v120 = (char *)&v103 - v22;
  uint64_t v23 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v107 = (uint64_t)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for Changes(0);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106, v26);
  uint64_t v108 = (uint64_t *)((char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1000046DC(&qword_100299F18);
  uint64_t v30 = __chkstk_darwin(v28 - 8, v29);
  uint64_t v113 = (uint64_t)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  id v109 = (char *)&v103 - v33;
  uint64_t v110 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v34 = *(void *)(v110 - 8);
  uint64_t v36 = __chkstk_darwin(v110, v35);
  uint64_t v112 = (_OWORD *)((char *)&v103 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v36, v38);
  uint64_t v40 = (char *)&v103 - v39;
  sub_1000046DC(&qword_10029EC10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229540;
  uint64_t v123 = sub_100222270();
  uint64_t v124 = v42;
  sub_1002227F0();
  id v43 = [a1 includedPeerIDs];
  sub_100222440();

  swift_bridgeObjectRelease();
  Class isa = sub_1002224A0().super.super.isa;
  *(void *)(inited + 96) = sub_1000047D8(0, &qword_10029EEF8);
  *(void *)(inited + 72) = isa;
  unint64_t v45 = sub_1000095FC(inited);
  uint64_t v46 = sub_100222270();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  uint64_t v49 = a3;
  swift_bridgeObjectRetain();
  sub_1001B4E5C();
  char v51 = v50;
  uint64_t v52 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v53 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v54 = v52;
  uint64_t v55 = v46;
  uint64_t v56 = (uint64_t)v109;
  id v57 = sub_100062F10(v45, (uint64_t)v116, v49, v117, a5, 0, 0, v55, v48, v51, v111, v54);
  id v58 = self;
  id v116 = v57;
  uint64_t v59 = v110;
  [v58 sendMetricWithEvent:v57 success:1 error:0];
  uint64_t v60 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  uint64_t v61 = *(void **)(v119 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  uint64_t v62 = (uint64_t)v118 + *(int *)(type metadata accessor for Peer(0) + 32);
  sub_10000D830(v62, v56, &qword_100299F18);
  uint64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  uint64_t v111 = v34 + 48;
  if (v63(v56, 1, v59) == 1)
  {
    *(_OWORD *)uint64_t v40 = xmmword_100229520;
    *((_OWORD *)v40 + 1) = xmmword_100229520;
    id v64 = v61;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v56, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C(v56, (uint64_t)v40, type metadata accessor for SignedPeerStableInfo);
    id v65 = v61;
  }
  uint64_t v117 = a13;
  uint64_t v118 = a12;
  uint64_t v66 = *(void *)v40;
  unint64_t v67 = *((void *)v40 + 1);
  sub_1000059E8(*(void *)v40, v67);
  sub_1001B7EAC((uint64_t)v40, type metadata accessor for SignedPeerStableInfo);
  Class v68 = sub_100221BD0().super.isa;
  sub_100005A40(v66, v67);
  [v61 setEgoPeerStableInfo:v68];

  uint64_t v69 = *(void **)(v119 + v60);
  uint64_t v70 = v113;
  sub_10000D830(v62, v113, &qword_100299F18);
  if (v63(v70, 1, v59) == 1)
  {
    uint64_t v71 = v112;
    *uint64_t v112 = xmmword_100229520;
    v71[1] = xmmword_100229520;
    id v72 = v69;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v70, &qword_100299F18);
  }
  else
  {
    uint64_t v71 = v112;
    sub_1001B7B9C(v70, (uint64_t)v112, type metadata accessor for SignedPeerStableInfo);
    id v73 = v69;
  }
  uint64_t v74 = *((void *)v71 + 2);
  unint64_t v75 = *((void *)v71 + 3);
  sub_1000059E8(v74, v75);
  sub_1001B7EAC((uint64_t)v71, type metadata accessor for SignedPeerStableInfo);
  Class v76 = sub_100221BD0().super.isa;
  sub_100005A40(v74, v75);
  [v69 setEgoPeerStableInfoSig:v76];

  id v77 = [v114 modelID];
  LODWORD(v76) = sub_100222270();
  int v79 = v78;

  uint64_t v80 = sub_10015A2F8((int)v76, v79, v115);
  uint64_t v81 = v118;
  uint64_t v82 = v80;
  swift_bridgeObjectRelease();
  uint64_t v83 = type metadata accessor for JoinWithVoucherResponse(0);
  uint64_t v84 = v107;
  sub_10000D830((uint64_t)a11 + *(int *)(v83 + 24), v107, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v84, 1, v106) == 1)
  {
    uint64_t v85 = v108;
    *uint64_t v108 = 0;
    v85[1] = 0xE000000000000000;
    v85[2] = _swiftEmptyArrayStorage;
    *(_OWORD *)(v85 + 3) = xmmword_100229520;
    *(_OWORD *)(v85 + 5) = xmmword_100229520;
    *((unsigned char *)v85 + 56) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v84, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    uint64_t v85 = v108;
    sub_1001B7B9C(v84, (uint64_t)v108, type metadata accessor for Changes);
  }
  sub_10017AB04((uint64_t)v85, 0);
  sub_1001B7EAC((uint64_t)v85, type metadata accessor for Changes);
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v87 = a14;
  id v86 = a15;
  uint64_t v88 = sub_100222090();
  sub_100003CC8(v88, (uint64_t)qword_10029E7D0);
  uint64_t v89 = sub_100222070();
  os_log_type_t v90 = sub_1002224E0();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v91 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v91 = 0;
    _os_log_impl((void *)&_mh_execute_header, v89, v90, "JoinWithVoucher succeeded", v91, 2u);
    swift_slowDealloc();
  }

  uint64_t v92 = (_OWORD *)*a11;
  uint64_t v123 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v93 = *((void *)v92 + 2);
  if (v93)
  {
    uint64_t v113 = a14;
    id v114 = a15;
    uint64_t v115 = v82;
    uint64_t v119 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    uint64_t v95 = (char *)v92 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
    uint64_t v96 = *(void *)(v104 + 72);
    uint64_t v97 = (void (**)(char *, uint64_t))(v104 + 8);
    uint64_t v112 = v92;
    swift_bridgeObjectRetain();
    uint64_t v98 = v120;
    do
    {
      uint64_t v99 = v122;
      v94(v98, v95, v122);
      v94(v121, v98, v99);
      uint64_t v100 = sub_100222620();
      (*v97)(v98, v99);
      if (v100)
      {
        sub_1002223A0();
        if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
      v95 += v96;
      --v93;
    }
    while (v93);
    id v101 = (void *)v123;
    uint64_t v81 = v118;
    uint64_t v82 = v115;
    id v86 = v114;
    uint64_t v87 = v113;
  }
  else
  {
    swift_bridgeObjectRetain();
    id v101 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v102 = v82;
  v81(v87, v86, v101, v82, 0);

  swift_bridgeObjectRelease();
}

uint64_t sub_1001662CC(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  uint64_t v15 = v9;
  uint64_t v16 = sub_1001984DC(v15, 0xD00000000000005DLL, 0x8000000100244D50);

  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a8;
  void v17[4] = a9;
  uint64_t v18 = qword_100298EB8;
  swift_retain();
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100222090();
  sub_100003CC8(v19, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_100222070();
  os_log_type_t v21 = sub_1002224E0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v35 = a6;
    uint64_t v36 = a5;
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 67109634;
    sub_100222690();
    *(_WORD *)(v22 + 8) = 1024;
    sub_100222690();
    *(_WORD *)(v22 + 14) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1002223D0();
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v23, v25, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    char v26 = a2;
    char v27 = a1;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "requestHealthCheck requiring escrow check: %{BOOL}d, %{BOOL}d, knownFederations: %{public}s", (uint8_t *)v22, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a6 = v35;
    a5 = v36;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    char v26 = a2;
    char v27 = a1;
  }
  uint64_t v28 = *(void **)&v15[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v15;
  *(void *)(v29 + 24) = sub_1001B4CB4;
  *(void *)(v29 + 32) = v17;
  *(void *)(v29 + 40) = a4;
  *(void *)(v29 + 48) = a5;
  *(void *)(v29 + 56) = a6;
  *(void *)(v29 + 64) = a7;
  *(unsigned char *)(v29 + 72) = v27 & 1;
  *(void *)(v29 + 80) = a3;
  *(unsigned char *)(v29 + 88) = v26 & 1;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1001B4D5C;
  *(void *)(v30 + 24) = v29;
  aBlock[4] = (uint64_t)sub_1001B8924;
  uint64_t aBlock[5] = v30;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100112F58;
  aBlock[3] = (uint64_t)&unk_100285EC0;
  uint64_t v31 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v32 = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v28 performBlockAndWait:v31];
  swift_release();
  swift_release();
  _Block_release(v31);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100166734(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  int v52 = a10;
  int v53 = a8;
  uint64_t v51 = a9;
  uint64_t RepairActionRequest = type metadata accessor for GetRepairActionRequest(0);
  __chkstk_darwin(RepairActionRequest, v16);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Metrics(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (v23)
  {
    unint64_t v24 = v23;
    uint64_t v25 = sub_100222270();
    uint64_t v48 = a3;
    uint64_t v26 = v25;
    uint64_t v46 = a1;
    uint64_t v28 = v27;

    uint64_t v47 = a2;
    __chkstk_darwin(v29, v30);
    *(&v46 - 4) = a4;
    *(&v46 - 3) = a5;
    uint64_t v31 = v50;
    *(&v46 - 2) = v49;
    *(&v46 - 1) = v31;
    sub_1001A56AC((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
    uint64_t v32 = sub_100221F70();
    __chkstk_darwin(v32, v33);
    *(&v46 - 6) = v26;
    *(&v46 - 5) = v28;
    *((unsigned char *)&v46 - 32) = v53 & 1;
    *(&v46 - 3) = v51;
    *((unsigned char *)&v46 - 16) = v52 & 1;
    *(&v46 - 1) = (uint64_t)v22;
    sub_1001A56AC(&qword_10029A898, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
    sub_100221F70();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void *)(v46 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24);
    uint64_t v35 = *(void *)(v46 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32);
    sub_1000059A4((void *)(v46 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish), v34);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v47;
    *(void *)(v36 + 24) = v48;
    uint64_t v37 = *(void *)(v35 + 16);
    uint64_t v38 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v37 + 88);
    swift_retain();
    v38(v18, sub_1001B4DFC, v36, v34, v37);
    swift_release();
    sub_1001B7EAC((uint64_t)v18, type metadata accessor for GetRepairActionRequest);
    return sub_1001B7EAC((uint64_t)v22, type metadata accessor for Metrics);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_100222090();
    sub_100003CC8(v40, (uint64_t)qword_10029E7D0);
    unint64_t v41 = sub_100222070();
    os_log_type_t v42 = sub_1002224E0();
    if (os_log_type_enabled(v41, v42))
    {
      id v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "requestHealthCheck: No identity.", v43, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v44 = swift_allocError();
    *(_OWORD *)uint64_t v45 = xmmword_1002297D0;
    *(unsigned char *)(v45 + 16) = 13;
    a2(0, v44);
    return swift_errorRelease();
  }
}

uint64_t sub_100166BC4(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = 0;
  }
  if (a3) {
    unint64_t v9 = a3;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v9;
  if (a5)
  {
    unint64_t v10 = a5;
  }
  else
  {
    a4 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  a1[2] = a4;
  a1[3] = v10;
  return result;
}

uint64_t sub_100166C58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v21 = a7;
  uint64_t v13 = type metadata accessor for Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(unsigned char *)(a1 + 16) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a5;
  *(unsigned char *)(a1 + 32) = a6;
  sub_1001B7C04(v21, (uint64_t)v17, type metadata accessor for Metrics);
  uint64_t v18 = a1 + *(int *)(type metadata accessor for GetRepairActionRequest(0) + 36);
  sub_10004015C(v18, &qword_10029F000);
  sub_1001B7B9C((uint64_t)v17, v18, type metadata accessor for Metrics);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
}

uint64_t sub_100166DF0(uint64_t a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v114 = v6;
  uint64_t v115 = v7;
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v113 = &v102[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v111 = &v102[-v13];
  __chkstk_darwin(v12, v14);
  id v109 = &v102[-v15];
  uint64_t v16 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v112 = &v102[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v110 = &v102[-v22];
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v108 = &v102[-v25];
  __chkstk_darwin(v24, v26);
  uint64_t v28 = &v102[-v27];
  uint64_t RepairActionResponse = type metadata accessor for GetRepairActionResponse(0);
  __chkstk_darwin(RepairActionResponse, v30);
  uint64_t v32 = &v102[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = sub_1000046DC(&qword_100299E08);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (uint64_t *)&v102[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D830(a1, (uint64_t)v36, &qword_100299E08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = *v36;
    swift_errorRetain();
    a2(0, v37);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v106 = a3;
    uint64_t v107 = a2;
    sub_1001B7B9C((uint64_t)v36, (uint64_t)v32, type metadata accessor for GetRepairActionResponse);
    uint64_t v39 = *(int *)(RepairActionResponse + 20);
    uint64_t v40 = *(void *)&v32[v39];
    swift_beginAccess();
    unint64_t v41 = v32;
    if (*(unsigned char *)(v40 + 24) == 1)
    {
      uint64_t v42 = *(void *)(v40 + 16) & 0x3FLL;
      LODWORD(v105) = v42 == 4;
      HIDWORD(v105) = v42 == 5;
      LODWORD(v104) = v42 == 2;
      HIDWORD(v104) = v42 == 3;
      BOOL v103 = v42 == 1;
    }
    else
    {
      uint64_t v104 = 0;
      uint64_t v105 = 0;
      BOOL v103 = 0;
    }
    uint64_t v44 = v114;
    id v43 = v115;
    uint64_t v45 = v40
        + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
    swift_beginAccess();
    sub_10000D830(v45, (uint64_t)v28, (uint64_t *)&unk_10029EFF0);
    uint64_t v48 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))v43[6];
    uint64_t v46 = v43 + 6;
    uint64_t v47 = v48;
    LODWORD(v45) = v48(v28, 1, v44);
    sub_10004015C((uint64_t)v28, (uint64_t *)&unk_10029EFF0);
    id v49 = 0;
    if (v45 != 1)
    {
      id v49 = [objc_allocWithZone((Class)OTEscrowMoveRequestContext) init];
      if (v49)
      {
        uint64_t v50 = *(void *)&v41[v39]
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
        swift_beginAccess();
        uint64_t v51 = v108;
        sub_10000D830(v50, (uint64_t)v108, (uint64_t *)&unk_10029EFF0);
        int v52 = v47(v51, 1, v44);
        uint64_t v115 = v46;
        int v53 = v109;
        if (v52 == 1)
        {
          *id v109 = 0;
          v53[1] = 0xE000000000000000;
          v53[2] = 0;
          v53[3] = 0xE000000000000000;
          v53[4] = 0;
          v53[5] = 0xE000000000000000;
          id v54 = v49;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          uint64_t v55 = (char *)v53 + *(int *)(v44 + 32);
          uint64_t v56 = type metadata accessor for Metrics(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
          sub_10004015C((uint64_t)v51, (uint64_t *)&unk_10029EFF0);
        }
        else
        {
          sub_1001B7B9C((uint64_t)v51, (uint64_t)v109, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
          id v57 = v49;
        }
        uint64_t v58 = (uint64_t)v110;
        swift_bridgeObjectRetain();
        sub_1001B7EAC((uint64_t)v53, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
        NSString v59 = sub_100222260();
        swift_bridgeObjectRelease();
        [v49 setEscrowRecordLabel:v59];

        uint64_t v60 = *(void *)&v41[v39]
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
        swift_beginAccess();
        sub_10000D830(v60, v58, (uint64_t *)&unk_10029EFF0);
        if (v47((unsigned char *)v58, 1, v44) == 1)
        {
          uint64_t v61 = v111;
          *uint64_t v111 = 0;
          v61[1] = 0xE000000000000000;
          uint64_t v61[2] = 0;
          v61[3] = 0xE000000000000000;
          v61[4] = 0;
          v61[5] = 0xE000000000000000;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          uint64_t v62 = (char *)v61 + *(int *)(v44 + 32);
          uint64_t v63 = type metadata accessor for Metrics(0);
          id v64 = v62;
          id v65 = v61;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v64, 1, 1, v63);
          sub_10004015C(v58, (uint64_t *)&unk_10029EFF0);
        }
        else
        {
          id v65 = v111;
          sub_1001B7B9C(v58, (uint64_t)v111, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
        }
        uint64_t v66 = v113;
        uint64_t v67 = v44;
        swift_bridgeObjectRetain();
        sub_1001B7EAC((uint64_t)v65, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
        NSString v68 = sub_100222260();
        swift_bridgeObjectRelease();
        [v49 setCurrentFederation:v68];

        uint64_t v69 = *(void *)&v41[v39]
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
        swift_beginAccess();
        uint64_t v70 = v112;
        sub_10000D830(v69, (uint64_t)v112, (uint64_t *)&unk_10029EFF0);
        if (v47(v70, 1, v67) == 1)
        {
          *uint64_t v66 = 0;
          v66[1] = 0xE000000000000000;
          v66[2] = 0;
          v66[3] = 0xE000000000000000;
          v66[4] = 0;
          v66[5] = 0xE000000000000000;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          uint64_t v71 = (char *)v66 + *(int *)(v67 + 32);
          uint64_t v72 = type metadata accessor for Metrics(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 1, 1, v72);
          sub_10004015C((uint64_t)v70, (uint64_t *)&unk_10029EFF0);
        }
        else
        {
          sub_1001B7B9C((uint64_t)v70, (uint64_t)v66, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
        }
        swift_bridgeObjectRetain();
        sub_1001B7EAC((uint64_t)v66, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
        NSString v73 = sub_100222260();
        swift_bridgeObjectRelease();
        [v49 setIntendedFederation:v73];
      }
    }
    uint64_t v115 = v49;
    uint64_t v74 = *(void *)&v41[v39];
    unint64_t v75 = (uint64_t *)(v74
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
    swift_beginAccess();
    uint64_t v114 = *v75;
    Class v76 = (unsigned char **)(v74
                   + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
    swift_beginAccess();
    uint64_t v113 = *v76;
    id v77 = (unsigned char **)(v74
                   + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
    swift_beginAccess();
    uint64_t v112 = *v77;
    int v78 = (unsigned __int8 *)(v74
                            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
    swift_beginAccess();
    LODWORD(v111) = *v78;
    int v79 = (unsigned char **)(v74
                   + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
    swift_beginAccess();
    uint64_t v110 = *v79;
    uint64_t v80 = (void **)(v74
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
    swift_beginAccess();
    id v109 = *v80;
    uint64_t v81 = (uint64_t *)(v74
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
    swift_beginAccess();
    uint64_t v82 = *v81;
    uint64_t v83 = (char *)(v74
                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
    swift_beginAccess();
    char v84 = *v83;
    uint64_t v85 = (uint64_t *)(v74
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
    swift_beginAccess();
    uint64_t v86 = *v85;
    uint64_t v87 = (uint64_t *)(v74
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
    swift_beginAccess();
    uint64_t v88 = *v87;
    uint64_t v89 = (uint64_t *)(v74
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
    swift_beginAccess();
    uint64_t v90 = *v89;
    uint64_t v91 = (uint64_t *)(v74
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
    swift_beginAccess();
    uint64_t v92 = (uint64_t)v41;
    uint64_t v93 = *v91;
    uint64_t v94 = (unsigned char *)(v74
                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
    swift_beginAccess();
    LOBYTE(v94) = *v94;
    id v95 = objc_allocWithZone((Class)TrustedPeersHelperHealthCheckResult);
    LOBYTE(v101) = (_BYTE)v94;
    uint64_t v100 = v86;
    LOBYTE(v99) = v84;
    LOBYTE(v98) = (_BYTE)v111;
    uint64_t v96 = v115;
    id v97 = objc_msgSend(v95, "initWithPostRepairCFU:postEscrowCFU:resetOctagon:leaveTrust:reroll:moveRequest:totalEscrowRecords:collectableEscrowRecords:collectedEscrowRecords:escrowRecordGarbageCollectionEnabled:totalTlkShares:collectableTlkShares:collectedTlkShares:tlkShareGarbageCollectionEnabled:totalPeers:trustedPeers:superfluousPeers:peersCleanedup:superfluousPeersCleanupEnabled:", v103, v104, HIDWORD(v104), v105, HIDWORD(v105), v115, v114, v113, v112, v98, v110, v109, v82, v99,
            v100,
            v88,
            v90,
            v93,
            v101);
    v107(v97, 0);

    return sub_1001B7EAC(v92, type metadata accessor for GetRepairActionResponse);
  }
}

uint64_t sub_10016789C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void), uint64_t a6)
{
  return sub_1001855E8(a1, a2, a3, a4, a5, a6, "getSupportAppInfo complete: %{public}s", 0xD000000000000019, 0x8000000100244360);
}

uint64_t sub_1001678E4(uint64_t a1, void (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t SupportAppInfoResponse = type metadata accessor for GetSupportAppInfoResponse(0);
  __chkstk_darwin(SupportAppInfoResponse, v5);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000046DC((uint64_t *)&unk_10029ECF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (uint64_t *)&v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D830(a1, (uint64_t)v11, (uint64_t *)&unk_10029ECF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = *v11;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = v12;
      uint64_t v26 = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v18 = sub_1002222C0();
      uint64_t v25 = sub_1001BEBDC(v18, v19, &v26);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "getSupportAppInfo failed: %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(0, 0xF000000000000000, v12);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    sub_1001B7B9C((uint64_t)v11, (uint64_t)v7, type metadata accessor for GetSupportAppInfoResponse);
    sub_1001A56AC(&qword_10029A918, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);
    uint64_t v20 = sub_100221F40();
    unint64_t v22 = v21;
    sub_1000059E8(v20, v21);
    a2(v20, v22, 0);
    sub_100005A40(v20, v22);
    sub_100005A40(v20, v22);
    return sub_1001B7EAC((uint64_t)v7, type metadata accessor for GetSupportAppInfoResponse);
  }
}

uint64_t sub_100167CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = qword_100298EB8;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  uint64_t v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "beginning a fetchTrustedPeersCount", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = sub_1001B4C78;
  v12[3] = v6;
  v12[4] = v3;
  swift_retain();
  id v13 = v3;
  sub_100174C40((uint64_t)sub_1001B4C84, (uint64_t)v12);
  swift_release();

  return swift_release();
}

uint64_t sub_100167E68(void *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t))
{
  if (a2) {
    os_log_type_t v6 = sub_100222500();
  }
  else {
    os_log_type_t v6 = sub_1002224E0();
  }
  os_log_type_t v7 = v6;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  id v9 = a1;
  swift_errorRetain();
  id v10 = v9;
  swift_errorRetain();
  uint64_t v11 = sub_100222070();
  if (os_log_type_enabled(v11, v7))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    id v13 = v10;
    sub_1000046DC(&qword_10029EFD8);
    uint64_t v14 = sub_1002222D0();
    sub_1001BEBDC(v14, v15, &v18);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v19._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v19);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v16 = 0x203A726F727265;
    }
    else
    {
      uint64_t v16 = 0x73736563637573;
    }
    sub_1001BEBDC(v16, 0xE700000000000000, &v18);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v7, "fetch trusted peer count complete: %{public}s %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  return a3(a1, a2);
}

uint64_t sub_100168144(uint64_t a1, uint64_t (*a2)(void, uint64_t), uint64_t a3, char *a4)
{
  if (a1) {
    return a2(0, a1);
  }
  uint64_t v8 = *(void **)&a4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001B4C94;
  *(void *)(v10 + 24) = v9;
  v13[4] = sub_1001B8924;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100285E20;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  uint64_t v12 = a4;
  swift_retain();
  swift_release();
  [v8 performBlockAndWait:v11];
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

void sub_1001682DC(void (*a1)(id, id), uint64_t a2, uint64_t a3)
{
  id v4 = *(void **)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v9 = 0;
  id v5 = [v4 trustedPeerCountWithError:&v9];
  id v6 = v9;
  if (v9)
  {
    id v7 = v9;
    swift_willThrow();
    id v8 = v7;
    a1(0, v6);
  }
  else
  {
    id v8 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:v5];
    a1(v8, 0);
  }
}

uint64_t sub_1001683D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = qword_100298EB8;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  id v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "beginning a octagonContainsDistrustedRecoveryKeys", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = sub_1001B4C0C;
  v12[3] = v6;
  v12[4] = v3;
  swift_retain();
  id v13 = v3;
  sub_100174C40((uint64_t)sub_1001B4C18, (uint64_t)v12);
  swift_release();

  return swift_release();
}

uint64_t sub_100168558(char a1, uint64_t a2, uint64_t (*a3)(void, uint64_t))
{
  if (a2) {
    os_log_type_t v6 = sub_100222500();
  }
  else {
    os_log_type_t v6 = sub_1002224E0();
  }
  os_log_type_t v7 = v6;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v9 = sub_100222070();
  if (os_log_type_enabled(v9, v7))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = sub_1002222D0();
    sub_1001BEBDC(v11, v12, &v15);
    sub_100222690();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v16._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v16);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v13 = 0x203A726F727265;
    }
    else
    {
      uint64_t v13 = 0x73736563637573;
    }
    sub_1001BEBDC(v13, 0xE700000000000000, &v15);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v7, "octagon contains distrusted recovery keys complete: %{public}s %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  return a3(a1 & 1, a2);
}

uint64_t sub_100168804(uint64_t a1, uint64_t (*a2)(void, uint64_t), uint64_t a3, char *a4)
{
  if (a1) {
    return a2(0, a1);
  }
  uint64_t v8 = *(void **)&a4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v9 = (void *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a2;
  v9[4] = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001B4C28;
  *(void *)(v10 + 24) = v9;
  v13[4] = sub_1001B8924;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100285D58;
  uint64_t v11 = _Block_copy(v13);
  unint64_t v12 = a4;
  swift_retain();
  swift_retain();
  swift_release();
  [v8 performBlockAndWait:v11];
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10016899C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_100184C80(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.info.getter, "resetCDPAccountData complete: %{public}s", 0xD00000000000006BLL, 0x80000001002442F0);
}

uint64_t sub_1001689D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, int a6, int a7, int a8)
{
  int v25 = a7;
  int v26 = a8;
  int v24 = a6;
  uint64_t v23 = a4;
  uint64_t v12 = type metadata accessor for AccountInfo(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  Swift::String v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a1 = 6;
  *(unsigned char *)(a1 + 8) = 1;
  if (a3)
  {
    unint64_t v17 = a3;
  }
  else
  {
    a2 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = v17;
  if (a5) {
    uint64_t v18 = v23;
  }
  else {
    uint64_t v18 = 0;
  }
  if (a5) {
    unint64_t v19 = a5;
  }
  else {
    unint64_t v19 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v18;
  *(void *)(a1 + 40) = v19;
  *(unsigned char *)(a1 + 48) = v24;
  char v27 = v25;
  char v28 = v26;
  sub_1001A56AC((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100221F70();
  uint64_t v20 = a1 + *(int *)(type metadata accessor for ResetAccountCDPContentsRequest(0) + 40);
  sub_10004015C(v20, &qword_100299F50);
  sub_1001B7B9C((uint64_t)v16, v20, type metadata accessor for AccountInfo);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
}

uint64_t sub_100168BF8(uint64_t a1, char *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_1000046DC(&qword_100299DE8);
  __chkstk_darwin(v6, v7);
  id v9 = (uint64_t *)((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v9, &qword_100299DE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v9;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100222090();
    sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = sub_100222070();
    os_log_type_t v13 = sub_100222500();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v26 = v10;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v15 = sub_1002222C0();
      uint64_t v26 = sub_1001BEBDC(v15, v16, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "resetCDPAccountData failed: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a3(v10);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    unint64_t v17 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1001B15A4;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = v19;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100283FA8;
    uint64_t v20 = _Block_copy(aBlock);
    unint64_t v21 = a2;
    swift_retain();
    swift_release();
    [v17 performBlockAndWait:v20];
    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      a3(0);
      sub_10004015C((uint64_t)v9, &qword_100299DE8);
      return swift_release();
    }
  }
  return result;
}

id sub_100168FC8(uint64_t a1, uint64_t *a2)
{
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "accountSettings"));
  if (result)
  {
    id v4 = result;
    uint64_t v5 = sub_100221BF0();
    unint64_t v7 = v6;

    uint64_t v8 = sub_1001A5B68(v5, v7);
    id result = (id)sub_100005A40(v5, v7);
    if (v8)
    {
      *a2 = v8;
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100169360(void *a1, uint64_t a2, objc_class *a3, objc_class *a4)
{
  if (!a1)
  {
    unint64_t v6 = *(void **)((char *)a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    uint64_t v8 = swift_allocObject();
    v8[2].Class isa = a4;
    v8[3].Class isa = (Class)a2;
    v8[4].Class isa = a3;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_1001B1588;
    *(void *)(a2 + 24) = v8;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100283F30;
    uint64_t v14 = _Block_copy(aBlock);
    uint64_t v15 = a4;
    swift_retain();
    swift_retain();
    swift_release();
    [v6 performBlockAndWait:v14];
    _Block_release(v14);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v6 = a1;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = sub_100222070();
  os_log_type_t v9 = sub_100222500();
  if (!os_log_type_enabled(v8, v9))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v10 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v10 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v11 = sub_1002222C0();
  sub_1001BEBDC(v11, v12, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v8, v9, "fetchAccountSettings unable to fetch changes: %{public}s", v10, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  return ((uint64_t (*)(void, void *))a2)(0, v6);
}

void sub_100169688(uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v84 = a3;
  uint64_t v5 = sub_100221CB0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  os_log_type_t v9 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  uint64_t v11 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v85 = 0;
  id v12 = [v11 bestWalrusAcrossTrustedPeersWithError:&v85];
  os_log_type_t v13 = v12;
  id v14 = v85;
  if (v85)
  {
    id v15 = v85;

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    unint64_t v17 = v15;
    uint64_t v18 = sub_100222070();
    os_log_type_t v19 = sub_100222500();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      unint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138543362;
      uint64_t v22 = v17;
      uint64_t v83 = a2;
      uint64_t v23 = v22;
      int v24 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v85 = v24;
      sub_100222690();
      *unint64_t v21 = v24;

      a2 = v83;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "fetchAccountSettings unable to find best walrus: %{public}@", v20, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v18 = v17;
    }

    uint64_t v40 = v17;
    a2(0, v14);
    unint64_t v41 = v40;
    goto LABEL_33;
  }
  int v25 = *(void **)(a1 + v10);
  id v85 = 0;
  uint64_t v26 = v12;
  id v27 = [v25 bestWebAccessAcrossTrustedPeersWithError:&v85];
  char v28 = v27;
  id v29 = v85;
  if (!v85)
  {
    unint64_t v41 = v27;
    id v42 = (id)sub_100009CC4((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v82 = v26;
    if (v26)
    {
      id v43 = v26;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v85 = v42;
      sub_10018B4A8((uint64_t)v43, 0x7375726C6177, 0xE600000000000000, isUniquelyReferenced_nonNull_native, (uint64_t *)&unk_10029ECB0);
      id v42 = v85;

      swift_bridgeObjectRelease();
    }
    uint64_t v83 = a2;
    if (v41)
    {
      uint64_t v45 = v41;
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      id v85 = v42;
      sub_10018B4A8((uint64_t)v45, 0x7365636341626577, 0xE900000000000073, v46, (uint64_t *)&unk_10029ECB0);
      id v42 = v85;

      swift_bridgeObjectRelease();
    }
    uint64_t v81 = (void *)OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
    uint64_t v47 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
    uint64_t v48 = self;
    sub_1000047D8(0, &qword_10029ECA8);
    id v49 = v47;
    swift_bridgeObjectRetain();
    Class isa = sub_1002221C0().super.isa;
    id v80 = v42;
    swift_bridgeObjectRelease();
    id v85 = 0;
    id v51 = [v48 archivedDataWithRootObject:isa requiringSecureCoding:1 error:&v85];

    id v52 = v85;
    if (v51)
    {
      uint64_t v53 = sub_100221BF0();
      unint64_t v55 = v54;

      Class v56 = sub_100221BD0().super.isa;
      sub_100005A40(v53, v55);
      [v49 setAccountSettings:v56];

      id v57 = *(id *)((char *)v81 + a1);
      sub_100221CA0();
      Class v58 = sub_100221C30().super.isa;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      [v57 setAccountSettingsDate:v58];

      v83(v80, 0);
LABEL_32:
      swift_bridgeObjectRelease();
      uint64_t v40 = v82;
      goto LABEL_33;
    }
    NSString v59 = v52;

    sub_100221B40();
    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100222090();
    uint64_t v61 = sub_100003CC8(v60, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v62 = sub_100222070();
    os_log_type_t v63 = sub_100222500();
    if (os_log_type_enabled(v62, v63))
    {
      id v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      v79[1] = v61;
      uint64_t v66 = (void *)v65;
      *(_DWORD *)id v64 = 138412290;
      swift_errorRetain();
      uint64_t v67 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v85 = v67;
      sub_100222690();
      *uint64_t v66 = v67;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed to set cached account settings, ignoring: %@", v64, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    NSString v68 = (void (*)(id, void))v83;
    uint64_t v69 = v81;

    [*(id *)((char *)v69 + a1) setAccountSettings:0];
    [*(id *)((char *)v69 + a1) setAccountSettingsDate:0];
    uint64_t v70 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    id v85 = 0;
    if ([v70 save:&v85])
    {
      id v71 = v85;
      swift_errorRelease();
    }
    else
    {
      id v72 = v85;
      sub_100221B40();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      NSString v73 = sub_100222070();
      os_log_type_t v74 = sub_100222500();
      if (os_log_type_enabled(v73, v74))
      {
        unint64_t v75 = (uint8_t *)swift_slowAlloc();
        Class v76 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v75 = 138412290;
        swift_errorRetain();
        id v77 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v85 = v77;
        sub_100222690();
        *Class v76 = v77;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "failed to save: %@", v75, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        int v78 = (void (*)(id, void))v83;
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        swift_errorRelease();
        v78(v80, 0);
        goto LABEL_32;
      }
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    v68(v80, 0);
    goto LABEL_32;
  }
  id v30 = v85;

  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_100222090();
  sub_100003CC8(v31, (uint64_t)qword_10029E7D0);
  uint64_t v32 = v30;
  uint64_t v33 = sub_100222070();
  os_log_type_t v34 = sub_100222500();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 138543362;
    uint64_t v36 = v32;
    uint64_t v82 = v26;
    uint64_t v37 = v36;
    uint64_t v38 = a2;
    uint64_t v39 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v85 = v39;
    sub_100222690();
    *uint64_t v81 = v39;
    a2 = v38;

    uint64_t v26 = v82;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "fetchAccountSettings unable to find best web access: %{public}@", v35, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v33 = v32;
  }

  uint64_t v40 = v32;
  a2(0, v29);

  unint64_t v41 = v26;
LABEL_33:
}

uint64_t sub_10016A0F0(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  return sub_10018123C(a1, a2, a3, a4, a5, "preflightPreapprovedJoin complete: %{public}s", 0xD000000000000030, 0x80000001002446C0);
}

uint64_t sub_10016A114(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  if (a1)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_100222090();
    sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v9 = sub_100222070();
    os_log_type_t v10 = sub_100222500();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v12 = sub_1002222C0();
      sub_1001BEBDC(v12, v13, &v18);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "preflightPreapprovedJoin unable to fetch changes: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return ((uint64_t (*)(void, uint64_t))a2)(0, a1);
  }
  else
  {
    __chkstk_darwin(0, a2);
    sub_1000046DC(&qword_100299698);
    uint64_t result = sub_1002225C0();
    if (v18)
    {
      swift_bridgeObjectRetain();
      unint64_t v17 = a4;
      swift_retain();
      sub_1001AECD8(v18, v17, v17, a2, a3, a5);
      swift_bridgeObjectRelease();

      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_10016A3DC(uint64_t a1@<X0>, void (*a2)(void, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v19 = 0;
  id v6 = [v5 allPolicyVersionsWithError:&v19];
  id v7 = v19;
  if (v6)
  {
    uint64_t v8 = v6;
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
    uint64_t v9 = sub_100222440();
    id v10 = v7;
  }
  else
  {
    id v11 = v19;
    uint64_t v12 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138543362;
      swift_errorRetain();
      unint64_t v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v19 = v17;
      sub_100222690();
      *uint64_t v18 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error fetching all policy versions: %{public}@", v16, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(0, v12);
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v9 = 0;
  }
  *a3 = v9;
}

void sub_10016A6C4(char *a1, void (*a2)(uint64_t, id), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v7 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  id v90 = 0;
  unsigned int v8 = [v7 hasAnyPeersWithError:&v90];
  id v9 = v90;
  if (v90)
  {
    id v10 = v90;
    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100222090();
    sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
    uint64_t v12 = v10;
    uint64_t v13 = sub_100222070();
    os_log_type_t v14 = sub_100222500();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v15 = 138543362;
      unint64_t v17 = v12;
      uint64_t v18 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v90 = v18;
      sub_100222690();
      *uint64_t v16 = v18;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "error calling hasAnyPeers: %{public}@", v15, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v13 = v12;
    }

    uint64_t v53 = v12;
    a2(0, v9);

    return;
  }
  if (!v8)
  {
    a2(1, 0);
    return;
  }
  uint64_t v19 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v20 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v20) {
    goto LABEL_21;
  }
  unint64_t v21 = v20;
  sub_100222270();

  id v22 = [*(id *)&a1[v19] egoPeerPermanentInfo];
  if (!v22)
  {
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_100222090();
    sub_100003CC8(v54, (uint64_t)qword_10029E7D0);
    unint64_t v55 = sub_100222070();
    os_log_type_t v56 = sub_1002224E0();
    if (os_log_type_enabled(v55, v56))
    {
      id v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "preflightPreapprovedJoin: no prepared identity", v57, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v58 = swift_allocError();
    *(_OWORD *)uint64_t v59 = xmmword_1002297D0;
    *(unsigned char *)(v59 + 16) = 13;
    a2(0, (id)v58);
    swift_errorRelease();
    return;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_100221BF0();
  unint64_t v88 = v25;

  id v26 = [*(id *)&a1[v19] egoPeerPermanentInfoSig];
  if (!v26)
  {
    sub_100005A40(v24, v88);
    goto LABEL_20;
  }
  id v27 = v26;
  uint64_t v28 = sub_100221BF0();
  unint64_t v30 = v29;

  id v31 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  uint64_t v32 = v24;
  sub_1000059E8(v24, v88);
  unint64_t v87 = v30;
  sub_1000059E8(v28, v30);
  NSString v86 = sub_100222260();
  swift_bridgeObjectRelease();
  Class isa = sub_100221BD0().super.isa;
  Class v34 = sub_100221BD0().super.isa;
  id v35 = [self permanentInfoWithPeerID:v86 data:isa sig:v34 keyFactory:v31];
  uint64_t v84 = v31;

  uint64_t v85 = v28;
  sub_100005A40(v28, v87);
  sub_100005A40(v32, v88);

  uint64_t v36 = v32;
  if (!v35)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100222090();
    sub_100003CC8(v60, (uint64_t)qword_10029E7D0);
    uint64_t v61 = sub_100222070();
    os_log_type_t v62 = sub_1002224E0();
    if (os_log_type_enabled(v61, v62))
    {
      os_log_type_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "preflightPreapprovedJoin: invalid permanent info", v63, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v64 = swift_allocError();
    *(_OWORD *)uint64_t v65 = xmmword_1002297C0;
    *(unsigned char *)(v65 + 16) = 13;
    a2(0, (id)v64);
    swift_errorRelease();

    goto LABEL_41;
  }
  id v37 = *(id *)&a1[v6];
  id v38 = objc_msgSend(objc_msgSend(v35, "signingPubKey"), "spki");
  swift_unknownObjectRelease();
  uint64_t v39 = sub_100221BF0();
  unint64_t v41 = v40;

  Class v42 = sub_100221BD0().super.isa;
  sub_100005A40(v39, v41);
  id v90 = 0;
  unsigned int v43 = [v37 hasPotentiallyTrustedPeerPreapprovingKey:v42 error:&v90];

  id v44 = v90;
  if (v90)
  {
    id v45 = v90;
    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_100222090();
    sub_100003CC8(v46, (uint64_t)qword_10029E7D0);
    uint64_t v47 = v45;
    uint64_t v48 = sub_100222070();
    os_log_type_t v49 = sub_1002224E0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 138543362;
      id v83 = v35;
      id v51 = v47;
      id v52 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v90 = v52;
      sub_100222690();
      *uint64_t v82 = v52;

      id v35 = v83;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "preflightPreapprovedJoin: error calling hasPotentiallyTrustedPeerPreapprovingKey %{public}@", v50, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v48 = v47;
    }

    NSString v68 = v47;
    a2(0, v44);

LABEL_41:
    sub_100005A40(v85, v87);
    sub_100005A40(v36, v88);
    return;
  }
  if (!v43)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_100222090();
    sub_100003CC8(v69, (uint64_t)qword_10029E7D0);
    uint64_t v70 = sub_100222070();
    os_log_type_t v71 = sub_1002224E0();
    if (os_log_type_enabled(v70, v71))
    {
      id v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "preflightPreapprovedJoin: no peers preapprove our key", v72, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v73 = swift_allocError();
    *(_OWORD *)uint64_t v74 = xmmword_1002312D0;
    *(unsigned char *)(v74 + 16) = 13;
    a2(0, (id)v73);
    swift_errorRelease();

    goto LABEL_41;
  }
  if (a4
    && (uint64_t v66 = a1,
        uint64_t v67 = swift_bridgeObjectRetain(),
        uint64_t v81 = sub_100197D94(v67, (uint64_t)v66),
        v66,
        v81[2]))
  {
    a2(1, 0);
    sub_100005A40(v36, v88);
    sub_100005A40(v85, v87);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_100222090();
    sub_100003CC8(v75, (uint64_t)qword_10029E7D0);
    Class v76 = sub_100222070();
    os_log_type_t v77 = sub_1002224E0();
    if (os_log_type_enabled(v76, v77))
    {
      int v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v78 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "preflightPreapprovedJoin: no reciprocal trust for existing peers", v78, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v79 = swift_allocError();
    *(_OWORD *)uint64_t v80 = xmmword_1002312E0;
    *(unsigned char *)(v80 + 16) = 13;
    a2(0, (id)v79);
    sub_100005A40(v36, v88);
    sub_100005A40(v85, v87);

    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10016B414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, void, void, void, void), uint64_t a8)
{
  return sub_10016B460(a1, a2, a3, a4, a5, a6, a7, a8, "preapprovedJoin complete: %{public}s", 0xD00000000000003ALL, 0x8000000100244680);
}

uint64_t sub_10016B460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, void, void, void, void), uint64_t a8, const char *a9, uint64_t a10, unint64_t a11)
{
  if (a5) {
    os_log_type_t v14 = sub_100222500();
  }
  else {
    os_log_type_t v14 = sub_1002224E0();
  }
  os_log_type_t v15 = v14;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100222090();
  sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v17 = sub_100222070();
  if (os_log_type_enabled(v17, v15))
  {
    unint64_t v21 = a7;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446210;
    if (a5)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v26._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v26);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v19 = 0x203A726F727265;
    }
    else
    {
      uint64_t v19 = 0x73736563637573;
    }
    sub_1001BEBDC(v19, 0xE700000000000000, &v25);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v15, a9, v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a7 = v21;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(a10, a11);
  return a7(a1, a2, a3, a4, a5);
}

uint64_t sub_10016B6EC(void *a1, uint64_t a2, objc_class *a3, objc_class *a4, objc_class *a5, objc_class *a6, objc_class *a7)
{
  if (!a1)
  {
    id v9 = *(void **)((char *)a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    uint64_t v11 = swift_allocObject();
    v11[2].Class isa = a4;
    v11[3].Class isa = a5;
    v11[4].Class isa = a6;
    v11[5].Class isa = a7;
    v11[6].Class isa = (Class)a2;
    v11[7].Class isa = a3;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_1001B2284;
    *(void *)(a2 + 24) = v11;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100284688;
    id v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    unint64_t v21 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    [v9 performBlockAndWait:v20];
    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  id v9 = a1;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100222090();
  sub_100003CC8(v10, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = sub_100222070();
  os_log_type_t v12 = sub_100222500();
  if (!os_log_type_enabled(v11, v12))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v13 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v13 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v14 = sub_1002222C0();
  sub_1001BEBDC(v14, v15, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v11, v12, "preapprovedJoin unable to fetch changes: %{public}s", v13, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  return ((uint64_t (*)(void, void, void *, void, void *))a2)(0, 0, _swiftEmptyArrayStorage, 0, v9);
}

void sub_10016BA4C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, void, void *, void, uint64_t), uint64_t a6)
{
  os_log_type_t v12 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  v113[0] = 0;
  id v13 = [v12 peerCountWithError:v113];
  uint64_t v14 = v113[0];
  if (v113[0])
  {
    uint64_t v110 = a5;
    id v15 = (id)v113[0];
    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    unint64_t v17 = v15;
    uint64_t v18 = sub_100222070();
    os_log_type_t v19 = sub_100222500();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v108 = (void *)swift_slowAlloc();
      *(_DWORD *)id v20 = 138543362;
      unint64_t v21 = v17;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      v113[0] = v22;
      sub_100222690();
      *uint64_t v108 = v22;

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "preapprovedJoin: error getting peerCount: %{public}@", v20, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v18 = v17;
    }

    unint64_t v55 = v17;
    v110(0, 0, _swiftEmptyArrayStorage, 0, v14);

    return;
  }
  if (!v13)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_100222090();
    sub_100003CC8(v56, (uint64_t)qword_10029E7D0);
    id v57 = sub_100222070();
    os_log_type_t v58 = sub_1002224E0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "preapprovedJoin but no existing peers, attempting establish", v59, 2u);
      swift_slowDealloc();
    }

    sub_1001346E4(a2, a3, a4, a5, a6);
    return;
  }
  uint64_t v23 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v24 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (!v24)
  {
LABEL_27:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100222090();
    sub_100003CC8(v60, (uint64_t)qword_10029E7D0);
    uint64_t v61 = sub_100222070();
    os_log_type_t v62 = sub_1002224E0();
    if (os_log_type_enabled(v61, v62))
    {
      os_log_type_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "preapprovedJoin: no prepared identity", v63, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v64 = swift_allocError();
    *(_OWORD *)uint64_t v65 = xmmword_1002297D0;
    *(unsigned char *)(v65 + 16) = 13;
    a5(0, 0, _swiftEmptyArrayStorage, 0, v64);
    swift_errorRelease();
    return;
  }
  uint64_t v25 = v24;
  uint64_t v111 = a5;
  uint64_t v26 = sub_100222270();
  uint64_t v28 = v27;

  id v29 = [*(id *)&a1[v23] egoPeerPermanentInfo];
  if (!v29)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    a5 = v111;
    goto LABEL_27;
  }
  unint64_t v30 = v29;
  uint64_t v109 = sub_100221BF0();
  unint64_t v32 = v31;

  id v33 = [*(id *)&a1[v23] egoPeerPermanentInfoSig];
  if (!v33)
  {
LABEL_25:
    sub_100005A40(v109, v32);
    goto LABEL_26;
  }
  Class v34 = v33;
  uint64_t v106 = sub_100221BF0();
  unint64_t v107 = v35;

  id v36 = [*(id *)&a1[v23] egoPeerStableInfo];
  if (!v36)
  {
LABEL_24:
    sub_100005A40(v106, v107);
    goto LABEL_25;
  }
  id v37 = v36;
  uint64_t v103 = v26;
  uint64_t v105 = v28;
  uint64_t v38 = sub_100221BF0();
  unint64_t v40 = v39;

  id v41 = [*(id *)&a1[v23] egoPeerStableInfoSig];
  if (!v41)
  {
    sub_100005A40(v38, v40);
    goto LABEL_24;
  }
  Class v42 = v41;
  unint64_t v98 = v40;
  uint64_t v99 = v38;
  uint64_t v100 = sub_100221BF0();
  unint64_t v101 = v43;

  id v104 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  swift_bridgeObjectRetain();
  sub_1000059E8(v109, v32);
  sub_1000059E8(v106, v107);
  NSString v95 = sub_100222260();
  swift_bridgeObjectRelease();
  unint64_t v102 = v32;
  Class isa = sub_100221BD0().super.isa;
  Class v44 = sub_100221BD0().super.isa;
  id v45 = [self permanentInfoWithPeerID:v95 data:isa sig:v44 keyFactory:v104];
  sub_100005A40(v106, v107);
  sub_100005A40(v109, v32);

  if (v45)
  {
    id v96 = objc_allocWithZone((Class)TPPeerStableInfo);
    sub_1000059E8(v99, v40);
    sub_1000059E8(v100, v101);
    Class v46 = sub_100221BD0().super.isa;
    Class v93 = sub_100221BD0().super.isa;
    id v97 = [v96 initWithData:v46 sig:v93];
    sub_100005A40(v100, v101);
    sub_100005A40(v99, v40);

    if (v97)
    {
      id v47 = [v45 machineID];
      uint64_t v48 = sub_100222270();
      unint64_t v50 = v49;

      LOBYTE(v47) = sub_1001EAE4C(v48, v50);
      swift_bridgeObjectRelease();
      if (v47)
      {
        id v51 = (void *)swift_allocObject();
        v51[2] = v111;
        v51[3] = a6;
        v51[4] = a1;
        v51[5] = v103;
        v114._countAndFlagsBits = v103;
        v51[6] = v105;
        v51[7] = v45;
        v114._object = v105;
        v51[8] = v97;
        v51[9] = a4;
        v51[10] = a2;
        v51[11] = a3;
        v51[12] = v109;
        v51[13] = v102;
        v51[14] = v106;
        v51[15] = v107;
        v51[16] = v99;
        v51[17] = v40;
        v51[18] = v100;
        v51[19] = v101;
        strcpy((char *)v113, "signing-key ");
        BYTE5(v113[1]) = 0;
        HIWORD(v113[1]) = -5120;
        sub_100222310(v114);
        uint64_t v112 = v113[0];
        uint64_t v94 = v113[1];
        swift_bridgeObjectRetain_n();
        sub_1000059E8(v109, v102);
        sub_1000059E8(v106, v107);
        sub_1000059E8(v99, v40);
        sub_1000059E8(v100, v101);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        id v52 = a1;
        id v53 = v45;
        id v54 = v97;
        sub_10019ED6C(v112, v94, (void (*)(char *, uint64_t))sub_1001B2334, (uint64_t)v51, v103, v105);

        swift_bridgeObjectRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        sub_100005A40(v100, v101);
        sub_100005A40(v99, v40);
        sub_100005A40(v106, v107);
        sub_100005A40(v109, v102);
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_100222090();
      sub_100003CC8(v71, (uint64_t)qword_10029E7D0);
      id v72 = v45;
      uint64_t v73 = sub_100222070();
      os_log_type_t v74 = sub_1002224E0();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        v113[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v75 = 136446210;
        id v76 = [v72 machineID];
        uint64_t v77 = sub_100222270();
        unint64_t v79 = v78;

        sub_1001BEBDC(v77, v79, v113);
        sub_100222690();

        uint64_t v80 = v72;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "preapprovedJoin: self machineID %{public}s (me) not on list", v75, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v80 = v72;
      }
      id v81 = objc_allocWithZone((Class)SecTapToRadar);
      NSString v82 = sub_100222260();
      NSString v83 = sub_100222260();
      NSString v84 = sub_100222260();
      id v85 = [v81 initTapToRadar:v82 description:v83 radar:v84];

      [v85 trigger];
      id v86 = [v80 machineID];
      uint64_t v87 = sub_100222270();
      uint64_t v89 = v88;

      sub_100042D4C();
      uint64_t v90 = swift_allocError();
      *(void *)uint64_t v91 = v87;
      *(void *)(v91 + 8) = v89;
      *(unsigned char *)(v91 + 16) = 2;
      v111(0, 0, _swiftEmptyArrayStorage, 0, v90);
      swift_errorRelease();

      sub_100005A40(v100, v101);
      sub_100005A40(v99, v98);
      uint64_t v70 = v106;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100042D4C();
      uint64_t v68 = swift_allocError();
      *(_OWORD *)uint64_t v69 = xmmword_100229940;
      *(unsigned char *)(v69 + 16) = 13;
      v111(0, 0, _swiftEmptyArrayStorage, 0, v68);
      swift_errorRelease();

      sub_100005A40(v100, v101);
      sub_100005A40(v99, v40);
      uint64_t v70 = v106;
    }
    sub_100005A40(v70, v107);
    sub_100005A40(v109, v102);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100042D4C();
    uint64_t v66 = swift_allocError();
    *(_OWORD *)uint64_t v67 = xmmword_1002297C0;
    *(unsigned char *)(v67 + 16) = 13;
    v111(0, 0, _swiftEmptyArrayStorage, 0, v66);
    swift_errorRelease();

    sub_100005A40(v100, v101);
    sub_100005A40(v99, v40);
    sub_100005A40(v106, v107);
    sub_100005A40(v109, v32);
  }
}

void sub_10016C7CC(char *a1, uint64_t a2, void (*a3)(void, void, void *, void, void *), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, NSObject *a11, NSObject *a12, uint64_t a13, unint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20)
{
  if (a1)
  {
    uint64_t v26 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey];
    id v27 = *(id *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    uint64_t v67 = a1;
    id v28 = objc_msgSend(objc_msgSend(v26, "publicKey"), "spki");
    swift_unknownObjectRelease();
    uint64_t v29 = sub_100221BF0();
    unint64_t v31 = v30;

    Class isa = sub_100221BD0().super.isa;
    sub_100005A40(v29, v31);
    aBlock[0] = 0;
    unsigned int v33 = [v27 hasPotentiallyTrustedPeerPreapprovingKey:isa error:aBlock];

    Class v34 = aBlock[0];
    if (aBlock[0])
    {
      uint64_t v66 = a3;
      id v35 = aBlock[0];
      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_100222090();
      sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
      id v37 = v35;
      uint64_t v38 = sub_100222070();
      os_log_type_t v39 = sub_1002224E0();
      if (os_log_type_enabled(v38, v39))
      {
        unint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v65 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v40 = 138543362;
        id v41 = v37;
        Class v42 = (void *)_swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v42;
        sub_100222690();
        void *v65 = v42;

        _os_log_impl((void *)&_mh_execute_header, v38, v39, "preapprovedJoin: error calling hasPotentiallyTrustedPeerPreapprovingKey %{public}@", v40, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_15:

        uint64_t v56 = v37;
        v66(0, 0, _swiftEmptyArrayStorage, 0, v34);

        return;
      }
LABEL_14:

      uint64_t v38 = v37;
      goto LABEL_15;
    }
    if (v33)
    {
      os_log_type_t v63 = a8;
      id v64 = *(id *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      Class v34 = (void *)swift_allocObject();
      v34[2] = a5;
      v34[3] = a6;
      v34[4] = a7;
      v34[5] = a8;
      v34[6] = a9;
      v34[7] = a10;
      v34[8] = v67;
      v34[9] = a3;
      id v37 = a11;
      uint64_t v38 = a12;
      v34[10] = a4;
      v34[11] = a11;
      v34[12] = a12;
      v34[13] = a13;
      v34[14] = a14;
      v34[15] = a15;
      v34[16] = a16;
      v34[17] = a17;
      v34[18] = a18;
      v34[19] = a19;
      v34[20] = a20;
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = sub_1001B23E4;
      *(void *)(v50 + 24) = v34;
      aBlock[4] = sub_1001B8924;
      uint64_t v70 = (void (*)(void, void, void *, void, void *))v50;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100112F58;
      aBlock[3] = &unk_100284728;
      id v51 = _Block_copy(aBlock);
      uint64_t v66 = v70;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v52 = v67;
      id v53 = a5;
      swift_bridgeObjectRetain();
      id v54 = v63;
      id v55 = a9;
      sub_1000059E8(a13, a14);
      sub_1000059E8(a15, a16);
      sub_1000059E8(a17, a18);
      sub_1000059E8(a19, a20);
      swift_retain();
      swift_release();
      [v64 performBlockAndWait:v51];

      _Block_release(v51);
      LOBYTE(v52) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((v52 & 1) == 0) {
        return;
      }
      __break(1u);
      goto LABEL_14;
    }
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_100222090();
    sub_100003CC8(v57, (uint64_t)qword_10029E7D0);
    os_log_type_t v58 = sub_100222070();
    os_log_type_t v59 = sub_1002224E0();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "preapprovedJoin: no peers preapprove our key", v60, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v61 = swift_allocError();
    *(_OWORD *)uint64_t v62 = xmmword_1002312D0;
    *(unsigned char *)(v62 + 16) = 13;
    a3(0, 0, _swiftEmptyArrayStorage, 0, (void *)v61);
    swift_errorRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_100222090();
    sub_100003CC8(v44, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v45 = sub_100222070();
    os_log_type_t v46 = sub_100222500();
    if (os_log_type_enabled(v45, v46))
    {
      id v47 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)id v47 = 136446210;
      uint64_t v71 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v48 = sub_1002222C0();
      uint64_t v71 = sub_1001BEBDC(v48, v49, (uint64_t *)aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "preapprovedJoin: Don't have my own keys: can't join: %{public}s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    a3(0, 0, _swiftEmptyArrayStorage, 0, (void *)a2);
  }
}

uint64_t sub_10016D000(char *a1, char *a2, char *a3, void *a4, objc_class *a5, void *a6, objc_class *a7, void (*a8)(void, void, void *, void, void), uint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19)
{
  id v296 = a6;
  unint64_t v297 = a8;
  uint64_t v295 = a5;
  uint64_t v299 = a3;
  uint64_t v300 = a4;
  unint64_t v301 = a1;
  uint64_t v298 = a9;
  uint64_t v279 = type metadata accessor for JoinWithVoucherRequest(0);
  __chkstk_darwin(v279, v21);
  unint64_t v280 = (char *)&v266 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SignedVoucher(0);
  uint64_t v286 = *(uint8_t **)(v23 - 8);
  __chkstk_darwin(v23 - 8, v24);
  unint64_t v294 = (uint64_t *)((char *)&v266 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v276 = (uint64_t)&v266 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v30);
  uint64_t v275 = (uint64_t)&v266 - v31;
  uint64_t v282 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v281 = *(void *)(v282 - 8);
  uint64_t v33 = __chkstk_darwin(v282, v32);
  uint64_t v278 = (_OWORD *)((char *)&v266 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v33, v35);
  uint64_t v277 = (_OWORD *)((char *)&v266 - v36);
  uint64_t v37 = type metadata accessor for Bottle(0);
  uint64_t v39 = __chkstk_darwin(v37 - 8, v38);
  uint64_t v287 = (uint64_t)&v266 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v41);
  uint64_t v288 = (uint64_t)&v266 - v42;
  uint64_t v43 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v43 - 8, v44);
  v292 = (char *)&v266 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v290 = *(void *)(v46 - 8);
  uint64_t v291 = v46;
  __chkstk_darwin(v46, v47);
  unint64_t v49 = (char *)&v266 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = type metadata accessor for Peer(0);
  uint64_t v283 = *(void *)(v293 - 8);
  uint64_t v50 = *(void *)(v283 + 64);
  uint64_t v52 = __chkstk_darwin(v293, v51);
  uint64_t v284 = (uint64_t)&v266 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v52, v53);
  uint64_t v285 = (uint64_t)&v266 - v55;
  uint64_t v57 = __chkstk_darwin(v54, v56);
  os_log_type_t v59 = (char *)&v266 - v58;
  uint64_t v61 = __chkstk_darwin(v57, v60);
  os_log_type_t v63 = (char *)&v266 - v62;
  uint64_t v65 = __chkstk_darwin(v61, v64);
  uint64_t v67 = (char *)&v266 - v66;
  uint64_t v69 = __chkstk_darwin(v65, v68);
  uint64_t v71 = (char *)&v266 - v70;
  __chkstk_darwin(v69, v72);
  os_log_type_t v74 = (char *)&v266 - v73;
  uint64_t v289 = a2;
  id v75 = sub_10015ED1C((uint64_t)v71, a2, v299, v300, v295, 0, 0, (uint64_t)v296, _swiftEmptyArrayStorage, (uint64_t)a7);
  uint64_t v295 = a7;
  uint64_t v271 = v67;
  uint64_t v273 = v63;
  uint64_t v272 = v59;
  uint64_t v270 = v50;
  id v296 = v75;
  sub_1001B7B9C((uint64_t)v71, (uint64_t)v74, type metadata accessor for Peer);
  uint64_t v76 = *(int *)(v293 + 32);
  uint64_t v274 = v74;
  uint64_t v77 = (uint64_t)v292;
  sub_10000D830((uint64_t)&v74[v76], (uint64_t)v292, &qword_100299F18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v290 + 48))(v77, 1, v291) == 1)
  {
    *(_OWORD *)unint64_t v49 = xmmword_100229520;
    *((_OWORD *)v49 + 1) = xmmword_100229520;
    id v78 = v296;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v77, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C(v77, (uint64_t)v49, type metadata accessor for SignedPeerStableInfo);
    id v79 = v296;
  }
  uint64_t v80 = v295;
  uint64_t v81 = *(void *)v49;
  unint64_t v82 = *((void *)v49 + 1);
  uint64_t v83 = *((void *)v49 + 2);
  unint64_t v84 = *((void *)v49 + 3);
  id v85 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v81, v82);
  sub_1000059E8(v83, v84);
  Class isa = sub_100221BD0().super.isa;
  Class v87 = sub_100221BD0().super.isa;
  uint64_t v88 = (char *)[v85 initWithData:isa sig:v87];
  sub_100005A40(v83, v84);
  sub_100005A40(v81, v82);

  sub_1001B7EAC((uint64_t)v49, type metadata accessor for SignedPeerStableInfo);
  if (v88)
  {
    uint64_t v89 = [v300 epoch];
    uint64_t v90 = v297;
    id v91 = v296;
    if (((unint64_t)v89 & 0x8000000000000000) != 0)
    {
      __break(1u);
      swift_once();
      uint64_t v94 = sub_100222090();
      sub_100003CC8(v94, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      NSString v95 = sub_100222070();
      os_log_type_t v96 = sub_100222500();
      if (os_log_type_enabled(v95, v96))
      {
        v292 = v88;
        id v97 = (uint8_t *)swift_slowAlloc();
        uint64_t v98 = swift_slowAlloc();
        uint64_t v302 = 0;
        uint64_t v303 = v98;
        *(_DWORD *)id v97 = 136446210;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v99 = sub_1002222C0();
        uint64_t v302 = (void *)sub_1001BEBDC(v99, v100, &v303);
        uint64_t v88 = v292;
        sub_100222690();
        id v91 = v296;
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v95, v96, "Unable to process keys before joining: %{public}s", v97, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_errorRetain();
      v90(0, 0, _swiftEmptyArrayStorage, 0, 0);

      swift_errorRelease();
      swift_errorRelease();
      uint64_t v111 = type metadata accessor for Peer;
      uint64_t v112 = (uint64_t)v274;
    }
    else
    {
      sub_10015DC68(a10, a11, v80, (uint64_t)v296, v89);
      uint64_t v295 = v92;
      uint64_t v93 = (uint64_t)v289;
      uint64_t v114 = v113;

      uint64_t v115 = v287;
      sub_1001807DC(v93, (uint64_t)v299, v287);
      uint64_t v269 = 0;
      uint64_t v290 = v114;
      v292 = v88;
      sub_1001B7B9C(v115, v288, type metadata accessor for Bottle);
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      unint64_t v267 = a15;
      uint64_t v117 = sub_100222090();
      uint64_t v118 = sub_100003CC8(v117, (uint64_t)qword_10029E7D0);
      swift_bridgeObjectRetain_n();
      uint64_t v119 = sub_100222070();
      os_log_type_t v120 = sub_1002224E0();
      BOOL v121 = os_log_type_enabled(v119, v120);
      uint64_t v291 = v118;
      if (v121)
      {
        uint64_t v122 = (uint8_t *)swift_slowAlloc();
        uint64_t v303 = swift_slowAlloc();
        *(_DWORD *)uint64_t v122 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v302 = (void *)sub_1001BEBDC((uint64_t)v289, (unint64_t)v299, &v303);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v119, v120, "Beginning preapprovedJoin for peer %{public}s", v122, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v287 = a17;
      uint64_t v268 = a16;
      sub_1000059E8(a12, a13);
      sub_1000059E8(a12, a13);
      uint64_t v123 = sub_100222070();
      os_log_type_t v124 = sub_1002224E0();
      if (os_log_type_enabled(v123, v124))
      {
        uint64_t v125 = (uint8_t *)swift_slowAlloc();
        uint64_t v303 = swift_slowAlloc();
        *(_DWORD *)uint64_t v125 = 136446210;
        uint64_t v126 = sub_100221BE0(0);
        uint64_t v302 = (void *)sub_1001BEBDC(v126, v127, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_100005A40(a12, a13);
        sub_100005A40(a12, a13);
        _os_log_impl((void *)&_mh_execute_header, v123, v124, "preapprovedJoin permanentInfo: %{public}s", v125, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100005A40(a12, a13);
        sub_100005A40(a12, a13);
      }

      unint64_t v128 = a19;
      uint64_t v266 = a18;
      unint64_t v129 = v267;
      sub_1000059E8(a14, v267);
      sub_1000059E8(a14, v129);
      uint64_t v130 = sub_100222070();
      os_log_type_t v131 = sub_1002224E0();
      if (os_log_type_enabled(v130, v131))
      {
        id v132 = (uint8_t *)swift_slowAlloc();
        uint64_t v303 = swift_slowAlloc();
        *(_DWORD *)id v132 = 136446210;
        uint64_t v133 = sub_100221BE0(0);
        uint64_t v302 = (void *)sub_1001BEBDC(v133, v134, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_100005A40(a14, v129);
        sub_100005A40(a14, v129);
        _os_log_impl((void *)&_mh_execute_header, v130, v131, "preapprovedJoin permanentInfoSig: %{public}s", v132, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100005A40(a14, v129);
        sub_100005A40(a14, v129);
      }

      uint64_t v135 = v268;
      unint64_t v136 = v287;
      sub_1000059E8(v268, v287);
      sub_1000059E8(v135, v136);
      uint64_t v137 = sub_100222070();
      os_log_type_t v138 = sub_1002224E0();
      if (os_log_type_enabled(v137, v138))
      {
        os_log_type_t v139 = (uint8_t *)swift_slowAlloc();
        uint64_t v303 = swift_slowAlloc();
        unint64_t v267 = a19;
        *(_DWORD *)os_log_type_t v139 = 136446210;
        uint64_t v140 = sub_100221BE0(0);
        uint64_t v302 = (void *)sub_1001BEBDC(v140, v141, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_100005A40(v135, v136);
        unint64_t v128 = v267;
        sub_100005A40(v135, v136);
        _os_log_impl((void *)&_mh_execute_header, v137, v138, "preapprovedJoin stableInfo: %{public}s", v139, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100005A40(v135, v136);
        sub_100005A40(v135, v136);
      }

      uint64_t v142 = v266;
      sub_1000059E8(v266, v128);
      sub_1000059E8(v142, v128);
      uint64_t v143 = sub_100222070();
      os_log_type_t v144 = sub_1002224E0();
      if (os_log_type_enabled(v143, v144))
      {
        uint64_t v145 = (uint8_t *)swift_slowAlloc();
        uint64_t v303 = swift_slowAlloc();
        *(_DWORD *)uint64_t v145 = 136446210;
        uint64_t v146 = sub_100221BE0(0);
        uint64_t v302 = (void *)sub_1001BEBDC(v146, v147, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_100005A40(v142, v128);
        sub_100005A40(v142, v128);
        _os_log_impl((void *)&_mh_execute_header, v143, v144, "preapprovedJoin stableInfoSig: %{public}s", v145, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100005A40(v142, v128);
        sub_100005A40(v142, v128);
      }

      uint64_t v148 = (uint64_t)v273;
      uint64_t v149 = (uint64_t)v271;
      uint64_t v150 = (uint64_t)v274;
      sub_1001B7C04((uint64_t)v274, (uint64_t)v271, type metadata accessor for Peer);
      id v151 = sub_100222070();
      os_log_type_t v152 = sub_1002224E0();
      BOOL v153 = os_log_type_enabled(v151, v152);
      id v154 = v286;
      if (v153)
      {
        uint64_t v155 = (uint8_t *)swift_slowAlloc();
        uint64_t v303 = swift_slowAlloc();
        *(_DWORD *)uint64_t v155 = 136446210;
        uint64_t v156 = v275;
        sub_10000D830(v149 + *(int *)(v293 + 36), v275, &qword_10029ECA0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v281 + 48))(v156, 1, v282) == 1)
        {
          uint64_t v157 = v277;
          *uint64_t v277 = xmmword_100229520;
          v157[1] = xmmword_100229520;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          sub_10004015C(v156, &qword_10029ECA0);
        }
        else
        {
          uint64_t v157 = v277;
          sub_1001B7B9C(v156, (uint64_t)v277, type metadata accessor for SignedPeerDynamicInfo);
        }
        uint64_t v158 = *(void *)v157;
        unint64_t v159 = *((void *)v157 + 1);
        sub_1000059E8(*(void *)v157, v159);
        sub_1001B7EAC((uint64_t)v157, type metadata accessor for SignedPeerDynamicInfo);
        uint64_t v160 = sub_100221BE0(0);
        unint64_t v162 = v161;
        sub_100005A40(v158, v159);
        uint64_t v302 = (void *)sub_1001BEBDC(v160, v162, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_1001B7EAC((uint64_t)v271, type metadata accessor for Peer);
        _os_log_impl((void *)&_mh_execute_header, v151, v152, "preapprovedJoin dynamicInfo: %{public}s", v155, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v150 = (uint64_t)v274;
        id v154 = v286;
        uint64_t v148 = (uint64_t)v273;
      }
      else
      {
        sub_1001B7EAC(v149, type metadata accessor for Peer);
      }
      sub_1001B7C04(v150, v148, type metadata accessor for Peer);
      NSString v163 = sub_100222070();
      os_log_type_t v164 = sub_1002224E0();
      if (os_log_type_enabled(v163, v164))
      {
        id v165 = (uint8_t *)swift_slowAlloc();
        uint64_t v303 = swift_slowAlloc();
        *(_DWORD *)id v165 = 136446210;
        uint64_t v166 = v148 + *(int *)(v293 + 36);
        uint64_t v167 = v276;
        sub_10000D830(v166, v276, &qword_10029ECA0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v281 + 48))(v167, 1, v282) == 1)
        {
          uint64_t v168 = v278;
          *uint64_t v278 = xmmword_100229520;
          v168[1] = xmmword_100229520;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          sub_10004015C(v167, &qword_10029ECA0);
        }
        else
        {
          uint64_t v168 = v278;
          sub_1001B7B9C(v167, (uint64_t)v278, type metadata accessor for SignedPeerDynamicInfo);
        }
        uint64_t v169 = *((void *)v168 + 2);
        unint64_t v170 = *((void *)v168 + 3);
        sub_1000059E8(v169, v170);
        sub_1001B7EAC((uint64_t)v168, type metadata accessor for SignedPeerDynamicInfo);
        uint64_t v171 = sub_100221BE0(0);
        unint64_t v173 = v172;
        sub_100005A40(v169, v170);
        uint64_t v302 = (void *)sub_1001BEBDC(v171, v173, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_1001B7EAC((uint64_t)v273, type metadata accessor for Peer);
        _os_log_impl((void *)&_mh_execute_header, v163, v164, "preapprovedJoin dynamicInfoSig: %{public}s", v165, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v150 = (uint64_t)v274;
        id v154 = v286;
      }
      else
      {
        sub_1001B7EAC(v148, type metadata accessor for Peer);
      }
      uint64_t v174 = (uint64_t)v272;
      sub_1001B7C04(v150, (uint64_t)v272, type metadata accessor for Peer);
      uint64_t v175 = sub_100222070();
      int v176 = sub_1002224E0();
      if (os_log_type_enabled(v175, (os_log_type_t)v176))
      {
        uint64_t v177 = v150;
        uint64_t v178 = (uint8_t *)swift_slowAlloc();
        uint64_t v287 = swift_slowAlloc();
        uint64_t v303 = v287;
        *(_DWORD *)uint64_t v178 = 136446210;
        uint64_t v179 = *(void *)(v174 + 16);
        int64_t v180 = *(void *)(v179 + 16);
        uint64_t v181 = v294;
        if (v180)
        {
          LODWORD(v281) = v176;
          uint64_t v282 = (uint64_t)v178;
          uint64_t v302 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_10018D13C(0, v180, 0);
          uint64_t v182 = v179 + ((v154[80] + 32) & ~(unint64_t)v154[80]);
          uint64_t v183 = *((void *)v154 + 9);
          uint64_t v184 = v302;
          do
          {
            sub_1001B7C04(v182, (uint64_t)v181, type metadata accessor for SignedVoucher);
            uint64_t v185 = sub_100221BE0(0);
            uint64_t v187 = v186;
            sub_1001B7EAC((uint64_t)v181, type metadata accessor for SignedVoucher);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10018D13C(0, v184[2] + 1, 1);
              uint64_t v184 = v302;
            }
            unint64_t v189 = v184[2];
            unint64_t v188 = v184[3];
            if (v189 >= v188 >> 1)
            {
              sub_10018D13C(v188 > 1, v189 + 1, 1);
              uint64_t v184 = v302;
            }
            _OWORD v184[2] = v189 + 1;
            unint64_t v190 = &v184[2 * v189];
            v190[4] = v185;
            v190[5] = v187;
            v182 += v183;
            --v180;
            uint64_t v181 = v294;
          }
          while (v180);
          swift_bridgeObjectRelease();
          uint64_t v150 = (uint64_t)v274;
          id v154 = v286;
          uint64_t v178 = (uint8_t *)v282;
          LOBYTE(v176) = v281;
        }
        else
        {
          uint64_t v150 = v177;
        }
        uint64_t v192 = sub_1002223D0();
        unint64_t v194 = v193;
        swift_bridgeObjectRelease();
        uint64_t v302 = (void *)sub_1001BEBDC(v192, v194, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_1001B7EAC((uint64_t)v272, type metadata accessor for Peer);
        _os_log_impl((void *)&_mh_execute_header, v175, (os_log_type_t)v176, "preapprovedJoin vouchers: %{public}s", v178, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v191 = v285;
      }
      else
      {
        sub_1001B7EAC(v174, type metadata accessor for Peer);

        uint64_t v191 = v285;
      }
      sub_1001B7C04(v150, v191, type metadata accessor for Peer);
      os_log_type_t v195 = sub_100222070();
      int v196 = sub_1002224E0();
      if (os_log_type_enabled(v195, (os_log_type_t)v196))
      {
        uint64_t v197 = v150;
        unint64_t v198 = (uint8_t *)swift_slowAlloc();
        uint64_t v287 = swift_slowAlloc();
        uint64_t v303 = v287;
        *(_DWORD *)unint64_t v198 = 136446210;
        uint64_t v199 = *(void *)(v191 + 16);
        int64_t v200 = *(void *)(v199 + 16);
        if (v200)
        {
          LODWORD(v282) = v196;
          uint64_t v286 = v198;
          uint64_t v302 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_10018D13C(0, v200, 0);
          uint64_t v201 = v199 + ((v154[80] + 32) & ~(unint64_t)v154[80]);
          uint64_t v202 = *((void *)v154 + 9);
          os_log_type_t v203 = v302;
          do
          {
            id v204 = v294;
            sub_1001B7C04(v201, (uint64_t)v294, type metadata accessor for SignedVoucher);
            uint64_t v205 = sub_100221BE0(0);
            uint64_t v207 = v206;
            sub_1001B7EAC((uint64_t)v204, type metadata accessor for SignedVoucher);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10018D13C(0, v203[2] + 1, 1);
              os_log_type_t v203 = v302;
            }
            unint64_t v209 = v203[2];
            unint64_t v208 = v203[3];
            if (v209 >= v208 >> 1)
            {
              sub_10018D13C(v208 > 1, v209 + 1, 1);
              os_log_type_t v203 = v302;
            }
            v203[2] = v209 + 1;
            unint64_t v210 = &v203[2 * v209];
            v210[4] = v205;
            v210[5] = v207;
            v201 += v202;
            --v200;
          }
          while (v200);
          swift_bridgeObjectRelease();
          uint64_t v150 = (uint64_t)v274;
          unint64_t v198 = v286;
          LOBYTE(v196) = v282;
        }
        else
        {
          uint64_t v150 = v197;
        }
        uint64_t v211 = sub_1002223D0();
        unint64_t v213 = v212;
        swift_bridgeObjectRelease();
        uint64_t v302 = (void *)sub_1001BEBDC(v211, v213, &v303);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_1001B7EAC(v285, type metadata accessor for Peer);
        _os_log_impl((void *)&_mh_execute_header, v195, (os_log_type_t)v196, "preapprovedJoin voucher signatures: %{public}s", v198, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001B7EAC(v191, type metadata accessor for Peer);
      }
      swift_bridgeObjectRetain();
      uint64_t v214 = sub_100222070();
      os_log_type_t v215 = sub_1002224E0();
      if (os_log_type_enabled(v214, v215))
      {
        uint64_t v216 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v216 = 134217984;
        uint64_t v303 = *((void *)v295 + 2);
        sub_100222690();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v214, v215, "preapprovedJoin: uploading %ld tlk shares", v216, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      uint64_t v217 = v269;
      sub_1001A56AC((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
      uint64_t v218 = sub_100221F40();
      if (v217)
      {
        swift_errorRetain();
        swift_errorRetain();
        unint64_t v220 = sub_100222070();
        os_log_type_t v221 = sub_1002224E0();
        if (os_log_type_enabled(v220, v221))
        {
          uint64_t v222 = (uint8_t *)swift_slowAlloc();
          uint64_t v223 = swift_slowAlloc();
          uint64_t v302 = v217;
          uint64_t v303 = v223;
          *(_DWORD *)uint64_t v222 = 136446210;
          swift_errorRetain();
          sub_1000046DC(&qword_100299D70);
          uint64_t v224 = sub_1002222C0();
          uint64_t v302 = (void *)sub_1001BEBDC(v224, v225, &v303);
          sub_100222690();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v220, v221, "preapprovedJoin unable to encode peer: %{public}s", v222, 0xCu);
          swift_arrayDestroy();
          uint64_t v150 = (uint64_t)v274;
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        unint64_t v294 = 0;
      }
      else
      {
        uint64_t v226 = v218;
        unint64_t v227 = v219;
        unint64_t v294 = 0;
        uint64_t v228 = sub_100221BE0(0);
        unint64_t v230 = v229;
        sub_100005A40(v226, v227);
        swift_bridgeObjectRetain();
        unint64_t v231 = sub_100222070();
        os_log_type_t v232 = sub_1002224E0();
        if (os_log_type_enabled(v231, v232))
        {
          uint64_t v233 = (uint8_t *)swift_slowAlloc();
          uint64_t v303 = swift_slowAlloc();
          *(_DWORD *)uint64_t v233 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v302 = (void *)sub_1001BEBDC(v228, v230, &v303);
          sub_100222690();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v231, v232, "preapprovedJoin peer: %{public}s", v233, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v150 = (uint64_t)v274;
      }
      uint64_t v234 = (uint64_t)v280;
      id v235 = [*(id *)&v301[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] changeToken];
      if (v235)
      {
        uint64_t v237 = v235;
        uint64_t v238 = sub_100222270();
        uint64_t v240 = v239;
      }
      else
      {
        uint64_t v238 = 0;
        uint64_t v240 = 0xE000000000000000;
      }
      __chkstk_darwin(v235, v236);
      *(&v266 - 8) = v238;
      *(&v266 - 7) = v240;
      uint64_t v241 = v288;
      *(&v266 - 6) = v150;
      *(&v266 - 5) = v241;
      uint64_t v242 = v290;
      *(&v266 - 4) = (uint64_t)v295;
      *(&v266 - 3) = v242;
      uint64_t v243 = v150;
      uint64_t v244 = v301;
      int v265 = v301;
      sub_1001A56AC(&qword_10029A6D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
      sub_100221F70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v245 = *(void *)&v244[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      uint64_t v295 = *(objc_class **)&v244[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      unint64_t v294 = sub_1000059A4(&v244[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], (uint64_t)v295);
      uint64_t v246 = v284;
      sub_1001B7C04(v243, v284, type metadata accessor for Peer);
      unint64_t v247 = (*(unsigned __int8 *)(v283 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v283 + 80);
      unint64_t v248 = (v270 + v247 + 7) & 0xFFFFFFFFFFFFFFF8;
      int64_t v249 = v244;
      unint64_t v250 = (v248 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v251 = (v250 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v252 = (v251 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v253 = swift_allocObject();
      *(void *)(v253 + 16) = v249;
      sub_1001B7B9C(v246, v253 + v247, type metadata accessor for Peer);
      uint64_t v254 = v299;
      uint64_t v255 = v300;
      *(void *)(v253 + v248) = v300;
      unint64_t v256 = v292;
      *(void *)(v253 + v250) = v292;
      unint64_t v257 = (void *)(v253 + v251);
      uint64_t v258 = v298;
      *unint64_t v257 = v297;
      v257[1] = v258;
      unint64_t v259 = (char **)(v253 + v252);
      *unint64_t v259 = v289;
      v259[1] = v254;
      uint64_t v260 = *(void *)(v245 + 16);
      uint64_t v261 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, objc_class *, uint64_t))(v260 + 24);
      swift_bridgeObjectRetain();
      id v262 = v249;
      id v263 = v255;
      id v264 = v256;
      swift_retain();
      v261(v234, sub_1001B27F0, v253, v295, v260);

      swift_release();
      sub_1001B7EAC(v234, type metadata accessor for JoinWithVoucherRequest);
      sub_1001B7EAC((uint64_t)v274, type metadata accessor for Peer);
      uint64_t v111 = type metadata accessor for Bottle;
      uint64_t v112 = v288;
    }
  }
  else
  {
    id v101 = v296;

    unint64_t v102 = v297;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_100222090();
    sub_100003CC8(v103, (uint64_t)qword_10029E7D0);
    id v104 = sub_100222070();
    os_log_type_t v105 = sub_1002224E0();
    BOOL v106 = os_log_type_enabled(v104, v105);
    uint64_t v107 = (uint64_t)v274;
    if (v106)
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v108 = 0;
      _os_log_impl((void *)&_mh_execute_header, v104, v105, "Unable to create new peer stable info for joining", v108, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v109 = swift_allocError();
    *(_OWORD *)uint64_t v110 = xmmword_100229940;
    *(unsigned char *)(v110 + 16) = 13;
    v102(0, 0, _swiftEmptyArrayStorage, 0, v109);

    swift_errorRelease();
    uint64_t v111 = type metadata accessor for Peer;
    uint64_t v112 = v107;
  }
  return sub_1001B7EAC(v112, v111);
}

uint64_t sub_10016F4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v37 = a8;
  uint64_t v35 = a5;
  uint64_t v39 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  __chkstk_darwin(v39, v14);
  uint64_t v38 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Bottle(0);
  __chkstk_darwin(v16 - 8, v17);
  os_log_type_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Peer(0);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  swift_bridgeObjectRetain();
  uint64_t v36 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v25 = swift_retain();
    *(void *)(a1 + v24) = sub_10009D384(v25);
    swift_release();
  }
  uint64_t v26 = *(void *)(a1 + v24);
  swift_beginAccess();
  *(void *)(v26 + 16) = a2;
  *(void *)(v26 + 24) = a3;
  swift_bridgeObjectRelease();
  sub_1001B7C04(a4, (uint64_t)v23, type metadata accessor for Peer);
  JoinWithVoucherRequest.peer.setter((uint64_t)v23);
  sub_1001B7C04(v35, (uint64_t)v19, type metadata accessor for Bottle);
  JoinWithVoucherRequest.bottle.setter((uint64_t)v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)(a1 + v24) = sub_10009D384(v27);
    swift_release();
  }
  uint64_t v28 = (void *)(*(void *)(a1 + v24)
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  *uint64_t v28 = a6;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v29 = swift_retain();
    *(void *)(a1 + v24) = sub_10009D384(v29);
    swift_release();
  }
  uint64_t v30 = (void *)(*(void *)(a1 + v24)
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  *uint64_t v30 = v36;
  uint64_t v31 = swift_bridgeObjectRelease();
  __chkstk_darwin(v31, v32);
  *(&v35 - 2) = v37;
  sub_1001A56AC(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
  uint64_t v33 = (uint64_t)v38;
  sub_100221F70();
  return JoinWithVoucherRequest.trustedDevicesVersion.setter(v33);
}

uint64_t sub_10016F870(uint64_t a1, char *a2, uint64_t a3, void *a4, void *a5, void (*a6)(void, void, void *, void, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v60 = a8;
  uint64_t v61 = a2;
  uint64_t v64 = a7;
  uint64_t v65 = a6;
  uint64_t v62 = a4;
  os_log_type_t v63 = a5;
  uint64_t v58 = a3;
  uint64_t v10 = type metadata accessor for Peer(0);
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v59 + 64);
  __chkstk_darwin(v10 - 8, v12);
  id v13 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for JoinWithVoucherResponse(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v18 = __chkstk_darwin(v14 - 8, v17);
  os_log_type_t v19 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = sub_1000046DC((uint64_t *)&unk_10029EE20);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (uint64_t *)((char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v26, (uint64_t *)&unk_10029EE20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v54 = type metadata accessor for JoinWithVoucherResponse;
    uint64_t v55 = a9;
    uint64_t v56 = v22;
    sub_1001B7B9C((uint64_t)v26, (uint64_t)v22, type metadata accessor for JoinWithVoucherResponse);
    uint64_t v34 = v61;
    id v57 = *(id *)&v61[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    sub_1001B7C04(v58, (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Peer);
    sub_1001B7C04((uint64_t)v22, (uint64_t)v19, type metadata accessor for JoinWithVoucherResponse);
    unint64_t v35 = (*(unsigned __int8 *)(v59 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    unint64_t v36 = (v11 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (*(unsigned __int8 *)(v15 + 80) + v37 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    unint64_t v39 = (v16 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v34;
    sub_1001B7B9C((uint64_t)v13, v40 + v35, type metadata accessor for Peer);
    uint64_t v42 = v62;
    uint64_t v41 = v63;
    *(void *)(v40 + v36) = v62;
    *(void *)(v40 + v37) = v41;
    sub_1001B7B9C((uint64_t)v19, v40 + v38, v54);
    uint64_t v43 = (void *)(v40 + v39);
    uint64_t v44 = v64;
    *uint64_t v43 = v65;
    v43[1] = v44;
    uint64_t v45 = (void *)(v40 + ((v39 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v46 = v55;
    void *v45 = v60;
    v45[1] = v46;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_1001B2DA4;
    *(void *)(v47 + 24) = v40;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t v67 = v47;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_1002847C8;
    uint64_t v48 = _Block_copy(aBlock);
    uint64_t v27 = v67;
    id v49 = v34;
    id v50 = v42;
    id v51 = v41;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v57 performBlockAndWait:v48];
    _Block_release(v48);
    sub_1001B7EAC((uint64_t)v56, type metadata accessor for JoinWithVoucherResponse);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v27 = *v26;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_100222090();
  sub_100003CC8(v28, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t isEscapingClosureAtFileLocation = sub_100222070();
  os_log_type_t v30 = sub_100222500();
  if (!os_log_type_enabled((os_log_t)isEscapingClosureAtFileLocation, v30))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v31 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v31 = 136446210;
  uint64_t v68 = v27;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v32 = sub_1002222C0();
  uint64_t v68 = sub_1001BEBDC(v32, v33, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, (os_log_t)isEscapingClosureAtFileLocation, v30, "preapprovedJoin failed: %{public}s", v31, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  uint64_t v53 = v65;
  swift_errorRetain();
  v53(0, 0, _swiftEmptyArrayStorage, 0, v27);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_10016FE88(uint64_t a1, uint64_t a2, void *a3, NSObject *a4, uint64_t *a5, void (*a6)(uint64_t, id, void *, NSObject *, void), uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v77 = a8;
  uint64_t v86 = a7;
  Class v87 = a6;
  unint64_t v82 = a5;
  id v84 = a3;
  id v85 = a4;
  uint64_t v91 = sub_100221D50();
  uint64_t v76 = *(void *)(v91 - 8);
  uint64_t v12 = __chkstk_darwin(v91, v11);
  uint64_t v90 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v89 = (char *)&v76 - v15;
  uint64_t v16 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v80 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Changes(0);
  uint64_t v78 = *(void *)(v19 - 8);
  uint64_t v79 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v81 = (uint64_t *)((char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_1000046DC(&qword_100299F18);
  uint64_t v24 = __chkstk_darwin(v22 - 8, v23);
  uint64_t v26 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v76 - v28;
  uint64_t v30 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v33 = __chkstk_darwin(v30, v32);
  unint64_t v35 = (char *)&v76 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v36);
  unint64_t v38 = (char *)&v76 - v37;
  uint64_t v88 = a1;
  uint64_t v83 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  unint64_t v39 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  uint64_t v40 = a2 + *(int *)(type metadata accessor for Peer(0) + 32);
  sub_10000D830(v40, (uint64_t)v29, &qword_100299F18);
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v41(v29, 1, v30) == 1)
  {
    *(_OWORD *)unint64_t v38 = xmmword_100229520;
    *((_OWORD *)v38 + 1) = xmmword_100229520;
    id v42 = v39;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v29, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v29, (uint64_t)v38, type metadata accessor for SignedPeerStableInfo);
    id v43 = v39;
  }
  uint64_t v44 = *(void *)v38;
  unint64_t v45 = *((void *)v38 + 1);
  sub_1000059E8(*(void *)v38, v45);
  sub_1001B7EAC((uint64_t)v38, type metadata accessor for SignedPeerStableInfo);
  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v44, v45);
  [v39 setEgoPeerStableInfo:isa];

  uint64_t v47 = *(void **)(v88 + v83);
  sub_10000D830(v40, (uint64_t)v26, &qword_100299F18);
  if (v41(v26, 1, v30) == 1)
  {
    *(_OWORD *)unint64_t v35 = xmmword_100229520;
    *((_OWORD *)v35 + 1) = xmmword_100229520;
    id v48 = v47;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v26, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v26, (uint64_t)v35, type metadata accessor for SignedPeerStableInfo);
    id v49 = v47;
  }
  uint64_t v50 = *((void *)v35 + 2);
  unint64_t v51 = *((void *)v35 + 3);
  sub_1000059E8(v50, v51);
  sub_1001B7EAC((uint64_t)v35, type metadata accessor for SignedPeerStableInfo);
  Class v52 = sub_100221BD0().super.isa;
  sub_100005A40(v50, v51);
  [v47 setEgoPeerStableInfoSig:v52];

  id v53 = [v84 modelID];
  LODWORD(v51) = sub_100222270();
  LODWORD(v50) = v54;

  uint64_t v55 = sub_10015A2F8(v51, v50, v85);
  swift_bridgeObjectRelease();
  uint64_t v56 = type metadata accessor for JoinWithVoucherResponse(0);
  id v57 = v82;
  uint64_t v58 = v80;
  sub_10000D830((uint64_t)v82 + *(int *)(v56 + 24), v80, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v58, 1, v79) == 1)
  {
    uint64_t v59 = v81;
    *uint64_t v81 = 0;
    v59[1] = 0xE000000000000000;
    v59[2] = _swiftEmptyArrayStorage;
    *(_OWORD *)(v59 + 3) = xmmword_100229520;
    *(_OWORD *)(v59 + 5) = xmmword_100229520;
    *((unsigned char *)v59 + 56) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v58, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    uint64_t v59 = v81;
    sub_1001B7B9C(v58, (uint64_t)v81, type metadata accessor for Changes);
  }
  sub_10017AB04((uint64_t)v59, 0);
  sub_1001B7EAC((uint64_t)v59, type metadata accessor for Changes);
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  id v60 = a9;
  uint64_t v61 = sub_100222090();
  sub_100003CC8(v61, (uint64_t)qword_10029E7D0);
  uint64_t v62 = sub_100222070();
  os_log_type_t v63 = sub_1002224E0();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v64 = 0;
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "preapprovedJoin succeeded", v64, 2u);
    swift_slowDealloc();
  }

  uint64_t v65 = *v57;
  unint64_t v92 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v66 = *(void *)(v65 + 16);
  if (v66)
  {
    id v84 = a9;
    id v85 = v55;
    uint64_t v88 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    uint64_t v67 = *(void (**)(char *, unint64_t, uint64_t))(v76 + 16);
    unint64_t v68 = v65 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    uint64_t v69 = *(void *)(v76 + 72);
    uint64_t v70 = (void (**)(char *, uint64_t))(v76 + 8);
    uint64_t v83 = v65;
    swift_bridgeObjectRetain();
    uint64_t v71 = v89;
    do
    {
      uint64_t v72 = v91;
      v67(v71, v68, v91);
      v67(v90, (unint64_t)v71, v72);
      uint64_t v73 = sub_100222620();
      (*v70)(v71, v72);
      if (v73)
      {
        sub_1002223A0();
        if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
      v68 += v69;
      --v66;
    }
    while (v66);
    os_log_type_t v74 = (void *)v92;
    id v60 = v84;
    uint64_t v55 = v85;
  }
  else
  {
    swift_bridgeObjectRetain();
    os_log_type_t v74 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  id v75 = v55;
  v87(v77, v60, v74, v55, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1001708D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void), uint64_t a6)
{
  return sub_1001855E8(a1, a2, a3, a4, a5, a6, "update complete: %{public}s", 0xD0000000000000A1, 0x80000001002445B0);
}

uint64_t sub_10017091C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  return sub_1001726D8(a1, a2, a3, a4, a5, "setPreapprovedKeys complete: %{public}s", 0xD00000000000001BLL, 0x8000000100244590);
}

uint64_t sub_100170964(uint64_t a1, char *a2, void (*a3)(void, uint64_t), uint64_t a4)
{
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain_n();
  id v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1002223D0();
    uint64_t v29 = a2;
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v12, v14, v30);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    a2 = v29;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "setPreapprovedKeys: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v15 = [*(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_100222270();
    uint64_t v19 = v18;

    strcpy((char *)v30, "signing-key ");
    BYTE5(v30[1]) = 0;
    HIWORD(v30[1]) = -5120;
    v31._countAndFlagsBits = v17;
    v31._object = v19;
    sub_100222310(v31);
    uint64_t v20 = v30[0];
    uint64_t v21 = v30[1];
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v22 = a2;
    swift_bridgeObjectRetain();
    sub_10019F374(v20, v21, (uint64_t)a3, a4, (uint64_t)v22, v17, (uint64_t)v19, a1, (void (*)(void))sub_100170D04);
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = sub_100222070();
    os_log_type_t v25 = sub_1002224E0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "setPreapprovedKeys: No identity.", v26, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v27 = swift_allocError();
    *(_OWORD *)uint64_t v28 = xmmword_1002297D0;
    *(unsigned char *)(v28 + 16) = 13;
    a3(0, v27);
    return swift_errorRelease();
  }
}

uint64_t sub_100170D04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    id v15 = *(void **)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a5;
    v16[3] = a6;
    v16[4] = a7;
    v16[5] = a8;
    void v16[6] = a1;
    v16[7] = a3;
    v16[8] = a4;
    a3 = swift_allocObject();
    *(void *)(a3 + 16) = sub_1001B207C;
    *(void *)(a3 + 24) = v16;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = a3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100284570;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = a1;
    uint64_t v19 = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    [v15 performBlockAndWait:v17];

    _Block_release(v17);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  uint64_t v22 = a2;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100222090();
  sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v24 = sub_100222070();
  os_log_type_t v25 = sub_100222500();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446210;
    uint64_t v32 = v22;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v27 = sub_1002222C0();
    uint64_t v32 = sub_1001BEBDC(v27, v28, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "setPreapprovedKeys: no signing key pair: %{public}s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v29 = v22;
  if (!v22)
  {
    sub_100042D4C();
    uint64_t v29 = swift_allocError();
    *(void *)uint64_t v30 = 0;
    *(void *)(v30 + 8) = 0;
    *(unsigned char *)(v30 + 16) = 13;
  }
  swift_errorRetain();
  ((void (*)(void, uint64_t))a3)(0, v29);
  return swift_errorRelease();
}

void sub_1001710AC(NSObject *a1, NSObject *a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t), uint64_t a7)
{
  uint64_t v91 = a7;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v13);
  id v15 = (char *)v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v16 = *(id *)((char *)&a1->isa + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  unint64_t v92 = a2;
  id v90 = a3;
  NSString v17 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  uint64_t v19 = a1;
  uint64_t v20 = (void *)sub_1001EAB00();
  *(void *)&long long v94 = 0;
  id v21 = [v16 calculateDynamicInfoForPeerWithID:v17 addingPeerIDs:0 removingPeerIDs:0 preapprovedKeys:isa signingKeyPair:a5 currentMachineIDs:v20 error:&v94];

  if (v21)
  {
    uint64_t v22 = qword_100298EB8;
    id v23 = (id)v94;
    id v24 = v21;
    if (v22 != -1) {
      swift_once();
    }
    id v85 = v21;
    uint64_t v25 = sub_100222090();
    uint64_t v26 = sub_100003CC8(v25, (uint64_t)qword_10029E7D0);
    uint64_t v27 = v24;
    uint64_t v88 = v26;
    unint64_t v28 = sub_100222070();
    os_log_type_t v29 = sub_1002224E0();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v89 = v15;
    v84[1] = updated;
    p_Class isa = &v27->isa;
    if (v30)
    {
      Swift::String v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)Swift::String v31 = 138543362;
      *(void *)&long long v94 = v27;
      uint64_t v33 = v27;
      sub_100222690();
      *uint64_t v32 = v85;

      _os_log_impl((void *)&_mh_execute_header, v28, v29, "setPreapprovedKeys: produced a dynamicInfo: %{public}@", v31, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v28 = v27;
    }
    id v42 = v92;

    id v43 = *(id *)((char *)&v19->isa + v87);
    unint64_t v44 = (unint64_t)v90;
    NSString v45 = sub_100222260();
    *(void *)&long long v94 = 0;
    id v46 = [v43 peerWithID:v45 error:&v94];

    if ((void)v94)
    {
      id v47 = (id)v94;

      swift_willThrow();
      id v48 = v47;
      id v49 = sub_100222070();
      os_log_type_t v50 = sub_100222500();
      if (os_log_type_enabled(v49, v50))
      {
        unint64_t v51 = (uint8_t *)swift_slowAlloc();
        Class v52 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v51 = 138543362;
        id v48 = v48;
        uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v94 = v53;
        id v42 = v92;
        sub_100222690();
        *Class v52 = v53;
        unint64_t v44 = (unint64_t)v90;

        _os_log_impl((void *)&_mh_execute_header, v49, v50, "setPreapprovedKeys: error getting ego peer from model: %{public}@", v51, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v49 = v48;
      }

      id v46 = 0;
      goto LABEL_22;
    }
    if (!v46) {
      goto LABEL_22;
    }
    id v54 = [v46 dynamicInfo];
    if (!v54
      || (uint64_t v55 = v54,
          sub_1000047D8(0, &qword_10029EE08),
          uint64_t v56 = p_isa,
          char v57 = sub_100222650(),
          v56,
          v56,
          v55,
          (v57 & 1) == 0))
    {
LABEL_22:
      id v90 = v46;
      uint64_t v62 = p_isa;
      swift_bridgeObjectRetain_n();
      os_log_type_t v63 = v62;
      uint64_t v64 = sub_100222070();
      os_log_type_t v65 = sub_1002224E0();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = swift_slowAlloc();
        p_Class isa = (void *)swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        *(void *)&long long v94 = v87;
        *(_DWORD *)uint64_t v66 = 136446466;
        uint64_t v88 = v19;
        swift_bridgeObjectRetain();
        uint64_t v93 = sub_1001BEBDC((uint64_t)v42, v44, (uint64_t *)&v94);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v66 + 12) = 2114;
        v84[0] = v64;
        uint64_t v93 = (uint64_t)v63;
        unint64_t v67 = v44;
        unint64_t v68 = v63;
        uint64_t v69 = v63;
        id v42 = v92;
        uint64_t v19 = v88;
        sub_100222690();
        *p_Class isa = v85;

        os_log_type_t v63 = v68;
        unint64_t v44 = v67;
        os_log_t v70 = v84[0];
        _os_log_impl((void *)&_mh_execute_header, v84[0], v65, "setPreapprovedKeys: attempting updateTrust for %{public}s with: %{public}@", (uint8_t *)v66, 0x16u);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v71 = swift_bridgeObjectRelease_n();
      }
      __chkstk_darwin(v71, v72);
      v84[-4] = v19;
      v84[-3] = v42;
      unint64_t v82 = v44;
      id v83 = v63;
      sub_1001A56AC(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
      sub_100221F70();

      long long v94 = xmmword_1002312F0;
      long long v95 = 0u;
      long long v96 = 0u;
      long long v97 = 0u;
      long long v98 = 0u;
      long long v99 = 0u;
      uint64_t v100 = 0;
      uint64_t v73 = swift_allocObject();
      uint64_t v74 = v91;
      *(void *)(v73 + 16) = a6;
      *(void *)(v73 + 24) = v74;
      uint64_t v75 = *(uint64_t *)((char *)&v19[3].isa + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish);
      uint64_t v76 = *(uint64_t *)((char *)&v19[4].isa + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish);
      sub_1000059A4((Class *)((char *)&v19->isa + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish), v75);
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = v19;
      *(void *)(v77 + 24) = sub_1001B20C4;
      *(void *)(v77 + 32) = v73;
      sub_1000D8B9C((uint64_t)&v94, v77 + 40, &qword_10029EE00);
      *(unsigned char *)(v77 + 144) = 0;
      uint64_t v78 = *(void *)(v76 + 16);
      uint64_t v79 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v78 + 32);
      swift_retain();
      uint64_t v80 = v19;
      swift_retain();
      uint64_t v81 = (uint64_t)v89;
      v79(v89, sub_1001B20D0, v77, v75, v78);
      swift_release();

      swift_release();
      sub_1001B7EAC(v81, type metadata accessor for UpdateTrustRequest);

      return;
    }

    uint64_t v58 = sub_100222070();
    os_log_type_t v59 = sub_1002224E0();
    if (os_log_type_enabled(v58, v59))
    {
      id v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "setPreapprovedKeys: no change; nothing to do.", v60, 2u);
      swift_slowDealloc();
    }

    long long v94 = xmmword_1002312F0;
    long long v95 = 0u;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    uint64_t v100 = 0;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = a6;
    *(void *)(v61 + 24) = v91;
    swift_retain();
    sub_100176AB0(&v94, 0, (uint64_t)sub_1001B20D4, v61);

    swift_release();
  }
  else
  {
    id v34 = (id)v94;
    uint64_t v35 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_100222090();
    sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v37 = sub_100222070();
    os_log_type_t v38 = sub_100222500();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v94 = swift_slowAlloc();
      *(_DWORD *)unint64_t v39 = 136446210;
      uint64_t v93 = v35;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v40 = sub_1002222C0();
      uint64_t v93 = sub_1001BEBDC(v40, v41, (uint64_t *)&v94);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "setPreapprovedKeys: couldn't calculate dynamic info: %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a6(0, v35);
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100171CAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v40 = a3;
  uint64_t v44 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v9);
  id v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  id v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = a2;
  id v16 = *(void **)(a2 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  id v17 = a5;
  id v18 = [v16 changeToken];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_100222270();
    unint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  *a1 = v20;
  a1[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = v40;
  a1[3] = a4;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v23 = [v17 data];
  uint64_t v24 = sub_100221BF0();
  uint64_t v26 = v25;

  *id v15 = v24;
  v15[1] = v26;
  id v27 = [v17 sig];
  uint64_t v28 = sub_100221BF0();
  uint64_t v30 = v29;

  v15[2] = v28;
  v15[3] = v30;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  uint64_t v32 = (uint64_t)a1 + *(int *)(updated + 40);
  sub_10004015C(v32, &qword_10029ECA0);
  sub_1001B7B9C((uint64_t)v15, v32, type metadata accessor for SignedPeerDynamicInfo);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  __chkstk_darwin(v33, v34);
  *(&v39 - 2) = v41;
  sub_1001A56AC(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
  uint64_t v35 = (uint64_t)v42;
  uint64_t v36 = v44;
  sub_100221F70();
  uint64_t v37 = (uint64_t)a1 + *(int *)(updated + 44);
  sub_10004015C(v37, &qword_10029ED20);
  sub_1001B7B9C(v35, v37, type metadata accessor for IdmsTrustedDevicesVersion);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v36);
}

uint64_t sub_100172044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_100222090();
    sub_100003CC8(v7, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = sub_100222070();
    os_log_type_t v9 = sub_100222500();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v11 = sub_1002222C0();
      sub_1001BEBDC(v11, v12, &v20);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "setPreapprovedKeys: failed: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v17 = a1;
    uint64_t v18 = a3;
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_1002224E0();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "setPreapprovedKeys: updateTrust succeeded", v16, 2u);
      swift_slowDealloc();
    }

    uint64_t v17 = a1;
    uint64_t v18 = 0;
  }
  return a4(v17, v18);
}

uint64_t sub_1001722F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  os_log_type_t v9 = v4;
  uint64_t v10 = sub_1001984DC(v9, 0xD000000000000025, 0x8000000100244D20);

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a3;
  v11[4] = a4;
  uint64_t v12 = qword_100298EB8;
  swift_retain();
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100222090();
  sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_100222070();
  os_log_type_t v15 = sub_1002224E0();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v16 = 136446210;
    sub_1000047D8(0, &qword_10029EFC0);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1002223D0();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v17, v19, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Uploading some new TLKs: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = *(void **)&v9[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  unint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v9;
  v21[3] = a1;
  v21[4] = a2;
  v21[5] = sub_1001B4B2C;
  v21[6] = v11;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1001B4BCC;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = (uint64_t)sub_1001B8924;
  uint64_t aBlock[5] = v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100112F58;
  aBlock[3] = (uint64_t)&unk_100285C90;
  id v23 = _Block_copy(aBlock);
  uint64_t v24 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  [v20 performBlockAndWait:v23];
  swift_release();
  swift_release();
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v23) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001726D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5, const char *a6, uint64_t a7, unint64_t a8)
{
  if (a2) {
    os_log_type_t v12 = sub_100222500();
  }
  else {
    os_log_type_t v12 = sub_1002224E0();
  }
  os_log_type_t v13 = v12;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100222090();
  sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v15 = sub_100222070();
  if (os_log_type_enabled(v15, v13))
  {
    unint64_t v19 = a4;
    id v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)id v16 = 136446210;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v23._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v23);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v17 = 0x203A726F727265;
    }
    else
    {
      uint64_t v17 = 0x73736563637573;
    }
    sub_1001BEBDC(v17, 0xE700000000000000, &v22);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v13, a6, v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a4 = v19;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(a7, a8);
  return a4(a1, a2);
}

uint64_t sub_100172950(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v17 = __chkstk_darwin(v15, v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_tlkSharesBatch);
  BOOL v22 = __OFADD__(a2, v21);
  uint64_t v23 = a2 + v21;
  if (v22)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v40 = v17;
  uint64_t v41 = a7;
  uint64_t v43 = v20;
  uint64_t v44 = v18;
  if (*(void *)(a4 + 16) >= v23) {
    uint64_t v7 = v23;
  }
  else {
    uint64_t v7 = *(void *)(a4 + 16);
  }
  uint64_t v42 = a3;
  id v24 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a3
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "changeToken"));
  if (v24)
  {
    uint64_t v25 = v24;
    a7 = sub_100222270();
    unint64_t v27 = v26;
  }
  else
  {
    a7 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  *a1 = a7;
  a1[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a5;
  a1[3] = a6;
  if (v7 < a2) {
    goto LABEL_17;
  }
  if (a2 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void *)(type metadata accessor for TLKShare(0) - 8);
    uint64_t v30 = sub_10018CE9C(a4, a4 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80)), a2, (2 * v7) | 1);
    uint64_t v31 = v42;
    goto LABEL_15;
  }
  sub_100222A40();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v28 = (void *)swift_dynamicCastClass();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = _swiftEmptyArrayStorage;
  }
  uint64_t v29 = v28[2];
  swift_release();
  a7 = v41;
  if (v29 != v7 - a2) {
    goto LABEL_19;
  }
  uint64_t v30 = (void *)swift_dynamicCastClass();
  uint64_t v31 = v42;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[4] = (uint64_t)v30;
  swift_bridgeObjectRetain();
  uint64_t v32 = swift_bridgeObjectRelease();
  a1[5] = a7;
  __chkstk_darwin(v32, v33);
  *(&v39 - 2) = v31;
  sub_1001A56AC(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
  uint64_t v34 = (uint64_t)v43;
  uint64_t v35 = v40;
  sub_100221F70();
  uint64_t v36 = (uint64_t)a1 + *(int *)(type metadata accessor for UpdateTrustRequest(0) + 44);
  sub_10004015C(v36, &qword_10029ED20);
  sub_1001B7B9C(v34, v36, type metadata accessor for IdmsTrustedDevicesVersion);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v36, 0, 1, v35);
}

uint64_t sub_100172CDC(uint64_t a1, char *a2, void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v53 = a6;
  uint64_t v54 = a8;
  uint64_t v55 = a5;
  uint64_t v56 = a3;
  char v57 = a4;
  uint64_t updated = type metadata accessor for UpdateTrustResponse(0);
  uint64_t v14 = *(void *)(updated - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v17 = __chkstk_darwin(updated - 8, v16);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = sub_1000046DC((uint64_t *)&unk_10029ED10);
  __chkstk_darwin(v21, v22);
  id v24 = (uint64_t *)((char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v24, (uint64_t *)&unk_10029ED10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = *v24;
    swift_errorRetain();
    v56(v25, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v49 = a10 + 16;
    uint64_t v50 = a9;
    id v47 = type metadata accessor for UpdateTrustResponse;
    sub_1001B7B9C((uint64_t)v24, (uint64_t)v20, type metadata accessor for UpdateTrustResponse);
    unint64_t v27 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    id v48 = a2;
    id v52 = v27;
    sub_1001B7C04((uint64_t)v20, (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for UpdateTrustResponse);
    unint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v29 = (v15 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v46 = a7;
    unint64_t v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v51 = v20;
    unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = v54;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = a2;
    sub_1001B7B9C(v45, v35 + v28, v47);
    uint64_t v36 = (void (**)(uint64_t, uint64_t))(v35 + v29);
    uint64_t v37 = v57;
    *uint64_t v36 = v56;
    v36[1] = v37;
    *(void *)(v35 + v30) = v55;
    uint64_t v38 = (void *)(v35 + v31);
    uint64_t v39 = v46;
    void *v38 = v53;
    v38[1] = v39;
    *(void *)(v35 + v32) = v34;
    uint64_t v40 = v49;
    *(void *)(v35 + v33) = v50;
    *(void *)(v35 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v40;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_1001B4970;
    *(void *)(v41 + 24) = v35;
    aBlock[4] = sub_1001B8924;
    uint64_t aBlock[5] = v41;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100112F58;
    aBlock[3] = &unk_100285BC8;
    uint64_t v42 = _Block_copy(aBlock);
    id v43 = v48;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v52 performBlockAndWait:v42];
    _Block_release(v42);
    sub_1001B7EAC((uint64_t)v51, type metadata accessor for UpdateTrustResponse);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1001730D0(void *a1, uint64_t *a2, void (*a3)(uint64_t, void), uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, void *a9, uint64_t a10)
{
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v51 = a5;
  id v52 = a6;
  uint64_t v55 = a1;
  uint64_t v13 = sub_100221D50();
  uint64_t v56 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v58 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)v46 - v18;
  uint64_t v20 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Changes(0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  unint64_t v28 = (char *)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for UpdateTrustResponse(0);
  sub_10000D830((uint64_t)a2 + *(int *)(updated + 24), (uint64_t)v23, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    *(void *)unint64_t v28 = 0;
    *((void *)v28 + 1) = 0xE000000000000000;
    *((void *)v28 + 2) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v28 + 24) = xmmword_100229520;
    *(_OWORD *)(v28 + 40) = xmmword_100229520;
    v28[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v23, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v23, (uint64_t)v28, type metadata accessor for Changes);
  }
  unint64_t v30 = v55;
  sub_10017AB04((uint64_t)v28, 0);
  uint64_t v31 = a10;
  uint64_t v50 = a9;
  sub_1001B7EAC((uint64_t)v28, type metadata accessor for Changes);
  uint64_t v32 = *a2;
  v59[0] = _swiftEmptyArrayStorage;
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v47 = a10;
    id v48 = a3;
    uint64_t v49 = a4;
    uint64_t v34 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    uint64_t v35 = v56 + 16;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    uint64_t v37 = v32 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    uint64_t v56 = *(void *)(v56 + 72);
    uint64_t v57 = v34;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 - 8);
    v46[1] = v32;
    swift_bridgeObjectRetain();
    do
    {
      v36(v19, v37, v13);
      v36(v58, (uint64_t)v19, v13);
      uint64_t v39 = sub_100222620();
      (*v38)(v19, v13);
      if (v39)
      {
        sub_1002223A0();
        if (*(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
      v37 += v56;
      --v33;
    }
    while (v33);
    uint64_t v40 = (void *)v59[0];
    a3 = v48;
    a4 = v49;
    unint64_t v30 = v55;
    uint64_t v31 = v47;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v59[0] = v51;
  swift_bridgeObjectRetain();
  sub_10011B3FC((unint64_t)v40);
  uint64_t v41 = v59[0];
  swift_beginAccess();
  sub_100065B18(v31, (uint64_t)v59);
  uint64_t v42 = v60;
  uint64_t v43 = v61;
  uint64_t v44 = sub_1000059A4(v59, v60);
  sub_100196F44(v52, v53, v54, v50, (uint64_t)v44, v41, a3, a4, v30, v42, v43);
  swift_bridgeObjectRelease();
  return sub_100004788((uint64_t)v59);
}

uint64_t sub_100173740(uint64_t a1, uint64_t a2, void (*a3)(void, uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v11 = [*(id *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v11)
  {
    os_log_type_t v12 = v11;
    uint64_t v13 = sub_100222270();
    uint64_t v15 = v14;

    id v16 = [*(id *)&v5[v10] egoPeerPermanentInfo];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v58 = v13;
      uint64_t v18 = sub_100221BF0();
      unint64_t v20 = v19;

      id v21 = [*(id *)&v5[v10] egoPeerPermanentInfoSig];
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v51 = a2;
        uint64_t v56 = a1;
        uint64_t v53 = a3;
        uint64_t v54 = a4;
        uint64_t v23 = sub_100221BF0();
        unint64_t v25 = v24;

        id v26 = objc_allocWithZone((Class)TPECPublicKeyFactory);
        swift_bridgeObjectRetain();
        sub_1000059E8(v18, v20);
        sub_1000059E8(v23, v25);
        id v27 = [v26 init];
        NSString v28 = sub_100222260();
        swift_bridgeObjectRelease();
        Class isa = sub_100221BD0().super.isa;
        Class v30 = sub_100221BD0().super.isa;
        uint64_t v55 = v15;
        id v31 = [self permanentInfoWithPeerID:v28 data:isa sig:v30 keyFactory:v27];

        uint64_t v52 = v23;
        sub_100005A40(v23, v25);
        unint64_t v57 = v20;
        sub_100005A40(v18, v20);

        if (v31)
        {
          uint64_t v32 = (void *)swift_allocObject();
          uint64_t v32[2] = v53;
          v32[3] = v54;
          v32[4] = v5;
          v32[5] = v58;
          v32[6] = v55;
          v32[7] = v56;
          v32[8] = v51;
          v32[9] = v31;
          strcpy((char *)v59, "signing-key ");
          BYTE5(v59[1]) = 0;
          HIWORD(v59[1]) = -5120;
          v61._countAndFlagsBits = v58;
          v61._object = v55;
          sub_100222310(v61);
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_retain();
          uint64_t v33 = v5;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v34 = v31;
          sub_10019ED6C(v59[0], v59[1], (void (*)(char *, uint64_t))sub_1001B4640, (uint64_t)v32, v58, v55);

          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          sub_100005A40(v23, v25);
          sub_100005A40(v18, v20);
          return swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v42 = sub_100222090();
          sub_100003CC8(v42, (uint64_t)qword_10029E7D0);
          swift_bridgeObjectRetain_n();
          uint64_t v43 = sub_100222070();
          os_log_type_t v44 = sub_1002224E0();
          if (os_log_type_enabled(v43, v44))
          {
            uint64_t v45 = (uint8_t *)swift_slowAlloc();
            v59[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v45 = 136446210;
            sub_1000047D8(0, &qword_10029EFC0);
            swift_bridgeObjectRetain();
            uint64_t v46 = sub_1002223D0();
            unint64_t v48 = v47;
            swift_bridgeObjectRelease();
            v59[2] = sub_1001BEBDC(v46, v48, v59);
            sub_100222690();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v43, v44, "Couldn't parse self identity: %{public}s", v45, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_100042D4C();
          uint64_t v49 = swift_allocError();
          *(_OWORD *)uint64_t v50 = xmmword_1002297C0;
          *(unsigned char *)(v50 + 16) = 13;
          v53(0, v49);
          swift_errorRelease();
          sub_100005A40(v52, v25);
          return sub_100005A40(v18, v57);
        }
      }
      sub_100005A40(v18, v20);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_100222090();
  sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
  uint64_t v37 = sub_100222070();
  os_log_type_t v38 = sub_1002224E0();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Have no self identity, can't make tlk shares", v39, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  uint64_t v40 = swift_allocError();
  *(_OWORD *)uint64_t v41 = xmmword_1002297D0;
  *(unsigned char *)(v41 + 16) = 13;
  a3(0, v40);

  return swift_errorRelease();
}

uint64_t sub_100173DC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {
    id v31 = *(id *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = a5;
    v17[3] = a6;
    void v17[4] = a7;
    v17[5] = a3;
    v17[6] = a4;
    v17[7] = a8;
    v17[8] = a9;
    v17[9] = a1;
    v17[10] = a10;
    a3 = swift_allocObject();
    *(void *)(a3 + 16) = sub_1001B4698;
    *(void *)(a3 + 24) = v17;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = a3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100285AB0;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = a1;
    unint64_t v20 = a5;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = a10;
    swift_retain();
    swift_release();
    [v31 performBlockAndWait:v18];

    _Block_release(v18);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  uint64_t v24 = a2;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100222090();
  sub_100003CC8(v25, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v26 = sub_100222070();
  os_log_type_t v27 = sub_100222500();
  if (os_log_type_enabled(v26, v27))
  {
    NSString v28 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)NSString v28 = 136446210;
    uint64_t v33 = v24;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v29 = sub_1002222C0();
    uint64_t v33 = sub_1001BEBDC(v29, v30, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Don't have my own peer keys; can't upload new TLKs: %{public}s",
      v28,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return ((uint64_t (*)(void, uint64_t))a3)(0, v24);
}

void sub_100174158(char *a1, void (*a2)(char *, uint64_t (*)(), void *, void (*)(void, unint64_t), uint64_t), void (*a3)(char *, uint64_t (*)(), void *, void (*)(void, unint64_t), uint64_t), void (*a4)(void, unint64_t), uint64_t a5, unint64_t a6, unint64_t a7, void *a8, void *a9)
{
  uint64_t v74 = a8;
  uint64_t v75 = a5;
  uint64_t v76 = a4;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v15);
  uint64_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = *(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  NSString v19 = sub_100222260();
  v79[0] = 0;
  id v20 = [v18 getDynamicInfoForPeerWithID:v19 error:v79];

  id v21 = v79[0];
  if (v79[0])
  {
    id v22 = v79[0];

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100222090();
    sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
    uint64_t v24 = v22;
    uint64_t v25 = sub_100222070();
    os_log_type_t v26 = sub_1002224E0();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      NSString v28 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v27 = 138543362;
      uint64_t v29 = v24;
      unint64_t v30 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v79[0] = v30;
      sub_100222690();
      *NSString v28 = v30;

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Unable to fetch dynamic info for self: %{public}@", v27, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v25 = v24;
    }

    uint64_t v42 = v24;
    v76(0, (unint64_t)v21);
LABEL_13:

    return;
  }
  id v31 = v74;
  uint64_t v72 = v17;
  uint64_t v73 = a1;
  uint64_t v71 = (void *)updated;
  if (v20)
  {
    uint64_t v32 = v20;
    uint64_t v33 = [a9 epoch];
    if (((unint64_t)v33 & 0x8000000000000000) == 0)
    {
      id v34 = v73;
      sub_10015DC68(a6, a7, v31, (uint64_t)v32, v33);
      uint64_t v74 = v35;
      uint64_t v50 = v49;
      uint64_t v69 = v32;
      uint64_t v51 = swift_allocObject();
      uint64_t v52 = v75;
      *(void *)(v51 + 16) = v76;
      *(void *)(v51 + 24) = v52;
      uint64_t v68 = v51;
      uint64_t v53 = *(void *)&v34[OBJC_IVAR____TtC18TrustedPeersHelper9Container_tlkSharesBatch];
      if (!v53) {
        __break(1u);
      }
      uint64_t v54 = *(void *)(v50 + 16);
      os_log_t v70 = (void (*)(char *, uint64_t (*)(), void *, void (*)(void, unint64_t), uint64_t))v50;
      v79[3] = (id)sub_1000046DC(&qword_10029EFC8);
      v79[4] = (id)sub_1001B46CC(&qword_10029EFD0, &qword_10029EFC8);
      uint64_t v55 = swift_allocObject();
      v79[0] = (id)v55;
      *(void *)(v55 + 16) = 0;
      *(void *)(v55 + 24) = v54;
      *(void *)(v55 + 32) = v53;
      *(void *)(v55 + 40) = 0;
      *(unsigned char *)(v55 + 48) = 0;
      *(void *)(v55 + 56) = 0;
      uint64_t v56 = swift_allocObject();
      sub_100065B18((uint64_t)v79, v56 + 16);
      sub_100002F80(v56 + 16, *(void *)(v56 + 40));
      swift_retain_n();
      uint64_t v57 = sub_100222680();
      if (v78)
      {
        sub_100174A58((unint64_t)_swiftEmptyArrayStorage, 0, v76);
      }
      else
      {
        __chkstk_darwin(v57, v58);
        uint64_t v60 = v73;
        os_log_type_t v59 = (void (*)(char *, uint64_t (*)(), void *, void (*)(void, unint64_t), uint64_t))v74;
        *(&v67 - 6) = v61;
        *(&v67 - 5) = (void (*)(char *, uint64_t (*)(), void *, void (*)(void, unint64_t), uint64_t))v60;
        *(&v67 - 4) = v70;
        *(&v67 - 3) = a2;
        *(&v67 - 2) = a3;
        *(&v67 - 1) = v59;
        sub_1001A56AC(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
        sub_100221F70();
        uint64_t v62 = *(void *)&v60[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        uint64_t v76 = *(void (**)(void, unint64_t))&v60[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish
                                                                  + 24];
        uint64_t v71 = sub_1000059A4(&v60[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], (uint64_t)v76);
        os_log_type_t v63 = (void *)swift_allocObject();
        v63[2] = v60;
        v63[3] = sub_1001B46C0;
        v63[4] = v68;
        v63[5] = _swiftEmptyArrayStorage;
        v63[6] = a2;
        v63[7] = a3;
        v63[8] = v70;
        v63[9] = v59;
        v63[10] = v56;
        uint64_t v64 = *(void *)(v62 + 16);
        unint64_t v67 = *(void (**)(char *, uint64_t (*)(), void *, void (*)(void, unint64_t), uint64_t))(v64 + 32);
        os_log_type_t v65 = v60;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v66 = (uint64_t)v72;
        v67(v72, sub_1001B4774, v63, v76, v64);
        swift_release();
        sub_1001B7EAC(v66, type metadata accessor for UpdateTrustRequest);
      }
      swift_release();
      sub_100004788((uint64_t)v79);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v42 = v69;
      goto LABEL_13;
    }
    __break(1u);
    swift_once();
    uint64_t v36 = sub_100222090();
    sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v37 = sub_100222070();
    os_log_type_t v38 = sub_100222500();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      v79[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136446210;
      uint64_t v77 = a6;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v40 = sub_1002222C0();
      uint64_t v77 = sub_1001BEBDC(v40, v41, (uint64_t *)v79);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unable to process keys before uploading: %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v76(0, a6);

    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_100222090();
    sub_100003CC8(v43, (uint64_t)qword_10029E7D0);
    os_log_type_t v44 = sub_100222070();
    os_log_type_t v45 = sub_1002224E0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Unable to fetch dynamic info for self", v46, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    unint64_t v47 = swift_allocError();
    *(_OWORD *)uint64_t v48 = xmmword_100231300;
    *(unsigned char *)(v48 + 16) = 13;
    v76(0, v47);
    swift_errorRelease();
  }
}

uint64_t sub_100174A58(unint64_t a1, char a2, void (*a3)(void, unint64_t))
{
  if (a2)
  {
    swift_errorRetain();
    a3(0, a1);
    return sub_1001B6120(a1, 1);
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_100222090();
    sub_100003CC8(v5, (uint64_t)qword_10029E7D0);
    sub_1001B4B1C(a1, 0);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100222070();
    os_log_type_t v7 = sub_1002224E0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134217984;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_100222970();
        sub_1001B6120(a1, 0);
      }
      sub_1001B6120(a1, 0);
      sub_100222690();
      sub_1001B6120(a1, 0);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received %ld CKRecords back", v8, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_1001B6120(a1, 0);
      sub_1001B6120(a1, 0);
    }

    return ((uint64_t (*)(unint64_t, void))a3)(a1, 0);
  }
}

uint64_t sub_100174C40(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1001B45C4;
  *(void *)(v7 + 24) = v6;
  v12[4] = sub_1001B8924;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100112F58;
  v12[3] = &unk_100285A10;
  uint64_t v8 = _Block_copy(v12);
  os_log_type_t v9 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  [v5 performBlockAndWait:v8];
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100174DB8(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "changeToken"));
  if (!v5) {
    return sub_100175500(0, (uint64_t)a2, a3);
  }

  return a2(0);
}

uint64_t sub_100174E30(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)&v3[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v3;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1001B45A0;
  *(void *)(v9 + 24) = v8;
  v14[4] = sub_1001B8924;
  v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100112F58;
  v14[3] = &unk_100285998;
  uint64_t v10 = _Block_copy(v14);
  id v11 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  [v7 performBlockAndWait:v10];
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_100174FB0(char a1, char *a2, void (*a3)(void), uint64_t a4)
{
  if (a1)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_100222090();
    sub_100003CC8(v7, (uint64_t)qword_10029E7D0);
    uint64_t v8 = sub_100222070();
    os_log_type_t v9 = sub_1002224E0();
    if (!os_log_type_enabled(v8, v9)) {
      goto LABEL_7;
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Forcing a full refetch: by request", v10, 2u);
LABEL_6:
    swift_slowDealloc();
LABEL_7:

LABEL_8:
    LOBYTE(v11) = 1;
LABEL_9:
    sub_100175500(v11, (uint64_t)a3, a4);
    return;
  }
  os_log_type_t v12 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  id v35 = 0;
  unsigned int v11 = [v12 currentStatePossiblyMissingDataWithError:&v35];
  id v13 = v35;
  if (!v35)
  {
    if (!v11) {
      goto LABEL_9;
    }
    uint64_t v23 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
    if ((uint64_t)[*(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] refetchLevel] > 0)
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_100222090();
      sub_100003CC8(v24, (uint64_t)qword_10029E7D0);
      uint64_t v25 = a2;
      os_log_type_t v26 = sub_100222070();
      os_log_type_t v27 = sub_1002224E0();
      if (os_log_type_enabled(v26, v27))
      {
        NSString v28 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)NSString v28 = 134217984;
        id v35 = [*(id *)&a2[v23] refetchLevel];
        sub_100222690();

        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Model would like a full refetch, but we've done one at this refetch level: %lld", v28, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      LOBYTE(v11) = 0;
      goto LABEL_9;
    }
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_100222090();
    sub_100003CC8(v30, (uint64_t)qword_10029E7D0);
    id v31 = a2;
    uint64_t v8 = sub_100222070();
    os_log_type_t v32 = sub_1002224E0();
    if (!os_log_type_enabled(v8, v32))
    {

      goto LABEL_8;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134217984;
    id v35 = [*(id *)&a2[v23] refetchLevel];
    sub_100222690();

    _os_log_impl((void *)&_mh_execute_header, v8, v32, "Forcing a full refetch due to model: last refetch level: %lld", v33, 0xCu);
    goto LABEL_6;
  }
  id v14 = v35;
  swift_willThrow();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100222090();
  sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
  uint64_t v16 = v14;
  uint64_t v17 = sub_100222070();
  os_log_type_t v18 = sub_100222500();
  if (os_log_type_enabled(v17, v18))
  {
    NSString v19 = (uint8_t *)swift_slowAlloc();
    id v34 = a3;
    id v20 = (void *)swift_slowAlloc();
    *(_DWORD *)NSString v19 = 138543362;
    id v21 = v16;
    id v22 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v35 = v22;
    sub_100222690();
    *id v20 = v22;

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "currentStatePossiblyMissingData error: %{public}@", v19, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    a3 = v34;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v17 = v16;
  }

  uint64_t v29 = v16;
  a3(v13);
}

uint64_t sub_100175500(char a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t ChangesRequest = type metadata accessor for FetchChangesRequest(0);
  uint64_t v10 = __chkstk_darwin(ChangesRequest, v9);
  os_log_type_t v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v32 - v14;
  int v16 = a1 & 1;
  char v36 = a1;
  uint64_t v37 = v4;
  sub_1001A56AC((unint64_t *)&unk_10029EFB0, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
  sub_100221F70();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100222090();
  sub_100003CC8(v17, (uint64_t)qword_10029E7D0);
  sub_1001B7C04((uint64_t)v15, (uint64_t)v12, type metadata accessor for FetchChangesRequest);
  os_log_type_t v18 = sub_100222070();
  os_log_type_t v19 = sub_1002224E0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  int v35 = v16;
  if (v20)
  {
    uint64_t v33 = a2;
    uint64_t v34 = a3;
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)id v21 = 136446210;
    uint64_t v22 = *v12;
    unint64_t v23 = v12[1];
    uint64_t v24 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0) {
      uint64_t v24 = *v12 & 0xFFFFFFFFFFFFLL;
    }
    if (v24)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v23 = 0xE500000000000000;
      uint64_t v22 = 0x7974706D65;
    }
    uint64_t v38 = sub_1001BEBDC(v22, v23, &v39);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC((uint64_t)v12, type metadata accessor for FetchChangesRequest);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Fetching with change token: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v33;
    a3 = v34;
  }
  else
  {
    sub_1001B7EAC((uint64_t)v12, type metadata accessor for FetchChangesRequest);
  }
  uint64_t v25 = *(void *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
  uint64_t v26 = *(void *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
  sub_1000059A4(&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v25);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v4;
  *(unsigned char *)(v27 + 24) = v35;
  *(void *)(v27 + 32) = a2;
  *(void *)(v27 + 40) = a3;
  uint64_t v28 = *(void *)(v26 + 16);
  uint64_t v29 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v30 = v4;
  swift_retain();
  v29(v15, sub_1001B4530, v27, v25, v28);
  swift_release();
  return sub_1001B7EAC((uint64_t)v15, type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1001758B0(uint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v3 = (void *)result;
    id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a3
                                                               + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "changeToken"));
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = sub_100222270();
      unint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v8 = 0xE000000000000000;
    }
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v6;
    v3[1] = v8;
  }
  return result;
}

uint64_t sub_10017593C(uint64_t a1, uint64_t a2, int a3, void (*a4)(void), char *a5)
{
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  int v74 = a3;
  uint64_t v75 = a2;
  uint64_t v6 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v73 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  os_log_type_t v12 = (char *)&v72 - v11;
  uint64_t v13 = type metadata accessor for Changes(0);
  uint64_t v14 = *(void **)(v13 - 8);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v72 = (void **)((char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v18);
  BOOL v20 = (char *)&v72 - v19;
  uint64_t ChangesResponse = type metadata accessor for FetchChangesResponse(0);
  __chkstk_darwin(ChangesResponse, v22);
  uint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000046DC(&qword_100299E38);
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char **)((char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v28, &qword_100299E38);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_9:
    sub_1001B7B9C((uint64_t)v28, (uint64_t)v24, type metadata accessor for FetchChangesResponse);
    uint64_t v44 = (uint64_t)&v24[*(int *)(ChangesResponse + 20)];
    sub_10000D830(v44, (uint64_t)v12, (uint64_t *)&unk_10029EC90);
    os_log_type_t v45 = (unsigned int (*)(char *, uint64_t, uint64_t))v14[6];
    uint64_t v46 = (uint64_t)v24;
    if (v45(v12, 1, v13) == 1)
    {
      *(void *)BOOL v20 = 0;
      *((void *)v20 + 1) = 0xE000000000000000;
      *((void *)v20 + 2) = _swiftEmptyArrayStorage;
      *(_OWORD *)(v20 + 24) = xmmword_100229520;
      *(_OWORD *)(v20 + 40) = xmmword_100229520;
      v20[56] = 0;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v47 = sub_10004015C((uint64_t)v12, (uint64_t *)&unk_10029EC90);
    }
    else
    {
      uint64_t v47 = sub_1001B7B9C((uint64_t)v12, (uint64_t)v20, type metadata accessor for Changes);
    }
    uint64_t v55 = v75;
    __chkstk_darwin(v47, v48);
    *(&v72 - 4) = v20;
    *(&v72 - 3) = (void *)v55;
    *((unsigned char *)&v72 - 16) = v74 & 1;
    sub_1002225C0();
    sub_1001B7EAC((uint64_t)v20, type metadata accessor for Changes);
    uint64_t v56 = v73;
    sub_10000D830(v44, v73, (uint64_t *)&unk_10029EC90);
    if (v45((char *)v56, 1, v13) == 1)
    {
      uint64_t v57 = v72;
      *uint64_t v72 = 0;
      v57[1] = 0xE000000000000000;
      v57[2] = _swiftEmptyArrayStorage;
      *(_OWORD *)(v57 + 3) = xmmword_100229520;
      *(_OWORD *)(v57 + 5) = xmmword_100229520;
      *((unsigned char *)v57 + 56) = 0;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v56, (uint64_t *)&unk_10029EC90);
    }
    else
    {
      uint64_t v57 = v72;
      sub_1001B7B9C(v56, (uint64_t)v72, type metadata accessor for Changes);
    }
    int v63 = *((unsigned __int8 *)v57 + 56);
    sub_1001B7EAC((uint64_t)v57, type metadata accessor for Changes);
    if (v63 == 1)
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_100222090();
      sub_100003CC8(v64, (uint64_t)qword_10029E7D0);
      os_log_type_t v65 = sub_100222070();
      os_log_type_t v66 = sub_1002224E0();
      if (os_log_type_enabled(v65, v66))
      {
        unint64_t v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v67 = 0;
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "persist: More changes indicated. Fetching...", v67, 2u);
        swift_slowDealloc();
      }

      sub_100174E30(0, v76, v77);
    }
    else
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_100222090();
      sub_100003CC8(v68, (uint64_t)qword_10029E7D0);
      uint64_t v69 = sub_100222070();
      os_log_type_t v70 = sub_1002224E0();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v71 = 0;
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "persist: no more changes!", v71, 2u);
        swift_slowDealloc();
      }

      v76(0);
    }
    return sub_1001B7EAC(v46, type metadata accessor for FetchChangesResponse);
  }
  os_log_type_t v12 = *v28;
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v29 = (void *)sub_100221B30();
  unsigned int v30 = [v29 isCuttlefishError:1018];

  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();
  if (v30)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_100222090();
    sub_100003CC8(v31, (uint64_t)qword_10029E7D0);
    uint64_t v32 = sub_100222070();
    os_log_type_t v33 = sub_1002224E0();
    BOOL v34 = os_log_type_enabled(v32, v33);
    int v35 = (void *)v75;
    if (v34)
    {
      char v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "change token is expired; resetting local CK storage",
        v36,
        2u);
      swift_slowDealloc();
    }

    uint64_t v37 = *(void **)((char *)v35 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    uint64_t v38 = (void *)swift_allocObject();
    uint64_t v39 = v76;
    uint64_t v24 = v77;
    void v38[2] = v35;
    v38[3] = v39;
    uint64_t v14 = v35;
    v38[4] = v24;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_1001B4544;
    *(void *)(v40 + 24) = v38;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t v79 = (char **)v40;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100285920;
    unint64_t v41 = _Block_copy(aBlock);
    uint64_t v28 = v79;
    uint64_t v42 = v14;
    swift_retain();
    swift_retain();
    swift_release();
    [v37 performBlockAndWait:v41];
    swift_errorRelease();
    _Block_release(v41);
    uint64_t ChangesResponse = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (ChangesResponse)
    {
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_100222090();
    sub_100003CC8(v49, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v50 = sub_100222070();
    os_log_type_t v51 = sub_1002224E0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136446210;
      uint64_t v80 = (uint64_t)v12;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v53 = sub_1002222C0();
      uint64_t v80 = sub_1001BEBDC(v53, v54, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Fetch error is an unknown error: %{public}s", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    swift_errorRetain();
    uint64_t v58 = sub_100222070();
    os_log_type_t v59 = sub_100222500();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136446210;
      uint64_t v80 = (uint64_t)v12;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v61 = sub_1002222C0();
      uint64_t v80 = sub_1001BEBDC(v61, v62, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Could not fetch changes: %{public}s", v60, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v76(v12);
    swift_errorRelease();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100176664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100174E30(0, a2, a3);
}

uint64_t sub_100176884(uint64_t a1, void (*a2)(void, void, uint64_t), uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (!a1) {
    return sub_100176AB0(a5, a6 & 1, (uint64_t)a2, a3);
  }
  swift_errorRetain();
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = sub_100222070();
  os_log_type_t v10 = sub_100222500();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, &v15);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "fetchChangesAndUpdateTrustIfNeeded: fetching failed: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  a2(0, 0, a1);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_100176AB0(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v4;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(unsigned char *)(v10 + 40) = a2;
  sub_1000D8B9C((uint64_t)a1, v10 + 48, &qword_10029EE00);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1001B4184;
  *(void *)(v11 + 24) = v10;
  v16[4] = sub_1001B8924;
  v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100112F58;
  v16[3] = &unk_1002856A0;
  uint64_t v12 = _Block_copy(v16);
  unint64_t v13 = v4;
  swift_retain();
  sub_1001B41A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v12];
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_100176C64(char *a1, void (*a2)(id, void, void), uint64_t a3, char a4, void *a5)
{
  id v10 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_100222270();
    uint64_t v14 = v13;

    strcpy((char *)v21, "signing-key ");
    BYTE5(v21[1]) = 0;
    HIWORD(v21[1]) = -5120;
    v23._countAndFlagsBits = v12;
    v23._object = v14;
    sub_100222310(v23);
    swift_retain();
    uint64_t v15 = a1;
    swift_bridgeObjectRetain();
    sub_1001B41A8(a5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
    sub_1001A0138(v21[0], v21[1], (void (*)(void, void, void))a2, a3, a4 & 1, v15, v12, (uint64_t)v14, a5);
    sub_1001B41A8(a5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B4204);
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100222090();
    sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
    uint64_t v17 = sub_100222070();
    os_log_type_t v18 = sub_1002224E0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "updateTrustIfNeeded: No identity.", v19, 2u);
      swift_slowDealloc();
    }

    id v20 = [objc_allocWithZone((Class)TrustedPeersHelperPeerState) initWithPeerID:0 isPreapproved:0 status:32 memberChanges:a4 & 1 unknownMachineIDs:0 osVersion:0 walrus:0 webAccess:0];
    a2(v20, 0, 0);
  }
}

void sub_100176EF4(void *a1, uint64_t a2, void (*a3)(void, void, void), uint64_t a4, char a5, char *a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a1)
  {
    uint64_t v76 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    id v16 = *(id *)&a6[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    id v17 = a1;
    NSString v18 = sub_100222260();
    id v78 = 0;
    id v19 = [v16 peerWithID:v18 error:&v78];

    if (v78)
    {
      id v20 = v78;

      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_100222090();
      sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
      uint64_t v22 = v20;
      Swift::String v23 = sub_100222070();
      os_log_type_t v24 = sub_100222500();
      if (os_log_type_enabled(v23, v24))
      {
        id v71 = v17;
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        char v73 = a5;
        uint64_t v26 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 138543362;
        uint64_t v22 = v22;
        uint64_t v27 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v78 = v27;
        sub_100222690();
        *uint64_t v26 = v27;
        id v17 = v71;

        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Failed to get (current self) ego peer from model: %{public}@", v25, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        a5 = v73;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        Swift::String v23 = v22;
      }
    }
    else if (v19)
    {
      char v74 = a5;
      id v35 = v19;
      id v36 = [v35 dynamicInfo];
      __chkstk_darwin(v36, v37);
      sub_1000046DC(&qword_100299698);
      sub_1002225C0();
      uint64_t v38 = (uint64_t)v78;
      if (v78)
      {
        id v17 = v17;
        id v39 = v35;
        uint64_t v40 = a6;
        swift_bridgeObjectRetain();
        sub_1001B41A8(a9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
        swift_retain();
        id v41 = v36;
        sub_10019FA54(v38, v40, v40, a7, a8, v17, a9, v39, (uint64_t)a3, a4, v74 & 1, v36);

        sub_1001B41A8(a9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B4204);
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {

        id v17 = v35;
      }
      goto LABEL_38;
    }
    id v42 = *(id *)&a6[v76];
    id v43 = objc_msgSend(objc_msgSend(v17, "publicKey"), "spki");
    swift_unknownObjectRelease();
    uint64_t v44 = sub_100221BF0();
    unint64_t v46 = v45;

    Class isa = sub_100221BD0().super.isa;
    sub_100005A40(v44, v46);
    id v78 = 0;
    id v48 = [v42 hasPotentiallyTrustedPeerPreapprovingKey:isa error:&v78];

    id v49 = v78;
    if (v78)
    {
      id v50 = v78;
      swift_willThrow();
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_100222090();
      sub_100003CC8(v51, (uint64_t)qword_10029E7D0);
      uint64_t v52 = v50;
      uint64_t v53 = sub_100222070();
      os_log_type_t v54 = sub_100222500();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v77 = a3;
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        id v72 = v17;
        uint64_t v56 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 138543362;
        uint64_t v75 = v52;
        uint64_t v57 = v52;
        uint64_t v58 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v78 = v58;
        sub_100222690();
        *uint64_t v56 = v58;
        a3 = v77;

        uint64_t v52 = v75;
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "updateTrustIfNeeded: error calling hasPotentiallyTrustedPeerPreapprovingKey %{public}@", v55, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        id v17 = v72;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v53 = v52;
      }

      unint64_t v67 = v52;
      a3(0, 0, v49);
    }
    else
    {
      if (qword_100298EB8 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_100222090();
      sub_100003CC8(v59, (uint64_t)qword_10029E7D0);
      uint64_t v60 = sub_100222070();
      os_log_type_t v61 = sub_1002224E0();
      if (os_log_type_enabled(v60, v61))
      {
        unint64_t v62 = (uint8_t *)swift_slowAlloc();
        int v63 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v62 = 136446210;
        id v78 = v63;
        if (v48) {
          uint64_t v64 = 0x6F72707061657270;
        }
        else {
          uint64_t v64 = 0xD000000000000013;
        }
        if (v48) {
          unint64_t v65 = 0xEB00000000646576;
        }
        else {
          unint64_t v65 = 0x8000000100244C70;
        }
        sub_1001BEBDC(v64, v65, (uint64_t *)&v78);
        sub_100222690();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "updateTrustIfNeeded: ego peer is not in model, is %{public}s", v62, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        unint64_t v66 = v48;
        swift_slowDealloc();
      }
      else
      {

        unint64_t v66 = (unint64_t)v48;
      }
      id v68 = objc_allocWithZone((Class)TrustedPeersHelperPeerState);
      swift_bridgeObjectRetain();
      NSString v69 = sub_100222260();
      swift_bridgeObjectRelease();
      id v70 = [v68 initWithPeerID:v69 isPreapproved:v66 status:32 memberChanges:a5 & 1 unknownMachineIDs:0 osVersion:0 walrus:0 webAccess:0];

      a3(v70, 0, 0);
    }
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_100222090();
    sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    unsigned int v30 = sub_100222070();
    os_log_type_t v31 = sub_100222500();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      id v78 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v33 = sub_1002222C0();
      sub_1001BEBDC(v33, v34, (uint64_t *)&v78);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "updateTrustIfNeeded: no signing key pair: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v17 = [objc_allocWithZone((Class)TrustedPeersHelperPeerState) initWithPeerID:0 isPreapproved:0 status:32 memberChanges:a5 & 1 unknownMachineIDs:0 osVersion:0 walrus:0 webAccess:0];
    a3(v17, 0, a2);
  }
LABEL_38:
}

void sub_1001779B8(uint64_t a1@<X0>, void (*a2)(void, void, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  id v5 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v19 = 0;
  id v6 = [v5 allPolicyVersionsWithError:&v19];
  id v7 = v19;
  if (v6)
  {
    uint64_t v8 = v6;
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
    uint64_t v9 = sub_100222440();
    id v10 = v7;
  }
  else
  {
    id v11 = v19;
    uint64_t v12 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      NSString v18 = (void *)swift_slowAlloc();
      *(_DWORD *)id v16 = 138543362;
      swift_errorRetain();
      id v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v19 = v17;
      sub_100222690();
      *NSString v18 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error fetching all policy versions: %{public}@", v16, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(0, 0, v12);
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v9 = 0;
  }
  *a3 = v9;
}

void sub_100177CA4(char *a1, void *a2, unint64_t a3, uint64_t a4, char *a5, void *a6, void (*a7)(void, void, void), uint64_t a8, unsigned __int8 a9, id a10)
{
  int64_t v249 = a7;
  int v246 = a9;
  uint64_t v239 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v238 = *(void *)(v239 - 8);
  __chkstk_darwin(v239, v17);
  uint64_t v237 = (uint64_t *)((char *)&v230 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v19);
  uint64_t v242 = (char *)&v230 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = type metadata accessor for SignedPeerDynamicInfo(0);
  __chkstk_darwin(v240, v21);
  uint64_t v244 = (uint64_t *)((char *)&v230 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v256 = 0;
  uint64_t v247 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v23 = *(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  unint64_t v250 = a2;
  NSString v24 = sub_100222260();
  uint64_t v25 = (void *)sub_1001EAB00();
  v255[0] = 0;
  uint64_t v26 = [v23 calculateDynamicInfoForPeerWithID:v24 addingPeerIDs:0 removingPeerIDs:0 preapprovedKeys:0 signingKeyPair:a4 currentMachineIDs:v25 error:v255];

  unint64_t v251 = a3;
  unint64_t v248 = a1;
  uint64_t v245 = v26;
  if (v26)
  {
    uint64_t v243 = a8;
    id v27 = v255[0];
    uint64_t v28 = v26;
    id v29 = [a6 permanentInfo];
    unsigned int v30 = (objc_class *)[a6 stableInfo];
    uint64_t v55 = sub_10017EDF4(a5, v29, v30, v28, a4, 0);

    unint64_t v256 = v55;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_100222090();
    uint64_t v236 = sub_100003CC8(v56, (uint64_t)qword_10029E7D0);
    uint64_t v57 = sub_100222070();
    os_log_type_t v58 = sub_1002224E0();
    BOOL v59 = os_log_type_enabled(v57, v58);
    os_log_type_t v232 = a5;
    if (v59)
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      v255[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136446210;
      swift_beginAccess();
      p_Class isa = &v256->isa;
      os_log_type_t v61 = v256;
      sub_1000046DC((uint64_t *)&unk_10029EFA8);
      uint64_t v62 = sub_1002222C0();
      p_Class isa = (void *)sub_1001BEBDC(v62, v63, (uint64_t *)v255);
      sub_100222690();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "updateTrustIfNeeded: produced a stableInfo: %{public}s", v60, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v64 = v28;
    unint64_t v65 = sub_100222070();
    os_log_type_t v66 = sub_1002224E0();
    BOOL v67 = os_log_type_enabled(v65, v66);
    unint64_t v68 = v251;
    id v235 = v64;
    if (v67)
    {
      NSString v69 = (uint8_t *)swift_slowAlloc();
      v255[0] = (id)swift_slowAlloc();
      *(_DWORD *)NSString v69 = 136446210;
      id v234 = v69 + 4;
      id v70 = v235;
      id v71 = [v70 description];
      uint64_t v72 = sub_100222270();
      unint64_t v74 = v73;

      unint64_t v68 = v251;
      p_Class isa = (void *)sub_1001BEBDC(v72, v74, (uint64_t *)v255);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "updateTrustIfNeeded: produced a dynamicInfo: %{public}s", v69, 0xCu);
      swift_arrayDestroy();
      uint64_t v64 = v235;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v76 = v247;
    uint64_t v75 = v248;
    id v77 = *(id *)&v248[v247];
    NSString v78 = sub_100222260();
    v255[0] = 0;
    id v79 = [v77 peerWithID:v78 error:v255];

    if (v255[0])
    {
      id v80 = v255[0];

      swift_willThrow();
      id v81 = v80;
      unint64_t v82 = sub_100222070();
      os_log_type_t v83 = sub_100222500();
      if (os_log_type_enabled(v82, v83))
      {
        id v84 = (uint8_t *)swift_slowAlloc();
        id v85 = (void *)swift_slowAlloc();
        *(_DWORD *)id v84 = 138543362;
        id v86 = v81;
        uint64_t v87 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v255[0] = v87;
        uint64_t v76 = v247;
        sub_100222690();
        *id v85 = v87;
        unint64_t v68 = v251;

        _os_log_impl((void *)&_mh_execute_header, v82, v83, "Error getting ego peer from model: %{public}@", v84, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        uint64_t v75 = v248;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v79 = 0;
      uint64_t v64 = v235;
    }
    uint64_t v233 = 0;
    swift_beginAccess();
    if (v256)
    {
      uint64_t v88 = v256;
      id v89 = v79;
      id v90 = [v89 stableInfo];
      if (!v90) {
        goto LABEL_40;
      }
      uint64_t v91 = v90;
      sub_1000047D8(0, (unint64_t *)&unk_10029EFA0);
      unint64_t v92 = v88;
      char v93 = sub_100222650();

      if ((v93 & 1) == 0 || !v79) {
        goto LABEL_41;
      }
    }
    else
    {
      if (!v79) {
        goto LABEL_41;
      }
      id v89 = v79;
    }
    uint64_t v88 = v64;
    id v89 = v89;
    id v94 = [v89 dynamicInfo];
    if (v94)
    {
      long long v95 = v94;
      sub_1000047D8(0, (unint64_t *)&unk_10029EE08);
      long long v96 = v88;
      char v97 = sub_100222650();

      unint64_t v231 = v96;
      if (v97)
      {
        long long v98 = sub_100222070();
        os_log_type_t v99 = sub_1002224E0();
        if (os_log_type_enabled(v98, v99))
        {
          uint64_t v100 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v100 = 0;
          _os_log_impl((void *)&_mh_execute_header, v98, v99, "updateTrustIfNeeded: complete.", v100, 2u);
          swift_slowDealloc();
        }

        id v101 = v231;
        sub_1001EBA48(v231);

        unint64_t v102 = *(void **)&v75[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
        p_Class isa = 0;
        if ([v102 save:&p_isa])
        {
          uint64_t v103 = p_isa;
        }
        else
        {
          uint64_t v181 = p_isa;
          uint64_t v182 = sub_100221B40();

          swift_willThrow();
          uint64_t v233 = 0;
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v183 = sub_100222070();
          os_log_type_t v184 = sub_100222500();
          if (os_log_type_enabled(v183, v184))
          {
            uint64_t v185 = (uint8_t *)swift_slowAlloc();
            p_Class isa = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v185 = 136446210;
            uint64_t v252 = v182;
            swift_errorRetain();
            sub_1000046DC(&qword_100299D70);
            uint64_t v186 = sub_1002222C0();
            uint64_t v252 = sub_1001BEBDC(v186, v187, (uint64_t *)&p_isa);
            uint64_t v76 = v247;
            sub_100222690();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v183, v184, "updateTrustIfNeeded: unable to remove untrusted MachineIDs: %{public}s", v185, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
        }
        id v188 = v89;
        unint64_t v189 = [v188 stableInfo];
        if (v189)
        {
          unint64_t v190 = v189;
          id v191 = [v188 permanentInfo];
          id v192 = [v191 modelID];

          LODWORD(v191) = sub_100222270();
          int v194 = v193;

          uint64_t v195 = v233;
          int v196 = sub_10015A2F8((int)v191, v194, v190);
          if (!v195)
          {
            uint64_t v245 = v196;
            swift_bridgeObjectRelease();

LABEL_87:
            id v202 = *(id *)&v248[v76];
            NSString v203 = sub_100222260();
            p_Class isa = 0;
            uint64_t v204 = (uint64_t)[v202 statusOfPeerWithID:v203 error:&p_isa];

            if (p_isa)
            {
              uint64_t v205 = p_isa;
              swift_willThrow();
              uint64_t v206 = v205;
              uint64_t v207 = sub_100222070();
              os_log_type_t v208 = sub_100222500();
              if (os_log_type_enabled(v207, v208))
              {
                unint64_t v209 = (uint8_t *)swift_slowAlloc();
                unint64_t v210 = (void *)swift_slowAlloc();
                *(_DWORD *)unint64_t v209 = 138543362;
                uint64_t v206 = v206;
                uint64_t v211 = (void *)_swift_stdlib_bridgeErrorToNSError();
                p_Class isa = v211;
                sub_100222690();
                void *v210 = v211;

                _os_log_impl((void *)&_mh_execute_header, v207, v208, "updateTrustIfNeeded: ignoring additional error calling statusOfPeer: %{public}@", v209, 0xCu);
                sub_1000046DC(&qword_100298F90);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                uint64_t v207 = v206;
              }
              unint64_t v212 = &selRef_setAllSelves_;

              uint64_t v204 = 32;
            }
            else
            {
              unint64_t v212 = &selRef_setAllSelves_;
            }
            char v213 = sub_1001EA0EC();
            id v214 = [v188 v212[70]];
            if (v214)
            {
              os_log_type_t v215 = v214;
              id v216 = [v214 osVersion];

              sub_100222270();
              uint64_t v218 = v217;
            }
            else
            {
              uint64_t v218 = 0;
            }
            id v219 = [v188 stableInfo];
            id v220 = [v219 walrusSetting];

            id v221 = [v188 stableInfo];
            id v222 = [v221 webAccess];

            swift_bridgeObjectRetain();
            NSString v223 = sub_100222260();
            swift_bridgeObjectRelease();
            if (v218)
            {
              NSString v224 = sub_100222260();
              swift_bridgeObjectRelease();
            }
            else
            {
              NSString v224 = 0;
            }
            id v225 = objc_allocWithZone((Class)TrustedPeersHelperPeerState);
            id v226 = [v225 initWithPeerID:v223 isPreapproved:0 status:v204 memberChanges:v246 & 1 unknownMachineIDs:v213 & 1 osVersion:v224 walrus:v220 webAccess:v222];

            unint64_t v227 = v245;
            v249(v226, v245, 0);

            goto LABEL_74;
          }

          swift_bridgeObjectRelease();
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v197 = sub_100222070();
          os_log_type_t v198 = sub_100222500();
          if (os_log_type_enabled(v197, v198))
          {
            uint64_t v199 = (uint8_t *)swift_slowAlloc();
            p_Class isa = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v199 = 136446210;
            uint64_t v252 = v195;
            swift_errorRetain();
            sub_1000046DC(&qword_100299D70);
            uint64_t v200 = sub_1002222C0();
            uint64_t v252 = sub_1001BEBDC(v200, v201, (uint64_t *)&p_isa);
            uint64_t v76 = v247;
            sub_100222690();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v197, v198, "updateTrustIfNeeded: unable to compute a new syncing policy: %{public}s", v199, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
        }
        else
        {
        }
        uint64_t v245 = 0;
        goto LABEL_87;
      }
LABEL_41:
      if (a10)
      {
        id v104 = [a10 excludedPeerIDs];
        uint64_t v247 = sub_100222440();
      }
      else
      {
        uint64_t v247 = (uint64_t)&_swiftEmptySetSingleton;
      }
      id v105 = [v64 excludedPeerIDs];
      BOOL v106 = sub_100222440();

      id v107 = [*(id *)&v75[v76] allCustodianRecoveryKeys];
      sub_1000047D8(0, &qword_10029EB80);
      unint64_t v108 = sub_1002223C0();

      if (v108 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_100222970();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v109 = *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      id v234 = v79;
      if (v109)
      {
        unint64_t v231 = v106;
        p_Class isa = _swiftEmptyArrayStorage;
        sub_10018D13C(0, v109 & ~(v109 >> 63), 0);
        if (v109 < 0) {
          __break(1u);
        }
        uint64_t v110 = 0;
        uint64_t v111 = p_isa;
        do
        {
          if ((v108 & 0xC000000000000001) != 0) {
            id v112 = (id)sub_100222880();
          }
          else {
            id v112 = *(id *)(v108 + 8 * v110 + 32);
          }
          uint64_t v113 = v112;
          id v114 = [v112 peerID];
          uint64_t v115 = sub_100222270();
          uint64_t v117 = v116;

          p_Class isa = v111;
          unint64_t v119 = v111[2];
          unint64_t v118 = v111[3];
          if (v119 >= v118 >> 1)
          {
            sub_10018D13C(v118 > 1, v119 + 1, 1);
            uint64_t v111 = p_isa;
          }
          ++v110;
          v111[2] = v119 + 1;
          os_log_type_t v120 = &v111[2 * v119];
          v120[4] = v115;
          v120[5] = v117;
        }
        while (v109 != v110);
        swift_bridgeObjectRelease();
        unint64_t v68 = v251;
        BOOL v106 = v231;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v111 = _swiftEmptyArrayStorage;
      }
      BOOL v121 = v235;
      if (*(void *)(v247 + 16) > (unint64_t)v106[2].isa >> 3)
      {
        uint64_t v122 = sub_100194FBC(v247, (uint64_t)v106);
        swift_bridgeObjectRelease();
      }
      else
      {
        p_Class isa = &v106->isa;
        sub_100194E14(v247);
        swift_bridgeObjectRelease();
        uint64_t v122 = p_isa;
      }
      uint64_t v123 = sub_10019542C((uint64_t)v111, (uint64_t)v122);
      swift_bridgeObjectRelease();
      if (*(void *)(v123 + 16))
      {
        swift_retain();
        os_log_type_t v124 = sub_100222070();
        os_log_type_t v125 = sub_100222500();
        if (os_log_type_enabled(v124, v125))
        {
          uint64_t v126 = (uint8_t *)swift_slowAlloc();
          p_Class isa = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v126 = 136315138;
          swift_retain();
          uint64_t v127 = sub_100222450();
          unint64_t v129 = v128;
          swift_release();
          uint64_t v130 = v127;
          unint64_t v68 = v251;
          uint64_t v252 = sub_1001BEBDC(v130, v129, (uint64_t *)&p_isa);
          sub_100222690();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v124, v125, "Found CRKs that are being distrusted: %s", v126, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        uint64_t v131 = (uint64_t)v250;
        id v134 = objc_allocWithZone((Class)SecTapToRadar);
        NSString v135 = sub_100222260();
        NSString v136 = sub_100222260();
        NSString v137 = sub_100222260();
        id v138 = [v134 initTapToRadar:v135 description:v136 radar:v137];

        [v138 trigger];
        BOOL v121 = v235;
        if (v246) {
          goto LABEL_67;
        }
      }
      else
      {
        swift_release();
        uint64_t v131 = (uint64_t)v250;
        if (v246)
        {
LABEL_67:
          LODWORD(v247) = 1;
          goto LABEL_68;
        }
      }
      id v132 = v234;
      id v133 = [v132 dynamicInfo];
      LODWORD(v247) = sub_1001AFF74(v121, v133);

LABEL_68:
      os_log_type_t v139 = v244;
      uint64_t v140 = v121;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      id v141 = [v140 data];
      uint64_t v142 = sub_100221BF0();
      uint64_t v144 = v143;

      *os_log_type_t v139 = v142;
      v139[1] = v144;
      id v145 = [v140 sig];
      uint64_t v146 = sub_100221BF0();
      uint64_t v148 = v147;

      v139[2] = v146;
      v139[3] = v148;
      swift_bridgeObjectRetain_n();
      uint64_t v149 = v140;
      uint64_t v150 = sub_100222070();
      os_log_type_t v151 = sub_1002224E0();
      if (os_log_type_enabled(v150, v151))
      {
        uint64_t v152 = swift_slowAlloc();
        BOOL v153 = (void *)swift_slowAlloc();
        p_Class isa = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v152 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v252 = sub_1001BEBDC(v131, v251, (uint64_t *)&p_isa);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v152 + 12) = 2114;
        uint64_t v252 = (uint64_t)v149;
        id v154 = v149;
        sub_100222690();
        void *v153 = v245;

        uint64_t v131 = (uint64_t)v250;
        _os_log_impl((void *)&_mh_execute_header, v150, v151, "updateTrustIfNeeded: attempting updateTrust for %{public}s with: %{public}@", (uint8_t *)v152, 0x16u);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        unint64_t v68 = v251;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v155 = swift_bridgeObjectRelease_n();
      }
      uint64_t v158 = (uint64_t)v242;
      uint64_t v157 = v243;
      unint64_t v159 = v249;
      unint64_t v250 = v149;
      __chkstk_darwin(v155, v156);
      *(&v230 - 4) = (uint64_t)v248;
      *(&v230 - 3) = v131;
      unint64_t v228 = v68;
      uint64_t v229 = (uint64_t)v244;
      sub_1001A56AC(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
      uint64_t v160 = updated;
      sub_100221F70();
      if (v256)
      {
        uint64_t v161 = v239;
        unint64_t v162 = v237;
        NSString v163 = v256;
        _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
        id v164 = [v163 data];
        uint64_t v165 = sub_100221BF0();
        uint64_t v167 = v166;

        uint64_t *v162 = v165;
        v162[1] = v167;
        id v168 = [v163 sig];
        uint64_t v169 = sub_100221BF0();
        uint64_t v171 = v170;

        v162[2] = v169;
        v162[3] = v171;
        uint64_t v172 = v158 + *(int *)(v160 + 36);
        sub_10004015C(v172, &qword_100299F18);
        sub_1001B7B9C((uint64_t)v162, v172, type metadata accessor for SignedPeerStableInfo);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v238 + 56))(v172, 0, 1, v161);
      }
      unint64_t v173 = v248;
      uint64_t v174 = *(void *)&v248[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      uint64_t v175 = *(void *)&v248[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      sub_1000059A4(&v248[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v174);
      uint64_t v176 = swift_allocObject();
      *(void *)(v176 + 16) = v173;
      *(void *)(v176 + 24) = v159;
      *(void *)(v176 + 32) = v157;
      uint64_t v177 = v232;
      sub_1000D8B9C((uint64_t)v232, v176 + 40, &qword_10029EE00);
      *(unsigned char *)(v176 + 144) = v247 & 1;
      uint64_t v178 = *(void *)(v175 + 16);
      uint64_t v179 = *(void (**)(void, void, void, void, void))(v178 + 32);
      id v180 = v173;
      swift_retain();
      sub_1001B41A8(v177, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
      v179(v158, sub_1001B20D0, v176, v174, v178);
      swift_release();
      sub_1001B7EAC(v158, type metadata accessor for UpdateTrustRequest);

      sub_1001B7EAC((uint64_t)v244, type metadata accessor for SignedPeerDynamicInfo);
LABEL_74:
      os_log_type_t v54 = v256;
LABEL_75:

      return;
    }
LABEL_40:

    goto LABEL_41;
  }
  id v31 = v255[0];
  uint64_t v32 = sub_100221B40();

  swift_willThrow();
  uint64_t v33 = v249;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_100222090();
  uint64_t v35 = sub_100003CC8(v34, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v244 = (uint64_t *)v35;
  id v36 = sub_100222070();
  os_log_type_t v37 = sub_1002224E0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    v255[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v253 = v32;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v39 = sub_1002222C0();
    uint64_t v253 = sub_1001BEBDC(v39, v40, (uint64_t *)v255);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "updateTrustIfNeeded: couldn't calculate dynamic info: %{public}s", v38, 0xCu);
    swift_arrayDestroy();
    uint64_t v33 = v249;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  id v41 = *(id *)&v248[v247];
  NSString v42 = sub_100222260();
  v255[0] = 0;
  uint64_t v43 = (uint64_t)[v41 statusOfPeerWithID:v42 error:v255];

  if (v255[0])
  {
    id v44 = v255[0];
    swift_willThrow();
    unint64_t v45 = v44;
    unint64_t v46 = sub_100222070();
    os_log_type_t v47 = sub_100222500();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      id v49 = (void *)swift_slowAlloc();
      *(_DWORD *)id v48 = 138543362;
      unint64_t v45 = v45;
      id v50 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v255[0] = v50;
      sub_100222690();
      *id v49 = v50;

      _os_log_impl((void *)&_mh_execute_header, v46, v47, "updateTrustIfNeeded: ignoring additional error calling statusOfPeer: %{public}@", v48, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      uint64_t v33 = v249;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v46 = v45;
    }

    uint64_t v43 = 32;
  }
  id v51 = objc_allocWithZone((Class)TrustedPeersHelperPeerState);
  swift_bridgeObjectRetain();
  NSString v52 = sub_100222260();
  swift_bridgeObjectRelease();
  id v53 = [v51 initWithPeerID:v52 isPreapproved:0 status:v43 memberChanges:v246 & 1 unknownMachineIDs:0 osVersion:0 walrus:0 webAccess:0];

  swift_errorRetain();
  v33(v53, 0, v32);
  swift_errorRelease();
  swift_errorRelease();

  os_log_type_t v54 = v245;
  if (v245) {
    goto LABEL_75;
  }
}