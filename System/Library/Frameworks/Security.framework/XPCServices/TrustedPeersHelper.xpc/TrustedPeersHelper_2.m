uint64_t sub_100179B30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t updated;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a6;
  v30 = a3;
  v31 = a5;
  v9 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  v35 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  v33 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SignedPeerDynamicInfo(0);
  v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a2;
  v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "changeToken"));
  if (v17)
  {
    v18 = v17;
    v19 = sub_100222270();
    v21 = v20;
  }
  else
  {
    v19 = 0;
    v21 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  *a1 = v19;
  a1[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v31;
  a1[2] = v30;
  a1[3] = a4;
  sub_1001B7C04(v22, (uint64_t)v16, type metadata accessor for SignedPeerDynamicInfo);
  updated = type metadata accessor for UpdateTrustRequest(0);
  v24 = (uint64_t)a1 + *(int *)(updated + 40);
  sub_10004015C(v24, &qword_10029ECA0);
  sub_1001B7B9C((uint64_t)v16, v24, type metadata accessor for SignedPeerDynamicInfo);
  v25 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v12);
  __chkstk_darwin(v25, v26);
  *(&v30 - 2) = v32;
  sub_1001A56AC(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
  v27 = (uint64_t)v33;
  sub_100221F70();
  v28 = (uint64_t)a1 + *(int *)(updated + 44);
  sub_10004015C(v28, &qword_10029ED20);
  sub_1001B7B9C(v27, v28, type metadata accessor for IdmsTrustedDevicesVersion);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v28, 0, 1, v9);
}

uint64_t sub_100179E50(uint64_t a1, void *a2, void (*a3)(void, void, uint64_t), uint64_t a4, void *a5, int a6)
{
  int v53 = a6;
  v54 = a5;
  v55 = a2;
  v56 = a3;
  uint64_t v57 = a4;
  uint64_t v7 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v51 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  v13 = (char *)&v51 - v12;
  uint64_t v14 = type metadata accessor for Changes(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  v52 = (uint64_t *)((char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17, v19);
  v21 = (char *)&v51 - v20;
  uint64_t updated = type metadata accessor for UpdateTrustResponse(0);
  __chkstk_darwin(updated, v23);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000046DC((uint64_t *)&unk_10029ED10);
  __chkstk_darwin(v26, v27);
  v29 = (uint64_t *)((char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v29, (uint64_t *)&unk_10029ED10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = *v29;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_100222090();
    sub_100003CC8(v31, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    v32 = sub_100222070();
    os_log_type_t v33 = sub_100222500();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v58 = v30;
      uint64_t v59 = v35;
      *(_DWORD *)v34 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v36 = sub_1002222C0();
      uint64_t v58 = sub_1001BEBDC(v36, v37, &v59);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "UpdateTrust failed: %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v56(0, 0, v30);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    sub_1001B7B9C((uint64_t)v29, (uint64_t)v25, type metadata accessor for UpdateTrustResponse);
    uint64_t v38 = (uint64_t)&v25[*(int *)(updated + 24)];
    sub_10000D830(v38, (uint64_t)v13, (uint64_t *)&unk_10029EC90);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v39(v13, 1, v14) == 1)
    {
      *(void *)v21 = 0;
      *((void *)v21 + 1) = 0xE000000000000000;
      *((void *)v21 + 2) = _swiftEmptyArrayStorage;
      *(_OWORD *)(v21 + 24) = xmmword_100229520;
      *(_OWORD *)(v21 + 40) = xmmword_100229520;
      v21[56] = 0;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v40 = sub_10004015C((uint64_t)v13, (uint64_t *)&unk_10029EC90);
    }
    else
    {
      uint64_t v40 = sub_1001B7B9C((uint64_t)v13, (uint64_t)v21, type metadata accessor for Changes);
    }
    v43 = v55;
    __chkstk_darwin(v40, v41);
    *(&v51 - 4) = (uint64_t)v21;
    *(&v51 - 3) = (uint64_t)v43;
    *((unsigned char *)&v51 - 16) = 0;
    sub_1002225C0();
    sub_1001B7EAC((uint64_t)v21, type metadata accessor for Changes);
    uint64_t v44 = v51;
    sub_10000D830(v38, v51, (uint64_t *)&unk_10029EC90);
    if (v39((char *)v44, 1, v14) == 1)
    {
      v45 = v52;
      void *v52 = 0;
      v45[1] = 0xE000000000000000;
      v45[2] = _swiftEmptyArrayStorage;
      *(_OWORD *)(v45 + 3) = xmmword_100229520;
      *(_OWORD *)(v45 + 5) = xmmword_100229520;
      *((unsigned char *)v45 + 56) = 0;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v44, (uint64_t *)&unk_10029EC90);
    }
    else
    {
      v45 = v52;
      sub_1001B7B9C(v44, (uint64_t)v52, type metadata accessor for Changes);
    }
    int v46 = *((unsigned __int8 *)v45 + 56);
    sub_1001B7EAC((uint64_t)v45, type metadata accessor for Changes);
    if (v46 == 1)
    {
      uint64_t v47 = swift_allocObject();
      uint64_t v48 = v57;
      *(void *)(v47 + 16) = v56;
      *(void *)(v47 + 24) = v48;
      *(void *)(v47 + 32) = v43;
      v49 = v54;
      sub_1000D8B9C((uint64_t)v54, v47 + 40, &qword_10029EE00);
      *(unsigned char *)(v47 + 144) = v53 & 1;
      swift_retain();
      id v50 = v43;
      sub_1001B41A8(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
      sub_100174E30(0, (uint64_t)sub_1001B2180, v47);
      swift_release();
    }
    else
    {
      sub_100176AB0(v54, v53 & 1, (uint64_t)v56, v57);
    }
    return sub_1001B7EAC((uint64_t)v25, type metadata accessor for UpdateTrustResponse);
  }
}

void sub_10017A704(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v33 = a2;
  int v32 = a3;
  uint64_t v4 = type metadata accessor for Changes(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)&v30 - v11;
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v30 - v14;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100222090();
  uint64_t v17 = sub_100003CC8(v16, (uint64_t)qword_10029E7D0);
  sub_1001B7C04(a1, (uint64_t)v15, type metadata accessor for Changes);
  sub_1001B7C04(a1, (uint64_t)v12, type metadata accessor for Changes);
  uint64_t v18 = sub_100222070();
  os_log_type_t v19 = sub_1002224E0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (_DWORD *)swift_slowAlloc();
    uint64_t v31 = a1;
    v21 = v20;
    *uint64_t v20 = 134218240;
    uint64_t v30 = v17;
    uint64_t v22 = *(void *)(*((void *)v15 + 2) + 16);
    sub_1001B7EAC((uint64_t)v15, type metadata accessor for Changes);
    uint64_t v35 = v22;
    sub_100222690();
    *((_WORD *)v21 + 6) = 1024;
    int v23 = v12[56];
    sub_1001B7EAC((uint64_t)v12, type metadata accessor for Changes);
    LODWORD(v35) = v23;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "persist: Received %ld peer differences, more: %{BOOL}d", (uint8_t *)v21, 0x12u);
    a1 = v31;
    swift_slowDealloc();
  }
  else
  {
    sub_1001B7EAC((uint64_t)v12, type metadata accessor for Changes);
    sub_1001B7EAC((uint64_t)v15, type metadata accessor for Changes);
  }

  sub_1001B7C04(a1, (uint64_t)v8, type metadata accessor for Changes);
  uint64_t v24 = sub_100222070();
  os_log_type_t v25 = sub_1002224E0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446210;
    uint64_t v27 = (uint64_t)v8;
    uint64_t v28 = *v8;
    unint64_t v29 = v8[1];
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1001BEBDC(v28, v29, &v35);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_1001B7EAC(v27, type metadata accessor for Changes);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "persist: New change token: %{public}s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001B7EAC((uint64_t)v8, type metadata accessor for Changes);
  }

  sub_10017AB04(a1, v32 & 1);
}

void sub_10017AB04(uint64_t a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v8 = *(id *)(v4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  NSString v9 = sub_100222260();
  [v8 setChangeToken:v9];

  [*(id *)(v4 + v7) setMoreChanges:*(unsigned __int8 *)(a1 + 56)];
  if (a2) {
    [*(id *)(v4 + v7) setRefetchLevel:1];
  }
  if (!*(void *)(*(void *)(a1 + 16) + 16)) {
    goto LABEL_13;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100222090();
  sub_100003CC8(v10, (uint64_t)qword_10029E7D0);
  uint64_t v11 = sub_100222070();
  os_log_type_t v12 = sub_1002224E0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "escrow cache and viable bottles are no longer valid", v13, 2u);
    swift_slowDealloc();
  }

  sub_100154F08();
  [*(id *)(v4 + v7) setAccountSettings:0];
  [*(id *)(v4 + v7) setAccountSettingsDate:0];
  [(id)swift_getObjCClassFromMetadata() post:OTCliqueChanged];
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v16 = *(void *)(type metadata accessor for PeerDifference(0) - 8);
    uint64_t v17 = v14 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10017B164(v17, v4);
      if (v3) {
        break;
      }
      v17 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_13:
    uint64_t v19 = *(void *)(a1 + 24);
    unint64_t v20 = *(void *)(a1 + 32);
    uint64_t v21 = *(void *)(a1 + 40);
    unint64_t v22 = *(void *)(a1 + 48);
    switch(v20 >> 62)
    {
      case 1uLL:
        if ((int)v19 != v19 >> 32) {
          goto LABEL_19;
        }
        break;
      case 2uLL:
        if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
          goto LABEL_19;
        }
        break;
      case 3uLL:
        break;
      default:
        if ((v20 & 0xFF000000000000) != 0)
        {
LABEL_19:
          switch(v22 >> 62)
          {
            case 1uLL:
              if ((int)v21 != v21 >> 32) {
                goto LABEL_26;
              }
              break;
            case 2uLL:
              if (*(void *)(v21 + 16) != *(void *)(v21 + 24)) {
                goto LABEL_26;
              }
              break;
            case 3uLL:
              goto LABEL_27;
            default:
              if ((v22 & 0xFF000000000000) != 0) {
LABEL_26:
              }
                sub_10017C248(v19, v20, v21, v22);
              break;
          }
        }
        break;
    }
LABEL_27:
    int v23 = *(void **)(v4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    id v45 = 0;
    unsigned int v24 = objc_msgSend(v23, "save:", &v45, v22);
    id v25 = v45;
    if (v24)
    {
      if (*(unsigned char *)(a1 + 56))
      {
        id v26 = v45;
      }
      else
      {
        uint64_t v28 = *(void **)(v4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
        id v45 = 0;
        id v29 = v25;
        id v30 = [v28 peerCountWithError:&v45];
        if (v45)
        {
          id v31 = v45;
          swift_willThrow();
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_100222090();
          sub_100003CC8(v32, (uint64_t)qword_10029E7D0);
          id v33 = v31;
          uint64_t v34 = sub_100222070();
          os_log_type_t v35 = sub_100222500();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = (uint8_t *)swift_slowAlloc();
            unint64_t v37 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v36 = 138543362;
            id v38 = v33;
            v39 = (void *)_swift_stdlib_bridgeErrorToNSError();
            id v45 = v39;
            sub_100222690();
            *unint64_t v37 = v39;

            _os_log_impl((void *)&_mh_execute_header, v34, v35, "Error getting peerCount: %{public}@", v36, 0xCu);
            sub_1000046DC(&qword_100298F90);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
        }
        else
        {
          uint64_t v40 = v30;
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v41 = sub_100222090();
          sub_100003CC8(v41, (uint64_t)qword_10029E7D0);
          v42 = sub_100222070();
          os_log_type_t v43 = sub_1002224E0();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v44 = 134217984;
            id v45 = v40;
            sub_100222690();
            _os_log_impl((void *)&_mh_execute_header, v42, v43, "Currently know about %lu peers", v44, 0xCu);
            swift_slowDealloc();
          }
        }
      }
    }
    else
    {
      id v27 = v45;
      sub_100221B40();

      swift_willThrow();
    }
  }
}

uint64_t sub_10017B164(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  uint64_t v2 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v88 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v89 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v5);
  uint64_t v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Peer(0);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  os_log_type_t v12 = (uint64_t *)((char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v84 - v14;
  uint64_t v16 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  id v25 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v26);
  uint64_t v28 = (char *)&v84 - v27;
  sub_10000D830(v91, (uint64_t)v19, &qword_100299658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1) {
    return sub_10004015C((uint64_t)v19, &qword_100299658);
  }
  uint64_t v91 = v8;
  v86 = v7;
  sub_1001B7B9C((uint64_t)v19, (uint64_t)v28, type metadata accessor for PeerDifference.OneOf_Operation);
  sub_1001B7C04((uint64_t)v28, (uint64_t)v25, type metadata accessor for PeerDifference.OneOf_Operation);
  id v30 = v28;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1001B7B9C((uint64_t)v25, (uint64_t)v12, type metadata accessor for Peer);
    uint64_t v32 = *v12;
    uint64_t v31 = v12[1];
    uint64_t v33 = v90;
    uint64_t v34 = *(void *)(v90 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_dbAdapter);
    uint64_t v35 = *(void *)(v34 + 16);
    uint64_t v36 = *(void **)(v34 + 24);
    swift_retain();
    uint64_t v37 = v32;
    uint64_t v38 = v92;
    v39 = (void *)sub_1001A0BC8(v35, v36, v37, v31);
    swift_release();
    if (!v38)
    {
      if (v39)
      {
        [*(id *)(v33 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc) deleteObject:v39];
      }
    }
    sub_1001B7EAC((uint64_t)v28, type metadata accessor for PeerDifference.OneOf_Operation);
    uint64_t v40 = type metadata accessor for Peer;
    uint64_t v41 = (uint64_t)v12;
    return sub_1001B7EAC(v41, v40);
  }
  v42 = (uint64_t *)v15;
  sub_1001B7B9C((uint64_t)v25, (uint64_t)v15, type metadata accessor for Peer);
  os_log_type_t v43 = (uint64_t *)v15;
  uint64_t v44 = v90;
  uint64_t v45 = v92;
  sub_10017CA14(v43);
  if (v45)
  {
LABEL_9:
    sub_1001B7EAC((uint64_t)v42, type metadata accessor for Peer);
    uint64_t v40 = type metadata accessor for PeerDifference.OneOf_Operation;
    uint64_t v41 = (uint64_t)v30;
    return sub_1001B7EAC(v41, v40);
  }
  uint64_t v47 = *v42;
  uint64_t v46 = v42[1];
  uint64_t v48 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  v49 = *(void **)(v44 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  swift_bridgeObjectRetain();
  id v50 = [v49 egoPeerID];
  if (!v50)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v51 = v50;
  uint64_t v85 = v48;
  uint64_t v52 = sub_100222270();
  uint64_t v54 = v53;

  if (v47 == v52 && v46 == v54)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v55 = v89;
    uint64_t v56 = v91;
  }
  else
  {
    char v57 = sub_100222A30();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = v89;
    uint64_t v56 = v91;
    if ((v57 & 1) == 0) {
      goto LABEL_9;
    }
  }
  uint64_t v58 = v88;
  sub_10000D830((uint64_t)v42 + *(int *)(v56 + 32), v88, &qword_100299F18);
  int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v58, 1, v87);
  uint64_t v92 = 0;
  uint64_t v60 = (uint64_t)v30;
  v61 = v86;
  if (v59 == 1)
  {
    _OWORD *v86 = xmmword_100229520;
    v61[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v58, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C(v58, (uint64_t)v86, type metadata accessor for SignedPeerStableInfo);
  }
  sub_1001B7EAC((uint64_t)v42, type metadata accessor for Peer);
  uint64_t v62 = *(void *)v61;
  unint64_t v63 = *((void *)v61 + 1);
  uint64_t v64 = *((void *)v61 + 2);
  unint64_t v65 = *((void *)v61 + 3);
  id v66 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v62, v63);
  sub_1000059E8(v64, v65);
  Class isa = sub_100221BD0().super.isa;
  Class v68 = sub_100221BD0().super.isa;
  id v69 = [v66 initWithData:isa sig:v68];
  sub_100005A40(v64, v65);
  sub_100005A40(v62, v63);

  sub_1001B7EAC((uint64_t)v61, type metadata accessor for SignedPeerStableInfo);
  if (v69)
  {
    uint64_t v70 = v90;
    uint64_t v71 = v85;
    id v72 = *(id *)(v90 + v85);
    id v73 = [v69 data];
    uint64_t v74 = sub_100221BF0();
    unint64_t v76 = v75;

    Class v77 = sub_100221BD0().super.isa;
    sub_100005A40(v74, v76);
    [v72 setEgoPeerStableInfo:v77];

    id v78 = *(id *)(v70 + v71);
    id v79 = [v69 sig];
    uint64_t v80 = sub_100221BF0();
    unint64_t v82 = v81;

    Class v83 = sub_100221BD0().super.isa;
    sub_100005A40(v80, v82);
    [v78 setEgoPeerStableInfoSig:v83];
  }
  return sub_1001B7EAC(v60, type metadata accessor for PeerDifference.OneOf_Operation);
}

void sub_10017B8E4()
{
  uint64_t v1 = v0;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100222090();
  sub_100003CC8(v2, (uint64_t)qword_10029E7D0);
  uint64_t v3 = sub_100222070();
  os_log_type_t v4 = sub_1002224E0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Deleting all CloudKit data", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = sub_100222260();
  id v8 = [v6 initWithEntityName:v7];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100229540;
  uint64_t v10 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  uint64_t v12 = type metadata accessor for ContainerMO();
  *(void *)(v9 + 56) = v12;
  uint64_t v13 = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v9 + 64) = v13;
  *(void *)(v9 + 32) = v11;
  id v14 = v11;
  uint64_t v15 = (void *)sub_1002224C0();
  [v8 setPredicate:v15];

  [v8 setResultType:1];
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v73 = v8;
  id v17 = [objc_allocWithZone((Class)NSBatchDeleteRequest) initWithFetchRequest:v8];
  id v74 = 0;
  id v72 = v16;
  id v18 = [v16 executeRequest:v17 error:&v74];

  if (!v18) {
    goto LABEL_17;
  }
  id v19 = v74;

  id v20 = [*(id *)(v1 + v10) egoPeerID];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_100222270();
    uint64_t v24 = v23;

    id v25 = [*(id *)(v1 + v10) bottles];
    if (v25)
    {
      id v26 = v25;
      sub_1001AB654(v26, v22, v24);
      swift_bridgeObjectRelease();
      id v27 = objc_allocWithZone((Class)NSSet);
      Class isa = sub_1002223B0().super.isa;
      swift_bridgeObjectRelease();
      id v29 = [v27 initWithArray:isa];

      [*(id *)(v1 + v10) removeBottles:v29];
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  id v30 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v31 = sub_100222260();
  id v29 = [v30 initWithEntityName:v31];

  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100229540;
  uint64_t v33 = *(void **)(v1 + v10);
  *(void *)(v32 + 56) = v12;
  *(void *)(v32 + 64) = v13;
  *(void *)(v32 + 32) = v33;
  id v34 = v33;
  uint64_t v35 = (void *)sub_1002224C0();
  [v29 setPredicate:v35];

  uint64_t v36 = v73;
  [v73 setResultType:1];
  id v37 = [objc_allocWithZone((Class)NSBatchDeleteRequest) initWithFetchRequest:v29];
  id v74 = 0;
  id v38 = [v72 executeRequest:v37 error:&v74];

  if (!v38)
  {
    id v67 = v74;
    sub_100221B40();

    swift_willThrow();
    goto LABEL_18;
  }
  id v39 = v74;

  [*(id *)(v1 + v10) setBottles:0];
LABEL_13:

  [*(id *)(v1 + v10) setPeers:0];
  [*(id *)(v1 + v10) setChangeToken:0];
  [*(id *)(v1 + v10) setMoreChanges:0];
  uint64_t v40 = *(void **)(v1 + v10);
  uint64_t v41 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_dbAdapter;
  id v42 = v40;
  swift_retain();
  uint64_t v43 = sub_10011A0E0();
  unint64_t v45 = v44;
  swift_release();
  uint64_t v46 = sub_1001A2C34(v72, v42, v43, v45);
  uint64_t v48 = v47;
  sub_100039FCC(v43, v45);

  uint64_t v49 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v50 = *(void **)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  *(void *)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model) = v46;

  *(void *)(v1 + v41) = v48;
  swift_release();
  id v74 = 0;
  if (![v72 save:&v74])
  {
LABEL_17:
    id v62 = v74;
    sub_100221B40();

    swift_willThrow();
    uint64_t v36 = v73;
LABEL_18:

    swift_errorRetain();
    swift_errorRetain();
    uint64_t v56 = sub_100222070();
    os_log_type_t v63 = sub_100222500();
    if (!os_log_type_enabled(v56, v63))
    {
      swift_errorRelease();
      swift_errorRelease();
      goto LABEL_22;
    }
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    id v74 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = 136446210;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v65 = sub_1002222C0();
    sub_1001BEBDC(v65, v66, (uint64_t *)&v74);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v56, v63, "Local delete failed: %{public}s", v64, 0xCu);
LABEL_20:
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_22:

LABEL_23:
    swift_willThrow();
    return;
  }
  id v51 = v74;

  uint64_t v52 = *(void **)(v1 + v49);
  id v74 = 0;
  id v53 = [v52 peerCountWithError:&v74];
  if (v74)
  {
    id v54 = v74;
    swift_willThrow();
    id v55 = v54;
    uint64_t v56 = sub_100222070();
    os_log_type_t v57 = sub_100222500();
    if (!os_log_type_enabled(v56, v57))
    {

      goto LABEL_23;
    }
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    int v59 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v58 = 138543362;
    id v60 = v55;
    v61 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v74 = v61;
    sub_100222690();
    *int v59 = v61;

    _os_log_impl((void *)&_mh_execute_header, v56, v57, "error getting peerCount: %{public}@", v58, 0xCu);
    sub_1000046DC(&qword_100298F90);
    goto LABEL_20;
  }
  Class v68 = v53;
  id v69 = sub_100222070();
  os_log_type_t v70 = sub_1002224E0();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v71 = 134217984;
    id v74 = v68;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "Saved model with %lu peers", v71, 0xCu);
    swift_slowDealloc();
  }
}

void sub_10017C248(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = *(void **)(v4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v10 = objc_allocWithZone((Class)TPRecoveryKeyPair);
  id v11 = v9;
  sub_1000059E8(a1, a2);
  sub_1000059E8(a3, a4);
  Class isa = sub_100221BD0().super.isa;
  Class v13 = sub_100221BD0().super.isa;
  id v14 = [v10 initWithSigningKeyData:isa encryptionKeyData:v13];
  sub_100005A40(a3, a4);
  sub_100005A40(a1, a2);

  [v11 setRecoveryKeys:v14];
  uint64_t v15 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v16 = *(id *)(v4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  Class v17 = sub_100221BD0().super.isa;
  [v16 setRecoveryKeySigningSPKI:v17];

  id v18 = *(id *)(v4 + v15);
  Class v19 = sub_100221BD0().super.isa;
  [v18 setRecoveryKeyEncryptionSPKI:v19];
}

void sub_10017C3D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Peer(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2, v4);
  id v6 = (uint64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000046DC(&qword_100299F28);
  __chkstk_darwin(v7 - 8, v8);
  id v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(int *)(v3 + 52);
  uint64_t v50 = a1;
  sub_10000D830(a1 + v16, (uint64_t)v10, &qword_100299F28);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  id v51 = v6;
  if (v17 == 1)
  {
    *(_OWORD *)uint64_t v15 = xmmword_100229520;
    *((_OWORD *)v15 + 1) = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v10, &qword_100299F28);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v10, (uint64_t)v15, type metadata accessor for SignedCustodianRecoveryKey);
  }
  uint64_t v18 = *(void *)v15;
  unint64_t v19 = *((void *)v15 + 1);
  uint64_t v21 = *((void *)v15 + 2);
  unint64_t v20 = *((void *)v15 + 3);
  id v22 = objc_allocWithZone((Class)TPECPublicKeyFactory);
  sub_1000059E8(v18, v19);
  sub_1000059E8(v21, v20);
  id v23 = [v22 init];
  Class isa = sub_100221BD0().super.isa;
  Class v25 = sub_100221BD0().super.isa;
  id v26 = [self custodianRecoveryKeyWithData:isa sig:v25 keyFactory:v23];

  sub_100005A40(v21, v20);
  sub_100005A40(v18, v19);

  sub_1001B7EAC((uint64_t)v15, type metadata accessor for SignedCustodianRecoveryKey);
  if (v26)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100222090();
    sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
    uint64_t v28 = v51;
    sub_1001B7C04(v50, (uint64_t)v51, type metadata accessor for Peer);
    id v29 = sub_100222070();
    os_log_type_t v30 = sub_1002224E0();
    if (os_log_type_enabled(v29, v30))
    {
      NSString v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)NSString v31 = 136446210;
      uint64_t v32 = *v28;
      unint64_t v33 = v28[1];
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1001BEBDC(v32, v33, &v54);
      sub_100222690();
      swift_bridgeObjectRelease();
      sub_1001B7EAC((uint64_t)v28, type metadata accessor for Peer);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Register CRK with peerID %{public}s", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001B7EAC((uint64_t)v28, type metadata accessor for Peer);
    }

    uint64_t v38 = v52;
    [*(id *)(v52 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model) registerCustodianRecoveryKey:v26];
    type metadata accessor for CustodianRecoveryKeyMO();
    uint64_t v35 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:*(void *)(v38 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc)];
    id v39 = [v26 data];
    uint64_t v40 = sub_100221BF0();
    unint64_t v42 = v41;

    Class v43 = sub_100221BD0().super.isa;
    sub_100005A40(v40, v42);
    [v35 setCrkInfo:v43];

    id v44 = [v26 sig];
    uint64_t v45 = sub_100221BF0();
    unint64_t v47 = v46;

    Class v48 = sub_100221BD0().super.isa;
    sub_100005A40(v45, v47);
    [v35 setCrkInfoSig:v48];

    [*(id *)(v38 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) addCustodianRecoveryKeysObject:v35];
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_100222090();
    sub_100003CC8(v34, (uint64_t)qword_10029E7D0);
    uint64_t v35 = sub_100222070();
    os_log_type_t v36 = sub_1002224E0();
    if (os_log_type_enabled(v35, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "failed to parse custodian recovery key", v37, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10017CA14(uint64_t *a1)
{
  v281 = (int *)type metadata accessor for Peer(0);
  uint64_t v4 = __chkstk_darwin(v281, v3);
  uint64_t v260 = (uint64_t)&v257 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  uint64_t v261 = (uint64_t)&v257 - v7;
  uint64_t v8 = sub_1000046DC(&qword_100299F28);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v267 = (uint64_t)&v257 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SignedVoucher(0);
  uint64_t v272 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8, v12);
  v282 = (uint64_t *)((char *)&v257 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v262 = (uint64_t)&v257 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v18);
  uint64_t v270 = (uint64_t)&v257 - v19;
  uint64_t v273 = type metadata accessor for SignedPeerDynamicInfo(0);
  unint64_t v275 = *(void *)(v273 - 8);
  uint64_t v21 = __chkstk_darwin(v273, v20);
  v263 = (_OWORD *)((char *)&v257 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21, v23);
  v271 = (_OWORD *)((char *)&v257 - v24);
  uint64_t v25 = sub_1000046DC(&qword_100299F18);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v265 = (uint64_t)&v257 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v268 = (uint64_t)&v257 - v30;
  uint64_t v274 = type metadata accessor for SignedPeerStableInfo(0);
  v276 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v274 - 8);
  uint64_t v32 = __chkstk_darwin(v274, v31);
  v266 = (_OWORD *)((char *)&v257 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32, v34);
  v269 = (_OWORD *)((char *)&v257 - v35);
  uint64_t v36 = sub_1000046DC(&qword_10029EF80);
  __chkstk_darwin(v36 - 8, v37);
  id v39 = (char *)&v257 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SignedPeerPermanentInfo(0);
  v277 = *(void **)(v40 - 8);
  __chkstk_darwin(v40, v41);
  Class v43 = (char *)&v257 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *a1;
  uint64_t v44 = a1[1];
  v279 = v1;
  uint64_t v280 = (uint64_t)a1;
  uint64_t v46 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  unint64_t v47 = *(void **)((char *)v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  swift_bridgeObjectRetain();
  id v48 = v47;
  NSString v49 = sub_100222260();
  uint64_t v284 = 0;
  unsigned __int8 v50 = [v48 hasPeerWithID:v49 error:&v284];

  if (v284)
  {
    (id)v284;
    swift_bridgeObjectRelease();
LABEL_3:
    swift_willThrow();
    return;
  }
  id v51 = v277;
  uint64_t v258 = v46;
  uint64_t v259 = v45;
  uint64_t v264 = v44;
  if ((v50 & 1) == 0)
  {
    sub_10000D830(v280 + v281[7], (uint64_t)v39, &qword_10029EF80);
    uint64_t v64 = (uint64_t)v43;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v51[6])(v39, 1, v40) == 1)
    {
      *(_OWORD *)Class v43 = xmmword_100229520;
      *((_OWORD *)v43 + 1) = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C((uint64_t)v39, &qword_10029EF80);
    }
    else
    {
      sub_1001B7B9C((uint64_t)v39, (uint64_t)v43, type metadata accessor for SignedPeerPermanentInfo);
    }
    uint64_t v65 = *(void **)v43;
    unint64_t v66 = *((void *)v43 + 1);
    uint64_t v68 = *(void *)(v64 + 16);
    unint64_t v67 = *(void *)(v64 + 24);
    id v69 = objc_allocWithZone((Class)TPECPublicKeyFactory);
    swift_bridgeObjectRetain();
    v277 = v65;
    sub_1000059E8((uint64_t)v65, v66);
    sub_1000059E8(v68, v67);
    id v70 = [v69 init];
    NSString v71 = sub_100222260();
    swift_bridgeObjectRelease();
    Class isa = sub_100221BD0().super.isa;
    Class v73 = sub_100221BD0().super.isa;
    id v74 = [self permanentInfoWithPeerID:v71 data:isa sig:v73 keyFactory:v70];

    sub_100005A40(v68, v67);
    sub_100005A40((uint64_t)v277, v66);

    sub_1001B7EAC(v64, type metadata accessor for SignedPeerPermanentInfo);
    if (!v74)
    {
      swift_bridgeObjectRelease();
      uint64_t v83 = v280;
      uint64_t v84 = v267;
      sub_10000D830(v280 + v281[11], v267, &qword_100299F28);
      uint64_t v85 = type metadata accessor for SignedCustodianRecoveryKey(0);
      int v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v84, 1, v85);
      sub_10004015C(v84, &qword_100299F28);
      if (v86 != 1)
      {
        if (*((unsigned char *)v279 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_testIgnoreCustodianUpdates) == 1)
        {
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v87 = sub_100222090();
          sub_100003CC8(v87, (uint64_t)qword_10029E7D0);
          uint64_t v88 = v261;
          sub_1001B7C04(v83, v261, type metadata accessor for Peer);
          uint64_t v89 = sub_100222070();
          os_log_type_t v90 = sub_1002224E0();
          if (os_log_type_enabled(v89, v90))
          {
            uint64_t v91 = (uint8_t *)swift_slowAlloc();
            uint64_t v284 = swift_slowAlloc();
            *(_DWORD *)uint64_t v91 = 136446210;
            sub_1001B7C04(v88, v260, type metadata accessor for Peer);
            uint64_t v92 = sub_1002222C0();
            uint64_t v283 = sub_1001BEBDC(v92, v93, &v284);
            sub_100222690();
            swift_bridgeObjectRelease();
            sub_1001B7EAC(v88, type metadata accessor for Peer);
            _os_log_impl((void *)&_mh_execute_header, v89, v90, "Ignoring Custodian update due to test request: %{public}s", v91, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_1001B7EAC(v88, type metadata accessor for Peer);
          }
        }
        else
        {
          sub_10017C3D8(v83);
        }
      }
      return;
    }
    unint64_t v75 = v281;
    uint64_t v76 = v268;
    sub_10000D830(v280 + v281[8], v268, &qword_100299F18);
    int v77 = v276[6](v76, 1, v274);
    v266 = v74;
    id v78 = v269;
    if (v77 == 1)
    {
      _OWORD *v269 = xmmword_100229520;
      v78[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v76, &qword_100299F18);
    }
    else
    {
      sub_1001B7B9C(v76, (uint64_t)v269, type metadata accessor for SignedPeerStableInfo);
    }
    uint64_t v94 = *(void *)v78;
    unint64_t v95 = *((void *)v78 + 1);
    uint64_t v96 = *((void *)v78 + 2);
    unint64_t v97 = *((void *)v78 + 3);
    id v98 = objc_allocWithZone((Class)TPPeerStableInfo);
    sub_1000059E8(v94, v95);
    sub_1000059E8(v96, v97);
    Class v99 = sub_100221BD0().super.isa;
    Class v100 = sub_100221BD0().super.isa;
    v276 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))[v98 initWithData:v99 sig:v100];
    sub_100005A40(v96, v97);
    sub_100005A40(v94, v95);

    sub_1001B7EAC((uint64_t)v78, type metadata accessor for SignedPeerStableInfo);
    v101 = (void *)v280;
    uint64_t v102 = v270;
    sub_10000D830(v280 + v75[9], v270, &qword_10029ECA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v275 + 48))(v102, 1, v273) == 1)
    {
      v103 = v271;
      _OWORD *v271 = xmmword_100229520;
      v103[1] = xmmword_100229520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v102, &qword_10029ECA0);
    }
    else
    {
      v103 = v271;
      sub_1001B7B9C(v102, (uint64_t)v271, type metadata accessor for SignedPeerDynamicInfo);
    }
    uint64_t v104 = *(void *)v103;
    unint64_t v105 = *((void *)v103 + 1);
    uint64_t v106 = *((void *)v103 + 2);
    unint64_t v107 = *((void *)v103 + 3);
    sub_1000059E8(*(void *)v103, v105);
    sub_1000059E8(v106, v107);
    Class v108 = sub_100221BD0().super.isa;
    Class v109 = sub_100221BD0().super.isa;
    v277 = [self dynamicInfoWithData:v108 sig:v109];
    sub_100005A40(v106, v107);
    sub_100005A40(v104, v105);

    sub_1001B7EAC((uint64_t)v103, type metadata accessor for SignedPeerDynamicInfo);
    unint64_t v110 = v101[2];
    uint64_t v284 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v111 = *(void *)(v110 + 16);
    if (v111)
    {
      v112 = (int *)self;
      uint64_t v113 = v110 + ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80));
      uint64_t v280 = *(void *)(v272 + 72);
      v281 = v112;
      unint64_t v275 = v110;
      swift_bridgeObjectRetain_n();
      v114 = v282;
      do
      {
        sub_1001B7C04(v113, (uint64_t)v114, type metadata accessor for SignedVoucher);
        uint64_t v115 = *v114;
        unint64_t v116 = v114[1];
        uint64_t v117 = v114[2];
        unint64_t v118 = v114[3];
        sub_1000059E8(*v114, v116);
        sub_1000059E8(v117, v118);
        Class v119 = sub_100221BD0().super.isa;
        Class v120 = sub_100221BD0().super.isa;
        id v121 = [v281 voucherInfoWithData:v119 sig:v120];
        sub_100005A40(v117, v118);
        sub_100005A40(v115, v116);

        v114 = v282;
        sub_1001B7EAC((uint64_t)v282, type metadata accessor for SignedVoucher);
        if (v121)
        {
          sub_1002223A0();
          if (*(void *)((v284 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v284 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1002223F0();
          }
          sub_100222410();
          sub_1002223E0();
        }
        v113 += v280;
        --v111;
      }
      while (v111);
      swift_bridgeObjectRelease();
      v122 = (void *)v284;
    }
    else
    {
      swift_bridgeObjectRetain();
      v122 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    id v123 = [*(id *)((char *)v279 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) egoPeerID];
    uint64_t v124 = v264;
    uint64_t v125 = v259;
    if (v123)
    {
      v126 = v123;
      uint64_t v127 = sub_100222270();
      uint64_t v129 = v128;

      if (v125 == v127 && v124 == v129) {
        char v130 = 1;
      }
      else {
        char v130 = sub_100222A30();
      }
      v131 = v276;
      swift_bridgeObjectRelease();
    }
    else
    {
      char v130 = 0;
      v131 = v276;
    }
    swift_bridgeObjectRelease();
    id v132 = objc_allocWithZone((Class)TPPeer);
    uint64_t v284 = 0;
    v133 = v266;
    v134 = v131;
    v135 = v277;
    id v136 = [v132 initWithPermanentInfo:v133 stableInfo:v134 dynamicInfo:v135 error:&v284];
    if (v136)
    {
      v137 = v136;
      id v138 = (id)v284;

      sub_10015D4A0(v137, (unint64_t)v122, v130 & 1);
      swift_bridgeObjectRelease();
      return;
    }
    id v139 = (id)v284;
    sub_100221B40();

    swift_willThrow();
    swift_bridgeObjectRelease();

    goto LABEL_47;
  }
  uint64_t v52 = (_OWORD *)OBJC_IVAR____TtC18TrustedPeersHelper9Container_dbAdapter;
  uint64_t v53 = *(void *)((char *)v279 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_dbAdapter);
  uint64_t v55 = *(void *)(v53 + 16);
  uint64_t v54 = *(void **)(v53 + 24);
  swift_retain();
  uint64_t v56 = v55;
  os_log_type_t v57 = v54;
  uint64_t v58 = v259;
  uint64_t v59 = v264;
  uint64_t v60 = v278;
  unint64_t v61 = sub_1001A0BC8(v56, v57, v259, v264);
  id v62 = v281;
  os_log_type_t v63 = v276;
  if (v60)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  uint64_t v79 = v61;
  swift_release();
  if (!v79)
  {
    sub_100042D4C();
    swift_allocError();
    *(void *)uint64_t v140 = v58;
    *(void *)(v140 + 8) = v59;
    *(unsigned char *)(v140 + 16) = 8;
    goto LABEL_3;
  }
  v282 = (uint64_t *)v79;
  uint64_t v80 = v265;
  sub_10000D830(v280 + v62[8], v265, &qword_100299F18);
  int v81 = v63[6](v80, 1, v274);
  uint64_t v278 = 0;
  v271 = v52;
  uint64_t v82 = (uint64_t)v266;
  if (v81 == 1)
  {
    _OWORD *v266 = xmmword_100229520;
    *(_OWORD *)(v82 + 16) = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v80, &qword_100299F18);
  }
  else
  {
    sub_1001B7B9C(v80, (uint64_t)v266, type metadata accessor for SignedPeerStableInfo);
  }
  uint64_t v141 = *(void *)v82;
  unint64_t v142 = *(void *)(v82 + 8);
  uint64_t v143 = *(void *)(v82 + 16);
  unint64_t v144 = *(void *)(v82 + 24);
  id v145 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v141, v142);
  sub_1000059E8(v143, v144);
  Class v146 = sub_100221BD0().super.isa;
  Class v147 = sub_100221BD0().super.isa;
  v148 = [v145 initWithData:v146 sig:v147];
  sub_100005A40(v143, v144);
  sub_100005A40(v141, v142);

  sub_1001B7EAC(v82, type metadata accessor for SignedPeerStableInfo);
  v149 = (char *)v279;
  unint64_t v150 = v275;
  v151 = v282;
  v277 = v148;
  if (v148)
  {
    id v152 = *(id *)((char *)v279 + v258);
    v135 = v148;
    NSString v153 = sub_100222260();
    uint64_t v284 = 0;
    id v154 = [v152 copyPeerWithNewStableInfo:v135 forPeerWithID:v153 error:&v284];

    if (v154)
    {
      id v155 = (id)v284;
      v156 = (objc_class *)[v154 stableInfo];
      Class v157 = v156;
      if (v156)
      {
        id v158 = [(objc_class *)v156 data];

        uint64_t v159 = sub_100221BF0();
        unint64_t v161 = v160;

        Class v157 = sub_100221BD0().super.isa;
        sub_100005A40(v159, v161);
      }
      [v151 setStableInfo:v157];

      v162 = (objc_class *)[v154 stableInfo];
      Class v163 = v162;
      if (v162)
      {
        id v164 = [(objc_class *)v162 sig];

        uint64_t v165 = sub_100221BF0();
        unint64_t v167 = v166;

        Class v163 = sub_100221BD0().super.isa;
        sub_100005A40(v165, v167);
      }
      unint64_t v150 = v275;
      [v151 setStableInfoSig:v163];

      goto LABEL_57;
    }
    id v231 = (id)v284;
    swift_bridgeObjectRelease();
    sub_100221B40();

    swift_willThrow();
LABEL_47:

    return;
  }
LABEL_57:
  uint64_t v168 = v262;
  sub_10000D830(v280 + v281[9], v262, &qword_10029ECA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v168, 1, v273) == 1)
  {
    v169 = v263;
    _OWORD *v263 = xmmword_100229520;
    v169[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C(v168, &qword_10029ECA0);
  }
  else
  {
    v169 = v263;
    sub_1001B7B9C(v168, (uint64_t)v263, type metadata accessor for SignedPeerDynamicInfo);
  }
  uint64_t v170 = *(void *)v169;
  unint64_t v171 = *((void *)v169 + 1);
  uint64_t v172 = *((void *)v169 + 2);
  unint64_t v173 = *((void *)v169 + 3);
  sub_1000059E8(*(void *)v169, v171);
  sub_1000059E8(v172, v173);
  Class v174 = sub_100221BD0().super.isa;
  Class v175 = sub_100221BD0().super.isa;
  v176 = (int *)[self dynamicInfoWithData:v174 sig:v175];
  sub_100005A40(v172, v173);
  sub_100005A40(v170, v171);

  sub_1001B7EAC((uint64_t)v169, type metadata accessor for SignedPeerDynamicInfo);
  uint64_t v177 = v278;
  uint64_t v178 = v272;
  v281 = v176;
  v179 = v282;
  if (v176)
  {
    id v180 = *(id *)&v149[v258];
    v181 = v281;
    NSString v182 = sub_100222260();
    uint64_t v284 = 0;
    id v183 = [v180 copyPeerWithNewDynamicInfo:v181 forPeerWithID:v182 error:&v284];

    if (!v183)
    {
      id v232 = (id)v284;
      swift_bridgeObjectRelease();
      sub_100221B40();

      swift_willThrow();
LABEL_87:

      return;
    }
    uint64_t v184 = v177;
    id v185 = (id)v284;
    v186 = (objc_class *)[v183 dynamicInfo];
    Class v187 = v186;
    if (v186)
    {
      id v188 = [(objc_class *)v186 data];

      uint64_t v189 = sub_100221BF0();
      unint64_t v191 = v190;

      Class v187 = sub_100221BD0().super.isa;
      sub_100005A40(v189, v191);
    }
    [v179 setDynamicInfo:v187];

    v192 = (objc_class *)[v183 dynamicInfo];
    Class v193 = v192;
    if (v192)
    {
      id v194 = [(objc_class *)v192 sig];

      uint64_t v195 = sub_100221BF0();
      unint64_t v197 = v196;

      Class v193 = sub_100221BD0().super.isa;
      sub_100005A40(v195, v197);
    }
    uint64_t v177 = v184;
    v149 = (char *)v279;
    uint64_t v178 = v272;
    [v179 setDynamicInfoSig:v193];
  }
  uint64_t v198 = *(void *)(v280 + 16);
  uint64_t v199 = *(void *)(v198 + 16);
  if (v199)
  {
    v200 = (uint64_t *)(v198
                     + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80)));
    uint64_t v201 = *(void *)(v178 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10017EA0C(v200, v179, (uint64_t)v149);
      v200 = (uint64_t *)((char *)v200 + v201);
      --v199;
    }
    while (v199);
    swift_bridgeObjectRelease();
  }
  id v202 = [v179 permanentInfo];
  unint64_t v203 = v264;
  if (!v202)
  {
LABEL_82:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v233 = sub_100222090();
    sub_100003CC8(v233, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    v234 = sub_100222070();
    os_log_type_t v235 = sub_100222500();
    if (os_log_type_enabled(v234, v235))
    {
      v236 = (uint8_t *)swift_slowAlloc();
      uint64_t v284 = swift_slowAlloc();
      *(_DWORD *)v236 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v283 = sub_1001BEBDC(v259, v203, &v284);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v234, v235, "addOrUpdate peer %{public}s has no/incomplete permanent info/sig", v236, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_87;
  }
  v204 = v202;
  uint64_t v205 = sub_100221BF0();
  unint64_t v207 = v206;

  id v208 = [v179 permanentInfoSig];
  if (!v208)
  {
    sub_100005A40(v205, v207);
    goto LABEL_82;
  }
  v209 = v208;
  uint64_t v210 = sub_100221BF0();
  unint64_t v212 = v211;

  uint64_t v280 = (uint64_t)[objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  swift_bridgeObjectRetain();
  sub_1000059E8(v205, v207);
  sub_1000059E8(v210, v212);
  NSString v213 = sub_100222260();
  swift_bridgeObjectRelease();
  uint64_t v214 = v205;
  Class v215 = sub_100221BD0().super.isa;
  v216.super.Class isa = sub_100221BD0().super.isa;
  v276 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v207;
  Class v217 = v216.super.isa;
  id v218 = [self permanentInfoWithPeerID:v213 data:v215 sig:v216.super.isa keyFactory:v280];
  uint64_t v273 = v210;
  uint64_t v219 = v210;
  unint64_t v220 = (unint64_t)v276;
  unint64_t v275 = v212;
  sub_100005A40(v219, v212);
  uint64_t v274 = v214;
  sub_100005A40(v214, v220);

  if (!v218)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v237 = sub_100222090();
    sub_100003CC8(v237, (uint64_t)qword_10029E7D0);
    unint64_t v238 = v264;
    swift_bridgeObjectRetain();
    v239 = sub_100222070();
    os_log_type_t v240 = sub_100222500();
    if (os_log_type_enabled(v239, v240))
    {
      uint64_t v278 = v177;
      v241 = (uint8_t *)swift_slowAlloc();
      uint64_t v284 = swift_slowAlloc();
      *(_DWORD *)v241 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v283 = sub_1001BEBDC(v259, v238, &v284);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v239, v240, "Couldn't parse peer identity: %{public}s", v241, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100005A40(v273, v275);
      sub_100005A40(v274, v220);

      return;
    }

    sub_100005A40(v274, v220);
    sub_100005A40(v273, v275);

    swift_bridgeObjectRelease_n();
LABEL_98:

    return;
  }
  id v221 = objc_allocWithZone((Class)TPPeer);
  uint64_t v284 = 0;
  v222 = v277;
  v223 = v281;
  id v224 = v218;
  id v225 = [v221 initWithPermanentInfo:v224 stableInfo:v222 dynamicInfo:v223 error:&v284];
  if (v225)
  {
    v226 = v225;
    id v227 = (id)v284;
    swift_bridgeObjectRelease();

    swift_retain();
    uint64_t v228 = sub_10011A0E0();
    unint64_t v230 = v229;
    swift_release();
    if (v230 >> 60 != 15)
    {
      Class v249 = sub_100221BD0().super.isa;
      id v250 = [v226 calculateHmacWithHmacKey:v249];
      v279 = (int *)v224;
      v281 = (int *)v222;
      id v251 = v250;

      uint64_t v252 = sub_100221BF0();
      v253 = v223;
      unint64_t v255 = v254;

      Class v256 = sub_100221BD0().super.isa;
      sub_100005A40(v252, v255);
      [v179 setHmacSig:v256];

      sub_100005A40(v274, (unint64_t)v276);
      sub_100005A40(v273, v275);

      sub_100039FCC(v228, v230);
      return;
    }
    [v179 setHmacSig:0];

    sub_100005A40(v274, (unint64_t)v276);
    sub_100005A40(v273, v275);

    goto LABEL_98;
  }
  id v242 = (id)v284;
  sub_100221B40();

  swift_willThrow();
  v279 = v223;

  unint64_t v243 = v264;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v244 = sub_100222090();
  sub_100003CC8(v244, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  v245 = sub_100222070();
  os_log_type_t v246 = sub_100222500();
  if (os_log_type_enabled(v245, v246))
  {
    uint64_t v247 = swift_slowAlloc();
    v277 = (void *)swift_slowAlloc();
    uint64_t v278 = swift_slowAlloc();
    uint64_t v284 = v278;
    *(_DWORD *)uint64_t v247 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v283 = sub_1001BEBDC(v259, v243, &v284);
    v281 = (int *)v222;
    sub_100222690();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v247 + 12) = 2112;
    swift_errorRetain();
    uint64_t v248 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v283 = v248;
    sub_100222690();
    void *v277 = v248;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v245, v246, "failed to construct peer for %{public}s: %@", (uint8_t *)v247, 0x16u);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    sub_100005A40(v273, v275);
    sub_100005A40(v274, (unint64_t)v276);
  }
  else
  {

    sub_100005A40(v274, (unint64_t)v276);
    sub_100005A40(v273, v275);

    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_10017EA0C(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  sub_1000059E8(*a1, v5);
  sub_1000059E8(v6, v7);
  Class isa = sub_100221BD0().super.isa;
  Class v9 = sub_100221BD0().super.isa;
  id v10 = [self voucherInfoWithData:isa sig:v9];
  sub_100005A40(v6, v7);
  sub_100005A40(v4, v5);

  if (v10)
  {
    id v11 = [a2 vouchers];
    uint64_t v12 = a2;
    if (v11)
    {
      uint64_t v13 = v11;
      type metadata accessor for VoucherMO();
      sub_1001A56AC(&qword_10029EF88, (void (*)(uint64_t))type metadata accessor for VoucherMO);
      sub_100222430();
    }
    swift_bridgeObjectRelease();
    id v14 = v10;
    sub_1001A5E08((uint64_t)&_swiftEmptySetSingleton, v14);
    char v16 = v15;
    swift_bridgeObjectRelease();

    if ((v16 & 1) == 0)
    {
      type metadata accessor for VoucherMO();
      id v17 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:*(void *)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc)];
      id v18 = [v14 data];
      uint64_t v19 = sub_100221BF0();
      unint64_t v21 = v20;

      Class v22 = sub_100221BD0().super.isa;
      sub_100005A40(v19, v21);
      [v17 setVoucherInfo:v22];

      id v23 = [v14 sig];
      uint64_t v24 = sub_100221BF0();
      unint64_t v26 = v25;

      Class v27 = sub_100221BD0().super.isa;
      sub_100005A40(v24, v26);
      [v17 setVoucherInfoSig:v27];

      [v12 addVouchersObject:v17];
    }
  }
}

void *sub_10017ECC4(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v8 = 0;
  id v4 = [v3 policyWithVersion:a1 error:&v8];
  unint64_t v5 = v4;
  if (v8)
  {
    v8;

LABEL_3:
    swift_willThrow();
    return v5;
  }
  if (!v4)
  {
    sub_100042D4C();
    swift_allocError();
    *(void *)uint64_t v7 = a1;
    *(void *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 16) = 1;
    goto LABEL_3;
  }
  if (qword_100298BA8 != -1) {
    swift_once();
  }
  [(id)qword_1002A0260 versionNumber];
  return v5;
}

uint64_t sub_10017EDF4(char *a1, void *a2, objc_class *a3, void *a4, uint64_t a5, void *a6)
{
  v209 = a6;
  uint64_t v200 = a5;
  unint64_t v211 = a1;
  sub_1000D8B9C((uint64_t)a1, (uint64_t)v221, &qword_10029EE00);
  uint64_t v199 = v221[1];
  id v203 = (id)v221[10];
  v204 = (void *)v221[0];
  uint64_t v10 = sub_100222090();
  uint64_t v201 = *(void *)(v10 - 8);
  uint64_t v202 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v205 = (char *)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SignedVoucher(0);
  id v218 = *(void **)(v13 - 8);
  __chkstk_darwin(v13 - 8, v14);
  NSData v216 = (uint64_t *)((char *)&v196 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  NSString v213 = v6;
  Class v208 = (Class)OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v16 = *(id *)&v6[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  id v17 = [a4 includedPeerIDs];
  sub_100222440();

  v18.super.Class isa = sub_100222420().super.isa;
  swift_bridgeObjectRelease();
  id v207 = a2;
  NSString v19 = [a2 peerID];
  if (!v19)
  {
    sub_100222270();
    NSString v19 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  unint64_t v220 = 0;
  unint64_t v20 = (uint64_t *)[v16 policyForPeerIDs:v18.super.isa candidatePeerID:v19 candidateStableInfo:a3 error:&v220];

  id v21 = (id)v220;
  Class v212 = a3;
  if (v20)
  {
    Class v22 = v20;
  }
  else
  {
    id v23 = v21;
    sub_100221B40();

    swift_willThrow();
    a3 = v212;
    swift_errorRelease();
    Class v22 = 0;
    uint64_t v210 = 0;
  }
  uint64_t v24 = (uint64_t)v211;
  unint64_t v25 = v213;
  unint64_t v26 = v209;
  sub_1000D8B9C((uint64_t)v211, (uint64_t)v237, &qword_10029EE00);
  if (v238 != 1 && (v240 & 1) == 0)
  {
    id v206 = v239;
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_12;
  }
  Class v27 = *(void **)&v25[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride];
  if (!v27)
  {
    uint64_t v41 = v20;
    if (a3)
    {
      id v42 = [(objc_class *)a3 bestPolicyVersion];
      id v43 = [v42 versionNumber];

      if (v22)
      {
LABEL_22:
        id v44 = [v22 version];
        id v45 = [v44 versionNumber];

        goto LABEL_33;
      }
    }
    else
    {
      if (qword_100298BA8 != -1) {
        swift_once();
      }
      id v43 = [(id)qword_1002A0260 versionNumber];
      if (v22) {
        goto LABEL_22;
      }
    }
    if (qword_100298BA8 != -1) {
      swift_once();
    }
    id v45 = [(id)qword_1002A0260 versionNumber];
LABEL_33:
    if (qword_100298BA8 != -1) {
      swift_once();
    }
    id v53 = [(id)qword_1002A0260 versionNumber];
    if (v45 <= v43) {
      id v54 = v43;
    }
    else {
      id v54 = v45;
    }
    if (v53 > v54) {
      id v54 = v53;
    }
    id v206 = v54;
    unint64_t v20 = v41;
    uint64_t v24 = (uint64_t)v211;
    a3 = v212;
    unint64_t v25 = v213;
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_12;
  }
  id v206 = [v27 versionNumber];
  if (!v26)
  {
LABEL_41:
    Class v49 = v208;
    unsigned __int8 v50 = *(void **)((char *)v208 + (void)v25);
    goto LABEL_42;
  }
LABEL_12:
  unint64_t v220 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v28 = (char *)v26[2];
  if (v28)
  {
    uint64_t v198 = v20;
    uint64_t v29 = self;
    uint64_t v30 = (char *)v26 + ((*((unsigned __int8 *)v218 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v218 + 80));
    uint64_t v214 = (char *)v218[9];
    id v215 = v29;
    swift_bridgeObjectRetain_n();
    uint64_t v31 = v216;
    do
    {
      id v217 = v30;
      id v218 = v28;
      sub_1001B7C04((uint64_t)v30, (uint64_t)v31, type metadata accessor for SignedVoucher);
      uint64_t v32 = *v31;
      unint64_t v33 = v31[1];
      uint64_t v35 = v31[2];
      unint64_t v34 = v31[3];
      sub_1000059E8(*v31, v33);
      sub_1000059E8(v35, v34);
      Class isa = sub_100221BD0().super.isa;
      Class v37 = sub_100221BD0().super.isa;
      id v38 = [v215 voucherInfoWithData:isa sig:v37];
      sub_100005A40(v35, v34);
      sub_100005A40(v32, v33);

      sub_1001B7EAC((uint64_t)v31, type metadata accessor for SignedVoucher);
      if (v38)
      {
        sub_1002223A0();
        if (*(void *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
      uint64_t v30 = &v214[(void)v217];
      uint64_t v28 = (char *)v218 - 1;
    }
    while (v218 != (void *)1);
    swift_bridgeObjectRelease();
    id v39 = (void *)v220;
    uint64_t v40 = v210;
    uint64_t v24 = (uint64_t)v211;
    unint64_t v20 = v198;
  }
  else
  {
    swift_bridgeObjectRetain();
    id v39 = _swiftEmptyArrayStorage;
    uint64_t v40 = v210;
  }
  swift_bridgeObjectRelease();
  id v46 = v207;
  uint64_t v47 = v40;
  id v48 = sub_1001979D0((unint64_t)v39, v46);
  uint64_t v210 = v47;
  swift_bridgeObjectRelease();

  unint64_t v25 = v213;
  Class v49 = v208;
  unsigned __int8 v50 = *(void **)((char *)v208 + (void)v213);
  if (v48)
  {
    sub_1000047D8(0, &qword_10029EC30);
    id v51 = v50;
    v52.super.Class isa = sub_1002223B0().super.isa;
    swift_bridgeObjectRelease();
    a3 = v212;
    goto LABEL_43;
  }
  a3 = v212;
LABEL_42:
  id v51 = v50;
  v52.super.Class isa = 0;
LABEL_43:
  unint64_t v220 = 0;
  id v55 = [v51 bestRecoveryKeyForStableInfo:a3 vouchers:v52.super.isa error:&v220];

  if (!v220)
  {
    uint64_t v56 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_testDontSetAccountSetting;
    int v57 = v25[OBJC_IVAR____TtC18TrustedPeersHelper9Container_testDontSetAccountSetting];
    if (v57 == 2)
    {
      id v58 = 0;
      id v59 = 0;
    }
    else
    {
      if (v57)
      {
        id v58 = 0;
      }
      else
      {
        uint64_t v60 = *(void **)((char *)v49 + (void)v25);
        sub_1000D8B9C(v24, (uint64_t)v236, &qword_10029EE00);
        if (v236[1] == 1) {
          uint64_t v61 = 0;
        }
        else {
          uint64_t v61 = v236[11];
        }
        unint64_t v220 = 0;
        id v58 = [v60 bestWalrusForStableInfo:a3 walrusStableChanges:v61 error:&v220];
        if (v220)
        {
          (id)v220;

          swift_willThrow();
          goto LABEL_102;
        }
        int v57 = v25[v56];
      }
      id v59 = 0;
      if (v57 != 2 && (v57 & 1) == 0)
      {
        uint64_t v104 = *(void **)((char *)v208 + (void)v25);
        sub_1000D8B9C(v24, (uint64_t)v235, &qword_10029EE00);
        uint64_t v105 = v235[1] == 1 ? 0 : v235[12];
        unint64_t v220 = 0;
        id v59 = [v104 bestWebAccessForStableInfo:a3 webAccessStableChanges:v105 error:&v220];
        if (v220)
        {
          (id)v220;

          swift_willThrow();
          unint64_t v20 = (uint64_t *)v58;
          goto LABEL_102;
        }
      }
    }
    sub_1000D8B9C(v24, (uint64_t)v232, &qword_10029EE00);
    if (v232[1] == 1)
    {
      v209 = 0;
      LODWORD(v215) = 1;
    }
    else
    {
      uint64_t v62 = v233;
      LODWORD(v215) = v234 & 1;
      if (!v215) {
        uint64_t v62 = sub_100112B4C(v207, v233);
      }
      v209 = (void *)v62;
      if (v203)
      {
        NSData v216 = (uint64_t *)[v203 secureElementIdentity];
        uint64_t v24 = v199;
        goto LABEL_63;
      }
    }
    NSData v216 = (uint64_t *)[(objc_class *)a3 secureElementIdentity];
    sub_1000D8B9C(v24, (uint64_t)&v230, &qword_10029EE00);
    uint64_t v24 = v231;
    if (v231 == 1)
    {
      v204 = 0;
      uint64_t v24 = 0;
      id v217 = v59;
      if (!a3) {
        goto LABEL_66;
      }
LABEL_64:
      id v63 = [(objc_class *)a3 deviceName];
      if (v63)
      {
        uint64_t v64 = v63;
        uint64_t v65 = sub_100222270();
        uint64_t v67 = v66;

        goto LABEL_67;
      }
LABEL_66:
      uint64_t v65 = 0;
      uint64_t v67 = 0;
LABEL_67:
      id v218 = v55;
      uint64_t v68 = v20;
      if (v24)
      {
        id v69 = v205;
        if (!v67) {
          goto LABEL_98;
        }
        if (v204 != (void *)v65 || v24 != v67)
        {
          char v70 = sub_100222A30();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v70 & 1) == 0) {
            goto LABEL_100;
          }
LABEL_75:
          sub_1000D8B9C((uint64_t)v211, (uint64_t)v229, &qword_10029EE00);
          if (v229[1] == 1)
          {
            uint64_t v71 = 0;
            uint64_t v72 = 0;
            Class v73 = v212;
            if (!v212) {
              goto LABEL_83;
            }
          }
          else
          {
            uint64_t v71 = v229[2];
            uint64_t v72 = v229[3];
            swift_bridgeObjectRetain();
            Class v73 = v212;
            if (!v212) {
              goto LABEL_83;
            }
          }
          id v74 = [(objc_class *)v73 serialNumber];
          if (v74)
          {
            uint64_t v24 = (uint64_t)v74;
            uint64_t v75 = sub_100222270();
            uint64_t v77 = v76;

            if (!v72) {
              goto LABEL_87;
            }
LABEL_84:
            if (!v77) {
              goto LABEL_98;
            }
            if (v71 != v75 || v72 != v77)
            {
              char v103 = sub_100222A30();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v103 & 1) == 0) {
                goto LABEL_100;
              }
              goto LABEL_88;
            }
LABEL_87:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_88:
            sub_1000D8B9C((uint64_t)v211, (uint64_t)v228, &qword_10029EE00);
            if (v228[1] == 1)
            {
              Class v78 = v212;
              if (!v212)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_100;
              }
              uint64_t v79 = 0;
              uint64_t v80 = 0;
            }
            else
            {
              uint64_t v80 = v228[4];
              uint64_t v79 = v228[5];
              swift_bridgeObjectRetain();
              Class v78 = v212;
              if (!v212)
              {
                char v106 = v79 == 0;
                goto LABEL_126;
              }
            }
            uint64_t v24 = (uint64_t)[(objc_class *)v78 osVersion];
            uint64_t v81 = sub_100222270();
            uint64_t v83 = v82;

            if (!v79)
            {
LABEL_97:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_128;
            }
            if (v83)
            {
              if (v80 == v81 && v79 == v83) {
                goto LABEL_97;
              }
              char v106 = sub_100222A30();
LABEL_126:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!v212 || (v106 & 1) == 0) {
                goto LABEL_100;
              }
LABEL_128:
              id v107 = [(objc_class *)v212 bestPolicyVersion];
              id v108 = [v107 versionNumber];

              if (v206 != v108) {
                goto LABEL_100;
              }
              sub_1000D8B9C((uint64_t)v211, (uint64_t)v227, &qword_10029EE00);
              if (v227[1] == 1)
              {
                uint64_t v109 = 0;
              }
              else
              {
                uint64_t v109 = v227[8];
                swift_bridgeObjectRetain();
              }
              id v110 = [(objc_class *)v212 policySecrets];
              if (v110)
              {
                uint64_t v111 = v110;
                uint64_t v112 = sub_1002221D0();

                if (v109)
                {
                  if (v112)
                  {
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain();
                    char v113 = sub_100196498(v109, v112);
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    if ((v113 & 1) == 0) {
                      goto LABEL_100;
                    }
LABEL_197:
                    if (v218)
                    {
                      id v164 = [v218 signingKeyData];
                      uint64_t v165 = sub_100221BF0();
                      unint64_t v167 = v166;
                    }
                    else
                    {
                      uint64_t v165 = 0;
                      unint64_t v167 = 0xF000000000000000;
                    }
                    id v168 = [(objc_class *)v212 recoverySigningPublicKey];
                    if (v168)
                    {
                      uint64_t v24 = (uint64_t)v168;
                      uint64_t v169 = sub_100221BF0();
                      unint64_t v171 = v170;

                      if (v167 >> 60 == 15)
                      {
                        id v69 = v205;
                        if (v171 >> 60 != 15) {
                          goto LABEL_218;
                        }
                      }
                      else
                      {
                        if (v171 >> 60 == 15)
                        {
                          id v69 = v205;
                          goto LABEL_218;
                        }
                        sub_10004BDEC(v169, v171);
                        sub_10004BDEC(v165, v167);
                        uint64_t v24 = sub_10003FE7C(v165, v167, v169, v171);
                        sub_100039FCC(v169, v171);
                        sub_100039FCC(v165, v167);
                        sub_100039FCC(v169, v171);
                        sub_100039FCC(v165, v167);
                        id v69 = v205;
                        if ((v24 & 1) == 0) {
                          goto LABEL_100;
                        }
                      }
                    }
                    else
                    {
                      id v69 = v205;
                      if (v167 >> 60 != 15) {
                        goto LABEL_217;
                      }
                    }
                    if (v218)
                    {
                      id v172 = [v218 encryptionKeyData];
                      uint64_t v165 = sub_100221BF0();
                      unint64_t v167 = v173;
                    }
                    else
                    {
                      uint64_t v165 = 0;
                      unint64_t v167 = 0xF000000000000000;
                    }
                    id v174 = [(objc_class *)v212 recoveryEncryptionPublicKey];
                    if (v174)
                    {
                      uint64_t v24 = (uint64_t)v174;
                      uint64_t v169 = sub_100221BF0();
                      unint64_t v171 = v175;

                      if (v167 >> 60 == 15)
                      {
                        if (v171 >> 60 == 15) {
                          goto LABEL_221;
                        }
                      }
                      else if (v171 >> 60 != 15)
                      {
                        sub_10004BDEC(v169, v171);
                        sub_10004BDEC(v165, v167);
                        uint64_t v24 = sub_10003FE7C(v165, v167, v169, v171);
                        sub_100039FCC(v169, v171);
                        sub_100039FCC(v165, v167);
                        sub_100039FCC(v169, v171);
                        sub_100039FCC(v165, v167);
                        if ((v24 & 1) == 0) {
                          goto LABEL_100;
                        }
LABEL_221:
                        unsigned int v176 = [(objc_class *)v212 syncUserControllableViews];
                        int v177 = (int)v215;
                        if (v209 == v176) {
                          int v177 = 1;
                        }
                        if (v177 == 1)
                        {
                          id v160 = v58;
                          id v178 = [(objc_class *)v212 walrusSetting];
                          v179 = v178;
                          if (v58)
                          {
                            if (!v178)
                            {

                              goto LABEL_100;
                            }
                            sub_1000047D8(0, &qword_10029ECA8);
                            id v180 = v160;
                            uint64_t v24 = v179;
                            char v181 = sub_100222650();

                            if ((v181 & 1) == 0) {
                              goto LABEL_100;
                            }
                          }
                          else
                          {
                          }
                          id v182 = v217;
                          unint64_t v161 = (uint64_t *)v217;
                          id v183 = [(objc_class *)v212 webAccess];
                          uint64_t v184 = v183;
                          if (v182)
                          {
                            if (!v183)
                            {

                              goto LABEL_100;
                            }
                            sub_1000047D8(0, &qword_10029ECA8);
                            uint64_t v24 = v161;
                            id v185 = v58;
                            id v186 = v184;
                            char v187 = sub_100222650();

                            id v58 = v185;
                            id v69 = v205;
                            if ((v187 & 1) == 0) {
                              goto LABEL_100;
                            }
                          }
                          else
                          {
                          }
                          id v188 = v216;
                          uint64_t v159 = v216;
                          id v189 = [(objc_class *)v212 secureElementIdentity];
                          uint64_t v24 = (uint64_t)v189;
                          if (v188)
                          {
                            if (v189)
                            {
                              sub_1000047D8(0, (unint64_t *)&unk_10029EF70);
                              uint64_t v159 = v159;
                              char v190 = sub_100222650();

                              if (v190)
                              {
                                uint64_t v24 = 0;
                                v162 = v218;
                                goto LABEL_194;
                              }
                            }
                            else
                            {
                            }
                          }
                          else
                          {
                            if (!v189)
                            {
                              v162 = v218;
                              goto LABEL_194;
                            }
                          }
                        }
LABEL_100:
                        uint64_t v84 = v210;
                        uint64_t v85 = sub_10017ECC4((uint64_t)v206);
                        if (v84)
                        {

                          unint64_t v20 = v216;
                          goto LABEL_102;
                        }
                        uint64_t v87 = v85;
                        id v197 = v58;
                        uint64_t v210 = 0;
                        uint64_t v88 = (char *)[v85 version];

                        uint64_t v214 = v88;
                        id v207 = [v88 versionNumber];
                        if (qword_100298BB0 != -1) {
                          swift_once();
                        }
                        id v89 = [(id)qword_1002A0268 versionNumber];
                        uint64_t v91 = (uint64_t)v211;
                        Class v90 = v212;
                        uint64_t v92 = v201;
                        uint64_t v93 = v202;
                        Class v94 = v208;
                        int v95 = (int)v215;
                        uint64_t v198 = v68;
                        if ((v215 & 1) == 0)
                        {
                          id v206 = v89;
                          if (qword_100298EB8 != -1) {
                            swift_once();
                          }
                          uint64_t v96 = sub_100003CC8(v93, (uint64_t)qword_10029E7D0);
                          (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v69, v96, v93);
                          unint64_t v97 = sub_100222070();
                          id v98 = v69;
                          uint64_t v99 = v92;
                          os_log_type_t v100 = sub_1002224E0();
                          if (os_log_type_enabled(v97, v100))
                          {
                            v101 = (uint8_t *)swift_slowAlloc();
                            v204 = (void *)swift_slowAlloc();
                            unint64_t v220 = (unint64_t)v204;
                            *(_DWORD *)v101 = 136446210;
                            Class v94 = v208;
                            switch((int)v209)
                            {
                              case 0:
                                uint64_t v102 = @"UNKNOWN";
                                goto LABEL_143;
                              case 1:
                                uint64_t v102 = @"DISABLED";
                                goto LABEL_143;
                              case 2:
                                uint64_t v102 = @"ENABLED";
                                goto LABEL_143;
                              case 3:
                                uint64_t v102 = @"FOLLOWING";
LABEL_143:
                                v114 = v102;
                                break;
                              default:
                                uint64_t v102 = +[NSString stringWithFormat:@"(unknown: %i)", v209];
                                Class v94 = v208;
                                break;
                            }
                            uint64_t v115 = v102;
                            if (!v115)
                            {
                              __break(1u);
                              JUMPOUT(0x1001807CCLL);
                            }
                            unint64_t v116 = v115;
                            uint64_t v117 = sub_100222270();
                            unint64_t v119 = v118;

                            uint64_t v219 = sub_1001BEBDC(v117, v119, (uint64_t *)&v220);
                            sub_100222690();
                            swift_bridgeObjectRelease();
                            _os_log_impl((void *)&_mh_execute_header, v97, v100, "Intending to set user-controllable views to %{public}s", v101, 0xCu);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();

                            (*(void (**)(char *, uint64_t))(v201 + 8))(v205, v202);
                            uint64_t v91 = (uint64_t)v211;
                            Class v90 = v212;
                          }
                          else
                          {

                            (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v93);
                            Class v94 = v208;
                          }
                          int v95 = (int)v215;
                          id v89 = v206;
                        }
                        id v215 = *(id *)((char *)v94 + (void)v213);
                        if (v207 >= v89)
                        {
                          unint64_t v211 = (char *)(id)qword_1002A0268;
                          NSString v213 = v214;
                        }
                        else
                        {
                          NSString v213 = 0;
                          unint64_t v211 = v214;
                        }
                        sub_1000D8B9C(v91, (uint64_t)v225, &qword_10029EE00);
                        if (v225[1] == 1 || (uint64_t v120 = v226) == 0)
                        {
                          id v123 = v215;
                          uint64_t v124 = v214;
                          if (!v90)
                          {
                            swift_bridgeObjectRelease();
                            Class v208 = 0;
                            if (v95) {
                              unint64_t v126 = 0;
                            }
                            else {
                              unint64_t v126 = v209;
                            }
LABEL_167:
                            sub_1000D8B9C(v91, (uint64_t)v224, &qword_10029EE00);
                            if (v224[1] >= 2uLL)
                            {
                              swift_bridgeObjectRetain();
                            }
                            else if (v90 {
                                   && (id v127 = [(objc_class *)v90 deviceName]) != 0)
                            }
                            {
                              uint64_t v128 = v127;
                              sub_100222270();
                              swift_bridgeObjectRelease();
                            }
                            else
                            {
                              swift_bridgeObjectRelease();
                            }
                            v209 = sub_100222260();
                            swift_bridgeObjectRelease();
                            sub_1000D8B9C(v91, (uint64_t)v223, &qword_10029EE00);
                            if (v223[1] == 1 || !v223[3])
                            {
                              unint64_t v129 = v126;
                              if (v212
                                && (id v130 = [(objc_class *)v212 serialNumber]) != 0)
                              {
                                v131 = v130;
                                sub_100222270();
                                swift_bridgeObjectRelease();
                              }
                              else
                              {
                                swift_bridgeObjectRelease();
                              }
                              unint64_t v126 = v129;
                            }
                            else
                            {
                              swift_bridgeObjectRetain();
                            }
                            NSString v132 = sub_100222260();
                            swift_bridgeObjectRelease();
                            sub_1000D8B9C(v91, (uint64_t)v222, &qword_10029EE00);
                            id v207 = v132;
                            if (v222[1] == 1 || !v222[5])
                            {
                              if (v212)
                              {
                                id v133 = [(objc_class *)v212 osVersion];
                                sub_100222270();
                                swift_bridgeObjectRelease();
                              }
                              else
                              {
                                swift_bridgeObjectRelease();
                              }
                            }
                            else
                            {
                              swift_bridgeObjectRetain();
                            }
                            NSString v134 = sub_100222260();
                            swift_bridgeObjectRelease();
                            id v135 = v218;
                            if (v218)
                            {
                              id v136 = [v218 signingKeyData];
                              uint64_t v137 = sub_100221BF0();
                              unint64_t v139 = v138;

                              v140.super.Class isa = sub_100221BD0().super.isa;
                              sub_100005A40(v137, v139);
                              id v141 = [v135 encryptionKeyData];
                              uint64_t v142 = sub_100221BF0();
                              unint64_t v144 = v143;

                              v145.super.Class isa = sub_100221BD0().super.isa;
                              sub_100005A40(v142, v144);
                            }
                            else
                            {
                              v145.super.Class isa = 0;
                              v140.super.Class isa = 0;
                            }
                            uint64_t v146 = v200;
                            id v147 = v197;
                            unsigned __int8 v148 = v212;
                            id v149 = (id)v126;
                            if (v212)
                            {
                              id v150 = v197;
                              unsigned __int8 v148 = [(objc_class *)v212 isInheritedAccount];
                              id v147 = v150;
                            }
                            unint64_t v220 = 0;
                            LOBYTE(v195) = v148;
                            Class v193 = v140.super.isa;
                            Class v194 = v145.super.isa;
                            Class v151 = v140.super.isa;
                            NSString v191 = v134;
                            uint64_t v192 = v146;
                            Class v212 = v145.super.isa;
                            id v152 = v207;
                            NSString v153 = v209;
                            id v154 = v215;
                            id v155 = v211;
                            id v206 = v134;
                            v156 = v213;
                            Class v157 = v208;
                            uint64_t v24 = (uint64_t)objc_retainAutoreleasedReturnValue(objc_msgSend(v215, "createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:", v211, v213, v208, v149, v216, v147, v217, v209, v207, v191, v192, v193, v194,
                                               v195,
                                               &v220));

                            id v158 = (id)v220;
                            if (!v24)
                            {
                              Class v163 = v158;
                              sub_100221B40();

                              swift_willThrow();
                              unint64_t v20 = (uint64_t *)v217;
                              goto LABEL_102;
                            }

                            uint64_t v159 = (char *)v217;
                            id v160 = v218;
                            uint64_t v68 = (uint64_t *)v197;
                            unint64_t v161 = v198;
                            v162 = v216;
LABEL_194:

                            return v24;
                          }
                          id v125 = [(objc_class *)v90 policySecrets];
                          if (!v125)
                          {
                            Class v208 = 0;
LABEL_161:
                            swift_bridgeObjectRelease();
                            if (v95) {
                              unint64_t v126 = 0;
                            }
                            else {
                              unint64_t v126 = v209;
                            }
                            Class v90 = v212;
                            if (v212 && ((v95 ^ 1) & 1) == 0) {
                              unint64_t v126 = (unint64_t)[(objc_class *)v212 syncUserControllableViews];
                            }
                            goto LABEL_167;
                          }
                          uint64_t v120 = sub_1002221D0();
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          id v121 = v215;
                          v122 = v214;
                          swift_bridgeObjectRetain();
                        }
                        sub_1001B917C(v120);
                        swift_bridgeObjectRelease();
                        Class v208 = sub_1002221C0().super.isa;
                        goto LABEL_161;
                      }
LABEL_218:
                      sub_100039FCC(v165, v167);
                      sub_100039FCC(v169, v171);
                      goto LABEL_100;
                    }
                    if (v167 >> 60 == 15) {
                      goto LABEL_221;
                    }
LABEL_217:
                    uint64_t v169 = 0;
                    unint64_t v171 = 0xF000000000000000;
                    goto LABEL_218;
                  }
LABEL_99:
                  swift_bridgeObjectRelease();
                  goto LABEL_100;
                }
              }
              else if (v109)
              {
                goto LABEL_99;
              }
              swift_bridgeObjectRelease();
              goto LABEL_197;
            }
LABEL_98:
            swift_bridgeObjectRelease();
            goto LABEL_99;
          }
LABEL_83:
          uint64_t v75 = 0;
          uint64_t v77 = 0;
          if (!v72) {
            goto LABEL_87;
          }
          goto LABEL_84;
        }
      }
      else
      {
        id v69 = v205;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    v204 = v230;
LABEL_63:
    swift_bridgeObjectRetain();
    id v217 = v59;
    if (!a3) {
      goto LABEL_66;
    }
    goto LABEL_64;
  }
  (id)v220;

  swift_willThrow();
LABEL_102:

  return v24;
}

uint64_t sub_1001807DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v9 = type metadata accessor for Bottle(0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "bottles"));
  if (!v13
    || (uint64_t v14 = v13,
        Swift::Int v36 = 0,
        type metadata accessor for BottleMO(),
        sub_1001A56AC(&qword_100299690, (void (*)(uint64_t))type metadata accessor for BottleMO),
        sub_100222430(),
        v14,
        (uint64_t v15 = v36) == 0))
  {
    Swift::Int v36 = 0;
    sub_100042D4C();
    swift_allocError();
    long long v22 = xmmword_100231320;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = v15;
  uint64_t v17 = v5;
  Swift::Int v18 = sub_1001AC4F4(v16, a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  Swift::Int v36 = v18;
  if ((v18 & 0xC000000000000001) != 0)
  {
    swift_retain();
    uint64_t v20 = sub_100222750();
    uint64_t result = swift_release();
    if (v20 >= 2)
    {
LABEL_5:
      sub_100042D4C();
      swift_allocError();
      long long v22 = xmmword_100231310;
LABEL_7:
      *(_OWORD *)uint64_t v21 = v22;
      *(unsigned char *)(v21 + 16) = 13;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v20 = *(void *)(v18 + 16);
    if (v20 >= 2) {
      goto LABEL_5;
    }
  }
  if (!v20)
  {
    sub_100042D4C();
    swift_allocError();
    long long v22 = xmmword_100231290;
    goto LABEL_7;
  }
  uint64_t v34 = a3;
  uint64_t v35 = v17;
  if ((v18 & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_100222750();
    if (result)
    {
      uint64_t v23 = sub_1002226F0();
      uint64_t v25 = v24;
      char v26 = 1;
      goto LABEL_17;
    }
    __break(1u);
  }
  else if (*(void *)(v18 + 16))
  {
    uint64_t v23 = sub_1001F4348(v18);
    uint64_t v25 = v27;
    char v26 = v28 & 1;
LABEL_17:
    sub_100195AC0(v23, v25, v26);
    uint64_t v30 = v29;
    uint64_t v31 = sub_1001B1EC4(v23, v25, v26);
    __chkstk_darwin(v31, v32);
    *(&v34 - 4) = a1;
    *(&v34 - 3) = a2;
    *(&v34 - 2) = (uint64_t)v30;
    sub_1001A56AC((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);
    uint64_t v33 = v35;
    sub_100221F70();

    if (!v33) {
      sub_1001B7B9C((uint64_t)v12, v34, type metadata accessor for Bottle);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100180B5C(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  a1[8] = a2;
  a1[9] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_8;
  }
  id v6 = [a4 contents];
  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_100221BF0();
  uint64_t v10 = v9;

  sub_100005A40(*a1, a1[1]);
  *a1 = v8;
  a1[1] = v10;
  id v11 = [a4 escrowedSigningSPKI];
  if (!v11) {
    goto LABEL_8;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_100221BF0();
  uint64_t v15 = v14;

  sub_100005A40(a1[2], a1[3]);
  a1[2] = v13;
  a1[3] = v15;
  id v16 = [a4 signatureUsingEscrowKey];
  if (!v16) {
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  uint64_t v18 = sub_100221BF0();
  uint64_t v20 = v19;

  sub_100005A40(a1[4], a1[5]);
  a1[4] = v18;
  a1[5] = v20;
  id v21 = [a4 signatureUsingPeerKey];
  if (!v21) {
    goto LABEL_8;
  }
  long long v22 = v21;
  uint64_t v23 = sub_100221BF0();
  uint64_t v25 = v24;

  sub_100005A40(a1[6], a1[7]);
  a1[6] = v23;
  a1[7] = v25;
  id v26 = [a4 bottleID];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = sub_100222270();
    uint64_t v30 = v29;

    uint64_t result = swift_bridgeObjectRelease();
    a1[10] = v28;
    a1[11] = v30;
  }
  else
  {
LABEL_8:
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v32 = xmmword_100231320;
    *(unsigned char *)(v32 + 16) = 13;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100180D20(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  return sub_10018123C(a1, a2, a3, a4, a5, "isRecoveryKeySet complete %{public}s", 0xD000000000000018, 0x80000001002442A0);
}

uint64_t sub_100180D44(uint64_t a1, uint64_t (*a2)(void, uint64_t), uint64_t a3, char *a4)
{
  if (a1) {
    return a2(0, a1);
  }
  uint64_t v8 = *(void **)&a4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a2;
  v9[4] = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001B1468;
  *(void *)(v10 + 24) = v9;
  v13[4] = sub_1001B8924;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100283D78;
  id v11 = _Block_copy(v13);
  uint64_t v12 = a4;
  swift_retain();
  swift_retain();
  swift_release();
  [v8 performBlockAndWait:v11];
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

void sub_100180EDC(uint64_t a1, void (*a2)(void, void), int16x8_t a3, uint64_t a4, SEL *a5, const char *a6, char *a7)
{
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v31 = 0;
  id v11 = objc_msgSend(v10, *a5, &v31);
  id v12 = v31;
  if (v31)
  {
    id v13 = v31;
    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100222090();
    sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
    uint64_t v15 = v13;
    id v16 = sub_100222070();
    os_log_type_t v17 = sub_100222500();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138543362;
      uint64_t v30 = a2;
      uint64_t v20 = v15;
      format = a7;
      id v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v31 = v21;
      sub_100222690();
      *uint64_t v19 = v21;

      a2 = v30;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, format, v18, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v16 = v15;
    }

    uint64_t v27 = v15;
    a2(0, v12);
  }
  else
  {
    id v22 = v11;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100222090();
    sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
    uint64_t v24 = sub_100222070();
    os_log_type_t v25 = sub_1002224E0();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v26 = vmovn_s16(a3).u32[0];
      LODWORD(v31) = v22;
      sub_100222690();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, a6, v26, 8u);
      swift_slowDealloc();
    }

    a2(v22, 0);
  }
}

uint64_t sub_100181218(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  return sub_10018123C(a1, a2, a3, a4, a5, "removeRecoveryKey complete: %{public}s", 0xD000000000000019, 0x8000000100244280);
}

uint64_t sub_10018123C(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5, const char *a6, uint64_t a7, unint64_t a8)
{
  if (a2) {
    os_log_type_t v13 = sub_100222500();
  }
  else {
    os_log_type_t v13 = sub_1002224E0();
  }
  os_log_type_t v14 = v13;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100222090();
  sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v16 = sub_100222070();
  if (os_log_type_enabled(v16, v14))
  {
    uint64_t v20 = a4;
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v17 = 136446210;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v23._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v23);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v18 = 0x203A726F727265;
    }
    else
    {
      uint64_t v18 = 0x73736563637573;
    }
    sub_1001BEBDC(v18, 0xE700000000000000, &v22);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v14, a6, v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a4 = v20;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(a7, a8);
  return a4(a1 & 1, a2);
}

uint64_t sub_1001814B8(uint64_t a1, uint64_t (*a2)(void, uint64_t), uint64_t a3, char *a4)
{
  if (a1) {
    return a2(0, a1);
  }
  uint64_t v8 = *(void **)&a4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a2;
  v9[4] = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1001B11A4;
  *(void *)(v10 + 24) = v9;
  v13[4] = sub_1001B8924;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100112F58;
  v13[3] = &unk_100283BE8;
  id v11 = _Block_copy(v13);
  id v12 = a4;
  swift_retain();
  swift_retain();
  swift_release();
  [v8 performBlockAndWait:v11];
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

void sub_100181650(char *a1, void (*a2)(void, uint64_t), uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v7 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_100222270();
    id v11 = v10;

    id v12 = [*(id *)&a1[v6] egoPeerStableInfo];
    if (v12)
    {
      os_log_type_t v13 = v12;
      uint64_t v14 = sub_100221BF0();
      unint64_t v16 = v15;

      id v17 = [*(id *)&a1[v6] egoPeerStableInfoSig];
      if (!v17)
      {
        swift_bridgeObjectRelease();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v75 = sub_100222090();
        sub_100003CC8(v75, (uint64_t)qword_10029E7D0);
        uint64_t v76 = sub_100222070();
        os_log_type_t v77 = sub_1002224E0();
        if (os_log_type_enabled(v76, v77))
        {
          Class v78 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Class v78 = 0;
          _os_log_impl((void *)&_mh_execute_header, v76, v77, "stableInfoSig does not exist", v78, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v79 = swift_allocError();
        *(_OWORD *)uint64_t v80 = xmmword_1002311E0;
        *(unsigned char *)(v80 + 16) = 13;
        a2(0, v79);
        swift_errorRelease();
        uint64_t v81 = v14;
        unint64_t v82 = v16;
        goto LABEL_44;
      }
      uint64_t v18 = v17;
      uint64_t v144 = v9;
      unsigned __int8 v148 = a2;
      uint64_t v149 = a3;
      uint64_t v19 = sub_100221BF0();
      unint64_t v21 = v20;

      id v22 = objc_allocWithZone((Class)TPPeerStableInfo);
      sub_1000059E8(v14, v16);
      sub_1000059E8(v19, v21);
      Class isa = sub_100221BD0().super.isa;
      Class v24 = sub_100221BD0().super.isa;
      id v25 = [v22 initWithData:isa sig:v24];
      uint64_t v146 = v19;
      unint64_t v147 = v21;
      sub_100005A40(v19, v21);
      unint64_t v150 = v16;
      sub_100005A40(v14, v16);

      if (v25)
      {
        NSData v145 = v25;
        id v26 = [*(id *)&a1[v6] egoPeerPermanentInfo];
        if (v26)
        {
          uint64_t v27 = v26;
          uint64_t v28 = sub_100221BF0();
          unint64_t v30 = v29;

          id v31 = [*(id *)&a1[v6] egoPeerPermanentInfoSig];
          uint64_t v143 = v14;
          if (v31)
          {
            uint64_t v32 = v31;
            uint64_t v33 = sub_100221BF0();
            unint64_t v35 = v34;

            id v36 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
            swift_bridgeObjectRetain();
            sub_1000059E8(v28, v30);
            sub_1000059E8(v33, v35);
            NSString v37 = sub_100222260();
            swift_bridgeObjectRelease();
            Class v38 = sub_100221BD0().super.isa;
            Class v39 = sub_100221BD0().super.isa;
            uint64_t v142 = v36;
            id v40 = [self permanentInfoWithPeerID:v37 data:v38 sig:v39 keyFactory:v36];
            unint64_t v139 = v35;
            uint64_t v140 = v33;
            uint64_t v41 = v33;
            id v42 = v40;
            sub_100005A40(v41, v35);
            uint64_t v141 = v28;
            sub_100005A40(v28, v30);

            if (v42)
            {
              uint64_t v43 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
              id v44 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
              v151[0] = 0;
              id v45 = [v44 getViewsForPeer:v42 stableInfo:v145 error:v151];
              unint64_t v47 = v150;
              id v46 = v151[0];
              if (v45)
              {
                id v48 = v45;
                sub_100222440();
                id v49 = v46;

                unsigned __int8 v50 = *(void **)&a1[v43];
                v151[0] = 0;
                unsigned __int8 v51 = [v50 isRecoveryKeyEnrolledWithError:v151];
                if (!v151[0])
                {
                  if (v51)
                  {
                    id v120 = [objc_allocWithZone((Class)TPRecoveryKeyPair) initWithStableInfo:v145];
                    v131 = (void *)sub_100007014(v120);

                    swift_bridgeObjectRelease();
                    strcpy((char *)v151, "signing-key ");
                    BYTE5(v151[1]) = 0;
                    HIWORD(v151[1]) = -5120;
                    v153._countAndFlagsBits = v144;
                    v153._object = v11;
                    sub_100222310(v153);
                    id v132 = v151[1];
                    id v136 = v151[0];
                    swift_bridgeObjectRetain();
                    swift_retain();
                    id v133 = a1;
                    id v134 = v145;
                    id v135 = v131;
                    sub_1001A0424((uint64_t)v136, (uint64_t)v132, v148, v149, v133, v134, v135, v144, (uint64_t)v11);

                    swift_bridgeObjectRelease();
                    sub_100005A40(v143, v150);
                    sub_100005A40(v146, v147);
                    sub_100005A40(v141, v30);
                    sub_100005A40(v140, v139);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    swift_release();
                    return;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (qword_100298EB8 != -1) {
                    swift_once();
                  }
                  uint64_t v127 = sub_100222090();
                  sub_100003CC8(v127, (uint64_t)qword_10029E7D0);
                  uint64_t v128 = sub_100222070();
                  os_log_type_t v129 = sub_1002224E0();
                  unint64_t v47 = v150;
                  if (os_log_type_enabled(v128, v129))
                  {
                    id v130 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)id v130 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v128, v129, "recovery key is not registered, nothing to remove.", v130, 2u);
                    swift_slowDealloc();
                  }

                  ((void (*)(uint64_t, void))v148)(1, 0);
                  sub_100005A40(v140, v139);
                  sub_100005A40(v141, v30);

                  sub_100005A40(v146, v147);
                  uint64_t v126 = v143;
                  goto LABEL_68;
                }
                unint64_t v137 = v30;
                id v52 = v151[0];
                id v53 = v151[0];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_willThrow();
                if (qword_100298EB8 != -1) {
                  swift_once();
                }
                id v54 = v42;
                uint64_t v55 = sub_100222090();
                sub_100003CC8(v55, (uint64_t)qword_10029E7D0);
                uint64_t v56 = v53;
                int v57 = sub_100222070();
                os_log_type_t v58 = sub_100222500();
                unint64_t v47 = v150;
                if (os_log_type_enabled(v57, v58))
                {
                  id v59 = (uint8_t *)swift_slowAlloc();
                  uint64_t v60 = (void *)swift_slowAlloc();
                  *(_DWORD *)id v59 = 138543362;
                  uint64_t v61 = v56;
                  uint64_t v62 = v56;
                  id v63 = (void *)_swift_stdlib_bridgeErrorToNSError();
                  v151[0] = v63;
                  unint64_t v47 = v150;
                  sub_100222690();
                  *uint64_t v60 = v63;

                  uint64_t v56 = v61;
                  _os_log_impl((void *)&_mh_execute_header, v57, v58, "error determining whether Recovery Key is enrolled: %{public}@", v59, 0xCu);
                  sub_1000046DC(&qword_100298F90);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {

                  int v57 = v56;
                }
                unint64_t v121 = v147;

                v122 = v56;
                ((void (*)(void, id))v148)(0, v52);

                sub_100005A40(v140, v139);
                sub_100005A40(v141, v137);

                uint64_t v123 = v146;
              }
              else
              {
                unint64_t v138 = v30;
                id v111 = v151[0];
                swift_bridgeObjectRelease();
                uint64_t v112 = sub_100221B40();

                swift_willThrow();
                if (qword_100298EB8 != -1) {
                  swift_once();
                }
                char v113 = v42;
                uint64_t v114 = sub_100222090();
                sub_100003CC8(v114, (uint64_t)qword_10029E7D0);
                swift_errorRetain();
                swift_errorRetain();
                uint64_t v115 = sub_100222070();
                os_log_type_t v116 = sub_100222500();
                if (os_log_type_enabled(v115, v116))
                {
                  uint64_t v117 = (uint8_t *)swift_slowAlloc();
                  unint64_t v118 = (void *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v117 = 138412290;
                  swift_errorRetain();
                  unint64_t v119 = (void *)_swift_stdlib_bridgeErrorToNSError();
                  v151[0] = v119;
                  unint64_t v47 = v150;
                  sub_100222690();
                  *unint64_t v118 = v119;
                  swift_errorRelease();
                  swift_errorRelease();
                  _os_log_impl((void *)&_mh_execute_header, v115, v116, "cannot create peerViews: %@)", v117, 0xCu);
                  sub_1000046DC(&qword_100298F90);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  swift_errorRelease();
                  swift_errorRelease();
                }
                unint64_t v121 = v147;

                sub_100042D4C();
                uint64_t v124 = swift_allocError();
                *(void *)uint64_t v125 = v112;
                *(void *)(v125 + 8) = 0;
                *(unsigned char *)(v125 + 16) = 10;
                swift_errorRetain();
                ((void (*)(void, uint64_t))v148)(0, v124);
                swift_errorRelease();
                swift_errorRelease();

                sub_100005A40(v140, v139);
                sub_100005A40(v141, v138);

                uint64_t v123 = v146;
              }
              sub_100005A40(v123, v121);
              uint64_t v126 = v143;
LABEL_68:
              sub_100005A40(v126, v47);
              return;
            }
            swift_bridgeObjectRelease();
            unint64_t v86 = v150;
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v105 = sub_100222090();
            sub_100003CC8(v105, (uint64_t)qword_10029E7D0);
            char v106 = sub_100222070();
            os_log_type_t v107 = sub_1002224E0();
            if (os_log_type_enabled(v106, v107))
            {
              id v108 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v108 = 0;
              _os_log_impl((void *)&_mh_execute_header, v106, v107, "cannot create TPPeerPermanentInfo", v108, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v109 = swift_allocError();
            *(_OWORD *)uint64_t v110 = xmmword_100229940;
            *(unsigned char *)(v110 + 16) = 13;
            ((void (*)(void, uint64_t))v148)(0, v109);
            swift_errorRelease();

            sub_100005A40(v140, v139);
            sub_100005A40(v141, v30);

            sub_100005A40(v146, v147);
            uint64_t v81 = v143;
          }
          else
          {
            uint64_t v98 = v28;
            swift_bridgeObjectRelease();
            if (qword_100298EB8 != -1) {
              swift_once();
            }
            uint64_t v99 = sub_100222090();
            sub_100003CC8(v99, (uint64_t)qword_10029E7D0);
            os_log_type_t v100 = sub_100222070();
            os_log_type_t v101 = sub_1002224E0();
            unint64_t v86 = v16;
            if (os_log_type_enabled(v100, v101))
            {
              uint64_t v102 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v102 = 0;
              _os_log_impl((void *)&_mh_execute_header, v100, v101, "permInfoSig does not exist", v102, 2u);
              swift_slowDealloc();
            }

            sub_100042D4C();
            uint64_t v103 = swift_allocError();
            *(_OWORD *)uint64_t v104 = xmmword_1002311E0;
            *(unsigned char *)(v104 + 16) = 13;
            ((void (*)(void, uint64_t))v148)(0, v103);
            swift_errorRelease();
            sub_100005A40(v98, v30);

            sub_100005A40(v146, v21);
            uint64_t v81 = v143;
          }
          goto LABEL_43;
        }
        swift_bridgeObjectRelease();
        unint64_t v86 = v16;
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v92 = sub_100222090();
        sub_100003CC8(v92, (uint64_t)qword_10029E7D0);
        uint64_t v93 = sub_100222070();
        os_log_type_t v94 = sub_1002224E0();
        if (os_log_type_enabled(v93, v94))
        {
          int v95 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v95 = 0;
          _os_log_impl((void *)&_mh_execute_header, v93, v94, "permanentInfo does not exist", v95, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v96 = swift_allocError();
        *(_OWORD *)uint64_t v97 = xmmword_1002311E0;
        *(unsigned char *)(v97 + 16) = 13;
        ((void (*)(void, uint64_t))v148)(0, v96);
        swift_errorRelease();

        uint64_t v90 = v19;
        unint64_t v91 = v21;
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v83 = sub_100222090();
        sub_100003CC8(v83, (uint64_t)qword_10029E7D0);
        uint64_t v84 = sub_100222070();
        os_log_type_t v85 = sub_1002224E0();
        unint64_t v86 = v16;
        if (os_log_type_enabled(v84, v85))
        {
          uint64_t v87 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v87 = 0;
          _os_log_impl((void *)&_mh_execute_header, v84, v85, "cannot create TPPeerStableInfo", v87, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v88 = swift_allocError();
        *(_OWORD *)uint64_t v89 = xmmword_100229940;
        *(unsigned char *)(v89 + 16) = 13;
        ((void (*)(void, uint64_t))v148)(0, v88);
        swift_errorRelease();
        uint64_t v90 = v19;
        unint64_t v91 = v21;
      }
      sub_100005A40(v90, v91);
      uint64_t v81 = v14;
LABEL_43:
      unint64_t v82 = v86;
LABEL_44:
      sub_100005A40(v81, v82);
      return;
    }
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_100222090();
    sub_100003CC8(v71, (uint64_t)qword_10029E7D0);
    uint64_t v72 = sub_100222070();
    os_log_type_t v73 = sub_1002224E0();
    if (os_log_type_enabled(v72, v73))
    {
      id v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v74 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "stableInfo does not exist", v74, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v69 = swift_allocError();
    long long v70 = xmmword_1002311E0;
  }
  else
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_100222090();
    sub_100003CC8(v64, (uint64_t)qword_10029E7D0);
    uint64_t v65 = sub_100222070();
    os_log_type_t v66 = sub_1002224E0();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "no prepared identity, cannot remove recovery key", v67, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v69 = swift_allocError();
    long long v70 = xmmword_1002297D0;
  }
  *(_OWORD *)uint64_t v68 = v70;
  *(unsigned char *)(v68 + 16) = 13;
  a2(0, v69);

  swift_errorRelease();
}

uint64_t sub_100182BA4(void *a1, id a2, void *a3, uint64_t a4, char *a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  if (a1)
  {
    id v31 = *(id *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    id v17 = (void *)swift_allocObject();
    v17[2] = a6;
    v17[3] = a5;
    v17[4] = a1;
    v17[5] = a7;
    v17[6] = a2;
    v17[7] = a3;
    v17[8] = a4;
    v17[9] = a8;
    v17[10] = a9;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1001B1228;
    *(void *)(v18 + 24) = v17;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = v18;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100283C60;
    a3 = _Block_copy(aBlock);
    id v19 = a1;
    swift_errorRetain();
    a2 = v19;
    id v20 = a6;
    unint64_t v21 = a5;
    swift_retain();
    swift_bridgeObjectRetain();
    id v22 = a7;
    swift_retain();
    swift_release();
    [v31 performBlockAndWait:a3];

    _Block_release(a3);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100222090();
  sub_100003CC8(v25, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v26 = sub_100222070();
  os_log_type_t v27 = sub_100222500();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446210;
    uint64_t v33 = (uint64_t)a2;
    swift_errorRetain();
    sub_1000046DC((uint64_t *)&unk_1002996A0);
    uint64_t v29 = sub_1002222C0();
    uint64_t v33 = sub_1001BEBDC(v29, v30, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "handle: no signing key pair: %{public}s", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return ((uint64_t (*)(void, id))a3)(0, a2);
}

uint64_t sub_100182F30(void *a1, char *a2, void *a3, void *a4, uint64_t a5, void (*a6)(void, uint64_t), uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v147 = a5;
  uint64_t v148 = a8;
  Swift::String v153 = a6;
  uint64_t v154 = a7;
  id v152 = a3;
  id v150 = a4;
  Class v151 = a9;
  uint64_t v11 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SignedPeerDynamicInfo(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SignedPeerStableInfo(0);
  __chkstk_darwin(v19, v20);
  id v22 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = [a1 bestPolicyVersion];
  id v149 = sub_10017ECC4((uint64_t)[v23 versionNumber]);
  unint64_t v137 = (uint64_t *)v22;
  id v134 = v14;
  uint64_t v132 = v15;
  uint64_t v133 = v11;
  id v135 = a2;
  Class v24 = (char *)[a1 clock];
  uint64_t v25 = v24 + 1;
  if (v24 == (char *)-1)
  {
    __break(1u);
  }
  else
  {
    v131 = (uint64_t *)v18;
    if (qword_100298BB0 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  id v26 = (id)qword_1002A0268;
  id v27 = [v149 version];
  id v28 = [a1 policySecrets];
  uint64_t v136 = v19;
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v141 = sub_1002221D0();
  }
  else
  {
    uint64_t v141 = 0;
  }
  unsigned int v142 = [a1 syncUserControllableViews];
  id v30 = [a1 secureElementIdentity];
  id v31 = [a1 walrusSetting];
  id v143 = [a1 webAccess];
  id v32 = [a1 deviceName];
  id v138 = v23;
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = sub_100222270();
    uint64_t v139 = v35;
    uint64_t v140 = v34;
  }
  else
  {
    uint64_t v139 = 0;
    uint64_t v140 = 0;
  }
  id v36 = [a1 serialNumber];
  id v145 = v30;
  id v146 = v27;
  id v144 = v31;
  if (v36)
  {
    NSString v37 = v36;
    id v38 = v26;
    uint64_t v39 = sub_100222270();
    uint64_t v41 = v40;
  }
  else
  {
    id v38 = v26;
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  id v42 = [a1 osVersion];
  uint64_t v43 = sub_100222270();
  uint64_t v45 = v44;

  unsigned __int8 v46 = [a1 isInheritedAccount];
  id v47 = objc_allocWithZone((Class)TPPeerStableInfo);
  id v48 = v152;
  char v129 = v46;
  uint64_t v128 = v45;
  uint64_t v127 = v39;
  uint64_t v49 = (uint64_t)v25;
  unsigned __int8 v50 = v38;
  uint64_t v51 = (uint64_t)v38;
  id v53 = v145;
  id v52 = v146;
  id v55 = v143;
  id v54 = v144;
  id v56 = sub_1001AA754(v49, v51, (uint64_t)v146, v141, v142, (uint64_t)v145, (uint64_t)v144, (uint64_t)v143, v140, v139, v127, v41, v43, v128, (uint64_t)v48, 0, 0xF000000000000000, 0, 0xF000000000000000,
          v129);

  int v57 = v137;
  id v58 = v56;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v59 = [v58 data];
  uint64_t v60 = sub_100221BF0();
  uint64_t v62 = v61;

  *int v57 = v60;
  v57[1] = v62;
  id v63 = [v58 sig];
  uint64_t v64 = sub_100221BF0();
  uint64_t v66 = v65;

  v57[2] = v64;
  v57[3] = v66;
  id v67 = [v150 peerID];
  if (!v67)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v105 = sub_100222090();
    sub_100003CC8(v105, (uint64_t)qword_10029E7D0);
    uint64_t v106 = v147;
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v107 = sub_100222070();
    os_log_type_t v108 = sub_100222500();
    if (os_log_type_enabled(v107, v108))
    {
      uint64_t v109 = (uint8_t *)swift_slowAlloc();
      uint64_t v110 = (void *)swift_slowAlloc();
      uint64_t v155 = v106;
      id v156 = v110;
      *(_DWORD *)uint64_t v109 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v111 = sub_1002222C0();
      uint64_t v155 = sub_1001BEBDC(v111, v112, (uint64_t *)&v156);
      sub_100222690();
      uint64_t v106 = v147;
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "Error creating recovery key peerid: %{public}s", v109, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v122 = v138;
    v153(0, v106);

    goto LABEL_27;
  }
  uint64_t v68 = v67;
  id v152 = v58;
  uint64_t v69 = sub_100222270();
  uint64_t v71 = v70;

  uint64_t v72 = v135;
  id v73 = *(id *)&v135[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
  NSString v74 = sub_100222260();
  sub_1000046DC((uint64_t *)&unk_100299820);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_100229540;
  *(void *)(v75 + 32) = v69;
  *(void *)(v75 + 40) = v71;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  os_log_type_t v77 = (void *)sub_1001EAB00();
  id v156 = 0;
  id v78 = [v73 calculateDynamicInfoForPeerWithID:v74 addingPeerIDs:0 removingPeerIDs:isa preapprovedKeys:0 signingKeyPair:v48 currentMachineIDs:v77 error:&v156];

  if (!v78)
  {
    id v113 = v156;
    uint64_t v114 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v115 = sub_100222090();
    sub_100003CC8(v115, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v116 = sub_100222070();
    os_log_type_t v117 = sub_100222500();
    if (os_log_type_enabled(v116, v117))
    {
      unint64_t v118 = (uint8_t *)swift_slowAlloc();
      unint64_t v119 = (void *)swift_slowAlloc();
      uint64_t v155 = v114;
      id v156 = v119;
      *(_DWORD *)unint64_t v118 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v120 = sub_1002222C0();
      uint64_t v155 = sub_1001BEBDC(v120, v121, (uint64_t *)&v156);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v116, v117, "Error preparing dynamic info: %{public}s", v118, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v123 = v153;
    id v124 = v138;
    id v125 = v152;
    swift_errorRetain();
    v123(0, v114);

    swift_errorRelease();
    swift_errorRelease();
LABEL_27:
    uint64_t v104 = (uint64_t)v57;
    return sub_1001B7EAC(v104, type metadata accessor for SignedPeerStableInfo);
  }
  uint64_t v79 = v72;
  uint64_t v80 = v131;
  id v81 = v156;
  id v82 = v78;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v83 = [v82 data];
  uint64_t v84 = sub_100221BF0();
  uint64_t v86 = v85;

  *uint64_t v80 = v84;
  v80[1] = v86;
  id v150 = v82;
  id v87 = [v82 sig];
  uint64_t v88 = sub_100221BF0();
  uint64_t v90 = v89;

  v80[2] = v88;
  v80[3] = v90;
  __chkstk_darwin(v91, v92);
  sub_1001A56AC((unint64_t *)&unk_10029EC80, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
  uint64_t v93 = (uint64_t)v134;
  sub_100221F70();
  uint64_t v94 = *(void *)&v79[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
  uint64_t v95 = *(void *)&v79[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
  Class v151 = sub_1000059A4(&v79[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v94);
  uint64_t v96 = (void *)swift_allocObject();
  id v98 = v152;
  uint64_t v97 = v153;
  v96[2] = v79;
  v96[3] = v98;
  uint64_t v99 = v154;
  v96[4] = v97;
  v96[5] = v99;
  uint64_t v100 = *(void *)(v95 + 16);
  os_log_type_t v101 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v100 + 112);
  id v102 = v98;
  uint64_t v103 = v79;
  swift_retain();
  v101(v93, sub_1001B1278, v96, v94, v100);

  swift_release();
  sub_1001B7EAC(v93, type metadata accessor for RemoveRecoveryKeyRequest);
  sub_1001B7EAC((uint64_t)v80, type metadata accessor for SignedPeerDynamicInfo);
  uint64_t v104 = (uint64_t)v137;
  return sub_1001B7EAC(v104, type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_100183BE8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a6;
  uint64_t v29 = a5;
  uint64_t v30 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v10 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2;
  a1[3] = a3;
  sub_1001B7C04(a4, (uint64_t)v18, type metadata accessor for SignedPeerStableInfo);
  uint64_t v19 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  uint64_t v20 = (uint64_t)a1 + *(int *)(v19 + 28);
  sub_10004015C(v20, &qword_100299F18);
  sub_1001B7B9C((uint64_t)v18, v20, type metadata accessor for SignedPeerStableInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
  sub_1001B7C04(v29, (uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
  uint64_t v21 = (uint64_t)a1 + *(int *)(v19 + 32);
  sub_10004015C(v21, &qword_10029ECA0);
  sub_1001B7B9C((uint64_t)v13, v21, type metadata accessor for SignedPeerDynamicInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v30);
  id v22 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v31
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "changeToken"));
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = sub_100222270();
    unint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v26 = 0xE000000000000000;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v24;
  a1[1] = v26;
  return result;
}

uint64_t sub_100183EA4(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a3;
  uint64_t v41 = a5;
  uint64_t v8 = type metadata accessor for RemoveRecoveryKeyResponse(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = __chkstk_darwin(v8 - 8, v11);
  uint64_t v13 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = ((char *)&v39 - v15);
  uint64_t v17 = sub_1000046DC(&qword_100299DB8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (uint64_t *)((char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v20, &qword_100299DB8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001B7B9C((uint64_t)v20, (uint64_t)v16, type metadata accessor for RemoveRecoveryKeyResponse);
    unint64_t v26 = a2;
    id v39 = *(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    sub_1001B7C04((uint64_t)v16, (uint64_t)v13, type metadata accessor for RemoveRecoveryKeyResponse);
    unint64_t v27 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v28 = (v10 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v40;
    *(void *)(v29 + 16) = a2;
    *(void *)(v29 + 24) = v30;
    sub_1001B7B9C((uint64_t)v13, v29 + v27, type metadata accessor for RemoveRecoveryKeyResponse);
    uint64_t v31 = (uint64_t *)(v29 + v28);
    uint64_t v32 = v41;
    *uint64_t v31 = a4;
    v31[1] = v32;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_1001B1428;
    *(void *)(v33 + 24) = v29;
    aBlock[4] = (uint64_t)sub_1001B8924;
    aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100283D00;
    uint64_t v34 = _Block_copy(aBlock);
    id v35 = v26;
    id v36 = v30;
    swift_retain();
    swift_retain();
    swift_release();
    [v39 performBlockAndWait:v34];
    _Block_release(v34);
    sub_1001B7EAC((uint64_t)v16, type metadata accessor for RemoveRecoveryKeyResponse);
    LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v34 & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v40 = (void *)a4;
  a4 = *v20;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v16 = sub_100222070();
  os_log_type_t v22 = sub_100222500();
  if (!os_log_type_enabled(v16, v22))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  id v23 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)id v23 = 136446210;
  uint64_t v43 = a4;
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  uint64_t v24 = sub_1002222C0();
  uint64_t v43 = sub_1001BEBDC(v24, v25, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v16, v22, "removeRecoveryKey failed: %{public}s", v23, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  id v38 = (void (*)(void, uint64_t))v40;
  swift_errorRetain();
  v38(0, a4);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_10018439C(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v47 = a5;
  id v48 = a4;
  uint64_t v46 = a3;
  uint64_t v7 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for Changes(0);
  uint64_t v11 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v16 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  id v17 = [a2 data];
  uint64_t v18 = sub_100221BF0();
  unint64_t v20 = v19;

  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v18, v20);
  [v16 setEgoPeerStableInfo:isa];

  uint64_t v22 = a1;
  id v23 = *(id *)(a1 + v15);
  id v24 = [a2 sig];
  uint64_t v25 = sub_100221BF0();
  unint64_t v27 = v26;

  Class v28 = sub_100221BD0().super.isa;
  sub_100005A40(v25, v27);
  [v23 setEgoPeerStableInfoSig:v28];

  uint64_t v29 = type metadata accessor for RemoveRecoveryKeyResponse(0);
  sub_10000D830(v46 + *(int *)(v29 + 20), (uint64_t)v10, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(v10, 1) == 1)
  {
    *(void *)uint64_t v14 = 0;
    *((void *)v14 + 1) = 0xE000000000000000;
    *((void *)v14 + 2) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v14 + 24) = xmmword_100229520;
    *(_OWORD *)(v14 + 40) = xmmword_100229520;
    v14[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v10, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1001B7B9C((uint64_t)v10, (uint64_t)v14, type metadata accessor for Changes);
  }
  sub_10017AB04((uint64_t)v14, 0);
  sub_1001B7EAC((uint64_t)v14, type metadata accessor for Changes);
  [*(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model) removeRecoveryKey];
  [*(id *)(a1 + v15) setRecoveryKeySigningSPKI:0];
  [*(id *)(a1 + v15) setRecoveryKeyEncryptionSPKI:0];
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_100222090();
  sub_100003CC8(v30, (uint64_t)qword_10029E7D0);
  uint64_t v31 = sub_100222070();
  os_log_type_t v32 = sub_1002224E0();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "removeRecoveryKey succeeded", v33, 2u);
    swift_slowDealloc();
  }

  uint64_t v34 = *(void **)(v22 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v50 = 0;
  if ([v34 save:&v50])
  {
    id v35 = v50;
    return v48(1, 0);
  }
  else
  {
    id v37 = v50;
    uint64_t v38 = sub_100221B40();

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_100222090();
    sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v40 = sub_100222070();
    os_log_type_t v41 = sub_100222500();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      id v50 = (id)swift_slowAlloc();
      *(_DWORD *)id v42 = 136446210;
      uint64_t v49 = v38;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v43 = sub_1002222C0();
      uint64_t v49 = sub_1001BEBDC(v43, v44, (uint64_t *)&v50);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "removeRecoveryKey handling failed: %{public}s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v48(0, v38);
    swift_errorRelease();
    return swift_errorRelease();
  }
}

uint64_t sub_1001849E0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC70);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v7, (uint64_t *)&unk_10029EC70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *v7;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = sub_100222070();
    os_log_type_t v11 = sub_100222500();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v17 = v8;
      uint64_t v18 = v13;
      *(_DWORD *)uint64_t v12 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v14 = sub_1002222C0();
      uint64_t v17 = sub_1001BEBDC(v14, v15, &v18);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "performATOPRVActions failed: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(v8);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    a2(0);
    return sub_10004015C((uint64_t)v7, (uint64_t *)&unk_10029EC70);
  }
}

uint64_t sub_100184C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(void), char *a6, uint64_t a7, unint64_t a8)
{
  if (a1) {
    os_log_type_t v13 = sub_100222500();
  }
  else {
    os_log_type_t v13 = a5();
  }
  os_log_type_t v14 = v13;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100222090();
  sub_100003CC8(v15, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v16 = sub_100222070();
  if (os_log_type_enabled(v16, v14))
  {
    format = a6;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    if (a1)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v22._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v22);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v18 = 0x203A726F727265;
    }
    else
    {
      uint64_t v18 = 0x73736563637573;
    }
    sub_1001BEBDC(v18, 0xE700000000000000, &v21);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v14, format, v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(a7, a8);
  return a3(a1);
}

uint64_t sub_100184EF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v55 = a1;
  uint64_t v6 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  id v54 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  os_log_type_t v13 = (char *)&v48 - v12;
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  __chkstk_darwin(Request, v14);
  id v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  uint64_t v17 = v3;
  uint64_t v18 = sub_1001984DC(v17, 0xD00000000000001ELL, 0x8000000100244C50);
  id v50 = v17;

  unint64_t v19 = (void *)swift_allocObject();
  v19[2] = v18;
  v19[3] = a2;
  uint64_t v51 = v19;
  v19[4] = a3;
  uint64_t v20 = qword_100298EB8;
  swift_retain();
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
  Swift::String v22 = sub_100222070();
  os_log_type_t v23 = sub_1002224E0();
  if (os_log_type_enabled(v22, v23))
  {
    id v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "starting fetchCurrentItem", v24, 2u);
    swift_slowDealloc();
  }

  unint64_t v27 = v55;
  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_100222970();
    uint64_t v25 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v53 = v18;
  if (!v28) {
    goto LABEL_25;
  }
  id v56 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10018D290(0, v28 & ~(v28 >> 63), 0);
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v49 = v16;
    if ((v27 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v28; ++i)
      {
        uint64_t v32 = sub_100222880();
        *(&v48 - 2) = __chkstk_darwin(v32, v33);
        sub_1001A56AC(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
        sub_100221F70();
        swift_unknownObjectRelease();
        uint64_t v29 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D290(0, v29[2] + 1, 1);
          uint64_t v29 = v56;
        }
        unint64_t v35 = v29[2];
        unint64_t v34 = v29[3];
        if (v35 >= v34 >> 1)
        {
          sub_10018D290(v34 > 1, v35 + 1, 1);
          uint64_t v29 = v56;
        }
        v29[2] = v35 + 1;
        uint64_t v25 = sub_1001B7B9C((uint64_t)v13, (uint64_t)v29+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v35, type metadata accessor for CurrentCKKSItemSpecifier);
      }
    }
    else
    {
      unint64_t v36 = v27 + 32;
      uint64_t v25 = sub_1001A56AC(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
      do
      {
        __chkstk_darwin(v25, v26);
        *(&v48 - 2) = (uint64_t)v37;
        id v38 = v37;
        sub_100221F70();

        uint64_t v29 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D290(0, v29[2] + 1, 1);
          uint64_t v29 = v56;
        }
        unint64_t v40 = v29[2];
        unint64_t v39 = v29[3];
        uint64_t v41 = (uint64_t)v54;
        if (v40 >= v39 >> 1)
        {
          sub_10018D290(v39 > 1, v40 + 1, 1);
          uint64_t v41 = (uint64_t)v54;
          uint64_t v29 = v56;
        }
        v29[2] = v40 + 1;
        uint64_t v25 = sub_1001B7B9C(v41, (uint64_t)v29+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v40, type metadata accessor for CurrentCKKSItemSpecifier);
        v36 += 8;
        --v28;
      }
      while (v28);
    }
    id v16 = v49;
LABEL_25:
    __chkstk_darwin(v25, v26);
    *(&v48 - 2) = (uint64_t)v29;
    sub_1001A56AC((unint64_t *)&unk_10029EF40, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
    sub_100221F70();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)&v50[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
    uint64_t v43 = *(void *)&v50[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
    sub_1000059A4(&v50[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v42);
    uint64_t v44 = swift_allocObject();
    uint64_t v45 = v51;
    *(void *)(v44 + 16) = sub_1001B4024;
    *(void *)(v44 + 24) = v45;
    uint64_t v46 = *(void *)(v43 + 16);
    uint64_t v47 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v46 + 136);
    swift_retain();
    v47(v16, sub_1001B40DC, v44, v42, v46);
    swift_release();
    swift_release();
    swift_release();
    return sub_1001B7EAC((uint64_t)v16, type metadata accessor for CurrentItemFetchRequest);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001855E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void), uint64_t a6, const char *a7, uint64_t a8, unint64_t a9)
{
  if (a3) {
    os_log_type_t v12 = sub_100222500();
  }
  else {
    os_log_type_t v12 = sub_1002224E0();
  }
  os_log_type_t v13 = v12;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100222090();
  sub_100003CC8(v14, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v15 = sub_100222070();
  if (os_log_type_enabled(v15, v13))
  {
    unint64_t v19 = a5;
    id v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)id v16 = 136446210;
    if (a3)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v24._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v24);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v17 = 0x203A726F727265;
    }
    else
    {
      uint64_t v17 = 0x73736563637573;
    }
    sub_1001BEBDC(v17, 0xE700000000000000, &v23);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v13, a7, v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a5 = v19;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(a8, a9);
  return a5(a1, a2, a3);
}

uint64_t sub_100185864(uint64_t *a1, id a2)
{
  id v4 = [a2 itemPtrName];
  uint64_t v5 = sub_100222270();
  uint64_t v7 = v6;

  swift_bridgeObjectRelease();
  a1[2] = v5;
  a1[3] = v7;
  id v8 = [a2 zoneID];
  uint64_t v9 = sub_100222270();
  uint64_t v11 = v10;

  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9;
  a1[1] = v11;
  return result;
}

uint64_t sub_100185910(uint64_t a1, void (*a2)(void *, void *, uint64_t), uint64_t a3)
{
  os_log_type_t v77 = a2;
  uint64_t v5 = sub_1000046DC(&qword_1002997E0);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC((uint64_t *)&unk_10029EF50);
  __chkstk_darwin(v9 - 8, v10);
  os_log_type_t v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v75 = *(void *)(v83 - 8);
  __chkstk_darwin(v83, v13);
  uint64_t v15 = (uint64_t *)((char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = type metadata accessor for CurrentCKKSItem(0);
  uint64_t v74 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v16);
  uint64_t v85 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100221D50();
  uint64_t v78 = *(void *)(v87 - 8);
  uint64_t v19 = __chkstk_darwin(v87, v18);
  uint64_t v76 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v84 = (char *)&v69 - v23;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v69 - v25;
  uint64_t Response = type metadata accessor for CurrentItemFetchResponse(0);
  __chkstk_darwin(Response - 8, v28);
  uint64_t v30 = (uint64_t *)((char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = sub_1000046DC(&qword_100299D98);
  __chkstk_darwin(v31, v32);
  unint64_t v34 = (uint64_t *)((char *)&v69 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v34, &qword_100299D98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = *v34;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_100222090();
    sub_100003CC8(v36, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v37 = sub_100222070();
    os_log_type_t v38 = sub_100222500();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v88 = v35;
      uint64_t v89 = v40;
      *(_DWORD *)unint64_t v39 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v41 = sub_1002222C0();
      uint64_t v88 = sub_1001BEBDC(v41, v42, &v89);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "fetchCurrentItem failed: %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v77(_swiftEmptyArrayStorage, _swiftEmptyArrayStorage, v35);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v73 = a3;
    sub_1001B7B9C((uint64_t)v34, (uint64_t)v30, type metadata accessor for CurrentItemFetchResponse);
    uint64_t v43 = v30[1];
    uint64_t v89 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v44 = *(void *)(v43 + 16);
    id v81 = v8;
    id v82 = v12;
    uint64_t v72 = v30;
    if (v44)
    {
      uint64_t v71 = v15;
      uint64_t v45 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
      uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
      uint64_t v47 = v43 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
      uint64_t v79 = *(void *)(v78 + 72);
      uint64_t v80 = (unsigned int (**)(char *, uint64_t, uint64_t))v45;
      uint64_t v48 = (void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v70 = v43;
      swift_bridgeObjectRetain();
      uint64_t v49 = (uint64_t)v85;
      uint64_t v50 = v87;
      do
      {
        v46(v26, v47, v50);
        v46(v84, (uint64_t)v26, v50);
        uint64_t v51 = sub_100222620();
        (*v48)(v26, v50);
        if (v51)
        {
          sub_1002223A0();
          if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1002223F0();
          }
          sub_100222410();
          sub_1002223E0();
          uint64_t v49 = (uint64_t)v85;
        }
        v47 += v79;
        --v44;
      }
      while (v44);
      id v52 = (void *)v89;
      os_log_type_t v12 = v82;
      uint64_t v15 = v71;
      uint64_t v30 = v72;
    }
    else
    {
      swift_bridgeObjectRetain();
      id v52 = _swiftEmptyArrayStorage;
      uint64_t v49 = (uint64_t)v85;
    }
    swift_bridgeObjectRelease();
    uint64_t v54 = *v30;
    uint64_t v55 = *(void *)(*v30 + 16);
    id v56 = _swiftEmptyArrayStorage;
    if (v55)
    {
      uint64_t v71 = v52;
      uint64_t v89 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1002228D0();
      uint64_t v57 = v74;
      unint64_t v58 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      uint64_t v70 = v54;
      uint64_t v59 = v54 + v58;
      uint64_t v84 = (char *)sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
      uint64_t v60 = v76;
      uint64_t v79 = *(void *)(v57 + 72);
      uint64_t v80 = (unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
      uint64_t v61 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
      v78 += 32;
      while (1)
      {
        sub_1001B7C04(v59, v49, type metadata accessor for CurrentCKKSItem);
        sub_10000D830(v49 + *(int *)(v86 + 24), (uint64_t)v12, (uint64_t *)&unk_10029EF50);
        if ((*v80)(v12, 1, v83) == 1)
        {
          *uint64_t v15 = 0;
          v15[1] = 0xE000000000000000;
          v15[2] = 0;
          v15[3] = 0xE000000000000000;
          _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
          sub_10004015C((uint64_t)v12, (uint64_t *)&unk_10029EF50);
        }
        else
        {
          sub_1001B7B9C((uint64_t)v12, (uint64_t)v15, type metadata accessor for CurrentCKKSItemSpecifier);
        }
        id v62 = objc_allocWithZone((Class)CuttlefishCurrentItemSpecifier);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v63 = sub_100222260();
        swift_bridgeObjectRelease();
        NSString v64 = sub_100222260();
        swift_bridgeObjectRelease();
        id v65 = [v62 init:v63 zoneID:v64];

        sub_1001B7EAC((uint64_t)v15, type metadata accessor for CurrentCKKSItemSpecifier);
        uint64_t v49 = (uint64_t)v85;
        uint64_t v66 = (uint64_t)v81;
        sub_10000D830((uint64_t)&v85[*(int *)(v86 + 20)], (uint64_t)v81, &qword_1002997E0);
        uint64_t v67 = v87;
        if ((*v61)(v66, 1, v87) == 1)
        {
          sub_100221D40();
          sub_10004015C(v66, &qword_1002997E0);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))v78)(v60, v66, v67);
        }
        uint64_t result = sub_100222620();
        os_log_type_t v12 = v82;
        if (!result) {
          break;
        }
        uint64_t v68 = (void *)result;
        [objc_allocWithZone((Class)CuttlefishCurrentItem) init:v65 item:result];

        sub_1001B7EAC(v49, type metadata accessor for CurrentCKKSItem);
        sub_1002228B0();
        sub_1002228E0();
        sub_1002228F0();
        sub_1002228C0();
        v59 += v79;
        if (!--v55)
        {
          id v56 = (void *)v89;
          swift_bridgeObjectRelease();
          id v52 = v71;
          goto LABEL_28;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_28:
      v77(v56, v52, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1001B7EAC((uint64_t)v72, type metadata accessor for CurrentItemFetchResponse);
    }
  }
  return result;
}

uint64_t sub_100186300(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v55 = a1;
  uint64_t v6 = type metadata accessor for PCSService(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v54 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  __chkstk_darwin(Request, v14);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  uint64_t v17 = v3;
  uint64_t v18 = sub_1001984DC(v17, 0xD000000000000026, 0x8000000100244C20);
  uint64_t v50 = v17;

  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v18;
  v19[3] = a2;
  uint64_t v51 = v19;
  v19[4] = a3;
  uint64_t v20 = qword_100298EB8;
  swift_retain();
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_1002224E0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "starting fetchPCSIdentityByKey", v24, 2u);
    swift_slowDealloc();
  }

  unint64_t v27 = v55;
  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_100222970();
    uint64_t v25 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v53 = v18;
  if (!v28) {
    goto LABEL_25;
  }
  id v56 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10018D2CC(0, v28 & ~(v28 >> 63), 0);
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v49 = v16;
    if ((v27 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v28; ++i)
      {
        uint64_t v32 = sub_100222880();
        *(&v48 - 2) = __chkstk_darwin(v32, v33);
        sub_1001A56AC(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService);
        sub_100221F70();
        swift_unknownObjectRelease();
        uint64_t v29 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D2CC(0, v29[2] + 1, 1);
          uint64_t v29 = v56;
        }
        unint64_t v35 = v29[2];
        unint64_t v34 = v29[3];
        if (v35 >= v34 >> 1)
        {
          sub_10018D2CC(v34 > 1, v35 + 1, 1);
          uint64_t v29 = v56;
        }
        v29[2] = v35 + 1;
        uint64_t v25 = sub_1001B7B9C((uint64_t)v13, (uint64_t)v29+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v35, type metadata accessor for PCSService);
      }
    }
    else
    {
      unint64_t v36 = v27 + 32;
      uint64_t v25 = sub_1001A56AC(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService);
      do
      {
        __chkstk_darwin(v25, v26);
        *(&v48 - 2) = (uint64_t)v37;
        id v38 = v37;
        sub_100221F70();

        uint64_t v29 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D2CC(0, v29[2] + 1, 1);
          uint64_t v29 = v56;
        }
        unint64_t v40 = v29[2];
        unint64_t v39 = v29[3];
        uint64_t v41 = (uint64_t)v54;
        if (v40 >= v39 >> 1)
        {
          sub_10018D2CC(v39 > 1, v40 + 1, 1);
          uint64_t v41 = (uint64_t)v54;
          uint64_t v29 = v56;
        }
        v29[2] = v40 + 1;
        uint64_t v25 = sub_1001B7B9C(v41, (uint64_t)v29+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v40, type metadata accessor for PCSService);
        v36 += 8;
        --v28;
      }
      while (v28);
    }
    uint64_t v16 = v49;
LABEL_25:
    __chkstk_darwin(v25, v26);
    *(&v48 - 2) = (uint64_t)v29;
    sub_1001A56AC((unint64_t *)&unk_10029EF20, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
    sub_100221F70();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)&v50[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
    uint64_t v43 = *(void *)&v50[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
    sub_1000059A4(&v50[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v42);
    uint64_t v44 = swift_allocObject();
    uint64_t v45 = v51;
    *(void *)(v44 + 16) = sub_1001B3FD8;
    *(void *)(v44 + 24) = v45;
    uint64_t v46 = *(void *)(v43 + 16);
    uint64_t v47 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v46 + 128);
    swift_retain();
    v47(v16, sub_1001B4018, v44, v42, v46);
    swift_release();
    swift_release();
    swift_release();
    return sub_1001B7EAC((uint64_t)v16, type metadata accessor for DirectPCSIdentityFetchRequest);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001869F4(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void, void, void))
{
  if (a3) {
    os_log_type_t v9 = sub_100222500();
  }
  else {
    os_log_type_t v9 = sub_1002224E0();
  }
  os_log_type_t v10 = v9;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = sub_100222070();
  if (os_log_type_enabled(v12, v10))
  {
    uint64_t v18 = a5;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    if (a3)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v20._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v20);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v14 = 0x203A726F727265;
    }
    else
    {
      uint64_t v14 = 0x73736563637573;
    }
    sub_1001BEBDC(v14, 0xE700000000000000, &v19);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v10, "fetchPCSIdentityByKey complete: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a5 = v18;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD000000000000026, 0x8000000100244C20);
  if (a1) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  if (a2) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a5(v15, v16, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100186CB0(uint64_t a1, id a2)
{
  Class isa = (Class)[a2 PCSServiceID];
  if (!isa)
  {
    sub_1000047D8(0, &qword_10029EEF8);
    Class isa = sub_100222630(-1).super.super.isa;
  }
  int v5 = sub_100222AD0();

  *(_DWORD *)a1 = v5;
  id v6 = [a2 PCSPublicKey];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_100221BF0();
    unint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v10 = 0xC000000000000000;
  }
  sub_100005A40(*(void *)(a1 + 8), *(void *)(a1 + 16));
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v10;
  id v11 = [a2 zoneID];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_100222270();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v15;
  return result;
}

uint64_t sub_100186DD4(uint64_t a1, void (*a2)(void *, void *, uint64_t), uint64_t a3)
{
  uint64_t v54 = a2;
  uint64_t v5 = type metadata accessor for DirectPCSIdentity(0);
  uint64_t v52 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v53 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100221D50();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)v50 - v15;
  uint64_t Response = type metadata accessor for DirectPCSIdentityFetchResponse(0);
  __chkstk_darwin(Response - 8, v18);
  Swift::String v20 = (void *)((char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_1000046DC(&qword_100299D88);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (void *)((char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D830(a1, (uint64_t)v24, &qword_100299D88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = *v24;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_100222090();
    sub_100003CC8(v26, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v27 = sub_100222070();
    os_log_type_t v28 = sub_100222500();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v58 = v25;
      uint64_t v59 = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v31 = sub_1002222C0();
      uint64_t v58 = sub_1001BEBDC(v31, v32, &v59);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "fetchPCSIdentityByKey failed: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    v54(_swiftEmptyArrayStorage, _swiftEmptyArrayStorage, v25);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    v50[2] = a3;
    sub_1001B7B9C((uint64_t)v24, (uint64_t)v20, type metadata accessor for DirectPCSIdentityFetchResponse);
    uint64_t v33 = v20[1];
    uint64_t v59 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v51 = v20;
    if (v34)
    {
      uint64_t v35 = sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
      id v38 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v37 = v9 + 16;
      unint64_t v36 = v38;
      uint64_t v39 = v33 + ((*(unsigned __int8 *)(v37 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 64));
      uint64_t v55 = *(void *)(v37 + 56);
      uint64_t v56 = v35;
      uint64_t v57 = v37;
      unint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
      v50[1] = v33;
      swift_bridgeObjectRetain();
      do
      {
        v36(v16, v39, v8);
        v36(v13, (uint64_t)v16, v8);
        uint64_t v41 = sub_100222620();
        (*v40)(v16, v8);
        if (v41)
        {
          sub_1002223A0();
          if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1002223F0();
          }
          sub_100222410();
          sub_1002223E0();
        }
        v39 += v55;
        --v34;
      }
      while (v34);
      uint64_t v42 = (void *)v59;
      Swift::String v20 = v51;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    uint64_t v44 = *v20;
    uint64_t v45 = *(void *)(*v20 + 16);
    uint64_t v46 = _swiftEmptyArrayStorage;
    uint64_t v47 = (uint64_t)v53;
    if (v45)
    {
      uint64_t v59 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1002228D0();
      uint64_t v48 = v44 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
      uint64_t v49 = *(void *)(v52 + 72);
      do
      {
        sub_1001B7C04(v48, v47, type metadata accessor for DirectPCSIdentity);
        sub_1000456F0();
        sub_1001B7EAC(v47, type metadata accessor for DirectPCSIdentity);
        sub_1002228B0();
        sub_1002228E0();
        sub_1002228F0();
        sub_1002228C0();
        v48 += v49;
        --v45;
      }
      while (v45);
      uint64_t v46 = (void *)v59;
      swift_bridgeObjectRelease();
      Swift::String v20 = v51;
    }
    v54(v46, v42, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1001B7EAC((uint64_t)v20, type metadata accessor for DirectPCSIdentityFetchResponse);
  }
}

id sub_100187470()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Container();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100187594(uint64_t a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  sub_1000059A4(v3, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 8))(a1, v4) & 1;
}

uint64_t sub_100187600@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1000059E8(a2, a3);
      uint64_t v10 = (char *)sub_100221A30();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_100221A60();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_100221A50();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x100187864);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100005A40(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_100221A30();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_100221A60();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_100221A50();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_100187874(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_100222B00();
    swift_bridgeObjectRetain();
    sub_1002222E0();
    Swift::Int v18 = sub_100222B20();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    size_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_100222A30() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        char v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_100222A30() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100187B18(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000046DC(&qword_10029ED68);
  uint64_t v10 = *(void *)(type metadata accessor for TLKShare(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_100222950();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for TLKShare(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001A0710(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_100187D80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000046DC(&qword_10029EE58);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001A0868(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100187E90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000046DC(&qword_10029EE38);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10019A360(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_100187FB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000046DC((uint64_t *)&unk_100299820);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100198FF0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001880C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000046DC(&qword_10029F0F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001A5CFC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001881D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000046DC(&qword_10029EE30);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001AD24C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001882E4(uint64_t a1, void *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_100222920();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *int64_t v3 = sub_100188398(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v10 = *v3;
  *int64_t v3 = 0x8000000000000000;
  sub_10018B334(a1, a2, isUniquelyReferenced_nonNull_native);
  *int64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100188398(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1000046DC(&qword_10029EDD0);
    uint64_t v2 = sub_1002229B0();
    uint64_t v18 = v2;
    sub_100222910();
    uint64_t v3 = sub_100222940();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
      do
      {
        swift_dynamicCast();
        sub_1000047D8(0, &qword_10029EDB8);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_100189CAC(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = sub_100222640(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_100222940();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_1001885EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000046DC(&qword_100299588);
  uint64_t v6 = sub_1002229A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    size_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    BOOL v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2)
    {
      sub_100005A98(v23, v35);
    }
    else
    {
      sub_1000663DC((uint64_t)v23, (uint64_t)v35);
      id v24 = v22;
    }
    sub_100222B00();
    type metadata accessor for CFString(0);
    sub_1001A56AC(&qword_10029EEF0, type metadata accessor for CFString);
    sub_100221D70();
    uint64_t result = sub_100222B20();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_100005A98(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100188928(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000046DC(&qword_100299530);
  uint64_t v6 = sub_1002229A0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      id v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_100005A98(v24, v35);
      }
      else
      {
        sub_1000663DC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_100222B00();
      sub_1002222E0();
      uint64_t result = sub_100222B20();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_100005A98(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100188C28(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000046DC((uint64_t *)&unk_10029EB40);
  char v39 = a2;
  uint64_t v6 = sub_1002229A0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v39)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      char v28 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      uint64_t v32 = v28[2];
      uint64_t v31 = v28[3];
      int64_t v33 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v34 = v33;
      }
      sub_100222B00();
      swift_bridgeObjectRetain();
      sub_1002222E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1002222E0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_100222B20();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int64_t v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
      *int64_t v18 = v30;
      v18[1] = v29;
      v18[2] = v32;
      v18[3] = v31;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100188F70(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_100221B80();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1000046DC(&qword_100299560);
  int v47 = a2;
  uint64_t v11 = sub_1002229A0();
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v43 = (void *)(v12 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v41 = v3;
  int64_t v42 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v46 = v6;
  int64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v19 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v12; ; uint64_t v12 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v42) {
      break;
    }
    BOOL v26 = v43;
    unint64_t v27 = v43[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v27 = v43[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v43[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v42) {
              goto LABEL_34;
            }
            unint64_t v27 = v43[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v46 + 72);
    unint64_t v30 = *(void *)(v12 + 48) + v29 * v24;
    if (v47)
    {
      (*v18)(v9, v30, v5);
      id v31 = *(id *)(*(void *)(v12 + 56) + 8 * v24);
    }
    else
    {
      (*v44)(v9, v30, v5);
      id v31 = *(id *)(*(void *)(v12 + 56) + 8 * v24);
    }
    sub_1001A56AC((unint64_t *)&unk_10029EC50, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = sub_1002221F0();
    uint64_t v32 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v19 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v33) & ~*(void *)(v19 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v19 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v22 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v18)(*(void *)(v13 + 48) + v29 * v22, v9, v5);
    *(void *)(*(void *)(v13 + 56) + 8 * v22) = v31;
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v41;
  BOOL v26 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v12 + 32);
  if (v39 >= 64) {
    bzero(v26, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v26 = -1 << v39;
  }
  *(void *)(v12 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_100189394(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000046DC(&qword_10029F090);
  char v42 = a2;
  uint64_t v6 = sub_1002229A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    char v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_100222B00();
    sub_1002222E0();
    uint64_t result = sub_100222B20();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001896BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000046DC(&qword_100299540);
  uint64_t v6 = sub_1002229A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_100005A98((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_10000B888(v25, (uint64_t)&v38);
      sub_1000663DC(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1002227D0(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_100005A98(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001899D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000046DC(&qword_10029EDA8);
  uint64_t v6 = sub_1002229A0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    unint64_t v32 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v15 << 6);
      }
      else
      {
        int64_t v22 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v12) {
          goto LABEL_33;
        }
        unint64_t v23 = v9[v22];
        ++v15;
        if (!v23)
        {
          int64_t v15 = v22 + 1;
          if (v22 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v23 = v9[v15];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v31;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v9[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v15 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v23 = v9[v15];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
      }
      unint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
      {
        id v30 = v29;
        sub_1000059E8(v33, *((unint64_t *)&v33 + 1));
      }
      uint64_t result = sub_100222640(*(void *)(v7 + 40));
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v7 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100189CAC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000046DC(&qword_10029EDD0);
  uint64_t v6 = sub_1002229A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_100222640(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100189F80(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000046DC(a3);
  char v39 = a2;
  uint64_t v7 = sub_1002229A0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    id v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_100222B00();
    sub_1002222E0();
    uint64_t result = sub_100222B20();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_10018A28C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000046DC(a3);
  char v37 = a2;
  uint64_t v7 = sub_1002229A0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_100222B00();
    sub_1002222E0();
    uint64_t result = sub_100222B20();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

_OWORD *sub_10018A5A0(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10000AA94((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_10018B9CC();
      goto LABEL_7;
    }
    sub_1001885EC(v12, a3 & 1);
    unint64_t v18 = sub_10000AA94((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CFString(0);
    uint64_t result = (_OWORD *)sub_100222A60();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_100004788((uint64_t)v16);
    return sub_100005A98(a1, v16);
  }
LABEL_13:
  sub_10018B7C4(v9, (uint64_t)a2, a1, v15);

  return a2;
}

_OWORD *sub_10018A6E4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10000AB48(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10018BB94();
      goto LABEL_7;
    }
    sub_100188928(v15, a4 & 1);
    unint64_t v21 = sub_10000AB48(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_100222A60();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    char v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_100004788((uint64_t)v19);
    return sub_100005A98(a1, v19);
  }
LABEL_13:
  sub_10018B82C(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

id sub_10018A840(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 8:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
    case 6:
    case 10:
    case 11:
      uint64_t result = (id)swift_errorRetain();
      break;
    case 9:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ContainerError(uint64_t a1)
{
}

uint64_t _s18TrustedPeersHelper14ContainerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10018A840(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ContainerError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10018A840(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100113EE8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ContainerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100113EE8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF3 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 243);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xD) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 243;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10018AA3C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 0xCu) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 13);
  }
}

uint64_t sub_10018AA54(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xD)
  {
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 13;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContainerError()
{
  return &type metadata for ContainerError;
}

uint64_t type metadata accessor for Container()
{
  return self;
}

uint64_t type metadata accessor for Container.SemaphoreWrapper()
{
  return self;
}

uint64_t type metadata accessor for Container.DBAdapter()
{
  return self;
}

uint64_t destroy for ContainerName()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContainerName(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContainerName(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ContainerName(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for ContainerName(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerName(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerName()
{
  return &type metadata for ContainerName;
}

unint64_t sub_10018ACC4()
{
  unint64_t result = qword_10029EB38;
  if (!qword_10029EB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029EB38);
  }
  return result;
}

void sub_10018AD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_10000A9D4(a2, a3, a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_10018BD7C();
LABEL_7:
    char v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];

      *(void *)(v23 + 8 * v16) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100188C28(v19, a6 & 1);
  unint64_t v24 = sub_10000A9D4(a2, a3, a4, a5);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_17:
    sub_100222A60();
    __break(1u);
    return;
  }
  unint64_t v16 = v24;
  char v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  char v26 = (uint64_t *)(v22[6] + 32 * v16);
  *char v26 = a2;
  v26[1] = a3;
  v26[2] = a4;
  v26[3] = a5;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v27 = v22[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v29;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
}

void sub_10018AEB8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_100221B80();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v15 = sub_10000AC48(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v4;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];

      *(void *)(v22 + 8 * v15) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_10018BF48();
    goto LABEL_7;
  }
  sub_100188F70(v18, a3 & 1);
  unint64_t v23 = sub_10000AC48(a2);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_14:
    sub_100222A60();
    __break(1u);
    return;
  }
  unint64_t v15 = v23;
  uint64_t v21 = *v4;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  sub_10018B898(v15, (uint64_t)v12, a1, v21);
}

uint64_t sub_10018B060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10000AB48(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10018C1E0();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      void *v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_100189394(v17, a5 & 1);
  unint64_t v23 = sub_10000AB48(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_100222A60();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  char v26 = (void *)(v20[7] + 16 * v14);
  *char v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_10018B1E8(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10000ABC0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10018C39C();
      goto LABEL_7;
    }
    sub_1001896BC(v13, a3 & 1);
    unint64_t v19 = sub_10000ABC0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_10000B888(a2, (uint64_t)v21);
      return sub_10018B950(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_100222A60();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_100004788((uint64_t)v17);

  return sub_100005A98(a1, v17);
}

void sub_10018B334(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10000AC04((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_10018C584();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100189CAC(v12, a3 & 1);
  unint64_t v17 = sub_10000AC04((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_100222A60();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;

  id v23 = a2;
}

void sub_10018B4A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10000AB48(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_10018C72C(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100189F80(v17, a4 & 1, a5);
  unint64_t v22 = sub_10000AB48(a2, a3);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    sub_100222A60();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v24 = (uint64_t *)(v20[6] + 16 * v14);
  *char v24 = a2;
  v24[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v27;

  swift_bridgeObjectRetain();
}

uint64_t sub_10018B630(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10018B63C(a1, a2, a3, a4, (uint64_t *)&unk_10029EC40);
}

uint64_t sub_10018B63C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10000AB48(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_10018C8D8(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10018A28C(v17, a4 & 1, a5);
  unint64_t v23 = sub_10000AB48(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_100222A60();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a2;
  v25[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v28;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_10018B7C4(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_100005A98(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_10018B82C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100005A98(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_10018B898(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_100221B80();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_10018B950(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_100005A98(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

id sub_10018B9CC()
{
  uint64_t v1 = v0;
  sub_1000046DC(&qword_100299588);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1000663DC(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_100005A98(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10018BB94()
{
  uint64_t v1 = v0;
  sub_1000046DC(&qword_100299530);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1000663DC(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_100005A98(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10018BD7C()
{
  uint64_t v1 = v0;
  sub_1000046DC((uint64_t *)&unk_10029EB40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = 8 * v15;
    int64_t v22 = *(void **)(*(void *)(v2 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10018BF48()
{
  uint64_t v1 = sub_100221B80();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000046DC(&qword_100299560);
  int64_t v24 = v0;
  uint64_t v6 = *v0;
  uint64_t v7 = sub_100222990();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *int64_t v24 = v8;
    return result;
  }
  id result = (id)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v25 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  uint64_t v28 = v2 + 16;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v5, *(void *)(v6 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void **)(*(void *)(v6 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v8 + 48) + v17, v5, v1);
    *(void *)(*(void *)(v8 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_23;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10018C1E0()
{
  uint64_t v1 = v0;
  sub_1000046DC(&qword_10029F090);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10018C39C()
{
  uint64_t v1 = v0;
  sub_1000046DC(&qword_100299540);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_10000B888(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1000663DC(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_100005A98(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10018C584()
{
  uint64_t v1 = v0;
  sub_1000046DC(&qword_10029EDD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222990();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10018C72C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000046DC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100222990();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    unint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10018C8D8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000046DC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100222990();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10018CA88()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10018CAC0(void *a1@<X8>)
{
  sub_1001194BC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10018CADC(uint64_t a1, uint64_t a2)
{
  return sub_10011FEC0(a1, a2, v2);
}

uint64_t sub_10018CAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10018CB08()
{
  return swift_release();
}

void sub_10018CB10()
{
  sub_10011FF20(*(id **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(id **)(v0 + 56), *(void ***)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_10018CB38(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10018CB48()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10018CB88()
{
  return sub_10011FAFC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10018CB94()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018CBA4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *sub_10018CBCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000046DC(&qword_1002995D8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_100195D90(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1001B30B0();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10018CCB8(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_100222750();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000046DC(&qword_1002995D8);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100195F8C(&v8, v3 + 4, v2, a1);
  id result = (void *)sub_1001B30B0();
  if (v6 == (void *)v2) {
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_10018CDB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000046DC((uint64_t *)&unk_100299820);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_100196298((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1001B30B0();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10018CE9C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  if (v5 <= 0)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for TLKShare(0) - 8);
      unint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1000046DC(&qword_10029ED68);
  uint64_t v8 = *(void *)(type metadata accessor for TLKShare(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  id result = (void *)sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018D0DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D308(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D0FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D494(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10018D11C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D618(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D13C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D7A4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10018D15C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018D910(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D17C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DA9C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10018D19C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DBFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10018D1BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DED8(a1, a2, a3, (void *)*v3, &qword_10029ED68, type metadata accessor for TLKShare);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D1F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DED8(a1, a2, a3, (void *)*v3, &qword_10029EEC0, type metadata accessor for ViewKeys);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D234(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DED8(a1, a2, a3, (void *)*v3, &qword_10029EDF8, type metadata accessor for PolicyDocumentKey);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D270(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DD6C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10018D290(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DED8(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_10029EF60, type metadata accessor for CurrentCKKSItemSpecifier);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D2CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10018DED8(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_10029EF30, type metadata accessor for PCSService);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10018D308(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029EBC8);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000046DC((uint64_t *)&unk_10029EBD0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018D494(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_1002995D0);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018D618(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029EBB8);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1000046DC(&qword_10029EBC0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018D7A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC((uint64_t *)&unk_100299820);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018D910(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029F0F8);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1000046DC(&qword_10029F0A8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018DA9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029ED98);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018DBFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029EC28);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018DD6C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029EE30);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_10018DED8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000046DC(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  int64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

Swift::Int sub_10018E120(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  if ((a3 & 0xC000000000000001) != 0)
  {
    unint64_t v6 = &_swiftEmptySetSingleton;
    uint64_t v26 = &_swiftEmptySetSingleton;
    sub_100222700();
    if (sub_100222790())
    {
      unint64_t v6 = (void *)a5(0);
      do
      {
        swift_dynamicCast();
        char v9 = a1(&v25);
        if (v5)
        {
          swift_release();

          swift_release();
          return (Swift::Int)v6;
        }
        id v10 = v25;
        if (v9)
        {
          uint64_t v11 = v26;
          unint64_t v12 = v26[2];
          if (v26[3] <= v12)
          {
            sub_10018EBB4(v12 + 1, a4);
            uint64_t v11 = v26;
          }
          Swift::Int result = sub_100222640(v11[5]);
          uint64_t v14 = v11 + 7;
          uint64_t v15 = -1 << *((unsigned char *)v11 + 32);
          unint64_t v16 = result & ~v15;
          unint64_t v17 = v16 >> 6;
          if (((-1 << v16) & ~v11[(v16 >> 6) + 7]) != 0)
          {
            unint64_t v18 = __clz(__rbit64((-1 << v16) & ~v11[(v16 >> 6) + 7])) | v16 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v19 = 0;
            unint64_t v20 = (unint64_t)(63 - v15) >> 6;
            do
            {
              if (++v17 == v20 && (v19 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v21 = v17 == v20;
              if (v17 == v20) {
                unint64_t v17 = 0;
              }
              v19 |= v21;
              uint64_t v22 = v14[v17];
            }
            while (v22 == -1);
            unint64_t v18 = __clz(__rbit64(~v22)) + (v17 << 6);
          }
          *(void *)((char *)v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(void *)(v11[6] + 8 * v18) = v10;
          ++v11[2];
        }
        else
        {
        }
      }
      while (sub_100222790());
      unint64_t v6 = v26;
    }
    swift_release();
  }
  else
  {
    uint64_t v23 = sub_10018F04C((uint64_t)a1, a2, a3, a4);
    if (!v5) {
      return v23;
    }
  }
  return (Swift::Int)v6;
}

uint64_t sub_10018E36C(uint64_t a1)
{
  return sub_10018EBB4(a1, (uint64_t *)&unk_10029EE90);
}

uint64_t sub_10018E378()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000046DC(&qword_10029EBA0);
  uint64_t v3 = sub_100222810();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_100222B00();
      sub_1002222E0();
      uint64_t result = sub_100222B20();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10018E658()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000046DC((uint64_t *)&unk_10029EE80);
  uint64_t v3 = sub_100222810();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }
      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9) {
          goto LABEL_33;
        }
        unint64_t v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v18 = v6[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v18 = v6[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v6[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      uint64_t v20 = *(void *)(v2 + 48) + 40 * v16;
      long long v29 = *(_OWORD *)v20;
      long long v30 = *(_OWORD *)(v20 + 16);
      uint64_t v31 = *(void *)(v20 + 32);
      uint64_t result = sub_1002227D0(*(void *)(v4 + 40));
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
      *(_OWORD *)uint64_t v14 = v29;
      *(_OWORD *)(v14 + 16) = v30;
      *(void *)(v14 + 32) = v31;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10018E924(uint64_t a1)
{
  return sub_10018EBB4(a1, (uint64_t *)&unk_10029EB90);
}

uint64_t sub_10018E930()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000046DC(&qword_10029EBF0);
  uint64_t result = sub_100222810();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_100222AF0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10018EBB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_1000046DC(a2);
  uint64_t v5 = sub_100222810();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    long long v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_100222640(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_10018EE50(uint64_t a1, void *a2)
{
  sub_100222640(a2[5]);
  unint64_t result = sub_1002226E0();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_10018EED4(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

uint64_t sub_10018F04C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = (uint64_t (*)(id *))isStackAllocationSafe;
  char v9 = *(unsigned char *)(a3 + 32);
  unint64_t v10 = (unint64_t)((1 << v9) + 63) >> 6;
  size_t v11 = 8 * v10;
  if ((v9 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    sub_10018FBD0((unint64_t *)((char *)&v17 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, a3, v8, a2, a4);
    uint64_t v13 = v12;
    swift_release();
    if (v4) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v11);
    sub_10018FBD0((unint64_t *)v14, v10, a3, v8, a2, a4);
    uint64_t v13 = v15;
    swift_release();
    swift_slowDealloc();
  }
  return v13;
}

unint64_t *sub_10018F1E4(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    unint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) status];
    if (!result)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100190090(v4, a2, v5, a3, (uint64_t *)&unk_10029EB90);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_10018F388(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    unint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) status];
    if (result == (unint64_t *)4)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100190090(v4, a2, v5, a3, (uint64_t *)&unk_10029EB90);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_10018F530(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    unint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) status];
    if (result == (unint64_t *)3)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100190090(v4, a2, v5, a3, (uint64_t *)&unk_10029EB90);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_10018F6D8(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    unint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) status];
    if (result == (unint64_t *)5)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100190090(v4, a2, v5, a3, (uint64_t *)&unk_10029EB90);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_10018F880(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    unint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) status];
    if (result == (unint64_t *)2)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100190090(v4, a2, v5, a3, (uint64_t *)&unk_10029EB90);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_10018FA28(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    unint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) status];
    if (result == (unint64_t *)1)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100190090(v4, a2, v5, a3, (uint64_t *)&unk_10029EB90);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_10018FBD0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t *a6)
{
  uint64_t v23 = 0;
  int64_t v9 = 0;
  uint64_t v24 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v25 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v14 = v13 | (v9 << 6);
LABEL_17:
    id v26 = *(id *)(*(void *)(a3 + 48) + 8 * v14);
    id v18 = v26;
    char v19 = a4(&v26);

    if (v6) {
      return;
    }
    if (v19)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v23++, 1);
      if (v15) {
        goto LABEL_30;
      }
    }
  }
  BOOL v15 = __OFADD__(v9++, 1);
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 >= v25) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v9);
  if (v16)
  {
LABEL_16:
    unint64_t v12 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v9 << 6);
    goto LABEL_17;
  }
  int64_t v17 = v9 + 1;
  if (v9 + 1 >= v25) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v9 + 2;
  if (v9 + 2 >= v25) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v9 + 3;
  if (v9 + 3 >= v25)
  {
LABEL_27:
    swift_retain();
    sub_100190090(a1, a2, v23, a3, a6);
    return;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v9 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v25) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_10018FDE0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100190090(a1, a2, a3, a4, (uint64_t *)&unk_10029EE90);
}

uint64_t sub_10018FDEC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000046DC(&qword_10029EBA0);
  uint64_t result = sub_100222830();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    int64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_100222B00();
    swift_bridgeObjectRetain();
    sub_1002222E0();
    uint64_t result = sub_100222B20();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100190084(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100190090(a1, a2, a3, a4, (uint64_t *)&unk_10029EB90);
}

uint64_t sub_100190090(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a4;
  if (!a3)
  {
    uint64_t v10 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v10;
  }
  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v5;
  }
  sub_1000046DC(a5);
  uint64_t result = sub_100222830();
  uint64_t v10 = (void *)result;
  uint64_t v30 = a1;
  if (a2 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *a1;
  }
  uint64_t v12 = 0;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    uint64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    if (v16 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v16];
    ++v12;
    if (!v17)
    {
      uint64_t v12 = v16 + 1;
      if (v16 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v17 = v30[v12];
      if (!v17)
      {
        uint64_t v12 = v16 + 2;
        if (v16 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v12];
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = v10[5];
    id v20 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    uint64_t result = sub_100222640(v19);
    uint64_t v21 = -1 << *((unsigned char *)v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v13 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(v10[6] + 8 * v24) = v20;
    ++v10[2];
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6) {
      goto LABEL_36;
    }
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= a2) {
    goto LABEL_36;
  }
  unint64_t v17 = v30[v18];
  if (v17)
  {
    uint64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v12];
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1001902EC(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_100222B00();
  swift_bridgeObjectRetain();
  sub_1002222E0();
  Swift::Int v8 = sub_100222B20();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_100222A30() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_100222A30() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100190F78(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10019049C(void *a1, void *a2, void (*a3)(void), uint64_t *a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = v6;
  uint64_t v12 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v14 = *v6;
    }
    else {
      uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v15 = a2;
    uint64_t v16 = sub_100222770();

    if (v16)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v40;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100222750();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v30 = sub_100190B78(v14, result + 1, a4, a6);
    uint64_t v41 = (void *)v30;
    unint64_t v31 = *(void *)(v30 + 16);
    if (*(void *)(v30 + 24) <= v31)
    {
      uint64_t v36 = v31 + 1;
      id v37 = v15;
      sub_10018EBB4(v36, a4);
      uint64_t v32 = v41;
    }
    else
    {
      uint64_t v32 = (void *)v30;
      id v33 = v15;
    }
    sub_10018EE50((uint64_t)v15, v32);
    *uint64_t v9 = (uint64_t)v32;
    swift_bridgeObjectRelease();
    *a1 = v15;
  }
  else
  {
    Swift::Int v19 = *(void *)(v12 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v20 = sub_100222640(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v22 = v20 & ~v21;
    if ((*(void *)(v12 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
    {
      a3(0);
      id v23 = *(id *)(*(void *)(v12 + 48) + 8 * v22);
      char v24 = sub_100222650();

      if (v24)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v28 = *(void **)(*(void *)(*v9 + 48) + 8 * v22);
        *a1 = v28;
        id v29 = v28;
        return 0;
      }
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v12 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(v12 + 48) + 8 * v22);
        char v27 = sub_100222650();

        if (v27) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = *v9;
    *uint64_t v9 = 0x8000000000000000;
    id v35 = a2;
    sub_100191280((uint64_t)v35, v22, isUniquelyReferenced_nonNull_native, a4, a5);
    *uint64_t v9 = v42;
    swift_bridgeObjectRelease();
    *a1 = v35;
  }
  return 1;
}

uint64_t sub_10019075C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_100222AF0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10019140C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100190858(void *a1, void *a2)
{
  return sub_10019049C(a1, a2, (void (*)(void))type metadata accessor for MachineMO, (uint64_t *)&unk_10029EB90, (void (*)(void))type metadata accessor for MachineMO, (void (*)(void))type metadata accessor for MachineMO);
}

uint64_t sub_100190890(void *a1, void *a2)
{
  return sub_1001908AC(a1, a2, &qword_10029EC30, (uint64_t)TPVoucher_ptr, &qword_10029EC38);
}

uint64_t sub_1001908AC(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_100222770();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_1000047D8(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100222750();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_100190D74(v12, result + 1, a5, a3);
    uint64_t v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_10018EBB4(v33, a5);
      id v29 = v38;
    }
    else
    {
      id v29 = (void *)v27;
      id v30 = v13;
    }
    sub_10018EE50((uint64_t)v13, v29);
    *uint64_t v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = sub_100222640(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_1000047D8(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = sub_100222650();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = sub_100222650();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    id v32 = a2;
    sub_100191530((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

Swift::Int sub_100190B78(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  if (a2)
  {
    sub_1000046DC(a3);
    uint64_t v6 = sub_100222820();
    uint64_t v19 = v6;
    sub_100222700();
    if (sub_100222790())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_10018EBB4(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_100222640(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_100222790());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

Swift::Int sub_100190D74(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_1000046DC(a3);
    uint64_t v6 = sub_100222820();
    uint64_t v19 = v6;
    sub_100222700();
    if (sub_100222790())
    {
      sub_1000047D8(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_10018EBB4(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_100222640(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_100222790());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

Swift::Int sub_100190F78(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10018E378();
  }
  else
  {
    if (v10 > v9)
    {
      Swift::Int result = (Swift::Int)sub_1001916C4();
      goto LABEL_22;
    }
    sub_100191D84();
  }
  uint64_t v11 = *v4;
  sub_100222B00();
  sub_1002222E0();
  Swift::Int result = sub_100222B20();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (Swift::Int result = sub_100222A30(), (result & 1) != 0))
    {
LABEL_21:
      Swift::Int result = sub_100222A50();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          Swift::Int result = sub_100222A30();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_100191114(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  Swift::Int v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10018E658();
  }
  else
  {
    if (v8 > v7)
    {
      Swift::Int result = (Swift::Int)sub_100191878();
      goto LABEL_12;
    }
    sub_100192034();
  }
  uint64_t v9 = *v3;
  Swift::Int result = sub_1002227D0(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_10000B888(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      char v12 = sub_1002227E0();
      Swift::Int result = sub_10000B8E4((uint64_t)v19);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  Swift::Int result = sub_100222A50();
  __break(1u);
  return result;
}

void sub_100191280(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_10018EBB4(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100191BE0(a4);
      goto LABEL_14;
    }
    sub_10019252C(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = sub_100222640(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_100222650();

    if (v16)
    {
LABEL_13:
      sub_100222A50();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_100222650();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_10019140C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10018E930();
  }
  else
  {
    if (v7 > v6)
    {
      Swift::Int result = (uint64_t)sub_100191A48();
      goto LABEL_14;
    }
    sub_1001922C8();
  }
  uint64_t v8 = *v3;
  Swift::Int result = sub_100222AF0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      Swift::Int result = sub_100222A50();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_100191530(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_10018EBB4(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100191BE0(a4);
      goto LABEL_14;
    }
    sub_10019252C(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = sub_100222640(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1000047D8(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_100222650();

    if (v16)
    {
LABEL_13:
      sub_100222A50();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_100222650();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

void *sub_1001916C4()
{
  uint64_t v1 = v0;
  sub_1000046DC(&qword_10029EBA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222800();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    char v19 = (void *)(*(void *)(v4 + 48) + v16);
    *char v19 = *v17;
    v19[1] = v18;
    Swift::Int result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100191878()
{
  uint64_t v1 = v0;
  sub_1000046DC((uint64_t *)&unk_10029EE80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222800();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    Swift::Int result = (void *)sub_10000B888(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100191A48()
{
  uint64_t v1 = v0;
  sub_1000046DC(&qword_10029EBF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100222800();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_100191BE0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000046DC(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100222800();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100191D84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000046DC(&qword_10029EBA0);
  uint64_t v3 = sub_100222810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_100222B00();
    swift_bridgeObjectRetain();
    sub_1002222E0();
    uint64_t result = sub_100222B20();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100192034()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000046DC((uint64_t *)&unk_10029EE80);
  uint64_t v3 = sub_100222810();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_10000B888(*(void *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    uint64_t result = sub_1002227D0(*(void *)(v4 + 40));
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
    long long v15 = v29[0];
    long long v16 = v29[1];
    *(void *)(v14 + 32) = v30;
    *(_OWORD *)uint64_t v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(void *)(v4 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001922C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000046DC(&qword_10029EBF0);
  uint64_t result = sub_100222810();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_100222AF0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10019252C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_1000046DC(a2);
  uint64_t v5 = sub_100222810();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_100222640(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001927A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100222970();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100222970();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1001B46CC(&qword_10029ED88, &qword_10029ED80);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000046DC(&qword_10029ED80);
          uint64_t v12 = sub_1001929D8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

void (*sub_1001929D8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100192A88(v6, a2, a3);
  return sub_100192A40;
}

void sub_100192A40(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_100192A88(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_100222880();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_100192B08;
  }
  __break(1u);
  return result;
}

void sub_100192B08(id *a1)
{
}

Swift::Int sub_100192B10()
{
  if (sub_100222920())
  {
    sub_1000046DC(&qword_10029EDA8);
    uint64_t v0 = (void *)sub_1002229C0();
  }
  else
  {
    uint64_t v0 = &_swiftEmptyDictionarySingleton;
  }
  Swift::Int v21 = v0;
  sub_100222910();
  swift_unknownObjectRetain();
  uint64_t v1 = sub_100222940();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    do
    {
      unint64_t v19 = v2;
      swift_dynamicCast();
      sub_1000047D8(0, &qword_10029EDB8);
      swift_dynamicCast();
      id v10 = [v2 protobuf];
      uint64_t v11 = sub_100221BF0();
      uint64_t v13 = v12;

      uint64_t v0 = v21;
      unint64_t v14 = v21[2];
      if (v21[3] <= v14)
      {
        sub_1001899D4(v14 + 1, 1);
        uint64_t v0 = v21;
      }
      Swift::Int result = sub_100222640(v0[5]);
      id v4 = (char *)(v0 + 8);
      uint64_t v5 = -1 << *((unsigned char *)v0 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~v0[(v6 >> 6) + 8]) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~v0[(v6 >> 6) + 8])) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v15 = 0;
        unint64_t v16 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v16 && (v15 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v17 = v7 == v16;
          if (v7 == v16) {
            unint64_t v7 = 0;
          }
          v15 |= v17;
          uint64_t v18 = *(void *)&v4[8 * v7];
        }
        while (v18 == -1);
        unint64_t v8 = __clz(__rbit64(~v18)) + (v7 << 6);
      }
      *(void *)&v4[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
      *(void *)(v0[6] + 8 * v8) = v20;
      uint64_t v9 = (uint64_t *)(v0[7] + 16 * v8);
      *uint64_t v9 = v11;
      v9[1] = v13;
      ++v0[2];
      uint64_t v2 = (void *)sub_100222940();
    }
    while (v2);
  }
  swift_release();
  return (Swift::Int)v0;
}

uint64_t sub_100192D98(uint64_t a1)
{
  sub_1000046DC(&qword_100299530);
  uint64_t result = sub_100222990();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v33 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v28 = v6;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v30 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    unint64_t v16 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = *(void **)(*(void *)(v33 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v20 = v19;
    id v21 = [v20 dictionaryRepresentation];
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = sub_1002221D0();
    }
    else
    {
      uint64_t v23 = 0;
    }
    uint64_t v32 = sub_1000046DC((uint64_t *)&unk_10029F0D0);

    *(void *)&long long v31 = v23;
    *(void *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v24 = (void *)(v3[6] + 16 * i);
    *unint64_t v24 = v17;
    v24[1] = v18;
    uint64_t result = (uint64_t)sub_100005A98(&v31, (_OWORD *)(v3[7] + 32 * i));
    uint64_t v25 = v3[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v3[2] = v27;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_27;
    }
    if (v13 >= v29) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v29) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v29) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v29) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v29) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10019300C(uint64_t a1)
{
  sub_1000046DC(&qword_10029EDA8);
  uint64_t result = sub_100222990();
  int64_t v3 = 0;
  uint64_t v32 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v28 = v5;
  int64_t v29 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v30 = (void *)result;
  uint64_t v31 = result + 64;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v11 = v3;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v15 << 6))
  {
    uint64_t v17 = *(void **)(*(void *)(v32 + 56) + 8 * i);
    id v18 = *(id *)(*(void *)(v32 + 48) + 8 * i);
    id v19 = v17;
    id v20 = [v19 protobuf];
    uint64_t v21 = sub_100221BF0();
    uint64_t v23 = v22;

    uint64_t result = (uint64_t)v30;
    *(void *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v30[6] + 8 * i) = v18;
    unint64_t v24 = (uint64_t *)(v30[7] + 16 * i);
    *unint64_t v24 = v21;
    v24[1] = v23;
    uint64_t v25 = v30[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v30[2] = v27;
    int64_t v3 = v11;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v29) {
      return result;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v3 + 1;
    if (!v14)
    {
      int64_t v15 = v3 + 2;
      if (v3 + 2 >= v29) {
        return result;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v3 + 3;
        if (v3 + 3 >= v29) {
          return result;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v14 - 1) & v14;
    int64_t v11 = v15;
  }
  uint64_t v16 = v3 + 4;
  if (v3 + 4 >= v29) {
    return result;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v29) {
      return result;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10019323C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1001F4A50(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1001932B8(v6);
  return sub_1002228C0();
}

void sub_1001932B8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = sub_1002229F0(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_157;
    }
    if (v3) {
      sub_100193CF4(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_165;
  }
  Swift::Int v139 = v4;
  Swift::Int v144 = v3;
  unint64_t v137 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v151 = (uint64_t)_swiftEmptyArrayStorage;
    id v146 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
LABEL_123:
      if (v13 >= 2)
      {
        uint64_t v131 = *v137;
        do
        {
          unint64_t v132 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_152;
          }
          if (!v131) {
            goto LABEL_164;
          }
          uint64_t v133 = *(void *)&v8[16 * v132 + 32];
          uint64_t v134 = *(void *)&v8[16 * v13 + 24];
          sub_100193EE0((void **)(v131 + 8 * v133), (id *)(v131 + 8 * *(void *)&v8[16 * v13 + 16]), v131 + 8 * v134, v146);
          if (v1) {
            break;
          }
          if (v134 < v133) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1001F4334((uint64_t)v8);
          }
          if (v132 >= *((void *)v8 + 2)) {
            goto LABEL_154;
          }
          id v135 = &v8[16 * v132 + 32];
          *(void *)id v135 = v133;
          *((void *)v135 + 1) = v134;
          unint64_t v136 = *((void *)v8 + 2);
          if (v13 > v136) {
            goto LABEL_155;
          }
          memmove(&v8[16 * v13 + 16], &v8[16 * v13 + 32], 16 * (v136 - v13));
          *((void *)v8 + 2) = v136 - 1;
          unint64_t v13 = v136 - 1;
        }
        while (v136 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(void *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1002223E0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    uint64_t v7 = sub_100222400();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    id v146 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v151 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v138 = *a1 - 8;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  int64_t v11 = &selRef_setAllSelves_;
  Swift::Int v12 = v144;
  uint64_t v147 = *a1;
LABEL_15:
  Swift::Int v14 = v9 + 1;
  Swift::Int v143 = v9;
  if (v9 + 1 < v12)
  {
    Swift::Int v15 = v9;
    uint64_t v140 = v8;
    Swift::Int v16 = v9 + 1;
    uint64_t v17 = *(void **)(v10 + 8 * v15);
    id v18 = *(id *)(v10 + 8 * v14);
    id v19 = v17;
    id v20 = [v18 v11[64]];
    if (v20 == [v19 v11[64]])
    {
      id v21 = [v18 policyHash];
      uint64_t v22 = sub_100222270();
      uint64_t v24 = v23;

      id v25 = [v19 policyHash];
      uint64_t v26 = sub_100222270();
      uint64_t v28 = v27;

      if (v22 == v26 && v24 == v28) {
        uint64_t v30 = 0;
      }
      else {
        uint64_t v30 = sub_100222A30();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      Swift::Int v33 = v143 + 2;
      int64_t v11 = &selRef_setAllSelves_;
      if (v143 + 2 < v144)
      {
LABEL_26:
        Swift::Int v34 = v33;
        uint64_t v10 = v147;
        do
        {
          Swift::Int v33 = v34;
          uint64_t v37 = *(void **)(v10 + 8 * v16);
          id v38 = *(id *)(v10 + 8 * v34);
          id v39 = v37;
          id v40 = [v38 v11[64]];
          if (v40 == [v39 v11[64]])
          {
            uint64_t v41 = v30;
            Swift::Int v148 = v33;
            id v42 = [v38 policyHash];
            uint64_t v43 = sub_100222270();
            uint64_t v45 = v44;

            id v46 = [v39 policyHash];
            uint64_t v47 = sub_100222270();
            uint64_t v49 = v48;

            if (v43 == v47 && v45 == v49)
            {

              swift_bridgeObjectRelease_n();
              int64_t v11 = &selRef_setAllSelves_;
              Swift::Int v33 = v148;
              uint64_t v30 = v41;
              if (v41)
              {
                uint64_t v8 = v140;
                uint64_t v10 = v147;
                Swift::Int v9 = v143;
                goto LABEL_41;
              }
            }
            else
            {
              char v51 = sub_100222A30();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v30 = v41;
              char v52 = v41 ^ v51;
              int64_t v11 = &selRef_setAllSelves_;
              Swift::Int v33 = v148;
              if (v52) {
                goto LABEL_38;
              }
            }
          }
          else
          {
            id v35 = [v38 v11[64]];
            id v36 = [v39 v11[64]];

            if (((v30 ^ (v35 >= v36)) & 1) == 0) {
              goto LABEL_38;
            }
          }
          Swift::Int v34 = v33 + 1;
          Swift::Int v16 = v33;
          uint64_t v10 = v147;
        }
        while (v33 + 1 < v144);
        ++v33;
        goto LABEL_40;
      }
    }
    else
    {
      id v31 = [v18 v11[64]];
      id v32 = [v19 v11[64]];

      uint64_t v30 = v31 < v32;
      Swift::Int v33 = v15 + 2;
      if (v33 < v144) {
        goto LABEL_26;
      }
    }
LABEL_38:
    uint64_t v10 = v147;
LABEL_40:
    Swift::Int v14 = v33;
    uint64_t v8 = v140;
    Swift::Int v9 = v143;
    if (v30)
    {
LABEL_41:
      if (v33 < v9) {
        goto LABEL_158;
      }
      if (v9 < v33)
      {
        uint64_t v53 = (uint64_t *)(v138 + 8 * v33);
        Swift::Int v54 = v33;
        Swift::Int v55 = v9;
        uint64_t v56 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v55 != --v54)
          {
            if (!v10) {
              goto LABEL_163;
            }
            uint64_t v57 = *v56;
            *uint64_t v56 = *v53;
            *uint64_t v53 = v57;
          }
          ++v55;
          --v53;
          ++v56;
        }
        while (v55 < v54);
      }
      Swift::Int v14 = v33;
    }
  }
  if (v14 >= v144) {
    goto LABEL_75;
  }
  if (__OFSUB__(v14, v9)) {
    goto LABEL_156;
  }
  if (v14 - v9 >= v139) {
    goto LABEL_75;
  }
  if (__OFADD__(v9, v139)) {
    goto LABEL_159;
  }
  Swift::Int v58 = v144;
  if (v9 + v139 < v144) {
    Swift::Int v58 = v9 + v139;
  }
  if (v58 >= v9)
  {
    if (v14 == v58) {
      goto LABEL_75;
    }
    uint64_t v141 = v8;
    Swift::Int v142 = v58;
    uint64_t v59 = v138 + 8 * v14;
LABEL_61:
    uint64_t v61 = v59;
    id v62 = *(void **)(v10 + 8 * v14);
    Swift::Int v63 = v9;
    uint64_t v145 = v61;
    uint64_t v64 = v61;
    Swift::Int v149 = v14;
    while (1)
    {
      id v65 = *(void **)v64;
      id v66 = v62;
      id v67 = v65;
      id v68 = [v66 v11[64]];
      if (v68 == [v67 v11[64]])
      {
        id v69 = [v66 policyHash];
        uint64_t v70 = sub_100222270();
        uint64_t v72 = v71;

        id v73 = [v67 policyHash];
        uint64_t v74 = sub_100222270();
        uint64_t v76 = v75;

        if (v70 == v74 && v72 == v76)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v10 = v147;
          Swift::Int v60 = v149;
          int64_t v11 = &selRef_setAllSelves_;
LABEL_60:
          Swift::Int v14 = v60 + 1;
          uint64_t v59 = v145 + 8;
          Swift::Int v9 = v143;
          if (v14 != v142) {
            goto LABEL_61;
          }
          Swift::Int v14 = v142;
          uint64_t v8 = v141;
LABEL_75:
          if (v14 < v9) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1001F40C0(0, *((void *)v8 + 2) + 1, 1, v8);
          }
          unint64_t v83 = *((void *)v8 + 2);
          unint64_t v82 = *((void *)v8 + 3);
          unint64_t v13 = v83 + 1;
          Swift::Int v150 = v14;
          if (v83 >= v82 >> 1) {
            uint64_t v8 = sub_1001F40C0((char *)(v82 > 1), v83 + 1, 1, v8);
          }
          *((void *)v8 + 2) = v13;
          uint64_t v84 = v8 + 32;
          uint64_t v85 = &v8[16 * v83 + 32];
          *(void *)uint64_t v85 = v9;
          *((void *)v85 + 1) = v150;
          if (v83)
          {
LABEL_81:
            unint64_t v86 = v13 - 1;
            if (v13 >= 4)
            {
              uint64_t v91 = &v84[16 * v13];
              uint64_t v92 = *((void *)v91 - 8);
              uint64_t v93 = *((void *)v91 - 7);
              BOOL v97 = __OFSUB__(v93, v92);
              uint64_t v94 = v93 - v92;
              if (v97) {
                goto LABEL_140;
              }
              uint64_t v96 = *((void *)v91 - 6);
              uint64_t v95 = *((void *)v91 - 5);
              BOOL v97 = __OFSUB__(v95, v96);
              uint64_t v89 = v95 - v96;
              char v90 = v97;
              if (v97) {
                goto LABEL_141;
              }
              unint64_t v98 = v13 - 2;
              uint64_t v99 = &v84[16 * v13 - 32];
              uint64_t v101 = *(void *)v99;
              uint64_t v100 = *((void *)v99 + 1);
              BOOL v97 = __OFSUB__(v100, v101);
              uint64_t v102 = v100 - v101;
              if (v97) {
                goto LABEL_143;
              }
              BOOL v97 = __OFADD__(v89, v102);
              uint64_t v103 = v89 + v102;
              if (v97) {
                goto LABEL_146;
              }
              if (v103 >= v94)
              {
                unint64_t v121 = &v84[16 * v86];
                uint64_t v123 = *(void *)v121;
                uint64_t v122 = *((void *)v121 + 1);
                BOOL v97 = __OFSUB__(v122, v123);
                uint64_t v124 = v122 - v123;
                if (v97) {
                  goto LABEL_150;
                }
                BOOL v114 = v89 < v124;
              }
              else
              {
LABEL_94:
                if (v90) {
                  goto LABEL_142;
                }
                unint64_t v98 = v13 - 2;
                uint64_t v104 = &v84[16 * v13 - 32];
                uint64_t v106 = *(void *)v104;
                uint64_t v105 = *((void *)v104 + 1);
                BOOL v107 = __OFSUB__(v105, v106);
                uint64_t v108 = v105 - v106;
                char v109 = v107;
                if (v107) {
                  goto LABEL_145;
                }
                uint64_t v110 = &v84[16 * v86];
                uint64_t v112 = *(void *)v110;
                uint64_t v111 = *((void *)v110 + 1);
                BOOL v97 = __OFSUB__(v111, v112);
                uint64_t v113 = v111 - v112;
                if (v97) {
                  goto LABEL_148;
                }
                if (__OFADD__(v108, v113)) {
                  goto LABEL_149;
                }
                if (v108 + v113 < v89) {
                  goto LABEL_106;
                }
                BOOL v114 = v89 < v113;
              }
              if (v114) {
                unint64_t v86 = v98;
              }
            }
            else
            {
              if (v13 == 3)
              {
                uint64_t v88 = *((void *)v8 + 4);
                uint64_t v87 = *((void *)v8 + 5);
                BOOL v97 = __OFSUB__(v87, v88);
                uint64_t v89 = v87 - v88;
                char v90 = v97;
                goto LABEL_94;
              }
              uint64_t v115 = *((void *)v8 + 4);
              uint64_t v116 = *((void *)v8 + 5);
              BOOL v97 = __OFSUB__(v116, v115);
              uint64_t v108 = v116 - v115;
              char v109 = v97;
LABEL_106:
              if (v109) {
                goto LABEL_144;
              }
              os_log_type_t v117 = &v84[16 * v86];
              uint64_t v119 = *(void *)v117;
              uint64_t v118 = *((void *)v117 + 1);
              BOOL v97 = __OFSUB__(v118, v119);
              uint64_t v120 = v118 - v119;
              if (v97) {
                goto LABEL_147;
              }
              if (v120 < v108) {
                goto LABEL_14;
              }
            }
            unint64_t v125 = v86 - 1;
            if (v86 - 1 >= v13)
            {
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
              break;
            }
            if (!v10) {
              goto LABEL_162;
            }
            uint64_t v126 = &v84[16 * v125];
            uint64_t v127 = *(void *)v126;
            uint64_t v128 = &v84[16 * v86];
            uint64_t v129 = *((void *)v128 + 1);
            sub_100193EE0((void **)(v10 + 8 * *(void *)v126), (id *)(v10 + 8 * *(void *)v128), v10 + 8 * v129, v146);
            if (v1) {
              goto LABEL_134;
            }
            if (v129 < v127) {
              goto LABEL_137;
            }
            if (v86 > *((void *)v8 + 2)) {
              goto LABEL_138;
            }
            *(void *)uint64_t v126 = v127;
            *(void *)&v84[16 * v125 + 8] = v129;
            unint64_t v130 = *((void *)v8 + 2);
            if (v86 >= v130) {
              goto LABEL_139;
            }
            unint64_t v13 = v130 - 1;
            memmove(&v84[16 * v86], v128 + 16, 16 * (v130 - 1 - v86));
            *((void *)v8 + 2) = v130 - 1;
            int64_t v11 = &selRef_setAllSelves_;
            if (v130 <= 2) {
              goto LABEL_14;
            }
            goto LABEL_81;
          }
          unint64_t v13 = 1;
LABEL_14:
          Swift::Int v12 = v144;
          Swift::Int v9 = v150;
          if (v150 >= v144) {
            goto LABEL_123;
          }
          goto LABEL_15;
        }
        char v78 = sub_100222A30();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v147;
        int64_t v11 = &selRef_setAllSelves_;
        if ((v78 & 1) == 0) {
          goto LABEL_59;
        }
      }
      else
      {
        id v79 = [v66 v11[64]];
        id v80 = [v67 v11[64]];

        if (v79 >= v80)
        {
LABEL_59:
          Swift::Int v60 = v149;
          goto LABEL_60;
        }
      }
      Swift::Int v60 = v149;
      if (!v10) {
        goto LABEL_161;
      }
      id v81 = *(void **)v64;
      id v62 = *(void **)(v64 + 8);
      *(void *)uint64_t v64 = v62;
      *(void *)(v64 + 8) = v81;
      v64 -= 8;
      if (v149 == ++v63) {
        goto LABEL_60;
      }
    }
  }
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  sub_100222950();
  __break(1u);
}

void sub_100193CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    uint64_t v7 = &selRef_setAllSelves_;
    uint64_t v30 = *a4;
LABEL_6:
    uint64_t v8 = *(void **)(v5 + 8 * v4);
    uint64_t v9 = a1;
    uint64_t v29 = v6;
    uint64_t v31 = v4;
    while (1)
    {
      uint64_t v10 = *(void **)v6;
      id v11 = v8;
      id v12 = v10;
      id v13 = [v11 v7[64]];
      if (v13 == [v12 v7[64]])
      {
        id v14 = [v11 policyHash];
        uint64_t v15 = sub_100222270();
        uint64_t v17 = v16;

        id v18 = [v12 policyHash];
        uint64_t v19 = sub_100222270();
        uint64_t v21 = v20;

        if (v15 == v19 && v17 == v21)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v4 = v31;
          uint64_t v5 = v30;
          uint64_t v7 = &selRef_setAllSelves_;
LABEL_5:
          ++v4;
          uint64_t v6 = v29 + 8;
          if (v4 == a2) {
            return;
          }
          goto LABEL_6;
        }
        char v23 = sub_100222A30();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v31;
        uint64_t v5 = v30;
        uint64_t v7 = &selRef_setAllSelves_;
        if ((v23 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        id v24 = [v11 v7[64]];
        id v25 = [v12 v7[64]];

        if (v24 >= v25) {
          goto LABEL_5;
        }
      }
      if (!v5) {
        break;
      }
      uint64_t v26 = *(void **)v6;
      uint64_t v8 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v8;
      *(void *)(v6 + 8) = v26;
      v6 -= 8;
      if (v4 == ++v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100193EE0(void **__src, id *a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  id v67 = __src;
  id v66 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_59;
    }
    if (__dst != a2 || &a2[v12] <= __dst) {
      memmove(__dst, a2, 8 * v12);
    }
    Swift::Int v34 = &v4[v12];
    id v65 = v34;
    id v67 = v5;
    if (v6 >= v5 || v10 < 8)
    {
LABEL_58:
      sub_1001F41BC((void **)&v67, (const void **)&v66, &v65);
      return 1;
    }
    id v35 = (void **)(a3 - 8);
    id v36 = &selRef_setAllSelves_;
    uint64_t v37 = v5;
    uint64_t v56 = v6;
    uint64_t v57 = v4;
    while (1)
    {
      id v62 = v34;
      uint64_t v64 = v5;
      Swift::Int v60 = v35 + 1;
      id v39 = *--v34;
      id v38 = v39;
      id v40 = *--v37;
      id v41 = v38;
      id v42 = v40;
      id v43 = [v41 v36[64]];
      if (v43 == [v42 v36[64]])
      {
        id v44 = [v41 policyHash];
        uint64_t v45 = sub_100222270();
        uint64_t v58 = v46;

        id v47 = [v42 policyHash];
        uint64_t v48 = sub_100222270();
        uint64_t v50 = v49;

        if (v45 == v48 && v58 == v50)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v6 = v56;
          uint64_t v4 = v57;
        }
        else
        {
          char v52 = sub_100222A30();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v6 = v56;
          uint64_t v4 = v57;
          if (v52) {
            goto LABEL_47;
          }
        }
      }
      else
      {
        id v53 = [v41 v36[64]];
        id v54 = [v42 v36[64]];

        if (v53 < v54)
        {
LABEL_47:
          Swift::Int v34 = v62;
          id v36 = &selRef_setAllSelves_;
          if (v60 != v64 || v35 >= v64) {
            *id v35 = *v37;
          }
          id v67 = v37;
          goto LABEL_56;
        }
      }
      id v65 = v34;
      uint64_t v37 = v64;
      id v36 = &selRef_setAllSelves_;
      if (v60 < v62 || v35 >= v62 || v60 != v62) {
        *id v35 = *v34;
      }
LABEL_56:
      if (v37 > v6)
      {
        --v35;
        uint64_t v5 = v37;
        if (v34 > v4) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
  if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst) {
      memmove(__dst, __src, 8 * v9);
    }
    id v13 = &v4[v9];
    id v65 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      id v14 = &selRef_setAllSelves_;
      uint64_t v59 = v13;
      while (1)
      {
        uint64_t v15 = *v4;
        id v16 = *v5;
        id v17 = v15;
        id v18 = [v16 v14[64]];
        if (v18 == [v17 v14[64]])
        {
          Swift::Int v63 = v5;
          uint64_t v19 = v6;
          uint64_t v20 = v4;
          id v21 = [v16 policyHash];
          uint64_t v22 = sub_100222270();
          uint64_t v24 = v23;

          id v25 = [v17 policyHash];
          uint64_t v26 = sub_100222270();
          uint64_t v28 = v27;

          if (v22 == v26 && v24 == v28)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v4 = v20;
            uint64_t v6 = v19;
            uint64_t v5 = v63;
            id v13 = v59;
            id v14 = &selRef_setAllSelves_;
          }
          else
          {
            char v30 = sub_100222A30();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v4 = v20;
            uint64_t v6 = v19;
            uint64_t v5 = v63;
            id v13 = v59;
            id v14 = &selRef_setAllSelves_;
            if (v30) {
              goto LABEL_21;
            }
          }
        }
        else
        {
          id v31 = [v16 v14[64]];
          id v32 = [v17 v14[64]];

          if (v31 < v32)
          {
LABEL_21:
            Swift::Int v33 = v5 + 1;
            if (v6 < v5 || v6 >= v33 || v6 != v5) {
              *uint64_t v6 = *v5;
            }
            goto LABEL_29;
          }
        }
        if (v6 != v4) {
          *uint64_t v6 = *v4;
        }
        id v66 = ++v4;
        Swift::Int v33 = v5;
LABEL_29:
        ++v6;
        if (v4 < v13)
        {
          uint64_t v5 = v33;
          if ((unint64_t)v33 < a3) {
            continue;
          }
        }
        id v67 = v6;
        goto LABEL_58;
      }
    }
    goto LABEL_58;
  }
LABEL_59:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_1001943DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_1002227A0();

    if (v6)
    {
      uint64_t v7 = sub_1001948F4();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_100222640(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_100222650();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_100222650();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100191BE0(&qword_10029EDD8);
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_100194AA8(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1001945BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_100222B00();
  swift_bridgeObjectRetain();
  sub_1002222E0();
  Swift::Int v6 = sub_100222B20();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_100222A30() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      char v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_100222A30() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001916C4();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_100194C4C(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_10019474C()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100222750();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_100190B78(v3, v2, (uint64_t *)&unk_10029EE90, (void (*)(void))type metadata accessor for BottleMO);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_100222640(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for BottleMO();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_100222650();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_100194AA8(v8);
      if (sub_100222650())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_100222650();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1001948F4()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100222750();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_100190D74(v3, v2, &qword_10029EDD8, (unint64_t *)&qword_10029EDB0);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_100222640(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_100222650();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_100194AA8(v8);
      if (sub_100222650())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_100222650();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100194AA8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1002226D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = sub_100222640(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            BOOL v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *BOOL v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100194C4C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1002226D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_100222B00();
        swift_bridgeObjectRetain();
        sub_1002222E0();
        Swift::Int v10 = sub_100222B20();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          Swift::Int v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            _OWORD *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100194E14(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    unint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1001945BC(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

unint64_t *sub_100194FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v36 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v37 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v38 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v37) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v38 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v37) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v38 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v37) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v38 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_1001B30B0();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v37) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v38 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_100222B00();
      swift_bridgeObjectRetain();
      sub_1002222E0();
      Swift::Int v19 = sub_100222B20();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_100222A30() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_100222A30() & 1) == 0);
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v30 = *(unsigned char *)(v2 + 32);
    unint64_t v31 = (unint64_t)((1 << v30) + 63) >> 6;
    size_t v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      Swift::Int v33 = sub_1001957C8((unint64_t *)((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0)), v31, v2, v21, &v39);
      swift_release();
      sub_1001B30B0();
    }
    else
    {
      Swift::Int v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      Swift::Int v33 = sub_1001957C8((unint64_t *)v34, v31, v2, v21, &v39);
      swift_release();
      sub_1001B30B0();
      swift_slowDealloc();
    }
    return v33;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_10019542C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1001955B4((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1001955B4((unint64_t *)v8, v5, v3, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_1001955B4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_100222B00();
    swift_bridgeObjectRetain();
    sub_1002222E0();
    Swift::Int v10 = sub_100222B20();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    int64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_100222A30() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        BOOL v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_100222A30() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_10018FDEC(a1, v5, v26, a4);
}

unint64_t *sub_1001957C8(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_10018FDEC(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        unint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_100222B00();
        swift_bridgeObjectRetain();
        sub_1002222E0();
        Swift::Int v22 = sub_100222B20();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_100222A30() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          Swift::Int v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_100222A30() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void sub_100195AC0(unint64_t a1, int a2, char a3)
{
  uint64_t v5 = v3;
  if ((*v5 & 0xC000000000000001) == 0)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v5;
    if (a3) {
      goto LABEL_10;
    }
    if ((a1 & 0x8000000000000000) != 0 || 1 << *(unsigned char *)(v10 + 32) <= (uint64_t)a1)
    {
      __break(1u);
    }
    else if ((*(void *)(v10 + 8 * (a1 >> 6) + 56) >> a1))
    {
      if (*(_DWORD *)(v10 + 36) == a2) {
        goto LABEL_17;
      }
      __break(1u);
LABEL_10:
      if (sub_100222730() == *(_DWORD *)(v10 + 36))
      {
        sub_100222740();
        type metadata accessor for BottleMO();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        char v4 = v18;
        swift_unknownObjectRelease();
        Swift::Int v11 = sub_100222640(*(void *)(v10 + 40));
        uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
        a1 = v11 & ~v12;
        if ((*(void *)(v10 + 56 + ((a1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a1))
        {
          id v13 = *(id *)(*(void *)(v10 + 48) + 8 * a1);
          char v14 = sub_100222650();

          if ((v14 & 1) == 0)
          {
            uint64_t v15 = ~v12;
            do
            {
              a1 = (a1 + 1) & v15;
              if (((*(void *)(v10 + 56 + ((a1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a1) & 1) == 0) {
                goto LABEL_24;
              }
              id v16 = *(id *)(*(void *)(v10 + 48) + 8 * a1);
              char v17 = sub_100222650();
            }
            while ((v17 & 1) == 0);
          }

          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v19 = *v5;
          *uint64_t v5 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native) {
            sub_100191BE0((uint64_t *)&unk_10029EE90);
          }
          sub_100194AA8(a1);
          *uint64_t v5 = v19;
          goto LABEL_20;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if (a3)
  {
    sub_100222760();
    type metadata accessor for BottleMO();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    swift_unknownObjectRelease();
    sub_10019474C();

LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_25:
  __break(1u);
}

void *sub_100195D90(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  Swift::Int v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *Swift::Int v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_100195F8C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  unint64_t v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_100222700();
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
    uint64_t result = (void *)sub_100222490();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    Swift::Int v22 = v24;
LABEL_41:
    *Swift::Int v22 = v4;
    v22[1] = v7;
    _OWORD v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_100222790()) {
        goto LABEL_40;
      }
      sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      Swift::Int v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_100196298(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100196498(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v92 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v93 = (unint64_t)(v4 + 63) >> 6;
  while (2)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v3 << 6);
      uint64_t v9 = a2;
    }
    else
    {
      int64_t v10 = v3 + 1;
      uint64_t v9 = a2;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
      }
      if (v10 >= v93) {
        return 1;
      }
      unint64_t v11 = *(void *)(v92 + 8 * v10);
      ++v3;
      if (!v11)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v93) {
          return 1;
        }
        unint64_t v11 = *(void *)(v92 + 8 * v3);
        if (!v11)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v93) {
            return 1;
          }
          unint64_t v11 = *(void *)(v92 + 8 * v3);
          if (!v11)
          {
            int64_t v12 = v10 + 3;
            if (v12 >= v93) {
              return 1;
            }
            unint64_t v11 = *(void *)(v92 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v3 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_145;
                }
                if (v3 >= v93) {
                  return 1;
                }
                unint64_t v11 = *(void *)(v92 + 8 * v3);
                ++v12;
                if (v11) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v3 = v12;
          }
        }
      }
LABEL_23:
      unint64_t v6 = (v11 - 1) & v11;
      unint64_t v8 = __clz(__rbit64(v11)) + (v3 << 6);
    }
    uint64_t v13 = 16 * v8;
    int64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + v13);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 56) + v13);
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    sub_1000059E8(v19, v18);
    unint64_t v20 = sub_10000AB48(v16, v15);
    LOBYTE(v16) = v21;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      goto LABEL_137;
    }
    unint64_t v22 = v18 >> 62;
    uint64_t v23 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v20);
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    uint64_t v26 = 0;
    switch(v24 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v25), v25)) {
          goto LABEL_140;
        }
        uint64_t v26 = HIDWORD(v25) - (int)v25;
LABEL_30:
        sub_1000059E8(v25, v24);
        break;
      case 2uLL:
        uint64_t v28 = *(void *)(v25 + 16);
        uint64_t v27 = *(void *)(v25 + 24);
        uint64_t v26 = v27 - v28;
        if (!__OFSUB__(v27, v28)) {
          goto LABEL_30;
        }
        goto LABEL_141;
      case 3uLL:
        break;
      default:
        uint64_t v26 = BYTE6(v24);
        break;
    }
    switch((int)v22)
    {
      case 1:
        LODWORD(v29) = HIDWORD(v19) - v19;
        if (__OFSUB__(HIDWORD(v19), v19)) {
          goto LABEL_142;
        }
        uint64_t v29 = (int)v29;
LABEL_36:
        if (v26 == v29)
        {
          if (v26 < 1)
          {
LABEL_7:
            sub_100005A40(v25, v24);
            sub_100005A40(v19, v18);
            uint64_t v2 = a1;
          }
          else
          {
            switch(v24 >> 62)
            {
              case 1uLL:
                if ((int)v25 > v25 >> 32) {
                  goto LABEL_144;
                }
                uint64_t v38 = (char *)sub_100221A30();
                if (!v38) {
                  goto LABEL_50;
                }
                uint64_t v39 = sub_100221A60();
                if (__OFSUB__((int)v25, v39)) {
                  goto LABEL_147;
                }
                v38 += (int)v25 - v39;
LABEL_50:
                sub_100221A50();
                if (!v22)
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v38) {
                    goto LABEL_175;
                  }
                  size_t v55 = BYTE6(v18);
                  uint64_t v57 = __s1;
                  uint64_t v56 = v38;
LABEL_120:
                  int v54 = memcmp(v56, v57, v55);
                  goto LABEL_121;
                }
                if (v22 == 1)
                {
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_155;
                  }
                  swift_retain();
                  uint64_t v40 = (char *)sub_100221A30();
                  if (v40)
                  {
                    uint64_t v41 = sub_100221A60();
                    if (__OFSUB__((int)v19, v41)) {
                      goto LABEL_163;
                    }
                    v40 += (int)v19 - v41;
                  }
                  uint64_t v42 = sub_100221A50();
                  if (v42 >= (v19 >> 32) - (int)v19) {
                    size_t v43 = (v19 >> 32) - (int)v19;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  if (!v38) {
                    goto LABEL_165;
                  }
                  uint64_t v2 = a1;
                  if (!v40) {
                    goto LABEL_166;
                  }
                  int v44 = memcmp(v38, v40, v43);
                  sub_100005A40(v19, v18);
                  sub_100005A40(v25, v24);
                  sub_100005A40(v19, v18);
                  if (v44) {
                    return 0;
                  }
                }
                else
                {
                  uint64_t v83 = *(void *)(v19 + 16);
                  uint64_t v91 = *(char **)(v19 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v84 = sub_100221A30();
                  if (v84)
                  {
                    uint64_t v85 = sub_100221A60();
                    if (__OFSUB__(v83, v85)) {
                      goto LABEL_162;
                    }
                    v84 += v83 - v85;
                  }
                  if (__OFSUB__(v91, v83)) {
                    goto LABEL_157;
                  }
                  uint64_t v86 = sub_100221A50();
                  if (v86 >= (uint64_t)&v91[-v83]) {
                    uint64_t v87 = &v91[-v83];
                  }
                  else {
                    uint64_t v87 = (char *)v86;
                  }
                  uint64_t v2 = a1;
                  uint64_t v72 = v38;
                  if (!v38) {
                    goto LABEL_176;
                  }
                  if (!v84) {
                    goto LABEL_177;
                  }
                  size_t v71 = (size_t)v87;
                  id v73 = (const void *)v84;
LABEL_133:
                  int v88 = memcmp(v72, v73, v71);
                  swift_release();
                  swift_release();
                  sub_100005A40(v25, v24);
                  sub_100005A40(v19, v18);
                  if (v88) {
                    return 0;
                  }
                }
                continue;
              case 2uLL:
                uint64_t v45 = *(void *)(v25 + 16);
                swift_retain();
                swift_retain();
                uint64_t v46 = sub_100221A30();
                if (v46)
                {
                  uint64_t v47 = v46;
                  uint64_t v48 = sub_100221A60();
                  if (__OFSUB__(v45, v48)) {
                    goto LABEL_146;
                  }
                  uint64_t v49 = (void *)(v47 + v45 - v48);
                }
                else
                {
                  uint64_t v49 = 0;
                }
                sub_100221A50();
                if (v22)
                {
                  char v90 = v49;
                  if (v22 == 1)
                  {
                    if (v19 >> 32 < (int)v19) {
                      goto LABEL_150;
                    }
                    swift_retain();
                    uint64_t v58 = (char *)sub_100221A30();
                    if (v58)
                    {
                      uint64_t v59 = sub_100221A60();
                      if (__OFSUB__((int)v19, v59)) {
                        goto LABEL_161;
                      }
                      v58 += (int)v19 - v59;
                    }
                    uint64_t v60 = sub_100221A50();
                    if (v60 >= (v19 >> 32) - (int)v19) {
                      size_t v61 = (v19 >> 32) - (int)v19;
                    }
                    else {
                      size_t v61 = v60;
                    }
                    if (!v49) {
                      goto LABEL_168;
                    }
                    if (!v58) {
                      goto LABEL_169;
                    }
                    int v54 = memcmp(v49, v58, v61);
                    sub_100005A40(v19, v18);
                    swift_release();
                    swift_release();
LABEL_121:
                    sub_100005A40(v25, v24);
                    sub_100005A40(v19, v18);
                    uint64_t v2 = a1;
                    if (v54) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v76 = *(void *)(v19 + 16);
                    uint64_t v75 = *(void *)(v19 + 24);
                    swift_retain();
                    swift_retain();
                    os_log_type_t v77 = (char *)sub_100221A30();
                    if (v77)
                    {
                      uint64_t v78 = sub_100221A60();
                      if (__OFSUB__(v76, v78)) {
                        goto LABEL_160;
                      }
                      v77 += v76 - v78;
                    }
                    BOOL v32 = __OFSUB__(v75, v76);
                    int64_t v79 = v75 - v76;
                    if (v32) {
                      goto LABEL_156;
                    }
                    uint64_t v80 = sub_100221A50();
                    if (v80 >= v79) {
                      size_t v81 = v79;
                    }
                    else {
                      size_t v81 = v80;
                    }
                    if (!v90) {
                      goto LABEL_173;
                    }
                    if (!v77) {
                      goto LABEL_174;
                    }
                    int v82 = memcmp(v90, v77, v81);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_100005A40(v25, v24);
                    sub_100005A40(v19, v18);
                    uint64_t v2 = a1;
                    if (v82) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v49) {
                    goto LABEL_172;
                  }
                  int v74 = memcmp(v49, __s1, BYTE6(v18));
                  swift_release();
                  swift_release();
                  sub_100005A40(v25, v24);
                  sub_100005A40(v19, v18);
                  uint64_t v2 = a1;
                  if (v74) {
                    return 0;
                  }
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v22) {
                  goto LABEL_75;
                }
                if (v22 == 1)
                {
                  uint64_t v33 = (v19 >> 32) - (int)v19;
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_149;
                  }
                  sub_1000059E8(v19, v18);
                  uint64_t v50 = sub_100221A30();
                  if (!v50) {
                    goto LABEL_167;
                  }
                  uint64_t v35 = v50;
                  uint64_t v51 = sub_100221A60();
                  uint64_t v37 = (int)v19 - v51;
                  if (__OFSUB__((int)v19, v51)) {
                    goto LABEL_154;
                  }
LABEL_71:
                  uint64_t v52 = sub_100221A50();
                  if (v52 >= v33) {
                    size_t v53 = v33;
                  }
                  else {
                    size_t v53 = v52;
                  }
                  int v54 = memcmp(__s1, (const void *)(v35 + v37), v53);
                  sub_100005A40(v19, v18);
                  goto LABEL_121;
                }
                uint64_t v68 = *(void *)(v19 + 16);
                uint64_t v69 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = sub_100221A30();
                if (v64)
                {
                  uint64_t v70 = sub_100221A60();
                  if (__OFSUB__(v68, v70)) {
                    goto LABEL_159;
                  }
                  v64 += v68 - v70;
                }
                BOOL v32 = __OFSUB__(v69, v68);
                int64_t v66 = v69 - v68;
                if (v32) {
                  goto LABEL_152;
                }
                uint64_t v67 = sub_100221A50();
                uint64_t v2 = a1;
                if (!v64) {
                  goto LABEL_171;
                }
LABEL_100:
                if (v67 >= v66) {
                  size_t v71 = v66;
                }
                else {
                  size_t v71 = v67;
                }
                uint64_t v72 = __s1;
                id v73 = (const void *)v64;
                goto LABEL_133;
              default:
                __s1[0] = v25;
                LOWORD(__s1[1]) = v24;
                BYTE2(__s1[1]) = BYTE2(v24);
                BYTE3(__s1[1]) = BYTE3(v24);
                BYTE4(__s1[1]) = BYTE4(v24);
                BYTE5(__s1[1]) = BYTE5(v24);
                if (!v22)
                {
LABEL_75:
                  uint64_t v96 = v19;
                  __int16 v97 = v18;
                  char v98 = BYTE2(v18);
                  char v99 = BYTE3(v18);
                  char v100 = BYTE4(v18);
                  size_t v55 = BYTE6(v18);
                  char v101 = BYTE5(v18);
                  uint64_t v56 = __s1;
                  uint64_t v57 = &v96;
                  goto LABEL_120;
                }
                if (v22 == 1)
                {
                  uint64_t v33 = (v19 >> 32) - (int)v19;
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_148;
                  }
                  sub_1000059E8(v19, v18);
                  uint64_t v34 = sub_100221A30();
                  if (!v34)
                  {
                    sub_100221A50();
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    sub_100221A50();
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
                    JUMPOUT(0x100196F14);
                  }
                  uint64_t v35 = v34;
                  uint64_t v36 = sub_100221A60();
                  uint64_t v37 = (int)v19 - v36;
                  if (__OFSUB__((int)v19, v36)) {
                    goto LABEL_153;
                  }
                  goto LABEL_71;
                }
                uint64_t v62 = *(void *)(v19 + 16);
                uint64_t v63 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = sub_100221A30();
                if (v64)
                {
                  uint64_t v65 = sub_100221A60();
                  if (__OFSUB__(v62, v65)) {
                    goto LABEL_158;
                  }
                  v64 += v62 - v65;
                }
                BOOL v32 = __OFSUB__(v63, v62);
                int64_t v66 = v63 - v62;
                if (v32) {
                  goto LABEL_151;
                }
                uint64_t v67 = sub_100221A50();
                uint64_t v2 = a1;
                if (!v64) {
                  goto LABEL_170;
                }
                goto LABEL_100;
            }
          }
          continue;
        }
LABEL_136:
        sub_100005A40(v25, v24);
LABEL_137:
        sub_100005A40(v19, v18);
        return 0;
      case 2:
        uint64_t v31 = *(void *)(v19 + 16);
        uint64_t v30 = *(void *)(v19 + 24);
        BOOL v32 = __OFSUB__(v30, v31);
        uint64_t v29 = v30 - v31;
        if (!v32) {
          goto LABEL_36;
        }
        goto LABEL_143;
      case 3:
        if (!v26) {
          goto LABEL_7;
        }
        goto LABEL_136;
      default:
        uint64_t v29 = BYTE6(v18);
        goto LABEL_36;
    }
  }
}

uint64_t sub_100196F44(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void), uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v40 = a6;
  uint64_t v41 = a7;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v16);
  unint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = a10;
  v43[4] = a11;
  uint64_t v19 = sub_1001B8004(v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 16))(v19, a5, a10);
  uint64_t v20 = swift_allocObject();
  sub_100065B18((uint64_t)v43, v20 + 16);
  sub_100002F80(v20 + 16, *(void *)(v20 + 40));
  uint64_t v21 = sub_100222680();
  if (v42)
  {
    v41(v40, 0);
  }
  else
  {
    uint64_t v36 = a8;
    __chkstk_darwin(v21, v22);
    *(&v34 - 6) = v23;
    *(&v34 - 5) = a9;
    unint64_t v24 = v38;
    *(&v34 - 4) = a3;
    *(&v34 - 3) = v24;
    uint64_t v37 = v18;
    uint64_t v25 = v39;
    *(&v34 - 2) = v39;
    *(&v34 - 1) = a4;
    sub_1001A56AC(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
    sub_100221F70();
    uint64_t v26 = *(void *)((char *)a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32);
    uint64_t v35 = *(void *)((char *)a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24);
    uint64_t v34 = sub_1000059A4((void *)((char *)a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish), v35);
    uint64_t v27 = (void *)swift_allocObject();
    uint64_t v28 = v41;
    v27[2] = a9;
    v27[3] = v28;
    uint64_t v29 = v40;
    v27[4] = v36;
    v27[5] = v29;
    v27[6] = v24;
    v27[7] = v25;
    v27[8] = a3;
    v27[9] = a4;
    v27[10] = v20;
    uint64_t v30 = *(void *)(v26 + 16);
    uint64_t v41 = *(void (**)(uint64_t, void))(v30 + 32);
    uint64_t v31 = a9;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v32 = (uint64_t)v37;
    ((void (*)(char *, uint64_t (*)(), void *, uint64_t, uint64_t))v41)(v37, sub_1001B4774, v27, v35, v30);
    swift_release();
    sub_1001B7EAC(v32, type metadata accessor for UpdateTrustRequest);
  }
  swift_release();
  return sub_100004788((uint64_t)v43);
}

id sub_100197258()
{
  Class isa = sub_100221BD0().super.isa;
  id v6 = 0;
  id v2 = [v0 initForReadingFromData:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    sub_100221B40();

    swift_willThrow();
  }
  return v2;
}

void sub_100197318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for BottleMO();
    sub_1001A56AC(&qword_100299690, (void (*)(uint64_t))type metadata accessor for BottleMO);
    sub_100222490();
    uint64_t v3 = v29;
    uint64_t v26 = v30;
    uint64_t v4 = v31;
    int64_t v5 = v32;
    unint64_t v6 = v33;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    int64_t v5 = 0;
  }
  uint64_t v24 = v4;
  int64_t v25 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_100222790()) {
      goto LABEL_37;
    }
    type metadata accessor for BottleMO();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v34;
    swift_unknownObjectRelease();
    uint64_t v12 = v6;
    if (!v34) {
      goto LABEL_37;
    }
LABEL_33:
    id v19 = objc_msgSend(v14, "peerID", v24);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_100222270();
      uint64_t v23 = v22;

      if (v21 == a2 && v23 == a3)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_1001B30B0();
        return;
      }
      char v11 = sub_100222A30();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_37;
      }
    }

    unint64_t v6 = v12;
  }
  if (v6)
  {
    uint64_t v12 = (v6 - 1) & v6;
    unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
LABEL_32:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v13);
    if (!v14) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  int64_t v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v25) {
      goto LABEL_37;
    }
    int64_t v16 = v5;
    unint64_t v17 = *(void *)(v26 + 8 * v15);
    ++v5;
    if (!v17)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v25) {
        goto LABEL_37;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v5);
      if (!v17)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v25) {
          goto LABEL_37;
        }
        unint64_t v17 = *(void *)(v26 + 8 * v5);
        if (!v17)
        {
          int64_t v5 = v15 + 3;
          if (v15 + 3 >= v25) {
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v26 + 8 * v5);
          if (!v17)
          {
            int64_t v5 = v15 + 4;
            if (v15 + 4 >= v25) {
              goto LABEL_37;
            }
            unint64_t v17 = *(void *)(v26 + 8 * v5);
            if (!v17)
            {
              uint64_t v18 = v16 + 6;
              while (v25 != v18)
              {
                unint64_t v17 = *(void *)(v26 + 8 * v18++);
                if (v17)
                {
                  int64_t v5 = v18 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v5 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_10019768C(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
    sub_100222490();
    uint64_t v2 = v23;
    uint64_t v21 = v24;
    uint64_t v3 = v25;
    uint64_t v4 = v26;
    unint64_t v5 = v27;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    uint64_t v4 = 0;
  }
  int64_t v20 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_100222790())
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v28;
    swift_unknownObjectRelease();
    uint64_t v11 = v4;
    uint64_t v12 = v5;
    if (v28)
    {
      do
      {
        id v17 = [v10 versionNumber];
        id v18 = [a2 version];
        id v19 = [v18 versionNumber];

        if (v17 == v19) {
          break;
        }

        uint64_t v4 = v11;
        unint64_t v5 = v12;
        if (v2 < 0) {
          goto LABEL_8;
        }
LABEL_11:
        if (v5)
        {
          uint64_t v12 = (v5 - 1) & v5;
          unint64_t v13 = __clz(__rbit64(v5)) | (v4 << 6);
          uint64_t v11 = v4;
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            return;
          }
          if (v14 >= v20) {
            break;
          }
          unint64_t v15 = *(void *)(v21 + 8 * v14);
          uint64_t v11 = v4 + 1;
          if (!v15)
          {
            uint64_t v11 = v4 + 2;
            if (v4 + 2 >= v20) {
              break;
            }
            unint64_t v15 = *(void *)(v21 + 8 * v11);
            if (!v15)
            {
              uint64_t v11 = v4 + 3;
              if (v4 + 3 >= v20) {
                break;
              }
              unint64_t v15 = *(void *)(v21 + 8 * v11);
              if (!v15)
              {
                uint64_t v11 = v4 + 4;
                if (v4 + 4 >= v20) {
                  break;
                }
                unint64_t v15 = *(void *)(v21 + 8 * v11);
                if (!v15)
                {
                  uint64_t v11 = v4 + 5;
                  if (v4 + 5 >= v20) {
                    break;
                  }
                  unint64_t v15 = *(void *)(v21 + 8 * v11);
                  if (!v15)
                  {
                    uint64_t v16 = v4 + 6;
                    while (v20 != v16)
                    {
                      unint64_t v15 = *(void *)(v21 + 8 * v16++);
                      if (v15)
                      {
                        uint64_t v11 = v16 - 1;
                        goto LABEL_28;
                      }
                    }
                    break;
                  }
                }
              }
            }
          }
LABEL_28:
          uint64_t v12 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
        }
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
      }
      while (v10);
    }
  }
  sub_1001B30B0();
}

void *sub_1001979D0(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      uint64_t v19 = v3;
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)sub_100222880();
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_21;
        }
        id v8 = [v5 beneficiaryID];
        uint64_t v9 = sub_100222270();
        uint64_t v11 = v10;

        id v12 = [a2 peerID];
        uint64_t v13 = sub_100222270();
        uint64_t v15 = v14;

        if (v9 == v13 && v11 == v15)
        {
          swift_bridgeObjectRelease_n();
LABEL_17:
          sub_1002228B0();
          sub_1002228E0();
          sub_1002228F0();
          sub_1002228C0();
          goto LABEL_5;
        }
        char v17 = sub_100222A30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_17;
        }

LABEL_5:
        ++v4;
        if (v7 == v19) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v3 = sub_100222970();
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100197BBC(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)sub_100222880();
LABEL_9:
        unint64_t v7 = v6;
        unint64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_16;
        }
        if (!a2) {
          goto LABEL_4;
        }
        id v9 = [v6 tlk];
        id v10 = [v9 zoneID];

        id v11 = [v10 zoneName];
        uint64_t v12 = sub_100222270();
        uint64_t v14 = v13;

        LOBYTE(v11) = sub_100039584(v12, v14, a2);
        swift_bridgeObjectRelease();
        if (v11)
        {
          sub_1002228B0();
          sub_1002228E0();
          sub_1002228F0();
          sub_1002228C0();
        }
        else
        {
LABEL_4:
        }
        ++v5;
        if (v8 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v4 = sub_100222970();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100197D94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v23 = *(void *)(a1 + 16);
    uint64_t v24 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    uint64_t v21 = v3 - 1;
    unint64_t v5 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v22 = v5;
      id v6 = (unint64_t *)(a1 + 40 + 16 * v4);
      unint64_t v7 = v4;
      while (1)
      {
        if (v7 >= *(void *)(a1 + 16)) {
          __break(1u);
        }
        uint64_t v9 = *(v6 - 1);
        unint64_t v8 = *v6;
        id v10 = *(id *)(a2 + v24);
        sub_1000059E8(v9, v8);
        Class isa = sub_100221BD0().super.isa;
        id v26 = 0;
        unsigned int v12 = [v10 hasPotentiallyTrustedPeerWithSigningKey:isa error:&v26];

        if (v26)
        {
          v26;
          swift_willThrow();
          sub_100005A40(v9, v8);
          unint64_t v5 = v22;
          swift_release();
          goto LABEL_18;
        }
        if (v12) {
          break;
        }
        ++v7;
        sub_100005A40(v9, v8);
        v6 += 2;
        if (v23 == v7)
        {
          unint64_t v5 = v22;
          goto LABEL_18;
        }
      }
      uint64_t v13 = v22;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v27 = v22;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10018D270(0, v22[2] + 1, 1);
        uint64_t v13 = v27;
      }
      unint64_t v16 = v13[2];
      unint64_t v15 = v13[3];
      char v17 = v13;
      if (v16 >= v15 >> 1)
      {
        sub_10018D270(v15 > 1, v16 + 1, 1);
        char v17 = v27;
      }
      unint64_t v4 = v7 + 1;
      v17[2] = v16 + 1;
      id v18 = &v17[2 * v16];
      v18[4] = v9;
      v18[5] = v8;
      BOOL v19 = v21 == v7;
      unint64_t v5 = v17;
    }
    while (!v19);
  }
  else
  {
    unint64_t v5 = _swiftEmptyArrayStorage;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_100197FB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v7) {
      break;
    }
    char v17 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)sub_1002228D0();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = 0;
    while (v7 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)sub_100222880();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      id v11 = v10;
      unint64_t v15 = v10;
      sub_100116700(&v15, a2, a3, a4, &v14, &v16);

      if (v4) {
        return (void *)swift_release();
      }
      ++v9;
      sub_1002228B0();
      sub_1002228E0();
      sub_1002228F0();
      sub_1002228C0();
      if (v7 == v9) {
        return v17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100222970();
    swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10019812C(unint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v36 = a3;
  uint64_t v37 = a4;
  id v35 = a2;
  uint64_t v5 = type metadata accessor for TLKShare(0);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin(v5, v6);
  unint64_t v8 = (unint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    id v10 = _swiftEmptyArrayStorage;
    if (!v9) {
      break;
    }
    uint64_t v39 = _swiftEmptyArrayStorage;
    sub_10018D1BC(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      __break(1u);
    }
    id v10 = v39;
    unint64_t v32 = a1 & 0xC000000000000001;
    id v11 = self;
    unint64_t v30 = a1;
    id v31 = v11;
    uint64_t v12 = 0;
    uint64_t v28 = v9;
    uint64_t v29 = (char *)v8;
    while (v9 != v12)
    {
      if (v32) {
        id v13 = (id)sub_100222880();
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      id v15 = [v35 tlk];
      id v16 = [v14 permanentInfo];
      id v38 = 0;
      id v17 = v36;
      id v18 = [v31 share:v15 as:v17 to:v16 epoch:v37 poisoned:0 error:&v38];
      if (!v18)
      {
        id v25 = v38;
        sub_100221B40();

        swift_willThrow();
        swift_release();

        return v10;
      }
      BOOL v19 = v18;
      id v20 = v38;

      __chkstk_darwin(v21, v22);
      *(&v27 - 2) = (uint64_t)v19;
      sub_1001A56AC(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
      uint64_t v23 = (uint64_t)v29;
      sub_100221F70();

      uint64_t v39 = v10;
      unint64_t v8 = v10[2];
      unint64_t v24 = v10[3];
      if (v8 >= v24 >> 1)
      {
        sub_10018D1BC(v24 > 1, v8 + 1, 1);
        id v10 = v39;
      }
      ++v12;
      v10[2] = v8 + 1;
      sub_1001B7B9C(v23, (uint64_t)v10+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v8, type metadata accessor for TLKShare);
      uint64_t v9 = v28;
      a1 = v30;
      if (v28 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100222970();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1001984DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v60 = sub_100222150();
  uint64_t v8 = *(void *)(v60 - 8);
  uint64_t v10 = __chkstk_darwin(v60, v9);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  id v15 = (char *)&v55 - v14;
  uint64_t v16 = sub_1002220D0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v57 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v56 = (char *)&v55 - v23;
  __chkstk_darwin(v22, v24);
  id v26 = (char *)&v55 - v25;
  *(unsigned char *)(v4 + 40) = 0;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v59 = a2;
  *(void *)(v4 + 32) = a3;
  *(uint64_t *)((char *)&v55 - v25) = 1800;
  uint64_t v27 = *(void (**)(char *, void))(v17 + 104);
  uint64_t v61 = v28;
  v27((char *)&v55 - v25, enum case for DispatchTimeInterval.seconds(_:));
  uint64_t v29 = a1;
  uint64_t v58 = a3;
  swift_bridgeObjectRetain();
  sub_100222130();
  sub_100222140();
  unint64_t v30 = *(void (**)(char *, uint64_t))(v8 + 8);
  id v31 = v12;
  uint64_t v32 = v60;
  v30(v31, v60);
  LOBYTE(a2) = sub_1002225A0();
  v30(v15, v32);
  if (a2)
  {
    uint64_t v36 = v61;
    uint64_t v37 = v56;
    id v38 = v57;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_100222090();
    sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v40(v37, v26, v36);
    uint64_t v41 = v29;
    char v42 = sub_100222070();
    os_log_type_t v43 = sub_100222510();
    LODWORD(v60) = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v64 = v59;
      *(_DWORD *)uint64_t v44 = 136446466;
      v40(v38, v37, v36);
      uint64_t v45 = sub_1002222C0();
      uint64_t v62 = sub_1001BEBDC(v45, v46, &v64);
      sub_100222690();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v37, v36);
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v47 = *(void *)&v41[OBJC_IVAR____TtC18TrustedPeersHelper9Container_operationWithSemaphore + 8];
      uint64_t v62 = *(void *)&v41[OBJC_IVAR____TtC18TrustedPeersHelper9Container_operationWithSemaphore];
      uint64_t v63 = v47;
      swift_bridgeObjectRetain();
      sub_1000046DC((uint64_t *)&unk_10029EC60);
      uint64_t v48 = sub_1002222C0();
      uint64_t v62 = sub_1001BEBDC(v48, v49, &v64);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v60, "Timeout after %{public}s waiting for semaphore (held by %{public}s)", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v37, v36);
    }
    NSString v50 = sub_100222260();
    NSString v51 = sub_100222260();
    uint64_t v52 = self;
    swift_bridgeObjectRetain();
    NSString v53 = sub_100222260();
    swift_bridgeObjectRelease();
    NSString v54 = sub_100222260();
    [v52 triggerAutoBugCaptureWithType:v50 subType:v51 subtypeContext:v53 domain:v54 events:0 payload:0 detectedProcess:0];

    _exit(1);
  }
  uint64_t v33 = (uint64_t *)&v29[OBJC_IVAR____TtC18TrustedPeersHelper9Container_operationWithSemaphore];
  uint64_t v34 = v58;
  *uint64_t v33 = v59;
  v33[1] = v34;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v61);
  return v4;
}

uint64_t sub_100198AC4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v14);
  uint64_t v45 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v42 = a3;
  os_log_type_t v43 = a6;
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  uint64_t v17 = swift_allocObject();
  uint64_t v47 = v17;
  *(void *)(v17 + 16) = a1;
  uint64_t v18 = (void *)(v17 + 16);
  uint64_t v19 = swift_allocObject();
  swift_retain();
  id v41 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v46 = v19;
  *(void *)(v19 + 16) = v20;
  uint64_t v21 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v22 = (void *)swift_allocObject();
  _OWORD v22[2] = v18;
  v22[3] = a2;
  v22[4] = v19 + 16;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1001B8C9C;
  *(void *)(v23 + 24) = v22;
  aBlock[4] = sub_1001B8924;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_100284E08;
  uint64_t v24 = _Block_copy(aBlock);
  uint64_t v25 = a2;
  swift_retain();
  swift_release();
  [v21 performBlockAndWait:v24];
  _Block_release(v24);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v21 & 1) == 0)
  {
    if ((*(void *)v18 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_100222750();
      uint64_t result = swift_bridgeObjectRelease();
      if (v28)
      {
LABEL_4:
        __chkstk_darwin(result, v27);
        *(&v41 - 2) = v18;
        sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
        os_log_type_t v43 = v22;
        uint64_t v29 = (uint64_t)v45;
        sub_100221F70();
        uint64_t v30 = *(void *)&v25[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
        uint64_t v31 = *(void *)&v25[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        sub_1000059A4(&v25[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v30);
        uint64_t v32 = (void *)swift_allocObject();
        v32[2] = v25;
        v32[3] = sub_1001B3564;
        uint64_t v33 = v47;
        v32[4] = v16;
        v32[5] = v33;
        v32[6] = v46;
        uint64_t v34 = *(void *)(v31 + 16);
        id v35 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v34 + 80);
        uint64_t v36 = v25;
        swift_retain();
        swift_retain();
        swift_retain();
        v35(v29, sub_1001B1CC8, v32, v30, v34);
        swift_release();
        sub_1001B7EAC(v29, type metadata accessor for FetchPolicyDocumentsRequest);
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else if (*(void *)(*(void *)v18 + 16))
    {
      goto LABEL_4;
    }
    uint64_t v37 = (void *)swift_allocObject();
    uint64_t v39 = v41;
    uint64_t v38 = v42;
    _OWORD v37[2] = 0;
    v37[3] = v38;
    v37[4] = a4;
    v37[5] = v39;
    v37[6] = v43;
    v37[7] = a7;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_100043840;
    *(void *)(v40 + 24) = v37;
    swift_retain();
    v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100154FFC(0, 0, 0, 0, 0, (uint64_t)sub_1000438A8, v40);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_100198FF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

void *sub_1001990E4(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_100222970();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v22 = v2;
      unint64_t v4 = v2 & 0xC000000000000001;
      uint64_t v5 = 4;
      unint64_t v6 = &selRef_aessivkey;
      uint64_t v7 = &selRef_aessivkey;
      do
      {
        if (v4) {
          id v8 = (id)sub_100222880();
        }
        else {
          id v8 = *(id *)(v2 + 8 * v5);
        }
        uint64_t v9 = v8;
        uint64_t v10 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        if ([v8 v6[138]])
        {
        }
        else
        {
          uint64_t v11 = v3;
          unint64_t v12 = v4;
          uint64_t v13 = v6;
          id v14 = [v9 v7[278]];
          id v15 = [v14 zoneID];

          id v16 = [v15 zoneName];
          uint64_t v17 = sub_100222270();
          uint64_t v19 = v18;

          LOBYTE(v16) = sub_100039584(v17, v19, a2);
          swift_bridgeObjectRelease();
          if ((v16 & 1) == 0)
          {

            unint64_t v6 = v13;
            unint64_t v4 = v12;
            uint64_t v3 = v11;
            unint64_t v2 = v22;
LABEL_17:
            uint64_t v7 = &selRef_aessivkey;
            goto LABEL_5;
          }
          uint64_t v7 = &selRef_aessivkey;
          id v20 = [v9 tlk];

          unint64_t v6 = v13;
          unint64_t v4 = v12;
          uint64_t v3 = v11;
          unint64_t v2 = v22;
          if (v20)
          {
            sub_1002223A0();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1002223F0();
            }
            sub_100222410();
            sub_1002223E0();
            goto LABEL_17;
          }
        }
LABEL_5:
        ++v5;
      }
      while (v10 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100199344(uint64_t a1, uint64_t a2)
{
  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v16 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a1 + 56);
  uint64_t v6 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  int64_t v17 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_19;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v7 >= v17) {
      goto LABEL_29;
    }
    uint64_t v9 = *(void *)(v16 + 8 * v7);
    if (!v9) {
      break;
    }
LABEL_18:
    uint64_t v5 = (v9 - 1) & v9;
LABEL_19:
    uint64_t v11 = *(void **)(a2 + v6);
    swift_bridgeObjectRetain();
    id v12 = v11;
    NSString v13 = sub_100222260();
    id v18 = 0;
    id v14 = [v12 peerWithID:v13 error:&v18];

    if (v18)
    {
      v18;

      swift_willThrow();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v14)
    {
      sub_1002223A0();
      if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1002223F0();
      }
      sub_100222410();
      sub_1002223E0();
    }
  }
  int64_t v10 = v7 + 1;
  if (v7 + 1 >= v17) {
    goto LABEL_29;
  }
  uint64_t v9 = *(void *)(v16 + 8 * v10);
  if (v9) {
    goto LABEL_17;
  }
  int64_t v10 = v7 + 2;
  if (v7 + 2 >= v17) {
    goto LABEL_29;
  }
  uint64_t v9 = *(void *)(v16 + 8 * v10);
  if (v9) {
    goto LABEL_17;
  }
  int64_t v10 = v7 + 3;
  if (v7 + 3 >= v17) {
    goto LABEL_29;
  }
  uint64_t v9 = *(void *)(v16 + 8 * v10);
  if (v9)
  {
LABEL_17:
    int64_t v7 = v10;
    goto LABEL_18;
  }
  int64_t v10 = v7 + 4;
  if (v7 + 4 < v17)
  {
    uint64_t v9 = *(void *)(v16 + 8 * v10);
    if (!v9)
    {
      while (1)
      {
        int64_t v7 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          break;
        }
        if (v7 >= v17) {
          goto LABEL_29;
        }
        uint64_t v9 = *(void *)(v16 + 8 * v7);
        ++v10;
        if (v9) {
          goto LABEL_18;
        }
      }
LABEL_31:
      __break(1u);
    }
    goto LABEL_17;
  }
LABEL_29:
  swift_release();
  return v19;
}

uint64_t sub_100199614(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v17);
  NSString v53 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = (void *)swift_allocObject();
  uint64_t v48 = a3;
  uint64_t v49 = a6;
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = a6;
  v19[6] = a7;
  v19[7] = a8;
  uint64_t v50 = a8;
  v19[8] = a9;
  uint64_t v20 = swift_allocObject();
  uint64_t v55 = v20;
  *(void *)(v20 + 16) = a1;
  uint64_t v21 = (char *)(v20 + 16);
  uint64_t v22 = swift_allocObject();
  swift_retain();
  uint64_t v47 = a5;
  uint64_t v51 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v56 = v22;
  *(void *)(v22 + 16) = v23;
  uint64_t v24 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v25 = (void *)swift_allocObject();
  _OWORD v25[2] = v21;
  v25[3] = a2;
  v25[4] = v22 + 16;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1001B8C9C;
  *(void *)(v26 + 24) = v25;
  NSString v54 = v25;
  uint64_t v61 = sub_1001B8924;
  uint64_t v62 = v26;
  aBlock = _NSConcreteStackBlock;
  uint64_t v58 = 1107296256;
  uint64_t v59 = sub_100112F58;
  uint64_t v60 = &unk_100284C28;
  uint64_t v27 = _Block_copy(&aBlock);
  uint64_t v28 = a2;
  swift_retain();
  swift_release();
  [v24 performBlockAndWait:v27];
  _Block_release(v27);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v22)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if ((*(void *)v21 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_100222750();
    uint64_t result = swift_bridgeObjectRelease();
    if (v31)
    {
LABEL_4:
      __chkstk_darwin(result, v30);
      *(&v47 - 2) = v21;
      sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
      uint64_t v32 = (uint64_t)v53;
      sub_100221F70();
      uint64_t v33 = *(void *)&v28[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      PolicyDocumentsuint64_t Request = *(void *)&v28[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      sub_1000059A4(&v28[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], PolicyDocumentsRequest);
      uint64_t v34 = (void *)swift_allocObject();
      v34[2] = v28;
      v34[3] = sub_1001B32D8;
      uint64_t v35 = v55;
      v34[4] = v19;
      v34[5] = v35;
      v34[6] = v56;
      uint64_t v36 = *(void *)(v33 + 16);
      uint64_t v37 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v36 + 80);
      uint64_t v38 = v28;
      swift_retain();
      swift_retain();
      swift_retain();
      v37(v32, sub_1001B1CC8, v34, PolicyDocumentsRequest, v36);
      swift_release();
      sub_1001B7EAC(v32, type metadata accessor for FetchPolicyDocumentsRequest);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else if (*(void *)(*(void *)v21 + 16))
  {
    goto LABEL_4;
  }
  uint64_t v39 = v47;
  NSString v53 = *(char **)&v47[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v41 = v48;
  v40[2] = v39;
  v40[3] = v41;
  uint64_t v42 = v49;
  v40[4] = a4;
  v40[5] = v42;
  uint64_t v43 = v50;
  v40[6] = v51;
  v40[7] = v43;
  v40[8] = a9;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1001B3368;
  *(void *)(v44 + 24) = v40;
  uint64_t v61 = sub_1001B8924;
  uint64_t v62 = v44;
  aBlock = _NSConcreteStackBlock;
  uint64_t v58 = 1107296256;
  uint64_t v59 = sub_100112F58;
  uint64_t v60 = &unk_100284CC8;
  uint64_t v45 = _Block_copy(&aBlock);
  swift_retain();
  id v46 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v53 performBlockAndWait:v45];
  _Block_release(v45);
  LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  if (v45) {
    goto LABEL_9;
  }
  return result;
}

Swift::Int sub_100199C04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000046DC(&qword_10029EBA0);
    uint64_t v3 = sub_100222830();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_100222B00();
      swift_bridgeObjectRetain();
      sub_1002222E0();
      Swift::Int result = sub_100222B20();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_100222A30(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          unint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_100222A30();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100199DA8(uint64_t a1, char *a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v13);
  uint64_t v48 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v47 = a3;
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  uint64_t v16 = swift_allocObject();
  uint64_t v49 = v16;
  *(void *)(v16 + 16) = a1;
  uint64_t v17 = v16 + 16;
  uint64_t v18 = swift_allocObject();
  swift_retain();
  id v46 = a5;
  id v45 = a6;
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v50 = v18;
  *(void *)(v18 + 16) = v19;
  uint64_t v20 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v17;
  v21[3] = a2;
  v21[4] = v18 + 16;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1001B8C9C;
  *(void *)(v22 + 24) = v21;
  uint64_t v55 = sub_1001B8924;
  uint64_t v56 = v22;
  aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  NSString v53 = sub_100112F58;
  NSString v54 = &unk_100284AE8;
  BOOL v23 = _Block_copy(&aBlock);
  uint64_t v24 = a2;
  swift_retain();
  swift_release();
  [v20 performBlockAndWait:v23];
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v23)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if ((*(void *)v17 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_100222750();
    uint64_t result = swift_bridgeObjectRelease();
    if (v27)
    {
LABEL_4:
      __chkstk_darwin(result, v26);
      *(&v44 - 2) = v17;
      sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
      uint64_t v47 = v21;
      uint64_t v28 = (uint64_t)v48;
      sub_100221F70();
      uint64_t v29 = *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      uint64_t v30 = *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      sub_1000059A4(&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v29);
      uint64_t v31 = (void *)swift_allocObject();
      v31[2] = v24;
      v31[3] = sub_1001B3220;
      uint64_t v32 = v49;
      v31[4] = v15;
      v31[5] = v32;
      v31[6] = v50;
      uint64_t v33 = *(void *)(v30 + 16);
      uint64_t v34 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v33 + 80);
      uint64_t v35 = v24;
      swift_retain();
      swift_retain();
      swift_retain();
      v34(v28, sub_1001B1CC8, v31, v29, v33);
      swift_release();
      sub_1001B7EAC(v28, type metadata accessor for FetchPolicyDocumentsRequest);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else if (*(void *)(*(void *)v17 + 16))
  {
    goto LABEL_4;
  }
  uint64_t v36 = v46;
  uint64_t v48 = *(char **)&v46[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v37 = (void *)swift_allocObject();
  uint64_t v38 = v47;
  _OWORD v37[2] = v36;
  v37[3] = v38;
  uint64_t v39 = v45;
  v37[4] = a4;
  v37[5] = v39;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_10004C540;
  *(void *)(v40 + 24) = v37;
  uint64_t v55 = sub_1001B8924;
  uint64_t v56 = v40;
  aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  NSString v53 = sub_100112F58;
  NSString v54 = &unk_100284B88;
  uint64_t v41 = _Block_copy(&aBlock);
  swift_retain();
  id v42 = v36;
  id v43 = v39;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v48 performBlockAndWait:v41];
  _Block_release(v41);
  LOBYTE(v41) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  if (v41) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10019A360(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

void sub_10019A458(uint64_t a1, void *a2, void **a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  int64_t v22 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    sub_100118A2C(a2, v20, v19, a3);
    if (v5) {
      break;
    }
    uint64_t v5 = 0;
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v12 >= v22) {
      goto LABEL_25;
    }
    unint64_t v16 = *(void *)(v21 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v22) {
        goto LABEL_25;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v12 + 2;
        if (v12 + 2 >= v22) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v21 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v12 + 3;
          if (v12 + 3 >= v22) {
            goto LABEL_25;
          }
          unint64_t v16 = *(void *)(v21 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v12 + 4;
            if (v12 + 4 >= v22)
            {
LABEL_25:
              swift_release();
              return;
            }
            unint64_t v16 = *(void *)(v21 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_27;
                }
                if (v12 >= v22) {
                  goto LABEL_25;
                }
                unint64_t v16 = *(void *)(v21 + 8 * v12);
                ++v17;
                if (v16) {
                  goto LABEL_17;
                }
              }
            }
          }
        }
      }
      int64_t v12 = v17;
    }
LABEL_17:
    unint64_t v11 = (v16 - 1) & v16;
  }
  __break(1u);
}

void sub_10019A648(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = v4;
  uint64_t v22 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 56);
  int64_t v23 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    unint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    swift_bridgeObjectRetain();
    sub_100125CF0(a2, v21, v20, a3, a4);
    if (v6) {
      break;
    }
    uint64_t v6 = 0;
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v13 >= v23) {
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v22 + 8 * v13);
    if (!v17)
    {
      int64_t v18 = v13 + 1;
      if (v13 + 1 >= v23) {
        goto LABEL_25;
      }
      unint64_t v17 = *(void *)(v22 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v13 + 2;
        if (v13 + 2 >= v23) {
          goto LABEL_25;
        }
        unint64_t v17 = *(void *)(v22 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v13 + 3;
          if (v13 + 3 >= v23) {
            goto LABEL_25;
          }
          unint64_t v17 = *(void *)(v22 + 8 * v18);
          if (!v17)
          {
            int64_t v18 = v13 + 4;
            if (v13 + 4 >= v23)
            {
LABEL_25:
              swift_release();
              return;
            }
            unint64_t v17 = *(void *)(v22 + 8 * v18);
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v23) {
                  goto LABEL_25;
                }
                unint64_t v17 = *(void *)(v22 + 8 * v13);
                ++v18;
                if (v17) {
                  goto LABEL_17;
                }
              }
            }
          }
        }
      }
      int64_t v13 = v18;
    }
LABEL_17:
    unint64_t v12 = (v17 - 1) & v17;
  }
  __break(1u);
}

void sub_10019A840(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for CustodianRecoveryKeyMO();
    sub_1001A56AC(&qword_10029EB88, (void (*)(uint64_t))type metadata accessor for CustodianRecoveryKeyMO);
    sub_100222490();
    uint64_t v3 = v39;
    uint64_t v36 = v40;
    uint64_t v5 = v41;
    uint64_t v4 = v42;
    unint64_t v6 = v43;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v36 = a1 + 56;
    uint64_t v5 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v35 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v10 = &selRef_setAllSelves_;
  uint64_t v34 = v3;
  while (1)
  {
    uint64_t v11 = v4;
    if (v3 < 0)
    {
      if (!sub_100222790()) {
        goto LABEL_39;
      }
      type metadata accessor for CustodianRecoveryKeyMO();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v44;
      swift_unknownObjectRelease();
      if (!v44) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
    if (!v6) {
      break;
    }
    unint64_t v12 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v13 = v12 | (v4 << 6);
LABEL_32:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v13);
    if (!v14) {
      goto LABEL_39;
    }
LABEL_33:
    id v18 = [v14 v10[151]];
    if (v18)
    {
      unint64_t v19 = v18;
      uint64_t v20 = sub_100221BF0();
      unint64_t v22 = v21;

      id v23 = [v14 crkInfoSig];
      if (!v23)
      {
        sub_100005A40(v20, v22);
        goto LABEL_9;
      }
      uint64_t v24 = v23;
      unint64_t v37 = v6;
      uint64_t v38 = v4;
      uint64_t v25 = sub_100221BF0();
      unint64_t v27 = v26;

      id v28 = a2;
      sub_1000059E8(v20, v22);
      sub_1000059E8(v25, v27);
      Class isa = sub_100221BD0().super.isa;
      Class v30 = sub_100221BD0().super.isa;
      id v31 = [self custodianRecoveryKeyWithData:isa sig:v30 keyFactory:v28];

      sub_100005A40(v25, v27);
      sub_100005A40(v20, v22);

      if (v31)
      {
        [a3 registerCustodianRecoveryKey:v31];
        sub_100005A40(v20, v22);
        sub_100005A40(v25, v27);

        id v14 = v31;
      }
      else
      {
        sub_100005A40(v20, v22);
        sub_100005A40(v25, v27);
      }
      uint64_t v3 = v34;
      uint64_t v10 = &selRef_setAllSelves_;
      unint64_t v6 = v37;
      uint64_t v4 = v38;
    }
    else
    {
LABEL_9:
    }
  }
  int64_t v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v35) {
      goto LABEL_39;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    ++v4;
    if (!v16)
    {
      uint64_t v4 = v11 + 2;
      if (v11 + 2 >= v35) {
        goto LABEL_39;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v4);
      if (!v16)
      {
        uint64_t v4 = v11 + 3;
        if (v11 + 3 >= v35) {
          goto LABEL_39;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v4);
        if (!v16)
        {
          uint64_t v4 = v11 + 4;
          if (v11 + 4 >= v35) {
            goto LABEL_39;
          }
          unint64_t v16 = *(void *)(v36 + 8 * v4);
          if (!v16)
          {
            uint64_t v4 = v11 + 5;
            if (v11 + 5 >= v35) {
              goto LABEL_39;
            }
            unint64_t v16 = *(void *)(v36 + 8 * v4);
            if (!v16)
            {
              uint64_t v17 = v11 + 6;
              while (v35 != v17)
              {
                unint64_t v16 = *(void *)(v36 + 8 * v17++);
                if (v16)
                {
                  uint64_t v4 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_39:
              sub_1001B30B0();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v4 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

unint64_t sub_10019AC88(unint64_t result)
{
  if (result >= 7)
  {
    sub_100222840(24);
    v1._object = (void *)0x8000000100245030;
    v1._countAndFlagsBits = 0xD000000000000016;
    sub_100222310(v1);
    type metadata accessor for CuttlefishResetReason(0);
    sub_100222900();
    uint64_t result = sub_100222960();
    __break(1u);
  }
  return result;
}

uint64_t sub_10019AD50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, objc_class *a6, uint64_t a7, uint64_t isEscapingClosureAtFileLocation, uint64_t a9, void *a10, uint64_t a11, objc_class *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,unint64_t a21,uint64_t a22,unint64_t a23)
{
  unint64_t v25 = a21;
  uint64_t v48 = (uint64_t)a12;
  if (!a1)
  {
    uint64_t v39 = a2;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_100222090();
    sub_100003CC8(v32, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v38 = sub_100222070();
    os_log_type_t v33 = sub_100222500();
    if (os_log_type_enabled(v38, v33))
    {
      uint64_t v46 = a7;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      uint64_t v52 = v39;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v35 = sub_1002222C0();
      uint64_t v52 = sub_1001BEBDC(v35, v36, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v33, "Unable to load encryption key: %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a7 = v46;
      swift_slowDealloc();
LABEL_10:

      return sub_100135218(0, v39, (uint64_t)a6, a7, (char *)isEscapingClosureAtFileLocation, a9, a10, a11, v48, a13, a14, a15, a16, a17, a18, a19, a20, v25, a22,
               a23);
    }
LABEL_9:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_10;
  }
  id v30 = objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
  id v31 = a1;
  swift_bridgeObjectRetain();
  unint64_t v37 = sub_100043C0C(a3, a4, a5, v31);
  id v47 = *(id *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  uint64_t v38 = swift_allocObject();
  v38[2].Class isa = (Class)a9;
  v38[3].Class isa = (Class)v37;
  v38[4].Class isa = (Class)a10;
  v38[5].Class isa = (Class)a11;
  uint64_t v39 = a15;
  v38[6].Class isa = a6;
  v38[7].Class isa = (Class)a7;
  v38[8].Class isa = (Class)isEscapingClosureAtFileLocation;
  v38[9].Class isa = a12;
  v38[10].Class isa = (Class)a13;
  v38[11].Class isa = (Class)a14;
  v38[12].Class isa = (Class)a15;
  v38[13].Class isa = (Class)a16;
  v38[14].Class isa = (Class)a17;
  v38[15].Class isa = (Class)a18;
  v38[16].Class isa = (Class)a19;
  v38[17].Class isa = (Class)a20;
  v38[18].Class isa = (Class)a21;
  v38[19].Class isa = (Class)a22;
  v38[20].Class isa = (Class)a23;
  unint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1001B3618;
  *(void *)(v25 + 24) = v38;
  aBlock[4] = (uint64_t)sub_1001B8924;
  unint64_t v51 = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100112F58;
  aBlock[3] = (uint64_t)&unk_100284F20;
  uint64_t v40 = (objc_class *)_Block_copy(aBlock);
  uint64_t v48 = v51;
  a6 = v40;
  swift_bridgeObjectRetain();
  uint64_t v41 = v37;
  swift_bridgeObjectRetain();
  id v42 = a10;
  swift_bridgeObjectRetain();
  swift_retain();
  id v43 = (id)isEscapingClosureAtFileLocation;
  swift_bridgeObjectRetain();
  id v44 = a14;
  sub_1000059E8(a16, a17);
  sub_1000059E8(a18, a19);
  sub_1000059E8(a20, a21);
  sub_1000059E8(a22, a23);
  swift_retain();
  swift_release();
  [v47 performBlockAndWait:a6];

  _Block_release(a6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10019B304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, objc_class *a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, objc_class *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,unint64_t a21,uint64_t a22,unint64_t a23)
{
  swift_retain();
  id v24 = a8;
  swift_bridgeObjectRetain();
  id v25 = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = a14;
  id v69 = self;
  swift_bridgeObjectRetain();
  swift_retain_n();
  id v27 = v24;
  swift_bridgeObjectRetain_n();
  id v28 = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v29 = v26;
  id v30 = v27;
  id v79 = v28;
  id v82 = v29;
  sub_1000059E8(a16, a17);
  sub_1000059E8(a18, a19);
  sub_1000059E8(a20, a21);
  sub_1000059E8(a22, a23);
  swift_bridgeObjectRetain();
  sub_1000059E8(a16, a17);
  sub_1000059E8(a18, a19);
  sub_1000059E8(a20, a21);
  sub_1000059E8(a22, a23);
  swift_bridgeObjectRetain();
  sub_1000059E8(a16, a17);
  sub_1000059E8(a18, a19);
  sub_1000059E8(a20, a21);
  sub_1000059E8(a22, a23);
  swift_retain();
  id v64 = v30;
  swift_bridgeObjectRetain();
  id v77 = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v80 = v82;
  swift_bridgeObjectRetain();
  sub_1000059E8(a16, a17);
  sub_1000059E8(a18, a19);
  sub_1000059E8(a20, a21);
  sub_1000059E8(a22, a23);
  swift_retain();
  id v83 = v64;
  swift_bridgeObjectRetain();
  id v78 = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v31 = v80;
  swift_bridgeObjectRetain();
  sub_1000059E8(a16, a17);
  sub_1000059E8(a18, a19);
  sub_1000059E8(a20, a21);
  sub_1000059E8(a22, a23);
  id v32 = [v69 defaultManager];
  NSString v33 = sub_100222260();
  id v34 = [v32 identityForIdentifier:v33];

  size_t v81 = v31;
  if (!v34)
  {
    swift_retain();
    id v71 = v83;
    swift_bridgeObjectRetain();
    id v66 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v75 = v31;
    swift_bridgeObjectRetain();
    sub_1000059E8(a16, a17);
    sub_1000059E8(a18, a19);
    sub_1000059E8(a20, a21);
    sub_1000059E8(a22, a23);
    sub_10019AD50(0, 0, a3, a4, a5, a6, a7, (uint64_t)v71, a9, v66, a11, a12, a13, v75, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23);
    sub_100005A40(a22, a23);
    sub_100005A40(a20, a21);
    uint64_t v38 = v31;
    sub_100005A40(a18, a19);
    sub_100005A40(a16, a17);

    swift_release_n();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v36 = a16;
    uint64_t v39 = v78;
    uint64_t v37 = a18;
    goto LABEL_18;
  }
  id v35 = [v34 resultType];
  if (v35)
  {
    if (v35 == (id)1)
    {
      sub_100042D4C();
      uint64_t v73 = swift_allocError();
      *(_OWORD *)uint64_t v48 = xmmword_100231190;
      *(unsigned char *)(v48 + 16) = 13;
      swift_retain();
      id v57 = v83;
      swift_bridgeObjectRetain();
      id v67 = v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v53 = v31;
      swift_bridgeObjectRetain();
      sub_1000059E8(a16, a17);
      sub_1000059E8(a18, a19);
      sub_1000059E8(a20, a21);
      sub_1000059E8(a22, a23);
      sub_10019AD50(0, v73, a3, a4, a5, a6, a7, (uint64_t)v57, a9, v67, a11, a12, a13, v53, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      uint64_t v37 = a18;
      sub_100005A40(a22, a23);
      uint64_t v36 = a16;
      uint64_t v38 = v81;
      sub_100005A40(a20, a21);
      sub_100005A40(a18, a19);
      sub_100005A40(a16, a17);

      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_errorRelease();

      swift_release();
      uint64_t v39 = v78;
    }
    else
    {
      if (v35 == (id)2)
      {
        id v52 = [v34 error];
        swift_retain();
        id v65 = v83;
        swift_bridgeObjectRetain();
        id v70 = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v56 = v31;
        swift_bridgeObjectRetain();
        uint64_t v36 = a16;
        sub_1000059E8(a16, a17);
        sub_1000059E8(a18, a19);
        sub_1000059E8(a20, a21);
        sub_1000059E8(a22, a23);
        sub_10019AD50(0, (uint64_t)v52, a3, a4, a5, a6, a7, (uint64_t)v65, a9, v70, a11, a12, a13, v56, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23);
        uint64_t v37 = a18;
        sub_100005A40(a22, a23);
        sub_100005A40(a20, a21);
        sub_100005A40(a18, a19);
        sub_100005A40(a16, a17);

        swift_release_n();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v38 = v81;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100042D4C();
        uint64_t v74 = swift_allocError();
        *(_OWORD *)uint64_t v49 = xmmword_1002311A0;
        *(unsigned char *)(v49 + 16) = 13;
        swift_retain();
        id v58 = v83;
        swift_bridgeObjectRetain();
        id v68 = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v54 = v31;
        swift_bridgeObjectRetain();
        sub_1000059E8(a16, a17);
        sub_1000059E8(a18, a19);
        sub_1000059E8(a20, a21);
        sub_1000059E8(a22, a23);
        sub_10019AD50(0, v74, a3, a4, a5, a6, a7, (uint64_t)v58, a9, v68, a11, a12, a13, v54, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23);
        uint64_t v37 = a18;
        sub_100005A40(a22, a23);
        uint64_t v36 = a16;
        sub_100005A40(a20, a21);
        sub_100005A40(a18, a19);
        sub_100005A40(a16, a17);

        swift_release();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v38 = v81;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_errorRelease();

        swift_release();
      }
      uint64_t v39 = v78;
    }
    goto LABEL_18;
  }
  id v40 = v34;
  id v41 = [v40 value];
  if (!v41)
  {
    uint64_t v72 = 0;
    unint64_t v45 = a19;
    id v47 = v78;
    uint64_t v46 = a16;
    goto LABEL_17;
  }
  id v42 = v41;
  id v43 = [v41 keyPair];

  if (!v43)
  {
LABEL_16:
    uint64_t v72 = 0;
    unint64_t v45 = a19;
    uint64_t v46 = a16;
    id v47 = v78;
    goto LABEL_17;
  }
  self;
  uint64_t v44 = swift_dynamicCastObjCClass();
  if (!v44)
  {

    goto LABEL_16;
  }
  unint64_t v45 = a19;
  uint64_t v46 = a16;
  id v47 = v78;
  uint64_t v72 = (void *)v44;
LABEL_17:
  unint64_t v50 = v45;
  swift_retain();
  id v55 = v83;
  swift_bridgeObjectRetain();
  id v76 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v59 = v31;
  swift_bridgeObjectRetain();
  sub_1000059E8(v46, a17);
  sub_1000059E8(a18, v50);
  sub_1000059E8(a20, a21);
  sub_1000059E8(a22, a23);
  sub_10019AD50(v72, 0, a3, a4, a5, a6, a7, (uint64_t)v55, a9, v76, a11, a12, a13, v59, a15, v46, a17, a18, v50,
    a20,
    a21,
    a22,
    a23);
  uint64_t v37 = a18;
  sub_100005A40(a22, a23);
  sub_100005A40(a20, a21);
  sub_100005A40(a18, a19);
  sub_100005A40(v46, a17);

  swift_release_n();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v38 = v31;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v39 = v78;
  uint64_t v36 = v46;
LABEL_18:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100005A40(v36, a17);
  sub_100005A40(v37, a19);
  sub_100005A40(a20, a21);
  sub_100005A40(a22, a23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(v36, a17);
  sub_100005A40(v37, a19);
  sub_100005A40(a20, a21);
  sub_100005A40(a22, a23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(a16, a17);
  sub_100005A40(v37, a19);
  sub_100005A40(a20, a21);
  sub_100005A40(a22, a23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(a16, a17);
  sub_100005A40(a18, a19);
  sub_100005A40(a20, a21);
  sub_100005A40(a22, a23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(a16, a17);
  sub_100005A40(a18, a19);
  sub_100005A40(a20, a21);

  return sub_100005A40(a22, a23);
}

uint64_t sub_10019C2AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, uint64_t a10, objc_class *a11, uint64_t a12, void *a13)
{
  uint64_t v15 = (uint64_t)a11;
  if (!a1)
  {
    uint64_t v29 = a2;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_100222090();
    sub_100003CC8(v22, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v28 = sub_100222070();
    os_log_type_t v23 = sub_100222500();
    if (os_log_type_enabled(v28, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v24 = 136446210;
      uint64_t v40 = v29;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v25 = sub_1002222C0();
      uint64_t v40 = sub_1001BEBDC(v25, v26, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v23, "Unable to load encryption key: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v15 = (uint64_t)a11;
      swift_slowDealloc();
LABEL_10:

      return sub_100173DC8(0, v29, a6, a7, a8, a9, a10, v15, a12, a13);
    }
LABEL_9:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_10;
  }
  id v20 = objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
  id v21 = a1;
  swift_bridgeObjectRetain();
  id v27 = sub_100043C0C(a3, a4, a5, v21);
  id v36 = *(id *)&a8[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v28 = swift_allocObject();
  v28[2].Class isa = (Class)a8;
  v28[3].Class isa = (Class)a9;
  v28[4].Class isa = (Class)a10;
  v28[5].Class isa = (Class)a6;
  v28[6].Class isa = (Class)a7;
  v28[7].Class isa = a11;
  v28[8].Class isa = (Class)a12;
  v28[9].Class isa = (Class)v27;
  v28[10].Class isa = (Class)a13;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1001B4698;
  *(void *)(v29 + 24) = v28;
  aBlock[4] = (uint64_t)sub_1001B8924;
  uint64_t v39 = v29;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100112F58;
  aBlock[3] = (uint64_t)&unk_100286AA0;
  id v30 = _Block_copy(aBlock);
  a6 = v39;
  id v31 = v27;
  id v32 = a8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v33 = a13;
  swift_retain();
  swift_release();
  [v36 performBlockAndWait:v30];

  _Block_release(v30);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10019C71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, objc_class *a11, uint64_t a12, void *a13)
{
  swift_retain();
  id v15 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = a13;
  uint64_t v17 = self;
  swift_retain_n();
  id v18 = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v19 = v16;
  id v20 = v18;
  id v21 = v19;
  id v22 = v20;
  id v23 = v21;
  id v24 = v22;
  id v25 = v23;
  id v26 = [v17 defaultManager];
  NSString v27 = sub_100222260();
  id v28 = [v26 identityForIdentifier:v27];

  if (!v28)
  {
    swift_retain();
    id v32 = (char *)v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v33 = v25;
    sub_10019C2AC(0, 0, a3, a4, a5, a6, a7, v32, a9, a10, a11, a12, v33);

    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:

    goto LABEL_17;
  }
  id v29 = [v28 resultType];
  if (!v29)
  {
    id v34 = v28;
    id v35 = [v34 value];
    id v33 = v35;
    unint64_t v45 = v34;
    if (v35)
    {
      id v36 = [v35 keyPair];

      if (v36)
      {
        self;
        id v33 = (id)swift_dynamicCastObjCClass();
        if (!v33) {
      }
        }
      else
      {
        id v33 = 0;
      }
    }
    swift_retain();
    id v41 = (char *)v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v42 = v25;
    sub_10019C2AC(v33, 0, a3, a4, a5, a6, a7, v41, a9, a10, a11, a12, v42);

    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  if (v29 == (id)1)
  {
    sub_100042D4C();
    uint64_t v38 = swift_allocError();
    long long v39 = xmmword_100231190;
LABEL_13:
    *(_OWORD *)uint64_t v37 = v39;
    *(unsigned char *)(v37 + 16) = 13;
    swift_retain();
    uint64_t v40 = (char *)v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v46 = v25;
    sub_10019C2AC(0, v38, a3, a4, a5, a6, a7, v40, a9, a10, a11, a12, v46);

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    swift_release();
    goto LABEL_17;
  }
  if (v29 != (id)2)
  {
    sub_100042D4C();
    uint64_t v38 = swift_allocError();
    long long v39 = xmmword_1002311A0;
    goto LABEL_13;
  }
  id v30 = [v28 error];
  swift_retain();
  id v31 = (char *)v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v44 = v25;
  sub_10019C2AC(0, (uint64_t)v30, a3, a4, a5, a6, a7, v31, a9, a10, a11, a12, v44);

  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_17:
  swift_release_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

void sub_10019CC74(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v24 = [self defaultManager];
  NSString v12 = sub_100222260();
  id v23 = [v24 identityForIdentifier:v12];

  if (!v23)
  {
    sub_1001162D0(0, 0, a3, a4, a5, a6, a7);
    id v15 = v24;
LABEL_14:

    return;
  }
  id v13 = [v23 resultType];
  if (!v13)
  {
    id v16 = v23;
    id v17 = [v16 value];
    if (v17)
    {
      id v18 = v17;
      id v19 = [v17 keyPair];

      if (!v19)
      {
LABEL_11:
        id v17 = 0;
        goto LABEL_12;
      }
      self;
      id v17 = (id)swift_dynamicCastObjCClass();
      if (!v17)
      {

        goto LABEL_11;
      }
    }
LABEL_12:
    id v23 = v17;
    sub_1001162D0(v17, 0, a3, a4, a5, a6, a7);

    goto LABEL_13;
  }
  if (v13 == (id)1)
  {
    sub_100042D4C();
    uint64_t v21 = swift_allocError();
    long long v22 = xmmword_100231190;
  }
  else
  {
    if (v13 == (id)2)
    {
      id v14 = [v23 error];
      sub_1001162D0(0, (uint64_t)v14, a3, a4, a5, a6, a7);

LABEL_13:
      id v15 = v23;
      goto LABEL_14;
    }
    sub_100042D4C();
    uint64_t v21 = swift_allocError();
    long long v22 = xmmword_1002311A0;
  }
  *(_OWORD *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 16) = 13;
  sub_1001162D0(0, v21, a3, a4, a5, a6, a7);

  swift_errorRelease();
}

uint64_t sub_10019CF2C(void *a1, uint64_t a2, uint64_t a3, void *a4, objc_class *a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, objc_class *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,unint64_t a22)
{
  if (a1)
  {
    v55[0] = 0x6974707972636E65;
    v55[1] = 0xEF2079656B2D6E6FLL;
    swift_bridgeObjectRetain();
    swift_retain();
    id v50 = a7;
    swift_bridgeObjectRetain();
    id v42 = a9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v40 = a13;
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    sub_1000059E8(a21, a22);
    v57._countAndFlagsBits = a3;
    v57._object = a4;
    sub_100222310(v57);
    uint64_t v25 = a19;
    swift_retain();
    id v44 = v50;
    swift_bridgeObjectRetain();
    id v51 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v43 = v40;
    swift_bridgeObjectRetain();
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    sub_1000059E8(a21, a22);
    swift_bridgeObjectRetain();
    id v26 = a1;
    sub_10019B304(0x6974707972636E65, 0xEF2079656B2D6E6FLL, a3, (uint64_t)a4, v26, a5, a6, v44, a8, v51, a10, a11, a12, v43, a14, a15, a16, a17, a18,
      a19,
      a20,
      a21,
      a22);
    sub_100005A40(a21, a22);
    sub_100005A40(a19, a20);
    sub_100005A40(a17, a18);
    uint64_t v27 = a15;
    unint64_t v28 = a16;
    sub_100005A40(a15, a16);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v29 = a9;
    swift_release_n();

    unint64_t v30 = a20;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v48 = a7;
    swift_bridgeObjectRetain();
    id v46 = a9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v45 = a13;
    unint64_t v28 = a16;
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    sub_1000059E8(a21, a22);
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_100222090();
    sub_100003CC8(v31, (uint64_t)qword_10029E7D0);
    uint64_t v32 = a2;
    swift_errorRetain();
    swift_errorRetain();
    id v33 = sub_100222070();
    os_log_type_t v34 = sub_100222500();
    uint64_t v35 = a6;
    if (os_log_type_enabled(v33, v34))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      v55[0] = swift_slowAlloc();
      *(_DWORD *)id v36 = 136446210;
      uint64_t v56 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v37 = sub_1002222C0();
      uint64_t v56 = sub_1001BEBDC(v37, v38, v55);
      unint64_t v28 = a16;
      uint64_t v32 = a2;
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Unable to load signing key: %{public}s", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v30 = a20;
    uint64_t v25 = a19;
    uint64_t v27 = a15;
    sub_100135218(0, v32, (uint64_t)a5, v35, v48, a8, v46, a10, (uint64_t)a11, a12, v45, a14, a15, v28, a17, a18, a19, a20, a21,
      a22);

    swift_release();
    id v29 = a9;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100005A40(v27, v28);
  sub_100005A40(a17, a18);
  sub_100005A40(v25, v30);
  return sub_100005A40(a21, a22);
}

uint64_t sub_10019D53C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, objc_class *a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, objc_class *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,unint64_t a22)
{
  swift_retain();
  id v24 = a7;
  swift_bridgeObjectRetain();
  id v25 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = a13;
  id v63 = self;
  swift_bridgeObjectRetain();
  swift_retain_n();
  id v27 = v24;
  swift_bridgeObjectRetain_n();
  id v28 = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v29 = v26;
  id v71 = v27;
  id v74 = v28;
  id v77 = v29;
  sub_1000059E8(a15, a16);
  sub_1000059E8(a17, a18);
  sub_1000059E8(a19, a20);
  sub_1000059E8(a21, a22);
  swift_bridgeObjectRetain();
  sub_1000059E8(a15, a16);
  sub_1000059E8(a17, a18);
  sub_1000059E8(a19, a20);
  sub_1000059E8(a21, a22);
  swift_bridgeObjectRetain();
  sub_1000059E8(a15, a16);
  sub_1000059E8(a17, a18);
  sub_1000059E8(a19, a20);
  sub_1000059E8(a21, a22);
  swift_retain();
  id v72 = v71;
  swift_bridgeObjectRetain();
  id v58 = v74;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v75 = v77;
  swift_bridgeObjectRetain();
  sub_1000059E8(a15, a16);
  sub_1000059E8(a17, a18);
  sub_1000059E8(a19, a20);
  sub_1000059E8(a21, a22);
  swift_retain();
  id v73 = v72;
  swift_bridgeObjectRetain();
  id v78 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v76 = v75;
  swift_bridgeObjectRetain();
  sub_1000059E8(a15, a16);
  sub_1000059E8(a17, a18);
  sub_1000059E8(a19, a20);
  sub_1000059E8(a21, a22);
  id v30 = [v63 defaultManager];
  NSString v31 = sub_100222260();
  id v32 = [v30 identityForIdentifier:v31];

  if (!v32)
  {
    swift_retain();
    id v60 = v73;
    swift_bridgeObjectRetain();
    id v69 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v65 = v76;
    swift_bridgeObjectRetain();
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    sub_1000059E8(a21, a22);
    sub_10019CF2C(0, 0, a3, a4, a5, a6, v60, a8, v69, a10, a11, a12, v65, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
    sub_100005A40(a21, a22);
    sub_100005A40(a19, a20);
    sub_100005A40(a17, a18);
    unint64_t v35 = a16;
    sub_100005A40(a15, a16);

    swift_release_n();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v34 = a17;
    goto LABEL_18;
  }
  id v33 = [v32 resultType];
  if (!v33)
  {
    id v36 = v32;
    id v37 = [v36 value];
    if (v37)
    {
      unint64_t v38 = v37;
      id v39 = [v37 keyPair];

      if (v39)
      {
        self;
        uint64_t v40 = swift_dynamicCastObjCClass();
        if (v40)
        {
          unint64_t v41 = a18;
          uint64_t v42 = a17;
          id v66 = (void *)v40;
LABEL_17:
          swift_retain();
          id v50 = v73;
          swift_bridgeObjectRetain();
          id v70 = v78;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v54 = v76;
          swift_bridgeObjectRetain();
          sub_1000059E8(a15, a16);
          sub_1000059E8(v42, v41);
          sub_1000059E8(a19, a20);
          sub_1000059E8(a21, a22);
          sub_10019CF2C(v66, 0, a3, a4, a5, a6, v50, a8, v70, a10, a11, a12, v54, a14, a15, a16, v42, v41, a19,
            a20,
            a21,
            a22);
          sub_100005A40(a21, a22);
          sub_100005A40(a19, a20);
          uint64_t v45 = v42;
          sub_100005A40(v42, a18);
          unint64_t v35 = a16;
          sub_100005A40(a15, a16);

          swift_release_n();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          uint64_t v34 = v45;
          goto LABEL_18;
        }
      }
      id v66 = 0;
      unint64_t v41 = a18;
    }
    else
    {
      id v66 = 0;
      unint64_t v41 = a18;
    }
    uint64_t v42 = a17;
    goto LABEL_17;
  }
  if (v33 == (id)1)
  {
    sub_100042D4C();
    uint64_t v67 = swift_allocError();
    *(_OWORD *)uint64_t v43 = xmmword_100231190;
    *(unsigned char *)(v43 + 16) = 13;
    swift_retain();
    id v52 = v73;
    swift_bridgeObjectRetain();
    id v61 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v48 = v76;
    swift_bridgeObjectRetain();
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    sub_1000059E8(a21, a22);
    sub_10019CF2C(0, v67, a3, a4, a5, a6, v52, a8, v61, a10, a11, a12, v48, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
    sub_100005A40(a21, a22);
    uint64_t v34 = a17;
    unint64_t v35 = a16;
    sub_100005A40(a19, a20);
    sub_100005A40(a17, a18);
    sub_100005A40(a15, a16);

    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_errorRelease();

    swift_release();
  }
  else if (v33 == (id)2)
  {
    id v47 = [v32 error];
    swift_retain();
    id v59 = v73;
    swift_bridgeObjectRetain();
    id v64 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v51 = v76;
    swift_bridgeObjectRetain();
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    sub_1000059E8(a21, a22);
    sub_10019CF2C(0, (uint64_t)v47, a3, a4, a5, a6, v59, a8, v64, a10, a11, a12, v51, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
    sub_100005A40(a21, a22);
    uint64_t v34 = a17;
    unint64_t v35 = a16;
    sub_100005A40(a19, a20);
    sub_100005A40(a17, a18);
    sub_100005A40(a15, a16);

    swift_release_n();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100042D4C();
    uint64_t v68 = swift_allocError();
    *(_OWORD *)uint64_t v44 = xmmword_1002311A0;
    *(unsigned char *)(v44 + 16) = 13;
    swift_retain();
    id v53 = v73;
    swift_bridgeObjectRetain();
    id v62 = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v49 = v76;
    swift_bridgeObjectRetain();
    sub_1000059E8(a15, a16);
    sub_1000059E8(a17, a18);
    sub_1000059E8(a19, a20);
    sub_1000059E8(a21, a22);
    sub_10019CF2C(0, v68, a3, a4, a5, a6, v53, a8, v62, a10, a11, a12, v49, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
    sub_100005A40(a21, a22);
    uint64_t v34 = a17;
    unint64_t v35 = a16;
    sub_100005A40(a19, a20);
    sub_100005A40(a17, a18);
    sub_100005A40(a15, a16);

    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_errorRelease();

    swift_release();
  }
LABEL_18:
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100005A40(a15, v35);
  sub_100005A40(v34, a18);
  sub_100005A40(a19, a20);
  sub_100005A40(a21, a22);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(a15, v35);
  sub_100005A40(a17, a18);
  sub_100005A40(a19, a20);
  sub_100005A40(a21, a22);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(a15, v35);
  sub_100005A40(a17, a18);
  sub_100005A40(a19, a20);
  sub_100005A40(a21, a22);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(a15, a16);
  sub_100005A40(a17, a18);
  sub_100005A40(a19, a20);
  sub_100005A40(a21, a22);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(a15, a16);
  sub_100005A40(a17, a18);
  sub_100005A40(a19, a20);

  return sub_100005A40(a21, a22);
}

uint64_t sub_10019E45C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, objc_class *a10, uint64_t a11, void *a12)
{
  id v14 = a12;
  if (a1)
  {
    v37[0] = 0x6974707972636E65;
    v37[1] = 0xEF2079656B2D6E6FLL;
    swift_retain();
    id v18 = a7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = a12;
    v39._countAndFlagsBits = a3;
    v39._object = a4;
    sub_100222310(v39);
    swift_retain();
    id v20 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = v19;
    id v14 = a12;
    id v22 = v21;
    swift_bridgeObjectRetain();
    id v23 = a1;
    sub_10019C71C(0x6974707972636E65, 0xEF2079656B2D6E6FLL, a3, (uint64_t)a4, v23, a5, a6, v20, a8, a9, a10, a11, v22);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = qword_100298EB8;
    swift_retain();
    id v26 = a7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = a12;
    if (v25 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100222090();
    sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v28 = sub_100222070();
    os_log_type_t v29 = sub_100222500();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      v37[0] = swift_slowAlloc();
      *(_DWORD *)id v30 = 136446210;
      uint64_t v38 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v31 = sub_1002222C0();
      uint64_t v38 = sub_1001BEBDC(v31, v32, v37);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to load signing key: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_100173DC8(0, a2, a5, a6, v26, a8, a9, (uint64_t)a10, a11, v34);
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019E83C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, objc_class *a10, uint64_t a11, void *a12)
{
  swift_retain();
  id v14 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = a12;
  id v16 = self;
  swift_retain_n();
  id v17 = v14;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v18 = v15;
  id v19 = v17;
  id v20 = v18;
  id v21 = v19;
  id v22 = v20;
  id v23 = v21;
  id v24 = v22;
  id v25 = [v16 defaultManager];
  NSString v26 = sub_100222260();
  id v27 = [v25 identityForIdentifier:v26];

  if (!v27)
  {
    swift_retain();
    id v31 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v32 = v24;
    sub_10019E45C(0, 0, a3, a4, a5, a6, v31, a8, a9, a10, a11, v32);

    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:

    goto LABEL_17;
  }
  id v28 = [v27 resultType];
  if (!v28)
  {
    id v33 = v27;
    id v34 = [v33 value];
    id v32 = v34;
    uint64_t v44 = v33;
    if (v34)
    {
      id v35 = [v34 keyPair];

      if (v35)
      {
        self;
        id v32 = (id)swift_dynamicCastObjCClass();
        if (!v32) {
      }
        }
      else
      {
        id v32 = 0;
      }
    }
    swift_retain();
    id v40 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v41 = v24;
    sub_10019E45C(v32, 0, a3, a4, a5, a6, v40, a8, a9, a10, a11, v41);

    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  if (v28 == (id)1)
  {
    sub_100042D4C();
    uint64_t v37 = swift_allocError();
    long long v38 = xmmword_100231190;
LABEL_13:
    *(_OWORD *)uint64_t v36 = v38;
    *(unsigned char *)(v36 + 16) = 13;
    swift_retain();
    id v39 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v45 = v24;
    sub_10019E45C(0, v37, a3, a4, a5, a6, v39, a8, a9, a10, a11, v45);

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    swift_release();
    goto LABEL_17;
  }
  if (v28 != (id)2)
  {
    sub_100042D4C();
    uint64_t v37 = swift_allocError();
    long long v38 = xmmword_1002311A0;
    goto LABEL_13;
  }
  id v29 = [v27 error];
  swift_retain();
  id v30 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v43 = v24;
  sub_10019E45C(0, (uint64_t)v29, a3, a4, a5, a6, v30, a8, a9, a10, a11, v43);

  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_17:
  swift_release_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

void sub_10019ED6C(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, void *a6)
{
  id v22 = [self defaultManager];
  NSString v10 = sub_100222260();
  id v21 = [v22 identityForIdentifier:v10];

  if (!v21)
  {
    sub_100116018(0, 0, a3, a4, a5, a6);
    id v13 = v22;
LABEL_14:

    return;
  }
  id v11 = [v21 resultType];
  if (!v11)
  {
    id v14 = v21;
    id v15 = [v14 value];
    if (v15)
    {
      id v16 = v15;
      id v17 = [v15 keyPair];

      if (!v17)
      {
LABEL_11:
        id v15 = 0;
        goto LABEL_12;
      }
      self;
      id v15 = (id)swift_dynamicCastObjCClass();
      if (!v15)
      {

        goto LABEL_11;
      }
    }
LABEL_12:
    id v21 = v15;
    sub_100116018(v15, 0, a3, a4, a5, a6);

    goto LABEL_13;
  }
  if (v11 == (id)1)
  {
    sub_100042D4C();
    uint64_t v19 = swift_allocError();
    long long v20 = xmmword_100231190;
  }
  else
  {
    if (v11 == (id)2)
    {
      id v12 = [v21 error];
      sub_100116018(0, (uint64_t)v12, a3, a4, a5, a6);

LABEL_13:
      id v13 = v21;
      goto LABEL_14;
    }
    sub_100042D4C();
    uint64_t v19 = swift_allocError();
    long long v20 = xmmword_1002311A0;
  }
  *(_OWORD *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 16) = 13;
  sub_100116018(0, v19, a3, a4, a5, a6);

  swift_errorRelease();
}

void sub_10019F010(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15)
{
  id v33 = [self defaultManager];
  NSString v16 = sub_100222260();
  id v32 = [v33 identityForIdentifier:v16];

  if (!v32)
  {
    sub_10013AAC0(0, 0, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    uint64_t v19 = v33;
LABEL_14:

    return;
  }
  id v17 = [v32 resultType];
  if (!v17)
  {
    id v20 = v32;
    id v21 = [v20 value];
    if (v21)
    {
      id v22 = v21;
      id v23 = [v21 keyPair];

      if (!v23)
      {
LABEL_11:
        id v21 = 0;
        goto LABEL_12;
      }
      self;
      id v21 = (id)swift_dynamicCastObjCClass();
      if (!v21)
      {

        goto LABEL_11;
      }
    }
LABEL_12:
    id v32 = v21;
    sub_10013AAC0(v21, 0, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);

    goto LABEL_13;
  }
  if (v17 == (id)1)
  {
    sub_100042D4C();
    uint64_t v25 = swift_allocError();
    long long v26 = xmmword_100231190;
  }
  else
  {
    if (v17 == (id)2)
    {
      id v18 = [v32 error];
      sub_10013AAC0(0, (uint64_t)v18, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);

LABEL_13:
      uint64_t v19 = v32;
      goto LABEL_14;
    }
    sub_100042D4C();
    uint64_t v25 = swift_allocError();
    long long v26 = xmmword_1002311A0;
  }
  *(_OWORD *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 16) = 13;
  sub_10013AAC0(0, v25, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);

  swift_errorRelease();
}

void sub_10019F374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void))
{
  id v27 = [self defaultManager];
  NSString v15 = sub_100222260();
  id v26 = [v27 identityForIdentifier:v15];

  if (!v26)
  {
    ((void (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a9)(0, 0, a3, a4, a5, a6, a7, a8);
    id v18 = v27;
LABEL_14:

    return;
  }
  id v16 = [v26 resultType];
  if (!v16)
  {
    id v19 = v26;
    id v20 = [v19 value];
    if (v20)
    {
      id v21 = v20;
      id v22 = [v20 keyPair];

      if (!v22)
      {
LABEL_11:
        id v20 = 0;
        goto LABEL_12;
      }
      self;
      id v20 = (id)swift_dynamicCastObjCClass();
      if (!v20)
      {

        goto LABEL_11;
      }
    }
LABEL_12:
    id v26 = v20;
    a9();

    goto LABEL_13;
  }
  if (v16 == (id)1)
  {
    sub_100042D4C();
    uint64_t v24 = swift_allocError();
    long long v25 = xmmword_100231190;
  }
  else
  {
    if (v16 == (id)2)
    {
      id v17 = [v26 error];
      ((void (*)(void, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a9)(0, v17, a3, a4, a5, a6, a7, a8);

LABEL_13:
      id v18 = v26;
      goto LABEL_14;
    }
    sub_100042D4C();
    uint64_t v24 = swift_allocError();
    long long v25 = xmmword_1002311A0;
  }
  *(_OWORD *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 16) = 13;
  ((void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a9)(0, v24, a3, a4, a5, a6, a7, a8);

  swift_errorRelease();
}

uint64_t sub_10019F660(uint64_t a1, char *a2, void *a3, void *a4, uint64_t isEscapingClosureAtFileLocation, void *a6, void *a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
  id v17 = a11;
  if (!a1) {
    goto LABEL_7;
  }
  id v32 = a11;
  swift_errorRetain();
  if (qword_100298EB8 != -1) {
    goto LABEL_9;
  }
  while (1)
  {
    uint64_t v18 = sub_100222090();
    sub_100003CC8(v18, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v19 = sub_100222070();
    os_log_type_t v20 = sub_1002224E0();
    if (os_log_type_enabled(v19, v20))
    {
      id v31 = a2;
      id v21 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v21 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v22 = sub_1002222C0();
      sub_1001BEBDC(v22, v23, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "updateTrustIfNeeded: error fetching all requested policies (continuing anyway): %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v31;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    id v17 = v32;
LABEL_7:
    id v32 = *(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a2;
    *(void *)(v24 + 24) = a3;
    *(void *)(v24 + 32) = a4;
    *(void *)(v24 + 40) = isEscapingClosureAtFileLocation;
    a4 = a6;
    sub_1000D8B9C((uint64_t)a6, v24 + 48, &qword_10029EE00);
    a3 = a7;
    *(void *)(v24 + 152) = a7;
    *(void *)(v24 + 160) = a8;
    *(void *)(v24 + 168) = a9;
    *(unsigned char *)(v24 + 176) = a10 & 1;
    *(void *)(v24 + 184) = v17;
    a8 = swift_allocObject();
    *(void *)(a8 + 16) = sub_1001B4334;
    *(void *)(a8 + 24) = v24;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t v35 = a8;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100285880;
    a6 = _Block_copy(aBlock);
    long long v25 = a2;
    a2 = (char *)v35;
    id v26 = v25;
    swift_bridgeObjectRetain();
    id v27 = (id)isEscapingClosureAtFileLocation;
    sub_1001B41A8(a4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
    id v28 = v17;
    swift_retain();
    id v29 = a7;
    swift_retain();
    swift_release();
    [v32 performBlockAndWait:a6];
    _Block_release(a6);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_9:
    swift_once();
  }
  return result;
}

uint64_t sub_10019FA54(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12)
{
  id v76 = a8;
  uint64_t v77 = a1;
  id v78 = a2;
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v17);
  id v73 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  uint64_t v68 = a4;
  *(void *)(v19 + 32) = a5;
  *(void *)(v19 + 40) = a6;
  sub_1000D8B9C((uint64_t)a7, v19 + 48, &qword_10029EE00);
  os_log_type_t v20 = v76;
  *(void *)(v19 + 152) = v76;
  *(void *)(v19 + 160) = a9;
  uint64_t v69 = a9;
  *(void *)(v19 + 168) = a10;
  int v65 = a11;
  *(unsigned char *)(v19 + 176) = a11;
  uint64_t v74 = v19;
  *(void *)(v19 + 184) = a12;
  uint64_t v21 = swift_allocObject();
  uint64_t v75 = v21;
  *(void *)(v21 + 16) = v77;
  uint64_t v22 = v21 + 16;
  uint64_t v23 = swift_allocObject();
  id v64 = a3;
  uint64_t v71 = a5;
  swift_bridgeObjectRetain();
  id v66 = a6;
  uint64_t v67 = a7;
  sub_1001B41A8(a7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
  uint64_t v70 = (uint64_t)a12;
  uint64_t v24 = a12;
  swift_bridgeObjectRetain();
  id v25 = v20;
  uint64_t v26 = v22;
  id v76 = v25;
  uint64_t v77 = a10;
  swift_retain();
  uint64_t v27 = v23;
  *(void *)(v23 + 16) = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  id v28 = v78;
  id v29 = *(void **)&v78[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v26;
  *((void *)v30 + 3) = v28;
  *((void *)v30 + 4) = v23 + 16;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1001B8C9C;
  *(void *)(v31 + 24) = v30;
  id v83 = sub_1001B8924;
  uint64_t v84 = v31;
  aBlock = _NSConcreteStackBlock;
  uint64_t v80 = 1107296256;
  size_t v81 = sub_100112F58;
  id v82 = &unk_100285740;
  id v32 = _Block_copy(&aBlock);
  id v33 = (char *)v28;
  swift_retain();
  swift_release();
  [v29 performBlockAndWait:v32];
  _Block_release(v32);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if ((*(void *)v26 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_100222750();
    uint64_t result = swift_bridgeObjectRelease();
    if (v37)
    {
LABEL_4:
      __chkstk_darwin(result, v36);
      *(&v63 - 2) = v26;
      sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
      uint64_t v38 = (uint64_t)v73;
      sub_100221F70();
      uint64_t v39 = *(void *)&v33[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      uint64_t v40 = *(void *)&v33[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      sub_1000059A4(&v33[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v39);
      id v41 = (void *)swift_allocObject();
      v41[2] = v33;
      v41[3] = sub_1001B42BC;
      id v78 = v30;
      uint64_t v42 = v75;
      v41[4] = v74;
      v41[5] = v42;
      v41[6] = v23;
      uint64_t v43 = *(void *)(v40 + 16);
      uint64_t v44 = v33;
      id v45 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v43 + 80);
      id v46 = v44;
      swift_retain();
      swift_retain();
      swift_retain();
      v45(v38, sub_1001B1CC8, v41, v39, v43);
      swift_release();
      sub_1001B7EAC(v38, type metadata accessor for FetchPolicyDocumentsRequest);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else if (*(void *)(*(void *)v26 + 16))
  {
    goto LABEL_4;
  }
  char v47 = v65 & 1;
  uint64_t v63 = v27;
  PolicyDocumentsuint64_t Request = *(void *)(v27 + 16);
  id v48 = v64;
  id v78 = *(char **)&v64[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v49 = (void *)swift_allocObject();
  id v73 = v24;
  id v50 = v49;
  id v52 = v67;
  uint64_t v51 = v68;
  v49[2] = v48;
  v49[3] = v51;
  id v53 = v66;
  v49[4] = v71;
  v49[5] = v53;
  sub_1000D8B9C((uint64_t)v52, (uint64_t)(v49 + 6), &qword_10029EE00);
  id v55 = v76;
  uint64_t v54 = v77;
  uint64_t v56 = v69;
  v50[19] = v76;
  v50[20] = v56;
  v50[21] = v54;
  *((unsigned char *)v50 + 176) = v47;
  v50[23] = v70;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_1001B4334;
  *(void *)(v57 + 24) = v50;
  id v83 = sub_1001B8924;
  uint64_t v84 = v57;
  aBlock = _NSConcreteStackBlock;
  uint64_t v80 = 1107296256;
  size_t v81 = sub_100112F58;
  id v82 = &unk_1002857E0;
  id v58 = _Block_copy(&aBlock);
  uint64_t v70 = v84;
  id v59 = v48;
  swift_bridgeObjectRetain();
  id v60 = v53;
  sub_1001B41A8(v52, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001B2194);
  id v61 = v55;
  swift_retain();
  id v62 = v73;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v78 performBlockAndWait:v58];
  _Block_release(v58);
  LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  if (v58) {
    goto LABEL_9;
  }
  return result;
}

void sub_1001A0138(uint64_t a1, uint64_t a2, void (*a3)(void, void, void), uint64_t a4, char a5, char *a6, uint64_t a7, uint64_t a8, void *a9)
{
  id v27 = [self defaultManager];
  NSString v15 = sub_100222260();
  id v26 = [v27 identityForIdentifier:v15];

  if (!v26)
  {
    sub_100176EF4(0, 0, a3, a4, a5 & 1, a6, a7, a8, a9);
    uint64_t v18 = v27;
LABEL_14:

    return;
  }
  id v16 = [v26 resultType];
  if (!v16)
  {
    id v19 = v26;
    id v20 = [v19 value];
    if (v20)
    {
      uint64_t v21 = v20;
      id v22 = [v20 keyPair];

      if (!v22)
      {
LABEL_11:
        id v20 = 0;
        goto LABEL_12;
      }
      self;
      id v20 = (id)swift_dynamicCastObjCClass();
      if (!v20)
      {

        goto LABEL_11;
      }
    }
LABEL_12:
    id v26 = v20;
    sub_100176EF4(v20, 0, a3, a4, a5 & 1, a6, a7, a8, a9);

    goto LABEL_13;
  }
  if (v16 == (id)1)
  {
    sub_100042D4C();
    uint64_t v24 = swift_allocError();
    long long v25 = xmmword_100231190;
  }
  else
  {
    if (v16 == (id)2)
    {
      id v17 = [v26 error];
      sub_100176EF4(0, (uint64_t)v17, a3, a4, a5 & 1, a6, a7, a8, a9);

LABEL_13:
      uint64_t v18 = v26;
      goto LABEL_14;
    }
    sub_100042D4C();
    uint64_t v24 = swift_allocError();
    long long v25 = xmmword_1002311A0;
  }
  *(_OWORD *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 16) = 13;
  sub_100176EF4(0, v24, a3, a4, a5 & 1, a6, a7, a8, a9);

  swift_errorRelease();
}

void sub_1001A0424(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char *a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  id v27 = [self defaultManager];
  NSString v15 = sub_100222260();
  id v26 = [v27 identityForIdentifier:v15];

  if (!v26)
  {
    sub_100182BA4(0, 0, a3, a4, a5, a6, a7, a8, a9);
    uint64_t v18 = v27;
LABEL_14:

    return;
  }
  id v16 = [v26 resultType];
  if (!v16)
  {
    id v19 = v26;
    id v20 = [v19 value];
    if (v20)
    {
      uint64_t v21 = v20;
      id v22 = [v20 keyPair];

      if (!v22)
      {
LABEL_11:
        id v20 = 0;
        goto LABEL_12;
      }
      self;
      id v20 = (id)swift_dynamicCastObjCClass();
      if (!v20)
      {

        goto LABEL_11;
      }
    }
LABEL_12:
    id v26 = v20;
    sub_100182BA4(v20, 0, a3, a4, a5, a6, a7, a8, a9);

    goto LABEL_13;
  }
  if (v16 == (id)1)
  {
    sub_100042D4C();
    uint64_t v24 = (void *)swift_allocError();
    long long v25 = xmmword_100231190;
  }
  else
  {
    if (v16 == (id)2)
    {
      id v17 = [v26 error];
      sub_100182BA4(0, v17, a3, a4, a5, a6, a7, a8, a9);

LABEL_13:
      uint64_t v18 = v26;
      goto LABEL_14;
    }
    sub_100042D4C();
    uint64_t v24 = (void *)swift_allocError();
    long long v25 = xmmword_1002311A0;
  }
  *(_OWORD *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 16) = 13;
  sub_100182BA4(0, v24, a3, a4, a5, a6, a7, a8, a9);

  swift_errorRelease();
}

uint64_t sub_1001A0710(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for TLKShare(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_1001A0868(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1000046DC(&qword_100299D70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

uint64_t sub_1001A0974(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_100222970();
    swift_bridgeObjectRelease();
  }
  sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
  sub_1001B1ED0((unint64_t *)&qword_10029EDE0, (unint64_t *)&qword_10029EDB0);
  uint64_t result = sub_100222460();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_100222970();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        unint64_t v6 = (void *)sub_100222880();
        sub_1001908AC(&v9, v6, (unint64_t *)&qword_10029EDB0, (uint64_t)TPPolicyVersion_ptr, &qword_10029EDD8);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1001908AC(&v9, v8, (unint64_t *)&qword_10029EDB0, (uint64_t)TPPolicyVersion_ptr, &qword_10029EDD8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A0B30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_100222460();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1001902EC(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1001A0BC8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v10 = sub_100222260();
  id v11 = [v9 initWithEntityName:v10];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100229380;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_10000D794();
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  *(void *)(v12 + 96) = type metadata accessor for ContainerMO();
  *(void *)(v12 + 104) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v12 + 72) = a2;
  swift_bridgeObjectRetain();
  id v13 = a2;
  id v14 = (void *)sub_1002224C0();
  [v11 setPredicate:v14];

  [v11 setFetchLimit:1];
  type metadata accessor for PeerMO();
  unint64_t result = sub_1002225E0();
  if (v4)
  {

    return a1;
  }
  unint64_t v16 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    a1 = sub_100222970();
    unint64_t result = swift_bridgeObjectRelease();
    if (!a1) {
      goto LABEL_9;
    }
  }
  else
  {
    a1 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!a1)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      return a1;
    }
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    id v17 = (id)sub_100222880();
    goto LABEL_8;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v17 = *(id *)(v16 + 32);
LABEL_8:
    a1 = (uint64_t)v17;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_1001A0E10(void *a1)
{
  id v2 = [a1 peerID];
  if (!v2)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_100222090();
    sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
    id v22 = sub_100222070();
    os_log_type_t v23 = sub_100222500();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "DBAdapter PeerMO has no ID?", v24, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_100222270();
  unint64_t v6 = v5;

  id v7 = [a1 stableInfo];
  if (!v7)
  {
LABEL_12:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_100222090();
    sub_100003CC8(v25, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    id v26 = sub_100222070();
    os_log_type_t v27 = sub_1002224E0();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)id v28 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v4, v6, &v33);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "DBAdapter peer %{public}s has no/incomplete stable info/sig", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }
LABEL_21:

    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_100221BF0();
  unint64_t v11 = v10;

  id v12 = [a1 stableInfoSig];
  if (!v12)
  {
    sub_100005A40(v9, v11);
    goto LABEL_12;
  }
  id v13 = v12;
  uint64_t v14 = sub_100221BF0();
  unint64_t v16 = v15;

  id v17 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v9, v11);
  sub_1000059E8(v14, v16);
  Class isa = sub_100221BD0().super.isa;
  Class v19 = sub_100221BD0().super.isa;
  id v20 = [v17 initWithData:isa sig:v19];
  sub_100005A40(v14, v16);
  sub_100005A40(v9, v11);

  if (!v20)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_100222090();
    sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    id v26 = sub_100222070();
    os_log_type_t v30 = sub_1002224E0();
    if (os_log_type_enabled(v26, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v4, v6, &v33);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v30, "DBAdapter peer %{public}s has unparseable stable info/sig", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100005A40(v14, v16);
      sub_100005A40(v9, v11);
      return 0;
    }
    sub_100005A40(v9, v11);
    sub_100005A40(v14, v16);
    goto LABEL_21;
  }
  sub_100005A40(v14, v16);
  sub_100005A40(v9, v11);
  swift_bridgeObjectRelease();
  return v20;
}

id sub_1001A1344(void *a1)
{
  id v2 = [a1 peerID];
  if (!v2)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_100222090();
    sub_100003CC8(v20, (uint64_t)qword_10029E7D0);
    uint64_t v21 = sub_100222070();
    os_log_type_t v22 = sub_100222500();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "DBAdapter PeerMO has no ID?", v23, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_100222270();
  unint64_t v6 = v5;

  id v7 = [a1 dynamicInfo];
  if (!v7)
  {
LABEL_12:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100222090();
    sub_100003CC8(v24, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100222070();
    os_log_type_t v26 = sub_1002224E0();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v27 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v4, v6, &v32);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "DBAdapter peer %{public}s has no/incomplete dynamic info/sig", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }
LABEL_21:

    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_100221BF0();
  unint64_t v11 = v10;

  id v12 = [a1 dynamicInfoSig];
  if (!v12)
  {
    sub_100005A40(v9, v11);
    goto LABEL_12;
  }
  id v13 = v12;
  uint64_t v14 = sub_100221BF0();
  unint64_t v16 = v15;

  sub_1000059E8(v9, v11);
  sub_1000059E8(v14, v16);
  Class isa = sub_100221BD0().super.isa;
  Class v18 = sub_100221BD0().super.isa;
  id v19 = [self dynamicInfoWithData:isa sig:v18];
  sub_100005A40(v14, v16);
  sub_100005A40(v9, v11);

  if (!v19)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_100222090();
    sub_100003CC8(v28, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100222070();
    os_log_type_t v29 = sub_1002224E0();
    if (os_log_type_enabled(v25, v29))
    {
      os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v30 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v4, v6, &v32);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v29, "DBAdapter peer %{public}s has unparseable dynamic info/sig", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100005A40(v14, v16);
      sub_100005A40(v9, v11);
      return 0;
    }
    sub_100005A40(v9, v11);
    sub_100005A40(v14, v16);
    goto LABEL_21;
  }
  sub_100005A40(v14, v16);
  sub_100005A40(v9, v11);
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1001A1878(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v6 = sub_100222260();
  id v7 = [v5 initWithEntityName:v6];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100229540;
  *(void *)(v8 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v8 + 64) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v8 + 32) = a1;
  id v9 = a1;
  unint64_t v10 = (void *)sub_1002224C0();
  [v7 setPredicate:v10];

  sub_1000046DC(&qword_10029EC28);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100229540;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 32) = 0x49656E696863616DLL;
  *(void *)(v11 + 40) = 0xE900000000000044;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v7 setPropertiesToFetch:isa];

  [v7 setFetchBatchSize:25];
  Class v18 = &_swiftEmptySetSingleton;
  unint64_t v16 = &v18;
  uint64_t v17 = a2;
  sub_100114ACC(v7, (void (*)(void *, unsigned char *))sub_1001B8928, 0, (void (*)(unint64_t))sub_1001A5750, (uint64_t)v15, (void (*)(void))type metadata accessor for MachineMO, (void (*)(void))type metadata accessor for MachineMO);

  id v13 = v18;
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v13;
}

unint64_t sub_1001A1B0C(void *a1, uint64_t a2, uint64_t a3, int64_t a4)
{
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = sub_100222260();
  id v10 = [v8 initWithEntityName:v9];

  sub_1000047D8(0, (unint64_t *)&qword_10029EB70);
  sub_1000046DC(&qword_100299578);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100229380;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_10000D794();
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  *(void *)(v11 + 96) = type metadata accessor for ContainerMO();
  *(void *)(v11 + 104) = sub_1001A56AC(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v11 + 72) = a1;
  swift_bridgeObjectRetain();
  id v12 = a1;
  id v13 = (void *)sub_1002224C0();
  [v10 setPredicate:v13];

  [v10 setReturnsObjectsAsFaults:1];
  sub_1000046DC(&qword_1002995D8);
  uint64_t v14 = (void *)swift_allocObject();
  *((_OWORD *)v14 + 1) = xmmword_1002311B0;
  id v15 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v16 = sub_100222260();
  id v17 = [v15 initWithKey:v16 ascending:0];

  v14[4] = v17;
  id v41 = v14;
  sub_1002223E0();
  sub_1000047D8(0, &qword_10029EC20);
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v10 setSortDescriptors:isa];

  type metadata accessor for MachineMO();
  unint64_t result = sub_1002225E0();
  if (v4)
  {
    if (qword_100298EB8 == -1)
    {
LABEL_3:
      uint64_t v20 = sub_100222090();
      sub_100003CC8(v20, (uint64_t)qword_10029E7D0);
      swift_bridgeObjectRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      uint64_t v21 = sub_100222070();
      os_log_type_t v22 = sub_100222500();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        id v41 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315394;
        swift_bridgeObjectRetain();
        sub_1001BEBDC(a3, a4, (uint64_t *)&v41);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v23 + 12) = 2082;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v24 = sub_1002222C0();
        sub_1001BEBDC(v24, v25, (uint64_t *)&v41);
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to fetch most recent machine object id for %s: %{public}s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_willThrow();
      return (unint64_t)v21;
    }
LABEL_32:
    swift_once();
    goto LABEL_3;
  }
  unint64_t v26 = result;
  unint64_t v27 = result >> 62;
  if (!(result >> 62))
  {
    a3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (a3 >= 1) {
      a4 = 1;
    }
    else {
      a4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (a3 >= (unint64_t)a4)
    {
LABEL_10:
      if ((v26 & 0xC000000000000001) != 0 && (unint64_t)a3 >= 2)
      {
        unint64_t result = a4;
        do
        {
          unint64_t v28 = result + 1;
          sub_100222870(result);
          unint64_t result = v28;
        }
        while (a3 != v28);
      }
      if (v27)
      {
        swift_bridgeObjectRetain();
        sub_100222980();
        uint64_t v29 = v30;
        a4 = v31;
        unint64_t v33 = v32;
        unint64_t result = swift_bridgeObjectRelease_n();
        a3 = v33 >> 1;
      }
      else
      {
        uint64_t v29 = (v26 & 0xFFFFFFFFFFFFFF8) + 32;
      }
      uint64_t v34 = a3 - a4;
      if (!__OFSUB__(a3, a4))
      {
        if (!v34)
        {
          swift_unknownObjectRelease();

          return (unint64_t)_swiftEmptyArrayStorage;
        }
        id v41 = _swiftEmptyArrayStorage;
        unint64_t result = sub_1002228D0();
        if ((v34 & 0x8000000000000000) == 0)
        {
          if (a4 <= a3) {
            uint64_t v35 = a3;
          }
          else {
            uint64_t v35 = a4;
          }
          uint64_t v36 = v35 - a4;
          uint64_t v37 = (void **)(v29 + 8 * a4);
          while (v36)
          {
            uint64_t v38 = *v37++;
            a4 = (int64_t)[v38 objectID];
            sub_1002228B0();
            a3 = (uint64_t)v41[2].isa;
            sub_1002228E0();
            sub_1002228F0();
            sub_1002228C0();
            --v36;
            if (!--v34)
            {
              uint64_t v21 = v41;
              swift_unknownObjectRelease();

              return (unint64_t)v21;
            }
          }
          __break(1u);
          goto LABEL_32;
        }
        goto LABEL_42;
      }
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  a3 = sub_100222970();
  unint64_t result = swift_bridgeObjectRelease();
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (a3 >= 1) {
      a4 = 1;
    }
    else {
      a4 = a3;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_100222970();
    unint64_t result = swift_bridgeObjectRelease();
    if (v39 >= a4)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_100222970();
      unint64_t result = swift_bridgeObjectRelease();
      if (v40 >= a3) {
        goto LABEL_10;
      }
      __break(1u);
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_1001A21AC(void *a1, uint64_t a2)
{
  uint64_t v2 = (void *)a2;
  uint64_t v3 = a1;
  uint64_t v4 = sub_1001A1878(a1, a2);
  uint64_t v57 = v2;
  id v5 = v4;
  int64_t v6 = 0;
  uint64_t v7 = v4[7];
  id v59 = (char *)(v4 + 7);
  uint64_t v8 = 1 << *((unsigned char *)v4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v60 = (unint64_t)(v8 + 63) >> 6;
  id v61 = v4;
  id v58 = v3;
  if ((v9 & v7) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v6++, 1))
  {
    __break(1u);
    swift_once();
    uint64_t v44 = sub_100222090();
    sub_100003CC8(v44, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v45 = sub_100222070();
    os_log_type_t v46 = sub_100222500();
    if (os_log_type_enabled(v45, v46))
    {
      char v47 = (uint8_t *)swift_slowAlloc();
      id v48 = (void *)swift_slowAlloc();
      *(_DWORD *)char v47 = 138543362;
      swift_errorRetain();
      uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v63 = v49;
      sub_100222690();
      *id v48 = v49;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "onqueueRemoveDuplicateMachineIDs error removing duplicate machineIDs: %{public}@", v47, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_50;
  }
  if (v6 >= v60) {
    goto LABEL_49;
  }
  unint64_t v14 = *(void *)&v59[8 * v6];
  if (v14)
  {
LABEL_17:
    unint64_t v10 = (v14 - 1) & v14;
    for (unint64_t i = __clz(__rbit64(v14)) + (v6 << 6); ; unint64_t i = v11 | (v6 << 6))
    {
      NSString v16 = (uint64_t *)(v5[6] + 16 * i);
      uint64_t v17 = *v16;
      unint64_t v18 = v16[1];
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1001A1B0C(v3, (uint64_t)v2, v17, v18);
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_100222970();
        swift_bridgeObjectRelease();
        if (!v43)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v5 = v61;
          if (!v10) {
            goto LABEL_7;
          }
          goto LABEL_6;
        }
      }
      else if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      id v20 = objc_allocWithZone((Class)NSBatchDeleteRequest);
      sub_1000047D8(0, &qword_10029EC00);
      Class isa = sub_1002223B0().super.isa;
      swift_bridgeObjectRelease();
      id v22 = [v20 initWithObjectIDs:isa];

      [v22 setResultType:1];
      *(void *)&long long v63 = 0;
      id v23 = [v2 executeRequest:v22 error:&v63];
      if (v23)
      {
        uint64_t v24 = v23;
        id v25 = (id)v63;
        swift_bridgeObjectRelease();
        self;
        unint64_t v26 = (void *)swift_dynamicCastObjCClass();
        if (!v26)
        {

          long long v63 = 0u;
          long long v64 = 0u;
LABEL_40:

          sub_10004015C((uint64_t)&v63, &qword_100299EA0);
          goto LABEL_42;
        }
        unint64_t v27 = v26;
        if ([v26 result])
        {
          sub_1002226B0();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v62, 0, sizeof(v62));
        }
        sub_1000D8B9C((uint64_t)v62, (uint64_t)&v63, &qword_100299EA0);
        if (!*((void *)&v64 + 1))
        {

          goto LABEL_40;
        }
        uint64_t v35 = sub_1000046DC(&qword_10029EC08);
        if (swift_dynamicCast())
        {
          uint64_t v36 = *(void *)&v62[0];
          id v56 = self;
          sub_1000046DC(&qword_10029EC10);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_100229540;
          *(void *)&long long v63 = sub_100222270();
          *((void *)&v63 + 1) = v38;
          sub_1002227F0();
          *(void *)(inited + 96) = v35;
          *(void *)(inited + 72) = v36;
          sub_1000095FC(inited);
          Class v39 = sub_1002221C0().super.isa;
          swift_bridgeObjectRelease();
          sub_1000046DC(&qword_1002995D8);
          uint64_t v40 = swift_allocObject();
          *(_OWORD *)(v40 + 16) = xmmword_1002311B0;
          *(void *)(v40 + 32) = v57;
          *(void *)&long long v63 = v40;
          sub_1002223E0();
          sub_1000047D8(0, &qword_10029EC18);
          id v41 = v57;
          Class v42 = sub_1002223B0().super.isa;
          swift_bridgeObjectRelease();
          [v56 mergeChangesFromRemoteContextSave:v39 intoContexts:v42];

          uint64_t v2 = v57;
        }
        else
        {
        }
      }
      else
      {
        id v28 = (id)v63;
        sub_100221B40();

        swift_willThrow();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_100222090();
        sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
        swift_errorRetain();
        swift_bridgeObjectRetain();
        swift_errorRetain();
        uint64_t v30 = sub_100222070();
        os_log_type_t v31 = sub_100222500();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = swift_slowAlloc();
          unint64_t v33 = (void *)swift_slowAlloc();
          *(void *)&long long v63 = swift_slowAlloc();
          *(_DWORD *)uint64_t v32 = 136315394;
          swift_bridgeObjectRetain();
          *(void *)(v32 + 4) = sub_1001BEBDC(v17, v18, (uint64_t *)&v63);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v32 + 12) = 2114;
          swift_errorRetain();
          uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v32 + 14) = v34;
          *unint64_t v33 = v34;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "onqueueRemoveDuplicateMachineIDs error removing duplicate machineIDs for %s: %{public}@", (uint8_t *)v32, 0x16u);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_bridgeObjectRelease_n();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v2 = v57;
      }
LABEL_42:
      id v5 = v61;
      uint64_t v3 = v58;
      if (!v10) {
        goto LABEL_7;
      }
LABEL_6:
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
    }
  }
  int64_t v15 = v6 + 1;
  if (v6 + 1 >= v60) {
    goto LABEL_49;
  }
  unint64_t v14 = *(void *)&v59[8 * v15];
  if (v14)
  {
LABEL_16:
    int64_t v6 = v15;
    goto LABEL_17;
  }
  int64_t v15 = v6 + 2;
  if (v6 + 2 >= v60)
  {
LABEL_49:
    swift_release();
LABEL_50:
    sub_100114818();
    return;
  }
  unint64_t v14 = *(void *)&v59[8 * v15];
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v6 + 3;
  if (v6 + 3 >= v60) {
    goto LABEL_49;
  }
  unint64_t v14 = *(void *)&v59[8 * v15];
  if (v14) {
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v6 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v6 >= v60) {
      goto LABEL_49;
    }
    unint64_t v14 = *(void *)&v59[8 * v6];
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
  __break(1u);
  swift_once();
  uint64_t v50 = sub_100222090();
  sub_100003CC8(v50, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v51 = sub_100222070();
  os_log_type_t v52 = sub_100222500();
  if (os_log_type_enabled(v51, v52))
  {
    id v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    *(_DWORD *)id v53 = 138543362;
    swift_errorRetain();
    uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v63 = v55;
    sub_100222690();
    void *v54 = v55;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "onqueueRemoveDuplicateMachineIDs error saving: %{public}@", v53, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
}

char **sub_1001A2C34(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  type metadata accessor for Container.DBAdapter();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  id v234 = a1;
  uint64_t v9 = a2;
  sub_10004BDEC(a3, a4);
  sub_100039FCC(0, 0xF000000000000000);
  id v10 = [objc_allocWithZone((Class)type metadata accessor for PolicyRedactionCrypter()) init];
  unint64_t v11 = (char **)[objc_allocWithZone((Class)TPModel) initWithDecrypter:v10 dbAdapter:v8];

  [v11 setSuppressInitialInfoLogging:1];
  id v12 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  id v13 = [(id)v9 custodianRecoveryKeys];
  if (v13)
  {
    unint64_t v14 = v13;
    type metadata accessor for CustodianRecoveryKeyMO();
    sub_1001A56AC(&qword_10029EB88, (void (*)(uint64_t))type metadata accessor for CustodianRecoveryKeyMO);
    sub_100222430();
  }
  v236 = 0;
  int64_t v15 = (unint64_t *)[v11 peerCountWithError:&v236];
  p_vtable = VoucherMO.vtable;
  unint64_t v230 = v12;
  if (v236)
  {
    uint64_t v17 = v236;
    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_100222090();
    sub_100003CC8(v18, (uint64_t)qword_10029E7D0);
    unint64_t v19 = v17;
    id v20 = sub_100222070();
    os_log_type_t v21 = sub_100222500();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      *(_DWORD *)id v22 = 138543362;
      uint64_t v24 = v19;
      id v25 = (unint64_t *)_swift_stdlib_bridgeErrorToNSError();
      v236 = v25;
      p_vtable = (void **)(VoucherMO + 24);
      sub_100222690();
      *id v23 = v25;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "loadModel error getting peerCount: %{public}@", v22, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v20 = v19;
    }
  }
  else
  {
    unint64_t v26 = v15;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100222090();
    sub_100003CC8(v27, (uint64_t)qword_10029E7D0);
    id v20 = sub_100222070();
    os_log_type_t v28 = sub_1002224E0();
    if (os_log_type_enabled(v20, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134217984;
      v236 = v26;
      sub_100222690();
      _os_log_impl((void *)&_mh_execute_header, v20, v28, "loadModel: loaded %lu peers", v29, 0xCu);
      swift_slowDealloc();
    }
  }

  v236 = 0;
  uint64_t v30 = (unint64_t *)[v11 voucherCountWithError:&v236];
  if (v236)
  {
    os_log_type_t v31 = v236;
    swift_willThrow();
    if (p_vtable[471] != (void *)-1) {
      swift_once();
    }
    uint64_t v32 = sub_100222090();
    sub_100003CC8(v32, (uint64_t)qword_10029E7D0);
    unint64_t v33 = v31;
    uint64_t v34 = sub_100222070();
    os_log_type_t v35 = sub_100222500();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 138543362;
      uint64_t v38 = v33;
      Class v39 = (unint64_t *)_swift_stdlib_bridgeErrorToNSError();
      v236 = v39;
      sub_100222690();
      *uint64_t v37 = v39;

      _os_log_impl((void *)&_mh_execute_header, v34, v35, "loadModel error getting voucherCount: %{public}@", v36, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v34 = v33;
    }
  }
  else
  {
    uint64_t v40 = v30;
    if (p_vtable[471] != (void *)-1) {
      swift_once();
    }
    uint64_t v41 = sub_100222090();
    sub_100003CC8(v41, (uint64_t)qword_10029E7D0);
    uint64_t v34 = sub_100222070();
    os_log_type_t v42 = sub_1002224E0();
    if (os_log_type_enabled(v34, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 134217984;
      v236 = v40;
      sub_100222690();
      _os_log_impl((void *)&_mh_execute_header, v34, v42, "loadModel: loaded %lu vouchers", v43, 0xCu);
      swift_slowDealloc();
    }
  }

  if (p_vtable[471] != (void *)-1) {
    goto LABEL_222;
  }
  while (1)
  {
    uint64_t v44 = sub_100222090();
    sub_100003CC8(v44, (uint64_t)qword_10029E7D0);
    id v45 = v11;
    os_log_type_t v46 = sub_100222070();
    os_log_type_t v47 = sub_1002224E0();
    uint64_t v231 = v45;
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v48 = 134217984;
      id v49 = [v45 allCustodianRecoveryKeys];
      sub_1000047D8(0, &qword_10029EB80);
      unint64_t v50 = sub_1002223C0();

      if (v50 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = (unint64_t *)sub_100222970();

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v51 = *(unint64_t **)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v236 = v51;
      sub_100222690();

      _os_log_impl((void *)&_mh_execute_header, v46, v47, "loadModel: loaded %ld CRKs", v48, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      os_log_type_t v46 = v45;
    }

    id v52 = [(id)v9 recoveryKeySigningSPKI];
    if (v52)
    {
      id v53 = v52;
      uint64_t v54 = sub_100221BF0();
      unint64_t v56 = v55;

      id v57 = [(id)v9 recoveryKeyEncryptionSPKI];
      if (v57)
      {
        id v58 = v57;
        uint64_t v59 = sub_100221BF0();
        unint64_t v61 = v60;

        id v62 = objc_allocWithZone((Class)TPRecoveryKeyPair);
        sub_1000059E8(v54, v56);
        sub_1000059E8(v59, v61);
        Class isa = sub_100221BD0().super.isa;
        Class v64 = sub_100221BD0().super.isa;
        id v65 = [v62 initWithSigningKeyData:isa encryptionKeyData:v64];
        sub_100005A40(v59, v61);
        sub_100005A40(v54, v56);

        [v45 setRecoveryKeys:v65];
        sub_100005A40(v59, v61);
        sub_100005A40(v54, v56);
        goto LABEL_54;
      }
      sub_100005A40(v54, v56);
    }
    id v66 = sub_100119A14();
    if (v66)
    {
      uint64_t v67 = v66;
      id v68 = [v66 recoverySigningPublicKey];
      if (v68)
      {
        uint64_t v69 = v68;
        uint64_t v70 = sub_100221BF0();
        unint64_t v72 = v71;

        id v73 = [v67 recoveryEncryptionPublicKey];
        if (v73)
        {
          uint64_t v74 = v73;
          uint64_t v75 = sub_100221BF0();
          unint64_t v77 = v76;

          switch(v72 >> 62)
          {
            case 1uLL:
              uint64_t v78 = (int)v70;
              uint64_t v79 = v70 >> 32;
              goto LABEL_41;
            case 2uLL:
              uint64_t v78 = *(void *)(v70 + 16);
              uint64_t v79 = *(void *)(v70 + 24);
LABEL_41:
              if (v78 != v79) {
                goto LABEL_42;
              }
              goto LABEL_51;
            case 3uLL:
              goto LABEL_51;
            default:
              if ((v72 & 0xFF000000000000) == 0) {
                goto LABEL_51;
              }
LABEL_42:
              switch(v77 >> 62)
              {
                case 1uLL:
                  uint64_t v80 = (int)v75;
                  uint64_t v81 = v75 >> 32;
                  goto LABEL_47;
                case 2uLL:
                  uint64_t v80 = *(void *)(v75 + 16);
                  uint64_t v81 = *(void *)(v75 + 24);
LABEL_47:
                  if (v80 != v81) {
                    goto LABEL_48;
                  }
                  break;
                case 3uLL:
                  break;
                default:
                  if ((v77 & 0xFF000000000000) == 0) {
                    break;
                  }
LABEL_48:
                  id v82 = sub_100222070();
                  os_log_type_t v83 = sub_1002224E0();
                  if (os_log_type_enabled(v82, v83))
                  {
                    uint64_t v84 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v84 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v82, v83, "loadModel: recovery key not set in model, but is set on ego peer", v84, 2u);
                    swift_slowDealloc();
                  }

                  id v85 = objc_allocWithZone((Class)TPRecoveryKeyPair);
                  sub_1000059E8(v70, v72);
                  sub_1000059E8(v75, v77);
                  Class v86 = sub_100221BD0().super.isa;
                  Class v87 = sub_100221BD0().super.isa;
                  id v88 = [v85 initWithSigningKeyData:v86 encryptionKeyData:v87];
                  sub_100005A40(v75, v77);
                  sub_100005A40(v70, v72);

                  [v231 setRecoveryKeys:v88];
                  break;
              }
LABEL_51:
              sub_100005A40(v75, v77);
              break;
          }
        }
        sub_100005A40(v70, v72);
      }
    }
LABEL_54:
    sub_1001206BC((void *)v9, (uint64_t)v234);
    id v90 = [(id)v9 machines];
    if (!v90
      || (uint64_t v91 = v90,
          v236 = 0,
          type metadata accessor for MachineMO(),
          sub_1001A56AC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO),
          sub_100222430(),
          v91,
          (uint64_t v92 = (uint64_t)v236) == 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v92 = (uint64_t)&_swiftEmptySetSingleton;
    }
    id v93 = &_swiftEmptySetSingleton;
    unint64_t v94 = v92 & 0xC000000000000001;
    unint64_t v233 = v92 & 0xC000000000000001;
    id v234 = (id)v92;
    if ((v92 & 0xC000000000000001) != 0)
    {
      v236 = (unint64_t *)&_swiftEmptySetSingleton;
      swift_bridgeObjectRetain();
      unint64_t v11 = (char **)sub_100222700();
      if (sub_100222790())
      {
        type metadata accessor for MachineMO();
        do
        {
          swift_dynamicCast();
          uint64_t v9 = (uint64_t)v235;
          if ([v235 status] == (id)1)
          {
            uint64_t v95 = v236;
            unint64_t v96 = v236[2];
            if (v236[3] <= v96)
            {
              sub_10018EBB4(v96 + 1, (uint64_t *)&unk_10029EB90);
              uint64_t v95 = v236;
            }
            Swift::Int v97 = sub_100222640(v95[5]);
            char v98 = (char *)(v95 + 7);
            uint64_t v99 = -1 << *((unsigned char *)v95 + 32);
            unint64_t v100 = v97 & ~v99;
            unint64_t v101 = v100 >> 6;
            if (((-1 << v100) & ~v95[(v100 >> 6) + 7]) != 0)
            {
              unint64_t v102 = __clz(__rbit64((-1 << v100) & ~v95[(v100 >> 6) + 7])) | v100 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v103 = 0;
              unint64_t v104 = (unint64_t)(63 - v99) >> 6;
              do
              {
                if (++v101 == v104 && (v103 & 1) != 0)
                {
                  __break(1u);
LABEL_217:
                  __break(1u);
LABEL_218:
                  __break(1u);
LABEL_219:
                  __break(1u);
LABEL_220:
                  __break(1u);
                  goto LABEL_221;
                }
                BOOL v105 = v101 == v104;
                if (v101 == v104) {
                  unint64_t v101 = 0;
                }
                v103 |= v105;
                uint64_t v106 = *(void *)&v98[8 * v101];
              }
              while (v106 == -1);
              unint64_t v102 = __clz(__rbit64(~v106)) + (v101 << 6);
            }
            *(void *)&v98[(v102 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v102;
            *(void *)(v95[6] + 8 * v102) = v235;
            ++v95[2];
          }
          else
          {
          }
        }
        while (sub_100222790());
        id v108 = v236;
        id v93 = &_swiftEmptySetSingleton;
        unint64_t v94 = v233;
        uint64_t v92 = (uint64_t)v234;
      }
      else
      {
        id v108 = &_swiftEmptySetSingleton;
      }
      swift_release();
    }
    else
    {
      uint64_t v107 = swift_bridgeObjectRetain();
      id v108 = (id)sub_10018EED4(v107, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10018FA28);
    }
    sub_100112F80((uint64_t)v108);
    uint64_t v110 = v109;
    swift_release();
    uint64_t v232 = sub_1001A0B30(v110);
    swift_bridgeObjectRelease();
    if (v94)
    {
      v236 = (unint64_t *)&_swiftEmptySetSingleton;
      swift_bridgeObjectRetain();
      unint64_t v11 = (char **)sub_100222700();
      if (sub_100222790())
      {
        type metadata accessor for MachineMO();
        do
        {
          swift_dynamicCast();
          uint64_t v9 = (uint64_t)v235;
          if ([v235 status] == (id)2)
          {
            uint64_t v111 = v236;
            unint64_t v112 = v236[2];
            if (v236[3] <= v112)
            {
              sub_10018EBB4(v112 + 1, (uint64_t *)&unk_10029EB90);
              uint64_t v111 = v236;
            }
            Swift::Int v113 = sub_100222640(v111[5]);
            BOOL v114 = (char *)(v111 + 7);
            uint64_t v115 = -1 << *((unsigned char *)v111 + 32);
            unint64_t v116 = v113 & ~v115;
            unint64_t v117 = v116 >> 6;
            if (((-1 << v116) & ~v111[(v116 >> 6) + 7]) != 0)
            {
              unint64_t v118 = __clz(__rbit64((-1 << v116) & ~v111[(v116 >> 6) + 7])) | v116 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v119 = 0;
              unint64_t v120 = (unint64_t)(63 - v115) >> 6;
              do
              {
                if (++v117 == v120 && (v119 & 1) != 0) {
                  goto LABEL_217;
                }
                BOOL v121 = v117 == v120;
                if (v117 == v120) {
                  unint64_t v117 = 0;
                }
                v119 |= v121;
                uint64_t v122 = *(void *)&v114[8 * v117];
              }
              while (v122 == -1);
              unint64_t v118 = __clz(__rbit64(~v122)) + (v117 << 6);
            }
            *(void *)&v114[(v118 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v118;
            *(void *)(v111[6] + 8 * v118) = v235;
            ++v111[2];
          }
          else
          {
          }
        }
        while (sub_100222790());
        id v124 = v236;
        id v93 = &_swiftEmptySetSingleton;
        unint64_t v94 = v233;
        uint64_t v92 = (uint64_t)v234;
      }
      else
      {
        id v124 = &_swiftEmptySetSingleton;
      }
      swift_release();
    }
    else
    {
      uint64_t v123 = swift_bridgeObjectRetain();
      id v124 = (id)sub_10018EED4(v123, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10018F880);
    }
    sub_100112F80((uint64_t)v124);
    uint64_t v126 = v125;
    swift_release();
    sub_1001A0B30(v126);
    swift_bridgeObjectRelease();
    if (v94)
    {
      v236 = (unint64_t *)&_swiftEmptySetSingleton;
      swift_bridgeObjectRetain();
      unint64_t v11 = (char **)sub_100222700();
      if (sub_100222790())
      {
        type metadata accessor for MachineMO();
        do
        {
          swift_dynamicCast();
          uint64_t v9 = (uint64_t)v235;
          if ([v235 status] == (id)5)
          {
            uint64_t v127 = v236;
            unint64_t v128 = v236[2];
            if (v236[3] <= v128)
            {
              sub_10018EBB4(v128 + 1, (uint64_t *)&unk_10029EB90);
              uint64_t v127 = v236;
            }
            Swift::Int v129 = sub_100222640(v127[5]);
            unint64_t v130 = (char *)(v127 + 7);
            uint64_t v131 = -1 << *((unsigned char *)v127 + 32);
            unint64_t v132 = v129 & ~v131;
            unint64_t v133 = v132 >> 6;
            if (((-1 << v132) & ~v127[(v132 >> 6) + 7]) != 0)
            {
              unint64_t v134 = __clz(__rbit64((-1 << v132) & ~v127[(v132 >> 6) + 7])) | v132 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v135 = 0;
              unint64_t v136 = (unint64_t)(63 - v131) >> 6;
              do
              {
                if (++v133 == v136 && (v135 & 1) != 0) {
                  goto LABEL_218;
                }
                BOOL v137 = v133 == v136;
                if (v133 == v136) {
                  unint64_t v133 = 0;
                }
                v135 |= v137;
                uint64_t v138 = *(void *)&v130[8 * v133];
              }
              while (v138 == -1);
              unint64_t v134 = __clz(__rbit64(~v138)) + (v133 << 6);
            }
            *(void *)&v130[(v134 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v134;
            *(void *)(v127[6] + 8 * v134) = v235;
            ++v127[2];
          }
          else
          {
          }
        }
        while (sub_100222790());
        id v140 = v236;
        id v93 = &_swiftEmptySetSingleton;
        unint64_t v94 = v233;
        uint64_t v92 = (uint64_t)v234;
      }
      else
      {
        id v140 = &_swiftEmptySetSingleton;
      }
      swift_release();
    }
    else
    {
      uint64_t v139 = swift_bridgeObjectRetain();
      id v140 = (id)sub_10018EED4(v139, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10018F6D8);
    }
    sub_100112F80((uint64_t)v140);
    uint64_t v142 = v141;
    swift_release();
    sub_1001A0B30(v142);
    swift_bridgeObjectRelease();
    if (v94)
    {
      v236 = (unint64_t *)&_swiftEmptySetSingleton;
      swift_bridgeObjectRetain();
      unint64_t v11 = (char **)sub_100222700();
      if (sub_100222790())
      {
        type metadata accessor for MachineMO();
        uint64_t v9 = 1;
        do
        {
          swift_dynamicCast();
          if ([v235 status] == (id)3)
          {
            Swift::Int v143 = v236;
            unint64_t v144 = v236[2];
            if (v236[3] <= v144)
            {
              sub_10018EBB4(v144 + 1, (uint64_t *)&unk_10029EB90);
              Swift::Int v143 = v236;
            }
            Swift::Int v145 = sub_100222640(v143[5]);
            id v146 = (char *)(v143 + 7);
            uint64_t v147 = -1 << *((unsigned char *)v143 + 32);
            unint64_t v148 = v145 & ~v147;
            unint64_t v149 = v148 >> 6;
            if (((-1 << v148) & ~v143[(v148 >> 6) + 7]) != 0)
            {
              unint64_t v150 = __clz(__rbit64((-1 << v148) & ~v143[(v148 >> 6) + 7])) | v148 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v151 = 0;
              unint64_t v152 = (unint64_t)(63 - v147) >> 6;
              do
              {
                if (++v149 == v152 && (v151 & 1) != 0) {
                  goto LABEL_219;
                }
                BOOL v153 = v149 == v152;
                if (v149 == v152) {
                  unint64_t v149 = 0;
                }
                v151 |= v153;
                uint64_t v154 = *(void *)&v146[8 * v149];
              }
              while (v154 == -1);
              unint64_t v150 = __clz(__rbit64(~v154)) + (v149 << 6);
            }
            *(void *)&v146[(v150 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v150;
            *(void *)(v143[6] + 8 * v150) = v235;
            ++v143[2];
          }
          else
          {
          }
        }
        while (sub_100222790());
        id v156 = v236;
        id v93 = &_swiftEmptySetSingleton;
        unint64_t v94 = v233;
        uint64_t v92 = (uint64_t)v234;
      }
      else
      {
        id v156 = &_swiftEmptySetSingleton;
      }
      swift_release();
    }
    else
    {
      uint64_t v155 = swift_bridgeObjectRetain();
      id v156 = (id)sub_10018EED4(v155, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10018F530);
    }
    sub_100112F80((uint64_t)v156);
    uint64_t v158 = v157;
    swift_release();
    sub_1001A0B30(v158);
    swift_bridgeObjectRelease();
    if (v94)
    {
      v236 = (unint64_t *)&_swiftEmptySetSingleton;
      swift_bridgeObjectRetain();
      sub_100222700();
      if (sub_100222790())
      {
        type metadata accessor for MachineMO();
        uint64_t v9 = (uint64_t)&type metadata for Swift.AnyObject + 8;
        unint64_t v11 = &selRef_setAllSelves_;
        do
        {
          swift_dynamicCast();
          if ([v235 status] == (id)4)
          {
            uint64_t v159 = v236;
            unint64_t v160 = v236[2];
            if (v236[3] <= v160)
            {
              sub_10018EBB4(v160 + 1, (uint64_t *)&unk_10029EB90);
              uint64_t v159 = v236;
            }
            Swift::Int v161 = sub_100222640(v159[5]);
            v162 = (char *)(v159 + 7);
            uint64_t v163 = -1 << *((unsigned char *)v159 + 32);
            unint64_t v164 = v161 & ~v163;
            unint64_t v165 = v164 >> 6;
            if (((-1 << v164) & ~v159[(v164 >> 6) + 7]) != 0)
            {
              unint64_t v166 = __clz(__rbit64((-1 << v164) & ~v159[(v164 >> 6) + 7])) | v164 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v167 = 0;
              unint64_t v168 = (unint64_t)(63 - v163) >> 6;
              do
              {
                if (++v165 == v168 && (v167 & 1) != 0) {
                  goto LABEL_220;
                }
                BOOL v169 = v165 == v168;
                if (v165 == v168) {
                  unint64_t v165 = 0;
                }
                v167 |= v169;
                uint64_t v170 = *(void *)&v162[8 * v165];
              }
              while (v170 == -1);
              unint64_t v166 = __clz(__rbit64(~v170)) + (v165 << 6);
            }
            *(void *)&v162[(v166 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v166;
            *(void *)(v159[6] + 8 * v166) = v235;
            ++v159[2];
          }
          else
          {
          }
        }
        while (sub_100222790());
        id v172 = v236;
        id v93 = &_swiftEmptySetSingleton;
        unint64_t v94 = v233;
        uint64_t v92 = (uint64_t)v234;
      }
      else
      {
        id v172 = &_swiftEmptySetSingleton;
      }
      swift_release();
    }
    else
    {
      uint64_t v171 = swift_bridgeObjectRetain();
      id v172 = (id)sub_10018EED4(v171, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10018F388);
    }
    sub_100112F80((uint64_t)v172);
    uint64_t v174 = v173;
    swift_release();
    id v234 = (id)sub_1001A0B30(v174);
    swift_bridgeObjectRelease();
    if (!v94) {
      break;
    }
    v236 = (unint64_t *)&_swiftEmptySetSingleton;
    sub_100222700();
    if (!sub_100222790())
    {
LABEL_192:
      swift_release();
      goto LABEL_194;
    }
    type metadata accessor for MachineMO();
    uint64_t v9 = (uint64_t)&type metadata for Swift.AnyObject + 8;
    unint64_t v11 = &selRef_setAllSelves_;
    while (1)
    {
      swift_dynamicCast();
      if (![v235 status]) {
        break;
      }

LABEL_176:
      if (!sub_100222790())
      {
        id v93 = v236;
        goto LABEL_192;
      }
    }
    unint64_t v175 = v236;
    unint64_t v176 = v236[2];
    if (v236[3] <= v176)
    {
      sub_10018EBB4(v176 + 1, (uint64_t *)&unk_10029EB90);
      unint64_t v175 = v236;
    }
    Swift::Int v177 = sub_100222640(v175[5]);
    id v178 = (char *)(v175 + 7);
    uint64_t v179 = -1 << *((unsigned char *)v175 + 32);
    unint64_t v180 = v177 & ~v179;
    unint64_t v181 = v180 >> 6;
    if (((-1 << v180) & ~v175[(v180 >> 6) + 7]) != 0)
    {
      unint64_t v182 = __clz(__rbit64((-1 << v180) & ~v175[(v180 >> 6) + 7])) | v180 & 0x7FFFFFFFFFFFFFC0;
LABEL_190:
      *(void *)&v178[(v182 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v182;
      *(void *)(v175[6] + 8 * v182) = v235;
      ++v175[2];
      goto LABEL_176;
    }
    char v183 = 0;
    unint64_t v184 = (unint64_t)(63 - v179) >> 6;
    while (++v181 != v184 || (v183 & 1) == 0)
    {
      BOOL v185 = v181 == v184;
      if (v181 == v184) {
        unint64_t v181 = 0;
      }
      v183 |= v185;
      uint64_t v186 = *(void *)&v178[8 * v181];
      if (v186 != -1)
      {
        unint64_t v182 = __clz(__rbit64(~v186)) + (v181 << 6);
        goto LABEL_190;
      }
    }
LABEL_221:
    __break(1u);
LABEL_222:
    swift_once();
  }
  id v93 = (id)sub_10018EED4(v92, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10018F1E4);
LABEL_194:
  sub_100112F80((uint64_t)v93);
  uint64_t v188 = v187;
  swift_release();
  sub_1001A0B30(v188);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  id v189 = sub_100222070();
  os_log_type_t v190 = sub_1002224E0();
  if (os_log_type_enabled(v189, v190))
  {
    NSString v191 = (uint8_t *)swift_slowAlloc();
    v236 = (unint64_t *)swift_slowAlloc();
    *(_DWORD *)NSString v191 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v192 = sub_100222450();
    unint64_t v194 = v193;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v192, v194, (uint64_t *)&v236);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v189, v190, "loadModel: allowedMachineIDs: %{public}s", v191, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t v195 = sub_100222070();
  os_log_type_t v196 = sub_1002224E0();
  if (os_log_type_enabled(v195, v196))
  {
    id v197 = (uint8_t *)swift_slowAlloc();
    v236 = (unint64_t *)swift_slowAlloc();
    *(_DWORD *)id v197 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v198 = sub_100222450();
    unint64_t v200 = v199;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v198, v200, (uint64_t *)&v236);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v195, v196, "loadModel: disallowedMachineIDs: %{public}s", v197, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t v201 = sub_100222070();
  os_log_type_t v202 = sub_1002224E0();
  if (os_log_type_enabled(v201, v202))
  {
    id v203 = (uint8_t *)swift_slowAlloc();
    v236 = (unint64_t *)swift_slowAlloc();
    *(_DWORD *)id v203 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v204 = sub_100222450();
    unint64_t v206 = v205;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v204, v206, (uint64_t *)&v236);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v201, v202, "loadModel: ghostedMachineIDs: %{public}s", v203, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  id v207 = sub_100222070();
  os_log_type_t v208 = sub_1002224E0();
  if (os_log_type_enabled(v207, v208))
  {
    v209 = (uint8_t *)swift_slowAlloc();
    v236 = (unint64_t *)swift_slowAlloc();
    *(_DWORD *)v209 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v210 = sub_100222450();
    unint64_t v212 = v211;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v210, v212, (uint64_t *)&v236);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v207, v208, "loadModel: evictedMachineIDs: %{public}s", v209, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  NSString v213 = sub_100222070();
  os_log_type_t v214 = sub_1002224E0();
  if (os_log_type_enabled(v213, v214))
  {
    id v215 = (uint8_t *)swift_slowAlloc();
    v236 = (unint64_t *)swift_slowAlloc();
    *(_DWORD *)id v215 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v216 = sub_100222450();
    unint64_t v218 = v217;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v216, v218, (uint64_t *)&v236);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v213, v214, "loadModel: unknownReasonMachineIDs: %{public}s", v215, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t v219 = sub_100222070();
  os_log_type_t v220 = sub_1002224E0();
  if (os_log_type_enabled(v219, v220))
  {
    id v221 = (uint8_t *)swift_slowAlloc();
    v236 = (unint64_t *)swift_slowAlloc();
    *(_DWORD *)id v221 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v222 = sub_100222450();
    unint64_t v224 = v223;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v222, v224, (uint64_t *)&v236);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v219, v220, "loadModel: unknownMachineIDs: %{public}s", v221, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v225 = *(void *)(v232 + 16);
  swift_bridgeObjectRelease();
  if (!v225)
  {
    uint64_t v226 = sub_100222070();
    os_log_type_t v227 = sub_1002224E0();
    if (os_log_type_enabled(v226, v227))
    {
      uint64_t v228 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v228 = 0;
      _os_log_impl((void *)&_mh_execute_header, v226, v227, "loadModel: no allowedMachineIDs?", v228, 2u);
      swift_slowDealloc();
    }
  }
  [v231 setSuppressInitialInfoLogging:0];
  return v231;
}

void sub_1001A4ECC(void *a1, void *a2)
{
  id v4 = [a1 egoPeerID];
  if (!v4) {
    goto LABEL_13;
  }
  id v5 = v4;
  id v6 = [a1 egoPeerStableInfo];
  if (!v6)
  {

LABEL_13:
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_100222090();
    sub_100003CC8(v32, (uint64_t)qword_10029E7D0);
    oslog = sub_100222070();
    os_log_type_t v33 = sub_100222500();
    if (os_log_type_enabled(oslog, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v33, "ensureEgoConsistency failed to find ego peer information", v34, 2u);
      swift_slowDealloc();
    }
LABEL_17:

    return;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_100221BF0();
  unint64_t v10 = v9;

  id v11 = [a1 egoPeerStableInfoSig];
  if (!v11)
  {

    sub_100005A40(v8, v10);
    goto LABEL_13;
  }
  id v12 = v11;
  uint64_t v13 = sub_100221BF0();
  unint64_t v15 = v14;

  id v16 = objc_allocWithZone((Class)TPPeerStableInfo);
  sub_1000059E8(v8, v10);
  sub_1000059E8(v13, v15);
  Class isa = sub_100221BD0().super.isa;
  Class v18 = sub_100221BD0().super.isa;
  id v19 = [v16 initWithData:isa sig:v18];
  sub_100005A40(v13, v15);
  sub_100005A40(v8, v10);

  if (!v19)
  {

    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_100222090();
    sub_100003CC8(v35, (uint64_t)qword_10029E7D0);
    oslog = sub_100222070();
    os_log_type_t v36 = sub_100222500();
    if (os_log_type_enabled(oslog, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v36, "ensureEgoConsistency failed to create TPPeerStableInfo from container", v37, 2u);
      swift_slowDealloc();

      sub_100005A40(v13, v15);
      sub_100005A40(v8, v10);
      return;
    }
    sub_100005A40(v8, v10);
    sub_100005A40(v13, v15);
    goto LABEL_17;
  }
  id v57 = 0;
  id v20 = [a2 getStableInfoForPeerWithID:v5 error:&v57];

  if (v57)
  {
    id v21 = v57;

    swift_willThrow();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_100222090();
    sub_100003CC8(v22, (uint64_t)qword_10029E7D0);
    id v23 = v21;
    uint64_t v24 = sub_100222070();
    os_log_type_t v25 = sub_100222500();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v55 = v19;
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v26 = 138543362;
      id v28 = v23;
      unint64_t v54 = v15;
      uint64_t v29 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v57 = v29;
      sub_100222690();
      *uint64_t v27 = v29;

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "ensureEgoConsistency failed to create TPPeerStableInfo from model: %{public}@", v26, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v30 = v13;
      unint64_t v31 = v54;
LABEL_10:
      sub_100005A40(v30, v31);
      sub_100005A40(v8, v10);
      return;
    }
    sub_100005A40(v8, v10);
    sub_100005A40(v13, v15);

LABEL_30:
    return;
  }
  if (!v20)
  {
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_100222090();
    sub_100003CC8(v50, (uint64_t)qword_10029E7D0);
    uint64_t v51 = sub_100222070();
    os_log_type_t v52 = sub_100222500();
    if (os_log_type_enabled(v51, v52))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "ensureEgoConsistency failed to create TPPeerStableInfo from model", v53, 2u);
      swift_slowDealloc();

      uint64_t v30 = v13;
      unint64_t v31 = v15;
      goto LABEL_10;
    }
    sub_100005A40(v8, v10);
    sub_100005A40(v13, v15);

    goto LABEL_30;
  }
  id v38 = v20;
  id v39 = [v38 clock];
  if ([v19 clock] >= v39)
  {

    sub_100005A40(v8, v10);
    sub_100005A40(v13, v15);
  }
  else
  {
    id v40 = [v38 data];
    uint64_t v41 = sub_100221BF0();
    unint64_t v43 = v42;

    Class v44 = sub_100221BD0().super.isa;
    sub_100005A40(v41, v43);
    [a1 setEgoPeerStableInfo:v44];

    id v45 = [v38 sig];
    uint64_t v46 = sub_100221BF0();
    unint64_t v48 = v47;

    Class v49 = sub_100221BD0().super.isa;
    sub_100005A40(v46, v48);
    [a1 setEgoPeerStableInfoSig:v49];

    sub_100005A40(v8, v10);
    sub_100005A40(v13, v15);
  }
}

uint64_t sub_1001A56AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1001A56F8(void *a1, uint64_t a2)
{
  return sub_100120E64(a1, a2, *(void **)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_1001A5718()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001A5750(unint64_t a1)
{
  return sub_10011C3C8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_1001A576C(void *a1)
{
  unint64_t v2 = sub_100009B94((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v45 = v2;
  id v3 = [a1 bottleID];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_100222270();
    uint64_t v7 = v6;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10018B060(v5, v7, 0x4449656C74746F62, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
    unint64_t v45 = v2;
  }
  else
  {
    sub_10000A7F0(0x4449656C74746F62, 0xE800000000000000);
  }
  swift_bridgeObjectRelease();
  id v9 = [a1 peerID];
  if (v9)
  {
    unint64_t v10 = v9;
    uint64_t v11 = sub_100222270();
    uint64_t v13 = v12;

    char v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_10018B060(v11, v13, 0x444972656570, 0xE600000000000000, v14);
  }
  else
  {
    sub_10000A7F0(0x444972656570, 0xE600000000000000);
  }
  swift_bridgeObjectRelease();
  id v15 = [a1 escrowedSigningSPKI];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = sub_100221BF0();
    unint64_t v19 = v18;

    uint64_t v20 = sub_100221BE0(0);
    uint64_t v22 = v21;
    sub_100005A40(v17, v19);
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_10018B060(v20, v22, 0x53676E696E676973, 0xEB00000000494B50, v23);
  }
  else
  {
    sub_10000A7F0(0x53676E696E676973, 0xEB00000000494B50);
  }
  swift_bridgeObjectRelease();
  id v24 = [a1 signatureUsingPeerKey];
  if (v24)
  {
    os_log_type_t v25 = v24;
    uint64_t v26 = sub_100221BF0();
    unint64_t v28 = v27;

    uint64_t v29 = sub_100221BE0(0);
    uint64_t v31 = v30;
    sub_100005A40(v26, v28);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    sub_10018B060(v29, v31, 0xD000000000000015, 0x8000000100245330, v32);
  }
  else
  {
    sub_10000A7F0(0xD000000000000015, 0x8000000100245330);
  }
  swift_bridgeObjectRelease();
  id v33 = [a1 signatureUsingEscrowKey];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_100221BF0();
    unint64_t v37 = v36;

    uint64_t v38 = sub_100221BE0(0);
    uint64_t v40 = v39;
    sub_100005A40(v35, v37);
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_10018B060(v38, v40, 0xD000000000000012, 0x8000000100245350, v41);
    uint64_t v42 = v45;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A7F0(0xD000000000000012, 0x8000000100245350);
    swift_bridgeObjectRelease();
    uint64_t v42 = v45;
  }
  unint64_t v43 = sub_1001B8E10(v42);
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1001A5B68(uint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_1000059E8(a1, a2);
  id v6 = sub_100197258();
  uint64_t result = sub_100005A40(a1, a2);
  if (!v2)
  {
    sub_1000046DC(&qword_1002991B0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100229910;
    *(void *)(v8 + 32) = sub_1000047D8(0, (unint64_t *)&unk_10029ECC0);
    *(void *)(v8 + 40) = sub_1000047D8(0, &qword_1002991C0);
    *(void *)(v8 + 48) = sub_1000047D8(0, &qword_10029ECA8);
    sub_100222270();
    sub_100222610();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v11)
    {
      sub_1000046DC((uint64_t *)&unk_10029ECD0);
      if (swift_dynamicCast()) {
        return v9;
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_10004015C((uint64_t)v10, &qword_100299EA0);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A5CFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1000046DC(&qword_10029F0A8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

void sub_1001A5E08(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for VoucherMO();
    sub_1001A56AC(&qword_10029EF88, (void (*)(uint64_t))type metadata accessor for VoucherMO);
    sub_100222490();
    uint64_t v2 = v36;
    uint64_t v33 = v37;
    uint64_t v3 = v38;
    uint64_t v4 = v39;
    unint64_t v5 = v40;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v33 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v32 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v34 = v2;
  while (1)
  {
    uint64_t v9 = v4;
    if ((v2 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_100222790()) {
      goto LABEL_43;
    }
    type metadata accessor for VoucherMO();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v41;
    swift_unknownObjectRelease();
    if (!v41) {
      goto LABEL_43;
    }
LABEL_33:
    id v16 = [v12 voucherInfo];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = sub_100221BF0();
      unint64_t v20 = v19;
    }
    else
    {
      uint64_t v18 = 0;
      unint64_t v20 = 0xF000000000000000;
    }
    id v21 = [a2 data];
    uint64_t v22 = sub_100221BF0();
    unint64_t v24 = v23;

    if (v20 >> 60 == 15)
    {
LABEL_8:
      sub_100039FCC(v18, v20);
      sub_100039FCC(v22, v24);
      goto LABEL_9;
    }
    sub_1000059E8(v18, v20);
    char v25 = sub_10003FE7C(v18, v20, v22, v24);
    sub_100005A40(v22, v24);
    sub_100039FCC(v18, v20);
    sub_100039FCC(v18, v20);
    if (v25)
    {
      id v26 = [v12 voucherInfoSig];
      if (v26)
      {
        unint64_t v27 = v26;
        uint64_t v18 = sub_100221BF0();
        unint64_t v20 = v28;
      }
      else
      {
        uint64_t v18 = 0;
        unint64_t v20 = 0xF000000000000000;
      }
      id v29 = [a2 sig];
      uint64_t v22 = sub_100221BF0();
      unint64_t v24 = v30;

      if (v20 >> 60 == 15) {
        goto LABEL_8;
      }
      sub_1000059E8(v18, v20);
      char v31 = sub_10003FE7C(v18, v20, v22, v24);
      sub_100005A40(v22, v24);
      sub_100039FCC(v18, v20);
      sub_100039FCC(v18, v20);

      uint64_t v2 = v34;
      if (v31) {
        goto LABEL_43;
      }
    }
    else
    {
LABEL_9:

      uint64_t v2 = v34;
    }
  }
  if (v5)
  {
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_32:
    id v12 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v32) {
      goto LABEL_43;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v13);
    ++v4;
    if (!v14)
    {
      uint64_t v4 = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_43;
      }
      unint64_t v14 = *(void *)(v33 + 8 * v4);
      if (!v14)
      {
        uint64_t v4 = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_43;
        }
        unint64_t v14 = *(void *)(v33 + 8 * v4);
        if (!v14)
        {
          uint64_t v4 = v9 + 4;
          if (v9 + 4 >= v32) {
            goto LABEL_43;
          }
          unint64_t v14 = *(void *)(v33 + 8 * v4);
          if (!v14)
          {
            uint64_t v4 = v9 + 5;
            if (v9 + 5 >= v32) {
              goto LABEL_43;
            }
            unint64_t v14 = *(void *)(v33 + 8 * v4);
            if (!v14)
            {
              uint64_t v15 = v9 + 6;
              while (v32 != v15)
              {
                unint64_t v14 = *(void *)(v33 + 8 * v15++);
                if (v14)
                {
                  uint64_t v4 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_43:
              sub_1001B30B0();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

id sub_1001A629C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    id v3 = [objc_allocWithZone((Class)_SFECKeySpecifier) initWithCurve:4];
    id v4 = [objc_allocWithZone((Class)_SFECKeyPair) initRandomKeyPairWithSpecifier:v3];
    if (v4)
    {
      id v2 = v4;
    }
    else
    {
      sub_100042D4C();
      swift_allocError();
      *(void *)uint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      *(unsigned char *)(v10 + 16) = 13;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = self;
    sub_1000059E8(a1, a2);
    Class isa = sub_100221BD0().super.isa;
    id v12 = 0;
    id v2 = [v7 fetchKeyPairWithPrivateKeyPersistentRef:isa error:&v12];

    if (v2)
    {
      id v9 = v12;
    }
    else
    {
      id v2 = v12;
      sub_100221B40();

      swift_willThrow();
    }
    sub_100039FCC(a1, a2);
  }
  return v2;
}

id sub_1001A6444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  NSString v12 = sub_100222260();
  swift_bridgeObjectRelease();
  NSString v13 = sub_100222260();
  swift_bridgeObjectRelease();
  id v19 = 0;
  id v14 = [(id)swift_getObjCClassFromMetadata() permanentInfoWithMachineID:v12 modelID:v13 epoch:a5 signingKeyPair:a6 encryptionKeyPair:a7 creationTime:a8 peerIDHashAlgo:a9 error:&v19];

  if (v14)
  {
    id v15 = v19;
  }
  else
  {
    id v16 = v19;
    sub_100221B40();

    swift_willThrow();
  }
  return v14;
}

uint64_t sub_1001A6584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  if (a12) {
    os_log_type_t v19 = sub_100222500();
  }
  else {
    os_log_type_t v19 = sub_1002224E0();
  }
  os_log_type_t v20 = v19;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  if (os_log_type_enabled(v22, v20))
  {
    uint64_t v30 = a8;
    uint64_t v23 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v24 = a1;
    swift_bridgeObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v25 = sub_1002222C0();
    sub_1001BEBDC(v25, v26, v35);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    if (a12)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v36._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v36);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v27 = 0x203A726F727265;
    }
    else
    {
      uint64_t v27 = 0x73736563637573;
    }
    sub_1001BEBDC(v27, 0xE700000000000000, v35);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v20, "prepare complete peerID: %{public}s %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a8 = v30;
  }
  else
  {
    uint64_t v24 = a1;
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD0000000000000F2, 0x80000001002449A0);
  sub_1001BF234(0x65726170657250, 0xE700000000000000, *(void *)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a12);
  if (a12)
  {
    swift_getErrorValue();
    id v28 = sub_1001B9900(v35[2], v35[3]);
  }
  else
  {
    id v28 = 0;
  }
  a15(v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v28);
  return swift_errorRelease();
}

uint64_t sub_1001A6940(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, int a6, void *a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id),uint64_t a23)
{
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = a20;
  v27[3] = a21;
  v27[4] = a22;
  v27[5] = a23;
  id v28 = (void *)swift_allocObject();
  v28[2] = a19;
  v28[3] = sub_1001B8940;
  v28[4] = v27;
  if (a1 && !a2)
  {
    id v58 = v28;
    swift_retain();
    id v41 = a21;
    swift_retain();
    swift_retain();
    swift_retain();
    id v42 = a1;
    unint64_t v43 = v42;
    if (a4)
    {
      id v44 = [v42 version];
      unint64_t v45 = *(void **)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride];
      *(void *)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_policyVersionOverride] = v44;
    }
    unint64_t v61 = *(void **)&a5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v46 = swift_allocObject();
    *(_DWORD *)(v46 + 16) = a6;
    *(void *)(v46 + 24) = a7;
    *(void *)(v46 + 32) = v43;
    *(void *)(v46 + 40) = a8;
    *(void *)(v46 + 48) = a9;
    *(void *)(v46 + 56) = a10;
    *(void *)(v46 + 64) = a11;
    *(void *)(v46 + 72) = a12;
    *(void *)(v46 + 80) = a13;
    *(void *)(v46 + 88) = a14;
    *(void *)(v46 + 96) = a15;
    *(void *)(v46 + 104) = a16;
    *(void *)(v46 + 112) = a17;
    *(void *)(v46 + 120) = a5;
    *(void *)(v46 + 128) = a18;
    *(void *)(v46 + 136) = sub_1001B89F8;
    *(void *)(v46 + 144) = v58;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_1001B3D80;
    *(void *)(v47 + 24) = v46;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = v47;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_1002853A8;
    unint64_t v48 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Class v49 = a5;
    swift_retain();
    id v50 = a18;
    id v51 = a17;
    id v52 = a7;
    swift_retain();
    id v53 = v43;
    id v54 = a8;
    swift_bridgeObjectRetain();
    id v55 = a10;
    swift_bridgeObjectRetain();
    swift_release();
    [v61 performBlockAndWait:v48];

    _Block_release(v48);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (v48) {
      __break(1u);
    }
  }
  else
  {
    uint64_t v29 = qword_100298EB8;
    swift_retain();
    id v30 = a21;
    swift_retain();
    swift_retain();
    swift_retain();
    if (v29 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_100222090();
    sub_100003CC8(v31, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    int64_t v32 = sub_100222070();
    os_log_type_t v33 = sub_1002224E0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      uint64_t v63 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v35 = sub_1002222C0();
      uint64_t v63 = sub_1001BEBDC(v35, v36, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Unable to fetch policy: %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    if (a3)
    {
      uint64_t v37 = a3;
    }
    else
    {
      sub_100042D4C();
      uint64_t v37 = swift_allocError();
      *(_OWORD *)uint64_t v38 = xmmword_1002311C0;
      *(unsigned char *)(v38 + 16) = 13;
    }
    swift_retain();
    id v39 = v30;
    swift_retain();
    swift_errorRetain();
    sub_1001A6584(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, v37, a19, (uint64_t)v39, a22);
    swift_release();

    swift_release();
    swift_errorRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1001A6F54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6, int a7, void *a8, void *a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,void *a22,void (*a23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id),uint64_t a24)
{
  uint64_t v24 = a6;
  uint64_t v27 = a22;
  if (a2)
  {
    swift_retain_n();
    id v28 = a22;
    swift_retain_n();
    id v29 = v28;
    swift_retain();
    sub_1001A6940(0, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
      a21,
      v29,
      a23,
      a24);
    swift_release();
    swift_release();
  }
  else
  {
    if (a1)
    {
      swift_retain_n();
      id v31 = a22;
      swift_retain_n();
      swift_retain_n();
      id v32 = v31;
      os_log_type_t v33 = v24;
      id v34 = a3;
      uint64_t v35 = sub_100112D08(v34, a1);

      uint64_t v24 = v33;
      if (v35)
      {
        id v36 = v35;
        swift_retain();
        id v37 = v32;
        swift_retain();
        swift_retain();
        sub_1001A6940(v35, 0, a4, a5, v24, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
          a21,
          v37,
          a23,
          a24);
        swift_release_n();

        swift_release_n();
        swift_release();
        uint64_t v27 = a22;
        goto LABEL_13;
      }
    }
    else
    {
      swift_retain_n();
      id v38 = a22;
      swift_retain_n();
      swift_retain_n();
      id v39 = v38;
    }
    id v51 = v24;
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_100222090();
    sub_100003CC8(v40, (uint64_t)qword_10029E7D0);
    swift_bridgeObjectRetain_n();
    id v41 = sub_100222070();
    os_log_type_t v42 = sub_1002224E0();
    if (os_log_type_enabled(v41, v42))
    {
      unint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)unint64_t v43 = 136446210;
      swift_bridgeObjectRetain();
      sub_1000046DC((uint64_t *)&unk_10029EED0);
      uint64_t v44 = sub_1002222C0();
      sub_1001BEBDC(v44, v45, &v56);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "fetchPolicyDocument: didn't return policy of version: %{public}s", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v46 = [a3 versionNumber];
    sub_100042D4C();
    uint64_t v47 = swift_allocError();
    *(void *)uint64_t v48 = v46;
    *(void *)(v48 + 8) = 0;
    *(unsigned char *)(v48 + 16) = 1;
    swift_retain();
    uint64_t v27 = a22;
    id v49 = a22;
    swift_retain();
    swift_retain();
    sub_1001A6940(0, v47, a4, a5, v51, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
      a21,
      v49,
      a23,
      a24);
    swift_release();

    swift_release();
    swift_errorRelease();
    swift_release();
    swift_release_n();
  }
LABEL_13:
  swift_release_n();
  swift_release_n();
}

uint64_t sub_1001A74F4(void *a1, char *a2, void *a3, uint64_t a4, void *a5, void *a6, int a7, void *a8, void *a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,void *a22,void (*a23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id),uint64_t a24)
{
  id v96 = a6;
  id v97 = a8;
  int v92 = a7;
  id v100 = a5;
  uint64_t v94 = a4;
  id v83 = a3;
  Class v86 = a2;
  id v84 = a1;
  uint64_t v93 = a24;
  uint64_t v88 = a16;
  uint64_t v101 = a15;
  uint64_t v99 = a13;
  uint64_t v89 = a14;
  id v90 = a11;
  uint64_t v85 = a10;
  uint64_t v91 = a9;
  uint64_t v102 = a20;
  id v95 = a19;
  uint64_t v87 = a17;
  id v81 = a18;
  uint64_t v98 = a21;
  id v82 = a22;
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v24);
  unint64_t v77 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = (void *)swift_allocObject();
  _OWORD v26[2] = a21;
  v26[3] = a22;
  uint64_t v74 = a23;
  v26[4] = a23;
  v26[5] = a24;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = a20;
  v27[3] = sub_1001B3B94;
  v27[4] = v26;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1001B3BD8;
  *(void *)(v28 + 24) = v27;
  id v29 = v100;
  *(void *)(v28 + 32) = v94;
  *(void *)(v28 + 40) = v29;
  *(void *)(v28 + 48) = v96;
  *(_DWORD *)(v28 + 56) = v92;
  *(void *)(v28 + 64) = v97;
  *(void *)(v28 + 72) = a9;
  *(void *)(v28 + 80) = a10;
  *(void *)(v28 + 88) = a11;
  uint64_t v75 = a12;
  uint64_t v30 = v99;
  *(void *)(v28 + 96) = a12;
  *(void *)(v28 + 104) = v30;
  uint64_t v31 = v101;
  *(void *)(v28 + 112) = v89;
  *(void *)(v28 + 120) = v31;
  uint64_t v32 = v87;
  *(void *)(v28 + 128) = v88;
  *(void *)(v28 + 136) = v32;
  id v33 = v81;
  id v34 = v95;
  *(void *)(v28 + 144) = v81;
  *(void *)(v28 + 152) = v34;
  uint64_t v35 = (void *)swift_allocObject();
  _OWORD v35[2] = sub_1001B3CB0;
  v35[3] = v28;
  uint64_t v79 = v35;
  id v36 = v83;
  uint64_t v35[4] = v83;
  uint64_t v37 = swift_allocObject();
  uint64_t v78 = v37;
  *(void *)(v37 + 16) = v84;
  uint64_t v38 = v37 + 16;
  uint64_t v39 = swift_allocObject();
  swift_retain();
  unint64_t v72 = (char *)v82;
  swift_retain();
  swift_retain();
  uint64_t v80 = v26;
  swift_retain();
  id v82 = v27;
  swift_retain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v81 = v33;
  id v73 = v95;
  swift_retain();
  id v95 = v36;
  swift_bridgeObjectRetain();
  id v84 = v100;
  id v96 = v96;
  id v83 = v97;
  id v71 = v91;
  uint64_t v40 = v85;
  swift_bridgeObjectRetain();
  id v70 = v90;
  swift_bridgeObjectRetain();
  *(void *)(v39 + 16) = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  id v41 = v86;
  os_log_type_t v42 = *(void **)&v86[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  unint64_t v43 = (void *)swift_allocObject();
  v43[2] = v38;
  v43[3] = v41;
  v43[4] = v39 + 16;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1001B8C9C;
  *(void *)(v44 + 24) = v43;
  id v97 = v43;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_1002852B8;
  unint64_t v45 = _Block_copy(aBlock);
  id v46 = v41;
  swift_retain();
  swift_release();
  [v42 performBlockAndWait:v45];
  _Block_release(v45);
  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v42 & 1) == 0)
  {
    if ((*(void *)v38 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_100222750();
      uint64_t result = swift_bridgeObjectRelease();
      if (v49)
      {
LABEL_4:
        __chkstk_darwin(result, v48);
        sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
        uint64_t v50 = (uint64_t)v77;
        sub_100221F70();
        uint64_t v51 = *(void *)&v46[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        uint64_t v101 = *(void *)&v46[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
        sub_1000059A4(&v46[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v101);
        id v52 = (void *)swift_allocObject();
        v52[2] = v46;
        v52[3] = sub_1001B8CBC;
        uint64_t v53 = v39;
        uint64_t v54 = v78;
        v52[4] = v79;
        v52[5] = v54;
        v52[6] = v53;
        uint64_t v55 = *(void *)(v51 + 16);
        uint64_t v56 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v55 + 80);
        id v57 = v46;
        swift_retain();
        swift_retain();
        swift_retain();
        v56(v50, sub_1001B1CC8, v52, v101, v55);
        swift_release();
        sub_1001B7EAC(v50, type metadata accessor for FetchPolicyDocumentsRequest);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_7:
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else if (*(void *)(*(void *)v38 + 16))
    {
      goto LABEL_4;
    }
    unint64_t v77 = *(char **)(v39 + 16);
    swift_retain();
    Class v86 = v72;
    uint64_t v58 = v93;
    swift_retain();
    swift_retain();
    PolicyDocumentsuint64_t Request = v39;
    swift_retain();
    swift_retain();
    swift_errorRetain();
    id v84 = v84;
    unint64_t v72 = (char *)v96;
    id v69 = v83;
    id v96 = v71;
    swift_bridgeObjectRetain();
    id v83 = v70;
    uint64_t v59 = v99;
    swift_bridgeObjectRetain();
    uint64_t v60 = v101;
    swift_bridgeObjectRetain();
    uint64_t v61 = v87;
    swift_bridgeObjectRetain();
    id v62 = v81;
    id v71 = v62;
    id v63 = v73;
    id v81 = v63;
    uint64_t v64 = swift_bridgeObjectRetain();
    uint64_t v68 = v58;
    uint64_t v67 = v62;
    id v65 = v72;
    id v66 = v69;
    sub_1001A6F54(v64, 0, v95, v94, (uint64_t)v100, v72, v92, v69, v91, v40, v90, v75, v59, v89, v60, v88, v61, v67, v63,
      v102,
      v98,
      v86,
      v74,
      v68);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_errorRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1001A7E90(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *aBlock)
{
  _Block_copy(aBlock);
  if (a12) {
    os_log_type_t v21 = sub_100222500();
  }
  else {
    os_log_type_t v21 = sub_1002224E0();
  }
  os_log_type_t v22 = v21;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100222090();
  sub_100003CC8(v23, (uint64_t)qword_10029E7D0);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v24 = sub_100222070();
  if (os_log_type_enabled(v24, v22))
  {
    unint64_t v29 = a6;
    uint64_t v25 = swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    swift_bridgeObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v33);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    if (a12)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v34._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v34);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v28 = 0x203A726F727265;
    }
    else
    {
      uint64_t v28 = 0x73736563637573;
    }
    sub_1001BEBDC(v28, 0xE700000000000000, v33);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v22, "prepare complete peerID: %{public}s %{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a6 = v29;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD0000000000000F2, 0x80000001002449A0);
  _Block_copy(aBlock);
  sub_1001BF768(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t)a15, (uint64_t)aBlock);
  _Block_release(aBlock);

  swift_release();
  _Block_release(aBlock);
}

uint64_t sub_1001A8234(char a1, uint64_t a2, void *a3, void *a4, int a5, void *a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  uint64_t v26 = a20;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a21;
  uint64_t v70 = v27;
  if (a1)
  {
    uint64_t v69 = a8;
    if (a3)
    {
      swift_retain_n();
      id v28 = a20;
      swift_retain_n();
      swift_retain_n();
      id v29 = v28;
      _Block_copy(a21);
      id v30 = a3;
    }
    else
    {
      swift_retain_n();
      id v42 = a20;
      swift_retain_n();
      swift_retain_n();
      id v43 = v42;
      _Block_copy(a21);
      if (qword_100298BA8 != -1) {
        swift_once();
      }
      id v30 = (id)qword_1002A0260;
    }
    id v62 = a3;
    sub_1000046DC(&qword_1002995D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002311B0;
    *(void *)(inited + 32) = v30;
    unint64_t v71 = inited;
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v58 = a16;
    id v56 = a17;
    id v45 = a3;
    id v46 = a4;
    id v47 = a6;
    id v48 = a7;
    swift_bridgeObjectRetain();
    id v49 = a9;
    swift_bridgeObjectRetain();
    sub_1002223E0();
    id v50 = v45;
    swift_errorRetain();
    id v66 = v50;
    uint64_t v64 = (char *)v46;
    id v63 = v47;
    id v61 = v48;
    swift_bridgeObjectRetain();
    id v60 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v55 = v58;
    id v57 = v56;
    id v51 = v30;
    uint64_t v59 = (void *)sub_1001A0974(v71);
    swift_bridgeObjectRelease();
    swift_retain();
    id v52 = a20;
    swift_retain();
    swift_retain();
    id v53 = v51;
    sub_1001A74F4(v59, v64, v53, a2, v62, v64, a5, v63, a7, v69, a9, a10, a11, a12, a13, a14, a15, v55, v57,
      a18,
      a19,
      v52,
      (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))sub_1001B3B58,
      v70);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_errorRelease();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    swift_release_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v26 = a20;
  }
  else
  {
    swift_retain_n();
    id v31 = a20;
    swift_retain_n();
    swift_retain_n();
    id v32 = v31;
    _Block_copy(a21);
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_100222090();
    sub_100003CC8(v33, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    Swift::String v34 = sub_100222070();
    os_log_type_t v35 = sub_100222500();
    if (os_log_type_enabled(v34, v35))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      unint64_t v71 = swift_slowAlloc();
      *(_DWORD *)id v36 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v37 = sub_1002222C0();
      sub_1001BEBDC(v37, v38, (uint64_t *)&v71);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Unable to save encryption key: %{public}s", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v39 = a2;
    if (!a2)
    {
      sub_100042D4C();
      uint64_t v39 = swift_allocError();
      *(_OWORD *)uint64_t v40 = xmmword_1002311D0;
      *(unsigned char *)(v40 + 16) = 13;
    }
    swift_retain();
    id v41 = v32;
    swift_retain();
    _Block_copy(a21);
    swift_errorRetain();
    sub_1001A7E90(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, v39, a18, a19, v41, a21);
    _Block_release(a21);
    swift_release();
    swift_errorRelease();
    swift_release_n();
  }
  swift_release_n();

  swift_release_n();
  return swift_release();
}

void sub_1001A89A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, int a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,uint64_t a22,void *a23,void *a24)
{
  if (a1)
  {
    v66[0] = (id)0x6974707972636E65;
    v66[1] = (id)0xEF2079656B2D6E6FLL;
    _Block_copy(a24);
    swift_retain();
    id v26 = a23;
    _Block_copy(a24);
    swift_retain();
    id v27 = v26;
    swift_retain();
    _Block_copy(a24);
    swift_retain();
    id v54 = v27;
    swift_retain();
    v68._countAndFlagsBits = a4;
    v68._object = a5;
    sub_100222310(v68);
    id v28 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v63 = a20;
    id v62 = a19;
    id v64 = a9;
    id v56 = a6;
    id v55 = a7;
    id v58 = a10;
    swift_bridgeObjectRetain();
    id v57 = a12;
    swift_bridgeObjectRetain();
    id v29 = [v28 defaultManager];
    id v30 = [objc_allocWithZone((Class)_SFIdentity) initWithKeyPair:a3];
    SFAccessibilityMakeWithMode();
    id v31 = [objc_allocWithZone((Class)_SFAccessPolicy) initWithAccessibility:v66 sharingPolicy:0];
    NSString v32 = sub_100222260();
    [v31 setAccessGroup:v32];

    NSString v33 = sub_100222260();
    v66[0] = 0;
    LOBYTE(v32) = [v29 setIdentity:v30 forIdentifier:v33 accessPolicy:v31 error:v66];

    id v34 = v66[0];
    if (v32)
    {
      _Block_copy(a24);
      swift_retain();
      id v35 = v54;
      swift_retain();
      id v36 = v34;
      sub_1001A8234(1, 0, a6, v55, a8, v64, a10, a11, a12, a13, a14, a15, a16, a17, a18, v62, v63, a21, a22, v35, a24);
      _Block_release(a24);
    }
    else
    {
      id v48 = v66[0];
      uint64_t v49 = sub_100221B40();

      swift_willThrow();
      _Block_copy(a24);
      swift_retain();
      id v50 = v54;
      swift_retain();
      swift_errorRetain();
      sub_1001A8234(0, v49, a6, v55, a8, v64, a10, a11, a12, a13, a14, a15, a16, a17, a18, v62, v63, a21, a22, v50, a24);
      _Block_release(a24);

      swift_errorRelease();
      swift_errorRelease();
      id v30 = v55;
      id v31 = v56;
    }

    swift_release_n();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    _Block_copy(a24);
    swift_retain();
    id v38 = a23;
    _Block_copy(a24);
    swift_retain();
    id v39 = v38;
    swift_retain();
    _Block_copy(a24);
    uint64_t v40 = qword_100298EB8;
    swift_retain();
    id v41 = v39;
    swift_retain();
    if (v40 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_100222090();
    sub_100003CC8(v42, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v43 = sub_100222070();
    os_log_type_t v44 = sub_100222500();
    if (os_log_type_enabled(v43, v44))
    {
      id v45 = (uint8_t *)swift_slowAlloc();
      v66[0] = (id)swift_slowAlloc();
      *(_DWORD *)id v45 = 136446210;
      uint64_t v67 = a2;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v46 = sub_1002222C0();
      uint64_t v67 = sub_1001BEBDC(v46, v47, (uint64_t *)v66);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Unable to save signing key: %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v51 = a2;
    if (!a2)
    {
      sub_100042D4C();
      uint64_t v51 = swift_allocError();
      *(_OWORD *)uint64_t v52 = xmmword_1002311D0;
      *(unsigned char *)(v52 + 16) = 13;
    }
    _Block_copy(a24);
    swift_retain();
    id v53 = v41;
    swift_errorRetain();
    sub_1001A7E90(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, v51, a21, a22, v53, a24);
    _Block_release(a24);
    swift_errorRelease();
    swift_release_n();
  }

  swift_release_n();
  swift_release();
  _Block_release(a24);
  _Block_release(a24);
  _Block_release(a24);
}

void sub_1001A9198(void *a1, id a2, char *a3, void *a4, void *a5, uint64_t a6, char *a7, void *a8, uint64_t a9, char *a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, void *a15, id a16, int a17, void *a18, void *a19, uint64_t a20,unint64_t a21,uint64_t a22,unint64_t a23,void *a24,uint64_t a25,void *a26,void *a27)
{
  Swift::Int v161 = a1;
  id v162 = a8;
  uint64_t v159 = a3;
  unint64_t v160 = a7;
  uint64_t v157 = a5;
  uint64_t v158 = a6;
  id v156 = a4;
  id v164 = a2;
  uint64_t v27 = sub_100221CB0();
  id v28 = *(void (***)(char *, uint64_t))(v27 - 8);
  __chkstk_darwin(v27, v29);
  id v31 = (char *)&v130 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  _Block_copy(a27);
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  swift_retain();
  id v32 = a26;
  _Block_copy(a27);
  swift_retain();
  id v33 = v32;
  _Block_copy(a27);
  swift_retain();
  id v34 = v33;
  _Block_copy(a27);
  swift_retain();
  id v35 = v34;
  _Block_copy(a27);
  uint64_t v165 = a25;
  swift_retain();
  id v36 = v35;
  id v37 = a24;
  uint64_t v38 = sub_1001984DC(v37, 0xD0000000000000F2, 0x80000001002449A0);

  swift_retain_n();
  id v39 = 0;
  uint64_t v163 = (char *)sub_1001A629C(a20, a21);
  BOOL v153 = v28;
  id v40 = v164;
  id v155 = v36;
  id v41 = v163;
  uint64_t v42 = 0;
  id v43 = sub_1001A629C(a22, a23);
  id v151 = (id)sub_1000047D8(0, &qword_10029EEC8);
  id v44 = v43;
  unint64_t v152 = v41;
  uint64_t v154 = (char *)v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100221CA0();
  sub_100221C70();
  double v46 = v45;
  v153[1](v31, v27);
  double v47 = v46 * 1000.0;
  if ((~COERCE__INT64(v46 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  id v44 = v155;
  if (v47 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v48 = v152;
  if (v47 >= 1.84467441e19)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v49 = (uint64_t)v40;
  id v50 = v154;
  id v51 = sub_1001A6444((uint64_t)v161, v49, (uint64_t)v160, (uint64_t)v162, 1, (uint64_t)v152, (uint64_t)v154, (unint64_t)v47, 1);

  id v162 = v51;
  id v52 = [v162 peerID];
  id v53 = (char *)sub_100222270();
  id v55 = v54;

  id v164 = objc_allocWithZone((Class)type metadata accessor for BottledPeer());
  uint64_t v163 = v48;
  id v56 = v50;
  swift_bridgeObjectRetain();
  uint64_t v57 = v158;
  swift_bridgeObjectRetain();
  unint64_t v58 = (unint64_t)v156;
  swift_bridgeObjectRetain();
  uint64_t v154 = v53;
  Swift::Int v161 = v55;
  unint64_t v160 = sub_100200E24((uint64_t)v53, (uint64_t)v55, (uint64_t)v157, v57, v163, v56, (uint64_t)v159, v58);
  id v164 = 0;
  uint64_t v59 = v162;
  uint64_t v159 = v56;
  uint64_t v60 = *(void *)&v160[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_secret];
  unint64_t v61 = *(void *)&v160[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_secret + 8];
  id v62 = v160;
  sub_1000059E8(v60, v61);
  uint64_t v42 = (uint64_t)v164;
  sub_100115200(v60, v61, (uint64_t)v154, (uint64_t)v161);
  if (v42)
  {
    id v63 = v59;

    id v64 = v163;
    id v65 = v159;

    id v31 = v65;
    id v40 = v63;
    swift_bridgeObjectRelease();
    unint64_t v66 = v61;
    id v39 = v64;
    sub_100005A40(v60, v66);
    if (qword_100298EB8 == -1)
    {
LABEL_8:
      uint64_t v67 = sub_100222090();
      sub_100003CC8(v67, (uint64_t)qword_10029E7D0);
      swift_errorRetain();
      swift_errorRetain();
      Swift::String v68 = sub_100222070();
      os_log_type_t v69 = sub_100222500();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        Swift::Int v161 = (void *)swift_slowAlloc();
        *(void *)&long long v167 = v161;
        *(_DWORD *)uint64_t v70 = 136446210;
        uint64_t v166 = v42;
        swift_errorRetain();
        sub_1000046DC(&qword_100299D70);
        uint64_t v71 = sub_1002222C0();
        uint64_t v166 = sub_1001BEBDC(v71, v72, (uint64_t *)&v167);
        id v40 = v162;
        id v44 = v155;
        sub_100222690();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "bottle creation failed: %{public}s", v70, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v39 = v163;
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      _Block_copy(a27);
      uint64_t v73 = v165;
      swift_retain();
      id v74 = v44;
      swift_errorRetain();
      sub_1001A7E90(0, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, 0xF000000000000000, 0, v42, v38, v73, v74, a27);
      _Block_release(a27);

      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();

      swift_release();
      swift_release();
      if (!v164) {

      }
      goto LABEL_5;
    }
LABEL_23:
    swift_once();
    goto LABEL_8;
  }
  unint64_t v152 = v62;
  uint64_t v146 = v38;
  uint64_t v157 = a18;
  int v145 = a17;
  uint64_t v139 = a13;
  uint64_t v140 = a11;
  uint64_t v141 = a9;
  sub_100005A40(v60, v61);
  strcpy((char *)&v167, "signing-key ");
  BYTE13(v167) = 0;
  HIWORD(v167) = -5120;
  v169._countAndFlagsBits = (uint64_t)v154;
  v169._object = v161;
  sub_100222310(v169);
  uint64_t v75 = *((void *)&v167 + 1);
  uint64_t v149 = v167;
  unint64_t v76 = self;
  unint64_t v160 = a12;
  swift_bridgeObjectRetain();
  uint64_t v158 = a14;
  swift_bridgeObjectRetain();
  id v151 = v37;
  unint64_t v77 = v163;
  Swift::Int v143 = a15;
  id v156 = a15;
  unint64_t v144 = a19;
  id v78 = a19;
  id v164 = a16;
  swift_bridgeObjectRetain();
  BOOL v153 = v157;
  uint64_t v163 = a10;
  swift_bridgeObjectRetain();
  *(void *)&long long v136 = v76;
  id v79 = [v76 defaultManager];
  id v80 = [objc_allocWithZone((Class)_SFIdentity) initWithKeyPair:v77];
  SFAccessibilityMakeWithMode();
  long long v147 = v167;
  uint64_t v81 = v168;
  id v82 = objc_allocWithZone((Class)_SFAccessPolicy);
  long long v167 = v147;
  uint64_t v168 = v81;
  id v83 = [v82 initWithAccessibility:&v167 sharingPolicy:0];
  id v137 = (id)0x8000000100244870;
  NSString v84 = sub_100222260();
  [v83 setAccessGroup:v84];

  uint64_t v149 = v75;
  NSString v85 = sub_100222260();
  *(void *)&long long v167 = 0;
  Class v86 = v161;
  *(void *)&long long v147 = v79;
  id v142 = v80;
  LOBYTE(v84) = [v79 setIdentity:v80 forIdentifier:v85 accessPolicy:v83 error:&v167];

  uint64_t v87 = (void *)v167;
  id v150 = v78;
  unint64_t v148 = v77;
  id v138 = v83;
  if (v84)
  {
    *(void *)&long long v167 = 0x6974707972636E65;
    *((void *)&v167 + 1) = 0xEF2079656B2D6E6FLL;
    v170._countAndFlagsBits = (uint64_t)v154;
    v170._object = v86;
    sub_100222310(v170);
    id v131 = v151;
    char v135 = v77;
    uint64_t v154 = (char *)v162;
    unint64_t v134 = v152;
    id v130 = v156;
    id v133 = v78;
    swift_bridgeObjectRetain();
    unint64_t v132 = v153;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v88 = v87;
    id v89 = [(id)v136 defaultManager];
    id v90 = objc_allocWithZone((Class)_SFIdentity);
    id v91 = [v90 initWithKeyPair:v159];
    SFAccessibilityMakeWithMode();
    long long v136 = v167;
    uint64_t v92 = v168;
    id v93 = objc_allocWithZone((Class)_SFAccessPolicy);
    long long v167 = v136;
    uint64_t v168 = v92;
    id v94 = [v93 initWithAccessibility:&v167 sharingPolicy:0];
    NSString v95 = sub_100222260();
    [v94 setAccessGroup:v95];

    NSString v96 = sub_100222260();
    *(void *)&long long v167 = 0;
    id v137 = v89;
    unsigned __int8 v97 = [v89 setIdentity:v91 forIdentifier:v96 accessPolicy:v94 error:&v167];

    uint64_t v98 = (void *)v167;
    if (v97)
    {
      _Block_copy(a27);
      uint64_t v99 = v165;
      swift_retain();
      id v100 = v155;
      id v101 = v155;
      uint64_t v102 = v146;
      swift_retain();
      id v103 = v98;
      uint64_t v127 = v101;
      id v44 = v100;
      unint64_t v104 = v131;
      sub_1001A8234(1, 0, v143, v131, v145, v154, v144, (uint64_t)v164, v157, v141, (uint64_t)v163, v140, (uint64_t)v160, v139, v158, v135, v134, v102, v99,
        v127,
        a27);
      _Block_release(a27);
    }
    else
    {
      id v116 = (id)v167;
      uint64_t v117 = sub_100221B40();

      swift_willThrow();
      _Block_copy(a27);
      uint64_t v118 = v165;
      swift_retain();
      id v44 = v155;
      id v119 = v155;
      uint64_t v120 = v146;
      swift_retain();
      swift_errorRetain();
      unint64_t v128 = v119;
      BOOL v121 = v131;
      sub_1001A8234(0, v117, v143, v131, v145, v154, v144, (uint64_t)v164, v157, v141, (uint64_t)v163, v140, (uint64_t)v160, v139, v158, v135, v134, v120, v118,
        v128,
        a27);
      _Block_release(a27);

      swift_errorRelease();
      swift_errorRelease();
      id v91 = v121;
      id v94 = v130;
    }
    uint64_t v122 = (void *)v147;
    id v123 = v142;
    id v124 = v138;

    Swift::Int v113 = v159;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    unint64_t v112 = v162;
    uint64_t v111 = v152;
    uint64_t v115 = v151;
  }
  else
  {
    id v105 = (id)v167;
    uint64_t v106 = sub_100221B40();

    swift_willThrow();
    _Block_copy(a27);
    uint64_t v107 = v165;
    swift_retain();
    id v44 = v155;
    id v108 = v155;
    uint64_t v109 = v77;
    uint64_t v110 = v146;
    swift_retain();
    swift_errorRetain();
    Swift::Int v129 = v108;
    uint64_t v111 = v152;
    uint64_t v126 = v109;
    unint64_t v112 = v162;
    Swift::Int v113 = v159;
    BOOL v114 = v86;
    uint64_t v115 = v151;
    sub_1001A89A4(0, v106, (uint64_t)v159, (uint64_t)v154, v114, v143, v151, v145, v162, v144, (uint64_t)v164, v157, v141, (uint64_t)v163, v140, (uint64_t)v160, v139, v158, v126,
      v152,
      v110,
      v107,
      v129,
      a27);
    _Block_release(a27);

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v154 = v113;
  }

  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();

  uint64_t v125 = v148;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_5:

  swift_release_n();
  _Block_release(a27);
  _Block_release(a27);
  _Block_release(a27);
  _Block_release(a27);
  _Block_release(a27);
}

uint64_t sub_1001AA2E4(uint64_t a1, char *a2, void (*a3)(void), uint64_t a4, void *a5)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v10);
  NSString v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v13 = (void *)swift_allocObject();
  id v37 = a3;
  v13[2] = a3;
  v13[3] = a4;
  id v39 = v13;
  v13[4] = a5;
  uint64_t v14 = swift_allocObject();
  uint64_t v40 = v14;
  *(void *)(v14 + 16) = a1;
  id v15 = (void *)(v14 + 16);
  uint64_t v16 = swift_allocObject();
  swift_retain();
  id v36 = a5;
  swift_bridgeObjectRetain();
  *(void *)(v16 + 16) = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v17 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v15;
  v18[3] = a2;
  v18[4] = v16 + 16;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1001B8C9C;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_1002850B0;
  os_log_type_t v20 = _Block_copy(aBlock);
  os_log_type_t v21 = a2;
  swift_retain();
  swift_release();
  [v17 performBlockAndWait:v20];
  _Block_release(v20);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    if ((*(void *)v15 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_100222750();
      uint64_t result = swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_4:
        __chkstk_darwin(result, v24);
        *(&v36 - 2) = v15;
        sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
        sub_100221F70();
        uint64_t v27 = *(void *)&v21[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
        uint64_t v26 = *(void *)&v21[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        sub_1000059A4(&v21[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v27);
        id v28 = (void *)swift_allocObject();
        v28[2] = v21;
        v28[3] = sub_1001B3994;
        PolicyDocumentsuint64_t Request = (uint64_t)v18;
        uint64_t v29 = v21;
        uint64_t v30 = v16;
        uint64_t v31 = v40;
        v28[4] = v39;
        v28[5] = v31;
        v28[6] = v30;
        uint64_t v32 = *(void *)(v26 + 16);
        id v33 = *(void (**)(char *, uint64_t (*)(), void *, uint64_t, uint64_t))(v32 + 80);
        id v34 = v29;
        swift_retain();
        swift_retain();
        swift_retain();
        v33(v12, sub_1001B1CC8, v28, v27, v32);
        swift_release();
        sub_1001B7EAC((uint64_t)v12, type metadata accessor for FetchPolicyDocumentsRequest);
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else if (*(void *)(*(void *)v15 + 16))
    {
      goto LABEL_4;
    }
    uint64_t v35 = swift_bridgeObjectRetain();
    sub_10015AA64(v35, 0, v37, a4, v36);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1001AA754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, unint64_t a19, char a20)
{
  if (a4)
  {
    v31.super.Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v31.super.Class isa = 0;
  }
  if (a10)
  {
    NSString v20 = sub_100222260();
    swift_bridgeObjectRelease();
    unint64_t v21 = a17;
    if (a12)
    {
LABEL_6:
      NSString v22 = sub_100222260();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    NSString v20 = 0;
    unint64_t v21 = a17;
    if (a12) {
      goto LABEL_6;
    }
  }
  NSString v22 = 0;
LABEL_9:
  NSString v23 = sub_100222260();
  swift_bridgeObjectRelease();
  if (v21 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = sub_100221BD0().super.isa;
    sub_100039FCC(a16, v21);
  }
  if (a19 >> 60 == 15)
  {
    Class v25 = 0;
  }
  else
  {
    Class v25 = sub_100221BD0().super.isa;
    sub_100039FCC(a18, a19);
  }
  id v40 = 0;
  LOBYTE(v30) = a20 & 1;
  id v26 = objc_msgSend(v37, "initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:", a1, a2, a3, v31.super.isa, a5, a6, a7, a8, v20, v22, v23, a15, isa, v25, v30,
          &v40);

  if (v26)
  {
    id v27 = v40;
  }
  else
  {
    id v28 = v40;
    sub_100221B40();

    swift_willThrow();
  }
  return v26;
}

uint64_t sub_1001AA9A8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, void (*a5)(void, void, void *, void, uint64_t), uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  uint64_t v12 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  NSString v13 = *(void **)&a4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO];
  swift_retain();
  id v14 = [v13 egoPeerID];
  if (!v14) {
    goto LABEL_16;
  }
  id v15 = v14;
  uint64_t v107 = a1;
  uint64_t v16 = sub_100222270();
  uint64_t v18 = v17;

  id v19 = [*(id *)&a4[v12] egoPeerPermanentInfo];
  if (!v19)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    sub_100042D4C();
    uint64_t v52 = swift_allocError();
    *(_OWORD *)uint64_t v53 = xmmword_1002297D0;
    *(unsigned char *)(v53 + 16) = 13;
    a5(0, 0, _swiftEmptyArrayStorage, 0, v52);
    swift_errorRelease();
    goto LABEL_17;
  }
  NSString v20 = v19;
  uint64_t v104 = a2;
  id v105 = (objc_class *)v16;
  uint64_t v21 = sub_100221BF0();
  unint64_t v23 = v22;

  id v24 = [*(id *)&a4[v12] egoPeerPermanentInfoSig];
  if (!v24)
  {
LABEL_14:
    sub_100005A40(v21, v23);
    goto LABEL_15;
  }
  Class v25 = v24;
  uint64_t v106 = sub_100221BF0();
  unint64_t v27 = v26;

  id v28 = [*(id *)&a4[v12] egoPeerStableInfo];
  if (!v28)
  {
LABEL_13:
    sub_100005A40(v106, v27);
    goto LABEL_14;
  }
  uint64_t v29 = v28;
  uint64_t v102 = v11;
  id v103 = v18;
  uint64_t v30 = sub_100221BF0();
  unint64_t v32 = v31;

  id v33 = [*(id *)&a4[v12] egoPeerStableInfoSig];
  if (!v33)
  {
    sub_100005A40(v30, v32);
    goto LABEL_13;
  }
  id v34 = v33;
  uint64_t v92 = a5;
  uint64_t v97 = v30;
  unint64_t v101 = v32;
  uint64_t v99 = sub_100221BF0();
  unint64_t v100 = v35;

  id v98 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  swift_bridgeObjectRetain();
  sub_1000059E8(v21, v23);
  sub_1000059E8(v106, v27);
  NSString v36 = sub_100222260();
  swift_bridgeObjectRelease();
  Class isa = sub_100221BD0().super.isa;
  Class v38 = sub_100221BD0().super.isa;
  id v39 = [self permanentInfoWithPeerID:v36 data:isa sig:v38 keyFactory:v98];
  unint64_t v95 = v27;
  sub_100005A40(v106, v27);
  unint64_t v96 = v23;
  sub_100005A40(v21, v23);

  if (v39)
  {
    id v90 = v39;
    uint64_t v91 = v21;
    id v40 = objc_allocWithZone((Class)TPPeerStableInfo);
    sub_1000059E8(v97, v32);
    sub_1000059E8(v99, v100);
    Class v41 = sub_100221BD0().super.isa;
    Class v42 = sub_100221BD0().super.isa;
    id v43 = [v40 initWithData:v41 sig:v42];
    sub_100005A40(v99, v100);
    sub_100005A40(v97, v32);

    id v44 = v92;
    if (v43)
    {
      id v89 = v43;
      id v45 = [v90 machineID];
      uint64_t v46 = sub_100222270();
      unint64_t v48 = v47;

      LOBYTE(v45) = sub_1001EAE4C(v46, v48);
      swift_bridgeObjectRelease();
      if (v45)
      {
        strcpy((char *)v109, "signing-key ");
        BYTE5(v109[1]) = 0;
        HIWORD(v109[1]) = -5120;
        swift_bridgeObjectRetain();
        sub_1000059E8(v21, v96);
        sub_1000059E8(v106, v27);
        sub_1000059E8(v97, v32);
        sub_1000059E8(v99, v100);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v49 = a4;
        swift_bridgeObjectRetain();
        id v93 = v90;
        swift_bridgeObjectRetain();
        id v87 = v43;
        v111._countAndFlagsBits = (uint64_t)v105;
        v111._object = v103;
        sub_100222310(v111);
        swift_bridgeObjectRetain();
        sub_1000059E8(v21, v96);
        sub_1000059E8(v106, v27);
        sub_1000059E8(v97, v101);
        sub_1000059E8(v99, v100);
        swift_retain();
        Class v86 = v49;
        swift_bridgeObjectRetain();
        id v88 = v93;
        swift_bridgeObjectRetain();
        id v94 = v87;
        uint64_t v50 = swift_bridgeObjectRetain();
        sub_10019D53C(v109[0], v109[1], (uint64_t)v105, v103, (objc_class *)sub_1001B35EC, v102, v86, v107, v88, v104, v105, (uint64_t)v103, v94, v50, v21, v96, v106, v27, v97,
          v101,
          v99,
          v100);
        sub_100005A40(v99, v100);
        sub_100005A40(v97, v101);
        sub_100005A40(v106, v27);
        sub_100005A40(v21, v96);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_release_n();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease_n();
        sub_100005A40(v21, v96);
        sub_100005A40(v106, v27);
        sub_100005A40(v97, v101);
        sub_100005A40(v99, v100);

        sub_100005A40(v99, v100);
        sub_100005A40(v97, v101);
        sub_100005A40(v106, v27);
        sub_100005A40(v21, v96);
        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_100298EB8 != -1) {
          swift_once();
        }
        uint64_t v62 = sub_100222090();
        sub_100003CC8(v62, (uint64_t)qword_10029E7D0);
        id v63 = v90;
        id v64 = sub_100222070();
        os_log_type_t v65 = sub_1002224E0();
        id v108 = v63;
        if (os_log_type_enabled(v64, v65))
        {
          unint64_t v66 = (uint8_t *)swift_slowAlloc();
          v109[0] = swift_slowAlloc();
          *(_DWORD *)unint64_t v66 = 136446210;
          uint64_t v67 = v63;
          id v68 = [v63 machineID];
          uint64_t v69 = sub_100222270();
          unint64_t v71 = v70;

          v109[2] = sub_1001BEBDC(v69, v71, v109);
          sub_100222690();

          unint64_t v72 = &selRef_setAllSelves_;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "establish: self machineID %{public}s not on list", v66, 0xCu);
          swift_arrayDestroy();
          id v44 = v92;
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v73 = v106;
          id v74 = v98;
        }
        else
        {

          uint64_t v73 = v106;
          id v74 = v98;
          unint64_t v72 = &selRef_setAllSelves_;
        }
        id v75 = objc_allocWithZone((Class)SecTapToRadar);
        NSString v76 = sub_100222260();
        NSString v77 = sub_100222260();
        NSString v78 = sub_100222260();
        id v79 = [v75 initTapToRadar:v76 description:v77 radar:v78];

        [v79 trigger];
        id v80 = [v108 v72[155]];
        uint64_t v81 = sub_100222270();
        uint64_t v83 = v82;

        sub_100042D4C();
        uint64_t v84 = swift_allocError();
        *(void *)uint64_t v85 = v81;
        *(void *)(v85 + 8) = v83;
        *(unsigned char *)(v85 + 16) = 2;
        v44(0, 0, _swiftEmptyArrayStorage, 0, v84);
        swift_errorRelease();

        sub_100005A40(v99, v100);
        sub_100005A40(v97, v101);
        sub_100005A40(v73, v95);
        sub_100005A40(v91, v96);
        return swift_release();
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_100222090();
    sub_100003CC8(v56, (uint64_t)qword_10029E7D0);
    uint64_t v57 = sub_100222070();
    os_log_type_t v58 = sub_1002224E0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "cannot create TPPeerStableInfo", v59, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v60 = swift_allocError();
    *(_OWORD *)uint64_t v61 = xmmword_100229940;
    *(unsigned char *)(v61 + 16) = 13;
    v92(0, 0, _swiftEmptyArrayStorage, 0, v60);
    swift_errorRelease();

    sub_100005A40(v99, v100);
    sub_100005A40(v97, v32);
    sub_100005A40(v106, v27);
    sub_100005A40(v21, v96);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100042D4C();
    uint64_t v54 = swift_allocError();
    *(_OWORD *)uint64_t v55 = xmmword_1002297C0;
    *(unsigned char *)(v55 + 16) = 13;
    v92(0, 0, _swiftEmptyArrayStorage, 0, v54);
    swift_errorRelease();

    sub_100005A40(v99, v100);
    sub_100005A40(v97, v32);
    sub_100005A40(v106, v27);
    sub_100005A40(v21, v23);
  }
LABEL_17:

  return swift_release();
}

void *sub_1001AB654(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v5 = sub_100221B50();
  uint64_t v21 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = _swiftEmptyArrayStorage;
  sub_100222600();

  sub_1001A56AC((unint64_t *)&unk_10029EF90, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  sub_100222680();
  if (v25)
  {
    while (1)
    {
      sub_100005A98(&v24, v26);
      sub_1000663DC((uint64_t)v26, (uint64_t)&v24);
      type metadata accessor for BottleMO();
      if (!swift_dynamicCast()) {
        goto LABEL_4;
      }
      id v9 = v23;
      id v10 = [v23 peerID];
      if (!v10)
      {

        sub_100004788((uint64_t)&v24);
LABEL_16:
        sub_100005A98(v26, &v24);
        uint64_t v17 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10018D19C(0, v17[2] + 1, 1);
          uint64_t v17 = v27;
        }
        unint64_t v19 = v17[2];
        unint64_t v18 = v17[3];
        if (v19 >= v18 >> 1)
        {
          sub_10018D19C(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v27;
        }
        v17[2] = v19 + 1;
        sub_100005A98(&v24, &v17[4 * v19 + 4]);
        goto LABEL_6;
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_100222270();
      uint64_t v14 = v13;

      if (v12 == v22 && v14 == a3) {
        break;
      }
      char v16 = sub_100222A30();
      swift_bridgeObjectRelease();

      sub_100004788((uint64_t)&v24);
      if ((v16 & 1) == 0) {
        goto LABEL_16;
      }
LABEL_5:
      sub_100004788((uint64_t)v26);
LABEL_6:
      sub_100222680();
      if (!v25) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();

LABEL_4:
    sub_100004788((uint64_t)&v24);
    goto LABEL_5;
  }
LABEL_21:
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v5);
  sub_10004015C((uint64_t)&v24, &qword_100299EA0);
  return v27;
}

uint64_t sub_1001AB944(objc_class *a1, uint64_t a2, char *a3, void (*a4)(uint64_t, uint64_t, void *, NSObject *, uint64_t), uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  char v16 = (void *)swift_allocObject();
  id v74 = a4;
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  v16[6] = a8;
  v16[7] = a9;
  v16[8] = a10;
  uint64_t v17 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  unint64_t v18 = *(void **)&a3[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO];
  swift_retain();
  int v19 = a6;
  id v20 = a7;
  uint64_t v73 = a8;
  swift_bridgeObjectRetain();
  id v21 = [v18 egoPeerID];
  if (v21)
  {
    uint64_t v22 = v21;
    id v70 = v20;
    uint64_t v23 = sub_100222270();
    uint64_t v25 = v24;

    id v26 = [*(id *)&a3[v17] egoPeerPermanentInfo];
    if (v26)
    {
      unint64_t v27 = v26;
      uint64_t v68 = v23;
      uint64_t v69 = sub_100221BF0();
      unint64_t v29 = v28;

      id v30 = [*(id *)&a3[v17] egoPeerPermanentInfoSig];
      if (v30)
      {
        unint64_t v31 = v30;
        int v62 = v19;
        unint64_t v32 = v25;
        uint64_t v33 = sub_100221BF0();
        unint64_t v35 = v34;

        id v36 = objc_allocWithZone((Class)TPECPublicKeyFactory);
        swift_bridgeObjectRetain();
        sub_1000059E8(v69, v29);
        sub_1000059E8(v33, v35);
        id v37 = [v36 init];
        NSString v63 = sub_100222260();
        uint64_t v67 = v32;
        swift_bridgeObjectRelease();
        Class isa = sub_100221BD0().super.isa;
        Class v39 = sub_100221BD0().super.isa;
        id v40 = [self permanentInfoWithPeerID:v63 data:isa sig:v39 keyFactory:v37];

        uint64_t v64 = v33;
        unint64_t v65 = v35;
        sub_100005A40(v33, v35);
        unint64_t v66 = v29;
        sub_100005A40(v69, v29);

        if (v40)
        {
          strcpy((char *)v75, "signing-key ");
          BYTE5(v75[1]) = 0;
          HIWORD(v75[1]) = -5120;
          swift_bridgeObjectRetain();
          swift_retain();
          Class v41 = a3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v42 = v40;
          v77._countAndFlagsBits = v68;
          v77._object = v67;
          sub_100222310(v77);
          swift_bridgeObjectRetain();
          swift_retain();
          id v43 = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v44 = v42;
          sub_10019E83C(v75[0], v75[1], v68, v67, (uint64_t)sub_1001B7898, (uint64_t)v16, v43, v68, (uint64_t)v67, a1, a2, v44);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_release_n();

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();

          sub_100005A40(v33, v35);
          sub_100005A40(v69, v29);
          swift_release();
          return swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v52 = a10;
          if (qword_100298EB8 != -1) {
            swift_once();
          }
          uint64_t v53 = sub_100222090();
          sub_100003CC8(v53, (uint64_t)qword_10029E7D0);
          swift_bridgeObjectRetain_n();
          uint64_t v54 = sub_100222070();
          os_log_type_t v55 = sub_1002224E0();
          if (os_log_type_enabled(v54, v55))
          {
            uint64_t v56 = (uint8_t *)swift_slowAlloc();
            v75[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v56 = 136446210;
            sub_1000047D8(0, &qword_10029EFC0);
            swift_bridgeObjectRetain();
            uint64_t v57 = sub_1002223D0();
            unint64_t v59 = v58;
            swift_bridgeObjectRelease();
            v75[2] = sub_1001BEBDC(v57, v59, v75);
            sub_100222690();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v54, v55, "Couldn't parse self identity: %{public}s", v56, 0xCu);
            swift_arrayDestroy();
            uint64_t v52 = a10;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_100042D4C();
          uint64_t v60 = swift_allocError();
          *(_OWORD *)uint64_t v61 = xmmword_1002297C0;
          *(unsigned char *)(v61 + 16) = 13;
          sub_100134174(0, v60, v74, a5, v62, v70, v73, a9, v52);
          swift_errorRelease();
          sub_100005A40(v64, v65);
          sub_100005A40(v69, v66);
          return swift_release();
        }
      }
      sub_100005A40(v69, v29);
    }
    swift_bridgeObjectRelease();
    id v20 = v70;
  }
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_100222090();
  sub_100003CC8(v46, (uint64_t)qword_10029E7D0);
  unint64_t v47 = sub_100222070();
  os_log_type_t v48 = sub_1002224E0();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Have no self identity, can't make tlk shares", v49, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  uint64_t v50 = swift_allocError();
  *(_OWORD *)uint64_t v51 = xmmword_1002297D0;
  *(unsigned char *)(v51 + 16) = 13;
  sub_100134174(0, v50, v74, a5, v19, v20, v73, a9, a10);
  swift_errorRelease();

  return swift_release();
}

void sub_1001AC0CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a2;
  uint64_t v30 = 0;
  int64_t v7 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v8 = a3 + 56;
  uint64_t v9 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v8 - 24);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v9;
  uint64_t v31 = v8;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v15 = v14 | (v7 << 6);
LABEL_21:
    id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v15);
    id v20 = objc_msgSend(v19, "peerID", v28);
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = sub_100222270();
      uint64_t v24 = v23;

      if (v22 == a4 && v24 == a5)
      {

        swift_bridgeObjectRelease();
LABEL_29:
        *(unint64_t *)((char *)a1 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        if (__OFADD__(v30++, 1))
        {
          __break(1u);
LABEL_32:
          swift_retain();
          sub_100190090(a1, v28, v30, a3, (uint64_t *)&unk_10029EE90);
          return;
        }
      }
      else
      {
        char v26 = sub_100222A30();

        swift_bridgeObjectRelease();
        if (v26) {
          goto LABEL_29;
        }
      }
    }
    else
    {
    }
  }
  int64_t v16 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v16 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v16);
  ++v7;
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 1;
  if (v16 + 1 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v7);
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 2;
  if (v16 + 2 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v7);
  if (v17)
  {
LABEL_20:
    unint64_t v13 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_21;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v32) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v31 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1001AC31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v12);
    bzero((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    sub_1001AC0CC((unint64_t *)((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    uint64_t v14 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v10);
    swift_bridgeObjectRetain();
    sub_1001AC0CC((unint64_t *)v15, v9, a1, a2, a3);
    uint64_t v14 = v16;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v14;
}

Swift::Int sub_1001AC4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_1001AC31C(a1, a2, a3);
  }
  swift_bridgeObjectRetain();
  sub_100222700();
  if (sub_100222790())
  {
    type metadata accessor for BottleMO();
    do
    {
      swift_dynamicCast();
      id v5 = [v23 peerID];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = sub_100222270();
        uint64_t v9 = v8;

        if (v7 == a2 && v9 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_14:
          unint64_t v12 = *((void *)&_swiftEmptySetSingleton + 2);
          if (*((void *)&_swiftEmptySetSingleton + 3) <= v12) {
            sub_10018EBB4(v12 + 1, (uint64_t *)&unk_10029EE90);
          }
          Swift::Int result = sub_100222640(*((void *)&_swiftEmptySetSingleton + 5));
          uint64_t v14 = (char *)&_swiftEmptySetSingleton + 56;
          uint64_t v15 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
          unint64_t v16 = result & ~v15;
          unint64_t v17 = v16 >> 6;
          if (((-1 << v16) & ~*((void *)&_swiftEmptySetSingleton + (v16 >> 6) + 7)) != 0)
          {
            unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*((void *)&_swiftEmptySetSingleton + (v16 >> 6) + 7))) | v16 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v19 = 0;
            unint64_t v20 = (unint64_t)(63 - v15) >> 6;
            do
            {
              if (++v17 == v20 && (v19 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v21 = v17 == v20;
              if (v17 == v20) {
                unint64_t v17 = 0;
              }
              v19 |= v21;
              uint64_t v22 = *(void *)&v14[8 * v17];
            }
            while (v22 == -1);
            unint64_t v18 = __clz(__rbit64(~v22)) + (v17 << 6);
          }
          *(void *)&v14[(v18 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v18;
          *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v18) = v23;
          ++*((void *)&_swiftEmptySetSingleton + 2);
          continue;
        }
        char v11 = sub_100222A30();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_14;
        }
      }
    }
    while (sub_100222790());
  }
  swift_bridgeObjectRelease();
  swift_release();
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_1001AC780(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void, unint64_t, void, unint64_t, uint64_t), uint64_t a5, char *a6, void *a7, void *a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v20 = a3;
  if (!a1)
  {
    [self sendMetricWithEvent:a3 success:1 error:0];
    id v41 = *(id *)&a6[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    unint64_t v20 = (void *)swift_allocObject();
    v20[2] = a6;
    v20[3] = a7;
    v20[4] = a8;
    v20[5] = a9;
    v20[6] = a10;
    v20[7] = a11;
    v20[8] = a4;
    v20[9] = a5;
    v20[10] = a12;
    v20[11] = a13;
    v20[12] = a14;
    v20[13] = a15;
    v20[14] = a16;
    v20[15] = a17;
    v20[16] = a18;
    v20[17] = a19;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_1001B6858;
    *(void *)(v31 + 24) = v20;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t v44 = v31;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_1002866B8;
    id v23 = _Block_copy(aBlock);
    uint64_t v21 = v44;
    swift_bridgeObjectRetain();
    swift_retain();
    int64_t v32 = a6;
    id v33 = a7;
    id v34 = a8;
    swift_bridgeObjectRetain();
    id v35 = a11;
    swift_retain();
    swift_bridgeObjectRetain();
    id v36 = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    [v41 performBlockAndWait:v23];
    _Block_release(v23);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v21 = a1;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100222090();
  sub_100003CC8(v22, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v23 = sub_100222070();
  os_log_type_t v24 = sub_100222500();
  if (!os_log_type_enabled(v23, v24))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v25 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v25 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v26 = sub_1002222C0();
  sub_1001BEBDC(v26, v27, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unknown policy for beneficiary: %{public}s", v25, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  Class v39 = self;
  id v40 = (void *)sub_100221B30();
  [v39 sendMetricWithEvent:v20 success:0 error:v40];

  return a4(0, 0xF000000000000000, 0, 0xF000000000000000, v21);
}

uint64_t sub_1001ACBFC(void *a1, char *a2, uint64_t a3, void *a4, uint64_t (*a5)(void, unint64_t, void, unint64_t, uint64_t), uint64_t a6, char *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  id v81 = a8;
  uint64_t v69 = a7;
  uint64_t v79 = a6;
  id v67 = a4;
  unint64_t v72 = a1;
  uint64_t v73 = a2;
  uint64_t v76 = a20;
  uint64_t v77 = a19;
  uint64_t v74 = a18;
  uint64_t v78 = a17;
  uint64_t v68 = a16;
  uint64_t v66 = a13;
  id v80 = a14;
  uint64_t v75 = a11;
  id v70 = a9;
  unint64_t v71 = a12;
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v24);
  uint64_t v64 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (void *)swift_allocObject();
  _OWORD v26[2] = a3;
  v26[3] = a4;
  int v62 = a5;
  v26[4] = a5;
  v26[5] = a6;
  unint64_t v27 = v69;
  id v28 = v81;
  v26[6] = v69;
  v26[7] = v28;
  v26[8] = a9;
  v26[9] = a10;
  uint64_t v59 = a10;
  v26[10] = a11;
  v26[11] = a12;
  uint64_t v29 = v66;
  id v30 = v80;
  v26[12] = v66;
  v26[13] = v30;
  uint64_t v60 = a15;
  v26[14] = a15;
  uint64_t v31 = v68;
  uint64_t v32 = v78;
  v26[15] = v68;
  v26[16] = v32;
  uint64_t v34 = v76;
  uint64_t v33 = v77;
  v26[17] = v74;
  v26[18] = v33;
  v26[19] = v34;
  uint64_t v35 = swift_allocObject();
  uint64_t v65 = v35;
  *(void *)(v35 + 16) = v72;
  uint64_t v36 = v35 + 16;
  id v37 = (void *)swift_allocObject();
  uint64_t v61 = a3;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v72 = v67;
  swift_retain();
  uint64_t v69 = v27;
  id v67 = v81;
  uint64_t v38 = v31;
  id v70 = v70;
  swift_bridgeObjectRetain();
  unint64_t v71 = v71;
  uint64_t v39 = v29;
  swift_bridgeObjectRetain();
  id v58 = v80;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v40 = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  id v81 = v37;
  uint64_t v37[2] = v40;
  id v41 = v73;
  id v42 = *(void **)&v73[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v43 = (void *)swift_allocObject();
  v43[2] = v36;
  v43[3] = v41;
  v43[4] = v37 + 2;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1001B8C9C;
  *(void *)(v44 + 24) = v43;
  id v80 = v43;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_100286618;
  id v45 = _Block_copy(aBlock);
  uint64_t v46 = v41;
  swift_retain();
  swift_release();
  [v42 performBlockAndWait:v45];
  _Block_release(v45);
  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v42)
  {
    __break(1u);
  }
  else
  {
    if ((*(void *)v36 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_100222750();
      uint64_t result = swift_bridgeObjectRelease();
      if (v49)
      {
LABEL_4:
        __chkstk_darwin(result, v48);
        sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
        uint64_t v50 = (uint64_t)v64;
        sub_100221F70();
        uint64_t v51 = *(void *)&v46[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
        uint64_t v52 = *(void *)&v46[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        sub_1000059A4(&v46[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v51);
        uint64_t v53 = (void *)swift_allocObject();
        v53[2] = v46;
        v53[3] = sub_1001B6704;
        uint64_t v54 = v65;
        v53[4] = v26;
        v53[5] = v54;
        v53[6] = v81;
        uint64_t v55 = *(void *)(v52 + 16);
        uint64_t v56 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v55 + 80);
        uint64_t v57 = v46;
        swift_retain();
        swift_retain();
        swift_retain();
        v56(v50, sub_1001B1CC8, v53, v51, v55);
        swift_release();
        sub_1001B7EAC(v50, type metadata accessor for FetchPolicyDocumentsRequest);
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else if (*(void *)(*(void *)v36 + 16))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    sub_1001AC780(0, v61, v72, v62, v79, v69, v67, v70, v59, v75, v71, v39, v58, v60, v38, v78, v74, v77, v76);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001AD24C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

void sub_1001AD340(uint64_t a1, uint64_t a2, int a3, uint64_t a4, id a5, NSObject *a6, void (*a7)(NSObject *, id, id))
{
  p_vtable = VoucherMO.vtable;
  if (a1)
  {
    swift_errorRetain();
    if (qword_100298EB8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100222090();
    sub_100003CC8(v12, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v13 = sub_100222070();
    os_log_type_t v14 = sub_1002224E0();
    if (!os_log_type_enabled(v13, v14))
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      if (a4) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    uint64_t v46 = a2;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    id v49 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446210;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v16 = sub_1002222C0();
    sub_1001BEBDC(v16, v17, (uint64_t *)&v49);
    p_vtable = (void **)(VoucherMO + 24);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "join: error fetching all requested policies (continuing anyway): %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v46;
    swift_slowDealloc();

    swift_errorRelease();
  }
  if (a4)
  {
LABEL_7:
    int v18 = a4;
    goto LABEL_10;
  }
LABEL_9:
  id v19 = [a5 modelID];
  a3 = sub_100222270();
  int v18 = v20;

LABEL_10:
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_10015A2F8(a3, v18, a6);
  swift_bridgeObjectRelease();
  id v22 = a5;
  uint64_t v23 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  uint64_t v24 = a2;
  id v25 = *(id *)(a2 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  NSString v26 = [v22 peerID];
  if (!v26)
  {
    sub_100222270();
    NSString v26 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  id v49 = 0;
  id v27 = [v25 peerWithID:v26 error:&v49];

  if (v49)
  {
    id v28 = v49;

    swift_willThrow();
LABEL_14:
    if (p_vtable[471] != (void *)-1) {
      swift_once();
    }
    uint64_t v29 = sub_100222090();
    sub_100003CC8(v29, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    id v30 = sub_100222070();
    os_log_type_t v31 = sub_100222500();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      id v49 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v33 = sub_1002222C0();
      sub_1001BEBDC(v33, v34, (uint64_t *)&v49);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Fetching the syncing policy failed: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a7(0, 0, v28);
    swift_errorRelease();
    swift_errorRelease();
    return;
  }
  if (v27)
  {
    id v35 = [v27 dynamicInfo];
    if (v35)
    {
      uint64_t v36 = v35;
      id v37 = *(void **)(v24 + v23);
      id v49 = 0;
      id v38 = [v37 userViewSyncabilityConsensusAmongTrustedPeers:v36 error:&v49];
      if (!v49)
      {
        id v44 = v38;
        id v45 = v21;
        a7(v21, v44, 0);

        return;
      }
      id v28 = v49;
      swift_willThrow();

      goto LABEL_14;
    }
  }
  if (p_vtable[471] != (void *)-1) {
    swift_once();
  }
  uint64_t v39 = sub_100222090();
  sub_100003CC8(v39, (uint64_t)qword_10029E7D0);
  unint64_t v40 = sub_100222070();
  os_log_type_t v41 = sub_100222500();
  if (os_log_type_enabled(v40, v41))
  {
    id v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "fetchCurrentPolicy with no dynamic info", v42, 2u);
    swift_slowDealloc();
  }

  id v43 = v21;
  a7(v21, 0, 0);
}

uint64_t sub_1001AD9FC(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void (*a8)(NSObject *, id, id), uint64_t a9)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v17);
  id v49 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = (void *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  uint64_t v45 = a4;
  v19[4] = a5;
  v19[5] = a6;
  v19[6] = a7;
  v19[7] = a8;
  unint64_t v47 = a8;
  v19[8] = a9;
  uint64_t v20 = swift_allocObject();
  uint64_t v50 = v20;
  *(void *)(v20 + 16) = a1;
  uint64_t v21 = v20 + 16;
  uint64_t v22 = swift_allocObject();
  uint64_t v46 = a5;
  swift_bridgeObjectRetain();
  id v44 = a6;
  id v43 = a7;
  swift_retain();
  swift_bridgeObjectRetain();
  id v42 = a3;
  uint64_t v23 = v22;
  *(void *)(v22 + 16) = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v24 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v21;
  *(void *)(v25 + 24) = a2;
  *(void *)(v25 + 32) = v22 + 16;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1001B8C9C;
  *(void *)(v26 + 24) = v25;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_1002844D0;
  id v27 = _Block_copy(aBlock);
  id v28 = a2;
  swift_retain();
  swift_release();
  [v24 performBlockAndWait:v27];
  _Block_release(v27);
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v24)
  {
    __break(1u);
  }
  else
  {
    if ((*(void *)v21 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_100222750();
      uint64_t result = swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_4:
        __chkstk_darwin(result, v30);
        *(&v42 - 2) = (id)v21;
        sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
        unint64_t v47 = (void (*)(NSObject *, id, id))v25;
        uint64_t v32 = (uint64_t)v49;
        sub_100221F70();
        uint64_t v33 = *(void *)&v28[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
        uint64_t v34 = *(void *)&v28[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        sub_1000059A4(&v28[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v33);
        id v35 = (void *)swift_allocObject();
        _OWORD v35[2] = v28;
        v35[3] = sub_1001B1F94;
        uint64_t v36 = v28;
        uint64_t v37 = v23;
        uint64_t v38 = v50;
        uint64_t v35[4] = v19;
        v35[5] = v38;
        v35[6] = v37;
        uint64_t v39 = *(void *)(v34 + 16);
        unint64_t v40 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v39 + 80);
        os_log_type_t v41 = v36;
        swift_retain();
        swift_retain();
        swift_retain();
        v40(v32, sub_1001B1CC8, v35, v33, v39);
        swift_release();
        sub_1001B7EAC(v32, type metadata accessor for FetchPolicyDocumentsRequest);
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else if (*(void *)(*(void *)v21 + 16))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    sub_1001AD340(0, (uint64_t)v42, v45, v46, v44, v43, v47);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001ADEB0(uint64_t a1, void *a2, char *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t isEscapingClosureAtFileLocation, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v22 = a2;
  char v23 = a19;
  uint64_t v24 = a10;
  if (!a1)
  {
    [self sendMetricWithEvent:a2 success:1 error:0];
    goto LABEL_8;
  }
  LOBYTE(v39) = a19;
  swift_errorRetain();
  if (qword_100298EB8 != -1) {
    goto LABEL_10;
  }
  while (1)
  {
    uint64_t v37 = isEscapingClosureAtFileLocation;
    uint64_t v25 = sub_100222090();
    sub_100003CC8(v25, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v26 = sub_100222070();
    os_log_type_t v27 = sub_1002224E0();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v28 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v29 = sub_1002222C0();
      sub_1001BEBDC(v29, v30, aBlock);
      uint64_t v24 = a10;
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "join: error fetching all requested policies (continuing anyway): %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    char v23 = (char)v39;
    uint64_t v31 = self;
    uint64_t v32 = (void *)sub_100221B30();
    [v31 sendMetricWithEvent:v22 success:0 error:v32];

    swift_errorRelease();
    char isEscapingClosureAtFileLocation = v37;
LABEL_8:
    uint64_t v22 = a3;
    id v39 = *(id *)&a3[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a4;
    *(void *)(v33 + 24) = a5;
    unint64_t v38 = a5;
    a5 = a6;
    a3 = (char *)a7;
    *(void *)(v33 + 32) = a6;
    *(void *)(v33 + 40) = a7;
    *(void *)(v33 + 48) = isEscapingClosureAtFileLocation;
    *(void *)(v33 + 56) = a9;
    *(void *)(v33 + 64) = v22;
    *(void *)(v33 + 72) = v24;
    *(void *)(v33 + 80) = a11;
    *(void *)(v33 + 88) = a12;
    *(void *)(v33 + 96) = a13;
    *(void *)(v33 + 104) = a14;
    *(void *)(v33 + 112) = a15;
    *(void *)(v33 + 120) = a16;
    *(void *)(v33 + 128) = a17;
    *(void *)(v33 + 136) = a18;
    *(unsigned char *)(v33 + 144) = v23 & 1;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1001B5220;
    *(void *)(v24 + 24) = v33;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t v45 = v24;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100286078;
    uint64_t v34 = _Block_copy(aBlock);
    a17 = v45;
    sub_1000059E8(a4, v38);
    sub_1000059E8(a6, a7);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v35 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    [v39 performBlockAndWait:v34];
    _Block_release(v34);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_once();
  }
  return result;
}

uint64_t sub_1001AE354(uint64_t a1, char *a2, void *a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20)
{
  unint64_t v67 = a8;
  uint64_t v77 = a7;
  uint64_t v74 = a5;
  unint64_t v75 = a6;
  id v62 = a4;
  uint64_t v64 = a2;
  uint64_t v63 = a1;
  int v68 = a20;
  uint64_t v69 = a19;
  uint64_t v70 = a18;
  uint64_t v71 = a17;
  uint64_t v72 = a16;
  uint64_t v76 = a15;
  uint64_t v73 = a12;
  uint64_t v65 = a11;
  uint64_t v66 = a10;
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v23);
  uint64_t v60 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a4;
  *(void *)(v25 + 32) = a5;
  unint64_t v26 = v75;
  uint64_t v27 = v77;
  *(void *)(v25 + 40) = v75;
  *(void *)(v25 + 48) = v27;
  unint64_t v28 = v67;
  *(void *)(v25 + 56) = v67;
  *(void *)(v25 + 64) = a9;
  uint64_t v58 = a9;
  *(void *)(v25 + 72) = a10;
  *(void *)(v25 + 80) = a11;
  *(void *)(v25 + 88) = a12;
  *(void *)(v25 + 96) = a13;
  uint64_t v56 = a14;
  uint64_t v29 = v76;
  *(void *)(v25 + 104) = a14;
  *(void *)(v25 + 112) = v29;
  uint64_t v30 = v71;
  *(void *)(v25 + 120) = v72;
  *(void *)(v25 + 128) = v30;
  uint64_t v31 = v69;
  *(void *)(v25 + 136) = v70;
  *(void *)(v25 + 144) = v31;
  *(unsigned char *)(v25 + 152) = v68;
  uint64_t v32 = swift_allocObject();
  uint64_t v61 = v32;
  *(void *)(v32 + 16) = v63;
  uint64_t v33 = v32 + 16;
  uint64_t v34 = swift_allocObject();
  id v55 = a3;
  uint64_t v54 = (char *)v62;
  sub_1000059E8(v74, v26);
  sub_1000059E8(v77, v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v57 = a13;
  uint64_t v35 = v76;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v63 = v34;
  *(void *)(v34 + 16) = v36;
  uint64_t v37 = v64;
  unint64_t v38 = *(void **)&v64[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v33;
  *(void *)(v39 + 24) = v37;
  *(void *)(v39 + 32) = v34 + 16;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_1001B8C9C;
  *(void *)(v40 + 24) = v39;
  id v62 = (id)v39;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_100285FD8;
  os_log_type_t v41 = _Block_copy(aBlock);
  id v42 = v37;
  swift_retain();
  swift_release();
  [v38 performBlockAndWait:v41];
  _Block_release(v41);
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v39)
  {
    __break(1u);
  }
  else
  {
    if ((*(void *)v33 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_100222750();
      uint64_t result = swift_bridgeObjectRelease();
      if (v45)
      {
LABEL_4:
        __chkstk_darwin(result, v44);
        sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
        uint64_t v46 = (uint64_t)v60;
        sub_100221F70();
        uint64_t v47 = *(void *)&v42[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        uint64_t v77 = *(void *)&v42[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
        sub_1000059A4(&v42[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v77);
        uint64_t v48 = (void *)swift_allocObject();
        v48[2] = v42;
        v48[3] = sub_1001B511C;
        uint64_t v49 = v63;
        uint64_t v50 = v61;
        v48[4] = v25;
        v48[5] = v50;
        v48[6] = v49;
        uint64_t v51 = *(void *)(v47 + 16);
        uint64_t v52 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v51 + 80);
        uint64_t v53 = v42;
        swift_retain();
        swift_retain();
        swift_retain();
        v52(v46, sub_1001B1CC8, v48, v77, v51);
        swift_release();
        sub_1001B7EAC(v46, type metadata accessor for FetchPolicyDocumentsRequest);
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else if (*(void *)(*(void *)v33 + 16))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    sub_1001ADEB0(0, v55, v54, v74, v75, v77, v67, v58, v66, v65, v73, v57, v56, v35, v72, v71, v70, v69, v68 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001AE990(uint64_t a1, char *a2, uint64_t isEscapingClosureAtFileLocation, uint64_t a4, uint64_t a5)
{
  if (!a1) {
    goto LABEL_6;
  }
  swift_errorRetain();
  if (qword_100298EB8 != -1) {
    goto LABEL_8;
  }
  while (1)
  {
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
    swift_errorRetain();
    swift_errorRetain();
    size_t v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v13 = sub_1002222C0();
      sub_1001BEBDC(v13, v14, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "preflightPreapprovedJoin: error fetching all requested policies (continuing anyway): %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
LABEL_6:
    uint64_t v15 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a2;
    v16[3] = isEscapingClosureAtFileLocation;
    v16[4] = a4;
    v16[5] = a5;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_1001B8954;
    *(void *)(v17 + 24) = v16;
    aBlock[4] = (uint64_t)sub_1001B8924;
    uint64_t aBlock[5] = v17;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100284980;
    uint64_t v18 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    id v19 = a2;
    swift_retain();
    swift_release();
    [v15 performBlockAndWait:v18];
    _Block_release(v18);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_once();
  }
  return result;
}

uint64_t sub_1001AECD8(uint64_t a1, char *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v12);
  uint64_t v45 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  id v43 = a4;
  v14[4] = a5;
  v14[5] = a6;
  uint64_t v15 = swift_allocObject();
  uint64_t v46 = v15;
  *(void *)(v15 + 16) = a1;
  uint64_t v16 = v15 + 16;
  uint64_t v17 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v42 = a3;
  swift_retain();
  unint64_t v18 = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v47 = v17;
  *(void *)(v17 + 16) = v18;
  id v19 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v16;
  v20[3] = a2;
  v20[4] = v17 + 16;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1001B8C9C;
  *(void *)(v21 + 24) = v20;
  uint64_t v52 = sub_1001B8924;
  uint64_t v53 = v21;
  aBlock = _NSConcreteStackBlock;
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_100112F58;
  uint64_t v51 = &unk_100284868;
  uint64_t v22 = _Block_copy(&aBlock);
  uint64_t v23 = a2;
  swift_retain();
  swift_release();
  [v19 performBlockAndWait:v22];
  _Block_release(v22);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if ((*(void *)v16 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_100222750();
    uint64_t result = swift_bridgeObjectRelease();
    if (v26)
    {
LABEL_4:
      __chkstk_darwin(result, v25);
      *(&v41 - 2) = v16;
      sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
      id v43 = v20;
      uint64_t v27 = (uint64_t)v45;
      sub_100221F70();
      uint64_t v28 = *(void *)&v23[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      uint64_t v29 = *(void *)&v23[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      sub_1000059A4(&v23[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v28);
      uint64_t v30 = (void *)swift_allocObject();
      v30[2] = v23;
      v30[3] = sub_1001B2F04;
      uint64_t v31 = v46;
      v30[4] = v14;
      v30[5] = v31;
      v30[6] = v47;
      uint64_t v32 = *(void *)(v29 + 16);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v32 + 80);
      uint64_t v34 = v23;
      swift_retain();
      swift_retain();
      swift_retain();
      v33(v27, sub_1001B1CC8, v30, v28, v32);
      swift_release();
      sub_1001B7EAC(v27, type metadata accessor for FetchPolicyDocumentsRequest);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else if (*(void *)(*(void *)v16 + 16))
  {
    goto LABEL_4;
  }
  uint64_t v35 = v42;
  uint64_t v45 = *(char **)&v42[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  unint64_t v36 = (void *)swift_allocObject();
  uint64_t v37 = v43;
  v36[2] = v35;
  v36[3] = v37;
  v36[4] = a5;
  v36[5] = a6;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_1001B2F40;
  *(void *)(v38 + 24) = v36;
  uint64_t v52 = sub_1001B8924;
  uint64_t v53 = v38;
  aBlock = _NSConcreteStackBlock;
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_100112F58;
  uint64_t v51 = &unk_100284908;
  uint64_t v39 = _Block_copy(&aBlock);
  id v40 = v35;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v45 performBlockAndWait:v39];
  _Block_release(v39);
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  if (v39) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1001AF28C(uint64_t a1, char *a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  uint64_t v39 = a4;
  v13[4] = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1001B1C20;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  uint64_t v45 = v15;
  *(void *)(v15 + 16) = a1;
  uint64_t v16 = v15 + 16;
  uint64_t v17 = swift_allocObject();
  uint64_t v40 = a3;
  swift_retain();
  uint64_t v41 = a5;
  swift_retain();
  id v43 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_100009740((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v44 = v17;
  *(void *)(v17 + 16) = v18;
  id v19 = (void *)(v17 + 16);
  uint64_t v20 = *(void **)&a2[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v16;
  v21[3] = a2;
  v21[4] = v19;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1001B1C78;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = sub_1001B8924;
  uint64_t aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100112F58;
  aBlock[3] = &unk_100284390;
  uint64_t v23 = _Block_copy(aBlock);
  uint64_t v24 = a2;
  swift_retain();
  swift_release();
  [v20 performBlockAndWait:v23];
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0)
  {
    if ((*(void *)v16 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_100222750();
      uint64_t result = swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_4:
        __chkstk_darwin(result, v26);
        sub_1001A56AC(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
        sub_100221F70();
        uint64_t v28 = *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
        uint64_t v29 = *(void *)&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
        sub_1000059A4(&v24[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v28);
        uint64_t v30 = (void *)swift_allocObject();
        v30[2] = v24;
        v30[3] = sub_1001B1C70;
        v30[4] = v14;
        PolicyDocumentsuint64_t Request = (uint64_t)v21;
        uint64_t v31 = v44;
        v30[5] = v45;
        v30[6] = v31;
        uint64_t v32 = *(void *)(v29 + 16);
        uint64_t v33 = *(void (**)(char *, uint64_t (*)(), void *, uint64_t, uint64_t))(v32 + 80);
        uint64_t v34 = v24;
        swift_retain();
        swift_retain();
        swift_retain();
        v33(v12, sub_1001B1CC8, v30, v28, v32);
        swift_release();
        sub_1001B7EAC((uint64_t)v12, type metadata accessor for FetchPolicyDocumentsRequest);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else if (*(void *)(*(void *)v16 + 16))
    {
      goto LABEL_4;
    }
    uint64_t v35 = v40;
    if ((*v19 & 0xC000000000000001) != 0)
    {
      swift_retain();
      uint64_t v36 = v41;
      swift_retain();
      swift_bridgeObjectRetain();
      Swift::Int v37 = sub_100192B10();
    }
    else
    {
      swift_retain();
      uint64_t v36 = v41;
      swift_retain();
      uint64_t v38 = swift_bridgeObjectRetain();
      Swift::Int v37 = sub_10019300C(v38);
    }
    sub_1001726D8(v37, 0, v35, v39, v36, "fetchPolicyDocuments complete: %{public}s", 0xD000000000000025, 0x8000000100244480);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_1001AF808(objc_class *a1, uint64_t a2, int a3, void *aBlock)
{
  _Block_copy(aBlock);
  if (a2) {
    os_log_type_t v7 = sub_100222500();
  }
  else {
    os_log_type_t v7 = sub_1002224E0();
  }
  os_log_type_t v8 = v7;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = sub_100222070();
  if (os_log_type_enabled(v10, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v14._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v14);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v12 = 0x203A726F727265;
    }
    else
    {
      uint64_t v12 = 0x73736563637573;
    }
    sub_1001BEBDC(v12, 0xE700000000000000, &v13);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v8, "fetchAccountSettings complete: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100119E14(0xD000000000000027, 0x80000001002442C0);
  _Block_copy(aBlock);
  sub_1001BF944(a1, a2, (uint64_t)aBlock);
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_1001AFA90(char a1, void *a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1001B14B8;
  *(void *)(v7 + 24) = v6;
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  _Block_copy(a3);
  swift_retain();
  _Block_copy(a3);
  swift_retain();
  os_log_type_t v8 = a2;
  uint64_t v9 = sub_1001984DC(v8, 0xD000000000000027, 0x80000001002442C0);

  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = sub_1001B14C0;
  v10[4] = v7;
  if ((a1 & 1) == 0)
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    id v21 = *(id *)&v8[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v8;
    v13[3] = &v24;
    v13[4] = &v23;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_1001B1554;
    *(void *)(v14 + 24) = v13;
    aBlock[4] = sub_1001B8924;
    uint64_t aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100112F58;
    aBlock[3] = &unk_100283E68;
    uint64_t v15 = _Block_copy(aBlock);
    uint64_t v20 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v21 performBlockAndWait:v15];
    _Block_release(v15);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v15)
    {
      __break(1u);
      return;
    }
    uint64_t v16 = v23;
    if (v23)
    {
      swift_errorRetain();
      _Block_copy(a3);
      swift_retain();
      swift_errorRetain();
      sub_1001AF808(0, v16, v9, a3);
      _Block_release(a3);
      swift_release();
      swift_release();
      swift_release();
      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      uint64_t v17 = v24;
      if (!v24)
      {
        unint64_t v18 = (void *)swift_allocObject();
        v18[2] = sub_1001B14CC;
        v18[3] = v10;
        v18[4] = v20;
        id v19 = v20;
        swift_retain();
        sub_100174C40((uint64_t)sub_1001B1574, (uint64_t)v18);
        swift_release_n();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_11;
      }
      _Block_copy(a3);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1001AF808(v17, 0, v9, a3);
      _Block_release(a3);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_errorRelease();
    swift_release_n();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_11:
    _Block_release(a3);
    return;
  }
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = sub_1001B14CC;
  v11[3] = v10;
  v11[4] = v8;
  uint64_t v12 = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100174E30(0, (uint64_t)sub_1001B8958, (uint64_t)v11);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  _Block_release(a3);
}

uint64_t sub_1001AFF74(void *a1, void *a2)
{
  if (!a2) {
    return 1;
  }
  id v3 = a2;
  id v4 = [a1 includedPeerIDs];
  uint64_t v5 = sub_100222440();

  id v6 = [v3 includedPeerIDs];
  uint64_t v7 = sub_100222440();

  LOBYTE(v6) = sub_100187874(v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    goto LABEL_5;
  }
  id v8 = [a1 excludedPeerIDs];
  uint64_t v9 = sub_100222440();

  id v10 = [v3 excludedPeerIDs];
  uint64_t v11 = sub_100222440();

  LOBYTE(v10) = sub_100187874(v9, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    id v12 = [a1 preapprovals];
    uint64_t v13 = sub_100222440();

    id v14 = [v3 preapprovals];
    uint64_t v15 = sub_100222440();

    LOBYTE(v14) = sub_100187874(v13, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    char v16 = v14 ^ 1;
  }
  else
  {
LABEL_5:

    char v16 = 1;
  }
  return v16 & 1;
}

void sub_1001B0184(void *a1, int a2, void *aBlock)
{
  _Block_copy(aBlock);
  if (a1) {
    os_log_type_t v5 = sub_100222500();
  }
  else {
    os_log_type_t v5 = sub_1002224F0();
  }
  os_log_type_t v6 = v5;
  if (qword_100298EB8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029E7D0);
  swift_errorRetain();
  swift_errorRetain();
  id v8 = sub_100222070();
  if (os_log_type_enabled(v8, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v13[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    if (a1)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v14._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v14);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v10 = 0x203A726F727265;
    }
    else
    {
      uint64_t v10 = 0x73736563637573;
    }
    sub_1001BEBDC(v10, 0xE700000000000000, v13);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v6, "testSemaphore complete: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100119E14(0xD000000000000019, 0x8000000100244240);
  if (a1)
  {
    swift_getErrorValue();
    uint64_t v11 = v13[2];
    uint64_t v12 = v13[3];
    _Block_copy(aBlock);
    sub_1001B9900(v11, v12);
    a1 = (void *)sub_100221B30();
  }
  else
  {
    _Block_copy(aBlock);
  }
  (*((void (**)(void *, void *))aBlock + 2))(aBlock, a1);

  swift_errorRelease();
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_1001B045C(uint64_t a1, void (*a2)(void, void), void *a3, void (**a4)(void, void))
{
  uint64_t v79 = a2;
  uint64_t v7 = sub_1002220E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v71 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100222120();
  uint64_t v72 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v70 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100222150();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  uint64_t v78 = v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v69 = (char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v19);
  uint64_t v76 = (char *)v63 - v20;
  uint64_t v21 = sub_1002220F0();
  uint64_t v68 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1002220D0();
  uint64_t v74 = *(void *)(v25 - 8);
  uint64_t v75 = v25;
  __chkstk_darwin(v25, v26);
  uint64_t v73 = (void *)((char *)v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a4;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1001B110C;
  *(void *)(v29 + 24) = v28;
  _Block_copy(a4);
  swift_retain();
  _Block_copy(a4);
  swift_retain();
  _Block_copy(a4);
  swift_retain();
  _Block_copy(a4);
  swift_retain();
  if (!SecIsInternalRelease())
  {
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v34 = xmmword_100231330;
    *(unsigned char *)(v34 + 16) = 13;
    swift_getErrorValue();
    uint64_t v35 = v87;
    uint64_t v36 = v88;
    _Block_copy(a4);
    sub_1001B9900(v35, v36);
    Swift::Int v37 = (void *)sub_100221B30();
    ((void (**)(void, void *))a4)[2](a4, v37);

    swift_errorRelease();
    _Block_release(a4);
    swift_errorRelease();
    swift_release_n();
    goto LABEL_7;
  }
  uint64_t v67 = v21;
  uint64_t v64 = v11;
  uint64_t v65 = v8;
  uint64_t v66 = v7;
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  id v30 = a3;
  uint64_t v31 = sub_1001984DC(v30, 0xD000000000000019, 0x8000000100244240);

  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v31;
  v32[3] = sub_1001B1114;
  v32[4] = v29;
  uint64_t v33 = v79;
  if (a1 == 0x796C7065726F6ELL && v79 == (void (*)(void, void))0xE700000000000000
    || (sub_100222A30() & 1) != 0)
  {
    swift_release_n();
LABEL_7:
    swift_release();
    goto LABEL_8;
  }
  if (a1 == 110 && v33 == (void (*)(void, void))0xE100000000000000 || (sub_100222A30() & 1) != 0)
  {
    swift_release();
    swift_release_n();
    goto LABEL_8;
  }
  v63[1] = v31;
  if (a1 == 0x6863746170736964 && v33 == (void (*)(void, void))0xE800000000000000
    || ((char v51 = sub_100222A30(), a1 == 100)
      ? (BOOL v52 = v33 == (void (*)(void, void))0xE100000000000000)
      : (BOOL v52 = 0),
        !v52 ? (char v53 = 0) : (char v53 = 1),
        (v51 & 1) != 0 || (v53 & 1) != 0 || (sub_100222A30() & 1) != 0))
  {
    uint64_t v38 = v73;
    *uint64_t v73 = 1;
    (*(void (**)(void *, void, uint64_t))(v74 + 104))(v38, enum case for DispatchTimeInterval.seconds(_:), v75);
    sub_1000047D8(0, &qword_100298FF8);
    uint64_t v39 = v68;
    uint64_t v40 = v67;
    (*(void (**)(char *, void, uint64_t))(v68 + 104))(v24, enum case for DispatchQoS.QoSClass.userInitiated(_:), v67);
    swift_retain();
    swift_retain();
    v63[0] = sub_100222590();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
    uint64_t v41 = v69;
    sub_100222130();
    sub_100222140();
    id v42 = *(void (**)(void, void))(v78 + 8);
    v78 += 8;
    uint64_t v79 = v42;
    v42(v41, v77);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_1001B1120;
    *(void *)(v43 + 24) = v32;
    uint64_t v85 = sub_1001B1174;
    uint64_t v86 = v43;
    aBlock = _NSConcreteStackBlock;
    uint64_t v82 = 1107296256;
    uint64_t v44 = &unk_100283B70;
LABEL_16:
    uint64_t v83 = sub_10005A260;
    uint64_t v84 = v44;
    uint64_t v45 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v46 = v70;
    sub_100222100();
    id v80 = _swiftEmptyArrayStorage;
    sub_1001A56AC(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000046DC(&qword_100299850);
    sub_1001B46CC(&qword_100299858, &qword_100299850);
    uint64_t v47 = v71;
    uint64_t v48 = v66;
    sub_1002226C0();
    uint64_t v49 = v76;
    uint64_t v50 = (void *)v63[0];
    sub_100222540();
    _Block_release(v45);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v64);
    v79(v49, v77);
    (*(void (**)(void *, uint64_t))(v74 + 8))(v73, v75);
    swift_release_n();
    swift_release();
    goto LABEL_7;
  }
  uint64_t v54 = v67;
  if (a1 == 0xD000000000000010 && v33 == (void (*)(void, void))0x8000000100244260
    || ((char v60 = sub_100222A30(), a1 == 43)
      ? (BOOL v61 = v33 == (void (*)(void, void))0xE100000000000000)
      : (BOOL v61 = 0),
        !v61 ? (char v62 = 0) : (char v62 = 1),
        (v60 & 1) != 0
     || (v62 & 1) != 0
     || (sub_100222A30() & 1) != 0
     || a1 == 28260 && v33 == (void (*)(void, void))0xE200000000000000
     || (sub_100222A30() & 1) != 0
     || a1 == 7220580 && v33 == (void (*)(void, void))0xE300000000000000
     || (sub_100222A30() & 1) != 0))
  {
    id v55 = v73;
    *uint64_t v73 = 1;
    (*(void (**)(void *, void, uint64_t))(v74 + 104))(v55, enum case for DispatchTimeInterval.seconds(_:), v75);
    sub_1000047D8(0, &qword_100298FF8);
    uint64_t v56 = v68;
    (*(void (**)(char *, void, uint64_t))(v68 + 104))(v24, enum case for DispatchQoS.QoSClass.userInitiated(_:), v54);
    swift_retain();
    swift_retain();
    v63[0] = sub_100222590();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v54);
    uint64_t v57 = v69;
    sub_100222130();
    sub_100222140();
    uint64_t v58 = *(void (**)(void, void))(v78 + 8);
    v78 += 8;
    uint64_t v79 = v58;
    v58(v57, v77);
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = sub_1001B1120;
    *(void *)(v59 + 24) = v32;
    uint64_t v85 = ResetReason.rawValue.getter;
    uint64_t v86 = v59;
    aBlock = _NSConcreteStackBlock;
    uint64_t v82 = 1107296256;
    uint64_t v44 = &unk_100283B20;
    goto LABEL_16;
  }
  if (a1 == 0x722D656C62756F64 && v79 == (void (*)(void, void))0xEE00657361656C65
    || (sub_100222A30() & 1) != 0)
  {
    _Block_copy(a4);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1001B0184(0, v31, a4);
  }
  else
  {
    _Block_copy(a4);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  sub_1001B0184(0, v31, a4);
  _Block_release(a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
LABEL_8:
  _Block_release(a4);
  _Block_release(a4);
  _Block_release(a4);
}

uint64_t sub_1001B10D4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001B110C(uint64_t a1)
{
  sub_1001BA2B0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001B1114(uint64_t a1)
{
  return sub_1001BE40C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B1120(uint64_t a1)
{
  return sub_100184C80(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), (uint64_t (*)(void))&static os_log_type_t.debug.getter, "testSemaphore complete: %{public}s", 0xD000000000000019, 0x8000000100244240);
}

uint64_t sub_1001B1174()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

void sub_1001B11A4()
{
  sub_100181650(*(char **)(v0 + 16), *(void (**)(void, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001B11B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B11C0()
{
  swift_errorRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001B1228()
{
  return sub_1001B7958((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_100182F30);
}

uint64_t sub_1001B1240()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1250(uint64_t *a1)
{
  return sub_100183BE8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1001B1278(uint64_t a1)
{
  return sub_100183EA4(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001B1284()
{
  uint64_t v1 = (int *)(type metadata accessor for RemoveRecoveryKeyResponse(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  uint64_t v5 = sub_100221DF0();
  os_log_type_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for Changes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v7 + 24), *(void *)(v7 + 32));
    sub_100005A40(*(void *)(v7 + 40), *(void *)(v7 + 48));
    v6(v7 + *(int *)(v8 + 36), v5);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1001B1428()
{
  return sub_1001B1B40(type metadata accessor for RemoveRecoveryKeyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10018439C);
}

uint64_t sub_1001B1454()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001B1468(int16x8_t a1)
{
  a1.i64[0] = 0x4000200010000;
  sub_100180EDC(*(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), a1, *(void *)(v1 + 32), (SEL *)&selRef_isRecoveryKeyEnrolledWithError_, "recoveryKey is enrolled %{BOOL,public}d", "Error determining whether Recovery Key is enrolled: %{public}@");
}

uint64_t sub_1001B14A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001B14B8(objc_class *a1, uint64_t a2)
{
  sub_1001BE308(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001B14C0(uint64_t a1, uint64_t a2)
{
  return sub_1001BE26C(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

uint64_t sub_1001B14CC(uint64_t a1, uint64_t a2)
{
  return sub_1001726D8(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32), "fetchAccountSettings complete: %{public}s", 0xD000000000000027, 0x80000001002442C0);
}

uint64_t sub_1001B151C()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_1001B1554()
{
  return sub_100168FC8(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1001B1560()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1574(void *a1)
{
  return sub_100169360(a1, *(void *)(v1 + 16), *(objc_class **)(v1 + 24), *(objc_class **)(v1 + 32));
}

void sub_1001B1588()
{
  sub_100169688(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001B1594()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1001B15A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_100154F08();
  uint64_t v2 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  [*(id *)(v1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) setAccountSettings:0];
  uint64_t v3 = *(void **)(v1 + v2);

  return [v3 setAccountSettingsDate:0];
}

uint64_t sub_1001B1604()
{
  return _swift_deallocObject(v0, 32, 7);
}

int *sub_1001B1614(int *result)
{
  if (*(unsigned char *)(v1 + 16)) {
    int v2 = 17;
  }
  else {
    int v2 = 16;
  }
  if (*(unsigned char *)(v1 + 17)) {
    int v3 = 2;
  }
  else {
    int v3 = 0;
  }
  *uint64_t result = v3 | v2;
  return result;
}

uint64_t sub_1001B1640()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001B1690(uint64_t a1)
{
  return sub_1001B3794(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100140C68);
}

uint64_t sub_1001B16AC()
{
  return sub_1001B3380((uint64_t (*)(void, void, void, void, void, void, void))sub_10014F0F8);
}

uint64_t sub_1001B16C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B16D4(uint64_t *a1)
{
  return sub_100179B30(a1, v1[2], v1[3], v1[4], v1[5], (uint64_t)sub_1001B1738);
}

uint64_t sub_1001B170C(uint64_t a1)
{
  return sub_10014F8EC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

void sub_1001B1718()
{
  sub_10017A704(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1001B1738(uint64_t *a1)
{
  return sub_10014E7A8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001B1754()
{
  return sub_1001B326C((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1001B176C()
{
  sub_100140E28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1001B1778()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1788()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001B17E0()
{
  return sub_1001B3424((uint64_t (*)(void, void, void, void, void, void, void, void))sub_1001397F8);
}

uint64_t sub_1001B17F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1808()
{
  swift_bridgeObjectRelease();

  sub_100005A40(*(void *)(v0 + 64), *(void *)(v0 + 72));
  sub_100005A40(*(void *)(v0 + 80), *(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1001B1880()
{
  return sub_10013AE94(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(char **)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), *(void *)(v0 + 120));
}

uint64_t sub_1001B18C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B18D0(uint64_t *a1)
{
  return sub_10013B740(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1001B190C()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B1954(uint64_t a1)
{
  return sub_10013B978(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001B1960()
{
  uint64_t v1 = (int *)(type metadata accessor for SetRecoveryKeyResponse(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + v3 + v1[8];
  uint64_t v9 = type metadata accessor for Changes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v8 + 24), *(void *)(v8 + 32));
    sub_100005A40(*(void *)(v8 + 40), *(void *)(v8 + 48));
    v7(v8 + *(int *)(v9 + 36), v6);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1001B1B14()
{
  return sub_1001B1B40(type metadata accessor for SetRecoveryKeyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10013BE70);
}

uint64_t sub_1001B1B40(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = v2 + v4;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return a2(v5, v6, v7, v9, v10);
}

uint64_t sub_1001B1BF0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1C00(uint64_t *a1)
{
  return sub_100044A1C(a1, *(id *)(v1 + 16));
}

uint64_t sub_1001B1C20(uint64_t a1, uint64_t a2)
{
  return sub_1001726D8(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32), "fetchPolicyDocuments complete: %{public}s", 0xD000000000000025, 0x8000000100244480);
}

uint64_t sub_1001B1C70(uint64_t a1, uint64_t a2)
{
  return sub_10015A9D0(a1, a2, *(void (**)(Swift::Int, uint64_t))(v2 + 16));
}

uint64_t sub_1001B1C78()
{
  return sub_10015AD28(*(unint64_t **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1001B1C84()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1C94(void *a1)
{
  return sub_10015B258(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1001B1CB0()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B1CCC()
{
  uint64_t v1 = (int *)(type metadata accessor for FetchPolicyDocumentsResponse(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

void sub_1001B1E00()
{
  uint64_t v1 = *(void *)(type metadata accessor for FetchPolicyDocumentsResponse(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void (**)(void, uint64_t))(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  uint64_t v8 = *(uint64_t **)(v0 + v4);
  uint64_t v9 = *(void *)(v0 + v5);
  uint64_t v10 = *(char **)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_10015BBEC((uint64_t *)(v0 + v2), v6, v7, v8, v9, v10);
}

uint64_t sub_1001B1EB4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1EC4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001B1ED0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000047D8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B1F20(void *a1)
{
  return sub_10015B648(a1, *(id *)(v1 + 16));
}

uint64_t sub_1001B1F3C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1001B1F94(int a1, uint64_t a2)
{
  sub_1001AD340(a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(id *)(v2 + 40), *(NSObject **)(v2 + 48), *(void (**)(NSObject *, id, id))(v2 + 56));
}

uint64_t sub_1001B1FAC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B1FBC()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B1FD4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001B2024()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001B207C()
{
  return sub_1001B3380((uint64_t (*)(void, void, void, void, void, void, void))sub_1001710AC);
}

uint64_t sub_1001B2094()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B20A4(uint64_t *a1)
{
  return sub_100171CAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1001B20C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100172044(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16));
}

uint64_t sub_1001B20D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(a1, a3);
}

uint64_t sub_1001B2100()
{
  swift_release();

  if (*(void *)(v0 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 145, 7);
}

uint64_t sub_1001B2180(uint64_t a1)
{
  return sub_100176884(a1, *(void (**)(void, void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (void *)(v1 + 40), *(unsigned char *)(v1 + 144));
}

void sub_1001B2194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  if (a2 != 1)
  {
    id v14 = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = a11;
    id v16 = a12;
  }
}

uint64_t sub_1001B222C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1001B2284()
{
  sub_10016BA4C(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void, void, void *, void, uint64_t))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1001B2294()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B22A4()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v0 + 96), *(void *)(v0 + 104));
  sub_100005A40(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_100005A40(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_100005A40(*(void *)(v0 + 144), *(void *)(v0 + 152));

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_1001B2334(uint64_t a1, uint64_t a2)
{
  return sub_1001B7690(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10016C7CC);
}

uint64_t sub_1001B234C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v0 + 104), *(void *)(v0 + 112));
  sub_100005A40(*(void *)(v0 + 120), *(void *)(v0 + 128));
  sub_100005A40(*(void *)(v0 + 136), *(void *)(v0 + 144));
  sub_100005A40(*(void *)(v0 + 152), *(void *)(v0 + 160));

  return _swift_deallocObject(v0, 168, 7);
}

uint64_t sub_1001B23E4()
{
  return sub_1001B3848((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10016D000);
}

uint64_t sub_1001B23FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B240C(uint64_t a1)
{
  return sub_10016F4AC(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1001B2434()
{
  uint64_t v1 = (int *)type metadata accessor for Peer(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[6];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + v3 + v1[7];
  uint64_t v9 = type metadata accessor for SignedPeerPermanentInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v4 + v1[8];
  uint64_t v11 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
    sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
    v7(v10 + *(int *)(v11 + 24), v6);
  }
  uint64_t v12 = v4 + v1[9];
  uint64_t v13 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    sub_100005A40(*(void *)v12, *(void *)(v12 + 8));
    sub_100005A40(*(void *)(v12 + 16), *(void *)(v12 + 24));
    v7(v12 + *(int *)(v13 + 24), v6);
  }
  uint64_t v14 = v4 + v1[10];
  uint64_t v15 = type metadata accessor for SignedRecoveryVoucher(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    sub_100005A40(*(void *)v14, *(void *)(v14 + 8));
    sub_100005A40(*(void *)(v14 + 16), *(void *)(v14 + 24));
    v7(v14 + *(int *)(v15 + 24), v6);
  }
  uint64_t v16 = v4 + v1[11];
  uint64_t v17 = type metadata accessor for SignedCustodianRecoveryKey(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    sub_100005A40(*(void *)v16, *(void *)(v16 + 8));
    sub_100005A40(*(void *)(v16 + 16), *(void *)(v16 + 24));
    v7(v16 + *(int *)(v17 + 24), v6);
  }
  unint64_t v18 = (v21 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1001B27F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Peer(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_10016F870(a1, *(char **)(v1 + 16), v1 + v4, *(void **)(v1 + v5), *(void **)(v1 + v6), *(void (**)(void, void, void *, void, uint64_t))(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001B28BC()
{
  uint64_t v1 = (int *)type metadata accessor for Peer(0);
  uint64_t v25 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v25 + 24) & ~v25;
  unint64_t v22 = (*(void *)(*((void *)v1 - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = type metadata accessor for JoinWithVoucherResponse(0);
  uint64_t v26 = *(unsigned __int8 *)(*(void *)(v23 - 8) + 80);
  uint64_t v24 = *(void *)(*(void *)(v23 - 8) + 64);

  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v2 + v1[6];
  uint64_t v5 = sub_100221DF0();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v3 + v1[7];
  uint64_t v8 = type metadata accessor for SignedPeerPermanentInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    sub_100005A40(*(void *)v7, *(void *)(v7 + 8));
    sub_100005A40(*(void *)(v7 + 16), *(void *)(v7 + 24));
    v6(v7 + *(int *)(v8 + 24), v5);
  }
  unint64_t v9 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v3 + v1[8];
  uint64_t v11 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
    sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
    v6(v10 + *(int *)(v11 + 24), v5);
  }
  uint64_t v12 = v3 + v1[9];
  uint64_t v13 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    sub_100005A40(*(void *)v12, *(void *)(v12 + 8));
    sub_100005A40(*(void *)(v12 + 16), *(void *)(v12 + 24));
    v6(v12 + *(int *)(v13 + 24), v5);
  }
  uint64_t v14 = v3 + v1[10];
  uint64_t v15 = type metadata accessor for SignedRecoveryVoucher(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    sub_100005A40(*(void *)v14, *(void *)(v14 + 8));
    sub_100005A40(*(void *)(v14 + 16), *(void *)(v14 + 24));
    v6(v14 + *(int *)(v15 + 24), v5);
  }
  uint64_t v16 = (v9 + v26 + 8) & ~v26;
  uint64_t v17 = v3 + v1[11];
  uint64_t v18 = type metadata accessor for SignedCustodianRecoveryKey(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    sub_100005A40(*(void *)v17, *(void *)(v17 + 8));
    sub_100005A40(*(void *)(v17 + 16), *(void *)(v17 + 24));
    v6(v17 + *(int *)(v18 + 24), v5);
  }

  swift_bridgeObjectRelease();
  v6(v0 + v16 + *(int *)(v23 + 20), v5);
  uint64_t v19 = v0 + v16 + *(int *)(v23 + 24);
  uint64_t v20 = type metadata accessor for Changes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v19 + 24), *(void *)(v19 + 32));
    sub_100005A40(*(void *)(v19 + 40), *(void *)(v19 + 48));
    v6(v19 + *(int *)(v20 + 36), v5);
  }
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v24 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v25 | v26 | 7);
}

void sub_1001B2DA4()
{
  uint64_t v1 = *(void *)(type metadata accessor for Peer(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for JoinWithVoucherResponse(0) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10016FE88(*(void *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(NSObject **)(v0 + v4), (uint64_t *)(v0 + v6), *(void (**)(uint64_t, id, void *, NSObject *, void))(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001B2ED0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001B2EE0(uint64_t *a1@<X8>)
{
  sub_10016A3DC(*(void *)(v1 + 16), *(void (**)(void, uint64_t))(v1 + 24), a1);
}

uint64_t sub_1001B2F04(uint64_t a1, uint64_t a2)
{
  return sub_1001AE990(a2, *(char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1001B2F14()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B2F24()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

void sub_1001B2F40()
{
  sub_10016A6C4(*(char **)(v0 + 16), *(void (**)(uint64_t, id))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001B2F4C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B2F60()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B2FA8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B2FB8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001B3018(uint64_t a1, uint64_t a2)
{
  return sub_1001B4658(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_10014ADEC);
}

uint64_t sub_1001B3030()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001B3098(uint64_t a1, uint64_t a2)
{
  return sub_1001B81F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_10014B110);
}

uint64_t sub_1001B30B0()
{
  return swift_release();
}

uint64_t sub_1001B30B8()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001B3118(uint64_t a1, uint64_t a2)
{
  return sub_1001B78B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_100148858);
}

uint64_t sub_1001B3130()
{
  return sub_1001B3AE0((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1001B3148(void *a1, uint64_t a2)
{
  sub_10014646C(a1, a2, *(void (**)(void, void, id))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(NSObject **)(v2 + 56));
}

uint64_t sub_1001B3158()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001B31C0(uint64_t a1, uint64_t a2)
{
  return sub_1001B34D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void))sub_1001449E4);
}

uint64_t sub_1001B31D8()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B3220(uint64_t a1, void *a2)
{
  return sub_1000486A0(a1, a2, *(void *)(v2 + 16), *(objc_class **)(v2 + 24), *(objc_class **)(v2 + 32), *(objc_class **)(v2 + 40));
}

uint64_t sub_1001B322C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B323C()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B3254()
{
  return sub_1001B326C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B326C(void (*a1)(void))
{
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1001B32C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B32D8(uint64_t a1, uint64_t a2)
{
  return sub_1001B78B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_100046034);
}

uint64_t sub_1001B32F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3300()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B3318()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001B3368()
{
  return sub_1001B3380((uint64_t (*)(void, void, void, void, void, void, void))sub_10004605C);
}

uint64_t sub_1001B3380(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1001B339C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B33AC()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001B340C()
{
  return sub_1001B3424((uint64_t (*)(void, void, void, void, void, void, void, void))sub_100142ADC);
}

uint64_t sub_1001B3424(uint64_t (*a1)(void, void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1001B3440()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3450()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001B34C0(uint64_t a1, uint64_t a2)
{
  return sub_1001B34D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void))sub_100143834);
}

uint64_t sub_1001B34D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[10], v3[11]);
}

uint64_t sub_1001B351C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001B3564(uint64_t a1, uint64_t a2)
{
  return sub_100041C38(a1, a2, *(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1001B3574()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3584()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B359C()
{
  swift_errorRelease();
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001B35EC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001B3618()
{
  return sub_1001B3848((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100135674);
}

uint64_t sub_1001B3630()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3640(uint64_t a1)
{
  return sub_100044808(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001B365C(uint64_t a1)
{
  return sub_100137E60(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001B367C()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001B36EC(uint64_t a1)
{
  return sub_1001380A0(a1, *(void *)(v1 + 16), *(uint8_t **)(v1 + 24), *(void **)(v1 + 32), *(NSObject **)(v1 + 40), *(void (**)(uint64_t, uint64_t, void *, NSObject *, uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_1001B372C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001B377C(uint64_t a1)
{
  return sub_1001B3794(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100139304);
}

uint64_t sub_1001B3794(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1001B37B0()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v0 + 104), *(void *)(v0 + 112));
  sub_100005A40(*(void *)(v0 + 120), *(void *)(v0 + 128));
  sub_100005A40(*(void *)(v0 + 136), *(void *)(v0 + 144));
  sub_100005A40(*(void *)(v0 + 152), *(void *)(v0 + 160));

  return _swift_deallocObject(v0, 168, 7);
}

uint64_t sub_1001B3848(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18], v1[19], v1[20]);
}

uint64_t sub_1001B38A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B38B0()
{
  swift_release();
  swift_errorRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1001B3940(void *a1, uint64_t a2)
{
  return sub_10012FDD0(a1, a2, *(void (**)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(char **)(v2 + 48), *(_DWORD *)(v2 + 56), *(void **)(v2 + 64), *(void *)(v2 + 72), *(void **)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void **)(v2 + 136), *(void *)(v2 + 144));
}

void sub_1001B3994(uint64_t a1, uint64_t a2)
{
  sub_10015AA64(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1001B39A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B39B0()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B39C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 144, 7);
}

void sub_1001B3A50()
{
  sub_1001302A0(*(unsigned int *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void **)(v0 + 104), *(void *)(v0 + 112), *(void (**)(void, void, void, void, void))(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136));
}

uint64_t sub_1001B3A9C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3AAC(uint64_t *a1)
{
  return sub_10013185C(a1, v1);
}

uint64_t sub_1001B3AC8()
{
  return sub_1001B3AE0((void (*)(void))&_swift_release);
}

uint64_t sub_1001B3AE0(void (*a1)(void))
{
  swift_release();

  a1(*(void *)(v1 + 56));

  return _swift_deallocObject(v1, 64, 7);
}

uint64_t sub_1001B3B48(uint64_t a1)
{
  return sub_1001318CC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

__n128 sub_1001B3B58(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1001BADA0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, *(void *)(v12 + 16));
  return result;
}

uint64_t sub_1001B3B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1001BA98C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, *(void *)(v12 + 16), *(void *)(v12 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v12 + 32));
}

uint64_t sub_1001B3BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_10012BB70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, *(void *)(v12 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 24));
}

uint64_t sub_1001B3C18()
{
  swift_release();
  swift_errorRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_1001B3CB0(void *a1, uint64_t a2)
{
  return sub_10012BEE0(a1, a2, *(void (**)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(char **)(v2 + 48), *(_DWORD *)(v2 + 56), *(void **)(v2 + 64), *(void **)(v2 + 72), *(void *)(v2 + 80), *(void **)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void **)(v2 + 144),
           *(void **)(v2 + 152));
}

uint64_t sub_1001B3D04()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3D14()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B3D30()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B3D84()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3D98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1001B3E28()
{
  return sub_10012C3B8(*(unsigned int *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, NSObject *, uint64_t))(v0 + 136));
}

uint64_t sub_1001B3E74()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3E84(unsigned char *a1)
{
  return sub_10012B4B4(a1, v1[16], v1[17], v1[18]);
}

uint64_t sub_1001B3EA8(uint64_t a1)
{
  return sub_10012B6EC(a1, *(void (**)(uint64_t))(v1 + 16));
}

void sub_1001B3EB4(void *a1)
{
  sub_100123C04(a1, *(void *)(v1 + 16), *(objc_class **)(v1 + 24), *(objc_class **)(v1 + 32));
}

void sub_1001B3EC4()
{
  sub_100121BE0(*(void (**)(id, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001B3EF0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001B3F00(void *a1, unsigned char *a2)
{
  sub_10011D638(a1, a2, *(void (**)(id, char *))(v2 + 16));
}

uint64_t sub_1001B3F1C(void *a1)
{
  return sub_10011D7D8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001B3F24(uint64_t a1)
{
  return sub_10011D888(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1001B3F40(uint64_t a1)
{
  return sub_100204554(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001B3F48(void *a1)
{
  return sub_100207520(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1001B3F64(void *a1, unsigned char *a2)
{
  sub_10011C1A4(a1, a2, *(void *)(v2 + 16), *(void (**)(void *, char *))(v2 + 24));
}

uint64_t sub_1001B3F84(unint64_t a1)
{
  return sub_10011C248(a1, v1);
}

uint64_t sub_1001B3FA0(unint64_t a1)
{
  return sub_10011AE8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B3FBC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1001B3FD8(void *a1, void *a2, uint64_t a3)
{
  return sub_1001869F4(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(void, void, void))(v3 + 24));
}

uint64_t sub_1001B3FE4(uint64_t a1)
{
  return sub_100186CB0(a1, *(id *)(v1 + 16));
}

uint64_t sub_1001B4000(void *a1)
{
  return sub_1001B4090(a1);
}

uint64_t sub_1001B4018(uint64_t a1)
{
  return sub_100186DD4(a1, *(void (**)(void *, void *, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B4024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001855E8(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(void, void, void))(v3 + 24), *(void *)(v3 + 32), "fetchCurrentItem complete: %{public}s", 0xD00000000000001ELL, 0x8000000100244C50);
}

uint64_t sub_1001B4074(uint64_t *a1)
{
  return sub_100185864(a1, *(id *)(v1 + 16));
}

uint64_t sub_1001B4090(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1001B40DC(uint64_t a1)
{
  return sub_100185910(a1, *(void (**)(void *, void *, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B40E4(uint64_t *a1)
{
  return sub_100180B5C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1001B4104()
{
  swift_release();
  if (*(void *)(v0 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 152, 7);
}

void sub_1001B4184()
{
  sub_100176C64(*(char **)(v0 + 16), *(void (**)(id, void, void))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), (void *)(v0 + 48));
}

uint64_t sub_1001B4198()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1001B41A8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void sub_1001B4204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1001B4298(uint64_t *a1@<X8>)
{
  sub_1001779B8(*(void *)(v1 + 16), *(void (**)(void, void, uint64_t))(v1 + 24), a1);
}

uint64_t sub_1001B42BC(uint64_t a1, uint64_t a2)
{
  return sub_10019F660(a2, *(char **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), (void *)(v2 + 48), *(void **)(v2 + 152), *(void *)(v2 + 160), *(void *)(v2 + 168), *(unsigned char *)(v2 + 176), *(void **)(v2 + 184));
}

uint64_t sub_1001B4308()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4318()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B4338()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4348(uint64_t *a1)
{
  return sub_100179B30(a1, v1[2], v1[3], v1[4], v1[5], (uint64_t)sub_1001B8874);
}

uint64_t sub_1001B4380()
{
  swift_release();
  if (*(void *)(v0 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 145, 7);
}

uint64_t sub_1001B4400(uint64_t a1)
{
  return sub_100179E50(a1, *(void **)(v1 + 16), *(void (**)(void, void, uint64_t))(v1 + 24), *(void *)(v1 + 32), (void *)(v1 + 40), *(unsigned __int8 *)(v1 + 144));
}

uint64_t sub_1001B4418()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

void sub_1001B44B8()
{
  sub_100177CA4(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), (char *)(v0 + 48), *(void **)(v0 + 152), *(void (**)(void, void, void))(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176), *(id *)(v0 + 184));
}

uint64_t sub_1001B44FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B450C(uint64_t a1)
{
  return sub_1001758B0(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B4530(uint64_t a1)
{
  return sub_10017593C(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(void))(v1 + 32), *(char **)(v1 + 40));
}

uint64_t sub_1001B4544()
{
  return sub_100176664(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001B4550()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4560()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001B45A0()
{
  sub_100174FB0(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001B45B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B45C4()
{
  return sub_100174DB8(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001B45D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B45E0()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001B4640(uint64_t a1, uint64_t a2)
{
  return sub_1001B4658(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_100173DC8);
}

uint64_t sub_1001B4658(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9]);
}

uint64_t sub_1001B4698()
{
  return sub_1001B7958((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_100174158);
}

uint64_t sub_1001B46B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B46C0(unint64_t a1, char a2)
{
  return sub_100174A58(a1, a2 & 1, *(void (**)(void, unint64_t))(v2 + 16));
}

uint64_t sub_1001B46CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004870(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B4710()
{
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001B4720()
{
  sub_100004788(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001B4758(uint64_t *a1)
{
  return sub_1001B4A54(a1);
}

uint64_t sub_1001B4778()
{
  uint64_t v1 = (int *)(type metadata accessor for UpdateTrustResponse(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = sub_100221DF0();
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + v3 + v1[8];
  uint64_t v9 = type metadata accessor for Changes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v8 + 24), *(void *)(v8 + 32));
    sub_100005A40(*(void *)(v8 + 40), *(void *)(v8 + 48));
    v7(v8 + *(int *)(v9 + 36), v6);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((((((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8, v2 | 7);
}

uint64_t sub_1001B4970()
{
  uint64_t v1 = *(void *)(type metadata accessor for UpdateTrustResponse(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001730D0(*(void **)(v0 + 16), (uint64_t *)(v0 + v2), *(void (**)(uint64_t, void))(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v4), *(void **)(v0 + v5), *(void **)(v0 + v5 + 8), *(void **)(v0 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0+ ((((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001B4A44()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4A54(uint64_t *a1)
{
  return sub_100172950(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1001B4A7C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001B4AE4(uint64_t a1)
{
  return sub_100172CDC(a1, *(char **)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1001B4B1C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1001B4B2C(uint64_t a1, uint64_t a2)
{
  return sub_1001726D8(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32), "updateTLKs complete: %{public}s", 0xD000000000000025, 0x8000000100244D20);
}

uint64_t sub_1001B4B7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001B4BCC()
{
  return sub_100173740(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void, uint64_t))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1001B4BFC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4C0C(char a1, uint64_t a2)
{
  return sub_100168558(a1, a2, *(uint64_t (**)(void, uint64_t))(v2 + 16));
}

uint64_t sub_1001B4C18(uint64_t a1)
{
  return sub_100168804(a1, *(uint64_t (**)(void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32));
}

void sub_1001B4C28(int16x8_t a1)
{
  a1.i64[0] = 0x4000000010000;
  sub_100180EDC(*(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), a1, *(void *)(v1 + 32), (SEL *)&selRef_doesOctagonContainDistrustedRecoveryKeysWithError_, "distrusted recovery keys exist: %{BOOL}d", "error determining whether octagon contains distrusted RKs: %{public}@");
}

uint64_t sub_1001B4C68()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4C78(void *a1, uint64_t a2)
{
  return sub_100167E68(a1, a2, *(uint64_t (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1001B4C84(uint64_t a1)
{
  return sub_100168144(a1, *(uint64_t (**)(void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32));
}

void sub_1001B4C94()
{
  sub_1001682DC(*(void (**)(id, id))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001B4CA0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4CB4(uint64_t a1, uint64_t a2)
{
  return sub_1001726D8(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32), "health check complete: %{public}s", 0xD00000000000005DLL, 0x8000000100244D50);
}

uint64_t sub_1001B4D04()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_1001B4D5C()
{
  return sub_100166734(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned __int8 *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
}

uint64_t sub_1001B4DA0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B4DB0(void *a1)
{
  return sub_100166BC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001B4DD0(uint64_t a1)
{
  return sub_100166C58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1001B4DFC(uint64_t a1)
{
  return sub_100166DF0(a1, *(void (**)(id, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B4E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10016B460(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(void, void, void, void, void))(v5 + 24), *(void *)(v5 + 32), "join complete: %{public}s", 0xD000000000000074, 0x8000000100244DB0);
}

void sub_1001B4E5C()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void (*)(void))off_1002B0598;
  unint64_t v7 = off_1002B0598;
  if (!off_1002B0598)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1001B8660;
    v3[3] = &unk_100282FC0;
    v3[4] = &v4;
    sub_1001B8660(v3);
    uint64_t v0 = (void (*)(void))v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (v0)
  {
    v0();
  }
  else
  {
    uint64_t v1 = +[NSAssertionHandler currentHandler];
    uint64_t v2 = +[NSString stringWithUTF8String:"_Bool soft_MetricsOverrideTestsAreEnabled(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"TrustedPeersHelper-Bridging-Header.h", 90, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1001B4F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B4F90()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100005A40(*(void *)(v0 + 104), *(void *)(v0 + 112));
  sub_100005A40(*(void *)(v0 + 120), *(void *)(v0 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 160, 7);
}

void sub_1001B5018(uint64_t a1)
{
  sub_10015FFA0(a1, *(void (**)(void, void, void *, void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88), *(void **)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152));
}

void sub_1001B5074(uint64_t *a1@<X8>)
{
  sub_10016038C(*(void *)(v1 + 16), *(void (**)(void, void, void *, void, uint64_t))(v1 + 24), a1);
}

uint64_t sub_1001B5094()
{
  sub_100005A40(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_100005A40(*(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 153, 7);
}

uint64_t sub_1001B511C(uint64_t a1, uint64_t a2)
{
  return sub_1001ADEB0(a2, *(void **)(v2 + 16), *(char **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144), *(unsigned char *)(v2 + 152));
}

uint64_t sub_1001B5178()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B5188()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B51A0()
{
  sub_100005A40(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_100005A40(*(void *)(v0 + 32), *(void *)(v0 + 40));
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 145, 7);
}

void sub_1001B5220()
{
  sub_100160684(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void, void, void *, void, uint64_t))(v0 + 48), *(void *)(v0 + 56), *(char **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 144));
}

uint64_t sub_1001B5270()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B5280()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_100005A40(*(void *)(v0 + 128), *(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 193, 7);
}

uint64_t sub_1001B5328(void *a1, uint64_t a2)
{
  return sub_1001615F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(char **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64), *(void **)(v2 + 72), *(void *)(v2 + 80), *(void **)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144),
           *(void *)(v2 + 152),
           *(void *)(v2 + 160),
           *(void *)(v2 + 168),
           *(void *)(v2 + 176),
           *(void *)(v2 + 184),
           *(unsigned char *)(v2 + 192));
}

uint64_t sub_1001B5384()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v0 + 120), *(void *)(v0 + 128));
  sub_100005A40(*(void *)(v0 + 136), *(void *)(v0 + 144));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 201, 7);
}

uint64_t sub_1001B5434()
{
  return sub_100161ABC(*(char **)(v0 + 16), *(char **)(v0 + 24), *(char **)(v0 + 32), *(void **)(v0 + 40), *(objc_class **)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(char **)(v0 + 72), *(void **)(v0 + 80), *(void (**)(void, void, void *, void, uint64_t))(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(objc_class **)(v0 + 152), *(void **)(v0 + 160),
           *(char **)(v0 + 168),
           *(char **)(v0 + 176),
           *(void *)(v0 + 184),
           *(char **)(v0 + 192),
           *(unsigned char *)(v0 + 200));
}

uint64_t sub_1001B5494()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B54A4(uint64_t a1)
{
  return sub_100164A00(a1, *(id *)(v1 + 16));
}

uint64_t sub_1001B54C0(uint64_t a1)
{
  return sub_100164AAC(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1001B54F4()
{
  uint64_t v1 = (int *)type metadata accessor for Peer(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 65) & ~v2;
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[6];
  uint64_t v6 = sub_100221DF0();
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + v3 + v1[7];
  uint64_t v9 = type metadata accessor for SignedPeerPermanentInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v4 + v1[8];
  uint64_t v11 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
    sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
    v7(v10 + *(int *)(v11 + 24), v6);
  }
  uint64_t v12 = v4 + v1[9];
  uint64_t v13 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    sub_100005A40(*(void *)v12, *(void *)(v12 + 8));
    sub_100005A40(*(void *)(v12 + 16), *(void *)(v12 + 24));
    v7(v12 + *(int *)(v13 + 24), v6);
  }
  uint64_t v14 = v4 + v1[10];
  uint64_t v15 = type metadata accessor for SignedRecoveryVoucher(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    sub_100005A40(*(void *)v14, *(void *)(v14 + 8));
    sub_100005A40(*(void *)(v14 + 16), *(void *)(v14 + 24));
    v7(v14 + *(int *)(v15 + 24), v6);
  }
  uint64_t v16 = v4 + v1[11];
  uint64_t v17 = type metadata accessor for SignedCustodianRecoveryKey(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    sub_100005A40(*(void *)v16, *(void *)(v16 + 8));
    sub_100005A40(*(void *)(v16 + 16), *(void *)(v16 + 24));
    v7(v16 + *(int *)(v17 + 24), v6);
  }
  unint64_t v18 = (v21 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1001B58C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Peer(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_100164EF0(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), v1 + v4, *(void **)(v1 + v5), *(void **)(v1 + v6), *(void (**)(void, void, void *, void, uint64_t))(v1 + v7), *(void *)(v1 + v7 + 8), *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001B59AC()
{
  uint64_t v1 = (int *)type metadata accessor for Peer(0);
  uint64_t v25 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v25 + 72) & ~v25;
  unint64_t v22 = (*(void *)(*((void *)v1 - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = type metadata accessor for JoinWithVoucherResponse(0);
  uint64_t v26 = *(unsigned __int8 *)(*(void *)(v23 - 8) + 80);
  uint64_t v24 = *(void *)(*(void *)(v23 - 8) + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v2 + v1[6];
  uint64_t v5 = sub_100221DF0();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v3 + v1[7];
  uint64_t v8 = type metadata accessor for SignedPeerPermanentInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    sub_100005A40(*(void *)v7, *(void *)(v7 + 8));
    sub_100005A40(*(void *)(v7 + 16), *(void *)(v7 + 24));
    v6(v7 + *(int *)(v8 + 24), v5);
  }
  unint64_t v9 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v3 + v1[8];
  uint64_t v11 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
    sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
    v6(v10 + *(int *)(v11 + 24), v5);
  }
  uint64_t v12 = v3 + v1[9];
  uint64_t v13 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    sub_100005A40(*(void *)v12, *(void *)(v12 + 8));
    sub_100005A40(*(void *)(v12 + 16), *(void *)(v12 + 24));
    v6(v12 + *(int *)(v13 + 24), v5);
  }
  uint64_t v14 = v3 + v1[10];
  uint64_t v15 = type metadata accessor for SignedRecoveryVoucher(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    sub_100005A40(*(void *)v14, *(void *)(v14 + 8));
    sub_100005A40(*(void *)(v14 + 16), *(void *)(v14 + 24));
    v6(v14 + *(int *)(v15 + 24), v5);
  }
  uint64_t v16 = (v9 + v26 + 8) & ~v26;
  uint64_t v17 = v3 + v1[11];
  uint64_t v18 = type metadata accessor for SignedCustodianRecoveryKey(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    sub_100005A40(*(void *)v17, *(void *)(v17 + 8));
    sub_100005A40(*(void *)(v17 + 16), *(void *)(v17 + 24));
    v6(v17 + *(int *)(v18 + 24), v5);
  }

  swift_bridgeObjectRelease();
  v6(v0 + v16 + *(int *)(v23 + 20), v5);
  uint64_t v19 = v0 + v16 + *(int *)(v23 + 24);
  uint64_t v20 = type metadata accessor for Changes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v19 + 24), *(void *)(v19 + 32));
    sub_100005A40(*(void *)(v19 + 40), *(void *)(v19 + 48));
    v6(v19 + *(int *)(v20 + 36), v5);
  }
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v24 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v25 | v26 | 7);
}

void sub_1001B5EAC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Peer(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for JoinWithVoucherResponse(0) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100165598(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), (void (*)(uint64_t, id, void *, NSObject *, void))(v0 + v2), *(void **)(v0 + v3), *(NSObject **)(v0 + v4), (void *)(v0 + v6), *(void (**)(uint64_t, id, void *, NSObject *, void))(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001B5FF4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6004(void *a1)
{
  return sub_10015F844(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64));
}

void sub_1001B602C(void *a1@<X8>)
{
  sub_10015A8F4(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1001B6048(uint64_t a1)
{
  return sub_100157598(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001B606C(uint64_t a1)
{
  return sub_1001578F8(a1, *(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1001B6078(void *a1@<X8>)
{
  sub_100157CF0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1001B6094(void *a1)
{
  return sub_100157864(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001B60B8()
{
  return sub_10015605C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(uint64_t, void))(v0 + 32));
}

uint64_t sub_1001B60C8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B60D8(void *a1)
{
  return sub_100156250(a1);
}

uint64_t sub_1001B60E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100156B6C(*(uint64_t (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  if (!v2)
  {
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_1001B6120(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001B6130()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B6170()
{
  return sub_100155AC8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(uint64_t, uint64_t, void))(v0 + 32));
}

uint64_t sub_1001B6180()
{
  return _swift_deallocObject(v0, 32, 7);
}

BOOL sub_1001B6190(uint64_t *a1)
{
  return sub_100155CC4(a1);
}

uint64_t sub_1001B6198@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100156404(*(uint64_t (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  if (!v2)
  {
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1001B61DC(uint64_t a1, char a2)
{
  return sub_100155618(a1, a2 & 1, *(uint64_t (**)(uint64_t, void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1001B61F0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100158B18(a1, a2, a3 & 1, *(void (**)(uint64_t, void))(v3 + 16));
}

uint64_t sub_1001B6200@<X0>(uint64_t a1@<X8>)
{
  return sub_100158BCC(*(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

uint64_t sub_1001B622C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001B627C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1001551FC(a1, a2, a3 & 1, *(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64));
}

uint64_t sub_1001B62B8(uint64_t a1)
{
  return sub_100184C80(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), (uint64_t (*)(void))&static os_log_type_t.info.getter, "removeEscrowCache complete %{public}s", 0xD000000000000019, 0x8000000100244E30);
}

uint64_t sub_1001B6310()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  sub_100154F08();
  return v1(0);
}

uint64_t sub_1001B6354()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6364(id *a1)
{
  return sub_100154B04(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001B6384(id *a1)
{
  return sub_100153A9C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001B63A4(void **a1)
{
  return sub_100153620(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001B63C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100151044(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24), *(void *)(v7 + 32), "fetchEscrowContents complete: %{public}s", 0xD00000000000001BLL, 0x8000000100244E70);
}

uint64_t sub_1001B6424()
{
  return sub_1001512E4(*(void *)(v0 + 16), *(void (**)(void, unint64_t, void, void, void, unint64_t, uint64_t))(v0 + 24));
}

uint64_t sub_1001B6430()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10016B460(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(void, void, void, void, void))(v5 + 24), *(void *)(v5 + 32), "vouch complete: %{public}s", 0xD000000000000083, 0x8000000100244E90);
}

uint64_t sub_1001B6498()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v0 + 56), *(void *)(v0 + 64));
  sub_100005A40(*(void *)(v0 + 72), *(void *)(v0 + 80));
  sub_100005A40(*(void *)(v0 + 88), *(void *)(v0 + 96));
  sub_100005A40(*(void *)(v0 + 104), *(void *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_1001B6520()
{
  return sub_10014BA80(*(char **)(v0 + 16), *(void (**)(void, unint64_t, void, unint64_t, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160),
           *(unsigned char *)(v0 + 168),
           *(void *)(v0 + 176));
}

uint64_t sub_1001B6580()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6590()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_1001B6618(void *a1, uint64_t a2)
{
  return sub_10014C46C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(uint64_t (**)(void, unint64_t, void, unint64_t, uint64_t))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(unsigned char *)(v2 + 104), *(void **)(v2 + 112), *(void **)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144),
           *(void **)(v2 + 152));
}

uint64_t sub_1001B666C()
{
  swift_errorRelease();

  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_1001B6704(uint64_t a1, uint64_t a2)
{
  return sub_1001AC780(a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(uint64_t (**)(void, unint64_t, void, unint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(char **)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void **)(v2 + 88), *(void *)(v2 + 96), *(void **)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144), *(void *)(v2 + 152));
}

uint64_t sub_1001B6760()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B6798()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B67A8()
{
  return sub_1001B779C((void (*)(void))&_swift_release);
}

uint64_t sub_1001B67C0(uint64_t a1)
{
  return sub_10015B6D0(a1, *(char **)(v1 + 16), *(void (**)(void, char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1001B67D0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1001B6858()
{
  return sub_10014CA4C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(id *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136));
}

uint64_t sub_1001B68A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B68B4(uint64_t a1)
{
  return sub_10014DB08(a1, *(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1001B68C0(void *a1)
{
  return sub_1001DC2A4(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12]);
}

uint64_t sub_1001B6904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001855E8(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(void, void, void))(v3 + 24), *(void *)(v3 + 32), "createCustodianRecoveryKey complete: %{public}s", 0xD000000000000046, 0x8000000100244F20);
}

uint64_t sub_1001B6954()
{
  uint64_t v1 = sub_100221D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 19) & 0xFFFFFFFFFFFFFFF8)
      + 11) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1001B6A88()
{
  uint64_t v1 = *(void *)(sub_100221D00() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_10013CA0C(*(char **)(v0 + 16), v0 + v2, *(void (**)(void, void, uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v4), *(void *)(v0 + v4 + 8), *(void *)(v0 + v5), *(void *)(v0 + v5 + 8), *(_DWORD *)(v0 + ((v5 + 19) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v5 + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001B6B58()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6B68()
{
  uint64_t v1 = sub_100221D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 4;
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001B6CA0(void *a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100221D00() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10013DFF4(a1, a2, *(uint64_t (**)(void, void, unint64_t))(v2 + 16), *(void *)(v2 + 24), *(char **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_DWORD *)(v2 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001B6D90()
{
  uint64_t v1 = sub_100221D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, (v6 + 19) & 0xFFFFFFFFFFFFFFF8 | 4, v5);
}

uint64_t sub_1001B6ED0()
{
  uint64_t v1 = *(void *)(sub_100221D00() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_10013E504(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void (**)(void, void, uint64_t))(v0 + 80), *(void *)(v0 + 88), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v4), *(void *)(v0 + v4 + 8), *(_DWORD *)(v0 + ((v4 + 19) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001B6FA0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6FB0(uint64_t a1)
{
  return sub_10013EF58(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1001B6FE4()
{
  uint64_t v1 = sub_100221D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 19) & 0xFFFFFFFFFFFFFFF8)
      + 11) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1001B7118(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100221D00() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_10013F444(a1, *(char **)(v1 + 16), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v6 + 8), *(void *)(v1 + v7), *(void *)(v1 + v7 + 8), *(_DWORD *)(v1 + ((v7 + 19) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, void, uint64_t))(v1+ ((((v7 + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v7 + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001B71F8()
{
  uint64_t v1 = (int *)(type metadata accessor for AddCustodianRecoveryKeyResponse(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v15 = *(void *)(*(void *)v1 + 64);
  uint64_t v16 = sub_100221D00();
  uint64_t v3 = *(void *)(v16 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = *(void *)(v3 + 64);

  uint64_t v5 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + v1[7];
  uint64_t v7 = sub_100221DF0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v5 + v1[8];
  uint64_t v10 = type metadata accessor for Changes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v9 + 24), *(void *)(v9 + 32));
    sub_100005A40(*(void *)(v9 + 40), *(void *)(v9 + 48));
    v8(v9 + *(int *)(v10 + 36), v7);
  }
  uint64_t v11 = (((v2 + 24) & ~v2) + v15 + v4) & ~v4;
  unint64_t v12 = (((((((((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
       + 11) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v11, v16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v12 + 16, v2 | v4 | 7);
}

uint64_t sub_1001B747C()
{
  uint64_t v1 = *(void *)(type metadata accessor for AddCustodianRecoveryKeyResponse(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100221D00() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_10013FAA0(*(void *)(v0 + 16), (uint64_t *)(v0 + v2), v0 + v5, *(void *)(v0 + v6), *(void *)(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + v8), *(void *)(v0 + v8 + 8), *(_DWORD *)(v0 + ((v8 + 19) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void *, id, void))(v0+ ((((v8 + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v8 + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001B75B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B75C8(void *a1)
{
  return sub_10013F2E4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001B75E8()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v0 + 96), *(void *)(v0 + 104));
  sub_100005A40(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_100005A40(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_100005A40(*(void *)(v0 + 144), *(void *)(v0 + 152));

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_1001B7678(uint64_t a1, uint64_t a2)
{
  return sub_1001B7690(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100135218);
}

uint64_t sub_1001B7690(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[10], v3[11], v3[12], v3[13], v3[14], v3[15], v3[16], v3[17], v3[18],
           v3[19]);
}

uint64_t sub_1001B76E4()
{
  return sub_1001B779C((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001B76FC()
{
  return sub_1001B7818((uint64_t (*)(void, void, void, void, void))sub_100132F04);
}

uint64_t sub_1001B7714()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B7724()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001B7774(void *a1)
{
  return sub_1001331C4(a1, *(void *)(v1 + 16), *(objc_class **)(v1 + 24), *(objc_class **)(v1 + 32), *(objc_class **)(v1 + 40), *(objc_class **)(v1 + 48));
}

uint64_t sub_1001B7784()
{
  return sub_1001B779C((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001B779C(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 40));
  a1(*(void *)(v1 + 48));

  return _swift_deallocObject(v1, 56, 7);
}

uint64_t sub_1001B7800()
{
  return sub_1001B7818((uint64_t (*)(void, void, void, void, void))sub_100133518);
}

uint64_t sub_1001B7818(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1001B7830()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B7840()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001B7898(uint64_t a1, uint64_t a2)
{
  return sub_1001B78B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_100134174);
}

uint64_t sub_1001B78B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8]);
}

uint64_t sub_1001B78F0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001B7958(uint64_t (*a1)(void, void, void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10]);
}

uint64_t sub_1001B7998()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B79A8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B79E0(uint64_t a1, uint64_t a2)
{
  return sub_100132374(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

void sub_1001B79EC()
{
  sub_1001325F0(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24));
}

uint64_t sub_1001B79F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B7A0C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B7A4C(uint64_t a1)
{
  return sub_100184C80(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), (uint64_t (*)(void))&static os_log_type_t.info.getter, "reset complete %{public}s", 0xD000000000000082, 0x8000000100244F70);
}

uint64_t sub_1001B7AA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1001B7AF0()
{
  return sub_10012A520(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), *(void *)(v0 + 64), *(unsigned __int8 *)(v0 + 72), *(char **)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_1001B7B38()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B7B48(uint64_t a1)
{
  return sub_10012A714(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80));
}

uint64_t sub_1001B7B90(uint64_t a1)
{
  return sub_10012A940(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001B7B9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B7C04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B7C6C()
{
  uint64_t v1 = (int *)(type metadata accessor for ResetResponse(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  uint64_t v5 = sub_100221DF0();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for Changes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005A40(*(void *)(v7 + 24), *(void *)(v7 + 32));
    sub_100005A40(*(void *)(v7 + 40), *(void *)(v7 + 48));
    v6(v7 + *(int *)(v8 + 36), v5);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1001B7E08()
{
  uint64_t v1 = *(void *)(type metadata accessor for ResetResponse(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10012AE1C(v3, v0 + v2, v4);
}

uint64_t sub_1001B7E9C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B7EAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_DWORD *sub_1001B7F0C(_DWORD *result)
{
  *uint64_t result = **(_DWORD **)(v1 + 16);
  return result;
}

uint64_t sub_1001B7F1C(uint64_t a1, uint64_t a2)
{
  return sub_10012967C(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), "trustedDeviceNamesByPeerID complete: %{public}s");
}

void sub_1001B7F44()
{
  sub_1001298CC(*(NSObject **)(v0 + 16), *(void (**)(uint64_t, NSObject *))(v0 + 24));
}

uint64_t sub_1001B7F50()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B7F64()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B7FA4()
{
  return sub_100129428(*(void (**)(uint64_t, uint64_t, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001B7FB0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B7FC0(uint64_t a1, uint64_t a2)
{
  return sub_10012967C(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), "dump complete: %{public}s");
}

uint64_t sub_1001B7FE8()
{
  return sub_100126980(*(char **)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001B7FF4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_1001B8004(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1001B8068()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B80A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B80E0(void *a1, uint64_t a2)
{
  return sub_100128F6C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1001B80E8(void *a1, uint64_t a2)
{
  return sub_10012912C(a1, a2, v2);
}

uint64_t sub_1001B80F0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001241D0(a1, a2, a3, *(uint64_t (**)(void *, uint64_t, uint64_t))(v3 + 16));
}

uint64_t sub_1001B80FC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001B813C()
{
  sub_1001244B8(*(char **)(v0 + 16), *(void (**)(id, void *, void))(v0 + 24));
}

uint64_t sub_1001B8148()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B8158()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B8168()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001B8178()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001B81E0(uint64_t a1, uint64_t a2)
{
  return sub_1001B81F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))sub_100122DD8);
}

uint64_t sub_1001B81F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[10]);
}

unint64_t sub_1001B823C()
{
  unint64_t result = qword_10029F110;
  if (!qword_10029F110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029F110);
  }
  return result;
}

void destroy for StableChanges(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 96);
}

uint64_t initializeWithCopy for StableChanges(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  unint64_t v6 = *(void **)(a2 + 80);
  uint64_t v7 = *(void **)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v6;
  id v10 = v7;
  id v11 = v8;
  return a1;
}

uint64_t assignWithCopy for StableChanges(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v5;
  unint64_t v6 = *(void **)(a1 + 80);
  uint64_t v7 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v7;
  id v8 = v7;

  id v9 = *(void **)(a1 + 88);
  id v10 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v10;
  id v11 = v10;

  unint64_t v12 = *(void **)(a1 + 96);
  uint64_t v13 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v13;
  id v14 = v13;

  return a1;
}

__n128 initializeWithTake for StableChanges(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for StableChanges(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);

  uint64_t v7 = *(void **)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);

  id v8 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  return a1;
}

uint64_t getEnumTagSinglePayload for StableChanges(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StableChanges(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StableChanges()
{
  return &type metadata for StableChanges;
}

void *sub_1001B8660(void *a1)
{
  v5[0] = 0;
  if (!qword_1002B05A0)
  {
    v5[1] = _NSConcreteStackBlock;
    v5[2] = (void *)3221225472;
    v5[3] = sub_1001B87E4;
    v5[4] = &unk_100282FF8;
    v5[5] = v5;
    long long v6 = off_1002870B8;
    uint64_t v7 = 0;
    qword_1002B05A0 = _sl_dlopen();
  }
  long long v2 = (void *)qword_1002B05A0;
  if (!qword_1002B05A0)
  {
    a1 = +[NSAssertionHandler currentHandler];
    long long v2 = +[NSString stringWithUTF8String:"void *KeychainCircleLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"TrustedPeersHelper-Bridging-Header.h", 87, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  __n128 result = dlsym(v2, "MetricsOverrideTestsAreEnabled");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  off_1002B0598 = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t sub_1001B87E4()
{
  uint64_t result = _sl_dlopen();
  qword_1002B05A0 = result;
  return result;
}

uint64_t sub_1001B885C(void *a1)
{
  return sub_1001B1C94(a1);
}

uint64_t sub_1001B8874(uint64_t *a1)
{
  return sub_1001B1738(a1);
}

uint64_t sub_1001B888C(uint64_t *a1)
{
  return sub_1001B1C00(a1);
}

uint64_t sub_1001B88A4(uint64_t a1)
{
  return sub_1001B3640(a1);
}

uint64_t sub_1001B88BC(uint64_t a1)
{
  return sub_1001B3FE4(a1);
}

uint64_t sub_1001B88D4(uint64_t *a1)
{
  return sub_1001B4074(a1);
}

uint64_t sub_1001B88EC(id *a1)
{
  return sub_1001B6384(a1) & 1;
}

uint64_t sub_1001B8908(void **a1)
{
  return sub_1001B63A4(a1) & 1;
}

uint64_t sub_1001B8928()
{
  return ResetReason.rawValue.getter();
}

uint64_t sub_1001B8940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1001B3B94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1001B89F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1001B3BD8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1001B8B48(void *a1)
{
  return sub_1001B4DB0(a1);
}

void sub_1001B8CA4()
{
}

void *sub_1001B8CC0(malloc_zone_t *a1, size_t a2)
{
  if (a1)
  {
    return malloc_zone_malloc(a1, a2);
  }
  else
  {
    uint64_t result = (void *)sub_100222960();
    __break(1u);
  }
  return result;
}

void *sub_1001B8D30(malloc_zone_t *a1, void *a2, size_t a3)
{
  if (a1)
  {
    return malloc_zone_realloc(a1, a2, a3);
  }
  else
  {
    uint64_t result = (void *)sub_100222960();
    __break(1u);
  }
  return result;
}

void sub_1001B8DA0(malloc_zone_t *a1, void *a2)
{
  if (a1)
  {
    malloc_zone_free(a1, a2);
  }
  else
  {
    sub_100222960();
    __break(1u);
  }
}

unint64_t sub_1001B8E10(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1000046DC(&qword_100299530);
    uint64_t v2 = (void *)sub_1002229C0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  long long v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  id v10 = (char *)&type metadata for Any + 8;
  id v11 = &type metadata for String;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1001B30B0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100005A98(v6, v7);
    sub_100005A98(v7, v40);
    sub_100005A98(v40, &v38);
    unint64_t result = sub_10000AB48(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      id v10 = v16;
      id v11 = v15;
      uint64_t v1 = v14;
      long long v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_100004788((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100005A98(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_100005A98(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1001B917C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000046DC(&qword_100299540);
    uint64_t v2 = (void *)sub_1002229C0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  long long v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v30) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v30) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v30) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v30) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = 16 * v12;
    uint64_t v18 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = v18[1];
    int64_t v20 = (uint64_t *)(*(void *)(a1 + 56) + v17);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    *(void *)&v40[0] = *v18;
    *((void *)&v40[0] + 1) = v19;
    swift_bridgeObjectRetain();
    sub_1000059E8(v21, v22);
    swift_dynamicCast();
    swift_dynamicCast();
    long long v36 = v32;
    long long v37 = v33;
    uint64_t v38 = v34;
    sub_100005A98(&v35, v39);
    long long v32 = v36;
    long long v33 = v37;
    uint64_t v34 = v38;
    sub_100005A98(v39, v40);
    sub_100005A98(v40, &v36);
    uint64_t result = sub_1002227D0(v2[5]);
    uint64_t v23 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)&v6[8 * (v24 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v24) & ~*(void *)&v6[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)&v6[8 * v25];
      }
      while (v29 == -1);
      unint64_t v9 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(void *)(v10 + 32) = v34;
    uint64_t result = (uint64_t)sub_100005A98(&v36, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v30)
  {
LABEL_37:
    swift_release();
    sub_1001B30B0();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v30) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1001B953C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000046DC(&qword_100299530);
    uint64_t v2 = (void *)sub_1002229C0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v26) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v26) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v26) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v26) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v26)
          {
            unint64_t v12 = *(void *)(v27 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v26) {
                break;
              }
              unint64_t v12 = *(void *)(v27 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1001B30B0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    int64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_10000B888(*(void *)(a1 + 56) + 40 * v10, (uint64_t)&v35);
    uint64_t v33 = v17;
    uint64_t v34 = v16;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v19 = v17;
    uint64_t v18 = v16;
    sub_100005A98(&v29, v31);
    sub_100005A98(v31, v32);
    sub_100005A98(v32, &v30);
    unint64_t result = sub_10000AB48(v19, v16);
    unint64_t v20 = result;
    if (v21)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v19;
      v7[1] = v18;
      int64_t v8 = (_OWORD *)(v2[7] + 32 * v20);
      sub_100004788((uint64_t)v8);
      unint64_t result = (unint64_t)sub_100005A98(&v30, v8);
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v22 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v22 = v19;
    v22[1] = v18;
    unint64_t result = (unint64_t)sub_100005A98(&v30, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_34;
    }
    v2[2] = v25;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1001B988C()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_10029F120);
  sub_100003CC8(v0, (uint64_t)qword_10029F120);
  return sub_100222080();
}

id sub_1001B9900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = __chkstk_darwin(a1, a2);
  int64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  int64_t v11 = (char *)&v28 - v10;
  unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12((char *)&v28 - v10, v3, a1);
  uint64_t v13 = sub_100222A10();
  uint64_t v29 = v3;
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v11, a1);
  }
  int64_t v15 = (void *)sub_100221B30();
  swift_errorRelease();
  id v16 = [v15 domain];
  uint64_t v17 = sub_100222270();
  uint64_t v19 = v18;

  if (v17 == sub_100222270() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v22 = sub_100222A30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_12:
    id v23 = sub_1001B9C04();
    goto LABEL_13;
  }
  v12(v8, v29, a1);
  if (sub_100222A10())
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v25, v8, a1);
  }
  int64_t v26 = (void *)sub_100221B30();
  swift_errorRelease();
  id v23 = (id)CKXPCSuitableError();

  if (!v23)
  {
    sub_100042D4C();
    id v23 = (id)swift_allocError();
    *(_OWORD *)uint64_t v27 = xmmword_100231730;
    *(unsigned char *)(v27 + 16) = 13;
  }
LABEL_13:

  return v23;
}

id sub_1001B9C04()
{
  uint64_t v1 = v0;
  id v2 = [v0 userInfo];
  uint64_t v3 = sub_1002221D0();

  uint64_t v4 = sub_100222270();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_10000AB48(v4, v5), (v7 & 1) == 0))
  {
    long long v21 = 0u;
    long long v22 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1000663DC(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1))
  {
LABEL_8:
    sub_10004015C((uint64_t)&v21, &qword_100299EA0);
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v20 = 0;
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    if (*((void *)&v19 + 1))
    {
      long long v21 = v18;
      long long v22 = v19;
      uint64_t v23 = v20;
      sub_1000046DC(&qword_10029F3F8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100229540;
      *(void *)(inited + 32) = sub_100222270();
      *(void *)(inited + 40) = v9;
      sub_10000B888((uint64_t)&v21, inited + 48);
      unint64_t v10 = sub_100009DE8(inited);
      sub_10000B8E4((uint64_t)&v21);
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
  }
LABEL_9:
  sub_10004015C((uint64_t)&v18, &qword_10029F3F0);
  unint64_t v10 = 0;
LABEL_10:
  id v11 = [v1 domain];
  sub_100222270();

  id v12 = [v1 code];
  if (v10)
  {
    unint64_t v13 = sub_1001B953C(v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v13 = 0;
  }
  NSString v14 = sub_100222260();
  swift_bridgeObjectRelease();
  if (v13)
  {
    v15.super.Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v15.super.Class isa = 0;
  }
  id v16 = [objc_allocWithZone((Class)NSError) initWithDomain:v14 code:v12 userInfo:v15.super.isa];

  return v16;
}

void sub_1001B9F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    NSString v6 = sub_100222260();
    if (a3)
    {
LABEL_3:
      uint64_t v7 = sub_100221B30();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v6 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);
}

void sub_1001BA000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    v5.super.Class isa = sub_1002221C0().super.isa;
    if (a2)
    {
LABEL_3:
      uint64_t v6 = sub_100221B30();
      goto LABEL_6;
    }
  }
  else
  {
    v5.super.Class isa = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);
}

void sub_1001BA0CC(uint64_t a1, objc_class *a2, uint64_t a3, uint64_t a4)
{
  Class isa = a2;
  if (a2)
  {
    sub_1000047D8(0, &qword_10029F100);
    Class isa = sub_1002223B0().super.isa;
  }
  if (a3) {
    uint64_t v8 = sub_100221B30();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = (id)v8;
  (*(void (**)(uint64_t, uint64_t, Class))(a4 + 16))(a4, a1, isa);
}

void sub_1001BA2B0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_100221B30();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1001BA3D8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, id))
{
  sub_1001BF234(0xD00000000000001ALL, 0x8000000100245BB0, *(void *)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a2);
  if (a2)
  {
    swift_getErrorValue();
    id v8 = sub_1001B9900(v10, v11);
  }
  else
  {
    id v8 = 0;
  }
  a5(a1 & 1, v8);
  return swift_errorRelease();
}

void sub_1001BA7C4(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_100221B30();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

void sub_1001BA864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    v5.super.Class isa = sub_100222420().super.isa;
    if (a2)
    {
LABEL_3:
      uint64_t v6 = sub_100221B30();
      goto LABEL_6;
    }
  }
  else
  {
    v5.super.Class isa = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);
}

void sub_1001BA91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_100221B30();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_1001BA98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  sub_1001BF234(0x65726170657250, 0xE700000000000000, *(void *)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a14 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a12);
  if (a12)
  {
    swift_getErrorValue();
    id v19 = sub_1001B9900(v25, v26);
  }
  else
  {
    id v19 = 0;
  }
  a15(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v19);
  return swift_errorRelease();
}

void sub_1001BADA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a2) {
    NSString v16 = sub_100222260();
  }
  else {
    NSString v16 = 0;
  }
  if (a4 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_100221BD0().super.isa;
  }
  if (a6 >> 60 == 15) {
    Class v18 = 0;
  }
  else {
    Class v18 = sub_100221BD0().super.isa;
  }
  if (a8 >> 60 == 15) {
    Class v19 = 0;
  }
  else {
    Class v19 = sub_100221BD0().super.isa;
  }
  if (a10 >> 60 == 15)
  {
    Class v20 = 0;
    if (a12)
    {
LABEL_15:
      uint64_t v21 = sub_100221B30();
      goto LABEL_18;
    }
  }
  else
  {
    Class v20 = sub_100221BD0().super.isa;
    if (a12) {
      goto LABEL_15;
    }
  }
  uint64_t v21 = 0;
LABEL_18:
  id v22 = (id)v21;
  (*(void (**)(uint64_t, NSString, Class, Class, Class, Class, uint64_t))(a13 + 16))(a13, v16, isa, v18, v19, v20, a11);
}

uint64_t sub_1001BAF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  sub_1001BF234(0xD000000000000016, 0x8000000100245B20, *(void *)(a17 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a17 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a17 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a17 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a15);
  if (a15)
  {
    swift_getErrorValue();
    id v19 = sub_1001B9900(v28, v29);
  }
  else
  {
    id v19 = 0;
  }
  a18(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v19);
  return swift_errorRelease();
}

void sub_1001BB2B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, objc_class *a14, uint64_t a15, uint64_t a16)
{
  Class v19 = a14;
  if (a2) {
    NSString v20 = sub_100222260();
  }
  else {
    NSString v20 = 0;
  }
  uint64_t v28 = v20;
  if (a4 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_100221BD0().super.isa;
  }
  if (a6 >> 60 == 15) {
    Class v22 = 0;
  }
  else {
    Class v22 = sub_100221BD0().super.isa;
  }
  if (a8 >> 60 == 15) {
    Class v23 = 0;
  }
  else {
    Class v23 = sub_100221BD0().super.isa;
  }
  if (a10 >> 60 == 15)
  {
    Class v24 = 0;
    if (a13) {
      goto LABEL_15;
    }
  }
  else
  {
    Class v24 = sub_100221BD0().super.isa;
    if (a13)
    {
LABEL_15:
      NSString v25 = sub_100222260();
      if (!a14) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  NSString v25 = 0;
  if (a14)
  {
LABEL_16:
    sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    Class v19 = sub_1002223B0().super.isa;
  }
LABEL_17:
  if (a15) {
    uint64_t v26 = sub_100221B30();
  }
  else {
    uint64_t v26 = 0;
  }
  id v27 = (id)v26;
  (*(void (**)(uint64_t, void *, Class, Class, Class, Class, uint64_t, NSString, Class, uint64_t))(a16 + 16))(a16, v28, isa, v22, v23, v24, a11, v25, v19, v26);
}

uint64_t sub_1001BB498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  sub_1001BF234(0x73696C6261747345, 0xEC000000676E6968, *(void *)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a5);
  if (a5)
  {
    swift_getErrorValue();
    id v14 = sub_1001B9900(v16, v17);
  }
  else
  {
    id v14 = 0;
  }
  a8(a1, a2, a3, a4, v14);
  return swift_errorRelease();
}

void sub_1001BB598(uint64_t a1, uint64_t a2, objc_class *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  Class isa = a3;
  if (a2)
  {
    NSString v10 = sub_100222260();
    if (!isa) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  NSString v10 = 0;
  if (a3)
  {
LABEL_3:
    sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    Class isa = sub_1002223B0().super.isa;
  }
LABEL_4:
  if (a5) {
    uint64_t v11 = sub_100221B30();
  }
  else {
    uint64_t v11 = 0;
  }
  id v12 = (id)v11;
  (*(void (**)(uint64_t, NSString, Class, uint64_t))(a6 + 16))(a6, v10, isa, a4);
}

uint64_t sub_1001BB674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  sub_1001BF234(0x676E696863756F56, 0xE800000000000000, *(void *)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a5);
  if (a5)
  {
    swift_getErrorValue();
    id v14 = sub_1001B9900(v16, v17);
  }
  else
  {
    id v14 = 0;
  }
  a8(a1, a2, a3, a4, v14);
  return swift_errorRelease();
}

void sub_1001BB9E4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_100221BD0().super.isa;
  }
  if (a4 >> 60 == 15)
  {
    Class v10 = 0;
    if (a5)
    {
LABEL_6:
      uint64_t v11 = sub_100221B30();
      goto LABEL_9;
    }
  }
  else
  {
    Class v10 = sub_100221BD0().super.isa;
    if (a5) {
      goto LABEL_6;
    }
  }
  uint64_t v11 = 0;
LABEL_9:
  id v12 = (id)v11;
  (*(void (**)(uint64_t, Class, Class))(a6 + 16))(a6, isa, v10);
}

uint64_t sub_1001BBAB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, void, id))
{
  sub_1001BF234(0xD00000000000001BLL, 0x8000000100245B00, *(void *)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a5);
  if (a5)
  {
    swift_getErrorValue();
    id v14 = sub_1001B9900(v16, v17);
  }
  else
  {
    id v14 = 0;
  }
  a8(a1, a2, a3, a4 & 1, v14);
  return swift_errorRelease();
}

void sub_1001BBBB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v10 = sub_100222260();
    if (a5)
    {
LABEL_3:
      uint64_t v11 = sub_100221B30();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v10 = 0;
    if (a5) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
LABEL_6:
  id v12 = (id)v11;
  (*(void (**)(uint64_t, NSString, uint64_t, void))(a6 + 16))(a6, v10, a3, a4 & 1);
}

void sub_1001BBDD0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, Class a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_100221BD0().super.isa;
  }
  if (a4 >> 60 != 15)
  {
    Class v14 = sub_100221BD0().super.isa;
    if (!a5) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  Class v14 = 0;
  if (a5)
  {
LABEL_8:
    sub_1000047D8(0, &qword_10029F410);
    a5 = sub_1002223B0().super.isa;
  }
LABEL_9:
  if (a7) {
    uint64_t v15 = sub_100221B30();
  }
  else {
    uint64_t v15 = 0;
  }
  id v16 = (id)v15;
  (*(void (**)(uint64_t, Class, Class, Class, uint64_t))(a8 + 16))(a8, isa, v14, a5, a6);
}

void sub_1001BBF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    NSString v8 = sub_100222260();
    if (a4)
    {
LABEL_3:
      uint64_t v9 = sub_100221B30();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
LABEL_6:
  id v10 = (id)v9;
  (*(void (**)(uint64_t, NSString, uint64_t))(a5 + 16))(a5, v8, a3);
}

uint64_t sub_1001BBFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, id), uint64_t a8, uint64_t a9, unint64_t a10)
{
  sub_1001BF234(a9, a10, *(void *)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a4);
  if (a4)
  {
    swift_getErrorValue();
    id v15 = sub_1001B9900(v17, v18);
  }
  else
  {
    id v15 = 0;
  }
  a7(a1, a2, a3, v15);
  return swift_errorRelease();
}

uint64_t sub_1001BC17C(uint64_t a1, int a2, void *a3, void *a4, int a5, void *aBlock, void (*a7)(void *, id, uint64_t, uint64_t, void *))
{
  uint64_t v11 = _Block_copy(aBlock);
  sub_1000047D8(0, &qword_10029F410);
  uint64_t v12 = sub_1002223C0();
  _Block_copy(v11);
  id v13 = a3;
  id v14 = a4;
  swift_retain();
  a7(a3, v14, v12, a1, v11);
  _Block_release(v11);
  _Block_release(v11);

  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BC268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id), uint64_t a11, uint64_t a12, unint64_t a13)
{
  sub_1001BF234(a12, a13, *(void *)(a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a9 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a7);
  if (a7)
  {
    swift_getErrorValue();
    id v20 = sub_1001B9900(v22, v23);
  }
  else
  {
    id v20 = 0;
  }
  a10(a1, a2, a3, a4, a5, a6, v20);
  return swift_errorRelease();
}

uint64_t sub_1001BC774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  if (a5)
  {
    swift_getErrorValue();
    id v11 = sub_1001B9900(v13, v14);
  }
  else
  {
    id v11 = 0;
  }
  a6(a1, a2, a3, a4, v11);
  return swift_errorRelease();
}

uint64_t sub_1001BC834(uint64_t a1, int a2, void *a3, int a4, int a5, uint64_t a6, void *aBlock, void (*a8)(void *, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v12 = _Block_copy(aBlock);
  sub_1000047D8(0, &qword_10029EFC0);
  uint64_t v13 = sub_1002223C0();
  sub_1000047D8(0, &qword_10029F410);
  uint64_t v14 = sub_1002223C0();
  if (a6) {
    a6 = sub_1002223C0();
  }
  _Block_copy(v12);
  swift_retain();
  id v15 = a3;
  a8(a3, v13, v14, a6, a1, v12);
  _Block_release(v12);
  _Block_release(v12);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1001BCB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = sub_100221B30();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);
}

void sub_1001BCD90(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    Class isa = sub_1002223B0().super.isa;
  }
  if (a2) {
    uint64_t v6 = sub_100221B30();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

uint64_t sub_1001BCE84(uint64_t a1, int a2, void *a3, int a4, void *aBlock, void (*a6)(void *, uint64_t, uint64_t, void *))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = sub_100222440();
  _Block_copy(v9);
  id v11 = a3;
  swift_retain();
  a6(a3, v10, a1, v9);
  _Block_release(v9);
  _Block_release(v9);

  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1001BD050(uint64_t a1, objc_class *a2, uint64_t a3, uint64_t a4)
{
  Class isa = a2;
  if (a1)
  {
    v7.super.Class isa = sub_1002223B0().super.isa;
    if (!isa) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  v7.super.Class isa = 0;
  if (a2) {
LABEL_3:
  }
    Class isa = sub_1002223B0().super.isa;
LABEL_4:
  if (a3) {
    uint64_t v8 = sub_100221B30();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = (id)v8;
  (*(void (**)(uint64_t, Class, Class))(a4 + 16))(a4, v7.super.isa, isa);
}

void sub_1001BD1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    v5.super.Class isa = sub_1002223B0().super.isa;
    if (a2)
    {
LABEL_3:
      uint64_t v6 = sub_100221B30();
      goto LABEL_6;
    }
  }
  else
  {
    v5.super.Class isa = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);
}

uint64_t sub_1001BD23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  if (a7)
  {
    swift_getErrorValue();
    id v15 = sub_1001B9900(v17, v18);
  }
  else
  {
    id v15 = 0;
  }
  a8(a1, a2, a3, a4, a5, a6, v15);
  return swift_errorRelease();
}

void sub_1001BD314(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  NSString v11 = a4;
  if (a2 >> 60 != 15)
  {
    Class isa = sub_100221BD0().super.isa;
    if (!v11) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  Class isa = 0;
  if (a4) {
LABEL_5:
  }
    NSString v11 = sub_100222260();
LABEL_6:
  if (a6 >> 60 == 15)
  {
    Class v13 = 0;
    if (a7)
    {
LABEL_8:
      uint64_t v14 = sub_100221B30();
      goto LABEL_11;
    }
  }
  else
  {
    Class v13 = sub_100221BD0().super.isa;
    if (a7) {
      goto LABEL_8;
    }
  }
  uint64_t v14 = 0;
LABEL_11:
  id v15 = (id)v14;
  (*(void (**)(uint64_t, Class, NSString, Class))(a8 + 16))(a8, isa, v11, v13);
}

uint64_t sub_1001BD418(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, id))
{
  if (a3)
  {
    swift_getErrorValue();
    id v7 = sub_1001B9900(v9, v10);
  }
  else
  {
    id v7 = 0;
  }
  a4(a1, a2, v7);
  return swift_errorRelease();
}

void sub_1001BD650(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_10004C55C();
    Class isa = sub_1002221C0().super.isa;
  }
  if (a2) {
    uint64_t v6 = sub_100221B30();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

uint64_t sub_1001BD814(uint64_t a1, int a2, void *a3, int a4, int a5, int a6, void *aBlock, unint64_t *a8, uint64_t a9, void (*a10)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  Class v13 = _Block_copy(aBlock);
  uint64_t v14 = sub_100222270();
  uint64_t v16 = v15;
  uint64_t v17 = sub_100222270();
  uint64_t v19 = v18;
  sub_1000047D8(0, a8);
  uint64_t v20 = sub_1002223C0();
  _Block_copy(v13);
  id v21 = a3;
  swift_retain();
  a10(a3, v14, v16, v17, v19, v20, a1, v13);
  _Block_release(v13);
  _Block_release(v13);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BD94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, id), uint64_t a7, uint64_t a8, unint64_t a9)
{
  sub_1001BF234(a8, a9, *(void *)(a5 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a5 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a5 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a5 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a3);
  if (a3)
  {
    swift_getErrorValue();
    id v13 = sub_1001B9900(v15, v16);
  }
  else
  {
    id v13 = 0;
  }
  a6(a1, a2, v13);
  return swift_errorRelease();
}

void sub_1001BDBD8(objc_class *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  Class isa = a1;
  if (a1)
  {
    sub_1000047D8(0, a5);
    Class isa = sub_1002223B0().super.isa;
  }
  if (a3) {
    uint64_t v9 = sub_100221B30();
  }
  else {
    uint64_t v9 = 0;
  }
  id v10 = (id)v9;
  (*(void (**)(uint64_t, Class, uint64_t))(a4 + 16))(a4, isa, a2);
}

uint64_t sub_1001BDC84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, uint64_t a6, unint64_t a7)
{
  sub_1001BF234(a6, a7, *(void *)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a1);
  if (a1)
  {
    swift_getErrorValue();
    id v9 = sub_1001B9900(v11, v12);
  }
  else
  {
    id v9 = 0;
  }
  a4(v9);
  return swift_errorRelease();
}

uint64_t sub_1001BDD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, id), uint64_t a6, uint64_t a7, unint64_t a8)
{
  sub_1001BF234(a7, a8, *(void *)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a2);
  if (a2)
  {
    swift_getErrorValue();
    id v11 = sub_1001B9900(v13, v14);
  }
  else
  {
    id v11 = 0;
  }
  a5(a1, v11);
  return swift_errorRelease();
}

uint64_t sub_1001BDE10(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, const void *a5, void (*a6)(void *, char *, uint64_t, void *))
{
  uint64_t v10 = sub_100221D00();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _Block_copy(a5);
  sub_100221CF0();
  _Block_copy(v15);
  id v16 = a3;
  swift_retain();
  a6(a3, v14, a1, v15);
  _Block_release(v15);
  _Block_release(v15);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

void sub_1001BE0A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 == 15)
  {
    Class isa = 0;
    if (a3)
    {
LABEL_3:
      uint64_t v7 = sub_100221B30();
      goto LABEL_6;
    }
  }
  else
  {
    Class isa = sub_100221BD0().super.isa;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, Class))(a4 + 16))(a4, isa);
}

uint64_t sub_1001BE26C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id))
{
  return sub_1001BE668(a1, a2, a3);
}

void sub_1001BE308(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    sub_1000047D8(0, &qword_10029ECA8);
    Class isa = sub_1002221C0().super.isa;
  }
  if (a2) {
    uint64_t v6 = sub_100221B30();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

uint64_t sub_1001BE410(uint64_t a1, void (*a2)(id))
{
  if (a1)
  {
    swift_getErrorValue();
    id v3 = sub_1001B9900(v5, v6);
  }
  else
  {
    id v3 = 0;
  }
  a2(v3);
  return swift_errorRelease();
}

uint64_t sub_1001BE49C(uint64_t a1, int a2, void *a3, int a4, void *aBlock, void (*a6)(void *, uint64_t, uint64_t, uint64_t, void *))
{
  id v9 = _Block_copy(aBlock);
  uint64_t v10 = sub_100222270();
  uint64_t v12 = v11;
  _Block_copy(v9);
  id v13 = a3;
  swift_retain();
  a6(a3, v10, v12, a1, v9);
  _Block_release(v9);
  _Block_release(v9);

  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BE578(uint64_t a1, int a2, void *a3, int a4, int a5, void *aBlock, void (*a7)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = sub_100222270();
  uint64_t v13 = v12;
  uint64_t v14 = sub_100222270();
  uint64_t v16 = v15;
  _Block_copy(v10);
  id v17 = a3;
  swift_retain();
  a7(a3, v11, v13, v14, v16, a1, v10);
  _Block_release(v10);
  _Block_release(v10);

  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BE668(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id))
{
  if (a2)
  {
    swift_getErrorValue();
    id v5 = sub_1001B9900(v7, v8);
  }
  else
  {
    id v5 = 0;
  }
  a3(a1, v5);
  return swift_errorRelease();
}

uint64_t sub_1001BE70C(char a1, uint64_t a2, void (*a3)(void, id))
{
  if (a2)
  {
    swift_getErrorValue();
    id v5 = sub_1001B9900(v7, v8);
  }
  else
  {
    id v5 = 0;
  }
  a3(a1 & 1, v5);
  return swift_errorRelease();
}

uint64_t sub_1001BE7B0(uint64_t a1, int a2, void *a3, void *aBlock, void (*a5)(void *, uint64_t, void *))
{
  uint64_t v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  id v9 = a3;
  swift_retain();
  a5(a3, a1, v8);
  _Block_release(v8);
  _Block_release(v8);

  return swift_release();
}

uint64_t sub_1001BE844(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, id))
{
  if (a3)
  {
    swift_getErrorValue();
    id v7 = sub_1001B9900(v9, v10);
  }
  else
  {
    id v7 = 0;
  }
  a4(a1, a2, v7);
  return swift_errorRelease();
}

uint64_t sub_1001BE908(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, id))
{
  if (a3)
  {
    swift_getErrorValue();
    id v7 = sub_1001B9900(v9, v10);
  }
  else
  {
    id v7 = 0;
  }
  a4(a1, a2, v7);
  return swift_errorRelease();
}

uint64_t sub_1001BE9C4(uint64_t a1, int a2, void *a3, int a4, void *aBlock, unint64_t *a6, uint64_t a7, void (*a8)(void *, uint64_t, uint64_t, void *))
{
  uint64_t v12 = _Block_copy(aBlock);
  sub_1000047D8(0, a6);
  uint64_t v13 = sub_1002223C0();
  _Block_copy(v12);
  id v14 = a3;
  swift_retain();
  a8(a3, v13, a1, v12);
  _Block_release(v12);
  _Block_release(v12);

  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1001BEA9C(objc_class *a1, Class a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  Class isa = a1;
  if (a1)
  {
    sub_1000047D8(0, a5);
    Class isa = sub_1002223B0().super.isa;
  }
  if (a2)
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
    a2 = sub_1002223B0().super.isa;
  }
  if (a3) {
    uint64_t v9 = sub_100221B30();
  }
  else {
    uint64_t v9 = 0;
  }
  id v10 = (id)v9;
  (*(void (**)(uint64_t, Class, Class))(a4 + 16))(a4, isa, a2);
}

uint64_t sub_1001BEB78()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for Client()
{
  return self;
}

uint64_t sub_1001BEBDC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1001BECB0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000663DC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000663DC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100004788((uint64_t)v12);
  return v7;
}

uint64_t sub_1001BECB0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1002226A0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1001BEE6C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1002228A0();
  if (!v8)
  {
    sub_100222950();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1002229D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1001BEE6C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1001BEF04(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001BF0E4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1001BF0E4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1001BEF04(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1001BF07C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_100222850();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_100222950();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_100222330();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1002229D0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_100222950();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1001BF07C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_1000046DC(&qword_10029F3E8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1001BF0E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029F3E8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

void sub_1001BF234(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7)
{
  if (a7)
  {
    swift_errorRetain();
    if (qword_100298ED0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100222090();
    sub_100003CC8(v12, (uint64_t)qword_10029F120);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    oslog = sub_100222070();
    os_log_type_t v13 = sub_100222500();
    if (os_log_type_enabled(oslog, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446722;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a1, a2, &v27);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2082;
      uint64_t v15 = sub_1001196F4(a3, a4, a5, a6);
      sub_1001BEBDC(v15, v16, &v27);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2082;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v17 = sub_1002222C0();
      sub_1001BEBDC(v17, v18, &v27);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v13, "%{public}s errored for %{public}s: %{public}s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100298ED0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_100222090();
    sub_100003CC8(v19, (uint64_t)qword_10029F120);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_100222070();
    os_log_type_t v21 = sub_1002224E0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446466;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a1, a2, &v27);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v23 = sub_1001196F4(a3, a4, a5, a6);
      sub_1001BEBDC(v23, v24, &v27);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s finished for %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1001BF768(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18 = a12;
  sub_1001BF234(0x65726170657250, 0xE700000000000000, *(void *)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name), *(void **)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 8), *(void *)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 16), *(void **)(a13 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_name + 24), a12);
  if (a12)
  {
    swift_getErrorValue();
    uint64_t v18 = (uint64_t)sub_1001B9900(v26, v27);
  }
  if (a2) {
    NSString v19 = sub_100222260();
  }
  else {
    NSString v19 = 0;
  }
  if (a4 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_100221BD0().super.isa;
  }
  if (a6 >> 60 == 15) {
    Class v21 = 0;
  }
  else {
    Class v21 = sub_100221BD0().super.isa;
  }
  if (a8 >> 60 == 15) {
    Class v22 = 0;
  }
  else {
    Class v22 = sub_100221BD0().super.isa;
  }
  if (a10 >> 60 != 15)
  {
    Class v23 = sub_100221BD0().super.isa;
    if (v18) {
      goto LABEL_17;
    }
LABEL_19:
    unint64_t v24 = 0;
    goto LABEL_20;
  }
  Class v23 = 0;
  if (!v18) {
    goto LABEL_19;
  }
LABEL_17:
  unint64_t v24 = (void *)sub_100221B30();
LABEL_20:
  (*(void (**)(uint64_t, NSString, Class, Class, Class, Class, uint64_t, void *))(a14 + 16))(a14, v19, isa, v21, v22, v23, a11, v24);

  return swift_errorRelease();
}

uint64_t sub_1001BF944(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a2)
  {
    swift_getErrorValue();
    id v5 = sub_1001B9900(v8, v9);
    if (!isa) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v5 = 0;
  if (a1)
  {
LABEL_3:
    sub_1000047D8(0, &qword_10029ECA8);
    Class isa = sub_1002221C0().super.isa;
  }
LABEL_4:
  if (v5) {
    unint64_t v6 = (void *)sub_100221B30();
  }
  else {
    unint64_t v6 = 0;
  }
  (*(void (**)(uint64_t, Class, void *))(a3 + 16))(a3, isa, v6);

  return swift_errorRelease();
}

uint64_t sub_1001BFA28(void *a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  uint64_t v6 = sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v7 = a1;
  uint64_t v36 = v6;
  uint64_t v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    id v11 = v7;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Dumping for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v35 = v7;
      id v14 = v7;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", v35, a1, v36);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v39[0];
      long long v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a2;
      v32[3] = v31;
      v32[4] = sub_1001DAD8C;
      v32[5] = v38;
      swift_retain();
      id v33 = v31;
      swift_retain();
      sub_1001267CC((uint64_t)sub_1001DAE50, (uint64_t)v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v7;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  Class v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v39);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Dumping failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v39[2], v39[3]);
  long long v30 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a3)[2](a3, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001BFFFC(void *a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  uint64_t v6 = sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v7 = a1;
  uint64_t v36 = v6;
  uint64_t v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    id v11 = v7;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "honorIDMSListChanges for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v35 = v7;
      id v14 = v7;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", v35, a1, v36);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v39[0];
      long long v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a2;
      v32[3] = v31;
      v32[4] = sub_1001DB0A8;
      v32[5] = v38;
      swift_retain();
      id v33 = v31;
      swift_retain();
      sub_1001292B0((uint64_t)sub_1001DAD44, (uint64_t)v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v7;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  Class v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v39);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "honorIDMSListChanges failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v39[2], v39[3]);
  long long v30 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a3)[2](a3, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C05D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void))
{
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = a5;
  _Block_copy(a5);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029F120);
  id v8 = a1;
  os_log_type_t v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v36 = a4;
    id v11 = (uint8_t *)swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)id v11 = 136446210;
    id v12 = v8;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v13 = sub_1002222C0();
    sub_1001BEBDC(v13, v14, v41);
    sub_100222690();

    a4 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Finding bottleID for %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v15 = v8;
      id v16 = objc_msgSend(v15, "cloudkitContainerName", v8, a1);
      sub_100222270();

      id v17 = [v15 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v18, v19);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v32 = (void *)v41[0];
      id v33 = (void *)swift_allocObject();
      uint64_t v33[2] = a4;
      v33[3] = v32;
      v33[4] = sub_1001DACC4;
      v33[5] = v40;
      swift_retain();
      id v34 = v32;
      swift_retain();
      sub_10004224C(a2, a3, (uint64_t)sub_1001DACE4, (uint64_t)v33);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v20 = xmmword_100231740;
  *(unsigned char *)(v20 + 16) = 13;
  swift_willThrow();
  id v21 = v8;
  swift_errorRetain();
  id v22 = v21;
  swift_errorRetain();
  os_log_type_t v23 = sub_100222070();
  os_log_type_t v24 = sub_100222500();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    id v26 = v22;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v27 = sub_1002222C0();
    sub_1001BEBDC(v27, v28, v41);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v29 = sub_1002222C0();
    sub_1001BEBDC(v29, v30, v41);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Finding bottleID failed for %{public}s: %{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v41[2], v41[3]);
  uint64_t v31 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a5)[2](a5, 0, v31);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C0BB4(void *a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  uint64_t v6 = sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v7 = a1;
  uint64_t v36 = v6;
  id v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v10 = 136446210;
    id v11 = v7;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Finding deviceNames for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v35 = v7;
      id v14 = v7;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", v35, a1, v36);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v39[0];
      long long v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a2;
      v32[3] = v31;
      v32[4] = sub_1001DAC34;
      v32[5] = v38;
      swift_retain();
      id v33 = v31;
      swift_retain();
      sub_1001294C8((uint64_t)sub_1001DAC7C, (uint64_t)v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v7;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  id v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v39);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Finding deviceNames failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v39[2], v39[3]);
  unint64_t v30 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a3)[2](a3, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C1188(void *a1, uint64_t a2, void (**a3)(const void *, id, void *))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  uint64_t v43 = a3;
  if (a1)
  {
    uint64_t v42 = v5;
    _Block_copy(a3);
    id v6 = a1;
    id v7 = [v6 cloudkitContainerName];
    sub_100222270();

    id v8 = [v6 octagonContextID];
    sub_100222270();

    __chkstk_darwin(v9, v10);
    type metadata accessor for Container();
    sub_100222560();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v29 = (void *)aBlock[0];
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_1001D9BEC;
    *(void *)(v30 + 24) = v42;
    type metadata accessor for Container.SemaphoreWrapper();
    swift_allocObject();
    swift_retain();
    uint64_t v31 = v29;
    uint64_t v32 = sub_1001984DC(v31, 0xD000000000000013, 0x8000000100244B20);

    id v33 = (void *)swift_allocObject();
    uint64_t v33[2] = v32;
    v33[3] = sub_1001DB098;
    v33[4] = v30;
    id v34 = *(void **)&v31[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
    id v35 = (void *)swift_allocObject();
    _OWORD v35[2] = v31;
    v35[3] = sub_1001DAC08;
    uint64_t v35[4] = v33;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_1001DAC18;
    *(void *)(v36 + 24) = v35;
    aBlock[4] = (uint64_t)sub_1000439DC;
    uint64_t aBlock[5] = v36;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100289038;
    long long v37 = _Block_copy(aBlock);
    uint64_t v38 = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v34 performBlockAndWait:v37];
    swift_release();
    swift_release();
    _Block_release(v37);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();

    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  else
  {
    sub_100042D4C();
    uint64_t v11 = swift_allocError();
    *(_OWORD *)uint64_t v12 = xmmword_100231740;
    *(unsigned char *)(v12 + 16) = 13;
    _Block_copy(a3);
    swift_willThrow();
    if (qword_100298ED0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029F120);
    id v14 = 0;
    swift_errorRetain();
    id v15 = v14;
    swift_errorRetain();
    id v16 = sub_100222070();
    os_log_type_t v17 = sub_100222500();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v45 = 0;
      id v19 = v15;
      sub_1000046DC(&qword_10029F3E0);
      uint64_t v20 = sub_1002222C0();
      uint64_t v45 = sub_1001BEBDC(v20, v21, aBlock);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v45 = v11;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v22 = sub_1002222C0();
      uint64_t v45 = sub_1001BEBDC(v22, v23, aBlock);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Trust status failed for %{public}s: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
    sub_100009CB8((uint64_t)_swiftEmptyArrayStorage);
    id v24 = objc_allocWithZone((Class)TrustedPeersHelperEgoPeerStatus);
    sub_1000047D8(0, &qword_10029EEF8);
    Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    Class v26 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    LOBYTE(v41) = 0;
    id v27 = [v24 initWithEgoPeerID:0 egoPeerMachineID:0 status:32 viablePeerCountsByModelID:isa peerCountsByMachineID:v26 isExcluded:0 isLocked:v41];

    swift_getErrorValue();
    sub_1001B9900(v46, v47);
    uint64_t v28 = (void *)sub_100221B30();
    v43[2](v43, v27, v28);

    swift_errorRelease();
    swift_errorRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001C18BC(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a3;
  id v34 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v36);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Fetch Trust State for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v36[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001DABDC;
      *(void *)(v32 + 24) = v35;
      swift_retain();
      sub_10012401C((uint64_t)sub_1001DABE4, v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v36);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v36);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Fetch Trust State failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v36[2], v36[3]);
  uint64_t v30 = (void *)sub_100221B30();
  (*((void (**)(const void *, void, void, void *))v34 + 2))(v34, 0, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C1EA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, char a9, char a10, uint64_t a11, uint64_t a12, void (**a13)(void, void))
{
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = a13;
  _Block_copy(a13);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100222090();
  sub_100003CC8(v14, (uint64_t)qword_10029F120);
  id v15 = a1;
  id v16 = sub_100222070();
  os_log_type_t v17 = sub_1002224E0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446210;
    uint64_t v19 = a1;
    id v20 = v15;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v21 = sub_1002222C0();
    sub_1001BEBDC(v21, v22, v52);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Resetting for %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v19)
    {
LABEL_5:
      id v23 = v15;
      id v24 = [v23 cloudkitContainerName];
      sub_100222270();

      id v25 = [v23 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v26, v27);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = (void *)v52[0];
      uint64_t v41 = (void *)swift_allocObject();
      v41[2] = a12;
      v41[3] = v40;
      uint64_t v41[4] = sub_1001DAEA4;
      v41[5] = v51;
      swift_retain();
      id v42 = v40;
      swift_retain();
      sub_10012A220(a2, a3, a4, a5, a6, a7 & 1, a8 & 1, a9 & 1, a10 & 1, a11, (uint64_t)sub_1001DABA4, (uint64_t)v41);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v28 = xmmword_100231740;
  *(unsigned char *)(v28 + 16) = 13;
  swift_willThrow();
  id v29 = v15;
  swift_errorRetain();
  id v30 = v29;
  swift_errorRetain();
  uint64_t v31 = sub_100222070();
  os_log_type_t v32 = sub_100222500();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446466;
    id v34 = v30;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v35 = sub_1002222C0();
    sub_1001BEBDC(v35, v36, v52);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v37 = sub_1002222C0();
    sub_1001BEBDC(v37, v38, v52);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Resetting failed for %{public}s: %{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v52[2], v52[3]);
  uint64_t v39 = (void *)sub_100221B30();
  ((void (**)(void, void *))a13)[2](a13, v39);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C24D4(void *a1, char a2, char a3, char a4, uint64_t a5, void (**a6)(void, void))
{
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = a6;
  _Block_copy(a6);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029F120);
  id v9 = a1;
  uint64_t v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  id v51 = v9;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v53 = (uint64_t)a1;
    id v13 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v14 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v14, v15, aBlock);
    sub_100222690();

    id v9 = v51;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "performCKServerUnreadableDataRemoval for %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v16 = v9;
      id v17 = objc_msgSend(v16, "cloudkitContainerName", a1);
      sub_100222270();

      id v18 = [v16 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v19, v20);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v34 = (void *)aBlock[0];
      uint64_t v35 = (void *)swift_allocObject();
      _OWORD v35[2] = a5;
      v35[3] = v34;
      uint64_t v35[4] = sub_1001DAEA4;
      v35[5] = v50;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      unint64_t v36 = v34;
      swift_retain();
      uint64_t v37 = sub_1001984DC(v36, 0xD000000000000055, 0x8000000100244AC0);
      unint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      v38[3] = sub_1001DAADC;
      v38[4] = v35;
      uint64_t v39 = *(void **)&v36[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v40 = swift_allocObject();
      *(unsigned char *)(v40 + 16) = a2 & 1;
      *(unsigned char *)(v40 + 17) = a3 & 1;
      *(unsigned char *)(v40 + 18) = a4 & 1;
      *(void *)(v40 + 24) = v36;
      *(void *)(v40 + 32) = sub_1001DAB18;
      *(void *)(v40 + 40) = v38;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_1001DAB64;
      *(void *)(v41 + 24) = v40;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v41;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288EA8;
      id v42 = _Block_copy(aBlock);
      uint64_t v43 = v36;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v39 performBlockAndWait:v42];
      swift_release();
      swift_release();
      _Block_release(v42);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v21 = swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v9;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v53 = (uint64_t)a1;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v29, v30, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v53 = v21;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v31 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v31, v32, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "performCKServerUnreadableDataRemoval failed for %{public}s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v54, v55);
  uint64_t v33 = (void *)sub_100221B30();
  ((void (**)(void, void *))a6)[2](a6, v33);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C2CA4(void *a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    uint64_t v46 = (uint64_t)a1;
    id v10 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v11 = sub_1002222C0();
    uint64_t v46 = sub_1001BEBDC(v11, v12, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Performing local reset for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v13 = v6;
      id v14 = [v13 cloudkitContainerName];
      sub_100222270();

      id v15 = [v13 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v16, v17);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)aBlock[0];
      unint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a2;
      v32[3] = v31;
      v32[4] = sub_1001DAEA4;
      v32[5] = v44;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v33 = v31;
      swift_retain();
      uint64_t v34 = sub_1001984DC(v33, 0xD000000000000012, 0x8000000100244AA0);
      uint64_t v35 = (void *)swift_allocObject();
      _OWORD v35[2] = v34;
      v35[3] = sub_1001DAA58;
      uint64_t v35[4] = v32;
      unint64_t v36 = *(void **)&v33[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v37 = (void *)swift_allocObject();
      uint64_t v37[2] = v33;
      v37[3] = sub_1001DAA98;
      v37[4] = v35;
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = sub_1001DAAA8;
      *(void *)(v38 + 24) = v37;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v38;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288DB8;
      uint64_t v39 = _Block_copy(aBlock);
      uint64_t v40 = v33;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v36 performBlockAndWait:v39];
      swift_release();
      swift_release();
      _Block_release(v39);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v18 = swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v46 = (uint64_t)a1;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    uint64_t v46 = sub_1001BEBDC(v26, v27, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    uint64_t v46 = v18;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    uint64_t v46 = sub_1001BEBDC(v28, v29, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Local reset failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v47, v48);
  unint64_t v30 = (void *)sub_100221B30();
  ((void (**)(void, void *))a3)[2](a3, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C343C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void (**a20)(void, void, void))
{
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = a20;
  _Block_copy(a20);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100222090();
  sub_100003CC8(v22, (uint64_t)qword_10029F120);
  id v23 = a1;
  swift_bridgeObjectRetain_n();
  id v24 = v23;
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_1002224E0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    id v56 = v24;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    sub_1001BEBDC(v29, v30, v64);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_100222450();
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v34 = v31;
    id v24 = v56;
    sub_1001BEBDC(v34, v33, v64);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Setting allowed machineIDs for %{public}s to %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v35 = v24;
      id v36 = [v35 cloudkitContainerName];
      sub_100222270();

      id v37 = [v35 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v38, v39);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v52 = (void *)v64[0];
      uint64_t v53 = (void *)swift_allocObject();
      v53[2] = a19;
      v53[3] = v52;
      v53[4] = sub_1001DAE94;
      v53[5] = v63;
      swift_retain();
      id v54 = v52;
      swift_retain();
      sub_1001F67EC(a2, a3, a4, a5, a6 & 1, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, (uint64_t)sub_1001DAA34, (uint64_t)v53);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v40 = xmmword_100231740;
  *(unsigned char *)(v40 + 16) = 13;
  swift_willThrow();
  id v41 = v24;
  swift_errorRetain();
  id v42 = v41;
  swift_errorRetain();
  uint64_t v43 = sub_100222070();
  os_log_type_t v44 = sub_100222500();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136446466;
    id v46 = v42;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v47 = sub_1002222C0();
    sub_1001BEBDC(v47, v48, v64);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v49 = sub_1002222C0();
    sub_1001BEBDC(v49, v50, v64);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Setting allowed machineIDs failed for %{public}s: %{public}s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v64[2], v64[3]);
  id v51 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a20)[2](a20, 0, v51);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C3B38(void *a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    uint64_t v46 = (uint64_t)a1;
    id v10 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v11 = sub_1002222C0();
    uint64_t v46 = sub_1001BEBDC(v11, v12, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Marking MID list as expired for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v13 = v6;
      id v14 = [v13 cloudkitContainerName];
      sub_100222270();

      id v15 = [v13 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v16, v17);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)aBlock[0];
      unint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a2;
      v32[3] = v31;
      v32[4] = sub_1001DAEA4;
      v32[5] = v44;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      unint64_t v33 = v31;
      swift_retain();
      uint64_t v34 = sub_1001984DC(v33, 0xD000000000000028, 0x8000000100245B60);
      id v35 = (void *)swift_allocObject();
      _OWORD v35[2] = v34;
      v35[3] = sub_1001DA9B4;
      uint64_t v35[4] = v32;
      id v36 = *(void **)&v33[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      id v37 = (void *)swift_allocObject();
      uint64_t v37[2] = v33;
      v37[3] = sub_1001DA9F0;
      v37[4] = v35;
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = sub_1001DAA00;
      *(void *)(v38 + 24) = v37;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v38;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288C78;
      uint64_t v39 = _Block_copy(aBlock);
      uint64_t v40 = v33;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v36 performBlockAndWait:v39];
      swift_release();
      swift_release();
      _Block_release(v39);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v18 = swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v46 = (uint64_t)a1;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    uint64_t v46 = sub_1001BEBDC(v26, v27, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    uint64_t v46 = v18;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    uint64_t v46 = sub_1001BEBDC(v28, v29, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Marking MID list as expired failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v47, v48);
  unint64_t v30 = (void *)sub_100221B30();
  ((void (**)(void, void *))a3)[2](a3, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C42D0(void *a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  uint64_t v6 = sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v7 = a1;
  uint64_t v36 = v6;
  os_log_type_t v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)id v10 = 136446210;
    id v11 = v7;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Fetching allowed machineIDs for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v35 = v7;
      id v14 = v7;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", v35, a1, v36);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v39[0];
      unint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a2;
      v32[3] = v31;
      v32[4] = sub_1001DA934;
      v32[5] = v38;
      swift_retain();
      id v33 = v31;
      swift_retain();
      sub_1001EC5A8((uint64_t)sub_1001DA954, (uint64_t)v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v7;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v39);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Fetching allowed machineIDs failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v39[2], v39[3]);
  unint64_t v30 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a3)[2](a3, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C48A4(void *a1, uint64_t a2, void (**a3)(const void *, void, void *))
{
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a3;
  uint64_t v34 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136446210;
    id v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v36);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "retrieving epoch for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v36[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001DAE98;
      *(void *)(v32 + 24) = v35;
      swift_retain();
      sub_1001321C0((uint64_t)sub_1001DA914, v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v36);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v36);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Epoch retrieval failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v36[2], v36[3]);
  unint64_t v30 = (void *)sub_100221B30();
  v34[2](v34, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

void sub_1001C4E84(void *a1, void *a2, void *a3, char *a4, void *a5, void *a6, uint64_t a7, char *a8, void *a9, uint64_t a10, char *a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, void *a16, void *a17, int a18, void *a19, void *a20,uint64_t a21,unint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,void *aBlock)
{
  _Block_copy(aBlock);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_100222090();
  sub_100003CC8(v27, (uint64_t)qword_10029F120);
  id v28 = a1;
  unint64_t v29 = sub_100222070();
  os_log_type_t v30 = sub_1002224E0();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446210;
    uint64_t v32 = a1;
    id v33 = v28;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v34 = sub_1002222C0();
    sub_1001BEBDC(v34, v35, v63);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Preparing new identity for %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v32)
    {
LABEL_5:
      id v36 = v28;
      id v37 = [v36 cloudkitContainerName];
      sub_100222270();

      id v38 = [v36 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v39, v40);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = (void *)v63[0];
      id v54 = aBlock;
      _Block_copy(aBlock);
      swift_retain();
      id v55 = v53;
      sub_1001A9198(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
        a21,
        a22,
        a23,
        a24,
        v55,
        a25,
        v55,
        aBlock);
      _Block_release(aBlock);

      goto LABEL_11;
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v41 = xmmword_100231740;
  *(unsigned char *)(v41 + 16) = 13;
  swift_willThrow();
  id v42 = v28;
  swift_errorRetain();
  id v43 = v42;
  swift_errorRetain();
  uint64_t v44 = sub_100222070();
  os_log_type_t v45 = sub_100222500();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136446466;
    id v47 = v43;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v48 = sub_1002222C0();
    sub_1001BEBDC(v48, v49, v63);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v50 = sub_1002222C0();
    sub_1001BEBDC(v50, v51, v63);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Prepare failed for %{public}s: %{public}s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  id v54 = aBlock;
  swift_getErrorValue();
  sub_1001B9900(v63[2], v63[3]);
  BOOL v52 = (void *)sub_100221B30();
  (*((void (**)(void *, void, void, void, void, void, void, void *))v54 + 2))(v54, 0, 0, 0, 0, 0, 0, v52);

  swift_errorRelease();
  swift_errorRelease();
LABEL_11:
  _Block_release(v54);
}

uint64_t sub_1001C5530(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, void *a15, void *a16, uint64_t a17, void (**a18)(void, void, void, void, void, void, void, void, void, void))
{
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = a18;
  _Block_copy(a18);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100222090();
  sub_100003CC8(v19, (uint64_t)qword_10029F120);
  id v20 = a1;
  id v21 = sub_100222070();
  os_log_type_t v22 = sub_1002224E0();
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v23 = 136446210;
    id v24 = v20;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v25 = sub_1002222C0();
    sub_1001BEBDC(v25, v26, v63);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Preparing new identity for inheritance peer %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v27 = v20;
      id v28 = [v27 cloudkitContainerName];
      sub_100222270();

      id v29 = [v27 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v30, v31);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = (void *)v63[0];
      os_log_type_t v45 = (void *)swift_allocObject();
      v45[2] = a17;
      v45[3] = v44;
      v45[4] = sub_1001DA748;
      v45[5] = v62;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v46 = v44;
      swift_retain();
      uint64_t v54 = sub_1001984DC(v46, 0xD0000000000000FDLL, 0x80000001002448A0);
      id v47 = (void *)swift_allocObject();
      v47[2] = v54;
      v47[3] = sub_1001DA79C;
      v47[4] = v45;
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = sub_1001DA7E8;
      *(void *)(v48 + 24) = v47;
      *(void *)(v48 + 32) = a16;
      *(void *)(v48 + 40) = v46;
      *(void *)(v48 + 48) = a2;
      *(void *)(v48 + 56) = a3;
      *(void *)(v48 + 64) = a4;
      *(void *)(v48 + 72) = a5;
      *(void *)(v48 + 80) = a12;
      *(_DWORD *)(v48 + 88) = a14;
      *(void *)(v48 + 96) = a13;
      *(void *)(v48 + 104) = a15;
      *(void *)(v48 + 112) = a6;
      *(void *)(v48 + 120) = a7;
      *(void *)(v48 + 128) = a8;
      *(void *)(v48 + 136) = a9;
      *(void *)(v48 + 144) = a10;
      *(void *)(v48 + 152) = a11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v49 = v46;
      swift_retain();
      swift_retain();
      swift_retain();
      id v50 = a16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v51 = a12;
      swift_bridgeObjectRetain();
      id v52 = a15;
      swift_bridgeObjectRetain();
      sub_100174C40((uint64_t)sub_1001DA8B8, v48);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v32 = xmmword_100231740;
  *(unsigned char *)(v32 + 16) = 13;
  swift_willThrow();
  id v33 = v20;
  swift_errorRetain();
  id v34 = v33;
  swift_errorRetain();
  unint64_t v35 = sub_100222070();
  os_log_type_t v36 = sub_100222500();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446466;
    id v38 = v34;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v39 = sub_1002222C0();
    sub_1001BEBDC(v39, v40, v63);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v41 = sub_1002222C0();
    sub_1001BEBDC(v41, v42, v63);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "prepareInheritancePeer failed for %{public}s: %{public}s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v63[2], v63[3]);
  id v43 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void, void, void, void, void, void *))a18)[2](a18, 0, 0, 0, 0, 0, 0, 0, 0, v43);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C5D00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(void, void, void, void, void))
{
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = a6;
  _Block_copy(a6);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029F120);
  id v9 = a1;
  id v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  id v50 = v9;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v53 = (uint64_t)a1;
    id v13 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v14 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v14, v15, aBlock);
    sub_100222690();

    id v9 = v50;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Establishing %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v16 = v9;
      id v17 = [v16 cloudkitContainerName];
      sub_100222270();

      id v18 = [v16 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v19, v20);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v34 = (void *)aBlock[0];
      unint64_t v35 = (void *)swift_allocObject();
      _OWORD v35[2] = a5;
      v35[3] = v34;
      uint64_t v35[4] = sub_1001DB0A0;
      v35[5] = v49;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      os_log_type_t v36 = v34;
      swift_retain();
      uint64_t v48 = sub_1001984DC(v36, 0xD000000000000034, 0x8000000100244830);
      uint64_t v37 = (void *)swift_allocObject();
      uint64_t v37[2] = v48;
      v37[3] = sub_1001DA674;
      v37[4] = v35;
      id v51 = *(void **)&v36[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      id v38 = (void *)swift_allocObject();
      v38[2] = v36;
      v38[3] = a2;
      v38[4] = a3;
      v38[5] = a4;
      v38[6] = sub_1001DA6A4;
      v38[7] = v37;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = sub_1001DA708;
      *(void *)(v39 + 24) = v38;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v39;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288A48;
      unint64_t v40 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v41 = v36;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      [v51 performBlockAndWait:v40];
      swift_release();
      swift_release();
      _Block_release(v40);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v21 = swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v9;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  uint64_t v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v53 = (uint64_t)a1;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v29, v30, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v53 = v21;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v31 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v31, v32, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Establishing failed for %{public}s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v54, v55);
  id v33 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void *))a6)[2](a6, 0, 0, 0, v33);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C64E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, void (**a19)(void, void, void, void))
{
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = a19;
  _Block_copy(a19);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100222090();
  sub_100003CC8(v20, (uint64_t)qword_10029F120);
  id v21 = a1;
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_1002224E0();
  BOOL v61 = v21;
  if (os_log_type_enabled(v22, v23))
  {
    id v24 = (uint8_t *)swift_slowAlloc();
    v62[0] = swift_slowAlloc();
    *(_DWORD *)id v24 = 136446210;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v62);
    sub_100222690();

    id v21 = v61;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Vouching %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v28 = v21;
      id v29 = [v28 cloudkitContainerName];
      sub_100222270();

      id v30 = [v28 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v31, v32);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_type_t v45 = (void *)v62[0];
      id v46 = [v28 altDSID];
      uint64_t v47 = sub_100222270();
      uint64_t v49 = v48;

      id v50 = (void *)swift_allocObject();
      v50[2] = a18;
      void v50[3] = v45;
      v50[4] = sub_1001DA610;
      v50[5] = v60;
      swift_retain();
      id v51 = v45;
      swift_retain();
      sub_10014B734(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v47, v49, a13, a14, a15, a16, a17 & 1, (uint64_t)sub_1001DA630,
        (uint64_t)v50);
      swift_release();

      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v33 = xmmword_100231740;
  *(unsigned char *)(v33 + 16) = 13;
  swift_willThrow();
  id v34 = v61;
  swift_errorRetain();
  id v35 = v34;
  swift_errorRetain();
  os_log_type_t v36 = sub_100222070();
  os_log_type_t v37 = sub_100222500();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    v62[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136446466;
    id v39 = v35;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v40 = sub_1002222C0();
    sub_1001BEBDC(v40, v41, v62);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v42 = sub_1002222C0();
    sub_1001BEBDC(v42, v43, v62);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Vouching failed for %{public}s: %{public}s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v62[2], v62[3]);
  uint64_t v44 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void *))a19)[2](a19, 0, 0, v44);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C6B94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void, void, void))
{
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = a5;
  _Block_copy(a5);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029F120);
  id v8 = a1;
  id v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 136446210;
    uint64_t v50 = (uint64_t)a1;
    id v12 = v8;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v13 = sub_1002222C0();
    uint64_t v50 = sub_1001BEBDC(v13, v14, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Preflight Vouch With Bottle %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v15 = v8;
      id v16 = objc_msgSend(v15, "cloudkitContainerName", v8, a1);
      sub_100222270();

      id v17 = [v15 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v18, v19);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)aBlock[0];
      id v34 = (void *)swift_allocObject();
      v34[2] = a4;
      v34[3] = v33;
      v34[4] = sub_1001DA518;
      v34[5] = v48;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v35 = v33;
      swift_retain();
      uint64_t v36 = sub_1001984DC(v35, 0xD000000000000029, 0x8000000100241040);
      os_log_type_t v37 = (void *)swift_allocObject();
      uint64_t v37[2] = v36;
      v37[3] = sub_1001DA538;
      v37[4] = v34;
      uint64_t v47 = *(void **)&v35[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v35;
      v38[3] = a2;
      v38[4] = a3;
      v38[5] = sub_1001DA568;
      v38[6] = v37;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = sub_1001DA5D0;
      *(void *)(v39 + 24) = v38;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v39;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288908;
      uint64_t v40 = _Block_copy(aBlock);
      unint64_t v41 = v35;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      [v47 performBlockAndWait:v40];
      swift_release();
      swift_release();
      _Block_release(v40);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v20 = swift_allocError();
  *(_OWORD *)uint64_t v21 = xmmword_100231740;
  *(unsigned char *)(v21 + 16) = 13;
  swift_willThrow();
  id v22 = v8;
  swift_errorRetain();
  id v23 = v22;
  swift_errorRetain();
  id v24 = sub_100222070();
  os_log_type_t v25 = sub_100222500();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v50 = (uint64_t)a1;
    id v27 = v23;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v28 = sub_1002222C0();
    uint64_t v50 = sub_1001BEBDC(v28, v29, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v50 = v20;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v30 = sub_1002222C0();
    uint64_t v50 = sub_1001BEBDC(v30, v31, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Preflighting Vouch With Bottle failed for %{public}s: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v51, v52);
  uint64_t v32 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void *))a5)[2](a5, 0, 0, 0, v32);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C7358(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (**a10)(void, void, void, void, void, void))
{
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = a10;
  _Block_copy(a10);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_10029F120);
  id v12 = a1;
  uint64_t v13 = sub_100222070();
  os_log_type_t v14 = sub_1002224E0();
  if (os_log_type_enabled(v13, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v15 = 136446210;
    uint64_t v59 = (uint64_t)a1;
    id v16 = a1;
    id v17 = v12;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v18 = sub_1002222C0();
    uint64_t v59 = sub_1001BEBDC(v18, v19, aBlock);
    sub_100222690();

    a1 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Vouching With Bottle %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v16) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v20 = v12;
      id v21 = [v20 cloudkitContainerName];
      sub_100222270();

      id v22 = [v20 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v23, v24);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = (void *)aBlock[0];
      uint64_t v39 = (void *)swift_allocObject();
      _OWORD v39[2] = a9;
      v39[3] = v38;
      uint64_t v39[4] = sub_1001DAEA0;
      v39[5] = v57;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v40 = v38;
      swift_retain();
      uint64_t v47 = sub_1001984DC(v40, 0xD00000000000003DLL, 0x80000001002447F0);
      unint64_t v41 = (void *)swift_allocObject();
      v41[2] = v47;
      v41[3] = sub_1001DA3F0;
      uint64_t v41[4] = v39;
      id v56 = *(void **)&v40[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v42 = (void *)swift_allocObject();
      v42[2] = v40;
      v42[3] = a2;
      v42[4] = a3;
      v42[5] = sub_1001DA444;
      v42[6] = v41;
      v42[7] = a4;
      v42[8] = a5;
      v42[9] = a6;
      v42[10] = a7;
      v42[11] = a8;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = sub_1001DA4D0;
      *(void *)(v43 + 24) = v42;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v43;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288818;
      uint64_t v44 = _Block_copy(aBlock);
      uint64_t v55 = v40;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1000059E8(a4, a5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      [v56 performBlockAndWait:v44];
      swift_release();
      swift_release();
      _Block_release(v44);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v25 = swift_allocError();
  *(_OWORD *)uint64_t v26 = xmmword_100231740;
  *(unsigned char *)(v26 + 16) = 13;
  swift_willThrow();
  id v27 = v12;
  swift_errorRetain();
  id v28 = v27;
  swift_errorRetain();
  unint64_t v29 = sub_100222070();
  os_log_type_t v30 = sub_100222500();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v59 = (uint64_t)a1;
    id v32 = v28;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v33 = sub_1002222C0();
    uint64_t v59 = sub_1001BEBDC(v33, v34, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    uint64_t v59 = v25;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v35 = sub_1002222C0();
    uint64_t v59 = sub_1001BEBDC(v35, v36, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Vouching with Bottle failed for %{public}s: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v60, v61);
  os_log_type_t v37 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void, void *))a10)[2](a10, 0, 0, 0, 0, v37);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C7BA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(void, void, void, void))
{
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = a7;
  _Block_copy(a7);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029F120);
  id v10 = a1;
  uint64_t v11 = sub_100222070();
  os_log_type_t v12 = sub_1002224E0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    id v14 = v10;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v15 = sub_1002222C0();
    sub_1001BEBDC(v15, v16, v48);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Preflight Vouch With RecoveryKey %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v17 = v10;
      id v18 = objc_msgSend(v17, "cloudkitContainerName", v10, a1);
      sub_100222270();

      id v19 = [v17 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v20, v21);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v34 = (void *)v48[0];
      uint64_t v35 = (void *)swift_allocObject();
      _OWORD v35[2] = a6;
      v35[3] = v34;
      uint64_t v35[4] = sub_1001DAEA8;
      v35[5] = v47;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      id v36 = v34;
      swift_retain();
      swift_retain();
      uint64_t v37 = sub_1001984DC(v36, 0xD000000000000036, 0x8000000100241360);

      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      v38[3] = sub_1001DA34C;
      v38[4] = v35;
      uint64_t v39 = (void *)swift_allocObject();
      _OWORD v39[2] = sub_1001DA394;
      v39[3] = v38;
      uint64_t v39[4] = v36;
      v39[5] = a2;
      v39[6] = a3;
      v39[7] = a4;
      v39[8] = a5;
      id v40 = v36;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100174E30(0, (uint64_t)sub_1001DA3A4, (uint64_t)v39);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v10;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  uint64_t v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    sub_1001BEBDC(v29, v30, v48);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v31 = sub_1002222C0();
    sub_1001BEBDC(v31, v32, v48);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Preflighting Vouch With RecoveryKey failed for %{public}s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v48[2], v48[3]);
  uint64_t v33 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void *))a7)[2](a7, 0, 0, v33);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C8298(void *a1, void *a2, uint64_t a3, void (**a4)(void, void, void, void))
{
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029F120);
  id v7 = a1;
  id v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    *(_DWORD *)id v10 = 136446210;
    id v11 = v7;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v43);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Preflight Vouch With CustodianRecoveryKey %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v14 = v7;
      id v15 = [v14 cloudkitContainerName];
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v43[0];
      unint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a3;
      v32[3] = v31;
      v32[4] = sub_1001DA26C;
      v32[5] = v42;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      id v33 = v31;
      swift_retain();
      swift_retain();
      uint64_t v34 = sub_1001984DC(v33, 0xD000000000000032, 0x8000000100241320);

      uint64_t v35 = (void *)swift_allocObject();
      _OWORD v35[2] = v34;
      v35[3] = sub_1001DA28C;
      uint64_t v35[4] = v32;
      id v36 = (void *)swift_allocObject();
      v36[2] = sub_1001DA2D4;
      v36[3] = v35;
      uint64_t v36[4] = v33;
      v36[5] = a2;
      id v37 = v33;
      swift_retain();
      swift_retain();
      swift_retain();
      id v38 = a2;
      sub_100174C40((uint64_t)sub_1001DA328, (uint64_t)v36);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v7;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v43);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v43);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Preflighting Vouch With CustodianRecoveryKey failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v43[2], v43[3]);
  unint64_t v30 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void *))a4)[2](a4, 0, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C8960(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(void, void, void, void, void, void))
{
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = a8;
  _Block_copy(a8);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100222090();
  sub_100003CC8(v10, (uint64_t)qword_10029F120);
  id v11 = a1;
  uint64_t v12 = sub_100222070();
  os_log_type_t v13 = sub_1002224E0();
  id v54 = v11;
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v14 = 136446210;
    uint64_t v57 = (uint64_t)a1;
    id v15 = v11;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v16 = sub_1002222C0();
    uint64_t v57 = sub_1001BEBDC(v16, v17, aBlock);
    sub_100222690();

    id v11 = v54;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Vouching With Recovery Key %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v18 = v11;
      id v19 = [v18 cloudkitContainerName];
      sub_100222270();

      id v20 = [v18 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v21, v22);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v36 = (void *)aBlock[0];
      id v37 = (void *)swift_allocObject();
      uint64_t v37[2] = a7;
      v37[3] = v36;
      v37[4] = sub_1001DAEA0;
      v37[5] = v53;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v38 = v36;
      swift_retain();
      uint64_t v50 = sub_1001984DC(v38, 0xD000000000000037, 0x80000001002447B0);
      uint64_t v39 = (void *)swift_allocObject();
      _OWORD v39[2] = v50;
      v39[3] = sub_1001DA170;
      uint64_t v39[4] = v37;
      uint64_t v55 = *(void **)&v38[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      id v40 = (void *)swift_allocObject();
      _OWORD v40[2] = v38;
      v40[3] = sub_1001DA1C4;
      v40[4] = v39;
      v40[5] = a2;
      v40[6] = a3;
      v40[7] = a4;
      v40[8] = a5;
      v40[9] = a6;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_1001DA248;
      *(void *)(v41 + 24) = v40;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v41;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_1002885E8;
      uint64_t v42 = _Block_copy(aBlock);
      uint64_t v52 = v38;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      [v55 performBlockAndWait:v42];
      swift_release();
      swift_release();
      _Block_release(v42);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v23 = swift_allocError();
  *(_OWORD *)uint64_t v24 = xmmword_100231740;
  *(unsigned char *)(v24 + 16) = 13;
  swift_willThrow();
  id v25 = v11;
  swift_errorRetain();
  id v26 = v25;
  swift_errorRetain();
  unint64_t v27 = sub_100222070();
  os_log_type_t v28 = sub_100222500();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v57 = (uint64_t)a1;
    id v30 = v26;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v31 = sub_1002222C0();
    uint64_t v57 = sub_1001BEBDC(v31, v32, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2082;
    uint64_t v57 = v23;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v33 = sub_1002222C0();
    uint64_t v57 = sub_1001BEBDC(v33, v34, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Vouching with Recovery Key failed for %{public}s: %{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v58, v59);
  uint64_t v35 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void, void *))a8)[2](a8, 0, 0, 0, 0, v35);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C9164(void *a1, void *a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void, void))
{
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = a5;
  _Block_copy(a5);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029F120);
  id v8 = a1;
  os_log_type_t v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v11 = 136446210;
    uint64_t v51 = (uint64_t)a1;
    id v12 = v8;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v13 = sub_1002222C0();
    uint64_t v51 = sub_1001BEBDC(v13, v14, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Recovering TLKShares for Inheritor %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v15 = v8;
      id v16 = objc_msgSend(v15, "cloudkitContainerName", v8, a1);
      sub_100222270();

      id v17 = [v15 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v18, v19);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)aBlock[0];
      unint64_t v34 = (void *)swift_allocObject();
      v34[2] = a4;
      v34[3] = v33;
      v34[4] = sub_1001DA040;
      v34[5] = v49;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v35 = v33;
      swift_retain();
      uint64_t v36 = sub_1001984DC(v35, 0xD000000000000032, 0x8000000100244770);
      id v37 = (void *)swift_allocObject();
      uint64_t v37[2] = v36;
      v37[3] = sub_1001DA084;
      v37[4] = v34;
      uint64_t v48 = *(void **)&v35[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      id v38 = (void *)swift_allocObject();
      v38[2] = v35;
      v38[3] = sub_1001DA0D0;
      v38[4] = v37;
      v38[5] = a2;
      v38[6] = a3;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = sub_1001DA130;
      *(void *)(v39 + 24) = v38;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v39;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_1002884F8;
      id v40 = _Block_copy(aBlock);
      uint64_t v41 = v35;
      swift_retain();
      swift_retain();
      swift_retain();
      id v42 = a2;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      [v48 performBlockAndWait:v40];
      swift_release();
      swift_release();
      _Block_release(v40);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v20 = swift_allocError();
  *(_OWORD *)uint64_t v21 = xmmword_100231740;
  *(unsigned char *)(v21 + 16) = 13;
  swift_willThrow();
  id v22 = v8;
  swift_errorRetain();
  id v23 = v22;
  swift_errorRetain();
  uint64_t v24 = sub_100222070();
  os_log_type_t v25 = sub_100222500();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v51 = (uint64_t)a1;
    id v27 = v23;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v28 = sub_1002222C0();
    uint64_t v51 = sub_1001BEBDC(v28, v29, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v51 = v20;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v30 = sub_1002222C0();
    uint64_t v51 = sub_1001BEBDC(v30, v31, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Recovering TLKShares for Inheritor failed for %{public}s: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v52, v53);
  unint64_t v32 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void *))a5)[2](a5, 0, 0, v32);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001C9928(void *a1, void *a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void, void, void, void))
{
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = a5;
  _Block_copy(a5);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029F120);
  id v8 = a1;
  os_log_type_t v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v11 = 136446210;
    uint64_t v51 = (uint64_t)a1;
    id v12 = v8;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v13 = sub_1002222C0();
    uint64_t v51 = sub_1001BEBDC(v13, v14, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Vouching With Custodian Recovery Key %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v15 = v8;
      id v16 = objc_msgSend(v15, "cloudkitContainerName", v8, a1);
      sub_100222270();

      id v17 = [v15 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v18, v19);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)aBlock[0];
      unint64_t v34 = (void *)swift_allocObject();
      v34[2] = a4;
      v34[3] = v33;
      v34[4] = sub_1001DAEA0;
      v34[5] = v49;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v35 = v33;
      swift_retain();
      uint64_t v36 = sub_1001984DC(v35, 0xD000000000000033, 0x8000000100244730);
      id v37 = (void *)swift_allocObject();
      uint64_t v37[2] = v36;
      v37[3] = sub_1001D9F94;
      v37[4] = v34;
      uint64_t v48 = *(void **)&v35[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      id v38 = (void *)swift_allocObject();
      v38[2] = v35;
      v38[3] = sub_1001D9FE8;
      v38[4] = v37;
      v38[5] = a2;
      v38[6] = a3;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = sub_1001DA018;
      *(void *)(v39 + 24) = v38;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v39;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288408;
      id v40 = _Block_copy(aBlock);
      uint64_t v41 = v35;
      swift_retain();
      swift_retain();
      swift_retain();
      id v42 = a2;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      [v48 performBlockAndWait:v40];
      swift_release();
      swift_release();
      _Block_release(v40);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v20 = swift_allocError();
  *(_OWORD *)uint64_t v21 = xmmword_100231740;
  *(unsigned char *)(v21 + 16) = 13;
  swift_willThrow();
  id v22 = v8;
  swift_errorRetain();
  id v23 = v22;
  swift_errorRetain();
  uint64_t v24 = sub_100222070();
  os_log_type_t v25 = sub_100222500();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v51 = (uint64_t)a1;
    id v27 = v23;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v28 = sub_1002222C0();
    uint64_t v51 = sub_1001BEBDC(v28, v29, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v51 = v20;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v30 = sub_1002222C0();
    uint64_t v51 = sub_1001BEBDC(v30, v31, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Vouching with Custodian Recovery Key failed for %{public}s: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v52, v53);
  unint64_t v32 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void, void *))a5)[2](a5, 0, 0, 0, 0, v32);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CA0F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(void, void, void, void, void, void))
{
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = a6;
  _Block_copy(a6);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029F120);
  id v9 = a1;
  os_log_type_t v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v46 = a5;
    id v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v12 = 136446210;
    uint64_t v54 = (uint64_t)a1;
    id v13 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v14 = sub_1002222C0();
    uint64_t v54 = sub_1001BEBDC(v14, v15, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Vouching With Reroll %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a5 = v46;
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v16 = v9;
      id v17 = [v16 cloudkitContainerName];
      uint64_t v18 = a5;
      sub_100222270();

      id v19 = [v16 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v20, v21);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = (void *)aBlock[0];
      uint64_t v36 = (void *)swift_allocObject();
      v36[2] = v18;
      v36[3] = v35;
      uint64_t v36[4] = sub_1001D9E64;
      v36[5] = v52;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v37 = v35;
      swift_retain();
      uint64_t v38 = sub_1001984DC(v37, 0xD00000000000002BLL, 0x8000000100244700);
      uint64_t v39 = (void *)swift_allocObject();
      _OWORD v39[2] = v38;
      v39[3] = sub_1001D9E84;
      uint64_t v39[4] = v36;
      uint64_t v51 = *(void **)&v37[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      id v40 = (void *)swift_allocObject();
      _OWORD v40[2] = v37;
      v40[3] = sub_1001D9ED8;
      v40[4] = v39;
      v40[5] = a2;
      v40[6] = a3;
      v40[7] = a4;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_1001D9F54;
      *(void *)(v41 + 24) = v40;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v41;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100288318;
      id v42 = _Block_copy(aBlock);
      uint64_t v43 = v37;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      [v51 performBlockAndWait:v42];
      swift_release();
      swift_release();
      _Block_release(v42);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v22 = swift_allocError();
  *(_OWORD *)uint64_t v23 = xmmword_100231740;
  *(unsigned char *)(v23 + 16) = 13;
  swift_willThrow();
  id v24 = v9;
  swift_errorRetain();
  id v25 = v24;
  swift_errorRetain();
  uint64_t v26 = sub_100222070();
  os_log_type_t v27 = sub_100222500();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v54 = (uint64_t)a1;
    id v29 = v25;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v30 = sub_1002222C0();
    uint64_t v54 = sub_1001BEBDC(v30, v31, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    uint64_t v54 = v22;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v32 = sub_1002222C0();
    uint64_t v54 = sub_1001BEBDC(v32, v33, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Vouching with Reroll failed for %{public}s: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v55, v56);
  unint64_t v34 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void, void *))a6)[2](a6, 0, 0, 0, 0, v34);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CA8CC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void (**a15)(void, void, void, void, void))
{
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = a15;
  _Block_copy(a15);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100222090();
  sub_100003CC8(v16, (uint64_t)qword_10029F120);
  id v17 = a1;
  uint64_t v18 = sub_100222070();
  os_log_type_t v19 = sub_1002224E0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    v56[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446210;
    id v21 = v17;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v22 = sub_1002222C0();
    sub_1001BEBDC(v22, v23, v56);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Joining %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v24 = v17;
      id v25 = [v24 cloudkitContainerName];
      sub_100222270();

      id v26 = [v24 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v27, v28);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = (void *)v56[0];
      id v42 = [v24 altDSID];
      uint64_t v43 = sub_100222270();
      uint64_t v45 = v44;

      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = sub_1001DB0A0;
      *(void *)(v46 + 24) = v55;
      swift_retain();
      sub_10015FCF4(a2, a3, a4, a5, a6, a7, a8, v43, v45, a9, a10, a11, a12, a13 & 1, (uint64_t)sub_1001DB04C, v46);
      swift_release();

      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v29 = xmmword_100231740;
  *(unsigned char *)(v29 + 16) = 13;
  swift_willThrow();
  id v30 = v17;
  swift_errorRetain();
  id v31 = v30;
  swift_errorRetain();
  uint64_t v32 = sub_100222070();
  os_log_type_t v33 = sub_100222500();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    v56[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446466;
    id v35 = v31;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v36 = sub_1002222C0();
    sub_1001BEBDC(v36, v37, v56);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v38 = sub_1002222C0();
    sub_1001BEBDC(v38, v39, v56);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Joining failed for %{public}s: %{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v56[2], v56[3]);
  id v40 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void, void *))a15)[2](a15, 0, 0, 0, v40);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CAF28(void *a1, uint64_t a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    os_log_type_t v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v42);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Attempting to preflight a preapproved join for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = [v14 cloudkitContainerName];
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v31 = (void *)v42[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001DAE94;
      *(void *)(v32 + 24) = v41;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v33 = v31;
      uint64_t v34 = sub_1001984DC(v33, 0xD000000000000030, 0x80000001002446C0);

      id v35 = (void *)swift_allocObject();
      _OWORD v35[2] = v34;
      v35[3] = sub_1001DB094;
      uint64_t v35[4] = v32;
      uint64_t v36 = (void *)swift_allocObject();
      v36[2] = sub_1001D9E04;
      v36[3] = v35;
      uint64_t v36[4] = v33;
      v36[5] = a2;
      swift_bridgeObjectRetain();
      id v37 = v33;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100174E30(0, (uint64_t)sub_1001D9E58, (uint64_t)v36);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v42);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v42);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "preflightPreapprovedJoin failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v42[2], v42[3]);
  id v30 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a4)[2](a4, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CB5E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = a6;
  uint64_t v45 = a6;
  _Block_copy(a6);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029F120);
  id v9 = a1;
  os_log_type_t v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    unint64_t v13 = a1;
    id v14 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v15 = sub_1002222C0();
    sub_1001BEBDC(v15, v16, v47);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempting a preapproved join for %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v13)
    {
LABEL_5:
      id v17 = v9;
      id v18 = [v17 cloudkitContainerName];
      sub_100222270();

      id v19 = [v17 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v20, v21);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = (void *)v47[0];
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1001D9D64;
      *(void *)(v35 + 24) = v46;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v36 = v34;
      uint64_t v37 = sub_1001984DC(v36, 0xD00000000000003ALL, 0x8000000100244680);

      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      v38[3] = sub_1001D9D6C;
      v38[4] = v35;
      unint64_t v39 = (void *)swift_allocObject();
      _OWORD v39[2] = sub_1001D9D8C;
      v39[3] = v38;
      uint64_t v39[4] = v36;
      v39[5] = a2;
      v39[6] = a3;
      v39[7] = a4;
      swift_bridgeObjectRetain();
      id v40 = v36;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100174C40((uint64_t)sub_1001D9DF0, (uint64_t)v39);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v9;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    sub_1001BEBDC(v29, v30, v47);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v31 = sub_1002222C0();
    sub_1001BEBDC(v31, v32, v47);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "attemptPreapprovedJoin failed for %{public}s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v47[2], v47[3]);
  id v33 = (void *)sub_100221B30();
  (*((void (**)(const void *, void, void, void, void *))v45 + 2))(v45, 0, 0, 0, v33);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CBCD0(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void (**a16)(void, void, void, void))
{
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = a16;
  _Block_copy(a16);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100222090();
  sub_100003CC8(v17, (uint64_t)qword_10029F120);
  id v18 = a1;
  id v19 = sub_100222070();
  os_log_type_t v20 = sub_1002224E0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    v77[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446210;
    id v22 = v18;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v23 = sub_1002222C0();
    sub_1001BEBDC(v23, v24, v77);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Updating %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
LABEL_7:
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v30 = xmmword_100231740;
    *(unsigned char *)(v30 + 16) = 13;
    swift_willThrow();
    goto LABEL_8;
  }

  if (!a1) {
    goto LABEL_7;
  }
LABEL_5:
  id v65 = v18;
  id v25 = v18;
  id v26 = [v25 cloudkitContainerName];
  sub_100222270();

  id v27 = [v25 octagonContextID];
  sub_100222270();

  __chkstk_darwin(v28, v29);
  type metadata accessor for Container();
  sub_100222560();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = (void *)v77[0];
  if (!a11)
  {
    uint64_t v46 = 0;
    goto LABEL_17;
  }
  unsigned int v44 = [a11 intValue];
  uint64_t v45 = v44 - 1;
  if (v45 < 3)
  {
    uint64_t v46 = v45 + 1;
LABEL_17:
    if (a9) {
      id v47 = [a9 unsignedLongLongValue];
    }
    else {
      id v47 = 0;
    }
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = sub_1001D9A6C;
    *(void *)(v50 + 24) = v74;
    uint64_t v51 = v50;
    type metadata accessor for Container.SemaphoreWrapper();
    swift_allocObject();
    swift_retain();
    id v52 = v43;
    uint64_t v64 = sub_1001984DC(v52, 0xD0000000000000A1, 0x80000001002445B0);

    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v64;
    v53[3] = sub_1001D9C4C;
    v53[4] = v51;
    v77[0] = a3;
    v77[1] = a4;
    v77[2] = a5;
    v77[3] = a6;
    v77[4] = a7;
    v77[5] = a8;
    v77[6] = (uint64_t)v47;
    v77[7] = a9 == 0;
    v77[8] = a10;
    v77[9] = v46 | ((unint64_t)(a11 == 0) << 32);
    v77[10] = (uint64_t)a12;
    v77[11] = (uint64_t)a13;
    v77[12] = (uint64_t)a14;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = sub_1001D9C70;
    *(void *)(v54 + 24) = v53;
    *(void *)(v54 + 32) = v52;
    sub_1001D9CFC((uint64_t)v77, v54 + 40);
    *(unsigned char *)(v54 + 144) = 0;
    id v55 = a14;
    id v69 = v52;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v56 = a12;
    id v57 = a13;
    id v58 = v55;
    swift_retain();
    swift_retain();
    id v59 = v56;
    id v60 = v57;
    id v61 = v58;
    swift_retain();
    id v62 = v59;
    id v63 = v60;
    sub_100174E30(a2 & 1, (uint64_t)sub_1001B2180, v54);
    swift_release();
    swift_release();

    swift_release();
    swift_release();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  uint64_t v48 = v44;
  sub_100042D4C();
  swift_allocError();
  *(void *)uint64_t v49 = v48;
  *(void *)(v49 + 8) = 0;
  *(unsigned char *)(v49 + 16) = 7;
  swift_willThrow();

  id v18 = v65;
LABEL_8:
  id v31 = v18;
  swift_errorRetain();
  id v32 = v31;
  swift_errorRetain();
  id v33 = sub_100222070();
  os_log_type_t v34 = sub_100222500();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    v77[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136446466;
    id v36 = v32;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v37 = sub_1002222C0();
    sub_1001BEBDC(v37, v38, v77);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v39 = sub_1002222C0();
    sub_1001BEBDC(v39, v40, v77);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "update failed for %{public}s: %{public}s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v75, v76);
  uint64_t v41 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void *))a16)[2](a16, 0, 0, v41);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CC620(void *a1, uint64_t a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    uint64_t v50 = (uint64_t)a1;
    id v10 = v6;
    id v11 = v6;
    uint64_t v12 = a1;
    id v13 = v10;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v14 = sub_1002222C0();
    uint64_t v50 = sub_1001BEBDC(v14, v15, aBlock);
    sub_100222690();

    a1 = v12;
    id v6 = v11;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "setPreapprovedKeys %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v16 = v6;
      id v17 = objc_msgSend(v16, "cloudkitContainerName", a1);
      sub_100222270();

      id v18 = [v16 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v19, v20);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_type_t v34 = (void *)aBlock[0];
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1001D9BEC;
      *(void *)(v35 + 24) = v48;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v36 = v34;
      uint64_t v37 = sub_1001984DC(v36, 0xD00000000000001BLL, 0x8000000100244590);

      unint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      v38[3] = sub_1001DB098;
      v38[4] = v35;
      id v47 = *(void **)&v36[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v39 = (void *)swift_allocObject();
      _OWORD v39[2] = a2;
      v39[3] = v36;
      uint64_t v39[4] = sub_1001D9C0C;
      v39[5] = v38;
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = sub_1001D9C30;
      *(void *)(v40 + 24) = v39;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v40;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100287FF8;
      uint64_t v41 = _Block_copy(aBlock);
      id v42 = v36;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      [v47 performBlockAndWait:v41];
      swift_release();
      swift_release();
      _Block_release(v41);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v21 = swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v6;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v50 = (uint64_t)a1;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    uint64_t v50 = sub_1001BEBDC(v29, v30, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    uint64_t v50 = v21;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v31 = sub_1002222C0();
    uint64_t v50 = sub_1001BEBDC(v31, v32, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "setPreapprovedKeys failed for %{public}s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v51, v52);
  id v33 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a4)[2](a4, 0, v33);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CCDD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void))
{
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a5;
  _Block_copy(a5);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029F120);
  id v7 = a1;
  os_log_type_t v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)id v10 = 136446210;
    id v11 = a1;
    id v12 = v7;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v13 = sub_1002222C0();
    sub_1001BEBDC(v13, v14, v39);
    sub_100222690();

    a1 = v11;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Updating TLKs for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v11)
    {
LABEL_5:
      id v15 = v7;
      id v16 = objc_msgSend(v15, "cloudkitContainerName", a1);
      sub_100222270();

      id v17 = [v15 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v18, v19);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v32 = (void *)v39[0];
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_1001DAE9C;
      *(void *)(v33 + 24) = v38;
      swift_retain();
      sub_1001722F8(a2, a3, (uint64_t)sub_1001D9BCC, v33);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v20 = xmmword_100231740;
  *(unsigned char *)(v20 + 16) = 13;
  swift_willThrow();
  id v21 = v7;
  swift_errorRetain();
  id v22 = v21;
  swift_errorRetain();
  id v23 = sub_100222070();
  os_log_type_t v24 = sub_100222500();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    id v26 = v22;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v27 = sub_1002222C0();
    sub_1001BEBDC(v27, v28, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v29 = sub_1002222C0();
    sub_1001BEBDC(v29, v30, v39);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "updateTLKs failed for %{public}s: %{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v39[2], v39[3]);
  uint64_t v31 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a5)[2](a5, 0, v31);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CD3A8(void *a1, uint64_t a2, void (**a3)(const void *, void *))
{
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = a3;
  unsigned int v44 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136446210;
    uint64_t v47 = (uint64_t)a1;
    id v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    uint64_t v47 = sub_1001BEBDC(v12, v13, aBlock);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Departing %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v14 = v6;
      id v15 = [v14 cloudkitContainerName];
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v32 = (void *)aBlock[0];
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_1001DAEA4;
      *(void *)(v33 + 24) = v45;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      os_log_type_t v34 = v32;
      uint64_t v35 = sub_1001984DC(v34, 0xD00000000000001FLL, 0x8000000100244570);

      id v36 = (void *)swift_allocObject();
      v36[2] = v35;
      v36[3] = sub_1001DB0A4;
      uint64_t v36[4] = v33;
      uint64_t v37 = *(void **)&v34[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v34;
      v38[3] = sub_1001D9BA0;
      v38[4] = v36;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = sub_1001D9BB0;
      *(void *)(v39 + 24) = v38;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v39;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100287EB8;
      uint64_t v40 = _Block_copy(aBlock);
      uint64_t v41 = v34;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v37 performBlockAndWait:v40];
      swift_release();
      swift_release();
      _Block_release(v40);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v19 = swift_allocError();
  *(_OWORD *)uint64_t v20 = xmmword_100231740;
  *(unsigned char *)(v20 + 16) = 13;
  swift_willThrow();
  id v21 = v6;
  swift_errorRetain();
  id v22 = v21;
  swift_errorRetain();
  id v23 = sub_100222070();
  os_log_type_t v24 = sub_100222500();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136446466;
    uint64_t v47 = (uint64_t)a1;
    id v26 = v22;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v27 = sub_1002222C0();
    uint64_t v47 = sub_1001BEBDC(v27, v28, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    uint64_t v47 = v19;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v29 = sub_1002222C0();
    uint64_t v47 = sub_1001BEBDC(v29, v30, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "departByDistrustingSelf failed for %{public}s: %{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v48, v49);
  uint64_t v31 = (void *)sub_100221B30();
  v44[2](v44, v31);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CDB54(void *a1, uint64_t a2, uint64_t a3, void (**a4)(const void *, void *))
{
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = a4;
  uint64_t v49 = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029F120);
  id v8 = a1;
  swift_bridgeObjectRetain_n();
  id v9 = v8;
  id v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  uint64_t v50 = (uint64_t)a1;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_100222450();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1001BEBDC(v13, v15, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v54 = (uint64_t)a1;
    id v16 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v17 = sub_1002222C0();
    uint64_t v54 = sub_1001BEBDC(v17, v18, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Distrusting %{public}s in %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1)
    {
LABEL_5:
      uint64_t v48 = a2;
      id v19 = v9;
      id v20 = [v19 cloudkitContainerName];
      sub_100222270();

      id v21 = [v19 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v22, v23);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = (void *)aBlock[0];
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = sub_1001DAEA4;
      *(void *)(v38 + 24) = v52;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v39 = v37;
      uint64_t v40 = sub_1001984DC(v39, 0xD000000000000018, 0x8000000100244550);

      uint64_t v41 = (void *)swift_allocObject();
      v41[2] = v40;
      v41[3] = sub_1001DB0A4;
      uint64_t v41[4] = v38;
      uint64_t v51 = *(void **)&v39[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      id v42 = (void *)swift_allocObject();
      v42[2] = v39;
      v42[3] = sub_1001D9B70;
      uint64_t v42[4] = v41;
      v42[5] = v48;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = sub_1001D9B80;
      *(void *)(v43 + 24) = v42;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v43;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100287DC8;
      unsigned int v44 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      uint64_t v45 = v39;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v51 performBlockAndWait:v44];
      swift_release();
      swift_release();
      _Block_release(v44);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v24 = swift_allocError();
  *(_OWORD *)uint64_t v25 = xmmword_100231740;
  *(unsigned char *)(v25 + 16) = 13;
  swift_willThrow();
  id v26 = v9;
  swift_errorRetain();
  id v27 = v26;
  swift_errorRetain();
  unint64_t v28 = sub_100222070();
  os_log_type_t v29 = sub_100222500();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v54 = v50;
    id v31 = v27;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v32 = sub_1002222C0();
    uint64_t v54 = sub_1001BEBDC(v32, v33, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    uint64_t v54 = v24;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v34 = sub_1002222C0();
    uint64_t v54 = sub_1001BEBDC(v34, v35, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "distrustPeerIDs failed for %{public}s: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v55, v56);
  id v36 = (void *)sub_100221B30();
  v49[2](v49, v36);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CE38C(void *a1, uint64_t a2, uint64_t a3, void (**a4)(const void *, void *))
{
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = a4;
  uint64_t v48 = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029F120);
  id v8 = a1;
  swift_bridgeObjectRetain_n();
  id v9 = v8;
  id v10 = sub_100222070();
  os_log_type_t v11 = sub_100222520();
  uint64_t v49 = (uint64_t)a1;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_100222450();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1001BEBDC(v13, v15, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v53 = (uint64_t)a1;
    id v16 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v17 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v17, v18, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Dropping %{public}s in %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1)
    {
LABEL_5:
      uint64_t v47 = a2;
      id v19 = v9;
      id v20 = [v19 cloudkitContainerName];
      sub_100222270();

      id v21 = [v19 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v22, v23);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v36 = (void *)aBlock[0];
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = sub_1001DAEA4;
      *(void *)(v37 + 24) = v51;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v38 = v36;
      uint64_t v39 = sub_1001984DC(v38, 0xD000000000000014, 0x8000000100244530);

      uint64_t v40 = (void *)swift_allocObject();
      _OWORD v40[2] = v39;
      v40[3] = sub_1001D9B20;
      v40[4] = v37;
      uint64_t v50 = *(void **)&v38[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v41 = (void *)swift_allocObject();
      v41[2] = v38;
      v41[3] = sub_1001D9B40;
      uint64_t v41[4] = v40;
      v41[5] = v47;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = sub_1001D9B50;
      *(void *)(v42 + 24) = v41;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v42;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100287CD8;
      uint64_t v43 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      unsigned int v44 = v38;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v50 performBlockAndWait:v43];
      swift_release();
      swift_release();
      _Block_release(v43);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v24 = xmmword_100231740;
  *(unsigned char *)(v24 + 16) = 13;
  swift_willThrow();
  id v25 = v9;
  swift_errorRetain();
  id v26 = v25;
  swift_errorRetain();
  id v27 = sub_100222070();
  os_log_type_t v28 = sub_100222500();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v53 = v49;
    id v31 = v26;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v32 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v32, v33, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2114;
    swift_errorRetain();
    uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v53 = v34;
    sub_100222690();
    *uint64_t v30 = v34;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "dropPeerIDs failed for %{public}s: %{public}@", (uint8_t *)v29, 0x16u);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v54, v55);
  unint64_t v35 = (void *)sub_100221B30();
  v48[2](v48, v35);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CEBE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(void, void, void, void))
{
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = a8;
  _Block_copy(a8);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029F120);
  id v10 = a1;
  os_log_type_t v11 = sub_100222070();
  os_log_type_t v12 = sub_1002224E0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    id v14 = v10;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v15 = sub_1002222C0();
    sub_1001BEBDC(v15, v16, v47);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2050;
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "fetchViableBottles in %{public}s from source (%{public}ld)", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v17 = v10;
      id v18 = [v17 cloudkitContainerName];
      sub_100222270();

      id v19 = [v17 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v20, v21);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = (void *)v47[0];
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1001D9B04;
      *(void *)(v35 + 24) = v46;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v36 = v34;
      uint64_t v37 = sub_1001984DC(v36, 0xD000000000000036, 0x80000001002444F0);

      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      v38[3] = sub_1001DB048;
      v38[4] = v35;
      swift_retain();
      swift_retain();
      sub_100154FFC(a2, a3, a4, a5, a6, (uint64_t)sub_1001D9B10, (uint64_t)v38);
      swift_release();

      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v10;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    sub_1001BEBDC(v29, v30, v47);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v31 = sub_1002222C0();
    sub_1001BEBDC(v31, v32, v47);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "fetchViableBottles failed for %{public}s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v47[2], v47[3]);
  unint64_t v33 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void *))a8)[2](a8, 0, 0, v33);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CF288(void *a1, uint64_t a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (!os_log_type_enabled(v7, v8))
  {

    if (a1) {
      goto LABEL_5;
    }
LABEL_7:
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v18 = xmmword_100231740;
    *(unsigned char *)(v18 + 16) = 13;
    swift_willThrow();
    swift_getErrorValue();
    sub_1001B9900(v29[2], v29[3]);
    id v19 = (void *)sub_100221B30();
    ((void (**)(void, void, void *))a4)[2](a4, 0, v19);

    swift_errorRelease();
    swift_errorRelease();
    return swift_release();
  }
  uint64_t v9 = swift_slowAlloc();
  v29[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v9 = 136446466;
  id v10 = v6;
  sub_1000046DC(&qword_10029F3E0);
  uint64_t v11 = sub_1002222C0();
  sub_1001BEBDC(v11, v12, v29);
  sub_100222690();

  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + 12) = 2050;
  sub_100222690();
  _os_log_impl((void *)&_mh_execute_header, v7, v8, "fetchViableEscrowRecords in %{public}s from source (%{public}ld)", (uint8_t *)v9, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (!a1) {
    goto LABEL_7;
  }
LABEL_5:
  id v13 = v6;
  id v14 = [v13 cloudkitContainerName];
  sub_100222270();

  id v15 = [v13 octagonContextID];
  sub_100222270();

  __chkstk_darwin(v16, v17);
  type metadata accessor for Container();
  sub_100222560();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)v29[0];
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1001D9AE8;
  *(void *)(v21 + 24) = v28;
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  swift_retain();
  id v22 = v20;
  uint64_t v23 = sub_1001984DC(v22, 0xD00000000000001ELL, 0x80000001002459C0);

  id v24 = (void *)swift_allocObject();
  _OWORD v24[2] = v23;
  v24[3] = sub_1001DB09C;
  v24[4] = v21;
  swift_retain();
  swift_retain();
  sub_100155410(a2, (uint64_t)sub_1001D9AF4, (uint64_t)v24);
  swift_release();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1001CF744(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a3;
  uint64_t v34 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    id v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v36);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "fetchEscrowContents in %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v36[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001D9AB8;
      *(void *)(v32 + 24) = v35;
      swift_retain();
      sub_100150D84((uint64_t)sub_1001D9AC0, v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  id v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v36);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v36);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "fetchEscrowContents failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v36[2], v36[3]);
  unint64_t v30 = (void *)sub_100221B30();
  (*((void (**)(const void *, void, void, void, void *))v34 + 2))(v34, 0, 0, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001CFD2C(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, const void *a6)
{
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = a6;
  uint64_t v49 = a6;
  _Block_copy(a6);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029F120);
  id v9 = a1;
  id v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v53 = (uint64_t)a1;
    unint64_t v13 = a1;
    id v14 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v15 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v15, v16, aBlock);
    sub_100222690();

    a1 = v13;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Fetching policy+views for %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v13) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      id v17 = v9;
      id v18 = [v17 cloudkitContainerName];
      sub_100222270();

      id v19 = [v17 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v20, v21);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = (void *)aBlock[0];
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_1001D9A6C;
      *(void *)(v36 + 24) = v51;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v37 = v35;
      uint64_t v38 = sub_1001984DC(v37, 0xD00000000000003DLL, 0x80000001002444B0);

      uint64_t v39 = (void *)swift_allocObject();
      _OWORD v39[2] = v38;
      v39[3] = sub_1001D9A74;
      uint64_t v39[4] = v36;
      uint64_t v50 = *(void **)&v37[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v37;
      *(void *)(v40 + 24) = a2;
      *(void *)(v40 + 32) = a3;
      *(void *)(v40 + 40) = sub_1001D9A80;
      *(void *)(v40 + 48) = v39;
      *(unsigned char *)(v40 + 56) = a4 & 1;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_1001D9A94;
      *(void *)(v41 + 24) = v40;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v41;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100287AA8;
      uint64_t v42 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v43 = v37;
      swift_retain();
      swift_retain();
      swift_release();
      [v50 performBlockAndWait:v42];
      swift_release();
      swift_release();
      _Block_release(v42);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v22 = swift_allocError();
  *(_OWORD *)uint64_t v23 = xmmword_100231740;
  *(unsigned char *)(v23 + 16) = 13;
  swift_willThrow();
  id v24 = v9;
  swift_errorRetain();
  id v25 = v24;
  swift_errorRetain();
  uint64_t v26 = sub_100222070();
  os_log_type_t v27 = sub_100222500();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v53 = (uint64_t)a1;
    id v29 = v25;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v30 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v30, v31, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    uint64_t v53 = v22;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v32 = sub_1002222C0();
    uint64_t v53 = sub_1001BEBDC(v32, v33, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "fetchCurrentPolicy failed for %{public}s: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v54, v55);
  uint64_t v34 = (void *)sub_100221B30();
  (*((void (**)(const void *, void, void, void *))v49 + 2))(v49, 0, 0, v34);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D050C(void *a1, uint64_t a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029F120);
  id v7 = a1;
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  id v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  uint64_t v41 = a2;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v44[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    id v12 = v8;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v13 = sub_1002222C0();
    sub_1001BEBDC(v13, v14, v44);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    sub_10004C55C();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100222450();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_1001BEBDC(v15, v17, v44);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Fetching policy documents %{public}s with versions: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v18 = v8;
      id v19 = [v18 cloudkitContainerName];
      sub_100222270();

      id v20 = [v18 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v21, v22);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = (void *)v44[0];
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = sub_1001D9A44;
      *(void *)(v37 + 24) = v43;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v38 = v36;
      uint64_t v39 = sub_1001984DC(v38, 0xD000000000000025, 0x8000000100244480);

      swift_retain();
      swift_retain();
      sub_1001AF28C(v41, (char *)v38, v39, sub_1001D9A4C, v37);
      swift_release();

      swift_release_n();
      return swift_release_n();
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v23 = xmmword_100231740;
  *(unsigned char *)(v23 + 16) = 13;
  swift_willThrow();
  id v24 = v8;
  swift_errorRetain();
  id v25 = v24;
  swift_errorRetain();
  uint64_t v26 = sub_100222070();
  os_log_type_t v27 = sub_100222500();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446466;
    v44[0] = v29;
    id v30 = v25;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v31 = sub_1002222C0();
    sub_1001BEBDC(v31, v32, v44);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v33 = sub_1002222C0();
    sub_1001BEBDC(v33, v34, v44);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "fetchPolicyDocuments failed for %{public}s: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v44[2], v44[3]);
  uint64_t v35 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a4)[2](a4, 0, v35);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D0BFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(const void *, void, void *))
{
  uint64_t v66 = a4;
  uint64_t v67 = a2;
  RecoverableTLKSharesuint64_t Request = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  __chkstk_darwin(RecoverableTLKSharesRequest, v8);
  id v65 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  id v69 = a5;
  uint64_t v70 = v10;
  *(void *)(v10 + 16) = a5;
  _Block_copy(a5);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  uint64_t v12 = sub_100003CC8(v11, (uint64_t)qword_10029F120);
  swift_bridgeObjectRetain_n();
  id v13 = a1;
  uint64_t v68 = v12;
  unint64_t v14 = sub_100222070();
  os_log_type_t v15 = sub_1002224E0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    v72[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    v71[0] = (uint64_t)a1;
    id v17 = v13;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v18 = sub_1002222C0();
    v71[0] = sub_1001BEBDC(v18, v19, v72);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v71[0] = v67;
    v71[1] = a3;
    swift_bridgeObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v20 = sub_1002222C0();
    v71[0] = sub_1001BEBDC(v20, v21, v72);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Fetching recoverable TLKShares %{public}s with peerID filter: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      uint64_t v62 = a3;
      id v63 = a1;
      uint64_t v22 = *(void *)(v66 + 24);
      id v23 = v13;
      id v24 = [v23 cloudkitContainerName];
      uint64_t v25 = sub_100222270();
      uint64_t v27 = v26;

      id v28 = [v23 octagonContextID];
      uint64_t v29 = sub_100222270();
      uint64_t v31 = v30;

      __chkstk_darwin(v32, v33);
      *(&v61 - 6) = v22;
      *(&v61 - 5) = v25;
      *(&v61 - 4) = v27;
      *(&v61 - 3) = v29;
      *(&v61 - 2) = v31;
      *(&v61 - 1) = (uint64_t)v23;
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v71[0];
      uint64_t v48 = swift_allocObject();
      uint64_t v49 = v70;
      *(void *)(v48 + 16) = sub_1001DAE9C;
      *(void *)(v48 + 24) = v49;
      __chkstk_darwin(v48, v50);
      uint64_t v51 = v62;
      *(&v61 - 2) = v67;
      *(&v61 - 1) = v51;
      sub_1001D93A8(&qword_10029A830, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
      swift_retain();
      uint64_t v52 = (uint64_t)v65;
      sub_100221F70();
      uint64_t v53 = (void *)v47;
      uint64_t v54 = (void *)(v47 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish);
      uint64_t v55 = *(void *)(v47 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24);
      uint64_t v56 = *(void *)(v47 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32);
      sub_1000059A4(v54, v55);
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = sub_1001DB09C;
      *(void *)(v57 + 24) = v48;
      uint64_t v58 = *(void *)(v56 + 16);
      id v59 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v58 + 72);
      swift_retain();
      v59(v52, sub_1001D99DC, v57, v55, v58);
      swift_release();
      sub_1001D99E4(v52, type metadata accessor for FetchRecoverableTLKSharesRequest);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  uint64_t v34 = swift_allocError();
  *(_OWORD *)uint64_t v35 = xmmword_100231740;
  *(unsigned char *)(v35 + 16) = 13;
  swift_willThrow();
  id v36 = v13;
  swift_errorRetain();
  id v37 = v36;
  swift_errorRetain();
  id v38 = sub_100222070();
  os_log_type_t v39 = sub_100222500();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    v71[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136446466;
    v72[0] = (uint64_t)a1;
    id v41 = v37;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v42 = sub_1002222C0();
    v72[0] = sub_1001BEBDC(v42, v43, v71);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2082;
    v72[0] = v34;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v44 = sub_1002222C0();
    v72[0] = sub_1001BEBDC(v44, v45, v71);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "fetchRecoverableTLKShares failed for %{public}s: %{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v72[2], v72[3]);
  uint64_t v46 = (void *)sub_100221B30();
  v69[2](v69, 0, v46);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D13DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(const void *, void, void *))
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a8;
  uint64_t v55 = a8;
  _Block_copy(a8);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_100222090();
  sub_100003CC8(v49, (uint64_t)qword_10029F120);
  id v12 = a1;
  id v13 = sub_100222070();
  os_log_type_t v14 = sub_1002224E0();
  uint64_t v56 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v48 = a7;
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    v57[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v15 = 136446210;
    id v16 = v12;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v17 = sub_1002222C0();
    sub_1001BEBDC(v17, v18, v57);
    sub_100222690();

    a7 = v48;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "SetRecoveryKey for %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
LABEL_7:
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v24 = xmmword_100231740;
    *(unsigned char *)(v24 + 16) = 13;
    swift_willThrow();
    id v25 = v12;
    swift_errorRetain();
    id v26 = v25;
    swift_errorRetain();
    uint64_t v27 = sub_100222070();
    os_log_type_t v28 = sub_100222500();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      v57[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136446466;
      id v30 = v26;
      sub_1000046DC(&qword_10029F3E0);
      uint64_t v31 = sub_1002222C0();
      sub_1001BEBDC(v31, v32, v57);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v33 = sub_1002222C0();
      sub_1001BEBDC(v33, v34, v57);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "SetRecoveryKey failed for %{public}s: %{public}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    swift_getErrorValue();
    sub_1001B9900(v57[2], v57[3]);
    uint64_t v35 = (void *)sub_100221B30();
    v55[2](v55, 0, v35);

    swift_errorRelease();
    swift_errorRelease();
    return swift_release();
  }

  if (!a1) {
    goto LABEL_7;
  }
LABEL_5:
  id v19 = v12;
  id v20 = objc_msgSend(v19, "cloudkitContainerName", v12, a1);
  sub_100222270();

  id v21 = [v19 octagonContextID];
  sub_100222270();

  __chkstk_darwin(v22, v23);
  type metadata accessor for Container();
  sub_100222560();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v36 = (void *)v57[0];
  id v37 = (void *)swift_allocObject();
  uint64_t v37[2] = a7;
  v37[3] = v36;
  v37[4] = sub_1001D98B4;
  v37[5] = v56;
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  id v38 = v36;
  swift_retain();
  swift_retain();
  uint64_t v39 = sub_1001984DC(v38, 0xD000000000000030, 0x8000000100244440);

  uint64_t v40 = (void *)swift_allocObject();
  _OWORD v40[2] = v39;
  v40[3] = sub_1001D98D4;
  v40[4] = v37;
  uint64_t v41 = qword_100298EB8;
  swift_retain();
  swift_retain();
  if (v41 != -1) {
    swift_once();
  }
  sub_100003CC8(v49, (uint64_t)qword_10029E7D0);
  uint64_t v42 = sub_100222070();
  os_log_type_t v43 = sub_1002224E0();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "beginning a setRecoveryKey", v44, 2u);
    swift_slowDealloc();
  }

  unint64_t v45 = (void *)swift_allocObject();
  v45[2] = sub_1001D9928;
  v45[3] = v40;
  v45[4] = v38;
  v45[5] = a2;
  v45[6] = a3;
  v45[7] = a4;
  v45[8] = a5;
  v45[9] = a6;
  id v46 = v38;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100174E30(0, (uint64_t)sub_1001D998C, (uint64_t)v45);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1001D1B90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, void (**a10)(void, void, void, void))
{
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = a10;
  _Block_copy(a10);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100222090();
  sub_100003CC8(v12, (uint64_t)qword_10029F120);
  id v13 = a1;
  os_log_type_t v14 = sub_100222070();
  os_log_type_t v15 = sub_1002224E0();
  uint64_t v48 = v13;
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    v49[0] = swift_slowAlloc();
    *(_DWORD *)id v16 = 136446210;
    id v17 = v13;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v18 = sub_1002222C0();
    sub_1001BEBDC(v18, v19, v49);
    sub_100222690();

    id v13 = v48;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "CreateCustodianRecoveryKey for %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v20 = v13;
      id v21 = [v20 cloudkitContainerName];
      sub_100222270();

      id v22 = [v20 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v23, v24);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v37 = (void *)v49[0];
      id v38 = (void *)swift_allocObject();
      v38[2] = a9;
      v38[3] = v37;
      v38[4] = sub_1001D9828;
      v38[5] = v47;
      swift_retain();
      id v39 = v37;
      swift_retain();
      sub_10013C5EC(a2, a3, a4, a5, a6, a7, a8, (uint64_t)sub_1001D986C, (uint64_t)v38);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v25 = xmmword_100231740;
  *(unsigned char *)(v25 + 16) = 13;
  swift_willThrow();
  id v26 = v48;
  swift_errorRetain();
  id v27 = v26;
  swift_errorRetain();
  os_log_type_t v28 = sub_100222070();
  os_log_type_t v29 = sub_100222500();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    v49[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136446466;
    id v31 = v27;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v32 = sub_1002222C0();
    sub_1001BEBDC(v32, v33, v49);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v34 = sub_1002222C0();
    sub_1001BEBDC(v34, v35, v49);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "CreateCustodianRecoveryKey failed for %{public}s: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v49[2], v49[3]);
  id v36 = (void *)sub_100221B30();
  ((void (**)(void, void, void, void *))a10)[2](a10, 0, 0, v36);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D21A4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v63 = a2;
  uint64_t v7 = sub_100221D00();
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  __chkstk_darwin(v7, v8);
  _OWORD v62[2] = v9;
  uint64_t v64 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  id v69 = a4;
  uint64_t v70 = v10;
  *(void *)(v10 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  uint64_t v12 = sub_100003CC8(v11, (uint64_t)qword_10029F120);
  id v13 = a1;
  uint64_t v68 = v12;
  os_log_type_t v14 = sub_100222070();
  os_log_type_t v15 = sub_1002224E0();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v67 = a3;
  if (v16)
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v17 = 136446210;
    uint64_t v72 = (uint64_t)a1;
    id v18 = v13;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v19 = sub_1002222C0();
    uint64_t v72 = sub_1001BEBDC(v19, v20, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "RemoveCustodianRecoveryKey for %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v67;
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      v62[1] = a1;
      uint64_t v21 = *(void *)(a3 + 24);
      id v22 = v13;
      id v23 = [v22 cloudkitContainerName];
      uint64_t v24 = sub_100222270();
      uint64_t v26 = v25;

      id v27 = [v22 octagonContextID];
      uint64_t v28 = sub_100222270();
      uint64_t v30 = v29;

      __chkstk_darwin(v31, v32);
      v62[-6] = v21;
      v62[-5] = v24;
      v62[-4] = v26;
      v62[-3] = v28;
      v62[-2] = v30;
      v62[-1] = v22;
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v46 = (void *)aBlock[0];
      uint64_t v47 = (void *)swift_allocObject();
      v47[2] = v67;
      v47[3] = v46;
      uint64_t v48 = v70;
      uint64_t v47[4] = sub_1001DAEA4;
      v47[5] = v48;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v49 = v46;
      swift_retain();
      uint64_t v50 = sub_1001984DC(v49, 0xD000000000000027, 0x80000001002443B0);
      uint64_t v51 = (void *)swift_allocObject();
      v51[2] = v50;
      v51[3] = sub_1001D9694;
      v51[4] = v47;
      id v69 = *(id *)&v49[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v52 = v64;
      uint64_t v53 = v65;
      uint64_t v54 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v63, v66);
      unint64_t v55 = (*(unsigned __int8 *)(v53 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      uint64_t v56 = (char *)swift_allocObject();
      *((void *)v56 + 2) = v49;
      *((void *)v56 + 3) = sub_1001D96D0;
      *((void *)v56 + 4) = v51;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v56[v55], v52, v54);
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = sub_1001D97B0;
      *(void *)(v57 + 24) = v56;
      aBlock[4] = (uint64_t)sub_1000439DC;
      uint64_t aBlock[5] = v57;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100287800;
      uint64_t v58 = _Block_copy(aBlock);
      id v59 = v49;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v69 performBlockAndWait:v58];
      swift_release();
      swift_release();
      _Block_release(v58);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v33 = swift_allocError();
  *(_OWORD *)uint64_t v34 = xmmword_100231740;
  *(unsigned char *)(v34 + 16) = 13;
  swift_willThrow();
  id v35 = v13;
  swift_errorRetain();
  id v36 = v35;
  swift_errorRetain();
  id v37 = sub_100222070();
  os_log_type_t v38 = sub_100222500();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136446466;
    uint64_t v72 = (uint64_t)a1;
    id v40 = v36;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v41 = sub_1002222C0();
    uint64_t v72 = sub_1001BEBDC(v41, v42, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2082;
    uint64_t v72 = v33;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v43 = sub_1002222C0();
    uint64_t v72 = sub_1001BEBDC(v43, v44, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "RemoveCustodianRecoveryKey failed for %{public}s: %{public}s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v73, v74);
  unint64_t v45 = (void *)sub_100221B30();
  (*((void (**)(id, void *))v69 + 2))(v69, v45);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D2A34(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v68 = a2;
  uint64_t v7 = sub_100221D00();
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v67 = v9;
  id v69 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  id v73 = a4;
  uint64_t v74 = v10;
  *(void *)(v10 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  uint64_t v12 = sub_100003CC8(v11, (uint64_t)qword_10029F120);
  id v13 = a1;
  uint64_t v72 = v12;
  os_log_type_t v14 = sub_100222070();
  os_log_type_t v15 = sub_1002224E0();
  if (os_log_type_enabled(v14, v15))
  {
    BOOL v16 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)BOOL v16 = 136446210;
    uint64_t v76 = (uint64_t)a1;
    id v17 = v13;
    uint64_t v66 = a3;
    id v18 = a1;
    id v19 = v17;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v20 = sub_1002222C0();
    uint64_t v76 = sub_1001BEBDC(v20, v21, aBlock);
    sub_100222690();

    a1 = v18;
    a3 = v66;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FindCustodianRecoveryKey for %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    if (a1)
    {
LABEL_5:
      uint64_t v66 = a1;
      uint64_t v22 = a3[3];
      v65[1] = v13;
      id v23 = v13;
      id v24 = [v23 cloudkitContainerName];
      uint64_t v25 = sub_100222270();
      uint64_t v27 = v26;

      id v28 = [v23 octagonContextID];
      uint64_t v29 = sub_100222270();
      uint64_t v31 = v30;

      __chkstk_darwin(v32, v33);
      v65[-6] = v22;
      v65[-5] = v25;
      v65[-4] = v27;
      v65[-3] = v29;
      v65[-2] = v31;
      v65[-1] = v23;
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = (void *)aBlock[0];
      uint64_t v48 = (void *)swift_allocObject();
      v48[2] = a3;
      v48[3] = v47;
      uint64_t v49 = v74;
      uint64_t v48[4] = sub_1001DAE98;
      v48[5] = v49;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v50 = v47;
      swift_retain();
      uint64_t v51 = sub_1001984DC(v50, 0xD000000000000025, 0x8000000100244380);
      uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
      *((void *)v52 + 2) = v51;
      *((void *)v52 + 3) = sub_1001D947C;
      *((void *)v52 + 4) = v48;
      id v73 = *(id *)&v50[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
      uint64_t v54 = v69;
      uint64_t v53 = v70;
      uint64_t v55 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v68, v71);
      unint64_t v56 = (*(unsigned __int8 *)(v53 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      unint64_t v57 = (v67 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = v50;
      (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v58 + v56, v54, v55);
      id v59 = (uint64_t (**)(uint64_t, uint64_t))(v58 + v57);
      *id v59 = sub_1001D94C8;
      v59[1] = v52;
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = sub_1001D95C0;
      *(void *)(v60 + 24) = v58;
      aBlock[4] = (uint64_t)sub_1000437D0;
      uint64_t aBlock[5] = v60;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100112F58;
      aBlock[3] = (uint64_t)&unk_100287710;
      uint64_t v61 = _Block_copy(aBlock);
      uint64_t v62 = v50;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v73 performBlockAndWait:v61];
      swift_release();
      swift_release();
      _Block_release(v61);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();

      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      return result;
    }
  }
  sub_100042D4C();
  uint64_t v34 = swift_allocError();
  *(_OWORD *)uint64_t v35 = xmmword_100231740;
  *(unsigned char *)(v35 + 16) = 13;
  swift_willThrow();
  id v36 = v13;
  swift_errorRetain();
  id v37 = v36;
  swift_errorRetain();
  os_log_type_t v38 = sub_100222070();
  os_log_type_t v39 = sub_100222500();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136446466;
    uint64_t v76 = (uint64_t)a1;
    id v41 = v37;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v42 = sub_1002222C0();
    uint64_t v76 = sub_1001BEBDC(v42, v43, aBlock);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2082;
    uint64_t v76 = v34;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v44 = sub_1002222C0();
    uint64_t v76 = sub_1001BEBDC(v44, v45, aBlock);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "FindCustodianRecoveryKey failed for %{public}s: %{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v77, v78);
  id v46 = (void *)sub_100221B30();
  (*((void (**)(id, void, void *))v73 + 2))(v73, 0, v46);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D32DC(void *a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (**a10)(void, void, void))
{
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = a10;
  _Block_copy(a10);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100222090();
  sub_100003CC8(v13, (uint64_t)qword_10029F120);
  id v14 = a1;
  os_log_type_t v15 = sub_100222070();
  os_log_type_t v16 = sub_1002224E0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 67109634;
    sub_100222690();
    *(_WORD *)(v17 + 8) = 1024;
    sub_100222690();
    *(_WORD *)(v17 + 14) = 2082;
    id v18 = v14;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v19 = sub_1002222C0();
    sub_1001BEBDC(v19, v20, v47);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Health Check! requiring escrow check? %{BOOL}d, %{BOOL}d for %{public}s", (uint8_t *)v17, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v21 = v14;
      id v22 = [v21 cloudkitContainerName];
      sub_100222270();

      id v23 = [v21 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v24, v25);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_type_t v38 = (void *)v47[0];
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = sub_1001DAE98;
      *(void *)(v39 + 24) = v46;
      swift_retain();
      sub_1001662CC(a2 & 1, a3 & 1, a4, a5, a6, a7, a8, (uint64_t)sub_1001DB098, v39);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v26 = xmmword_100231740;
  *(unsigned char *)(v26 + 16) = 13;
  swift_willThrow();
  id v27 = v14;
  swift_errorRetain();
  id v28 = v27;
  swift_errorRetain();
  uint64_t v29 = sub_100222070();
  os_log_type_t v30 = sub_100222500();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446466;
    id v32 = v28;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v33 = sub_1002222C0();
    sub_1001BEBDC(v33, v34, v47);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v35 = sub_1002222C0();
    sub_1001BEBDC(v35, v36, v47);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Health Check! failed for %{public}s: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v47[2], v47[3]);
  id v37 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a10)[2](a10, 0, v37);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D391C(void *a1, void **a2, void (**a3)(const void *, void, void *))
{
  id v69 = a2;
  SupportAppInfouint64_t Request = type metadata accessor for GetSupportAppInfoRequest(0);
  __chkstk_darwin(SupportAppInfoRequest, v5);
  uint64_t v68 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v67 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v65 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = a3;
  uint64_t v70 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100222090();
  sub_100003CC8(v13, (uint64_t)qword_10029F120);
  id v14 = a1;
  os_log_type_t v15 = sub_100222070();
  os_log_type_t v16 = sub_1002224E0();
  BOOL v17 = os_log_type_enabled(v15, v16);
  id v71 = v14;
  if (v17)
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v73 = (uint64_t)a1;
    v74[0] = v19;
    *(_DWORD *)id v18 = 136446210;
    id v20 = v14;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v21 = sub_1002222C0();
    uint64_t v73 = sub_1001BEBDC(v21, v22, v74);
    sub_100222690();

    id v14 = v71;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "getSupportAppInfo for %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      uint64_t v64 = a1;
      id v23 = v69[3];
      id v24 = v14;
      id v25 = [v24 cloudkitContainerName];
      uint64_t v26 = sub_100222270();
      id v28 = v27;

      id v29 = [v24 octagonContextID];
      uint64_t v30 = sub_100222270();
      id v32 = v31;

      __chkstk_darwin(v33, v34);
      *(&v64 - 6) = v23;
      *(&v64 - 5) = (void *)v26;
      *(&v64 - 4) = v28;
      *(&v64 - 3) = (void *)v30;
      *(&v64 - 2) = v32;
      *(&v64 - 1) = v24;
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = (void *)v74[0];
      uint64_t v50 = swift_allocObject();
      uint64_t v51 = v72;
      *(void *)(v50 + 16) = sub_1001D9400;
      *(void *)(v50 + 24) = v51;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v52 = v49;
      uint64_t v53 = sub_1001984DC(v52, 0xD000000000000019, 0x8000000100244360);

      id v71 = v52;
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v53;
      v54[3] = sub_1001D9408;
      v54[4] = v50;
      uint64_t v55 = sub_1000059A4(&v52[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], *(void *)&v52[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24]);
      uint64_t v56 = type metadata accessor for Metrics(0);
      uint64_t v57 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v65, 1, 1, v56);
      uint64_t v58 = type metadata accessor for AccountInfo(0);
      uint64_t v59 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v67, 1, 1, v58);
      uint64_t v60 = swift_allocObject();
      id v69 = &v64;
      *(void *)(v60 + 16) = sub_1001D942C;
      *(void *)(v60 + 24) = v54;
      uint64_t v70 = (void (**)(const void *, void, void *))*v55;
      __chkstk_darwin(v60, v61);
      *(&v64 - 4) = (void *)v57;
      *(&v64 - 3) = (void *)v59;
      *(&v64 - 2) = 0;
      *((unsigned char *)&v64 - 8) = 1;
      sub_1001D93A8(&qword_10029A900, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v62 = (uint64_t)v68;
      sub_100221F70();
      RetryingCKCodeService.getSupportAppInfo(_:completion:)(v62, (uint64_t)sub_1001D9438, v60);
      sub_1001D99E4(v62, type metadata accessor for GetSupportAppInfoRequest);
      swift_release();
      swift_release();
      swift_release();
      sub_10004015C(v59, &qword_100299F50);
      sub_10004015C(v57, &qword_10029F000);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  uint64_t v35 = swift_allocError();
  *(_OWORD *)uint64_t v36 = xmmword_100231740;
  *(unsigned char *)(v36 + 16) = 13;
  swift_willThrow();
  id v37 = v14;
  swift_errorRetain();
  id v38 = v37;
  swift_errorRetain();
  uint64_t v39 = sub_100222070();
  os_log_type_t v40 = sub_100222500();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v73 = (uint64_t)a1;
    v74[0] = v42;
    *(_DWORD *)uint64_t v41 = 136446466;
    id v43 = v38;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v44 = sub_1002222C0();
    uint64_t v73 = sub_1001BEBDC(v44, v45, v74);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2082;
    uint64_t v73 = v35;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v46 = sub_1002222C0();
    uint64_t v73 = sub_1001BEBDC(v46, v47, v74);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "getSupportInfo failed for %{public}s: %{public}s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v74[2], v74[3]);
  uint64_t v48 = (void *)sub_100221B30();
  v70[2](v70, 0, v48);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D4254(void *a1, uint64_t a2, void (**a3)(const void *, void *))
{
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a3;
  uint64_t v34 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v36);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "removeEscrowCache for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v36[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001DAEA4;
      *(void *)(v32 + 24) = v35;
      swift_retain();
      sub_100154C40((uint64_t)sub_1001DB0A4, v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  unint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v36);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v36);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "removeEscrowCache failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v36[2], v36[3]);
  uint64_t v30 = (void *)sub_100221B30();
  v34[2](v34, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D4830(void *a1, void *a2, void *a3, void *a4, void *a5, int a6, int a7, int a8, uint64_t a9, void (**a10)(const void *, void *))
{
  int v74 = a6;
  int v75 = a8;
  int v69 = a7;
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  uint64_t v70 = a2;
  id v71 = a3;
  uint64_t v76 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  __chkstk_darwin(v76, v11);
  uint64_t v77 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  uint64_t v79 = a10;
  uint64_t v80 = v13;
  *(void *)(v13 + 16) = a10;
  _Block_copy(a10);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100222090();
  uint64_t v15 = sub_100003CC8(v14, (uint64_t)qword_10029F120);
  id v16 = a1;
  uint64_t v78 = v15;
  uint64_t v17 = sub_100222070();
  os_log_type_t v18 = sub_1002224E0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v81 = (uint64_t)a1;
    v82[0] = v20;
    *(_DWORD *)uint64_t v19 = 136446210;
    id v21 = v16;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v22 = sub_1002222C0();
    uint64_t v81 = sub_1001BEBDC(v22, v23, v82);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "resetAccountCDPContents for %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      uint64_t v68 = a1;
      uint64_t v24 = *(void **)(a9 + 24);
      id v25 = v16;
      id v26 = [v25 cloudkitContainerName];
      uint64_t v27 = sub_100222270();
      unint64_t v29 = v28;

      id v30 = [v25 octagonContextID];
      uint64_t v31 = sub_100222270();
      uint64_t v33 = v32;

      __chkstk_darwin(v34, v35);
      *(&v68 - 6) = v24;
      *(&v68 - 5) = (void *)v27;
      *(&v68 - 4) = v29;
      *(&v68 - 3) = (void *)v31;
      *(&v68 - 2) = v33;
      *(&v68 - 1) = v25;
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = (void *)v82[0];
      uint64_t v51 = swift_allocObject();
      uint64_t v52 = v80;
      *(void *)(v51 + 16) = sub_1001DAEA4;
      *(void *)(v51 + 24) = v52;
      uint64_t v53 = v51;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      uint64_t v54 = v50;
      uint64_t v55 = sub_1001984DC(v54, 0xD00000000000006BLL, 0x80000001002442F0);

      uint64_t v56 = (void *)swift_allocObject();
      uint64_t v78 = v55;
      uint64_t v79 = (void (**)(const void *, void *))v53;
      v56[2] = v55;
      v56[3] = sub_1001DB0A4;
      uint64_t v56[4] = v53;
      __chkstk_darwin(v56, v57);
      uint64_t v58 = v71;
      *(&v68 - 6) = v70;
      *(&v68 - 5) = v58;
      uint64_t v59 = v73;
      *(&v68 - 4) = v72;
      *(&v68 - 3) = v59;
      *((unsigned char *)&v68 - 16) = v74 & 1;
      *((unsigned char *)&v68 - 15) = v69 & 1;
      *((unsigned char *)&v68 - 14) = v75 & 1;
      sub_1001D93A8(&qword_10029A930, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
      swift_retain();
      swift_retain();
      uint64_t v60 = (uint64_t)v77;
      sub_100221F70();
      uint64_t v61 = *(void *)&v54[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      uint64_t v62 = *(void *)&v54[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      sub_1000059A4(&v54[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v61);
      uint64_t v63 = (void *)swift_allocObject();
      void v63[2] = v54;
      v63[3] = sub_1001D9370;
      uint64_t v63[4] = v56;
      uint64_t v64 = *(void *)(v62 + 16);
      uint64_t v65 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v64 + 104);
      uint64_t v66 = v54;
      swift_retain();
      v65(v60, sub_1001D93F4, v63, v61, v64);
      swift_release();
      swift_release();
      swift_release();
      sub_1001D99E4(v60, type metadata accessor for ResetAccountCDPContentsRequest);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  uint64_t v36 = swift_allocError();
  *(_OWORD *)uint64_t v37 = xmmword_100231740;
  *(unsigned char *)(v37 + 16) = 13;
  swift_willThrow();
  id v38 = v16;
  swift_errorRetain();
  id v39 = v38;
  swift_errorRetain();
  os_log_type_t v40 = sub_100222070();
  os_log_type_t v41 = sub_100222500();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v81 = (uint64_t)a1;
    v82[0] = v43;
    *(_DWORD *)uint64_t v42 = 136446466;
    id v44 = v39;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v45 = sub_1002222C0();
    uint64_t v81 = sub_1001BEBDC(v45, v46, v82);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2082;
    uint64_t v81 = v36;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v47 = sub_1002222C0();
    uint64_t v81 = sub_1001BEBDC(v47, v48, v82);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "resetAccountCDPContents failed for %{public}s: %{public}s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v82[2], v82[3]);
  uint64_t v49 = (void *)sub_100221B30();
  v79[2](v79, v49);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

void sub_1001D505C(void *a1, char a2, int a3, void *aBlock)
{
  _Block_copy(aBlock);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029F120);
  id v7 = a1;
  os_log_type_t v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  uint64_t v34 = (void (**)(void, void, void))aBlock;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    id v11 = v7;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v35);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "fetchAccountSettings for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v14 = v7;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v35[0];
      uint64_t v32 = v34;
      _Block_copy(v34);
      sub_1001AFA90(a2 & 1, v31, v34);
      _Block_release(v34);

      goto LABEL_11;
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v7;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v35);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v35);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "fetchAccountSettings failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v32 = v34;
  swift_getErrorValue();
  sub_1001B9900(v35[2], v35[3]);
  id v30 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))v32)[2](v32, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
LABEL_11:
  _Block_release(v32);
}

uint64_t sub_1001D55E4(void *a1, uint64_t a2, void (**a3)(const void *, void, void *))
{
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = a3;
  id v39 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136446210;
    uint64_t v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v41);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "isRecoveryKeySet for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v41[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001DAE94;
      *(void *)(v32 + 24) = v40;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v33 = v31;
      uint64_t v34 = sub_1001984DC(v33, 0xD000000000000018, 0x80000001002442A0);

      uint64_t v35 = (void *)swift_allocObject();
      _OWORD v35[2] = v34;
      v35[3] = sub_1001D9330;
      uint64_t v35[4] = v32;
      uint64_t v36 = (void *)swift_allocObject();
      v36[2] = sub_1001D9350;
      v36[3] = v35;
      uint64_t v36[4] = v33;
      id v37 = v33;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100174E30(0, (uint64_t)sub_1001D9360, (uint64_t)v36);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v41);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v41);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "isRecoveryKeySet failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v41[2], v41[3]);
  id v30 = (void *)sub_100221B30();
  v39[2](v39, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D5CA4(void *a1, uint64_t a2, void (**a3)(const void *, void, void *))
{
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a3;
  uint64_t v42 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  id v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  id v43 = v6;
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    v45[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136446210;
    id v10 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v11 = sub_1002222C0();
    sub_1001BEBDC(v11, v12, v45);
    sub_100222690();

    id v6 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "removeRecoveryKey for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
LABEL_7:
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v18 = xmmword_100231740;
    *(unsigned char *)(v18 + 16) = 13;
    swift_willThrow();
    id v19 = v6;
    swift_errorRetain();
    id v20 = v19;
    swift_errorRetain();
    id v21 = sub_100222070();
    os_log_type_t v22 = sub_100222500();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      v45[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446466;
      id v24 = v20;
      sub_1000046DC(&qword_10029F3E0);
      uint64_t v25 = sub_1002222C0();
      sub_1001BEBDC(v25, v26, v45);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v27 = sub_1002222C0();
      sub_1001BEBDC(v27, v28, v45);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "removeRecoveryKey failed for %{public}s: %{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    swift_getErrorValue();
    sub_1001B9900(v45[2], v45[3]);
    unint64_t v29 = (void *)sub_100221B30();
    v42[2](v42, 0, v29);

    swift_errorRelease();
    swift_errorRelease();
    return swift_release();
  }

  if (!a1) {
    goto LABEL_7;
  }
LABEL_5:
  id v13 = v6;
  id v14 = [v13 cloudkitContainerName];
  sub_100222270();

  id v15 = [v13 octagonContextID];
  sub_100222270();

  __chkstk_darwin(v16, v17);
  type metadata accessor for Container();
  sub_100222560();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v30 = (void *)v45[0];
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1001DAE94;
  *(void *)(v31 + 24) = v44;
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  swift_retain();
  id v32 = v30;
  uint64_t v33 = sub_1001984DC(v32, 0xD000000000000019, 0x8000000100244280);

  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v33;
  v34[3] = sub_1001DB094;
  v34[4] = v31;
  uint64_t v35 = qword_100298EB8;
  swift_retain();
  swift_retain();
  if (v35 != -1) {
    swift_once();
  }
  sub_100003CC8(v5, (uint64_t)qword_10029E7D0);
  uint64_t v36 = sub_100222070();
  os_log_type_t v37 = sub_1002224E0();
  if (os_log_type_enabled(v36, v37))
  {
    id v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "beginning a removeRecoveryKey", v38, 2u);
    swift_slowDealloc();
  }

  id v39 = (void *)swift_allocObject();
  _OWORD v39[2] = sub_1001D9314;
  v39[3] = v34;
  uint64_t v39[4] = v32;
  id v40 = v32;
  swift_retain();
  sub_100174E30(0, (uint64_t)sub_1001D9324, (uint64_t)v39);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1001D6408(void *a1, uint64_t a2, void *a3)
{
  uint64_t v66 = a2;
  uint64_t v64 = type metadata accessor for PerformATOPRVActionsRequest(0);
  __chkstk_darwin(v64, v5);
  uint64_t v65 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v63 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v62 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  id v68 = a3;
  uint64_t v69 = v13;
  *(void *)(v13 + 16) = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100222090();
  uint64_t v15 = sub_100003CC8(v14, (uint64_t)qword_10029F120);
  id v16 = a1;
  uint64_t v67 = v15;
  uint64_t v17 = sub_100222070();
  os_log_type_t v18 = sub_1002224E0();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v70 = (uint64_t)a1;
    v71[0] = v20;
    *(_DWORD *)id v19 = 136446210;
    id v21 = v16;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v22 = sub_1002222C0();
    uint64_t v70 = sub_1001BEBDC(v22, v23, v71);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "performATOPRVActions for %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      uint64_t v61 = a1;
      id v24 = *(void **)(v66 + 24);
      id v25 = v16;
      id v26 = [v25 cloudkitContainerName];
      uint64_t v27 = sub_100222270();
      unint64_t v29 = v28;

      id v30 = [v25 octagonContextID];
      uint64_t v31 = sub_100222270();
      uint64_t v33 = v32;

      __chkstk_darwin(v34, v35);
      *(&v61 - 6) = v24;
      *(&v61 - 5) = (void *)v27;
      *(&v61 - 4) = v29;
      *(&v61 - 3) = (void *)v31;
      *(&v61 - 2) = v33;
      *(&v61 - 1) = v25;
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = v71[0];
      id v68 = (id)v71[0];
      uint64_t v51 = swift_allocObject();
      uint64_t v52 = v69;
      *(void *)(v51 + 16) = sub_1001B110C;
      *(void *)(v51 + 24) = v52;
      sub_1000059A4((void *)(v50 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish), *(void *)(v50 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24));
      uint64_t v53 = type metadata accessor for Metrics(0);
      uint64_t v54 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v62, 1, 1, v53);
      uint64_t v55 = type metadata accessor for AccountInfo(0);
      uint64_t v56 = (uint64_t)v63;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v63, 1, 1, v55);
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = sub_1001DB0A4;
      *(void *)(v57 + 24) = v51;
      __chkstk_darwin(v57, v58);
      *(&v61 - 2) = (void *)v54;
      *(&v61 - 1) = (void *)v56;
      sub_1001D93A8(&qword_10029A788, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
      swift_retain();
      swift_retain();
      uint64_t v59 = (uint64_t)v65;
      sub_100221F70();
      RetryingCKCodeService.performAtoprvactions(_:completion:)(v59, (uint64_t)sub_1001D92EC, v57);
      sub_1001D99E4(v59, type metadata accessor for PerformATOPRVActionsRequest);
      swift_release();
      sub_10004015C(v56, &qword_100299F50);
      sub_10004015C(v54, &qword_10029F000);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  uint64_t v36 = swift_allocError();
  *(_OWORD *)uint64_t v37 = xmmword_100231740;
  *(unsigned char *)(v37 + 16) = 13;
  swift_willThrow();
  id v38 = v16;
  swift_errorRetain();
  id v39 = v38;
  swift_errorRetain();
  id v40 = sub_100222070();
  os_log_type_t v41 = sub_100222500();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v70 = (uint64_t)a1;
    v71[0] = v43;
    *(_DWORD *)uint64_t v42 = 136446466;
    id v44 = v39;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v45 = sub_1002222C0();
    uint64_t v70 = sub_1001BEBDC(v45, v46, v71);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2082;
    uint64_t v70 = v36;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v47 = sub_1002222C0();
    uint64_t v70 = sub_1001BEBDC(v47, v48, v71);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "performATOPRVActions failed for %{public}s: %{public}s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v71[2], v71[3]);
  uint64_t v49 = (void *)sub_100221B30();
  (*((void (**)(id, void *))v68 + 2))(v68, v49);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

void sub_1001D6C7C(void *a1, uint64_t a2, void (*a3)(void, void), int a4, void *aBlock)
{
  _Block_copy(aBlock);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029F120);
  id v9 = a1;
  swift_bridgeObjectRetain_n();
  id v10 = v9;
  uint64_t v11 = sub_100222070();
  os_log_type_t v12 = sub_1002224E0();
  uint64_t v37 = (void (**)(void, void))aBlock;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    id v14 = v10;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v15 = sub_1002222C0();
    sub_1001BEBDC(v15, v16, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1001BEBDC(a2, (unint64_t)a3, v39);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "testSemaphore for %{public}s: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v17 = v10;
      id v18 = [v17 cloudkitContainerName];
      sub_100222270();

      id v19 = [v17 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v20, v21);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = (void *)v39[0];
      uint64_t v35 = v37;
      _Block_copy(v37);
      sub_1001B045C(a2, a3, v34, v37);
      _Block_release(v37);

      goto LABEL_11;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v10;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    unint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    v39[0] = v29;
    id v30 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v31 = sub_1002222C0();
    sub_1001BEBDC(v31, v32, v39);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2114;
    swift_errorRetain();
    uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
    sub_100222690();
    *unint64_t v28 = v38;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "testSemaphore failed for %{public}s: %{public}@", (uint8_t *)v27, 0x16u);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v35 = v37;
  swift_getErrorValue();
  sub_1001B9900(v39[2], v39[3]);
  uint64_t v33 = (void *)sub_100221B30();
  ((void (**)(void, void *))v35)[2](v35, v33);

  swift_errorRelease();
  swift_errorRelease();
LABEL_11:
  _Block_release(v35);
}

uint64_t sub_1001D727C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(void, void, void))
{
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = a7;
  _Block_copy(a7);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_10029F120);
  id v9 = a1;
  id v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v12 = 136446210;
    uint64_t v13 = a1;
    id v14 = v9;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v15 = sub_1002222C0();
    sub_1001BEBDC(v15, v16, v48);
    sub_100222690();

    a1 = v13;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "preflightRecoverOctagon for %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v13)
    {
LABEL_5:
      id v17 = v9;
      id v18 = objc_msgSend(v17, "cloudkitContainerName", a1);
      sub_100222270();

      id v19 = [v17 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v20, v21);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = (void *)v48[0];
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1001DAE94;
      *(void *)(v35 + 24) = v47;
      type metadata accessor for Container.SemaphoreWrapper();
      swift_allocObject();
      swift_retain();
      id v36 = v34;
      uint64_t v37 = sub_1001984DC(v36, 0xD00000000000003FLL, 0x80000001002412E0);

      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      v38[3] = sub_1001DB094;
      v38[4] = v35;
      id v39 = (void *)swift_allocObject();
      _OWORD v39[2] = sub_1001D928C;
      v39[3] = v38;
      uint64_t v39[4] = v36;
      v39[5] = a2;
      v39[6] = a3;
      v39[7] = a4;
      v39[8] = a5;
      id v40 = v36;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100174E30(0, (uint64_t)sub_1001D929C, (uint64_t)v39);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231740;
  *(unsigned char *)(v22 + 16) = 13;
  swift_willThrow();
  id v23 = v9;
  swift_errorRetain();
  id v24 = v23;
  swift_errorRetain();
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_100222500();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    id v28 = v24;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v29 = sub_1002222C0();
    sub_1001BEBDC(v29, v30, v48);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v31 = sub_1002222C0();
    sub_1001BEBDC(v31, v32, v48);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "preflightRecoverOctagon failed for %{public}s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v48[2], v48[3]);
  uint64_t v33 = (void *)sub_100221B30();
  ((void (**)(void, void, void *))a7)[2](a7, 0, v33);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D7958(void *a1, uint64_t a2, void (**a3)(const void *, void, void *))
{
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a3;
  uint64_t v34 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    id v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v36);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "fetchTrustedPeerCount for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v36[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001DAE98;
      *(void *)(v32 + 24) = v35;
      swift_retain();
      sub_100167CE0((uint64_t)sub_1001D9268, v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v36);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v36);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "fetchTrustedPeerCount failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v36[2], v36[3]);
  unint64_t v30 = (void *)sub_100221B30();
  v34[2](v34, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D7F38(void *a1, uint64_t a2, void (**a3)(const void *, void, void *))
{
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a3;
  uint64_t v34 = a3;
  _Block_copy(a3);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    id v10 = a1;
    id v11 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v12 = sub_1002222C0();
    sub_1001BEBDC(v12, v13, v36);
    sub_100222690();

    a1 = v10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "octagonContainsDistrustedRecoveryKeys for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v10)
    {
LABEL_5:
      id v14 = v6;
      id v15 = objc_msgSend(v14, "cloudkitContainerName", a1);
      sub_100222270();

      id v16 = [v14 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v17, v18);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v36[0];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = sub_1001D9260;
      *(void *)(v32 + 24) = v35;
      swift_retain();
      sub_1001683D0((uint64_t)sub_1001DB094, v32);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_100231740;
  *(unsigned char *)(v19 + 16) = 13;
  swift_willThrow();
  id v20 = v6;
  swift_errorRetain();
  id v21 = v20;
  swift_errorRetain();
  uint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_100222500();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    id v25 = v21;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v26 = sub_1002222C0();
    sub_1001BEBDC(v26, v27, v36);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v28 = sub_1002222C0();
    sub_1001BEBDC(v28, v29, v36);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "octagonContainsDistrustedRecoveryKeys failed for %{public}s: %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v36[2], v36[3]);
  unint64_t v30 = (void *)sub_100221B30();
  v34[2](v34, 0, v30);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D8518(void *a1, unint64_t a2, uint64_t a3, void (**a4)(void, void, void, void))
{
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    id v10 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v11 = sub_1002222C0();
    sub_1001BEBDC(v11, v12, v38);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "fetchCurrentItem for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v13 = v6;
      id v14 = [v13 cloudkitContainerName];
      sub_100222270();

      id v15 = [v13 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v16, v17);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = (void *)v38[0];
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_1001D9214;
      *(void *)(v33 + 24) = v37;
      swift_retain();
      sub_100184EF4(a2, (uint64_t)sub_1001D9240, v33);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v18 = xmmword_100231740;
  *(unsigned char *)(v18 + 16) = 13;
  swift_willThrow();
  id v19 = v6;
  swift_errorRetain();
  id v20 = v19;
  swift_errorRetain();
  id v21 = sub_100222070();
  os_log_type_t v22 = sub_100222500();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136446466;
    id v24 = v20;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v25 = sub_1002222C0();
    sub_1001BEBDC(v25, v26, v38);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v27 = sub_1002222C0();
    sub_1001BEBDC(v27, v28, v38);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "fetchCurrentItem failed for %{public}s: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v38[2], v38[3]);
  sub_1000047D8(0, &qword_10029F408);
  Class isa = sub_1002223B0().super.isa;
  sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
  Class v30 = sub_1002223B0().super.isa;
  uint64_t v31 = (void *)sub_100221B30();
  ((void (**)(void, Class, Class, void *))a4)[2](a4, isa, v30, v31);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D8B54(void *a1, unint64_t a2, uint64_t a3, void (**a4)(void, void, void, void))
{
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a4;
  _Block_copy(a4);
  if (qword_100298ED0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029F120);
  id v6 = a1;
  uint64_t v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224E0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    id v10 = v6;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v11 = sub_1002222C0();
    sub_1001BEBDC(v11, v12, v38);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "fetchPCSIdentityByPublicKey for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      id v13 = v6;
      id v14 = [v13 cloudkitContainerName];
      sub_100222270();

      id v15 = [v13 octagonContextID];
      sub_100222270();

      __chkstk_darwin(v16, v17);
      type metadata accessor for Container();
      sub_100222560();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = (void *)v38[0];
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_1001D91C8;
      *(void *)(v33 + 24) = v37;
      swift_retain();
      sub_100186300(a2, (uint64_t)sub_1001D920C, v33);
      swift_release();

      return swift_release();
    }
  }
  else
  {

    if (a1) {
      goto LABEL_5;
    }
  }
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v18 = xmmword_100231740;
  *(unsigned char *)(v18 + 16) = 13;
  swift_willThrow();
  id v19 = v6;
  swift_errorRetain();
  id v20 = v19;
  swift_errorRetain();
  id v21 = sub_100222070();
  os_log_type_t v22 = sub_100222500();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136446466;
    id v24 = v20;
    sub_1000046DC(&qword_10029F3E0);
    uint64_t v25 = sub_1002222C0();
    sub_1001BEBDC(v25, v26, v38);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v27 = sub_1002222C0();
    sub_1001BEBDC(v27, v28, v38);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "fetchPCSIdentityByPublicKey failed for %{public}s: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getErrorValue();
  sub_1001B9900(v38[2], v38[3]);
  sub_1000047D8(0, &qword_10029F3D8);
  Class isa = sub_1002223B0().super.isa;
  sub_1000047D8(0, (unint64_t *)&qword_10029ED50);
  Class v30 = sub_1002223B0().super.isa;
  uint64_t v31 = (void *)sub_100221B30();
  ((void (**)(void, Class, Class, void *))a4)[2](a4, isa, v30, v31);

  swift_errorRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1001D9190()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001D91C8(objc_class *a1, objc_class *a2, uint64_t a3)
{
  sub_1001BEA9C(a1, a2, a3, *(void *)(v3 + 16), &qword_10029F3D8);
}

void sub_1001D91F4(uint64_t *a1@<X8>)
{
}

uint64_t sub_1001D920C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BE908(a1, a2, a3, *(void (**)(uint64_t, uint64_t, id))(v3 + 16));
}

void sub_1001D9214(objc_class *a1, objc_class *a2, uint64_t a3)
{
  sub_1001BEA9C(a1, a2, a3, *(void *)(v3 + 16), &qword_10029F408);
}

uint64_t sub_1001D9240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BE844(a1, a2, a3, *(void (**)(uint64_t, uint64_t, id))(v3 + 16));
}

void sub_1001D9260(char a1, uint64_t a2)
{
  sub_1001BA7C4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001D9268(uint64_t a1, uint64_t a2)
{
  return sub_1001BE668(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

uint64_t sub_1001D928C(char a1, uint64_t a2)
{
  return sub_10004AB2C(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, uint64_t))(v2 + 24));
}

uint64_t sub_1001D929C(uint64_t a1)
{
  return sub_1001DA3BC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_10004ADA0);
}

uint64_t sub_1001D92B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D92EC(uint64_t a1)
{
  return sub_1001849E0(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1001D92F4(uint64_t a1)
{
  return sub_1001DD9D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001D9314(char a1, uint64_t a2)
{
  return sub_100181218(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001D9324(uint64_t a1)
{
  return sub_1001814B8(a1, *(uint64_t (**)(void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32));
}

uint64_t sub_1001D9330(char a1, uint64_t a2)
{
  return sub_1001BE70C(a1, a2, *(void (**)(void, id))(v2 + 16));
}

uint64_t sub_1001D9350(char a1, uint64_t a2)
{
  return sub_100180D20(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001D9360(uint64_t a1)
{
  return sub_100180D44(a1, *(uint64_t (**)(void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32));
}

uint64_t sub_1001D9370(uint64_t a1)
{
  return sub_10016899C(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001D937C(uint64_t a1)
{
  return sub_1001689D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(unsigned __int8 *)(v1 + 49), *(unsigned __int8 *)(v1 + 50));
}

uint64_t sub_1001D93A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001D93F4(uint64_t a1)
{
  return sub_100168BF8(a1, *(char **)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

void sub_1001D9400(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1001BE0A0(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1001D9408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BE844(a1, a2, a3, *(void (**)(uint64_t, uint64_t, id))(v3 + 16));
}

uint64_t sub_1001D942C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10016789C(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(void, void, void))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1001D9438(uint64_t a1)
{
  return sub_1001678E4(a1, *(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_1001D9440(void *a1)
{
  return sub_1001DD1B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_1001D9464()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001D947C(uint64_t a1, uint64_t a2)
{
  return sub_1001BDD44(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, id))(v2 + 32), *(void *)(v2 + 40), 0xD000000000000019, 0x8000000100245960);
}

uint64_t sub_1001D94C8(uint64_t a1, uint64_t a2)
{
  return sub_10014104C(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001D94D4()
{
  uint64_t v1 = sub_100221D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_1001D95C0()
{
  uint64_t v1 = *(void *)(sub_100221D00() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void (**)(void, void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100141094(v3, v0 + v2, v4);
}

uint64_t sub_1001D9654()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D9664(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001D9674()
{
  return swift_release();
}

uint64_t sub_1001D967C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001D9694(uint64_t a1)
{
  return sub_1001BDC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id))(v1 + 32), *(void *)(v1 + 40), 0xD00000000000001ALL, 0x8000000100245980);
}

uint64_t sub_1001D96D0(uint64_t a1)
{
  return sub_1001402DC(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001D96DC()
{
  uint64_t v1 = sub_100221D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1001D97B0()
{
  uint64_t v1 = *(void *)(sub_100221D00() - 8);
  uint64_t v2 = (char *)v0[2];
  uint64_t v3 = (void (*)(void))v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100140314(v2, v3, v4, v5);
}

uint64_t sub_1001D9818()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001D9828(objc_class *a1, uint64_t a2, uint64_t a3)
{
  sub_1001BDBD8(a1, a2, a3, *(void *)(v3 + 16), (unint64_t *)&qword_10029ED50);
}

uint64_t sub_1001D9854()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001D986C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD94C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(uint64_t, uint64_t, id))(v3 + 32), *(void *)(v3 + 40), 0xD00000000000001ALL, 0x80000001002459A0);
}

void sub_1001D98B4(objc_class *a1, uint64_t a2)
{
  sub_1001BCD90(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001D98BC()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001D98D4(uint64_t a1, uint64_t a2)
{
  return sub_1001BDD44(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, id))(v2 + 32), *(void *)(v2 + 40), 0x766F636552746573, 0xEE0079654B797265);
}

uint64_t sub_1001D9928(uint64_t a1, uint64_t a2)
{
  return sub_1001395DC(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001D9934()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001D998C(uint64_t a1)
{
  return sub_100139624(a1, *(uint64_t (**)(void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1001D99C0(void *a1)
{
  return sub_10015CD28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001D99DC(uint64_t a1)
{
  return sub_10015CD80(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001D99E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1001D9A44(objc_class *a1, uint64_t a2)
{
  sub_1001BD650(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001D9A4C(uint64_t a1, uint64_t a2)
{
  return sub_1001BE668(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

void sub_1001D9A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001BCB5C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1001D9A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD418(a1, a2, a3, *(void (**)(uint64_t, uint64_t, id))(v3 + 16));
}

uint64_t sub_1001D9A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100158DD0(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24));
}

uint64_t sub_1001D9A8C()
{
  return sub_1001DA57C(57);
}

void sub_1001D9A94()
{
  sub_100159054(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(NSObject *, id, id))(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

uint64_t sub_1001D9AA8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001D9AB8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  sub_1001BD314(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16));
}

uint64_t sub_1001D9AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001BD23C(a1, a2, a3, a4, a5, a6, a7, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v7 + 16));
}

void sub_1001D9AE8(uint64_t a1, uint64_t a2)
{
  sub_1001BD1A4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001D9AF4(uint64_t a1, char a2)
{
  return sub_1001FF83C(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void, uint64_t))(v2 + 24));
}

void sub_1001D9B04(uint64_t a1, objc_class *a2, uint64_t a3)
{
  sub_1001BD050(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1001D9B10(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100151C64(a1, a2, a3 & 1, *(void *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24));
}

uint64_t sub_1001D9B20(uint64_t a1)
{
  return sub_1001BE410(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1001D9B40(uint64_t a1)
{
  return sub_100150078(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

id sub_1001D9B50()
{
  return sub_1001500B0(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001D9B5C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D9B70(uint64_t a1)
{
  return sub_10014E4C4(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001D9B80()
{
  return sub_10014E4FC(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001D9B8C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D9BA0(uint64_t a1)
{
  return sub_10014E27C(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001D9BB0()
{
  return sub_10014E2B4(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001D9BBC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D9BCC(uint64_t a1, uint64_t a2)
{
  return sub_1001BE668(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

void sub_1001D9BEC(uint64_t a1, uint64_t a2)
{
  sub_1001BA91C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001D9C0C(uint64_t a1, uint64_t a2)
{
  return sub_10017091C(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001D9C18()
{
  return sub_1001DAE00((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001D9C30()
{
  return sub_100170964(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(void, uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001D9C3C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D9C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BE844(a1, a2, a3, *(void (**)(uint64_t, uint64_t, id))(v3 + 16));
}

uint64_t sub_1001D9C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001708D4(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(void, void, void))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1001D9C7C()
{
  swift_release();

  if (*(void *)(v0 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 145, 7);
}

uint64_t sub_1001D9CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000046DC(&qword_10029EE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001D9D64(uint64_t a1, uint64_t a2, objc_class *a3, uint64_t a4, uint64_t a5)
{
  sub_1001BB598(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_1001D9D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001BC774(a1, a2, a3, a4, a5, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id))(v5 + 16));
}

uint64_t sub_1001D9D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10016B414(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(void, void, void, void, void))(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_1001D9D98()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001D9DF0(void *a1)
{
  return sub_10016B6EC(a1, *(void *)(v1 + 16), *(objc_class **)(v1 + 24), *(objc_class **)(v1 + 32), *(objc_class **)(v1 + 40), *(objc_class **)(v1 + 48), *(objc_class **)(v1 + 56));
}

uint64_t sub_1001D9E04(char a1, uint64_t a2)
{
  return sub_10016A0F0(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001D9E10()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001D9E58(uint64_t a1)
{
  return sub_10016A114(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1001D9E64(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, objc_class *a5, uint64_t a6, uint64_t a7)
{
  sub_1001BBDD0(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16));
}

uint64_t sub_1001D9E6C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001D9E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001BC268(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(void *)(v7 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v7 + 32), *(void *)(v7 + 40), 0xD000000000000014, 0x80000001002459E0);
}

uint64_t sub_1001D9ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10014A234(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24), *(void *)(v7 + 32));
}

uint64_t sub_1001D9F04()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001D9F54()
{
  return sub_1001DA720((uint64_t (*)(void, void, void, void, void, void))sub_10014A288);
}

uint64_t sub_1001D9F6C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D9F7C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001D9F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001BC268(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(void *)(v7 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v7 + 32), *(void *)(v7 + 40), 0xD000000000000024, 0x8000000100245A00);
}

uint64_t sub_1001D9FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100147C54(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24), *(void *)(v7 + 32));
}

uint64_t sub_1001DA018()
{
  return sub_1001DA5E8((uint64_t (*)(void, void, void, void, void))sub_100147CA8);
}

uint64_t sub_1001DA030()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001DA040(objc_class *a1, uint64_t a2, uint64_t a3)
{
  sub_1001BDBD8(a1, a2, a3, *(void *)(v3 + 16), &qword_10029F410);
}

uint64_t sub_1001DA06C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD94C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(uint64_t, uint64_t, id))(v3 + 32), *(void *)(v3 + 40), 0xD000000000000022, 0x8000000100245A30);
}

uint64_t sub_1001DA0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100145D28(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(void, void, void))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1001DA0E0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001DA130()
{
  return sub_1001DA5E8((uint64_t (*)(void, void, void, void, void))sub_100145D70);
}

uint64_t sub_1001DA148()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DA158()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001BC268(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(void *)(v7 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v7 + 32), *(void *)(v7 + 40), 0xD00000000000001ALL, 0x8000000100245A60);
}

uint64_t sub_1001DA1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100143E14(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24), *(void *)(v7 + 32));
}

uint64_t sub_1001DA1F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001DA248()
{
  return sub_100143E68(*(char **)(v0 + 16), *(void (**)(void, unint64_t, void, unint64_t, void, void, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_1001DA25C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001DA26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001BBF08(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1001DA274()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BBFA0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, id))(v4 + 32), *(void *)(v4 + 40), 0xD000000000000029, 0x8000000100245A80);
}

uint64_t sub_1001DA2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100047E48(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t (**)(void, void, void, void))(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_1001DA2E0()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001DA328(uint64_t a1)
{
  sub_100048104(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1001DA334()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BBFA0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, id))(v4 + 32), *(void *)(v4 + 40), 0xD000000000000020, 0x8000000100245AB0);
}

uint64_t sub_1001DA394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100045CF0(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t (**)(void, void, void, void))(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_1001DA3A4(uint64_t a1)
{
  return sub_1001DA3BC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100045D34);
}

uint64_t sub_1001DA3BC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1001DA3D8()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001BC268(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(void *)(v7 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v7 + 32), *(void *)(v7 + 40), 0xD000000000000014, 0x8000000100245AE0);
}

uint64_t sub_1001DA444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001416D8(a1, a2, a3, a4, a5, a6, a7, *(void *)(v7 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24), *(void *)(v7 + 32));
}

uint64_t sub_1001DA470()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_100005A40(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001DA4D0()
{
  return sub_10014172C(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void, unint64_t, void, unint64_t, void, void, uint64_t))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1001DA508()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001DA518(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_1001BBBB4(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_1001DA520()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA538(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_1001BBAB8(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, void, id))(v5 + 32));
}

uint64_t sub_1001DA568(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_100040368(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(void, void, void, void, void))(v5 + 24));
}

uint64_t sub_1001DA574()
{
  return sub_1001DA57C(56);
}

uint64_t sub_1001DA57C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1001DA5D0()
{
  return sub_1001DA5E8((uint64_t (*)(void, void, void, void, void))sub_1000405FC);
}

uint64_t sub_1001DA5E8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1001DA600()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001DA610(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  sub_1001BB9E4(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_1001DA618()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001BB674(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id))(v5 + 32));
}

uint64_t sub_1001DA65C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001BB498(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id))(v5 + 32));
}

uint64_t sub_1001DA6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001329C8(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(void, void, void, void, void))(v5 + 24));
}

uint64_t sub_1001DA6B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001DA708()
{
  return sub_1001DA720((uint64_t (*)(void, void, void, void, void, void))sub_100132CEC);
}

uint64_t sub_1001DA720(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1001DA738()
{
  return _swift_deallocObject(v0, 32, 7);
}

__n128 sub_1001DA748(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, objc_class *a14, uint64_t a15)
{
  sub_1001BB2B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, *(void *)(v15 + 16));
  return result;
}

uint64_t sub_1001DA784()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return sub_1001BAF1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, *(void *)(v15 + 16), *(void *)(v15 + 24), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))(v15 + 32));
}

uint64_t sub_1001DA7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return sub_10012D024(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, *(void *)(v15 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24));
}

uint64_t sub_1001DA830()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_1001DA8B8(uint64_t a1)
{
  return sub_10012D3C4(a1, *(void (**)(void, void, void, unint64_t, void, unint64_t, void, unint64_t, void, unint64_t, void, void, void, void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(char **)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void **)(v1 + 72), *(void **)(v1 + 80), *(_DWORD *)(v1 + 88), *(void *)(v1 + 96), *(void **)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152));
}

uint64_t sub_1001DA914(uint64_t a1, uint64_t a2)
{
  return sub_1001BE668(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

void sub_1001DA934(uint64_t a1, uint64_t a2)
{
  sub_1001BA864(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001DA93C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA954(uint64_t a1, uint64_t a2)
{
  return sub_1001BDD44(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, id))(v2 + 32), *(void *)(v2 + 40), 0xD00000000000001ALL, 0x8000000100245B40);
}

uint64_t sub_1001DA99C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DA9B4(uint64_t a1)
{
  return sub_1001BDC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id))(v1 + 32), *(void *)(v1 + 40), 0xD00000000000001BLL, 0x8000000100245B90);
}

uint64_t sub_1001DA9F0(uint64_t a1)
{
  return sub_1001ED2F0(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1001DAA00()
{
  return sub_1001ED550(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1001DAA0C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DAA1C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DAA34(char a1, uint64_t a2)
{
  return sub_1001BA3D8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void, id))(v2 + 32));
}

uint64_t sub_1001DAA40()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DAA58(uint64_t a1)
{
  return sub_1001BDC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id))(v1 + 32), *(void *)(v1 + 40), 0x6572206C61636F4CLL, 0xEB00000000746573);
}

uint64_t sub_1001DAA98(uint64_t a1)
{
  return sub_10012BA40(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001DAAA8()
{
  return sub_10012BA78(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1001DAAB4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DAAC4()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DAADC(uint64_t a1)
{
  return sub_1001BDC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id))(v1 + 32), *(void *)(v1 + 40), 0xD000000000000024, 0x80000001002418C0);
}

uint64_t sub_1001DAB18(uint64_t a1)
{
  return sub_10012B2CC(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001DAB24()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001DAB64()
{
  return sub_10012B304(*(unsigned char *)(v0 + 16), *(unsigned char *)(v0 + 17), *(unsigned char *)(v0 + 18), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001DAB7C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001DAB8C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DABA4(uint64_t a1)
{
  return sub_1001BDC84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id))(v1 + 32), *(void *)(v1 + 40), 0x6E69747465736552, 0xE900000000000067);
}

void sub_1001DABDC(uint64_t a1, objc_class *a2, uint64_t a3)
{
  sub_1001BA0CC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1001DABE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BE844(a1, a2, a3, *(void (**)(uint64_t, uint64_t, id))(v3 + 16));
}

uint64_t sub_1001DAC08(void *a1, uint64_t a2)
{
  return sub_100123818(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24));
}

void sub_1001DAC18()
{
  sub_100123B2C(*(char **)(v0 + 16), *(void (**)(id, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001DAC24()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001DAC34(uint64_t a1, uint64_t a2)
{
  sub_1001BA000(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001DAC64()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DAC7C(uint64_t a1, uint64_t a2)
{
  return sub_1001BDD44(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, id))(v2 + 32), *(void *)(v2 + 40), 0xD00000000000001ALL, 0x8000000100245BD0);
}

void sub_1001DACC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001B9F40(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1001DACCC()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DACE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD94C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(uint64_t, uint64_t, id))(v3 + 32), *(void *)(v3 + 40), 0xD00000000000001ALL, 0x8000000100245BF0);
}

uint64_t sub_1001DAD2C()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DAD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BD94C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(uint64_t, uint64_t, id))(v3 + 32), *(void *)(v3 + 40), 0xD000000000000014, 0x8000000100245130);
}

void sub_1001DAD8C(uint64_t a1, uint64_t a2)
{
  sub_1001BA000(a1, a2, *(void *)(v2 + 16));
}

void sub_1001DADC4(uint64_t *a1@<X8>)
{
  sub_1000624EC(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), a1);
}

uint64_t sub_1001DADE8()
{
  return sub_1001DAE00((void (*)(void))&_swift_release);
}

uint64_t sub_1001DAE00(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  swift_release();

  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1001DAE50(uint64_t a1, uint64_t a2)
{
  return sub_1001BDD44(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, id))(v2 + 32), *(void *)(v2 + 40), 0x676E69706D7544, 0xE700000000000000);
}

uint64_t CuttlefishAPI.ResetOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, (uint64_t *)&unk_100299E90);
}

uint64_t CuttlefishAPI.EstablishOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299E80);
}

uint64_t sub_1001DB0EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = sub_1000046DC(a2);
  __chkstk_darwin(v5 - 8, v6);
  os_log_type_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone(v2);
  sub_10000D830(a1, (uint64_t)v8, a2);
  uint64_t v10 = sub_100221D30();
  sub_10004015C(a1, a2);
  return v10;
}

uint64_t CuttlefishAPI.JoinWithVoucherOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, (uint64_t *)&unk_100299E70);
}

uint64_t CuttlefishAPI.UpdateTrustOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, (uint64_t *)&unk_100299E60);
}

uint64_t CuttlefishAPI.SetRecoveryKeyOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, (uint64_t *)&unk_100299E50);
}

uint64_t CuttlefishAPI.FetchChangesOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299E40);
}

uint64_t CuttlefishAPI.FetchViableBottlesOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299E30);
}

uint64_t CuttlefishAPI.FetchPolicyDocumentsOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299E20);
}

uint64_t CuttlefishAPI.GetRepairActionOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, (uint64_t *)&unk_100299E10);
}

uint64_t CuttlefishAPI.GetSupportAppInfoOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299E00);
}

uint64_t CuttlefishAPI.ResetAccountCdpcontentsOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, (uint64_t *)&unk_100299DF0);
}

uint64_t CuttlefishAPI.AddCustodianRecoveryKeyOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299DE0);
}

uint64_t CuttlefishAPI.FetchRecoverableTlksharesOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299DD0);
}

uint64_t CuttlefishAPI.RemoveRecoveryKeyOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299DC0);
}

uint64_t CuttlefishAPI.PerformAtoprvactionsOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299DB0);
}

uint64_t CuttlefishAPI.FetchCurrentItemOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, (uint64_t *)&unk_100299DA0);
}

uint64_t CuttlefishAPI.FetchPcsidentityByPublicKeyOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299D90);
}

uint64_t CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_1001DB0EC(a1, &qword_100299D80);
}

uint64_t CuttlefishAPIAsync.updateTrust(changeToken:peerID:stableInfoAndSig:dynamicInfoAndSig:tlkShares:viewKeys:trustedDevicesVersion:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v30 = a13;
  uint64_t v28 = a11;
  uint64_t v29 = a12;
  long long v25 = a9;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v21);
  uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v37 = v26;
  uint64_t v38 = v27;
  long long v39 = a9;
  uint64_t v40 = a10;
  sub_1001DE4A8(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 32))(v23, v28, v29, v30, a14);
  return sub_1001E97C4((uint64_t)v23, type metadata accessor for UpdateTrustRequest);
}

uint64_t CuttlefishAPIAsync.getSupportAppInfo(metrics:accountInfo:page:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SupportAppInfouint64_t Request = type metadata accessor for GetSupportAppInfoRequest(0);
  __chkstk_darwin(SupportAppInfoRequest, v17);
  id v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[4] = a1;
  v21[5] = a2;
  v21[6] = a3;
  char v22 = a4 & 1;
  sub_1001DE4A8(&qword_10029A900, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 96))(v19, a5, a6, a7, a8);
  return sub_1001E97C4((uint64_t)v19, type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t CuttlefishAPIAsync.performAtoprvactions(metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for PerformATOPRVActionsRequest(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = &v17[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  sub_1001DE4A8(&qword_10029A788, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
  sub_100221F70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 120))(v15, a3, a4, a5, a6);
  return sub_1001E97C4((uint64_t)v15, type metadata accessor for PerformATOPRVActionsRequest);
}

uint64_t CuttlefishAPI.ResetOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, (uint64_t *)&unk_100299E90);
}

void CuttlefishAPI.ResetOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.EstablishOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299E80);
}

uint64_t sub_1001DB8D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000046DC(a2);
  __chkstk_darwin(v4 - 8, v5);
  sub_10000D830(a1, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t v7 = sub_100221D30();
  sub_10004015C(a1, a2);
  return v7;
}

void CuttlefishAPI.EstablishOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.JoinWithVoucherOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, (uint64_t *)&unk_100299E70);
}

void CuttlefishAPI.JoinWithVoucherOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.UpdateTrustOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, (uint64_t *)&unk_100299E60);
}

void CuttlefishAPI.UpdateTrustOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.SetRecoveryKeyOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, (uint64_t *)&unk_100299E50);
}

void CuttlefishAPI.SetRecoveryKeyOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.AddCustodianRecoveryKeyOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299DE0);
}

void CuttlefishAPI.AddCustodianRecoveryKeyOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.FetchChangesOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299E40);
}

void CuttlefishAPI.FetchChangesOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.FetchViableBottlesOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299E30);
}

void CuttlefishAPI.FetchViableBottlesOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.FetchRecoverableTlksharesOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299DD0);
}

void CuttlefishAPI.FetchRecoverableTlksharesOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.FetchPolicyDocumentsOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299E20);
}

void CuttlefishAPI.FetchPolicyDocumentsOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.GetRepairActionOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, (uint64_t *)&unk_100299E10);
}

void CuttlefishAPI.GetRepairActionOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.GetSupportAppInfoOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299E00);
}

void CuttlefishAPI.GetSupportAppInfoOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.ResetAccountCdpcontentsOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, (uint64_t *)&unk_100299DF0);
}

void CuttlefishAPI.ResetAccountCdpcontentsOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.RemoveRecoveryKeyOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299DC0);
}

void CuttlefishAPI.RemoveRecoveryKeyOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.PerformAtoprvactionsOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299DB0);
}

void CuttlefishAPI.PerformAtoprvactionsOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.FetchPcsidentityByPublicKeyOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299D90);
}

void CuttlefishAPI.FetchPcsidentityByPublicKeyOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.FetchCurrentItemOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, (uint64_t *)&unk_100299DA0);
}

void CuttlefishAPI.FetchCurrentItemOperation.init(functionName:request:)()
{
}

uint64_t CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation.init(request:)(uint64_t a1)
{
  return sub_1001DB8D0(a1, &qword_100299D80);
}

void CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation.init(functionName:request:)()
{
}

void sub_1001DBDC4()
{
}

id _s18TrustedPeersHelper13CuttlefishAPIO45PerformCkserverUnreadableDataRemovalOperationCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t CuttlefishAPIAsync.reset(resetReason:idmsTargetContext:idmsCuttlefishPassword:testingNotifyIdms:accountInfo:metrics:isGuitarfish:completion:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v26 = a7;
  uint64_t v25 = a6;
  uint64_t v29 = a11;
  uint64_t v27 = a8;
  uint64_t v28 = a12;
  uint64_t v30 = a13;
  uint64_t v19 = type metadata accessor for ResetRequest(0);
  __chkstk_darwin(v19, v20);
  char v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  __int16 v32 = a2 & 0x1FF;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = v25;
  char v37 = v26;
  uint64_t v38 = v27;
  uint64_t v39 = a9;
  char v40 = a10;
  sub_1001DE4A8((unint64_t *)&unk_10029F080, (void (*)(uint64_t))type metadata accessor for ResetRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 8))(v22, v29, v28, v30, a14);
  return sub_1001E97C4((uint64_t)v22, type metadata accessor for ResetRequest);
}

uint64_t CuttlefishAPIAsync.establish(peer:bottle:viewKeys:tlkShares:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v23 = a8;
  uint64_t v22 = a7;
  uint64_t v16 = type metadata accessor for EstablishRequest(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  sub_1001DE4A8(&qword_10029A6A8, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 16))(v19, v22, v23, a9, a10);
  return sub_1001E97C4((uint64_t)v19, type metadata accessor for EstablishRequest);
}

uint64_t CuttlefishAPIAsync.joinWithVoucher(changeToken:peer:bottle:tlkShares:viewKeys:trustedDevicesVersion:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v28 = a12;
  uint64_t v26 = a10;
  uint64_t v27 = a11;
  uint64_t v19 = type metadata accessor for JoinWithVoucherRequest(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v35 = v24;
  uint64_t v36 = v25;
  uint64_t v37 = a9;
  sub_1001DE4A8(&qword_10029A6D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a13 + 24))(v22, v26, v27, v28, a13);
  return sub_1001E97C4((uint64_t)v22, type metadata accessor for JoinWithVoucherRequest);
}

uint64_t sub_1001DC2A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1001E2128(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1001DC2D4(void *a1)
{
  return sub_1001E2C4C(a1);
}

uint64_t CuttlefishAPIAsync.setRecoveryKey(changeToken:peerID:recoverySigningPubKey:recoveryEncryptionPubKey:stableInfoAndSig:tlkShares:metrics:accountInfo:viewKeys:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v28 = a8;
  uint64_t v27 = a7;
  uint64_t v30 = a13;
  uint64_t v31 = a14;
  uint64_t v29 = a12;
  v26[1] = a10;
  v26[0] = a9;
  uint64_t v21 = type metadata accessor for SetRecoveryKeyRequest(0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v38 = v27;
  uint64_t v39 = v28;
  long long v40 = a9;
  long long v41 = a10;
  uint64_t v42 = a11;
  sub_1001DE4A8((unint64_t *)&unk_10029ED40, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a15 + 40))(v24, v29, v30, v31, a15);
  return sub_1001E97C4((uint64_t)v24, type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t CuttlefishAPIAsync.addCustodianRecoveryKey(changeToken:peerID:peer:stableInfoAndSig:tlkShares:dynamicInfoAndSig:metrics:accountInfo:viewKeys:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v30 = a13;
  uint64_t v28 = a11;
  uint64_t v29 = a12;
  long long v25 = a9;
  uint64_t v20 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v37 = v26;
  uint64_t v38 = v27;
  long long v39 = a9;
  uint64_t v40 = a10;
  sub_1001DE4A8((unint64_t *)&unk_10029F070, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 48))(v23, v28, v29, v30, a14);
  return sub_1001E97C4((uint64_t)v23, type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t CuttlefishAPIAsync.fetchChanges(changeToken:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Changesuint64_t Request = type metadata accessor for FetchChangesRequest(0);
  __chkstk_darwin(ChangesRequest, v17);
  uint64_t v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[4] = a1;
  v21[5] = a2;
  v21[6] = a3;
  void v21[7] = a4;
  sub_1001DE4A8((unint64_t *)&unk_10029EFB0, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 56))(v19, a5, a6, a7, a8);
  return sub_1001E97C4((uint64_t)v19, type metadata accessor for FetchChangesRequest);
}

uint64_t CuttlefishAPIAsync.fetchViableBottles(filterRequest:metrics:accountInfo:completion:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ViableBottlesuint64_t Request = type metadata accessor for FetchViableBottlesRequest(0);
  __chkstk_darwin(ViableBottlesRequest, v17);
  uint64_t v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[4] = a1;
  __int16 v22 = a2 & 0x1FF;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  sub_1001DE4A8((unint64_t *)&unk_10029F020, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 64))(v19, a5, a6, a7, a8);
  return sub_1001E97C4((uint64_t)v19, type metadata accessor for FetchViableBottlesRequest);
}

uint64_t CuttlefishAPIAsync.fetchRecoverableTlkshares(peerID:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  RecoverableTLKSharesuint64_t Request = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  __chkstk_darwin(RecoverableTLKSharesRequest, v17);
  uint64_t v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[4] = a1;
  void v21[5] = a2;
  v21[6] = a3;
  void v21[7] = a4;
  sub_1001DE4A8(&qword_10029A830, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 72))(v19, a5, a6, a7, a8);
  return sub_1001E97C4((uint64_t)v19, type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1001DCA84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v45 = a6;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v40 = a2;
  uint64_t v8 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AccountInfo(0);
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  uint64_t v14 = __chkstk_darwin(v12, v13);
  uint64_t v39 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v19 - 8, v20);
  __int16 v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Metrics(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v29);
  uint64_t v31 = (char *)&v38 - v30;
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a1 = v40;
    a1[1] = a3;
  }
  sub_10000D830(v41, (uint64_t)v22, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_1001E96F4((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
    sub_1001E975C((uint64_t)v31, (uint64_t)v28, type metadata accessor for Metrics);
    uint64_t v32 = (uint64_t)a1 + *(int *)(v45(0) + 24);
    sub_10004015C(v32, &qword_10029F000);
    sub_1001E96F4((uint64_t)v28, v32, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v32, 0, 1, v23);
    sub_1001E97C4((uint64_t)v31, type metadata accessor for Metrics);
  }
  sub_10000D830(v42, (uint64_t)v11, &qword_100299F50);
  uint64_t v34 = v43;
  uint64_t v33 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v11, 1, v44) == 1) {
    return sub_10004015C((uint64_t)v11, &qword_100299F50);
  }
  sub_1001E96F4((uint64_t)v11, (uint64_t)v18, type metadata accessor for AccountInfo);
  uint64_t v36 = v39;
  sub_1001E975C((uint64_t)v18, v39, type metadata accessor for AccountInfo);
  uint64_t v37 = (uint64_t)a1 + *(int *)(v45(0) + 28);
  sub_10004015C(v37, &qword_100299F50);
  sub_1001E96F4(v36, v37, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
  return sub_1001E97C4((uint64_t)v18, type metadata accessor for AccountInfo);
}

uint64_t CuttlefishAPIAsync.fetchPolicyDocuments(keys:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v15);
  uint64_t v17 = &v19[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  sub_1001DE4A8(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
  sub_100221F70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 80))(v17, a4, a5, a6, a7);
  return sub_1001E97C4((uint64_t)v17, type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t CuttlefishAPIAsync.getRepairAction(peerID:requiresEscrowCheck:knownFederations:performCleanup:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v25 = a8;
  uint64_t v23 = a9;
  uint64_t v24 = a10;
  RepairActionuint64_t Request = type metadata accessor for GetRepairActionRequest(0);
  __chkstk_darwin(RepairActionRequest, v19);
  uint64_t v21 = (char *)&v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  char v28 = a3;
  uint64_t v29 = a4;
  char v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  sub_1001DE4A8(&qword_10029A898, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a11 + 88))(v21, v25, v23, v24, a11);
  return sub_1001E97C4((uint64_t)v21, type metadata accessor for GetRepairActionRequest);
}

uint64_t sub_1001DD1B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1001E55B4(a1, a2, a3, a4, a5);
}

uint64_t sub_1001DD1C8(void *a1)
{
  return sub_1001E59FC(a1);
}

uint64_t CuttlefishAPIAsync.resetAccountCdpcontents(resetReason:idmsTargetContext:idmsCuttlefishPassword:testingNotifyIdms:accountInfo:metrics:isGuitarfish:completion:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v26 = a7;
  uint64_t v25 = a6;
  uint64_t v29 = a11;
  uint64_t v27 = a8;
  uint64_t v28 = a12;
  uint64_t v30 = a13;
  uint64_t v19 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  __int16 v32 = a2 & 0x1FF;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v36 = v25;
  char v37 = v26;
  uint64_t v38 = v27;
  uint64_t v39 = a9;
  char v40 = a10;
  sub_1001DE4A8(&qword_10029A930, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 104))(v22, v29, v28, v30, a14);
  return sub_1001E97C4((uint64_t)v22, type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1001DD37C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t (*a12)(void))
{
  int v52 = a8;
  uint64_t v50 = a4;
  uint64_t v51 = a6;
  uint64_t v47 = a2;
  uint64_t v16 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v53 = (uint64_t)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Metrics(0);
  uint64_t v54 = *(void *)(v19 - 8);
  uint64_t v55 = v19;
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v48 = (uint64_t)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v49 = (uint64_t)&v46 - v24;
  uint64_t v25 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v28 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for AccountInfo(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v34 = (char *)&v46 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v35);
  char v37 = (char *)&v46 - v36;
  if ((a3 & 0x100) == 0)
  {
    *(void *)a1 = v47;
    *(unsigned char *)(a1 + 8) = a3 & 1;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = v50;
    *(void *)(a1 + 24) = a5;
  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = v51;
    *(void *)(a1 + 40) = a7;
  }
  if (v52 != 2) {
    *(unsigned char *)(a1 + 48) = v52 & 1;
  }
  sub_10000D830(a9, (uint64_t)v28, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_10004015C((uint64_t)v28, &qword_100299F50);
  }
  else
  {
    sub_1001E96F4((uint64_t)v28, (uint64_t)v37, type metadata accessor for AccountInfo);
    sub_1001E975C((uint64_t)v37, (uint64_t)v34, type metadata accessor for AccountInfo);
    uint64_t v38 = a1 + *(int *)(a12(0) + 40);
    sub_10004015C(v38, &qword_100299F50);
    sub_1001E96F4((uint64_t)v34, v38, type metadata accessor for AccountInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v38, 0, 1, v29);
    sub_1001E97C4((uint64_t)v37, type metadata accessor for AccountInfo);
  }
  uint64_t v39 = v53;
  sub_10000D830(a10, v53, &qword_10029F000);
  uint64_t v41 = v54;
  uint64_t v40 = v55;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v39, 1, v55) == 1)
  {
    uint64_t result = sub_10004015C(v39, &qword_10029F000);
  }
  else
  {
    uint64_t v43 = v49;
    sub_1001E96F4(v39, v49, type metadata accessor for Metrics);
    uint64_t v44 = v48;
    sub_1001E975C(v43, v48, type metadata accessor for Metrics);
    uint64_t v45 = a1 + *(int *)(a12(0) + 44);
    sub_10004015C(v45, &qword_10029F000);
    sub_1001E96F4(v44, v45, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v45, 0, 1, v40);
    uint64_t result = sub_1001E97C4(v43, type metadata accessor for Metrics);
  }
  if (a11 != 2) {
    *(unsigned char *)(a1 + 49) = a11 & 1;
  }
  return result;
}

uint64_t CuttlefishAPIAsync.removeRecoveryKey(changeToken:peerID:stableInfoAndSig:dynamicInfoAndSig:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v27 = a9;
  uint64_t v25 = a8;
  uint64_t v26 = a10;
  uint64_t v28 = a11;
  uint64_t v19 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  uint64_t v36 = v25;
  sub_1001DE4A8((unint64_t *)&unk_10029EC80, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
  sub_100221F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a12 + 112))(v22, v27, v26, v28, a12);
  return sub_1001E97C4((uint64_t)v22, type metadata accessor for RemoveRecoveryKeyRequest);
}

uint64_t sub_1001DD9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001E67DC(a1, a2, a3);
}

uint64_t sub_1001DD9E8(uint64_t a1)
{
  return sub_1001E67DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001DDA04(uint64_t a1)
{
  return sub_1001E5BC4(a1, type metadata accessor for ResetRequest);
}

uint64_t sub_1001DDA30(uint64_t a1)
{
  return sub_1001E12B0(a1);
}

uint64_t sub_1001DDA48(uint64_t a1)
{
  return sub_1001E1F54(a1);
}

uint64_t sub_1001DDA60(void *a1)
{
  return sub_1001E35D8(a1);
}

uint64_t sub_1001DDA78(uint64_t a1)
{
  return sub_1001E436C(a1);
}

uint64_t sub_1001DDA90(void *a1)
{
  return sub_1001DCA84(a1, v1[2], v1[3], v1[4], v1[5], type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1001DDAC4(void *a1)
{
  return sub_1001E4AE4(a1);
}

uint64_t sub_1001DDADC(void *a1)
{
  return sub_1001DCA84(a1, v1[2], v1[3], v1[4], v1[5], type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1001DDB10(void *a1)
{
  return sub_1001DDD04(a1, v1[2], v1[3], v1[4], type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t sub_1001DDB44(uint64_t a1)
{
  return sub_1001E5410(a1);
}

uint64_t sub_1001DDB5C(uint64_t a1)
{
  return sub_1001E5BC4(a1, type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1001DDB88(void *a1)
{
  return sub_1001E6644(a1);
}

uint64_t CuttlefishAPIAsync.fetchPcsidentityByPublicKey(pcsServices:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  __chkstk_darwin(Request, v15);
  uint64_t v17 = &v19[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  sub_1001DE4A8((unint64_t *)&unk_10029EF20, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
  sub_100221F70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 128))(v17, a4, a5, a6, a7);
  return sub_1001E97C4((uint64_t)v17, type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t sub_1001DDD04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v42 = a5;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v37 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Metrics(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v27 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v37 - v29;
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  sub_10000D830(v38, (uint64_t)v21, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_10004015C((uint64_t)v21, &qword_10029F000);
  }
  else
  {
    sub_1001E96F4((uint64_t)v21, (uint64_t)v30, type metadata accessor for Metrics);
    sub_1001E975C((uint64_t)v30, (uint64_t)v27, type metadata accessor for Metrics);
    uint64_t v31 = (uint64_t)a1 + *(int *)(v42(0) + 24);
    sub_10004015C(v31, &qword_10029F000);
    sub_1001E96F4((uint64_t)v27, v31, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v31, 0, 1, v22);
    sub_1001E97C4((uint64_t)v30, type metadata accessor for Metrics);
  }
  sub_10000D830(v39, (uint64_t)v10, &qword_100299F50);
  uint64_t v33 = v40;
  uint64_t v32 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v10, 1, v41) == 1) {
    return sub_10004015C((uint64_t)v10, &qword_100299F50);
  }
  sub_1001E96F4((uint64_t)v10, (uint64_t)v17, type metadata accessor for AccountInfo);
  uint64_t v35 = v37;
  sub_1001E975C((uint64_t)v17, v37, type metadata accessor for AccountInfo);
  uint64_t v36 = (uint64_t)a1 + *(int *)(v42(0) + 28);
  sub_10004015C(v36, &qword_100299F50);
  sub_1001E96F4(v35, v36, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
  return sub_1001E97C4((uint64_t)v17, type metadata accessor for AccountInfo);
}

uint64_t sub_1001DE158(void *a1)
{
  return sub_1001DDD04(a1, v1[2], v1[3], v1[4], type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t CuttlefishAPIAsync.fetchCurrentItem(currentItems:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  __chkstk_darwin(Request, v15);
  uint64_t v17 = &v19[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  sub_1001DE4A8((unint64_t *)&unk_10029EF40, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
  sub_100221F70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 136))(v17, a4, a5, a6, a7);
  return sub_1001E97C4((uint64_t)v17, type metadata accessor for CurrentItemFetchRequest);
}

uint64_t sub_1001DE2F0(void *a1)
{
  return sub_1001DDD04(a1, v1[2], v1[3], v1[4], type metadata accessor for CurrentItemFetchRequest);
}

uint64_t CuttlefishAPIAsync.performCkserverUnreadableDataRemoval(isGuitarfish:metrics:accountInfo:completion:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = &v19[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned char v19[16] = a1;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  sub_1001DE4A8(&qword_10029AA48, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
  sub_100221F70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 144))(v17, a4, a5, a6, a7);
  return sub_1001E97C4((uint64_t)v17, type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_1001DE488(unsigned char *a1)
{
  return sub_1001E7048(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001DE4A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CuttlefishAPIAsyncClient.__allocating_init(codeService:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t CuttlefishAPIAsyncClient.init(codeService:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

void CuttlefishAPIAsyncClient.reset(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E90);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for ResetRequest);
  uint64_t v10 = type metadata accessor for ResetRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.ResetOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E90);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E90);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.ResetOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F418);
}

void CuttlefishAPIAsyncClient.establish(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E80);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for EstablishRequest);
  uint64_t v10 = type metadata accessor for EstablishRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.EstablishOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E80);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E80);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.EstablishOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F468);
}

void CuttlefishAPIAsyncClient.joinWithVoucher(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E70);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for JoinWithVoucherRequest);
  uint64_t v10 = type metadata accessor for JoinWithVoucherRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.JoinWithVoucherOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E70);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E70);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.JoinWithVoucherOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F4B8);
}

void CuttlefishAPIAsyncClient.updateTrust(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E60);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for UpdateTrustRequest);
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v9, 0, 1, updated);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.UpdateTrustOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E60);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E60);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.UpdateTrustOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F508);
}

void CuttlefishAPIAsyncClient.setRecoveryKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E50);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for SetRecoveryKeyRequest);
  uint64_t v10 = type metadata accessor for SetRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.SetRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E50);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E50);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.SetRecoveryKeyOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F558);
}

void CuttlefishAPIAsyncClient.addCustodianRecoveryKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DE0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for AddCustodianRecoveryKeyRequest);
  uint64_t v10 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.AddCustodianRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DE0);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DE0);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.AddCustodianRecoveryKeyOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F5A8);
}

void CuttlefishAPIAsyncClient.fetchChanges(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E40);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchChangesRequest);
  Changesuint64_t Request = type metadata accessor for FetchChangesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ChangesRequest - 8) + 56))(v9, 0, 1, ChangesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchChangesOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E40);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E40);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.FetchChangesOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F5F8);
}

void CuttlefishAPIAsyncClient.fetchViableBottles(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E30);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchViableBottlesRequest);
  ViableBottlesuint64_t Request = type metadata accessor for FetchViableBottlesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ViableBottlesRequest - 8) + 56))(v9, 0, 1, ViableBottlesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchViableBottlesOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E30);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E30);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.FetchViableBottlesOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F648);
}

void CuttlefishAPIAsyncClient.fetchRecoverableTlkshares(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DD0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchRecoverableTLKSharesRequest);
  RecoverableTLKSharesuint64_t Request = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(RecoverableTLKSharesRequest - 8) + 56))(v9, 0, 1, RecoverableTLKSharesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchRecoverableTlksharesOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DD0);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DD0);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.FetchRecoverableTlksharesOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F698);
}

void CuttlefishAPIAsyncClient.fetchPolicyDocuments(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E20);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchPolicyDocumentsRequest);
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(PolicyDocumentsRequest - 8) + 56))(v9, 0, 1, PolicyDocumentsRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchPolicyDocumentsOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E20);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E20);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.FetchPolicyDocumentsOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F6E8);
}

void CuttlefishAPIAsyncClient.getRepairAction(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E10);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for GetRepairActionRequest);
  RepairActionuint64_t Request = type metadata accessor for GetRepairActionRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(RepairActionRequest - 8) + 56))(v9, 0, 1, RepairActionRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.GetRepairActionOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E10);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E10);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.GetRepairActionOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F738);
}

void CuttlefishAPIAsyncClient.getSupportAppInfo(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E00);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for GetSupportAppInfoRequest);
  SupportAppInfouint64_t Request = type metadata accessor for GetSupportAppInfoRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(SupportAppInfoRequest - 8) + 56))(v9, 0, 1, SupportAppInfoRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.GetSupportAppInfoOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E00);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E00);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.GetSupportAppInfoOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F788);
}

void CuttlefishAPIAsyncClient.resetAccountCdpcontents(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299DF0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for ResetAccountCDPContentsRequest);
  uint64_t v10 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.ResetAccountCdpcontentsOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299DF0);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299DF0);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.ResetAccountCdpcontentsOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F7D8);
}

void CuttlefishAPIAsyncClient.removeRecoveryKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DC0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for RemoveRecoveryKeyRequest);
  uint64_t v10 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.RemoveRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DC0);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DC0);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.RemoveRecoveryKeyOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F828);
}

void CuttlefishAPIAsyncClient.performAtoprvactions(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DB0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for PerformATOPRVActionsRequest);
  uint64_t v10 = type metadata accessor for PerformATOPRVActionsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.PerformAtoprvactionsOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DB0);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DB0);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.PerformAtoprvactionsOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F878);
}

void CuttlefishAPIAsyncClient.fetchPcsidentityByPublicKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299D90);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for DirectPCSIdentityFetchRequest);
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(Request - 8) + 56))(v9, 0, 1, Request);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchPcsidentityByPublicKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299D90);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299D90);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.FetchPcsidentityByPublicKeyOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F8C8);
}

void CuttlefishAPIAsyncClient.fetchCurrentItem(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299DA0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for CurrentItemFetchRequest);
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(Request - 8) + 56))(v9, 0, 1, Request);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchCurrentItemOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299DA0);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299DA0);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.FetchCurrentItemOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F918);
}

void CuttlefishAPIAsyncClient.performCkserverUnreadableDataRemoval(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299D80);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1001E975C(a1, (uint64_t)&v13 - v8, type metadata accessor for RemoveUnreadableCKServerDataRequest);
  uint64_t v10 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299D80);
  uint64_t v11 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299D80);
  id v12 = v11;
  swift_retain();
  sub_100221D10();

  sub_1002224D0();
}

uint64_t type metadata accessor for CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation(uint64_t a1)
{
  return sub_1000D8F44(a1, (uint64_t *)&unk_10029F968);
}

uint64_t CuttlefishAPIAsyncClient.deinit()
{
  return v0;
}

uint64_t CuttlefishAPIAsyncClient.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

void sub_1001E04D8(uint64_t a1)
{
}

void sub_1001E04FC(uint64_t a1)
{
}

void sub_1001E0520(uint64_t a1)
{
}

void sub_1001E0544(uint64_t a1)
{
}

void sub_1001E0568(uint64_t a1)
{
}

void sub_1001E058C(uint64_t a1)
{
}

void sub_1001E05B0(uint64_t a1)
{
}

void sub_1001E05D4(uint64_t a1)
{
}

void sub_1001E05F8(uint64_t a1)
{
}

void sub_1001E061C(uint64_t a1)
{
}

void sub_1001E0640(uint64_t a1)
{
}

void sub_1001E0664(uint64_t a1)
{
}

void sub_1001E0688(uint64_t a1)
{
}

void sub_1001E06AC(uint64_t a1)
{
}

void sub_1001E06D0(uint64_t a1)
{
}

void sub_1001E06F4(uint64_t a1)
{
}

void sub_1001E0718(uint64_t a1)
{
}

void sub_1001E073C(uint64_t a1)
{
}

uint64_t CuttlefishAPIAsyncOperation.reset(resetReason:idmsTargetContext:idmsCuttlefishPassword:testingNotifyIdms:accountInfo:metrics:isGuitarfish:completion:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v27 = a7;
  uint64_t v26 = a6;
  uint64_t v30 = a11;
  uint64_t v28 = a8;
  uint64_t v29 = a12;
  uint64_t v31 = a13;
  uint64_t v19 = type metadata accessor for ResetRequest(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  __int16 v33 = a2 & 0x1FF;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = v26;
  char v38 = v27;
  uint64_t v39 = v28;
  uint64_t v40 = a9;
  char v41 = a10;
  sub_1001DE4A8((unint64_t *)&unk_10029F080, (void (*)(uint64_t))type metadata accessor for ResetRequest);
  sub_100221F70();
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 8))(v22, v30, v29, v31, a14);
  sub_1001E97C4((uint64_t)v22, type metadata accessor for ResetRequest);
  return v23;
}

uint64_t CuttlefishAPIAsyncOperation.establish(peer:bottle:viewKeys:tlkShares:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v24 = a8;
  uint64_t v23 = a7;
  uint64_t v16 = type metadata accessor for EstablishRequest(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  sub_1001DE4A8(&qword_10029A6A8, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
  sub_100221F70();
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 16))(v19, v23, v24, a9, a10);
  sub_1001E97C4((uint64_t)v19, type metadata accessor for EstablishRequest);
  return v20;
}

uint64_t sub_1001E0A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v88 = a2;
  uint64_t v86 = a7;
  uint64_t v82 = a5;
  uint64_t v83 = a6;
  uint64_t v90 = a4;
  uint64_t v78 = a1;
  uint64_t v79 = a3;
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v87 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  uint64_t v84 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v76 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v75 = (uint64_t)&v72 - v15;
  uint64_t v16 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v81 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for Metrics(0);
  uint64_t v89 = *(void *)(v80 - 8);
  uint64_t v20 = __chkstk_darwin(v80, v19);
  uint64_t v74 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v73 = (uint64_t)&v72 - v23;
  uint64_t v24 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for Bottle(0);
  uint64_t v28 = *(void *)(v77 - 8);
  uint64_t v30 = __chkstk_darwin(v77, v29);
  uint64_t v72 = (uint64_t)&v72 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  uint64_t v34 = (char *)&v72 - v33;
  uint64_t v35 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v35 - 8, v36);
  char v38 = (char *)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for Peer(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v44 = (char *)&v72 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42, v45);
  uint64_t v47 = (char *)&v72 - v46;
  sub_10000D830(v88, (uint64_t)v38, &qword_100299F58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
  {
    sub_10004015C((uint64_t)v38, &qword_100299F58);
    uint64_t v48 = v78;
  }
  else
  {
    sub_1001E96F4((uint64_t)v38, (uint64_t)v47, type metadata accessor for Peer);
    sub_1001E975C((uint64_t)v47, (uint64_t)v44, type metadata accessor for Peer);
    uint64_t v49 = (uint64_t)v44;
    uint64_t v48 = v78;
    EstablishRequest.peer.setter(v49);
    sub_1001E97C4((uint64_t)v47, type metadata accessor for Peer);
  }
  uint64_t v51 = v83;
  uint64_t v50 = v84;
  uint64_t v52 = v82;
  uint64_t v53 = v77;
  sub_10000D830(v79, (uint64_t)v27, &qword_100299F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v53) == 1)
  {
    sub_10004015C((uint64_t)v27, &qword_100299F38);
  }
  else
  {
    sub_1001E96F4((uint64_t)v27, (uint64_t)v34, type metadata accessor for Bottle);
    uint64_t v54 = v72;
    sub_1001E975C((uint64_t)v34, v72, type metadata accessor for Bottle);
    EstablishRequest.bottle.setter(v54);
    sub_1001E97C4((uint64_t)v34, type metadata accessor for Bottle);
  }
  uint64_t v56 = v80;
  uint64_t v55 = (uint64_t)v81;
  uint64_t v57 = v90;
  if (*(void *)(v90 + 16))
  {
    uint64_t v58 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for EstablishRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v59 = swift_retain();
      uint64_t v60 = sub_100099D34(v59);
      uint64_t v57 = v90;
      *(void *)(v48 + v58) = v60;
      swift_release();
    }
    uint64_t v61 = (void *)(*(void *)(v48 + v58)
                   + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
    swift_beginAccess();
    void *v61 = v57;
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v52 + 16))
  {
    uint64_t v62 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for EstablishRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v63 = swift_retain();
      *(void *)(v48 + v62) = sub_100099D34(v63);
      swift_release();
    }
    uint64_t v64 = (void *)(*(void *)(v48 + v62)
                   + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
    swift_beginAccess();
    *uint64_t v64 = v52;
    swift_bridgeObjectRelease();
  }
  sub_10000D830(v51, v55, &qword_10029F000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v55, 1, v56) == 1)
  {
    sub_10004015C(v55, &qword_10029F000);
  }
  else
  {
    uint64_t v65 = v73;
    sub_1001E96F4(v55, v73, type metadata accessor for Metrics);
    uint64_t v66 = v74;
    sub_1001E975C(v65, v74, type metadata accessor for Metrics);
    EstablishRequest.metrics.setter(v66);
    sub_1001E97C4(v65, type metadata accessor for Metrics);
  }
  uint64_t v67 = v87;
  uint64_t v68 = v85;
  sub_10000D830(v86, v87, &qword_100299F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v67, 1, v68) == 1) {
    return sub_10004015C(v67, &qword_100299F50);
  }
  uint64_t v70 = v75;
  sub_1001E96F4(v67, v75, type metadata accessor for AccountInfo);
  uint64_t v71 = v76;
  sub_1001E975C(v70, v76, type metadata accessor for AccountInfo);
  EstablishRequest.accountInfo.setter(v71);
  return sub_1001E97C4(v70, type metadata accessor for AccountInfo);
}

uint64_t sub_1001E12B0(uint64_t a1)
{
  return sub_1001E0A70(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t CuttlefishAPIAsyncOperation.joinWithVoucher(changeToken:peer:bottle:tlkShares:viewKeys:trustedDevicesVersion:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v29 = a12;
  uint64_t v27 = a10;
  uint64_t v28 = a11;
  uint64_t v19 = type metadata accessor for JoinWithVoucherRequest(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = v25;
  uint64_t v37 = v26;
  uint64_t v38 = a9;
  sub_1001DE4A8(&qword_10029A6D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
  sub_100221F70();
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a13 + 24))(v22, v27, v28, v29, a13);
  sub_1001E97C4((uint64_t)v22, type metadata accessor for JoinWithVoucherRequest);
  return v23;
}

uint64_t sub_1001E1458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v114 = a8;
  uint64_t v111 = a7;
  uint64_t v122 = a6;
  uint64_t v109 = a5;
  uint64_t v119 = a4;
  uint64_t v106 = a2;
  uint64_t v13 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v118 = (uint64_t)v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AccountInfo(0);
  uint64_t v116 = *(void *)(v16 - 8);
  uint64_t v117 = v16;
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v105 = (uint64_t)v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v20);
  uint64_t v104 = (uint64_t)v97 - v21;
  uint64_t v22 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v115 = (uint64_t)v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Metrics(0);
  uint64_t v112 = *(void *)(v25 - 8);
  uint64_t v113 = v25;
  uint64_t v27 = __chkstk_darwin(v25, v26);
  uint64_t v103 = (uint64_t)v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v102 = (uint64_t)v97 - v30;
  uint64_t v31 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v110 = (char *)v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v120 = *(void *)(v34 - 8);
  uint64_t v121 = v34;
  uint64_t v36 = __chkstk_darwin(v34, v35);
  uint64_t v101 = (uint64_t)v97 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v38);
  uint64_t v100 = (uint64_t)v97 - v39;
  uint64_t v40 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v40 - 8, v41);
  uint64_t v43 = (char *)v97 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for Bottle(0);
  uint64_t v107 = *(void *)(v108 - 8);
  uint64_t v45 = __chkstk_darwin(v108, v44);
  uint64_t v99 = (uint64_t)v97 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45, v47);
  uint64_t v98 = (uint64_t)v97 - v48;
  uint64_t v49 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v49 - 8, v50);
  uint64_t v52 = (char *)v97 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for Peer(0);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v56 = __chkstk_darwin(v53, v55);
  uint64_t v58 = (char *)v97 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56, v59);
  uint64_t v61 = (char *)v97 - v60;
  if (a3)
  {
    v97[1] = v10;
    uint64_t v62 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
    v97[0] = a3;
    swift_bridgeObjectRetain();
    uint64_t v63 = a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v64 = swift_retain();
      *(void *)(a1 + v62) = sub_10009D384(v64);
      swift_release();
    }
    uint64_t v65 = *(void *)(a1 + v62);
    swift_beginAccess();
    uint64_t v66 = v97[0];
    *(void *)(v65 + 16) = v106;
    *(void *)(v65 + 24) = v66;
    a1 = v63;
    swift_bridgeObjectRelease();
  }
  sub_10000D830(v119, (uint64_t)v52, &qword_100299F58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
  {
    sub_10004015C((uint64_t)v52, &qword_100299F58);
    uint64_t v67 = a1;
  }
  else
  {
    sub_1001E96F4((uint64_t)v52, (uint64_t)v61, type metadata accessor for Peer);
    sub_1001E975C((uint64_t)v61, (uint64_t)v58, type metadata accessor for Peer);
    uint64_t v68 = (uint64_t)v58;
    uint64_t v67 = a1;
    JoinWithVoucherRequest.peer.setter(v68);
    sub_1001E97C4((uint64_t)v61, type metadata accessor for Peer);
  }
  uint64_t v69 = v114;
  uint64_t v70 = (uint64_t)v110;
  uint64_t v71 = v108;
  uint64_t v72 = v107;
  sub_10000D830(v109, (uint64_t)v43, &qword_100299F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v43, 1, v71) == 1)
  {
    sub_10004015C((uint64_t)v43, &qword_100299F38);
  }
  else
  {
    uint64_t v73 = v98;
    sub_1001E96F4((uint64_t)v43, v98, type metadata accessor for Bottle);
    uint64_t v74 = v99;
    sub_1001E975C(v73, v99, type metadata accessor for Bottle);
    JoinWithVoucherRequest.bottle.setter(v74);
    sub_1001E97C4(v73, type metadata accessor for Bottle);
  }
  uint64_t v75 = v116;
  uint64_t v76 = v111;
  uint64_t v77 = v122;
  if (*(void *)(v122 + 16))
  {
    uint64_t v78 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v79 = swift_retain();
      uint64_t v80 = sub_10009D384(v79);
      uint64_t v77 = v122;
      *(void *)(v67 + v78) = v80;
      swift_release();
    }
    uint64_t v81 = (void *)(*(void *)(v67 + v78)
                   + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
    swift_beginAccess();
    *uint64_t v81 = v77;
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v76 + 16))
  {
    uint64_t v82 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v83 = swift_retain();
      *(void *)(v67 + v82) = sub_10009D384(v83);
      swift_release();
    }
    uint64_t v84 = (void *)(*(void *)(v67 + v82)
                   + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
    swift_beginAccess();
    *uint64_t v84 = v76;
    swift_bridgeObjectRelease();
  }
  sub_10000D830(v69, v70, &qword_10029ED20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v70, 1, v121) == 1)
  {
    sub_10004015C(v70, &qword_10029ED20);
  }
  else
  {
    uint64_t v85 = v100;
    sub_1001E96F4(v70, v100, type metadata accessor for IdmsTrustedDevicesVersion);
    uint64_t v86 = v101;
    sub_1001E975C(v85, v101, type metadata accessor for IdmsTrustedDevicesVersion);
    JoinWithVoucherRequest.trustedDevicesVersion.setter(v86);
    sub_1001E97C4(v85, type metadata accessor for IdmsTrustedDevicesVersion);
  }
  uint64_t v87 = v115;
  uint64_t v89 = v112;
  uint64_t v88 = v113;
  sub_10000D830(a9, v115, &qword_10029F000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88) == 1)
  {
    sub_10004015C(v87, &qword_10029F000);
  }
  else
  {
    uint64_t v90 = v102;
    sub_1001E96F4(v87, v102, type metadata accessor for Metrics);
    uint64_t v91 = v103;
    sub_1001E975C(v90, v103, type metadata accessor for Metrics);
    JoinWithVoucherRequest.metrics.setter(v91);
    sub_1001E97C4(v90, type metadata accessor for Metrics);
  }
  uint64_t v93 = v117;
  uint64_t v92 = v118;
  sub_10000D830(a10, v118, &qword_100299F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v92, 1, v93) == 1) {
    return sub_10004015C(v92, &qword_100299F50);
  }
  uint64_t v95 = v104;
  sub_1001E96F4(v92, v104, type metadata accessor for AccountInfo);
  uint64_t v96 = v105;
  sub_1001E975C(v95, v105, type metadata accessor for AccountInfo);
  JoinWithVoucherRequest.accountInfo.setter(v96);
  return sub_1001E97C4(v95, type metadata accessor for AccountInfo);
}

uint64_t sub_1001E1F54(uint64_t a1)
{
  return sub_1001E1458(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10]);
}

uint64_t CuttlefishAPIAsyncOperation.updateTrust(changeToken:peerID:stableInfoAndSig:dynamicInfoAndSig:tlkShares:viewKeys:trustedDevicesVersion:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v27 = a7;
  uint64_t v28 = a8;
  uint64_t v31 = a13;
  uint64_t v29 = a11;
  uint64_t v30 = a12;
  long long v26 = a9;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  __chkstk_darwin(updated, v21);
  uint64_t v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v38 = v27;
  uint64_t v39 = v28;
  long long v40 = a9;
  uint64_t v41 = a10;
  sub_1001DE4A8(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
  sub_100221F70();
  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 32))(v23, v29, v30, v31, a14);
  sub_1001E97C4((uint64_t)v23, type metadata accessor for UpdateTrustRequest);
  return v24;
}

uint64_t sub_1001E2128(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v123 = a8;
  uint64_t v120 = a6;
  uint64_t v121 = a7;
  uint64_t v119 = a5;
  uint64_t v115 = a2;
  uint64_t v116 = a4;
  unint64_t v132 = a1;
  uint64_t v13 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v127 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AccountInfo(0);
  uint64_t v128 = *(void *)(v16 - 8);
  uint64_t v129 = v16;
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v113 = (uint64_t)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v20);
  uint64_t v114 = (uint64_t)&v108 - v21;
  uint64_t v22 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v124 = (uint64_t)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Metrics(0);
  uint64_t v125 = *(void *)(v25 - 8);
  uint64_t v126 = v25;
  uint64_t v27 = __chkstk_darwin(v25, v26);
  uint64_t v111 = (uint64_t)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v112 = (uint64_t)&v108 - v30;
  uint64_t v31 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v122 = (uint64_t)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v130 = *(void *)(v34 - 8);
  uint64_t v131 = v34;
  uint64_t v36 = __chkstk_darwin(v34, v35);
  uint64_t v109 = (uint64_t)&v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v38);
  uint64_t v110 = (uint64_t)&v108 - v39;
  uint64_t v40 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v40 - 8, v41);
  uint64_t v43 = (char *)&v108 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v117 = *(void *)(v44 - 8);
  uint64_t v118 = v44;
  uint64_t v46 = __chkstk_darwin(v44, v45);
  uint64_t v108 = (uint64_t)&v108 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v48);
  uint64_t v50 = (char *)&v108 - v49;
  uint64_t v51 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v51 - 8, v52);
  uint64_t v54 = (char *)&v108 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v58 = __chkstk_darwin(v55, v57);
  uint64_t v60 = (char *)&v108 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58, v61);
  uint64_t v63 = (char *)&v108 - v62;
  if (a3)
  {
    uint64_t v64 = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v64 = v115;
    v64[1] = a3;
  }
  uint64_t v65 = v119;
  if (v119)
  {
    uint64_t v66 = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v66[2] = v116;
    v66[3] = v65;
  }
  sub_10000D830(v120, (uint64_t)v54, &qword_100299F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
  {
    sub_10004015C((uint64_t)v54, &qword_100299F18);
  }
  else
  {
    sub_1001E96F4((uint64_t)v54, (uint64_t)v63, type metadata accessor for SignedPeerStableInfo);
    sub_1001E975C((uint64_t)v63, (uint64_t)v60, type metadata accessor for SignedPeerStableInfo);
    uint64_t v67 = (uint64_t)v132 + *(int *)(type metadata accessor for UpdateTrustRequest(0) + 36);
    sub_10004015C(v67, &qword_100299F18);
    sub_1001E96F4((uint64_t)v60, v67, type metadata accessor for SignedPeerStableInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v67, 0, 1, v55);
    sub_1001E97C4((uint64_t)v63, type metadata accessor for SignedPeerStableInfo);
  }
  uint64_t v69 = v130;
  uint64_t v68 = v131;
  sub_10000D830(v121, (uint64_t)v43, &qword_10029ECA0);
  uint64_t v70 = v117;
  uint64_t v71 = v118;
  int v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48))(v43, 1, v118);
  uint64_t v73 = v125;
  if (v72 == 1)
  {
    sub_10004015C((uint64_t)v43, &qword_10029ECA0);
  }
  else
  {
    sub_1001E96F4((uint64_t)v43, (uint64_t)v50, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v74 = (uint64_t)v50;
    uint64_t v75 = v50;
    uint64_t v76 = v73;
    uint64_t v77 = v108;
    sub_1001E975C(v74, v108, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v78 = (uint64_t)v132 + *(int *)(type metadata accessor for UpdateTrustRequest(0) + 40);
    sub_10004015C(v78, &qword_10029ECA0);
    uint64_t v79 = v77;
    uint64_t v73 = v76;
    uint64_t v68 = v131;
    sub_1001E96F4(v79, v78, type metadata accessor for SignedPeerDynamicInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v78, 0, 1, v71);
    uint64_t v80 = (uint64_t)v75;
    uint64_t v69 = v130;
    sub_1001E97C4(v80, type metadata accessor for SignedPeerDynamicInfo);
  }
  uint64_t v81 = v126;
  uint64_t v82 = v123;
  if (*(void *)(v123 + 16))
  {
    uint64_t v83 = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v83[4] = v82;
  }
  uint64_t v84 = a11;
  if (*(void *)(a9 + 16))
  {
    uint64_t v85 = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v85[5] = a9;
  }
  uint64_t v126 = a12;
  uint64_t v86 = v122;
  sub_10000D830(a10, v122, &qword_10029ED20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v86, 1, v68) == 1)
  {
    sub_10004015C(v86, &qword_10029ED20);
  }
  else
  {
    uint64_t v87 = v86;
    uint64_t v88 = v110;
    sub_1001E96F4(v87, v110, type metadata accessor for IdmsTrustedDevicesVersion);
    uint64_t v89 = v68;
    uint64_t v90 = v81;
    uint64_t v91 = v109;
    sub_1001E975C(v88, v109, type metadata accessor for IdmsTrustedDevicesVersion);
    uint64_t v92 = (uint64_t)v132 + *(int *)(type metadata accessor for UpdateTrustRequest(0) + 44);
    sub_10004015C(v92, &qword_10029ED20);
    uint64_t v93 = v91;
    uint64_t v81 = v90;
    sub_1001E96F4(v93, v92, type metadata accessor for IdmsTrustedDevicesVersion);
    uint64_t v94 = v89;
    uint64_t v84 = a11;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v92, 0, 1, v94);
    sub_1001E97C4(v88, type metadata accessor for IdmsTrustedDevicesVersion);
  }
  uint64_t v95 = (uint64_t)v127;
  uint64_t v96 = v84;
  uint64_t v97 = v124;
  sub_10000D830(v96, v124, &qword_10029F000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v97, 1, v81) == 1)
  {
    sub_10004015C(v97, &qword_10029F000);
  }
  else
  {
    uint64_t v98 = v112;
    sub_1001E96F4(v97, v112, type metadata accessor for Metrics);
    uint64_t v99 = v111;
    sub_1001E975C(v98, v111, type metadata accessor for Metrics);
    uint64_t v100 = (uint64_t)v132 + *(int *)(type metadata accessor for UpdateTrustRequest(0) + 48);
    sub_10004015C(v100, &qword_10029F000);
    sub_1001E96F4(v99, v100, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v100, 0, 1, v81);
    sub_1001E97C4(v98, type metadata accessor for Metrics);
  }
  uint64_t v101 = v128;
  sub_10000D830(v126, v95, &qword_100299F50);
  uint64_t v102 = v129;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v95, 1, v129) == 1) {
    return sub_10004015C(v95, &qword_100299F50);
  }
  uint64_t v104 = v95;
  uint64_t v105 = v114;
  sub_1001E96F4(v104, v114, type metadata accessor for AccountInfo);
  uint64_t v106 = v113;
  sub_1001E975C(v105, v113, type metadata accessor for AccountInfo);
  uint64_t v107 = (uint64_t)v132 + *(int *)(type metadata accessor for UpdateTrustRequest(0) + 52);
  sub_10004015C(v107, &qword_100299F50);
  sub_1001E96F4(v106, v107, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v107, 0, 1, v102);
  return sub_1001E97C4(v105, type metadata accessor for AccountInfo);
}

uint64_t sub_1001E2C4C(void *a1)
{
  return sub_1001E2128(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12]);
}

uint64_t CuttlefishAPIAsyncOperation.setRecoveryKey(changeToken:peerID:recoverySigningPubKey:recoveryEncryptionPubKey:stableInfoAndSig:tlkShares:metrics:accountInfo:viewKeys:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v29 = a8;
  uint64_t v28 = a7;
  uint64_t v31 = a13;
  uint64_t v32 = a14;
  uint64_t v30 = a12;
  v27[1] = a10;
  v27[0] = a9;
  uint64_t v21 = type metadata accessor for SetRecoveryKeyRequest(0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v39 = v28;
  uint64_t v40 = v29;
  long long v41 = a9;
  long long v42 = a10;
  uint64_t v43 = a11;
  sub_1001DE4A8((unint64_t *)&unk_10029ED40, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
  sub_100221F70();
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a15 + 40))(v24, v30, v31, v32, a15);
  sub_1001E97C4((uint64_t)v24, type metadata accessor for SetRecoveryKeyRequest);
  return v25;
}

uint64_t sub_1001E2E54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v84 = a8;
  uint64_t v21 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v91 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for AccountInfo(0);
  uint64_t v92 = *(void *)(v24 - 8);
  uint64_t v93 = v24;
  uint64_t v26 = __chkstk_darwin(v24, v25);
  uint64_t v87 = (uint64_t)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  uint64_t v88 = (uint64_t)&v82 - v29;
  uint64_t v30 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v95 = (uint64_t)&v82 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for Metrics(0);
  uint64_t v90 = *(void *)(v94 - 8);
  uint64_t v34 = __chkstk_darwin(v94, v33);
  uint64_t v86 = (uint64_t)&v82 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v36);
  uint64_t v85 = (uint64_t)&v82 - v37;
  uint64_t v38 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v38 - 8, v39);
  long long v41 = (char *)&v82 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v89 = *(void *)(v42 - 8);
  uint64_t v44 = __chkstk_darwin(v42, v43);
  uint64_t v82 = (uint64_t)&v82 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44, v46);
  uint64_t v83 = (uint64_t)&v82 - v47;
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a4;
    a1[3] = a5;
  }
  if (a7 >> 60 != 15)
  {
    uint64_t v48 = v42;
    uint64_t v49 = a1[4];
    unint64_t v50 = a1[5];
    sub_1000059E8(a6, a7);
    unint64_t v51 = v50;
    uint64_t v42 = v48;
    sub_100005A40(v49, v51);
    a1[4] = a6;
    a1[5] = a7;
  }
  uint64_t v52 = a11;
  if (a9 >> 60 != 15)
  {
    uint64_t v53 = a1[6];
    unint64_t v54 = a1[7];
    uint64_t v55 = v42;
    uint64_t v56 = v84;
    sub_1000059E8(v84, a9);
    uint64_t v57 = v53;
    uint64_t v52 = a11;
    sub_100005A40(v57, v54);
    a1[6] = v56;
    a1[7] = a9;
    uint64_t v42 = v55;
  }
  sub_10000D830(a10, (uint64_t)v41, &qword_100299F18);
  uint64_t v58 = v89;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v41, 1, v42) == 1)
  {
    sub_10004015C((uint64_t)v41, &qword_100299F18);
  }
  else
  {
    uint64_t v59 = v83;
    sub_1001E96F4((uint64_t)v41, v83, type metadata accessor for SignedPeerStableInfo);
    uint64_t v60 = v82;
    sub_1001E975C(v59, v82, type metadata accessor for SignedPeerStableInfo);
    uint64_t v61 = (uint64_t)a1 + *(int *)(type metadata accessor for SetRecoveryKeyRequest(0) + 44);
    sub_10004015C(v61, &qword_100299F18);
    sub_1001E96F4(v60, v61, type metadata accessor for SignedPeerStableInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v61, 0, 1, v42);
    sub_1001E97C4(v59, type metadata accessor for SignedPeerStableInfo);
  }
  uint64_t v63 = (uint64_t)v91;
  uint64_t v62 = v92;
  uint64_t v64 = v94;
  uint64_t v65 = a13;
  if (*(void *)(v52 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[8] = v52;
  }
  uint64_t v66 = a14;
  uint64_t v67 = v95;
  sub_10000D830(a12, v95, &qword_10029F000);
  uint64_t v68 = v90;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v67, 1, v64) == 1)
  {
    sub_10004015C(v95, &qword_10029F000);
  }
  else
  {
    uint64_t v69 = v95;
    uint64_t v95 = a13;
    uint64_t v70 = v85;
    sub_1001E96F4(v69, v85, type metadata accessor for Metrics);
    uint64_t v71 = v86;
    sub_1001E975C(v70, v86, type metadata accessor for Metrics);
    uint64_t v72 = v68;
    uint64_t v73 = (uint64_t)a1 + *(int *)(type metadata accessor for SetRecoveryKeyRequest(0) + 48);
    sub_10004015C(v73, &qword_10029F000);
    uint64_t v74 = v71;
    uint64_t v66 = a14;
    sub_1001E96F4(v74, v73, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v73, 0, 1, v94);
    uint64_t v75 = v70;
    uint64_t v65 = v95;
    sub_1001E97C4(v75, type metadata accessor for Metrics);
  }
  uint64_t v76 = v93;
  sub_10000D830(v65, v63, &qword_100299F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, 1, v76) != 1)
  {
    uint64_t v78 = v63;
    uint64_t v79 = v88;
    sub_1001E96F4(v78, v88, type metadata accessor for AccountInfo);
    uint64_t v80 = v87;
    sub_1001E975C(v79, v87, type metadata accessor for AccountInfo);
    uint64_t v81 = (uint64_t)a1 + *(int *)(type metadata accessor for SetRecoveryKeyRequest(0) + 52);
    sub_10004015C(v81, &qword_100299F50);
    sub_1001E96F4(v80, v81, type metadata accessor for AccountInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v81, 0, 1, v76);
    uint64_t result = sub_1001E97C4(v79, type metadata accessor for AccountInfo);
    if (!*(void *)(v66 + 16)) {
      return result;
    }
    goto LABEL_21;
  }
  uint64_t result = sub_10004015C(v63, &qword_100299F50);
  if (*(void *)(v66 + 16))
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    a1[9] = v66;
  }
  return result;
}

uint64_t sub_1001E35D8(void *a1)
{
  return sub_1001E2E54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112));
}

uint64_t CuttlefishAPIAsyncOperation.addCustodianRecoveryKey(changeToken:peerID:peer:stableInfoAndSig:tlkShares:dynamicInfoAndSig:metrics:accountInfo:viewKeys:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v27 = a7;
  uint64_t v28 = a8;
  uint64_t v31 = a13;
  uint64_t v29 = a11;
  uint64_t v30 = a12;
  long long v26 = a9;
  uint64_t v20 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v38 = v27;
  uint64_t v39 = v28;
  long long v40 = a9;
  uint64_t v41 = a10;
  sub_1001DE4A8((unint64_t *)&unk_10029F070, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
  sub_100221F70();
  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 48))(v23, v29, v30, v31, a14);
  sub_1001E97C4((uint64_t)v23, type metadata accessor for AddCustodianRecoveryKeyRequest);
  return v24;
}

uint64_t sub_1001E37B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v122 = a8;
  uint64_t v110 = a7;
  uint64_t v117 = a6;
  uint64_t v107 = a4;
  uint64_t v16 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v115 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for AccountInfo(0);
  uint64_t v113 = *(void *)(v114 - 8);
  uint64_t v20 = __chkstk_darwin(v114, v19);
  uint64_t v106 = (uint64_t)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v105 = (uint64_t)&v96 - v23;
  uint64_t v24 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v112 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Metrics(0);
  uint64_t v120 = *(void *)(v27 - 8);
  uint64_t v121 = v27;
  uint64_t v29 = __chkstk_darwin(v27, v28);
  uint64_t v104 = (uint64_t)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v31);
  uint64_t v103 = (uint64_t)&v96 - v32;
  uint64_t v33 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v119 = (uint64_t)&v96 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v118 = *(void *)(v111 - 8);
  uint64_t v37 = __chkstk_darwin(v111, v36);
  uint64_t v102 = (uint64_t)&v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v39);
  uint64_t v101 = (uint64_t)&v96 - v40;
  uint64_t v41 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v41 - 8, v42);
  uint64_t v44 = (char *)&v96 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v108 = *(void *)(v109 - 8);
  uint64_t v46 = __chkstk_darwin(v109, v45);
  uint64_t v100 = (uint64_t)&v96 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v48);
  uint64_t v99 = (uint64_t)&v96 - v49;
  uint64_t v50 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v50 - 8, v51);
  uint64_t v53 = (char *)&v96 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for Peer(0);
  uint64_t v54 = *(void *)(v116 - 8);
  uint64_t v56 = __chkstk_darwin(v116, v55);
  uint64_t v58 = (char *)&v96 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56, v59);
  uint64_t v61 = (char *)&v96 - v60;
  if (a3)
  {
    uint64_t v97 = v58;
    uint64_t v62 = a2;
    uint64_t v98 = a5;
    uint64_t v63 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
    uint64_t v64 = a3;
    uint64_t v65 = *(int *)(v63 + 20);
    uint64_t v66 = v64;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v67 = (void *)swift_retain();
      *(void *)(a1 + v65) = sub_1000A7424(v67);
      swift_release();
    }
    uint64_t v68 = *(void *)(a1 + v65);
    swift_beginAccess();
    *(void *)(v68 + 16) = v62;
    *(void *)(v68 + 24) = v66;
    swift_bridgeObjectRelease();
    a5 = v98;
    uint64_t v58 = v97;
  }
  if (a5)
  {
    uint64_t v69 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
    uint64_t v70 = a5;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v71 = (void *)swift_retain();
      *(void *)(a1 + v69) = sub_1000A7424(v71);
      swift_release();
    }
    uint64_t v72 = *(void *)(a1 + v69);
    swift_beginAccess();
    *(void *)(v72 + 32) = v107;
    *(void *)(v72 + 40) = v70;
    swift_bridgeObjectRelease();
  }
  sub_10000D830(v117, (uint64_t)v53, &qword_100299F58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v53, 1, v116) == 1)
  {
    sub_10004015C((uint64_t)v53, &qword_100299F58);
  }
  else
  {
    sub_1001E96F4((uint64_t)v53, (uint64_t)v61, type metadata accessor for Peer);
    sub_1001E975C((uint64_t)v61, (uint64_t)v58, type metadata accessor for Peer);
    AddCustodianRecoveryKeyRequest.peer.setter((uint64_t)v58);
    sub_1001E97C4((uint64_t)v61, type metadata accessor for Peer);
  }
  uint64_t v73 = (uint64_t)v115;
  uint64_t v74 = v113;
  uint64_t v75 = v111;
  uint64_t v76 = v109;
  uint64_t v77 = v108;
  sub_10000D830(v110, (uint64_t)v44, &qword_100299F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v44, 1, v76) == 1)
  {
    sub_10004015C((uint64_t)v44, &qword_100299F18);
  }
  else
  {
    uint64_t v78 = v99;
    sub_1001E96F4((uint64_t)v44, v99, type metadata accessor for SignedPeerStableInfo);
    uint64_t v79 = v100;
    sub_1001E975C(v78, v100, type metadata accessor for SignedPeerStableInfo);
    AddCustodianRecoveryKeyRequest.stableInfoAndSig.setter(v79);
    sub_1001E97C4(v78, type metadata accessor for SignedPeerStableInfo);
  }
  uint64_t v80 = (uint64_t)v112;
  if (*(void *)(v122 + 16))
  {
    uint64_t v81 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v82 = (void *)swift_retain();
      *(void *)(a1 + v81) = sub_1000A7424(v82);
      swift_release();
    }
    uint64_t v83 = (void *)(*(void *)(a1 + v81)
                   + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
    swift_beginAccess();
    *uint64_t v83 = v122;
    swift_bridgeObjectRelease();
  }
  uint64_t v84 = v119;
  sub_10000D830(a9, v119, &qword_10029ECA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v84, 1, v75) == 1)
  {
    sub_10004015C(v84, &qword_10029ECA0);
  }
  else
  {
    uint64_t v85 = v101;
    sub_1001E96F4(v84, v101, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v86 = v102;
    sub_1001E975C(v85, v102, type metadata accessor for SignedPeerDynamicInfo);
    AddCustodianRecoveryKeyRequest.dynamicInfoAndSig.setter(v86);
    sub_1001E97C4(v85, type metadata accessor for SignedPeerDynamicInfo);
  }
  sub_10000D830(a10, v80, &qword_10029F000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v80, 1, v121) == 1)
  {
    sub_10004015C(v80, &qword_10029F000);
  }
  else
  {
    uint64_t v87 = v103;
    sub_1001E96F4(v80, v103, type metadata accessor for Metrics);
    uint64_t v88 = v104;
    sub_1001E975C(v87, v104, type metadata accessor for Metrics);
    AddCustodianRecoveryKeyRequest.metrics.setter(v88);
    sub_1001E97C4(v87, type metadata accessor for Metrics);
  }
  uint64_t v89 = v114;
  sub_10000D830(a11, v73, &qword_100299F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v73, 1, v89) == 1)
  {
    uint64_t result = sub_10004015C(v73, &qword_100299F50);
  }
  else
  {
    uint64_t v91 = v105;
    sub_1001E96F4(v73, v105, type metadata accessor for AccountInfo);
    uint64_t v92 = v106;
    sub_1001E975C(v91, v106, type metadata accessor for AccountInfo);
    AddCustodianRecoveryKeyRequest.accountInfo.setter(v92);
    uint64_t result = sub_1001E97C4(v91, type metadata accessor for AccountInfo);
  }
  if (*(void *)(a12 + 16))
  {
    uint64_t v93 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v94 = (void *)swift_retain();
      *(void *)(a1 + v93) = sub_1000A7424(v94);
      swift_release();
    }
    uint64_t v95 = (void *)(*(void *)(a1 + v93)
                   + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
    swift_beginAccess();
    *uint64_t v95 = a12;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001E436C(uint64_t a1)
{
  return sub_1001E37B8(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12]);
}

uint64_t CuttlefishAPIAsyncOperation.fetchChanges(changeToken:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Changesuint64_t Request = type metadata accessor for FetchChangesRequest(0);
  __chkstk_darwin(ChangesRequest, v17);
  uint64_t v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[4] = a1;
  v22[5] = a2;
  v22[6] = a3;
  v22[7] = a4;
  sub_1001DE4A8((unint64_t *)&unk_10029EFB0, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
  sub_100221F70();
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 56))(v19, a5, a6, a7, a8);
  sub_1001E97C4((uint64_t)v19, type metadata accessor for FetchChangesRequest);
  return v20;
}

uint64_t CuttlefishAPIAsyncOperation.fetchViableBottles(filterRequest:metrics:accountInfo:completion:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ViableBottlesuint64_t Request = type metadata accessor for FetchViableBottlesRequest(0);
  __chkstk_darwin(ViableBottlesRequest, v17);
  uint64_t v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[4] = a1;
  __int16 v23 = a2 & 0x1FF;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  sub_1001DE4A8((unint64_t *)&unk_10029F020, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
  sub_100221F70();
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 64))(v19, a5, a6, a7, a8);
  sub_1001E97C4((uint64_t)v19, type metadata accessor for FetchViableBottlesRequest);
  return v20;
}

uint64_t sub_1001E4698(void *a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a5;
  uint64_t v38 = a2;
  uint64_t v43 = a1;
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v39 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Metrics(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v38 - v29;
  if ((a3 & 0x100) == 0)
  {
    uint64_t v31 = v43;
    void *v43 = v38;
    *((unsigned char *)v31 + 8) = a3 & 1;
  }
  sub_10000D830(a4, (uint64_t)v21, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_10004015C((uint64_t)v21, &qword_10029F000);
  }
  else
  {
    sub_1001E96F4((uint64_t)v21, (uint64_t)v30, type metadata accessor for Metrics);
    sub_1001E975C((uint64_t)v30, (uint64_t)v27, type metadata accessor for Metrics);
    uint64_t v32 = (uint64_t)v43 + *(int *)(type metadata accessor for FetchViableBottlesRequest(0) + 24);
    sub_10004015C(v32, &qword_10029F000);
    sub_1001E96F4((uint64_t)v27, v32, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v22);
    sub_1001E97C4((uint64_t)v30, type metadata accessor for Metrics);
  }
  sub_10000D830(v40, (uint64_t)v10, &qword_100299F50);
  uint64_t v34 = v41;
  uint64_t v33 = v42;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v10, 1, v42) == 1) {
    return sub_10004015C((uint64_t)v10, &qword_100299F50);
  }
  sub_1001E96F4((uint64_t)v10, (uint64_t)v17, type metadata accessor for AccountInfo);
  uint64_t v36 = v39;
  sub_1001E975C((uint64_t)v17, v39, type metadata accessor for AccountInfo);
  uint64_t v37 = (uint64_t)v43 + *(int *)(type metadata accessor for FetchViableBottlesRequest(0) + 28);
  sub_10004015C(v37, &qword_100299F50);
  sub_1001E96F4(v36, v37, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
  return sub_1001E97C4((uint64_t)v17, type metadata accessor for AccountInfo);
}

uint64_t sub_1001E4AE4(void *a1)
{
  return sub_1001E4698(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 25) << 8), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t CuttlefishAPIAsyncOperation.fetchRecoverableTlkshares(peerID:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  RecoverableTLKSharesuint64_t Request = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  __chkstk_darwin(RecoverableTLKSharesRequest, v17);
  uint64_t v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[4] = a1;
  void v22[5] = a2;
  v22[6] = a3;
  v22[7] = a4;
  sub_1001DE4A8(&qword_10029A830, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
  sub_100221F70();
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 72))(v19, a5, a6, a7, a8);
  sub_1001E97C4((uint64_t)v19, type metadata accessor for FetchRecoverableTLKSharesRequest);
  return v20;
}

uint64_t CuttlefishAPIAsyncOperation.fetchPolicyDocuments(keys:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  __chkstk_darwin(PolicyDocumentsRequest, v15);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  sub_1001DE4A8(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
  sub_100221F70();
  uint64_t v18 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 80))(v17, a4, a5, a6, a7);
  sub_1001E97C4((uint64_t)v17, type metadata accessor for FetchPolicyDocumentsRequest);
  return v18;
}

uint64_t CuttlefishAPIAsyncOperation.getRepairAction(peerID:requiresEscrowCheck:knownFederations:performCleanup:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v26 = a8;
  uint64_t v24 = a9;
  uint64_t v25 = a10;
  RepairActionuint64_t Request = type metadata accessor for GetRepairActionRequest(0);
  __chkstk_darwin(RepairActionRequest, v19);
  uint64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  char v29 = a3;
  uint64_t v30 = a4;
  char v31 = a5;
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  sub_1001DE4A8(&qword_10029A898, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
  sub_100221F70();
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a11 + 88))(v21, v26, v24, v25, a11);
  sub_1001E97C4((uint64_t)v21, type metadata accessor for GetRepairActionRequest);
  return v22;
}

uint64_t sub_1001E4F6C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  int v44 = a4;
  int v45 = a6;
  uint64_t v43 = a2;
  uint64_t v11 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AccountInfo(0);
  uint64_t v48 = *(void *)(v15 - 8);
  uint64_t v49 = v15;
  uint64_t v17 = __chkstk_darwin(v15, v16);
  uint64_t v41 = (uint64_t)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v19);
  uint64_t v42 = (uint64_t)&v41 - v20;
  uint64_t v21 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Metrics(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v30 = (char *)&v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v31);
  uint64_t v33 = (char *)&v41 - v32;
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a1 = v43;
    *(void *)(a1 + 8) = a3;
  }
  if (v44 != 2) {
    *(unsigned char *)(a1 + 16) = v44 & 1;
  }
  if (*(void *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = a5;
  }
  if (v45 != 2) {
    *(unsigned char *)(a1 + 32) = v45 & 1;
  }
  sub_10000D830(v46, (uint64_t)v24, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_10004015C((uint64_t)v24, &qword_10029F000);
  }
  else
  {
    sub_1001E96F4((uint64_t)v24, (uint64_t)v33, type metadata accessor for Metrics);
    sub_1001E975C((uint64_t)v33, (uint64_t)v30, type metadata accessor for Metrics);
    uint64_t v34 = a1 + *(int *)(type metadata accessor for GetRepairActionRequest(0) + 36);
    sub_10004015C(v34, &qword_10029F000);
    sub_1001E96F4((uint64_t)v30, v34, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v34, 0, 1, v25);
    sub_1001E97C4((uint64_t)v33, type metadata accessor for Metrics);
  }
  sub_10000D830(v47, (uint64_t)v14, &qword_100299F50);
  uint64_t v36 = v48;
  uint64_t v35 = v49;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v14, 1, v49) == 1) {
    return sub_10004015C((uint64_t)v14, &qword_100299F50);
  }
  uint64_t v38 = v42;
  sub_1001E96F4((uint64_t)v14, v42, type metadata accessor for AccountInfo);
  uint64_t v39 = v41;
  sub_1001E975C(v38, v41, type metadata accessor for AccountInfo);
  uint64_t v40 = a1 + *(int *)(type metadata accessor for GetRepairActionRequest(0) + 40);
  sub_10004015C(v40, &qword_100299F50);
  sub_1001E96F4(v39, v40, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
  return sub_1001E97C4(v38, type metadata accessor for AccountInfo);
}

uint64_t sub_1001E5410(uint64_t a1)
{
  return sub_1001E4F6C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t CuttlefishAPIAsyncOperation.getSupportAppInfo(metrics:accountInfo:page:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SupportAppInfouint64_t Request = type metadata accessor for GetSupportAppInfoRequest(0);
  __chkstk_darwin(SupportAppInfoRequest, v17);
  uint64_t v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[4] = a1;
  void v22[5] = a2;
  v22[6] = a3;
  char v23 = a4 & 1;
  sub_1001DE4A8(&qword_10029A900, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
  sub_100221F70();
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 96))(v19, a5, a6, a7, a8);
  sub_1001E97C4((uint64_t)v19, type metadata accessor for GetSupportAppInfoRequest);
  return v20;
}

uint64_t sub_1001E55B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v46 = a5;
  uint64_t v41 = a4;
  uint64_t v42 = a1;
  uint64_t v43 = a3;
  uint64_t v6 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v40 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Metrics(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v39 - v28;
  sub_10000D830(a2, (uint64_t)v20, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10004015C((uint64_t)v20, &qword_10029F000);
    uint64_t v30 = v42;
  }
  else
  {
    sub_1001E96F4((uint64_t)v20, (uint64_t)v29, type metadata accessor for Metrics);
    sub_1001E975C((uint64_t)v29, (uint64_t)v26, type metadata accessor for Metrics);
    SupportAppInfouint64_t Request = type metadata accessor for GetSupportAppInfoRequest(0);
    uint64_t v32 = v42;
    uint64_t v33 = (uint64_t)v42 + *(int *)(SupportAppInfoRequest + 24);
    sub_10004015C(v33, &qword_10029F000);
    sub_1001E96F4((uint64_t)v26, v33, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
    sub_1001E97C4((uint64_t)v29, type metadata accessor for Metrics);
    uint64_t v30 = v32;
  }
  sub_10000D830(v43, (uint64_t)v9, &qword_100299F50);
  uint64_t v35 = v44;
  uint64_t v34 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v9, 1, v45) != 1)
  {
    sub_1001E96F4((uint64_t)v9, (uint64_t)v16, type metadata accessor for AccountInfo);
    uint64_t v37 = v40;
    sub_1001E975C((uint64_t)v16, v40, type metadata accessor for AccountInfo);
    uint64_t v38 = (uint64_t)v30 + *(int *)(type metadata accessor for GetSupportAppInfoRequest(0) + 28);
    sub_10004015C(v38, &qword_100299F50);
    sub_1001E96F4(v37, v38, type metadata accessor for AccountInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
    uint64_t result = sub_1001E97C4((uint64_t)v16, type metadata accessor for AccountInfo);
    if (v46) {
      return result;
    }
    goto LABEL_8;
  }
  uint64_t result = sub_10004015C((uint64_t)v9, &qword_100299F50);
  if ((v46 & 1) == 0) {
LABEL_8:
  }
    *uint64_t v30 = v41;
  return result;
}

uint64_t sub_1001E59FC(void *a1)
{
  return sub_1001E55B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t CuttlefishAPIAsyncOperation.resetAccountCdpcontents(resetReason:idmsTargetContext:idmsCuttlefishPassword:testingNotifyIdms:accountInfo:metrics:isGuitarfish:completion:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v27 = a7;
  uint64_t v26 = a6;
  uint64_t v30 = a11;
  uint64_t v28 = a8;
  uint64_t v29 = a12;
  uint64_t v31 = a13;
  uint64_t v19 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  __int16 v33 = a2 & 0x1FF;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = v26;
  char v38 = v27;
  uint64_t v39 = v28;
  uint64_t v40 = a9;
  char v41 = a10;
  sub_1001DE4A8(&qword_10029A930, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
  sub_100221F70();
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 104))(v22, v30, v29, v31, a14);
  sub_1001E97C4((uint64_t)v22, type metadata accessor for ResetAccountCDPContentsRequest);
  return v23;
}

uint64_t sub_1001E5BC4(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_1001DD37C(a1, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24) | (unsigned __int16)(*(unsigned __int8 *)(v2 + 25) << 8), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned __int8 *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(unsigned char *)(v2 + 88), a2);
}

uint64_t CuttlefishAPIAsyncOperation.removeRecoveryKey(changeToken:peerID:stableInfoAndSig:dynamicInfoAndSig:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v28 = a9;
  uint64_t v26 = a8;
  uint64_t v27 = a10;
  uint64_t v29 = a11;
  uint64_t v19 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v37 = v26;
  sub_1001DE4A8((unint64_t *)&unk_10029EC80, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
  sub_100221F70();
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a12 + 112))(v22, v28, v27, v29, a12);
  sub_1001E97C4((uint64_t)v22, type metadata accessor for RemoveRecoveryKeyRequest);
  return v23;
}

uint64_t sub_1001E5D98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v90 = a8;
  uint64_t v87 = a7;
  uint64_t v84 = a5;
  uint64_t v85 = a6;
  uint64_t v82 = a2;
  uint64_t v83 = a4;
  uint64_t v11 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v91 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AccountInfo(0);
  uint64_t v92 = *(void *)(v14 - 8);
  uint64_t v93 = v14;
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v80 = (uint64_t)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v18);
  uint64_t v81 = (uint64_t)&v75 - v19;
  uint64_t v20 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v88 = (uint64_t)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for Metrics(0);
  uint64_t v95 = *(void *)(v89 - 8);
  uint64_t v24 = __chkstk_darwin(v89, v23);
  uint64_t v78 = (uint64_t)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v26);
  uint64_t v79 = (uint64_t)&v75 - v27;
  uint64_t v28 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v32 = *(void *)(v86 - 8);
  uint64_t v34 = __chkstk_darwin(v86, v33);
  uint64_t v76 = (uint64_t)&v75 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v36);
  uint64_t v77 = (uint64_t)&v75 - v37;
  uint64_t v38 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v38 - 8, v39);
  char v41 = (char *)&v75 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v47 = (char *)&v75 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45, v48);
  uint64_t v50 = (char *)&v75 - v49;
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a1 = v82;
    a1[1] = a3;
  }
  uint64_t v51 = v84;
  if (v84)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = v83;
    a1[3] = v51;
  }
  sub_10000D830(v85, (uint64_t)v41, &qword_100299F18);
  int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42);
  uint64_t v53 = v32;
  uint64_t v94 = a1;
  if (v52 == 1)
  {
    sub_10004015C((uint64_t)v41, &qword_100299F18);
  }
  else
  {
    sub_1001E96F4((uint64_t)v41, (uint64_t)v50, type metadata accessor for SignedPeerStableInfo);
    sub_1001E975C((uint64_t)v50, (uint64_t)v47, type metadata accessor for SignedPeerStableInfo);
    uint64_t v54 = (uint64_t)a1 + *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 28);
    sub_10004015C(v54, &qword_100299F18);
    sub_1001E96F4((uint64_t)v47, v54, type metadata accessor for SignedPeerStableInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v54, 0, 1, v42);
    sub_1001E97C4((uint64_t)v50, type metadata accessor for SignedPeerStableInfo);
  }
  uint64_t v55 = v89;
  uint64_t v56 = v95;
  uint64_t v57 = a9;
  sub_10000D830(v87, (uint64_t)v31, &qword_10029ECA0);
  uint64_t v58 = v86;
  int v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, v86);
  uint64_t v60 = v92;
  if (v59 == 1)
  {
    sub_10004015C((uint64_t)v31, &qword_10029ECA0);
  }
  else
  {
    uint64_t v61 = v77;
    sub_1001E96F4((uint64_t)v31, v77, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v62 = v76;
    sub_1001E975C(v61, v76, type metadata accessor for SignedPeerDynamicInfo);
    uint64_t v63 = (uint64_t)v94 + *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 32);
    sub_10004015C(v63, &qword_10029ECA0);
    uint64_t v64 = v62;
    uint64_t v57 = a9;
    uint64_t v56 = v95;
    sub_1001E96F4(v64, v63, type metadata accessor for SignedPeerDynamicInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v63, 0, 1, v58);
    sub_1001E97C4(v61, type metadata accessor for SignedPeerDynamicInfo);
  }
  uint64_t v65 = v88;
  sub_10000D830(v90, v88, &qword_10029F000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v65, 1, v55) == 1)
  {
    sub_10004015C(v65, &qword_10029F000);
  }
  else
  {
    uint64_t v66 = v79;
    sub_1001E96F4(v65, v79, type metadata accessor for Metrics);
    uint64_t v67 = v78;
    sub_1001E975C(v66, v78, type metadata accessor for Metrics);
    uint64_t v68 = (uint64_t)v94 + *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 36);
    sub_10004015C(v68, &qword_10029F000);
    sub_1001E96F4(v67, v68, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v68, 0, 1, v55);
    sub_1001E97C4(v66, type metadata accessor for Metrics);
  }
  uint64_t v69 = v91;
  uint64_t v70 = v93;
  sub_10000D830(v57, v91, &qword_100299F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v69, 1, v70) == 1) {
    return sub_10004015C(v69, &qword_100299F50);
  }
  uint64_t v72 = v81;
  sub_1001E96F4(v69, v81, type metadata accessor for AccountInfo);
  uint64_t v73 = v80;
  sub_1001E975C(v72, v80, type metadata accessor for AccountInfo);
  uint64_t v74 = (uint64_t)v94 + *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 40);
  sub_10004015C(v74, &qword_100299F50);
  sub_1001E96F4(v73, v74, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v74, 0, 1, v70);
  return sub_1001E97C4(v72, type metadata accessor for AccountInfo);
}

uint64_t sub_1001E6644(void *a1)
{
  return sub_1001E5D98(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t CuttlefishAPIAsyncOperation.performAtoprvactions(metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for PerformATOPRVActionsRequest(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  sub_1001DE4A8(&qword_10029A788, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
  sub_100221F70();
  uint64_t v16 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 120))(v15, a3, a4, a5, a6);
  sub_1001E97C4((uint64_t)v15, type metadata accessor for PerformATOPRVActionsRequest);
  return v16;
}

uint64_t sub_1001E67DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a1;
  uint64_t v40 = a3;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v38 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Metrics(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v25);
  uint64_t v27 = (char *)&v37 - v26;
  sub_10000D830(a2, (uint64_t)v18, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10004015C((uint64_t)v18, &qword_10029F000);
    uint64_t v28 = v39;
  }
  else
  {
    sub_1001E96F4((uint64_t)v18, (uint64_t)v27, type metadata accessor for Metrics);
    sub_1001E975C((uint64_t)v27, (uint64_t)v24, type metadata accessor for Metrics);
    uint64_t v29 = type metadata accessor for PerformATOPRVActionsRequest(0);
    uint64_t v30 = v39;
    uint64_t v31 = v39 + *(int *)(v29 + 20);
    sub_10004015C(v31, &qword_10029F000);
    sub_1001E96F4((uint64_t)v24, v31, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v31, 0, 1, v19);
    sub_1001E97C4((uint64_t)v27, type metadata accessor for Metrics);
    uint64_t v28 = v30;
  }
  sub_10000D830(v40, (uint64_t)v7, &qword_100299F50);
  uint64_t v33 = v41;
  uint64_t v32 = v42;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v7, 1, v42) == 1) {
    return sub_10004015C((uint64_t)v7, &qword_100299F50);
  }
  sub_1001E96F4((uint64_t)v7, (uint64_t)v14, type metadata accessor for AccountInfo);
  uint64_t v35 = v38;
  sub_1001E975C((uint64_t)v14, v38, type metadata accessor for AccountInfo);
  uint64_t v36 = v28 + *(int *)(type metadata accessor for PerformATOPRVActionsRequest(0) + 24);
  sub_10004015C(v36, &qword_100299F50);
  sub_1001E96F4(v35, v36, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
  return sub_1001E97C4((uint64_t)v14, type metadata accessor for AccountInfo);
}

uint64_t CuttlefishAPIAsyncOperation.fetchPcsidentityByPublicKey(pcsServices:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  __chkstk_darwin(Request, v15);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  sub_1001DE4A8((unint64_t *)&unk_10029EF20, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
  sub_100221F70();
  uint64_t v18 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 128))(v17, a4, a5, a6, a7);
  sub_1001E97C4((uint64_t)v17, type metadata accessor for DirectPCSIdentityFetchRequest);
  return v18;
}

uint64_t CuttlefishAPIAsyncOperation.fetchCurrentItem(currentItems:metrics:accountInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  __chkstk_darwin(Request, v15);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  sub_1001DE4A8((unint64_t *)&unk_10029EF40, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
  sub_100221F70();
  uint64_t v18 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 136))(v17, a4, a5, a6, a7);
  sub_1001E97C4((uint64_t)v17, type metadata accessor for CurrentItemFetchRequest);
  return v18;
}

uint64_t CuttlefishAPIAsyncOperation.performCkserverUnreadableDataRemoval(isGuitarfish:metrics:accountInfo:completion:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned char v20[16] = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  sub_1001DE4A8(&qword_10029AA48, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
  sub_100221F70();
  uint64_t v18 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 144))(v17, a4, a5, a6, a7);
  sub_1001E97C4((uint64_t)v17, type metadata accessor for RemoveUnreadableCKServerDataRequest);
  return v18;
}

uint64_t sub_1001E7048(unsigned char *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  int v6 = a2;
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v38 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  uint64_t v39 = (uint64_t)&v38 - v16;
  uint64_t v17 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Metrics(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v38 - v28;
  if (v6 != 2) {
    *a1 = a2 & 1;
  }
  sub_10000D830(v40, (uint64_t)v20, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10004015C((uint64_t)v20, &qword_10029F000);
  }
  else
  {
    sub_1001E96F4((uint64_t)v20, (uint64_t)v29, type metadata accessor for Metrics);
    sub_1001E975C((uint64_t)v29, (uint64_t)v26, type metadata accessor for Metrics);
    uint64_t v30 = (uint64_t)&a1[*(int *)(type metadata accessor for RemoveUnreadableCKServerDataRequest(0) + 24)];
    sub_10004015C(v30, &qword_10029F000);
    sub_1001E96F4((uint64_t)v26, v30, type metadata accessor for Metrics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
    sub_1001E97C4((uint64_t)v29, type metadata accessor for Metrics);
  }
  sub_10000D830(v41, (uint64_t)v10, &qword_100299F50);
  uint64_t v32 = v42;
  uint64_t v31 = v43;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v10, 1, v43) == 1) {
    return sub_10004015C((uint64_t)v10, &qword_100299F50);
  }
  uint64_t v34 = (uint64_t)v10;
  uint64_t v35 = v39;
  sub_1001E96F4(v34, v39, type metadata accessor for AccountInfo);
  uint64_t v36 = v38;
  sub_1001E975C(v35, v38, type metadata accessor for AccountInfo);
  uint64_t v37 = (uint64_t)&a1[*(int *)(type metadata accessor for RemoveUnreadableCKServerDataRequest(0) + 28)];
  sub_10004015C(v37, &qword_100299F50);
  sub_1001E96F4(v36, v37, type metadata accessor for AccountInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v31);
  return sub_1001E97C4(v35, type metadata accessor for AccountInfo);
}

id CuttlefishAPIAsyncOperationClient.reset(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299E90);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for ResetRequest);
  uint64_t v12 = type metadata accessor for ResetRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.ResetOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_100299E90);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, (uint64_t *)&unk_100299E90);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.establish(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299E80);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for EstablishRequest);
  uint64_t v12 = type metadata accessor for EstablishRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.EstablishOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299E80);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299E80);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.joinWithVoucher(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299E70);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for JoinWithVoucherRequest);
  uint64_t v12 = type metadata accessor for JoinWithVoucherRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.JoinWithVoucherOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_100299E70);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, (uint64_t *)&unk_100299E70);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.updateTrust(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299E60);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for UpdateTrustRequest);
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v11, 0, 1, updated);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.UpdateTrustOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_100299E60);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, (uint64_t *)&unk_100299E60);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.setRecoveryKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299E50);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for SetRecoveryKeyRequest);
  uint64_t v12 = type metadata accessor for SetRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.SetRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_100299E50);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, (uint64_t *)&unk_100299E50);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.addCustodianRecoveryKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299DE0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for AddCustodianRecoveryKeyRequest);
  uint64_t v12 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.AddCustodianRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299DE0);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299DE0);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.fetchChanges(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299E40);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for FetchChangesRequest);
  Changesuint64_t Request = type metadata accessor for FetchChangesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ChangesRequest - 8) + 56))(v11, 0, 1, ChangesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchChangesOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299E40);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299E40);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.fetchViableBottles(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299E30);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for FetchViableBottlesRequest);
  ViableBottlesuint64_t Request = type metadata accessor for FetchViableBottlesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ViableBottlesRequest - 8) + 56))(v11, 0, 1, ViableBottlesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchViableBottlesOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299E30);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299E30);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.fetchRecoverableTlkshares(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299DD0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for FetchRecoverableTLKSharesRequest);
  RecoverableTLKSharesuint64_t Request = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(RecoverableTLKSharesRequest - 8) + 56))(v11, 0, 1, RecoverableTLKSharesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchRecoverableTlksharesOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299DD0);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299DD0);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.fetchPolicyDocuments(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299E20);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for FetchPolicyDocumentsRequest);
  PolicyDocumentsuint64_t Request = type metadata accessor for FetchPolicyDocumentsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(PolicyDocumentsRequest - 8) + 56))(v11, 0, 1, PolicyDocumentsRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchPolicyDocumentsOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299E20);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299E20);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.getRepairAction(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299E10);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for GetRepairActionRequest);
  RepairActionuint64_t Request = type metadata accessor for GetRepairActionRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(RepairActionRequest - 8) + 56))(v11, 0, 1, RepairActionRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.GetRepairActionOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_100299E10);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, (uint64_t *)&unk_100299E10);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.getSupportAppInfo(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299E00);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for GetSupportAppInfoRequest);
  SupportAppInfouint64_t Request = type metadata accessor for GetSupportAppInfoRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(SupportAppInfoRequest - 8) + 56))(v11, 0, 1, SupportAppInfoRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.GetSupportAppInfoOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299E00);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299E00);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.resetAccountCdpcontents(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299DF0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for ResetAccountCDPContentsRequest);
  uint64_t v12 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.ResetAccountCdpcontentsOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_100299DF0);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, (uint64_t *)&unk_100299DF0);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.removeRecoveryKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299DC0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for RemoveRecoveryKeyRequest);
  uint64_t v12 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.RemoveRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299DC0);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299DC0);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.performAtoprvactions(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299DB0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for PerformATOPRVActionsRequest);
  uint64_t v12 = type metadata accessor for PerformATOPRVActionsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.PerformAtoprvactionsOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299DB0);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299DB0);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.fetchPcsidentityByPublicKey(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299D90);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for DirectPCSIdentityFetchRequest);
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(Request - 8) + 56))(v11, 0, 1, Request);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchPcsidentityByPublicKeyOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299D90);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299D90);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.fetchCurrentItem(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_100299DA0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for CurrentItemFetchRequest);
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(Request - 8) + 56))(v11, 0, 1, Request);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchCurrentItemOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_100299DA0);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, (uint64_t *)&unk_100299DA0);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id CuttlefishAPIAsyncOperationClient.performCkserverUnreadableDataRemoval(_:completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299D80);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1001E975C(a1, (uint64_t)&v19 - v10, type metadata accessor for RemoveUnreadableCKServerDataRequest);
  uint64_t v12 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation(0));
  sub_10000D830((uint64_t)v11, (uint64_t)v8, &qword_100299D80);
  uint64_t v13 = (void *)sub_100221D30();
  sub_10004015C((uint64_t)v11, &qword_100299D80);
  id v14 = v13;
  swift_retain();
  sub_100221D10();

  uint64_t v15 = *(void **)(v2 + 16);
  id v16 = v14;
  id v17 = v15;
  sub_100221D20();

  return v16;
}

id sub_1001E9270(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.reset(_:completion:)(a1);
}

id sub_1001E9294(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.establish(_:completion:)(a1);
}

id sub_1001E92B8(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.joinWithVoucher(_:completion:)(a1);
}

id sub_1001E92DC(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.updateTrust(_:completion:)(a1);
}

id sub_1001E9300(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.setRecoveryKey(_:completion:)(a1);
}

id sub_1001E9324(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.addCustodianRecoveryKey(_:completion:)(a1);
}

id sub_1001E9348(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.fetchChanges(_:completion:)(a1);
}

id sub_1001E936C(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.fetchViableBottles(_:completion:)(a1);
}

id sub_1001E9390(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.fetchRecoverableTlkshares(_:completion:)(a1);
}

id sub_1001E93B4(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.fetchPolicyDocuments(_:completion:)(a1);
}

id sub_1001E93D8(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.getRepairAction(_:completion:)(a1);
}

id sub_1001E93FC(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.getSupportAppInfo(_:completion:)(a1);
}

id sub_1001E9420(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.resetAccountCdpcontents(_:completion:)(a1);
}

id sub_1001E9444(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.removeRecoveryKey(_:completion:)(a1);
}

id sub_1001E9468(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.performAtoprvactions(_:completion:)(a1);
}

id sub_1001E948C(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.fetchPcsidentityByPublicKey(_:completion:)(a1);
}

id sub_1001E94B0(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.fetchCurrentItem(_:completion:)(a1);
}

id sub_1001E94D4(uint64_t a1)
{
  return CuttlefishAPIAsyncOperationClient.performCkserverUnreadableDataRemoval(_:completion:)(a1);
}

ValueMetadata *type metadata accessor for CuttlefishAPI()
{
  return &type metadata for CuttlefishAPI;
}

uint64_t sub_1001E9508()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9514()
{
  return type metadata accessor for CuttlefishAPI.ResetOperation(0);
}

uint64_t sub_1001E951C()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9528()
{
  return type metadata accessor for CuttlefishAPI.EstablishOperation(0);
}

uint64_t sub_1001E9530()
{
  return sub_1001E9668();
}

uint64_t sub_1001E953C()
{
  return type metadata accessor for CuttlefishAPI.JoinWithVoucherOperation(0);
}

uint64_t sub_1001E9544()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9550()
{
  return type metadata accessor for CuttlefishAPI.UpdateTrustOperation(0);
}

uint64_t sub_1001E9558()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9564()
{
  return type metadata accessor for CuttlefishAPI.SetRecoveryKeyOperation(0);
}

uint64_t sub_1001E956C()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9578()
{
  return type metadata accessor for CuttlefishAPI.AddCustodianRecoveryKeyOperation(0);
}

uint64_t sub_1001E9580()
{
  return sub_1001E9668();
}

uint64_t sub_1001E958C()
{
  return type metadata accessor for CuttlefishAPI.FetchChangesOperation(0);
}

uint64_t sub_1001E9594()
{
  return sub_1001E9668();
}

uint64_t sub_1001E95A0()
{
  return type metadata accessor for CuttlefishAPI.FetchViableBottlesOperation(0);
}

uint64_t sub_1001E95A8()
{
  return sub_1001E9668();
}

uint64_t sub_1001E95B4()
{
  return type metadata accessor for CuttlefishAPI.FetchRecoverableTlksharesOperation(0);
}

uint64_t sub_1001E95BC()
{
  return sub_1001E9668();
}

uint64_t sub_1001E95C8()
{
  return type metadata accessor for CuttlefishAPI.FetchPolicyDocumentsOperation(0);
}

uint64_t sub_1001E95D0()
{
  return sub_1001E9668();
}

uint64_t sub_1001E95DC()
{
  return type metadata accessor for CuttlefishAPI.GetRepairActionOperation(0);
}

uint64_t sub_1001E95E4()
{
  return sub_1001E9668();
}

uint64_t sub_1001E95F0()
{
  return type metadata accessor for CuttlefishAPI.GetSupportAppInfoOperation(0);
}

uint64_t sub_1001E95F8()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9604()
{
  return type metadata accessor for CuttlefishAPI.ResetAccountCdpcontentsOperation(0);
}

uint64_t sub_1001E960C()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9618()
{
  return type metadata accessor for CuttlefishAPI.RemoveRecoveryKeyOperation(0);
}

uint64_t sub_1001E9620()
{
  return sub_1001E9668();
}

uint64_t sub_1001E962C()
{
  return type metadata accessor for CuttlefishAPI.PerformAtoprvactionsOperation(0);
}

uint64_t sub_1001E9634()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9640()
{
  return type metadata accessor for CuttlefishAPI.FetchPcsidentityByPublicKeyOperation(0);
}

uint64_t sub_1001E9648()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9654()
{
  return type metadata accessor for CuttlefishAPI.FetchCurrentItemOperation(0);
}

uint64_t sub_1001E965C()
{
  return sub_1001E9668();
}

uint64_t sub_1001E9668()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001E96A4()
{
  return type metadata accessor for CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation(0);
}

uint64_t type metadata accessor for CuttlefishAPIAsyncClient()
{
  return self;
}

uint64_t type metadata accessor for CuttlefishAPIAsyncOperationClient()
{
  return self;
}

uint64_t sub_1001E96F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E975C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E97C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001E9834(void *a1)
{
  return sub_1001DDA90(a1);
}

uint64_t sub_1001E984C(void *a1)
{
  return sub_1001DDADC(a1);
}

uint64_t sub_1001E9864(uint64_t a1)
{
  return sub_1001DD9E8(a1);
}

uint64_t sub_1001E987C(void *a1)
{
  return sub_1001DDB10(a1);
}

uint64_t sub_1001E9894(void *a1)
{
  return sub_1001DE158(a1);
}

uint64_t sub_1001E98AC(void *a1)
{
  return sub_1001DE2F0(a1);
}

uint64_t sub_1001E98C4(unsigned char *a1)
{
  return sub_1001DE488(a1);
}

void sub_1001E98DC(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222490();
    uint64_t v1 = v27;
    uint64_t v26 = v28;
    uint64_t v2 = v29;
    uint64_t v3 = v30;
    unint64_t v4 = v31;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v23 = v2;
  int64_t v25 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v24 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_100222790()) {
      goto LABEL_38;
    }
    type metadata accessor for MachineMO();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v32;
    swift_unknownObjectRelease();
    if (!v32) {
      goto LABEL_38;
    }
LABEL_31:
    id v15 = objc_msgSend(v11, "machineID", v23);
    if (v15)
    {
      id v16 = v15;
      uint64_t v17 = sub_100222270();
      uint64_t v19 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_100187FB4(0, *((void *)v24 + 2) + 1, 1, v24);
      }
      unint64_t v21 = *((void *)v24 + 2);
      unint64_t v20 = *((void *)v24 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v24 = sub_100187FB4((char *)(v20 > 1), v21 + 1, 1, v24);
      }
      *((void *)v24 + 2) = v21 + 1;
      uint64_t v22 = &v24[16 * v21];
      *((void *)v22 + 4) = v17;
      *((void *)v22 + 5) = v19;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v25) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v25) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v25) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v25) {
            goto LABEL_38;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v25) {
              goto LABEL_38;
            }
            unint64_t v13 = *(void *)(v26 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v25 != v14)
              {
                unint64_t v13 = *(void *)(v26 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_1001B30B0();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_1001E9C5C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222490();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v8 = (v4 - 1) & v4;
      unint64_t v9 = __clz(__rbit64(v4)) | (v3 << 6);
      uint64_t v10 = v3;
      goto LABEL_29;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_35;
    }
    unint64_t v13 = *(void *)(v17 + 8 * v12);
    uint64_t v10 = v3 + 1;
    if (!v13)
    {
      uint64_t v10 = v3 + 2;
      if (v3 + 2 >= v16) {
        goto LABEL_35;
      }
      unint64_t v13 = *(void *)(v17 + 8 * v10);
      if (!v13)
      {
        uint64_t v10 = v3 + 3;
        if (v3 + 3 >= v16) {
          goto LABEL_35;
        }
        unint64_t v13 = *(void *)(v17 + 8 * v10);
        if (!v13)
        {
          uint64_t v10 = v3 + 4;
          if (v3 + 4 >= v16) {
            goto LABEL_35;
          }
          unint64_t v13 = *(void *)(v17 + 8 * v10);
          if (!v13)
          {
            uint64_t v10 = v3 + 5;
            if (v3 + 5 >= v16) {
              goto LABEL_35;
            }
            unint64_t v13 = *(void *)(v17 + 8 * v10);
            if (!v13)
            {
              uint64_t v14 = v3 + 6;
              while (v16 != v14)
              {
                unint64_t v13 = *(void *)(v17 + 8 * v14++);
                if (v13)
                {
                  uint64_t v10 = v14 - 1;
                  goto LABEL_28;
                }
              }
LABEL_35:
              sub_1001B30B0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v8 = (v13 - 1) & v13;
    unint64_t v9 = __clz(__rbit64(v13)) + (v10 << 6);
LABEL_29:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v11) {
      goto LABEL_35;
    }
    while (1)
    {
      uint64_t v15 = [v11 allowed] ? 1 : 2;
      [v11 setStatus:v15];
      [v11 setAllowed:0];

      uint64_t v3 = v10;
      unint64_t v4 = v8;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_100222790())
      {
        type metadata accessor for MachineMO();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v11 = v23;
        swift_unknownObjectRelease();
        uint64_t v10 = v3;
        uint64_t v8 = v4;
        if (v23) {
          continue;
        }
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_1001E9F6C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (Swift::Int *)(*(void *)(v1 + 48) + 16 * v9);
    Swift::Int v11 = *v10;
    Swift::Int v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1001902EC(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

Swift::Int sub_1001EA0EC()
{
  uint64_t v1 = sub_1000046DC(&qword_10029ED28);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v5 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v3, v6);
  uint64_t v98 = (char *)&v89 - v8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v97 = (char *)&v89 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v96 = (char *)&v89 - v13;
  uint64_t v14 = sub_100221CB0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v92 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v91 = (char *)&v89 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v90 = (char *)&v89 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v89 - v27;
  __chkstk_darwin(v26, v29);
  uint64_t v89 = (char *)&v89 - v30;
  uint64_t v31 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v32 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "honorIDMSListChanges"));
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = sub_100222270();
    uint64_t v36 = v35;

    if (v34 == 0x4E574F4E4B4E55 && v36 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    char v38 = sub_100222A30();
    swift_bridgeObjectRelease();
    if (v38) {
      return 1;
    }
  }
  id v40 = [*(id *)(v0 + v31) machines];
  if (!v40
    || (uint64_t v41 = v40,
        uint64_t v103 = 0,
        type metadata accessor for MachineMO(),
        sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO),
        sub_100222430(),
        v41,
        (uint64_t v42 = (void *)v103) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = &_swiftEmptySetSingleton;
    if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) != 0) {
      goto LABEL_11;
    }
LABEL_48:
    uint64_t v43 = sub_1001F29C0((uint64_t)v42, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1001F2B38);
    if ((v43 & 0xC000000000000001) != 0) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if ((v103 & 0xC000000000000001) == 0) {
    goto LABEL_48;
  }
LABEL_11:
  uint64_t v43 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v103 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v44 = sub_100222700();
  uint64_t v45 = sub_100222790();
  if (!v45) {
    goto LABEL_52;
  }
  uint64_t v46 = v45;
  uint64_t v100 = type metadata accessor for MachineMO();
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v94 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v99 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v95 = v44;
  uint64_t v93 = v5;
  do
  {
    uint64_t v101 = v46;
    swift_dynamicCast();
    id v55 = v102;
    if (![v102 status])
    {
      id v75 = [v55 modified];
      uint64_t v57 = (uint64_t)v5;
      if (!v75) {
        goto LABEL_35;
      }
      uint64_t v76 = v75;
      sub_100221C80();

      uint64_t v77 = *v47;
      (*v47)(v5, v28, v14);
      (*v48)(v5, 0, 1, v14);
      uint64_t v57 = (uint64_t)v5;
      if ((*v49)(v5, 1, v14) == 1) {
        goto LABEL_36;
      }
      uint64_t v78 = v92;
      v77(v92, v5, v14);
      sub_100221C50();
      uint64_t v79 = sub_100221C90();
      uint64_t v80 = *v94;
      (*v94)(v28, v14);
      v80(v78, v14);
      uint64_t v5 = v93;
      if (v79 != 1) {
        goto LABEL_37;
      }
    }
    if ([v55 status] != (id)3) {
      goto LABEL_57;
    }
    id v56 = [v55 modified];
    uint64_t v57 = (uint64_t)v98;
    if (!v56) {
      goto LABEL_35;
    }
    uint64_t v58 = v56;
    sub_100221C80();

    int v59 = *v47;
    uint64_t v57 = (uint64_t)v98;
    (*v47)(v98, v28, v14);
    (*v48)((char *)v57, 0, 1, v14);
    if ((*v49)((char *)v57, 1, v14) == 1) {
      goto LABEL_36;
    }
    uint64_t v60 = v91;
    v59(v91, v98, v14);
    sub_100221C50();
    uint64_t v61 = sub_100221C90();
    uint64_t v62 = *v94;
    (*v94)(v28, v14);
    v62(v60, v14);
    uint64_t v5 = v93;
    if (v61 == 1)
    {
LABEL_57:
      if ([v55 status] != (id)4) {
        goto LABEL_26;
      }
      id v63 = [v55 modified];
      uint64_t v57 = (uint64_t)v97;
      if (!v63) {
        goto LABEL_35;
      }
      uint64_t v64 = v63;
      sub_100221C80();

      uint64_t v65 = *v47;
      uint64_t v57 = (uint64_t)v97;
      (*v47)(v97, v28, v14);
      (*v48)((char *)v57, 0, 1, v14);
      if ((*v49)((char *)v57, 1, v14) == 1) {
        goto LABEL_36;
      }
      uint64_t v66 = v90;
      v65(v90, v97, v14);
      sub_100221C50();
      uint64_t v67 = sub_100221C90();
      uint64_t v68 = *v94;
      (*v94)(v28, v14);
      v68(v66, v14);
      uint64_t v5 = v93;
      if (v67 == 1)
      {
LABEL_26:
        if ([v55 status] != (id)5) {
          goto LABEL_30;
        }
        id v69 = [v55 modified];
        uint64_t v57 = (uint64_t)v96;
        if (!v69)
        {
LABEL_35:
          (*v48)((char *)v57, 1, 1, v14);
LABEL_36:
          sub_1001F6534(v57);
          goto LABEL_37;
        }
        uint64_t v70 = v69;
        sub_100221C80();

        uint64_t v71 = *v47;
        uint64_t v57 = (uint64_t)v96;
        (*v47)(v96, v28, v14);
        (*v48)((char *)v57, 0, 1, v14);
        if ((*v49)((char *)v57, 1, v14) == 1) {
          goto LABEL_36;
        }
        uint64_t v72 = v89;
        v71(v89, v96, v14);
        sub_100221C50();
        uint64_t v73 = sub_100221C90();
        uint64_t v74 = *v94;
        (*v94)(v28, v14);
        v74(v72, v14);
        if (v73 == 1)
        {
LABEL_30:

          goto LABEL_16;
        }
      }
    }
LABEL_37:
    id v82 = v102;
    uint64_t v81 = v103;
    unint64_t v83 = *(void *)(v103 + 16);
    if (*(void *)(v103 + 24) <= v83)
    {
      sub_10018E924(v83 + 1);
      uint64_t v81 = v103;
    }
    Swift::Int result = sub_100222640(*(void *)(v81 + 40));
    uint64_t v50 = v81 + 56;
    uint64_t v51 = -1 << *(unsigned char *)(v81 + 32);
    unint64_t v52 = result & ~v51;
    unint64_t v53 = v52 >> 6;
    if (((-1 << v52) & ~*(void *)(v81 + 56 + 8 * (v52 >> 6))) != 0)
    {
      unint64_t v54 = __clz(__rbit64((-1 << v52) & ~*(void *)(v81 + 56 + 8 * (v52 >> 6)))) | v52 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v84 = 0;
      unint64_t v85 = (unint64_t)(63 - v51) >> 6;
      do
      {
        if (++v53 == v85 && (v84 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        BOOL v86 = v53 == v85;
        if (v53 == v85) {
          unint64_t v53 = 0;
        }
        v84 |= v86;
        uint64_t v87 = *(void *)(v50 + 8 * v53);
      }
      while (v87 == -1);
      unint64_t v54 = __clz(__rbit64(~v87)) + (v53 << 6);
    }
    *(void *)(v50 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
    *(void *)(*(void *)(v81 + 48) + 8 * v54) = v82;
    ++*(void *)(v81 + 16);
LABEL_16:
    uint64_t v46 = sub_100222790();
  }
  while (v46);
  uint64_t v43 = v103;
LABEL_52:
  swift_release();
  if ((v43 & 0xC000000000000001) == 0)
  {
LABEL_49:
    uint64_t v88 = *(void *)(v43 + 16);
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v88 = sub_100222750();
LABEL_54:
  swift_release();
  return v88 != 0;
}

uint64_t sub_1001EAB00()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "machines"));
  if (v1)
  {
    uint64_t v2 = v1;
    v23[0] = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();
  }
  while (1)
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t v3 = sub_100222750();
    if (!v3) {
      goto LABEL_17;
    }
    uint64_t v4 = v3;
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_1002228D0();
    uint64_t v24 = sub_1002226F0();
    uint64_t v25 = v5;
    char v26 = 1;
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_11;
    }
    __break(1u);
  }
  uint64_t v4 = *((void *)&_swiftEmptySetSingleton + 2);
  if (!v4)
  {
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    id v20 = objc_allocWithZone((Class)TPMachineIDList);
    sub_1000047D8(0, &qword_10029FC38);
    Class isa = sub_1002223B0().super.isa;
    swift_bridgeObjectRelease();
    id v22 = [v20 initWithEntries:isa];

    return (uint64_t)v22;
  }
  uint64_t v27 = _swiftEmptyArrayStorage;
  sub_1002228D0();
  uint64_t v24 = sub_1001F434C((uint64_t)&_swiftEmptySetSingleton);
  uint64_t v25 = v6;
  char v26 = v7 & 1;
  while (1)
  {
LABEL_11:
    while (1)
    {
      int64_t v13 = v24;
      uint64_t v14 = v25;
      char v15 = v26;
      sub_1001F4574(v24, v25, v26, (uint64_t)&_swiftEmptySetSingleton, (void (*)(void))type metadata accessor for MachineMO);
      uint64_t v17 = v16;
      sub_1001ECDD8();

      sub_1002228B0();
      sub_1002228E0();
      sub_1002228F0();
      uint64_t result = sub_1002228C0();
      if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v8 = sub_1001F4478(v13, v14, v15, (uint64_t)&_swiftEmptySetSingleton);
      uint64_t v10 = v9;
      char v12 = v11;
      sub_1001B1EC4(v13, v14, v15);
      uint64_t v24 = v8;
      uint64_t v25 = v10;
      char v26 = v12 & 1;
      if (!--v4) {
        goto LABEL_16;
      }
    }
    if ((v15 & 1) == 0) {
      break;
    }
    if (sub_100222710()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1000046DC(&qword_10029FC30);
    uint64_t v19 = (void (*)(void *, void))sub_100222480();
    sub_1002227C0();
    v19(v23, 0);
    if (!--v4)
    {
LABEL_16:
      sub_1001B1EC4(v24, v25, v26);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001EAE4C(uint64_t a1, unint64_t a2)
{
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "machines"));
  if (v4)
  {
    uint64_t v5 = v4;
    v53[0] = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t)&_swiftEmptySetSingleton;
  if ((sub_1001F6594() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_100298ED8 != -1) {
      goto LABEL_60;
    }
    goto LABEL_7;
  }
  unint64_t v50 = a2;
  if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) != 0)
  {
    sub_100222700();
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222490();
    uint64_t v6 = v53[0];
    uint64_t v49 = (char *)v53[1];
    uint64_t v7 = v53[2];
    a2 = v53[3];
    unint64_t v8 = v53[4];
  }
  else
  {
    a2 = 0;
    uint64_t v14 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
    uint64_t v49 = (char *)&_swiftEmptySetSingleton + 56;
    uint64_t v15 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v8 = v17 & *((void *)&_swiftEmptySetSingleton + 7);
    uint64_t v7 = v15;
  }
  int64_t v48 = (unint64_t)(v7 + 64) >> 6;
  while (v6 < 0)
  {
    if (!sub_100222790()
      || (type metadata accessor for MachineMO(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          id v22 = v52,
          swift_unknownObjectRelease(),
          unint64_t v21 = a2,
          uint64_t v19 = v8,
          !v52))
    {
LABEL_50:
      unint64_t v24 = v50;
      goto LABEL_51;
    }
LABEL_38:
    id v27 = [v22 machineID];
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = sub_100222270();
      uint64_t v31 = v30;

      if (v29 == a1 && v31 == v50)
      {
        swift_bridgeObjectRelease();
LABEL_42:
        if ([v22 status] == (id)1)
        {
          sub_1001B30B0();

          return 1;
        }
        if (qword_100298ED8 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_100222090();
        sub_100003CC8(v32, (uint64_t)qword_10029FC18);
        swift_bridgeObjectRetain_n();
        id v33 = v22;
        uint64_t v34 = sub_100222070();
        os_log_type_t v35 = sub_1002224E0();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = swift_slowAlloc();
          unint64_t v52 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = 136446466;
          os_log_type_t type = v35;
          swift_bridgeObjectRetain();
          sub_1001BEBDC(a1, v50, (uint64_t *)&v52);
          sub_100222690();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v36 + 12) = 2082;
          id v37 = v33;
          id v38 = [v37 description];
          uint64_t v39 = sub_100222270();
          unint64_t v41 = v40;

          sub_1001BEBDC(v39, v41, (uint64_t *)&v52);
          sub_100222690();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v34, type, "machineID %{public}s not explicitly allowed: %{public}s", (uint8_t *)v36, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
        sub_1001B30B0();
        return 0;
      }
      char v18 = sub_100222A30();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_42;
      }
    }

    a2 = v21;
    unint64_t v8 = v19;
  }
  if (v8)
  {
    uint64_t v19 = (v8 - 1) & v8;
    unint64_t v20 = __clz(__rbit64(v8)) | (a2 << 6);
    unint64_t v21 = a2;
LABEL_37:
    id v22 = *(id *)(*(void *)(v6 + 48) + 8 * v20);
    if (!v22) {
      goto LABEL_50;
    }
    goto LABEL_38;
  }
  int64_t v23 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v23 >= v48) {
      goto LABEL_50;
    }
    unint64_t v24 = v50;
    unint64_t v25 = *(void *)&v49[8 * v23];
    unint64_t v21 = a2 + 1;
    if (!v25)
    {
      unint64_t v21 = a2 + 2;
      if ((uint64_t)(a2 + 2) >= v48) {
        goto LABEL_51;
      }
      unint64_t v25 = *(void *)&v49[8 * v21];
      if (!v25)
      {
        unint64_t v21 = a2 + 3;
        if ((uint64_t)(a2 + 3) >= v48) {
          goto LABEL_51;
        }
        unint64_t v25 = *(void *)&v49[8 * v21];
        if (!v25)
        {
          unint64_t v21 = a2 + 4;
          if ((uint64_t)(a2 + 4) >= v48) {
            goto LABEL_51;
          }
          unint64_t v25 = *(void *)&v49[8 * v21];
          if (!v25)
          {
            unint64_t v26 = a2 + 5;
            while (v48 != v26)
            {
              unint64_t v25 = *(void *)&v49[8 * v26++];
              if (v25)
              {
                unint64_t v21 = v26 - 1;
                goto LABEL_36;
              }
            }
LABEL_51:
            sub_1001B30B0();
            if (qword_100298ED8 != -1) {
              swift_once();
            }
            uint64_t v42 = sub_100222090();
            sub_100003CC8(v42, (uint64_t)qword_10029FC18);
            swift_bridgeObjectRetain_n();
            uint64_t v43 = sub_100222070();
            os_log_type_t v44 = sub_100222520();
            if (os_log_type_enabled(v43, v44))
            {
              uint64_t v45 = (uint8_t *)swift_slowAlloc();
              unint64_t v52 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v45 = 136446210;
              swift_bridgeObjectRetain();
              sub_1001BEBDC(a1, v24, (uint64_t *)&v52);
              sub_100222690();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v43, v44, "machineID %{public}s not found on list", v45, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            return 0;
          }
        }
      }
    }
LABEL_36:
    uint64_t v19 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_37;
  }
  __break(1u);
LABEL_60:
  swift_once();
LABEL_7:
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029FC18);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  if (os_log_type_enabled(v10, v11))
  {
    char v12 = (uint8_t *)swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)char v12 = 136446210;
    swift_bridgeObjectRetain();
    unint64_t v52 = (void *)sub_1001BEBDC(a1, a2, v53);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "not enforcing idms list changes; allowing %{public}s",
      v12,
      0xCu);
    uint64_t v13 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  return v13;
}

void sub_1001EB754(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222490();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v12 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_100222790()) {
      goto LABEL_31;
    }
    type metadata accessor for MachineMO();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_31;
    }
LABEL_10:
    unsigned int v11 = [v10 allowed];

    if (v11) {
      goto LABEL_31;
    }
  }
  if (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_9:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v10) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v16) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v3);
          if (!v14)
          {
            uint64_t v3 = v12 + 5;
            if (v12 + 5 >= v16) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v3);
            if (!v14)
            {
              uint64_t v15 = v12 + 6;
              while (v16 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_1001B30B0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1001EBA48(void *a1)
{
  uint64_t v98 = sub_100221CB0();
  uint64_t v3 = *(void *)(v98 - 8);
  __chkstk_darwin(v98, v4);
  uint64_t v96 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  uint64_t v100 = v1;
  id v6 = [*(id *)&v1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] machines];
  if (!v6
    || (uint64_t v7 = v6,
        v104[0] = 0,
        type metadata accessor for MachineMO(),
        sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO),
        sub_100222430(),
        v7,
        (unint64_t v8 = (void *)v104[0]) == 0))
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = &_swiftEmptySetSingleton;
  }
  uint64_t v94 = (uint64_t)v8;
  sub_1001E98DC((uint64_t)v8);
  uint64_t v10 = sub_1001A0B30(v9);
  swift_bridgeObjectRelease();
  id v11 = [a1 includedPeerIDs];
  uint64_t v12 = sub_100222440();

  int64_t v13 = v100;
  uint64_t v14 = sub_1001F4A78(v12, (uint64_t)v13);
  swift_bridgeObjectRelease();

  uint64_t v15 = sub_1001A0B30(v14);
  swift_bridgeObjectRelease();
  uint64_t v97 = v13;
  char v16 = sub_1001F6594();
  p_vtable = VoucherMO.vtable;
  uint64_t v18 = (void (**)(char *, uint64_t))&type metadata for Any;
  uint64_t v89 = v15;
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_100298ED8 != -1) {
      goto LABEL_85;
    }
    goto LABEL_8;
  }
  if (*(void *)(v10 + 16) <= *(void *)(v15 + 16) >> 3)
  {
    v104[0] = v15;
    swift_bridgeObjectRetain();
    sub_100194E14(v10);
    swift_bridgeObjectRelease();
    uint64_t v19 = (unint64_t *)v104[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100194FBC(v10, v15);
    swift_bridgeObjectRelease();
  }
  int64_t v26 = 0;
  unint64_t v27 = v19[7];
  *(void *)&long long v92 = v19 + 7;
  uint64_t v28 = 1 << *((unsigned char *)v19 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  uint64_t v95 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc;
  int64_t v93 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v18 = (void (**)(char *, uint64_t))(v3 + 8);
  *(void *)&long long v20 = 136446210;
  long long v91 = v20;
  uint64_t v90 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v30)
    {
      unint64_t v39 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      unint64_t v40 = v39 | (v26 << 6);
      goto LABEL_33;
    }
    int64_t v41 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v93) {
      goto LABEL_37;
    }
    unint64_t v42 = *(void *)(v92 + 8 * v41);
    ++v26;
    if (!v42)
    {
      int64_t v26 = v41 + 1;
      if (v41 + 1 >= v93) {
        goto LABEL_37;
      }
      unint64_t v42 = *(void *)(v92 + 8 * v26);
      if (!v42)
      {
        int64_t v26 = v41 + 2;
        if (v41 + 2 >= v93) {
          goto LABEL_37;
        }
        unint64_t v42 = *(void *)(v92 + 8 * v26);
        if (!v42) {
          break;
        }
      }
    }
LABEL_32:
    unint64_t v30 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v26 << 6);
LABEL_33:
    os_log_type_t v44 = v19;
    uint64_t v45 = (uint64_t *)(v19[6] + 16 * v40);
    uint64_t v47 = *v45;
    unint64_t v46 = v45[1];
    int64_t v48 = p_vtable[475];
    swift_bridgeObjectRetain();
    if (v48 != (void *)-1) {
      swift_once();
    }
    uint64_t v49 = sub_100222090();
    sub_100003CC8(v49, (uint64_t)qword_10029FC18);
    swift_bridgeObjectRetain_n();
    unint64_t v50 = sub_100222070();
    os_log_type_t v51 = sub_1002224E0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      v104[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = v91;
      swift_bridgeObjectRetain();
      *(void *)(v52 + 4) = sub_1001BEBDC(v47, v46, v104);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Peer machineID is unknown, beginning grace period: %{public}s", (uint8_t *)v52, 0xCu);
      swift_arrayDestroy();
      p_vtable = (void **)(VoucherMO + 24);
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    type metadata accessor for MachineMO();
    uint64_t v31 = *(void *)&v97[v95];
    id v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v33 = objc_msgSend(v32, "initWithContext:", v31, v89, v90);
    NSString v34 = sub_100222260();
    swift_bridgeObjectRelease();
    [v33 setMachineID:v34];

    uint64_t v36 = v99;
    os_log_type_t v35 = v100;
    [v33 setContainer:*(void *)&v100[v99]];
    [v33 setSeenOnFullList:0];
    id v37 = v96;
    sub_100221CA0();
    Class isa = sub_100221C30().super.isa;
    (*v18)(v37, v98);
    [v33 setModified:isa];

    [v33 setStatus:0];
    [*(id *)&v35[v36] addMachinesObject:v33];

    uint64_t v19 = v44;
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v93)
  {
LABEL_37:
    swift_release();
    uint64_t v18 = (void (**)(char *, uint64_t))&type metadata for Any;
    goto LABEL_38;
  }
  unint64_t v42 = *(void *)(v92 + 8 * v43);
  if (v42)
  {
    int64_t v26 = v43;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v26 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v26 >= v93) {
      goto LABEL_37;
    }
    unint64_t v42 = *(void *)(v92 + 8 * v26);
    ++v43;
    if (v42) {
      goto LABEL_32;
    }
  }
LABEL_84:
  __break(1u);
LABEL_85:
  swift_once();
LABEL_8:
  uint64_t v21 = sub_100222090();
  sub_100003CC8(v21, (uint64_t)qword_10029FC18);
  unint64_t v22 = sub_100222070();
  os_log_type_t v23 = sub_1002224E0();
  if (os_log_type_enabled(v22, v23))
  {
    unint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Not enforcing IDMS list changes", v24, 2u);
    swift_slowDealloc();
  }

LABEL_38:
  uint64_t v53 = v94;
  if ((v94 & 0xC000000000000001) != 0)
  {
    sub_100222700();
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222490();
    uint64_t v53 = v104[0];
    uint64_t v54 = v104[1];
    uint64_t v55 = v104[2];
    uint64_t v56 = v104[3];
    unint64_t v57 = v104[4];
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v58 = -1 << *(unsigned char *)(v94 + 32);
    uint64_t v54 = v94 + 56;
    uint64_t v59 = ~v58;
    uint64_t v60 = -v58;
    if (v60 < 64) {
      uint64_t v61 = ~(-1 << v60);
    }
    else {
      uint64_t v61 = -1;
    }
    unint64_t v57 = v61 & *(void *)(v94 + 56);
    uint64_t v55 = v59;
  }
  uint64_t v98 = v53 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v90 = (char *)v55;
  int64_t v62 = (unint64_t)(v55 + 64) >> 6;
  *(void *)&long long v25 = 136446210;
  long long v92 = v25;
  *(void *)&long long v91 = v18 + 1;
  uint64_t v96 = (char *)v62;
  uint64_t v97 = (char *)&type metadata for Swift.AnyObject + 8;
  int64_t v93 = v54;
  uint64_t v94 = v53;
  while (2)
  {
    if (v53 < 0)
    {
      uint64_t v65 = sub_100222790();
      if (!v65) {
        goto LABEL_81;
      }
      uint64_t v103 = v65;
      type metadata accessor for MachineMO();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v66 = v101;
      swift_unknownObjectRelease();
      uint64_t v64 = v56;
      uint64_t v18 = (void (**)(char *, uint64_t))v57;
      if (!v66) {
        goto LABEL_81;
      }
      goto LABEL_69;
    }
    if (v57)
    {
      uint64_t v18 = (void (**)(char *, uint64_t))((v57 - 1) & v57);
      unint64_t v63 = __clz(__rbit64(v57)) | (v56 << 6);
      uint64_t v64 = v56;
LABEL_68:
      id v66 = *(id *)(*(void *)(v53 + 48) + 8 * v63);
      if (!v66) {
        goto LABEL_81;
      }
LABEL_69:
      if (objc_msgSend(v66, "status", v89, v90, v91) == (id)2)
      {
        id v70 = [v66 machineID];
        if (v70)
        {
          uint64_t v71 = v70;
          uint64_t v72 = sub_100222270();
          uint64_t v74 = v73;
        }
        else
        {
          uint64_t v72 = 0;
          uint64_t v74 = 0xE000000000000000;
        }
        char v75 = sub_100039584(v72, v74, v89);
        swift_bridgeObjectRelease();
        if ((v75 & 1) == 0)
        {
          if (qword_100298ED8 != -1) {
            swift_once();
          }
          uint64_t v76 = sub_100222090();
          sub_100003CC8(v76, (uint64_t)qword_10029FC18);
          id v77 = v66;
          uint64_t v78 = sub_100222070();
          os_log_type_t v79 = sub_100222520();
          if (os_log_type_enabled(v78, v79))
          {
            uint64_t v80 = swift_slowAlloc();
            uint64_t v95 = swift_slowAlloc();
            uint64_t v103 = v95;
            *(_DWORD *)uint64_t v80 = v92;
            id v81 = [v77 machineID];
            if (v81)
            {
              id v82 = v81;
              uint64_t v83 = sub_100222270();
              uint64_t v85 = v84;
            }
            else
            {
              uint64_t v83 = 0;
              uint64_t v85 = 0;
            }
            uint64_t v101 = (void *)v83;
            uint64_t v102 = v85;
            sub_1000046DC((uint64_t *)&unk_10029EC60);
            uint64_t v86 = sub_1002222C0();
            *(void *)(v80 + 4) = sub_1001BEBDC(v86, v87, &v103);

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v78, v79, "Dropping knowledge of machineID %{public}s", (uint8_t *)v80, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v54 = v93;
          }
          else
          {
          }
          [*(id *)&v100[v99] removeMachinesObject:v77];
          int64_t v62 = (int64_t)v96;
        }
      }

      uint64_t v56 = v64;
      unint64_t v57 = (unint64_t)v18;
      uint64_t v53 = v94;
      continue;
    }
    break;
  }
  int64_t v67 = v56 + 1;
  if (__OFADD__(v56, 1)) {
    goto LABEL_83;
  }
  if (v67 >= v62) {
    goto LABEL_81;
  }
  unint64_t v68 = *(void *)(v54 + 8 * v67);
  uint64_t v64 = v56 + 1;
  if (v68) {
    goto LABEL_67;
  }
  uint64_t v64 = v56 + 2;
  if (v56 + 2 >= v62) {
    goto LABEL_81;
  }
  unint64_t v68 = *(void *)(v54 + 8 * v64);
  if (v68) {
    goto LABEL_67;
  }
  uint64_t v64 = v56 + 3;
  if (v56 + 3 >= v62) {
    goto LABEL_81;
  }
  unint64_t v68 = *(void *)(v54 + 8 * v64);
  if (v68) {
    goto LABEL_67;
  }
  uint64_t v64 = v56 + 4;
  if (v56 + 4 >= v62) {
    goto LABEL_81;
  }
  unint64_t v68 = *(void *)(v54 + 8 * v64);
  if (v68)
  {
LABEL_67:
    uint64_t v18 = (void (**)(char *, uint64_t))((v68 - 1) & v68);
    unint64_t v63 = __clz(__rbit64(v68)) + (v64 << 6);
    goto LABEL_68;
  }
  uint64_t v69 = v56 + 5;
  while (v62 != v69)
  {
    unint64_t v68 = *(void *)(v54 + 8 * v69++);
    if (v68)
    {
      uint64_t v64 = v69 - 1;
      uint64_t v53 = v94;
      goto LABEL_67;
    }
  }
LABEL_81:
  sub_1001B30B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EC5A8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  uint64_t v5 = v2;
  uint64_t v6 = sub_1001984DC(v5, 0xD00000000000001ELL, 0x8000000100246600);

  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = qword_100298ED8;
  swift_retain();
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100222090();
  sub_100003CC8(v9, (uint64_t)qword_10029FC18);
  uint64_t v10 = sub_100222070();
  os_log_type_t v11 = sub_1002224E0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Fetching allowed machine IDs", v12, 2u);
    swift_slowDealloc();
  }

  int64_t v13 = *(void **)&v5[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v5;
  v14[3] = sub_1001F676C;
  v14[4] = v7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1001F67B8;
  *(void *)(v15 + 24) = v14;
  v20[4] = sub_1000437D0;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_100112F58;
  v20[3] = &unk_100289518;
  char v16 = _Block_copy(v20);
  uint64_t v17 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  [v13 performBlockAndWait:v16];
  swift_release();
  swift_release();
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EC870()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_10029FC18);
  sub_100003CC8(v0, (uint64_t)qword_10029FC18);
  return sub_100222080();
}

BOOL sub_1001EC8EC()
{
  uint64_t v1 = sub_1000046DC(&qword_10029ED28);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100221CB0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  int64_t v13 = (char *)&v20 - v12;
  id v14 = [v0 modified];
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  uint64_t v15 = v14;
  sub_100221C80();

  char v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v16(v4, v10, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1001F6534((uint64_t)v4);
    return 0;
  }
  v16(v13, v4, v5);
  sub_100221C50();
  BOOL v17 = sub_100221C90() == 1;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v10, v5);
  v18(v13, v5);
  return v17;
}

uint64_t sub_1001ECB4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000046DC(&qword_10029ED28);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100221CB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  id v14 = (char *)&v23 - v13;
  id v15 = [v1 modified];
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_5;
  }
  char v16 = v15;
  sub_100221C80();

  BOOL v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v5, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_5:
    sub_1001F6534((uint64_t)v5);
    return 0x6E776F6E6B6E75;
  }
  v17(v14, v5, v6);
  id v18 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
  Class isa = sub_100221C30().super.isa;
  id v20 = [v18 stringFromDate:isa];

  uint64_t v21 = sub_100222270();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  return v21;
}

uint64_t sub_1001ECDD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000046DC(&qword_10029ED28);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100221CB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  id v14 = (char *)&v27 - v13;
  id v15 = [v1 machineID];
  if (v15)
  {
    char v16 = v15;
    sub_100222270();
  }
  unint64_t v17 = (unint64_t)[v1 status];
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t v18 = v17;
    id v19 = [v1 modified];
    if (v19)
    {
      id v20 = v19;
      sub_100221C80();

      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v21(v5, v11, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v21(v14, v5, v6);
LABEL_9:
        id v22 = objc_allocWithZone((Class)TPMachineID);
        NSString v23 = sub_100222260();
        swift_bridgeObjectRelease();
        Class isa = sub_100221C30().super.isa;
        id v25 = [v22 initWithMachineID:v23 status:v18 modified:isa];

        (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
        return (uint64_t)v25;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_100221CA0();
    sub_1001F6534((uint64_t)v5);
    goto LABEL_9;
  }
  uint64_t result = sub_100222950();
  __break(1u);
  return result;
}

void sub_1001ED108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1000046DC(&qword_10029EC10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229540;
  sub_100222270();
  sub_1002227F0();
  char v13 = *(unsigned char *)(v6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_egoMachineIDVanished);
  *(void *)(inited + 96) = &type metadata for Bool;
  *(unsigned char *)(inited + 72) = v13;
  unint64_t v14 = sub_1000095FC(inited);
  uint64_t v15 = sub_100222270();
  uint64_t v17 = v16;
  unint64_t v18 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  swift_bridgeObjectRetain();
  id v19 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = sub_100062F10(v14, a1, a2, a3, a4, a5, a6, v15, v17, 0, 1, v19);
  uint64_t v21 = self;
  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_100231AC0;
  *(unsigned char *)(v22 + 16) = 13;
  NSString v23 = (void *)sub_100221B30();
  swift_errorRelease();
  [v21 sendMetricWithEvent:v20 success:0 error:v23];
}

uint64_t sub_1001ED2F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (qword_100298ED8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222090();
  sub_100003CC8(v5, (uint64_t)qword_10029FC18);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = sub_100222070();
  os_log_type_t v7 = sub_1002224E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    if (a1)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v12._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v12);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v9 = 0x203A726F727265;
    }
    else
    {
      uint64_t v9 = 0x73736563637573;
    }
    sub_1001BEBDC(v9, 0xE700000000000000, &v11);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "markTrustedDeviceListFetchFailed complete: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100119E14(0xD000000000000028, 0x8000000100245B60);
  return a3(a1);
}

uint64_t sub_1001ED550(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if (qword_100298ED8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100222090();
  sub_100003CC8(v4, (uint64_t)qword_10029FC18);
  uint64_t v5 = sub_100222070();
  os_log_type_t v6 = sub_1002224E0();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Setting honorIDMSListChanges to NO", v7, 2u);
    swift_slowDealloc();
  }

  id v8 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  NSString v9 = sub_100222260();
  [v8 setHonorIDMSListChanges:v9];

  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v20 = 0;
  if ([v10 save:&v20])
  {
    id v11 = v20;
    return a2(0);
  }
  else
  {
    id v13 = v20;
    uint64_t v14 = sub_100221B40();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v15 = sub_100222070();
    os_log_type_t v16 = sub_100222500();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      id v20 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v18 = sub_1002222C0();
      sub_1001BEBDC(v18, v19, (uint64_t *)&v20);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Error marking machine ID list as unusable: %{public}s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(v14);
    swift_errorRelease();
    return swift_errorRelease();
  }
}

uint64_t sub_1001ED894(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (qword_100298ED8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029FC18);
  swift_errorRetain();
  swift_errorRetain();
  id v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v14._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v14);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v11 = 0x203A726F727265;
    }
    else
    {
      uint64_t v11 = 0x73736563637573;
    }
    sub_1001BEBDC(v11, 0xE700000000000000, &v13);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "setAllowedMachineIDs complete: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD0000000000000E7, 0x8000000100246620);
  return a4(a1 & 1, a2);
}

uint64_t sub_1001EDB08(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, void *a18, void (*a19)(uint64_t, uint64_t), uint64_t a20)
{
  uint64_t v240 = a8;
  unint64_t v236 = a7;
  uint64_t v233 = a6;
  uint64_t v243 = a5;
  uint64_t v229 = sub_100221CB0();
  uint64_t v228 = *(void *)(v229 - 8);
  __chkstk_darwin(v229, v24);
  os_log_type_t v227 = (char *)&v225 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = 0;
  uint64_t v258 = 0;
  BOOL v249 = 0;
  uint64_t v244 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  v245 = a1;
  id v26 = [*(id *)&a1[OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO] egoPeerID];
  p_vtable = VoucherMO.vtable;
  uint64_t v235 = a2;
  uint64_t v242 = a4;
  uint64_t v241 = a3;
  if (v26)
  {
    uint64_t v28 = v26;
    uint64_t v29 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
    unint64_t v30 = *(void **)&v245[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    id v253 = 0;
    id v31 = [v30 peerWithID:v28 error:&v253];
    id v32 = v31;
    if (v253)
    {
      id v33 = v253;

      swift_willThrow();
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_100222090();
      sub_100003CC8(v34, (uint64_t)qword_10029FC18);
      id v35 = v33;
      uint64_t v36 = sub_100222070();
      os_log_type_t v37 = sub_100222500();
      if (os_log_type_enabled(v36, v37))
      {
        id v38 = (uint8_t *)swift_slowAlloc();
        id v253 = (id)swift_slowAlloc();
        *(_DWORD *)id v38 = 136446210;
        v252[0] = (uint64_t)v35;
        id v39 = v35;
        sub_1000046DC(&qword_100299D70);
        uint64_t v40 = sub_1002222C0();
        v252[0] = sub_1001BEBDC(v40, v41, (uint64_t *)&v253);
        p_vtable = (void **)(VoucherMO + 24);
        a2 = v235;
        sub_100222690();

        a4 = v242;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Error getting ego peer from model: %{public}s", v38, 0xCu);
        swift_arrayDestroy();
        a3 = v241;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v231 = 0;
    }
    else
    {
      uint64_t v231 = 0;
      if (v31)
      {
        id v42 = v31;
        id v43 = [v42 permanentInfo];
        id v44 = [v43 machineID];

        uint64_t v45 = sub_100222270();
        uint64_t v47 = v46;

        uint64_t v257 = v45;
        uint64_t v258 = v47;
        int64_t v48 = *(void **)&v245[v29];
        id v253 = 0;
        id v49 = v48;
        id v50 = [v49 statusOfPeerWithID:v28 error:&v253];

        if (v253)
        {
          id v51 = v253;
          swift_willThrow();
          if (qword_100298ED8 != -1) {
            swift_once();
          }
          uint64_t v52 = sub_100222090();
          sub_100003CC8(v52, (uint64_t)qword_10029FC18);
          id v53 = v51;
          uint64_t v54 = sub_100222070();
          os_log_type_t v55 = sub_100222500();
          if (os_log_type_enabled(v54, v55))
          {
            uint64_t v56 = (uint8_t *)swift_slowAlloc();
            unint64_t v57 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v56 = 138543362;
            id v58 = v53;
            uint64_t v59 = (void *)_swift_stdlib_bridgeErrorToNSError();
            id v253 = v59;
            p_vtable = (void **)(VoucherMO + 24);
            a2 = v235;
            sub_100222690();
            *unint64_t v57 = v59;
            a4 = v242;

            _os_log_impl((void *)&_mh_execute_header, v54, v55, "error calling statusOfPeer: %{public}@", v56, 0xCu);
            sub_1000046DC(&qword_100298F90);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v231 = 0;
          a3 = v241;
        }
        else
        {

          BOOL v224 = 0;
          if (v50 == (id)4)
          {
            a3 = v241;
          }
          else
          {
            a3 = v241;
            if (v50 != (id)32) {
              BOOL v224 = v50 != (id)128;
            }
          }
          BOOL v249 = v224;
        }
      }
      else
      {
        if (qword_100298ED8 != -1) {
          swift_once();
        }
        uint64_t v220 = sub_100222090();
        sub_100003CC8(v220, (uint64_t)qword_10029FC18);
        id v221 = sub_100222070();
        os_log_type_t v222 = sub_100222500();
        if (os_log_type_enabled(v221, v222))
        {
          unint64_t v223 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v223 = 0;
          _os_log_impl((void *)&_mh_execute_header, v221, v222, "Couldn't find ego peer in model", v223, 2u);
          swift_slowDealloc();
        }
      }
    }
  }
  else
  {
    uint64_t v231 = 0;
  }
  uint64_t v248 = &_swiftEmptySetSingleton;
  if (a2)
  {
    uint64_t v60 = swift_bridgeObjectRetain();
    sub_1001E9F6C(v60);
  }
  if (a3)
  {
    uint64_t v61 = swift_bridgeObjectRetain();
    sub_1001E9F6C(v61);
  }
  if (a4)
  {
    uint64_t v62 = swift_bridgeObjectRetain();
    sub_1001E9F6C(v62);
  }
  long long v63 = xmmword_100231AD0;
  long long v256 = xmmword_100231AD0;
  if (v248[2])
  {
    long long v239 = xmmword_100231AD0;
    swift_bridgeObjectRetain();
    uint64_t v64 = (void *)sub_1001F73B8();
    uint64_t v66 = v65;
    swift_bridgeObjectRelease();
    *(void *)&long long v256 = v64;
    *((void *)&v256 + 1) = v66;
    int64_t v67 = p_vtable[475];
    swift_bridgeObjectRetain();
    if (v67 != (void *)-1) {
      swift_once();
    }
    uint64_t v68 = sub_100222090();
    sub_100003CC8(v68, (uint64_t)qword_10029FC18);
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_100222070();
    os_log_type_t v70 = sub_1002224E0();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      v252[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 136446210;
      id v253 = v64;
      uint64_t v254 = v66;
      swift_bridgeObjectRetain();
      sub_1000046DC((uint64_t *)&unk_10029EC60);
      uint64_t v72 = sub_1002222C0();
      id v253 = (id)sub_1001BEBDC(v72, v73, v252);
      p_vtable = (void **)(VoucherMO + 24);
      a2 = v235;
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "sha256 of deleted list: %{public}s", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a4 = v242;
    long long v63 = v239;
  }
  unint64_t v74 = a15;
  uint64_t v75 = a13;
  *(void *)&long long v239 = a12;
  uint64_t v238 = a11;
  uint64_t v237 = a10;
  long long v255 = v63;
  uint64_t v76 = *(void *)(v243 + 16);
  uint64_t v234 = a13;
  if (v76)
  {
    id v77 = (void *)sub_1001F73B8();
    uint64_t v79 = v78;
    *(void *)&long long v255 = v77;
    *((void *)&v255 + 1) = v78;
    uint64_t v80 = p_vtable[475];
    swift_bridgeObjectRetain();
    if (v80 != (void *)-1) {
      swift_once();
    }
    uint64_t v81 = sub_100222090();
    sub_100003CC8(v81, (uint64_t)qword_10029FC18);
    swift_bridgeObjectRetain();
    id v82 = sub_100222070();
    os_log_type_t v83 = sub_1002224E0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      v252[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v84 = 136446210;
      id v253 = v77;
      uint64_t v254 = v79;
      swift_bridgeObjectRetain();
      sub_1000046DC((uint64_t *)&unk_10029EC60);
      uint64_t v85 = sub_1002222C0();
      id v253 = (id)sub_1001BEBDC(v85, v86, v252);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "sha256 of allowed list: %{public}s", v84, 0xCu);
      swift_arrayDestroy();
      a2 = v235;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a4 = v242;
    uint64_t v75 = v234;
  }
  uint64_t v87 = a9;
  uint64_t v232 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_testHashMismatchDetected;
  v245[OBJC_IVAR____TtC18TrustedPeersHelper9Container_testHashMismatchDetected] = 0;
  swift_beginAccess();
  if (!v236)
  {
    if (!*((void *)&v255 + 1)) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (!*((void *)&v255 + 1) || v255 != __PAIR128__(v236, v233) && (sub_100222A30() & 1) == 0)
  {
LABEL_42:
    uint64_t v88 = sub_100222270();
    uint64_t v90 = v89;
    long long v91 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
    objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
    swift_bridgeObjectRetain();
    id v92 = v91;
    swift_bridgeObjectRetain();
    uint64_t v93 = v238;
    swift_bridgeObjectRetain();
    uint64_t v94 = v93;
    unint64_t v74 = a15;
    id v95 = sub_100062F10(0, v240, a9, v237, v94, v239, v75, v88, v90, 0, 1, v92);
    uint64_t v96 = self;
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v97 = xmmword_100231AE0;
    *(unsigned char *)(v97 + 16) = 13;
    uint64_t v98 = (void *)sub_100221B30();
    swift_errorRelease();
    [v96 sendMetricWithEvent:v95 success:0 error:v98];

    v245[v232] = 1;
  }
LABEL_43:
  swift_beginAccess();
  unint64_t v236 = a9;
  if (!v74)
  {
    if (!*((void *)&v256 + 1)) {
      goto LABEL_50;
    }
LABEL_49:
    uint64_t v99 = sub_100222270();
    uint64_t v101 = v100;
    uint64_t v102 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
    objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
    swift_bridgeObjectRetain();
    id v103 = v102;
    swift_bridgeObjectRetain();
    uint64_t v104 = v238;
    swift_bridgeObjectRetain();
    uint64_t v105 = v104;
    uint64_t v87 = v236;
    id v106 = sub_100062F10(0, v240, v236, v237, v105, v239, v75, v99, v101, 0, 1, v103);
    uint64_t v107 = self;
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v108 = xmmword_100231AF0;
    *(unsigned char *)(v108 + 16) = 13;
    uint64_t v109 = (void *)sub_100221B30();
    swift_errorRelease();
    [v107 sendMetricWithEvent:v106 success:0 error:v109];

    v245[v232] = 1;
    goto LABEL_50;
  }
  if (!*((void *)&v256 + 1) || v256 != __PAIR128__(v74, a14) && (sub_100222A30() & 1) == 0) {
    goto LABEL_49;
  }
LABEL_50:
  int v226 = sub_1001F6E54(v243, a2, v241, a4, v237, v238, v239, v75, v240, v87, 0);
  uint64_t v233 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_midVanishedFromTDL;
  uint64_t v110 = v245;
  v245[OBJC_IVAR____TtC18TrustedPeersHelper9Container_midVanishedFromTDL] = 0;
  v110[OBJC_IVAR____TtC18TrustedPeersHelper9Container_egoMachineIDVanished] = 0;
  unsigned __int8 v247 = 0;
  uint64_t v111 = v244;
  id v112 = *(id *)&v110[v244];
  NSString v113 = sub_100222260();
  swift_bridgeObjectRelease();
  [v112 setHonorIDMSListChanges:v113];

  id v114 = [*(id *)&v110[v111] machines];
  uint64_t v115 = &_swiftEmptySetSingleton;
  if (v114)
  {
    uint64_t v116 = v114;
    id v251 = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();

    if (v251) {
      uint64_t v115 = v251;
    }
  }
  uint64_t v117 = swift_bridgeObjectRetain();
  sub_1001E98DC(v117);
  uint64_t v119 = v118;
  swift_bridgeObjectRelease();
  sub_1001A0B30(v119);
  swift_bridgeObjectRelease();
  uint64_t v120 = v242;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v121 = v243;
  swift_bridgeObjectRetain();
  uint64_t v122 = v245;
  uint64_t v123 = v245;
  swift_bridgeObjectRetain();
  uint64_t v124 = v241;
  swift_bridgeObjectRetain();
  sub_1001F5990((uint64_t)v115, v121, &v247, a2, v124, (uint64_t)v123, v120, &v249, &v257);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v125 = [*(id *)&v122[v244] machines];
  if (v125)
  {
    uint64_t v126 = v125;
    id v250 = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();

    id v127 = v250;
    swift_bridgeObjectRelease();
    if (v127) {
      uint64_t v128 = v127;
    }
    else {
      uint64_t v128 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v128 = &_swiftEmptySetSingleton;
  }
  id v246 = v128;
  uint64_t v129 = swift_bridgeObjectRetain();
  sub_1001E98DC(v129);
  uint64_t v131 = v130;
  swift_bridgeObjectRelease();
  uint64_t v132 = sub_1001A0B30(v131);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v251 = (void *)v132;
  id v133 = v123;
  sub_1001F4FF0(v243, (uint64_t *)&v251, (uint64_t)v133, &v247, (uint64_t)&v246, 1, "Newly trusted machine ID: %{public}s");

  id v134 = [*(id *)&v245[v244] machines];
  id v135 = &_swiftEmptySetSingleton;
  uint64_t v136 = v234;
  if (v134)
  {
    id v137 = v134;
    id v250 = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();

    if (v250) {
      id v135 = v250;
    }
  }
  swift_bridgeObjectRelease();
  id v246 = v135;
  uint64_t v138 = swift_bridgeObjectRetain();
  sub_1001E98DC(v138);
  uint64_t v140 = v139;
  swift_bridgeObjectRelease();
  uint64_t v141 = sub_1001A0B30(v140);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v251 = (void *)v141;
  uint64_t v142 = v235;
  if (v235)
  {
    Swift::Int v143 = v133;
    sub_1001F4FF0(v142, (uint64_t *)&v251, (uint64_t)v143, &v247, (uint64_t)&v246, 2, "Newly distrusted machine ID: %{public}s");
  }
  id v144 = [*(id *)&v245[v244] machines];
  id v145 = &_swiftEmptySetSingleton;
  if (v144)
  {
    uint64_t v146 = v144;
    id v250 = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();

    if (v250) {
      id v145 = v250;
    }
  }
  swift_bridgeObjectRelease();
  id v246 = v145;
  uint64_t v147 = swift_bridgeObjectRetain();
  sub_1001E98DC(v147);
  uint64_t v149 = v148;
  swift_bridgeObjectRelease();
  uint64_t v150 = sub_1001A0B30(v149);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v251 = (void *)v150;
  uint64_t v151 = v241;
  if (v241)
  {
    unint64_t v152 = v133;
    sub_1001F4FF0(v151, (uint64_t *)&v251, (uint64_t)v152, &v247, (uint64_t)&v246, 3, "Newly evicted machine ID: %{public}s");
  }
  id v153 = [*(id *)&v245[v244] machines];
  id v154 = &_swiftEmptySetSingleton;
  if (v153)
  {
    id v155 = v153;
    id v250 = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();

    if (v250) {
      id v154 = v250;
    }
  }
  swift_bridgeObjectRelease();
  id v246 = v154;
  uint64_t v156 = swift_bridgeObjectRetain();
  sub_1001E98DC(v156);
  uint64_t v158 = v157;
  swift_bridgeObjectRelease();
  uint64_t v159 = sub_1001A0B30(v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v251 = (void *)v159;
  uint64_t v160 = v242;
  if (v242)
  {
    Swift::Int v161 = v133;
    sub_1001F4FF0(v160, (uint64_t *)&v251, (uint64_t)v161, &v247, (uint64_t)&v246, 4, "Newly removed with unknown reason machine ID: %{public}s");
  }
  uint64_t v230 = a20;
  uint64_t v231 = a19;
  id v162 = [*(id *)&v245[v244] machines];
  id v163 = &_swiftEmptySetSingleton;
  if (v162)
  {
    id v164 = v162;
    id v250 = 0;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();

    if (v250) {
      id v163 = v250;
    }
  }
  swift_bridgeObjectRelease();
  id v246 = v163;
  uint64_t v165 = swift_bridgeObjectRetain();
  sub_1001E98DC(v165);
  uint64_t v167 = v166;
  swift_bridgeObjectRelease();
  uint64_t v168 = sub_1001A0B30(v167);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v251 = (void *)v168;
  swift_bridgeObjectRetain();
  char v169 = sub_1001F6594();
  swift_bridgeObjectRelease();
  if (v169)
  {
    Swift::String v170 = *(void **)&v133[OBJC_IVAR____TtC18TrustedPeersHelper9Container_model];
    id v250 = 0;
    id v171 = [v170 allMachineIDsWithError:&v250];
    id v172 = v250;
    if (!v171)
    {
      id v213 = v250;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v212 = sub_100221B40();

      swift_willThrow();
      swift_bridgeObjectRelease();
      goto LABEL_97;
    }
    uint64_t v173 = v171;
    uint64_t v174 = sub_100222440();
    id v175 = v172;

    uint64_t v176 = v235;
    swift_bridgeObjectRetain();
    uint64_t v177 = v241;
    swift_bridgeObjectRetain();
    uint64_t v178 = v242;
    swift_bridgeObjectRetain();
    uint64_t v179 = v243;
    swift_bridgeObjectRetain();
    unint64_t v180 = v133;
    sub_1001F51F8(v174, (uint64_t *)&v251, v179, v177, v178, v176, (uint64_t)v180, &v247);
    swift_bridgeObjectRelease();
    uint64_t v136 = v234;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_84;
  }
  if (qword_100298ED8 != -1) {
    swift_once();
  }
  uint64_t v181 = sub_100222090();
  sub_100003CC8(v181, (uint64_t)qword_10029FC18);
  unint64_t v182 = sub_100222070();
  os_log_type_t v183 = sub_100222520();
  if (!os_log_type_enabled(v182, v183))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_84:
    swift_bridgeObjectRelease();
    goto LABEL_85;
  }
  unint64_t v184 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)unint64_t v184 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v182, v183, "Believe we're in a demo account, not enforcing IDMS list", v184, 2u);
  swift_slowDealloc();

LABEL_85:
  NSString v185 = a18;
  uint64_t v186 = *(void **)&v245[v244];
  id v187 = v186;
  if (a18) {
    NSString v185 = sub_100222260();
  }
  [v186 setIdmsTrustedDevicesVersion:v185];

  uint64_t v188 = v244;
  id v189 = v245;
  id v190 = *(id *)&v245[v244];
  NSString v191 = v227;
  sub_100221CA0();
  Class isa = sub_100221C30().super.isa;
  (*(void (**)(char *, uint64_t))(v228 + 8))(v191, v229);
  [v190 setIdmsTrustedDeviceListFetchDate:isa];

  unint64_t v193 = *(void **)&v189[v188];
  id v194 = objc_allocWithZone((Class)NSSet);
  id v195 = v193;
  id v196 = [v194 init];
  [v195 setAllowedMachineIDs:v196];

  if (v189[v233] == 1) {
    sub_1001ED108(v240, v236, v237, v238, v239, v136);
  }
  uint64_t v197 = sub_100222270();
  uint64_t v199 = v198;
  unint64_t v200 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  swift_bridgeObjectRetain();
  id v201 = v200;
  uint64_t v202 = v236;
  swift_bridgeObjectRetain();
  uint64_t v203 = v238;
  swift_bridgeObjectRetain();
  id v204 = sub_100062F10(0, v240, v202, v237, v203, v239, v136, v197, v199, 0, 1, v201);
  BOOL v205 = ((v245[v233] | v226) & 1) == 0 && v245[v232] != 1;
  [self sendMetricWithEvent:v204 success:v205 error:0];
  unint64_t v206 = *(void **)&v133[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v207 = *(id *)&v245[v244];
  sub_1001A21AC(v207, (uint64_t)v206);

  id v250 = 0;
  if ([v206 save:&v250])
  {
    uint64_t v208 = v247;
    id v209 = v250;
    v231(v208, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  id v211 = v250;
  uint64_t v212 = sub_100221B40();

  swift_willThrow();
  swift_bridgeObjectRelease();
LABEL_97:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_100298ED8 != -1) {
    swift_once();
  }
  uint64_t v214 = sub_100222090();
  sub_100003CC8(v214, (uint64_t)qword_10029FC18);
  swift_errorRetain();
  swift_errorRetain();
  id v215 = sub_100222070();
  os_log_type_t v216 = sub_100222500();
  if (os_log_type_enabled(v215, v216))
  {
    unint64_t v217 = (uint8_t *)swift_slowAlloc();
    uint64_t v257 = swift_slowAlloc();
    *(_DWORD *)unint64_t v217 = 136446210;
    *(void *)&long long v256 = v212;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v218 = sub_1002222C0();
    *(void *)&long long v256 = sub_1001BEBDC(v218, v219, &v257);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v215, v216, "Error setting machine ID list: %{public}s", v217, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  v231(0, v212);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_1001EF8B0(id *a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8, uint64_t *a9)
{
  os_log_type_t v222 = a3;
  uint64_t v17 = sub_100221CB0();
  uint64_t v18 = *(uint8_t **)(v17 - 8);
  uint64_t v225 = v17;
  int v226 = v18;
  __chkstk_darwin(v17, v19);
  BOOL v224 = (char *)&v220 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v227 = *a1;
  id v21 = [v227 machineID];
  if (!v21)
  {
    if (qword_100298ED8 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_100222090();
    sub_100003CC8(v37, (uint64_t)qword_10029FC18);
    id v38 = v227;
    id v39 = sub_100222070();
    os_log_type_t v40 = sub_1002224E0();
    if (os_log_type_enabled(v39, v40))
    {
      unint64_t v41 = (uint8_t *)swift_slowAlloc();
      id v227 = (id)swift_slowAlloc();
      uint64_t v228 = (uint64_t)v227;
      *(_DWORD *)unint64_t v41 = 136446210;
      int v226 = v41 + 4;
      id v42 = v38;
      id v43 = [v42 description];
      uint64_t v44 = sub_100222270();
      unint64_t v46 = v45;

      uint64_t v230 = sub_1001BEBDC(v44, v46, &v228);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Machine has no ID: %{public}s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  uint64_t v22 = v21;
  uint64_t v223 = v9;
  uint64_t v23 = sub_100222270();
  unint64_t v25 = v24;

  if (sub_100039584(v23, v25, a2))
  {
    swift_bridgeObjectRelease();
    id v26 = v227;
    if ([v227 status] == (id)1)
    {
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_100222090();
      sub_100003CC8(v27, (uint64_t)qword_10029FC18);
      id v28 = v26;
      uint64_t v29 = sub_100222070();
      os_log_type_t v30 = sub_1002224E0();
      if (os_log_type_enabled(v29, v30))
      {
        id v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v230 = swift_slowAlloc();
        *(_DWORD *)id v31 = 136446210;
        id v32 = [v28 machineID];
        if (v32)
        {
          id v33 = v32;
          uint64_t v34 = sub_100222270();
          uint64_t v36 = v35;
        }
        else
        {
          uint64_t v34 = 0;
          uint64_t v36 = 0;
        }
        uint64_t v228 = v34;
        uint64_t v229 = v36;
        sub_1000046DC((uint64_t *)&unk_10029EC60);
        uint64_t v95 = sub_1002222C0();
        uint64_t v228 = sub_1001BEBDC(v95, v96, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Machine ID still trusted: %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v26 = v227;
      }
      else
      {
      }
    }
    else
    {
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_100222090();
      sub_100003CC8(v71, (uint64_t)qword_10029FC18);
      id v72 = v26;
      unint64_t v73 = sub_100222070();
      os_log_type_t v74 = sub_100222520();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        uint64_t v230 = swift_slowAlloc();
        *(_DWORD *)uint64_t v75 = 136446210;
        id v76 = [v72 machineID];
        if (v76)
        {
          id v77 = v76;
          uint64_t v78 = sub_100222270();
          uint64_t v80 = v79;
        }
        else
        {
          uint64_t v78 = 0;
          uint64_t v80 = 0;
        }
        uint64_t v228 = v78;
        uint64_t v229 = v80;
        sub_1000046DC((uint64_t *)&unk_10029EC60);
        uint64_t v97 = sub_1002222C0();
        uint64_t v228 = sub_1001BEBDC(v97, v98, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "Machine ID newly retrusted: %{public}s", v75, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v26 = v227;
      }
      else
      {
      }
      unsigned char *v222 = 1;
    }
    [v26 setStatus:1];
    [v26 setSeenOnFullList:1];
    uint64_t v99 = v224;
    sub_100221CA0();
    Class isa = sub_100221C30().super.isa;
    (*((void (**)(char *, uint64_t))v226 + 1))(v99, v225);
    [v26 setModified:isa];

    return;
  }
  id v47 = v227;
  if (!a4 || (sub_100039584(v23, v25, a4) & 1) == 0)
  {
    if (a5 && (sub_100039584(v23, v25, a5) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_100222090();
      sub_100003CC8(v60, (uint64_t)qword_10029FC18);
      id v49 = v47;
      uint64_t v61 = sub_100222070();
      os_log_type_t v62 = sub_100222520();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        uint64_t v230 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136446466;
        uint64_t v64 = sub_1001ECB4C();
        uint64_t v228 = sub_1001BEBDC(v64, v65, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        *(_WORD *)(v63 + 12) = 2082;
        id v66 = [v49 machineID];
        if (v66)
        {
          int64_t v67 = v66;
          uint64_t v68 = sub_100222270();
          uint64_t v70 = v69;
        }
        else
        {
          uint64_t v68 = 0;
          uint64_t v70 = 0;
        }
        uint64_t v228 = v68;
        uint64_t v229 = v70;
        sub_1000046DC((uint64_t *)&unk_10029EC60);
        uint64_t v128 = sub_1002222C0();
        uint64_t v228 = sub_1001BEBDC(v128, v129, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "Evicted removal! machine ID last modified %{public}s; tagging as evicted: %{public}s",
          (uint8_t *)v63,
          0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      if ([v49 status] != (id)3)
      {
        [v49 setStatus:3];
        goto LABEL_130;
      }
      id v92 = "Evicted machine ID last modified %{public}s; leaving evicted: %{public}s";
      uint64_t v93 = "Evicted machine ID last modified %{public}s; distrusting: %{public}s";
      goto LABEL_87;
    }
    if (a7 && (sub_100039584(v23, v25, a7) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v81 = sub_100222090();
      sub_100003CC8(v81, (uint64_t)qword_10029FC18);
      id v49 = v47;
      id v82 = sub_100222070();
      os_log_type_t v83 = sub_100222520();
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v84 = swift_slowAlloc();
        uint64_t v230 = swift_slowAlloc();
        *(_DWORD *)uint64_t v84 = 136446466;
        uint64_t v85 = sub_1001ECB4C();
        uint64_t v228 = sub_1001BEBDC(v85, v86, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2082;
        id v87 = [v49 machineID];
        if (v87)
        {
          uint64_t v88 = v87;
          uint64_t v89 = sub_100222270();
          uint64_t v91 = v90;
        }
        else
        {
          uint64_t v89 = 0;
          uint64_t v91 = 0;
        }
        uint64_t v228 = v89;
        uint64_t v229 = v91;
        sub_1000046DC((uint64_t *)&unk_10029EC60);
        uint64_t v130 = sub_1002222C0();
        uint64_t v228 = sub_1001BEBDC(v130, v131, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "Unknown reason removal! machine ID last modified %{public}s; tagging as unknown reason: %{public}s",
          (uint8_t *)v84,
          0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      if ([v49 status] != (id)4)
      {
        [v49 setStatus:4];
        goto LABEL_130;
      }
      id v92 = "Unknown reason machine ID last modified %{public}s; leaving unknown reason: %{public}s";
      uint64_t v93 = "Unknown reason machine ID last modified %{public}s; distrusting: %{public}s";
LABEL_87:
      uint64_t v94 = v49;
      goto LABEL_88;
    }
    if (!sub_1001EC8EC()
      || ![v47 status]
      || [v47 status] == (id)5
      || [v47 status] == (id)2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    if (qword_100298ED8 != -1) {
      swift_once();
    }
    uint64_t v132 = sub_100222090();
    sub_100003CC8(v132, (uint64_t)qword_10029FC18);
    id v133 = v47;
    swift_bridgeObjectRetain();
    id v134 = sub_100222070();
    os_log_type_t v135 = sub_100222520();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = swift_slowAlloc();
      uint64_t v220 = swift_slowAlloc();
      uint64_t v228 = v220;
      *(_DWORD *)uint64_t v136 = 136446466;
      uint64_t v221 = a6;
      swift_bridgeObjectRetain();
      uint64_t v230 = sub_1001BEBDC(v23, v25, &v228);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v136 + 12) = 2080;
      uint64_t v137 = sub_1001ECB4C();
      uint64_t v230 = sub_1001BEBDC(v137, v138, &v228);
      sub_100222690();

      swift_bridgeObjectRelease();
      a6 = v221;
      _os_log_impl((void *)&_mh_execute_header, v134, v135, "machineID that vanished: %{public}s, last modified : %s", (uint8_t *)v136, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (*a8 == 1)
    {
      uint64_t v160 = a9[1];
      if (v160)
      {
        uint64_t v161 = *a9;
        swift_bridgeObjectRetain();
        id v162 = [v133 machineID];
        if (v162)
        {
          id v163 = v162;
          uint64_t v164 = sub_100222270();
          uint64_t v166 = v165;

          if (v161 == v164 && v160 == v166)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v47 = v227;
LABEL_140:
            *(unsigned char *)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_egoMachineIDVanished) = 1;
            goto LABEL_141;
          }
          char v201 = sub_100222A30();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v47 = v227;
          if (v201) {
            goto LABEL_140;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
LABEL_141:
    *(unsigned char *)(a6 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_midVanishedFromTDL) = 1;
LABEL_45:
    if ([v47 status] == (id)3)
    {
      id v92 = "Evicted machine ID last modified %{public}s; leaving evicted: %{public}s";
      uint64_t v93 = "Evicted machine ID last modified %{public}s; distrusting: %{public}s";
      uint64_t v94 = v47;
LABEL_88:
      sub_1001F5404(v94, v222, v92, v93);
      return;
    }
    if ([v47 status] == (id)4)
    {
      id v92 = "Unknown reason machine ID last modified %{public}s; leaving unknown reason: %{public}s";
      uint64_t v93 = "Unknown reason machine ID last modified %{public}s; distrusting: %{public}s";
      uint64_t v94 = v47;
      goto LABEL_88;
    }
    if ([v47 status] != (id)5)
    {
      if ([v47 status] == (id)1)
      {
        if (qword_100298ED8 != -1) {
          swift_once();
        }
        uint64_t v117 = sub_100222090();
        sub_100003CC8(v117, (uint64_t)qword_10029FC18);
        id v49 = v47;
        uint64_t v118 = sub_100222070();
        os_log_type_t v119 = sub_1002224E0();
        if (os_log_type_enabled(v118, v119))
        {
          uint64_t v120 = swift_slowAlloc();
          uint64_t v230 = swift_slowAlloc();
          *(_DWORD *)uint64_t v120 = 136446466;
          uint64_t v121 = sub_1001ECB4C();
          uint64_t v228 = sub_1001BEBDC(v121, v122, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          *(_WORD *)(v120 + 12) = 2082;
          id v123 = [v49 machineID];
          if (v123)
          {
            uint64_t v124 = v123;
            uint64_t v125 = sub_100222270();
            uint64_t v127 = v126;
          }
          else
          {
            uint64_t v125 = 0;
            uint64_t v127 = 0;
          }
          uint64_t v228 = v125;
          uint64_t v229 = v127;
          sub_1000046DC((uint64_t *)&unk_10029EC60);
          uint64_t v185 = sub_1002222C0();
          uint64_t v228 = sub_1001BEBDC(v185, v186, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v118, v119, "MachineID was allowed but no longer on the TDL, last modified %{public}s, tagging as ghosted fromt TDL: %{public}s", (uint8_t *)v120, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        [v49 setStatus:5];
        goto LABEL_130;
      }
      if ([v47 status]) {
        return;
      }
      if (!sub_1001EC8EC())
      {
        if (qword_100298ED8 != -1) {
          swift_once();
        }
        uint64_t v190 = sub_100222090();
        sub_100003CC8(v190, (uint64_t)qword_10029FC18);
        id v49 = v47;
        NSString v191 = sub_100222070();
        os_log_type_t v192 = sub_100222520();
        if (os_log_type_enabled(v191, v192))
        {
          uint64_t v193 = swift_slowAlloc();
          uint64_t v230 = swift_slowAlloc();
          *(_DWORD *)uint64_t v193 = 136446466;
          uint64_t v194 = sub_1001ECB4C();
          uint64_t v228 = sub_1001BEBDC(v194, v195, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          *(_WORD *)(v193 + 12) = 2082;
          id v196 = [v49 machineID];
          if (v196)
          {
            uint64_t v197 = v196;
            uint64_t v198 = sub_100222270();
            uint64_t v200 = v199;
          }
          else
          {
            uint64_t v198 = 0;
            uint64_t v200 = 0;
          }
          uint64_t v228 = v198;
          uint64_t v229 = v200;
          sub_1000046DC((uint64_t *)&unk_10029EC60);
          uint64_t v218 = sub_1002222C0();
          uint64_t v228 = sub_1001BEBDC(v218, v219, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v191, v192, "Unknown machine ID last modified %{public}s; distrusting: %{public}s",
            (uint8_t *)v193,
            0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_71;
      }
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v151 = sub_100222090();
      sub_100003CC8(v151, (uint64_t)qword_10029FC18);
      id v104 = v47;
      uint64_t v105 = sub_100222070();
      os_log_type_t v152 = sub_1002224E0();
      if (os_log_type_enabled(v105, v152))
      {
        uint64_t v107 = swift_slowAlloc();
        uint64_t v230 = swift_slowAlloc();
        *(_DWORD *)uint64_t v107 = 136446466;
        uint64_t v153 = sub_1001ECB4C();
        uint64_t v228 = sub_1001BEBDC(v153, v154, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        *(_WORD *)(v107 + 12) = 2082;
        id v155 = [v104 machineID];
        if (v155)
        {
          uint64_t v156 = v155;
          uint64_t v157 = sub_100222270();
          uint64_t v159 = v158;
        }
        else
        {
          uint64_t v157 = 0;
          uint64_t v159 = 0;
        }
        uint64_t v228 = v157;
        uint64_t v229 = v159;
        sub_1000046DC((uint64_t *)&unk_10029EC60);
        uint64_t v216 = sub_1002222C0();
        uint64_t v228 = sub_1001BEBDC(v216, v217, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        os_log_type_t v204 = v152;
        BOOL v205 = "Unknown machine ID last modified %{public}s; leaving unknown: %{public}s";
        goto LABEL_155;
      }
      goto LABEL_119;
    }
    BOOL v101 = sub_1001EC8EC();
    unsigned int v102 = [v47 seenOnFullList];
    if (v101)
    {
      if (v102)
      {
        if (qword_100298ED8 != -1) {
          swift_once();
        }
        uint64_t v103 = sub_100222090();
        sub_100003CC8(v103, (uint64_t)qword_10029FC18);
        id v104 = v47;
        uint64_t v105 = sub_100222070();
        os_log_type_t v106 = sub_1002224E0();
        if (os_log_type_enabled(v105, v106))
        {
          uint64_t v107 = swift_slowAlloc();
          uint64_t v230 = swift_slowAlloc();
          *(_DWORD *)uint64_t v107 = 136446466;
          uint64_t v108 = sub_1001ECB4C();
          uint64_t v228 = sub_1001BEBDC(v108, v109, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          *(_WORD *)(v107 + 12) = 2082;
          id v110 = [v104 machineID];
          if (v110)
          {
            uint64_t v111 = v110;
            uint64_t v112 = sub_100222270();
            uint64_t v114 = v113;
          }
          else
          {
            uint64_t v112 = 0;
            uint64_t v114 = 0;
          }
          uint64_t v228 = v112;
          uint64_t v229 = v114;
          sub_1000046DC((uint64_t *)&unk_10029EC60);
          uint64_t v202 = sub_1002222C0();
          uint64_t v228 = sub_1001BEBDC(v202, v203, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          os_log_type_t v204 = v106;
          BOOL v205 = "Seen on full list machine ID isn't on full list, last modified %{public}s, ignoring: %{public}s";
LABEL_155:
          _os_log_impl((void *)&_mh_execute_header, v105, v204, v205, (uint8_t *)v107, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return;
        }
      }
      else
      {
        if (qword_100298ED8 != -1) {
          swift_once();
        }
        uint64_t v167 = sub_100222090();
        sub_100003CC8(v167, (uint64_t)qword_10029FC18);
        id v104 = v47;
        uint64_t v105 = sub_100222070();
        os_log_type_t v168 = sub_1002224E0();
        if (os_log_type_enabled(v105, v168))
        {
          uint64_t v107 = swift_slowAlloc();
          uint64_t v230 = swift_slowAlloc();
          *(_DWORD *)uint64_t v107 = 136446466;
          uint64_t v169 = sub_1001ECB4C();
          uint64_t v228 = sub_1001BEBDC(v169, v170, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          *(_WORD *)(v107 + 12) = 2082;
          id v171 = [v104 machineID];
          if (v171)
          {
            id v172 = v171;
            uint64_t v173 = sub_100222270();
            uint64_t v175 = v174;
          }
          else
          {
            uint64_t v173 = 0;
            uint64_t v175 = 0;
          }
          uint64_t v228 = v173;
          uint64_t v229 = v175;
          sub_1000046DC((uint64_t *)&unk_10029EC60);
          uint64_t v210 = sub_1002222C0();
          uint64_t v228 = sub_1001BEBDC(v210, v211, &v230);
          sub_100222690();

          swift_bridgeObjectRelease();
          os_log_type_t v204 = v168;
          BOOL v205 = "Allowed-but-unseen machine ID isn't on full list, last modified %{public}s, ignoring: %{public}s";
          goto LABEL_155;
        }
      }
LABEL_119:

      return;
    }
    if (v102)
    {
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v139 = sub_100222090();
      sub_100003CC8(v139, (uint64_t)qword_10029FC18);
      id v140 = v47;
      uint64_t v141 = sub_100222070();
      os_log_type_t v142 = sub_100222520();
      if (os_log_type_enabled(v141, v142))
      {
        uint64_t v143 = swift_slowAlloc();
        uint64_t v230 = swift_slowAlloc();
        *(_DWORD *)uint64_t v143 = 136446466;
        uint64_t v144 = sub_1001ECB4C();
        uint64_t v228 = sub_1001BEBDC(v144, v145, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        *(_WORD *)(v143 + 12) = 2082;
        id v146 = [v140 machineID];
        if (v146)
        {
          uint64_t v147 = v146;
          uint64_t v148 = sub_100222270();
          uint64_t v150 = v149;
        }
        else
        {
          uint64_t v148 = 0;
          uint64_t v150 = 0;
        }
        uint64_t v228 = v148;
        uint64_t v229 = v150;
        sub_1000046DC((uint64_t *)&unk_10029EC60);
        uint64_t v206 = sub_1002222C0();
        uint64_t v228 = sub_1001BEBDC(v206, v207, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        os_log_type_t v208 = v142;
        id v209 = "Seen on full list machine ID isn't on full list, last modified %{public}s, distrusting: %{public}s";
LABEL_150:
        _os_log_impl((void *)&_mh_execute_header, v141, v208, v209, (uint8_t *)v143, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v47 = v227;
        goto LABEL_151;
      }
    }
    else
    {
      if (qword_100298ED8 != -1) {
        swift_once();
      }
      uint64_t v176 = sub_100222090();
      sub_100003CC8(v176, (uint64_t)qword_10029FC18);
      id v140 = v47;
      uint64_t v141 = sub_100222070();
      os_log_type_t v177 = sub_100222520();
      if (os_log_type_enabled(v141, v177))
      {
        uint64_t v143 = swift_slowAlloc();
        uint64_t v230 = swift_slowAlloc();
        *(_DWORD *)uint64_t v143 = 136446466;
        uint64_t v178 = sub_1001ECB4C();
        uint64_t v228 = sub_1001BEBDC(v178, v179, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        *(_WORD *)(v143 + 12) = 2082;
        id v180 = [v140 machineID];
        if (v180)
        {
          uint64_t v181 = v180;
          uint64_t v182 = sub_100222270();
          uint64_t v184 = v183;
        }
        else
        {
          uint64_t v182 = 0;
          uint64_t v184 = 0;
        }
        uint64_t v228 = v182;
        uint64_t v229 = v184;
        sub_1000046DC((uint64_t *)&unk_10029EC60);
        uint64_t v212 = sub_1002222C0();
        uint64_t v228 = sub_1001BEBDC(v212, v213, &v230);
        sub_100222690();

        swift_bridgeObjectRelease();
        os_log_type_t v208 = v177;
        id v209 = "Allowed-but-unseen machine ID isn't on full list, last modified %{public}s, distrusting: %{public}s";
        goto LABEL_150;
      }
    }

LABEL_151:
    [v47 setStatus:2];
    uint64_t v214 = v224;
    sub_100221CA0();
    Class v215 = sub_100221C30().super.isa;
    (*((void (**)(char *, uint64_t))v226 + 1))(v214, v225);
    [v47 setModified:v215];

    id v189 = v222;
    goto LABEL_131;
  }
  swift_bridgeObjectRelease();
  if (qword_100298ED8 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_100222090();
  sub_100003CC8(v48, (uint64_t)qword_10029FC18);
  id v49 = v47;
  id v50 = sub_100222070();
  os_log_type_t v51 = sub_100222520();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v230 = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 136446466;
    uint64_t v53 = sub_1001ECB4C();
    uint64_t v228 = sub_1001BEBDC(v53, v54, &v230);
    sub_100222690();

    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2082;
    id v55 = [v49 machineID];
    if (v55)
    {
      uint64_t v56 = v55;
      uint64_t v57 = sub_100222270();
      uint64_t v59 = v58;
    }
    else
    {
      uint64_t v57 = 0;
      uint64_t v59 = 0;
    }
    uint64_t v228 = v57;
    uint64_t v229 = v59;
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v115 = sub_1002222C0();
    uint64_t v228 = sub_1001BEBDC(v115, v116, &v230);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "User initiated removal! machine ID last modified %{public}s; distrusting: %{public}s",
      (uint8_t *)v52,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if ([v49 status] != (id)2)
  {
LABEL_71:
    [v49 setStatus:2];
LABEL_130:
    id v187 = v224;
    sub_100221CA0();
    Class v188 = sub_100221C30().super.isa;
    (*((void (**)(char *, uint64_t))v226 + 1))(v187, v225);
    [v49 setModified:v188];

    id v189 = v222;
LABEL_131:
    *id v189 = 1;
  }
}

void sub_1001F1844(uint64_t *a1, uint64_t *a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6, const char *a7)
{
  id v38 = a7;
  uint64_t v39 = a6;
  os_log_type_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v11 = sub_100221CB0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v18 = *a2;
  swift_bridgeObjectRetain();
  char v19 = sub_100039584(v17, v16, v18);
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    v37[1] = v7;
    type metadata accessor for MachineMO();
    id v20 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:*(void *)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc)];
    NSString v21 = sub_100222260();
    [v20 setMachineID:v21];

    uint64_t v22 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
    [v20 setContainer:*(void *)(a3 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO)];
    [v20 setSeenOnFullList:1];
    sub_100221CA0();
    Class isa = sub_100221C30().super.isa;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    [v20 setModified:isa];

    [v20 setStatus:v39];
    uint64_t v24 = a3;
    if (qword_100298ED8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_100222090();
    sub_100003CC8(v25, (uint64_t)qword_10029FC18);
    id v26 = v20;
    uint64_t v27 = sub_100222070();
    os_log_type_t v28 = sub_100222520();
    if (os_log_type_enabled(v27, v28))
    {
      v37[0] = v22;
      uint64_t v39 = v24;
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136446210;
      id v30 = [v26 machineID];
      if (v30)
      {
        id v31 = v30;
        id v32 = (void *)sub_100222270();
        uint64_t v34 = v33;
      }
      else
      {
        id v32 = 0;
        uint64_t v34 = 0;
      }
      v42[0] = v32;
      v42[1] = v34;
      sub_1000046DC((uint64_t *)&unk_10029EC60);
      uint64_t v35 = sub_1002222C0();
      v42[0] = (id)sub_1001BEBDC(v35, v36, &v43);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, v38, v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v24 = v39;
      uint64_t v22 = v37[0];
    }
    else
    {
    }
    *os_log_type_t v40 = 1;
    [*(id *)(v24 + v22) addMachinesObject:v26];
    sub_100190858(v42, v26);
  }
}

void sub_1001F1C28(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8)
{
  uint64_t v34 = a7;
  id v33 = a8;
  uint64_t v14 = sub_100221CB0();
  uint64_t v31 = *(void *)(v14 - 8);
  uint64_t v32 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  unint64_t v19 = a1[1];
  uint64_t v20 = *a2;
  swift_bridgeObjectRetain();
  char v21 = sub_100039584(v18, v19, v20);
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0
    && (sub_100039584(v18, v19, a3) & 1) == 0
    && (!a4 || (sub_100039584(v18, v19, a4) & 1) == 0)
    && (!a5 || (sub_100039584(v18, v19, a5) & 1) == 0)
    && (!a6 || (sub_100039584(v18, v19, a6) & 1) == 0))
  {
    if (qword_100298ED8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_100222090();
    sub_100003CC8(v22, (uint64_t)qword_10029FC18);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_100222070();
    os_log_type_t v24 = sub_100222520();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1001BEBDC(v18, v19, &v36);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Peer machineID is unknown, beginning grace period: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    type metadata accessor for MachineMO();
    uint64_t v26 = v34;
    id v27 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:*(void *)(v34 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc)];
    NSString v28 = sub_100222260();
    [v27 setMachineID:v28];

    uint64_t v29 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
    [v27 setContainer:*(void *)(v26 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO)];
    [v27 setSeenOnFullList:0];
    sub_100221CA0();
    Class isa = sub_100221C30().super.isa;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v32);
    [v27 setModified:isa];

    [v27 setStatus:0];
    *id v33 = 1;
    [*(id *)(v26 + v29) addMachinesObject:v27];
  }
}

uint64_t sub_1001F2004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (qword_100298ED8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_10029FC18);
  swift_errorRetain();
  swift_errorRetain();
  id v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v14._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v14);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v11 = 0x203A726F727265;
    }
    else
    {
      uint64_t v11 = 0x73736563637573;
    }
    sub_1001BEBDC(v11, 0xE700000000000000, &v13);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "fetchAllowedMachineIDs complete: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD00000000000001ELL, 0x8000000100246600);
  return a4(a1, a2);
}

Swift::Int sub_1001F2278(uint64_t a1, void (*a2)(uint64_t, void))
{
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "machines"));
  if (v3)
  {
    uint64_t v4 = v3;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) != 0)
  {
    uint64_t v5 = &_swiftEmptySetSingleton;
    sub_100222700();
    if (sub_100222790())
    {
      type metadata accessor for MachineMO();
      do
      {
        swift_dynamicCast();
        if ([v20 status] == (id)1)
        {
          unint64_t v6 = *((void *)&_swiftEmptySetSingleton + 2);
          if (*((void *)&_swiftEmptySetSingleton + 3) <= v6) {
            sub_10018E924(v6 + 1);
          }
          Swift::Int result = sub_100222640(*((void *)&_swiftEmptySetSingleton + 5));
          id v8 = (char *)&_swiftEmptySetSingleton + 56;
          uint64_t v9 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
          unint64_t v10 = result & ~v9;
          unint64_t v11 = v10 >> 6;
          if (((-1 << v10) & ~*((void *)&_swiftEmptySetSingleton + (v10 >> 6) + 7)) != 0)
          {
            unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*((void *)&_swiftEmptySetSingleton + (v10 >> 6) + 7))) | v10 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v13 = 0;
            unint64_t v14 = (unint64_t)(63 - v9) >> 6;
            do
            {
              if (++v11 == v14 && (v13 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v15 = v11 == v14;
              if (v11 == v14) {
                unint64_t v11 = 0;
              }
              v13 |= v15;
              uint64_t v16 = *(void *)&v8[8 * v11];
            }
            while (v16 == -1);
            unint64_t v12 = __clz(__rbit64(~v16)) + (v11 << 6);
          }
          *(void *)&v8[(v12 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v12;
          *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v12) = v20;
          ++*((void *)&_swiftEmptySetSingleton + 2);
        }
        else
        {
        }
      }
      while (sub_100222790());
      uint64_t v5 = &_swiftEmptySetSingleton;
    }
    swift_release();
  }
  else
  {
    uint64_t v5 = (void *)sub_1001F29C0((uint64_t)&_swiftEmptySetSingleton, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1001F345C);
  }
  sub_1001E98DC((uint64_t)v5);
  uint64_t v18 = v17;
  swift_release();
  uint64_t v19 = sub_1001A0B30(v18);
  swift_bridgeObjectRelease();
  a2(v19, 0);
  return swift_bridgeObjectRelease();
}

void sub_1001F2580(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  id v6 = *(id *)(a2 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  NSString v7 = sub_100222260();
  id v24 = 0;
  id v8 = [v6 peerWithID:v7 error:&v24];

  if (v24)
  {
    id v9 = v24;

    swift_willThrow();
    if (qword_100298ED8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_100222090();
    sub_100003CC8(v10, (uint64_t)qword_10029FC18);
    swift_bridgeObjectRetain_n();
    id v11 = v9;
    unint64_t v12 = sub_100222070();
    os_log_type_t v13 = sub_100222500();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = a3;
      BOOL v15 = (void *)swift_slowAlloc();
      id v24 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446466;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v5, v4, (uint64_t *)&v24);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2114;
      id v16 = v11;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      sub_100222690();
      *BOOL v15 = v23;

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Error getting peer with machineID %{public}s: %{public}@", (uint8_t *)v14, 0x16u);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      a3 = v22;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else if (v8)
  {
    id v17 = [v8 permanentInfo];

    id v18 = [v17 machineID];
    uint64_t v19 = sub_100222270();
    uint64_t v21 = v20;

    *a3 = v19;
    a3[1] = v21;
    return;
  }
  *a3 = 0;
  a3[1] = 0;
}

uint64_t sub_1001F28E0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100221A30();
  if (!result || (uint64_t result = sub_100221A60(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_100221A50();
      sub_1002221A0();
      sub_1001F7AFC(&qword_10029FC50, (void (*)(uint64_t))&type metadata accessor for SHA256);
      return sub_100222160();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F29C0(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    id v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

void sub_1001F2B38(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v82 = a2;
  os_log_type_t v83 = a1;
  uint64_t v4 = sub_1000046DC(&qword_10029ED28);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v89 = (char *)&v81 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  BOOL v15 = (char *)&v81 - v14;
  __chkstk_darwin(v13, v16);
  id v18 = (char *)&v81 - v17;
  uint64_t v19 = sub_100221CB0();
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v85 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v88 = (char *)&v81 - v25;
  uint64_t v27 = __chkstk_darwin(v24, v26);
  id v87 = (char *)&v81 - v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v32 = (char *)&v81 - v31;
  __chkstk_darwin(v30, v33);
  unint64_t v86 = (char *)&v81 - v35;
  uint64_t v84 = 0;
  int64_t v36 = 0;
  uint64_t v92 = a3;
  uint64_t v39 = *(void *)(a3 + 56);
  uint64_t v38 = a3 + 56;
  uint64_t v37 = v39;
  uint64_t v40 = 1 << *(unsigned char *)(v38 - 24);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v42 = v41 & v37;
  uint64_t v90 = v38;
  int64_t v91 = (unint64_t)(v40 + 63) >> 6;
  uint64_t v97 = (void (**)(char *, char *, uint64_t))(v34 + 32);
  unint64_t v98 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
  uint64_t v95 = v8;
  unint64_t v96 = (unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  uint64_t v94 = (void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v43 = &selRef_setAllSelves_;
  while (v42)
  {
    uint64_t v99 = (v42 - 1) & v42;
    int64_t v100 = v36;
    unint64_t v44 = __clz(__rbit64(v42)) | (v36 << 6);
LABEL_21:
    uint64_t v49 = *(void *)(v92 + 48);
    unint64_t v93 = v44;
    id v50 = *(id *)(v49 + 8 * v44);
    if (![v50 v43[147]])
    {
      id v51 = [v50 modified];
      if (!v51)
      {
        uint64_t v63 = (uint64_t)v8;
        goto LABEL_45;
      }
      uint64_t v52 = v51;
      sub_100221C80();

      uint64_t v53 = *v97;
      (*v97)(v8, v32, v19);
      (*v98)(v8, 0, 1, v19);
      if ((*v96)(v8, 1, v19) == 1)
      {
        uint64_t v63 = (uint64_t)v8;
        goto LABEL_46;
      }
      unint64_t v54 = v85;
      v53(v85, v8, v19);
      sub_100221C50();
      uint64_t v55 = sub_100221C90();
      uint64_t v56 = *v94;
      (*v94)(v32, v19);
      uint64_t v57 = v54;
      uint64_t v43 = &selRef_setAllSelves_;
      v56(v57, v19);
      uint64_t v8 = v95;
      if (v55 != 1) {
        goto LABEL_47;
      }
    }
    if ([v50 v43[147]] == (id)3)
    {
      id v58 = [v50 modified];
      if (!v58)
      {
        uint64_t v63 = (uint64_t)v89;
LABEL_45:
        (*v98)((char *)v63, 1, 1, v19);
        goto LABEL_46;
      }
      uint64_t v59 = v58;
      uint64_t v60 = v18;
      uint64_t v61 = v15;
      sub_100221C80();

      os_log_type_t v62 = *v97;
      uint64_t v63 = (uint64_t)v89;
      (*v97)(v89, v32, v19);
      (*v98)((char *)v63, 0, 1, v19);
      if ((*v96)((char *)v63, 1, v19) == 1)
      {
        BOOL v15 = v61;
        id v18 = v60;
        uint64_t v43 = &selRef_setAllSelves_;
LABEL_46:
        sub_1001F6534(v63);
        goto LABEL_47;
      }
      uint64_t v64 = v88;
      v62(v88, (char *)v63, v19);
      sub_100221C50();
      uint64_t v65 = sub_100221C90();
      id v66 = *v94;
      (*v94)(v32, v19);
      v66(v64, v19);
      uint64_t v8 = v95;
      BOOL v15 = v61;
      id v18 = v60;
      uint64_t v43 = &selRef_setAllSelves_;
      if (v65 != 1) {
        goto LABEL_47;
      }
    }
    if ([v50 v43[147]] == (id)4)
    {
      id v67 = [v50 modified];
      if (!v67)
      {
        uint64_t v63 = (uint64_t)v15;
        goto LABEL_45;
      }
      uint64_t v68 = v67;
      sub_100221C80();

      uint64_t v69 = *v97;
      (*v97)(v15, v32, v19);
      (*v98)(v15, 0, 1, v19);
      if ((*v96)(v15, 1, v19) == 1)
      {
        uint64_t v63 = (uint64_t)v15;
        goto LABEL_46;
      }
      uint64_t v70 = v87;
      v69(v87, v15, v19);
      sub_100221C50();
      uint64_t v71 = sub_100221C90();
      id v72 = *v94;
      (*v94)(v32, v19);
      v72(v70, v19);
      uint64_t v43 = &selRef_setAllSelves_;
      uint64_t v8 = v95;
      if (v71 == 1) {
        goto LABEL_33;
      }
LABEL_47:

      int64_t v36 = v100;
      unint64_t v42 = v99;
LABEL_48:
      *(unint64_t *)((char *)v83 + ((v93 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v93;
      if (__OFADD__(v84++, 1)) {
        goto LABEL_54;
      }
    }
    else
    {
LABEL_33:
      if ([v50 v43[147]] == (id)5)
      {
        id v73 = [v50 modified];
        if (!v73)
        {
          uint64_t v63 = (uint64_t)v18;
          goto LABEL_45;
        }
        os_log_type_t v74 = v73;
        sub_100221C80();

        uint64_t v75 = *v97;
        (*v97)(v18, v32, v19);
        (*v98)(v18, 0, 1, v19);
        if ((*v96)(v18, 1, v19) == 1)
        {
          uint64_t v63 = (uint64_t)v18;
          goto LABEL_46;
        }
        id v76 = v86;
        v75(v86, v18, v19);
        sub_100221C50();
        uint64_t v77 = sub_100221C90();
        uint64_t v78 = *v94;
        (*v94)(v32, v19);
        v78(v76, v19);
        uint64_t v43 = &selRef_setAllSelves_;
        uint64_t v8 = v95;

        int64_t v36 = v100;
        unint64_t v42 = v99;
        if (v77 != 1) {
          goto LABEL_48;
        }
      }
      else
      {

        int64_t v36 = v100;
        unint64_t v42 = v99;
      }
    }
  }
  int64_t v45 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v45 >= v91) {
    goto LABEL_52;
  }
  unint64_t v46 = *(void *)(v90 + 8 * v45);
  int64_t v47 = v36 + 1;
  if (v46) {
    goto LABEL_20;
  }
  int64_t v47 = v36 + 2;
  if (v36 + 2 >= v91) {
    goto LABEL_52;
  }
  unint64_t v46 = *(void *)(v90 + 8 * v47);
  if (v46) {
    goto LABEL_20;
  }
  int64_t v47 = v36 + 3;
  if (v36 + 3 >= v91) {
    goto LABEL_52;
  }
  unint64_t v46 = *(void *)(v90 + 8 * v47);
  if (v46)
  {
LABEL_20:
    uint64_t v99 = (v46 - 1) & v46;
    int64_t v100 = v47;
    unint64_t v44 = __clz(__rbit64(v46)) + (v47 << 6);
    goto LABEL_21;
  }
  uint64_t v48 = v36 + 4;
  if (v36 + 4 >= v91)
  {
LABEL_52:
    uint64_t v80 = v92;
    swift_retain();
    sub_100190084(v83, v82, v84, v80);
    return;
  }
  unint64_t v46 = *(void *)(v90 + 8 * v48);
  if (v46)
  {
    int64_t v47 = v36 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v47 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v47 >= v91) {
      goto LABEL_52;
    }
    unint64_t v46 = *(void *)(v90 + 8 * v47);
    ++v48;
    if (v46) {
      goto LABEL_20;
    }
  }
LABEL_55:
  __break(1u);
}

unint64_t *sub_1001F345C(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    uint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) status];
    if (result == (unint64_t *)1)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100190084(v4, a2, v5, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Int sub_1001F35FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001F4A64(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1001F3668(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1001F3668(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1002229F0(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1001F3D54(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  unsigned int v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      int64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      id v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1001F3E24((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1001F4334((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          int64_t v100 = &v97[16 * v96 + 32];
          *(void *)int64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_100222400();
    *(void *)(v7 + 16) = v6;
    id v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  int64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    int64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_100222A30();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_100222A30()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_1001F40C0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      int64_t v11 = sub_1001F40C0((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        os_log_type_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        unint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1001F3E24((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        int64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        unint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_100222A30() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_100222950();
  __break(1u);
  return result;
}

uint64_t sub_1001F3D54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = sub_100222A30(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F3E24(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        id v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_100222A30() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)id v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)id v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    int64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_100222A30() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_1001F4278((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1002229D0();
  __break(1u);
  return result;
}

char *sub_1001F40C0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000046DC(&qword_10029FC68);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1001F41BC(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1002229D0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1001F4278(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1002229D0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1001F4334(uint64_t a1)
{
  return sub_1001F40C0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001F434C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1001F43D4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1001F4478(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1001F455C(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_1001F4574(uint64_t a1, int a2, char a3, uint64_t a4, void (*a5)(void))
{
  unint64_t v8 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_100222780();
      a5(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_100222730() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100222740();
  a5(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v5 = v18;
  swift_unknownObjectRelease();
  Swift::Int v9 = sub_100222640(*(void *)(a4 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v8);
  char v12 = sub_100222650();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v8 = (v8 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_23;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v8);
      char v15 = sub_100222650();
    }
    while ((v15 & 1) == 0);
  }

LABEL_17:
  uint64_t v16 = *(void **)(*(void *)(a4 + 48) + 8 * v8);

  id v17 = v16;
}

void sub_1001F47D8(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_100222780();
      sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_100222730() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100222740();
  sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = sub_100222640(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = sub_100222650();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = sub_100222650();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  id v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_1001F4A50(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1001F4A64(uint64_t a1)
{
  return sub_10018D7A4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001F4A78(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v23 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v24 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  id v9 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v8++, 1)) {
      break;
    }
    if (v8 >= v24) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v23 + 8 * v8);
    if (!v13)
    {
      int64_t v14 = v8 + 1;
      if (v8 + 1 >= v24) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_15;
      }
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v24) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_15;
      }
      int64_t v14 = v8 + 3;
      if (v8 + 3 >= v24) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13)
      {
LABEL_15:
        int64_t v8 = v14;
      }
      else
      {
        int64_t v22 = v8 + 4;
        if (v8 + 4 >= v24)
        {
LABEL_31:
          swift_release();
          return (uint64_t)v9;
        }
        unint64_t v13 = *(void *)(v23 + 8 * v22);
        for (v8 += 4; !v13; ++v22)
        {
          int64_t v8 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_34;
          }
          if (v8 >= v24) {
            goto LABEL_31;
          }
          unint64_t v13 = *(void *)(v23 + 8 * v8);
        }
      }
    }
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_17:
    id v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v16 = v15[1];
    v27[0] = *v15;
    v27[1] = v16;
    swift_bridgeObjectRetain();
    sub_1001F2580(v27, v28, &v25);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v9;
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = v26;
    if (v26)
    {
      uint64_t v18 = v25;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100187FB4(0, *((void *)v9 + 2) + 1, 1, v9);
        id v9 = (char *)result;
      }
      unint64_t v20 = *((void *)v9 + 2);
      unint64_t v19 = *((void *)v9 + 3);
      if (v20 >= v19 >> 1)
      {
        uint64_t result = (uint64_t)sub_100187FB4((char *)(v19 > 1), v20 + 1, 1, v9);
        id v9 = (char *)result;
      }
      *((void *)v9 + 2) = v20 + 1;
      uint64_t v21 = &v9[16 * v20];
      *((void *)v21 + 4) = v18;
      *((void *)v21 + 5) = v17;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void sub_1001F4CE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v26 = a3;
  uint64_t v25 = a2;
  uint64_t v4 = sub_100221CB0();
  __chkstk_darwin(v4, v5);
  int64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v23 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  uint64_t v12 = v11 & v9;
  int64_t v24 = (unint64_t)(v10 + 63) >> 6;
  unint64_t v13 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      v12 &= v12 - 1;
      goto LABEL_5;
    }
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24) {
      goto LABEL_23;
    }
    uint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v19 + 1;
      if (v19 + 1 >= v24) {
        goto LABEL_23;
      }
      uint64_t v20 = *(void *)(v23 + 8 * v14);
      if (!v20)
      {
        int64_t v14 = v19 + 2;
        if (v19 + 2 >= v24) {
          goto LABEL_23;
        }
        uint64_t v20 = *(void *)(v23 + 8 * v14);
        if (!v20)
        {
          int64_t v14 = v19 + 3;
          if (v19 + 3 >= v24) {
            goto LABEL_23;
          }
          uint64_t v20 = *(void *)(v23 + 8 * v14);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v12 = (v20 - 1) & v20;
LABEL_5:
    type metadata accessor for MachineMO();
    id v15 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_bridgeObjectRetain();
    id v16 = [v15 initWithContext:v25];
    NSString v17 = sub_100222260();
    [v16 setMachineID:v17];

    [v16 setSeenOnFullList:1];
    [v16 setStatus:1];
    sub_100221CA0();
    Class isa = sub_100221C30().super.isa;
    (*v13)(v8, v4);
    [v16 setModified:isa];

    [v26 addMachinesObject:v16];
    swift_bridgeObjectRelease();
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release();
    return;
  }
  uint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v14 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v14 >= v24) {
      goto LABEL_23;
    }
    uint64_t v20 = *(void *)(v23 + 8 * v14);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1001F4FF0(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v30 = a7;
  uint64_t v26 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a1 + 56);
  int64_t v27 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v24 = v23[1];
    v29[0] = *v23;
    v29[1] = v24;
    swift_bridgeObjectRetain();
    sub_1001F1844(v29, a2, a3, a4, a5, a6, v30);
    if (v7)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v27) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v26 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v27) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v26 + 8 * v22);
      if (v21) {
        goto LABEL_14;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v27) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v26 + 8 * v22);
      if (v21) {
        goto LABEL_14;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v27) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v26 + 8 * v22);
      if (v21)
      {
LABEL_14:
        int64_t v17 = v22;
        goto LABEL_15;
      }
      int64_t v25 = v17 + 4;
      if (v17 + 4 >= v27) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v26 + 8 * v25);
      v17 += 4;
      if (!v21) {
        break;
      }
    }
LABEL_15:
    unint64_t v15 = (v21 - 1) & v21;
  }
  while (1)
  {
    int64_t v17 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v17 >= v27) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v26 + 8 * v17);
    ++v25;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1001F51F8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8)
{
  Swift::Int v32 = a8;
  uint64_t v27 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a1 + 56);
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v25 = v24[1];
    v31[0] = *v24;
    v31[1] = v25;
    swift_bridgeObjectRetain();
    sub_1001F1C28(v31, a2, a3, a4, a5, a6, a7, v32);
    if (v8)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v28) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    if (!v22)
    {
      int64_t v23 = v18 + 1;
      if (v18 + 1 >= v28) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v27 + 8 * v23);
      if (v22) {
        goto LABEL_14;
      }
      int64_t v23 = v18 + 2;
      if (v18 + 2 >= v28) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v27 + 8 * v23);
      if (v22) {
        goto LABEL_14;
      }
      int64_t v23 = v18 + 3;
      if (v18 + 3 >= v28) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v27 + 8 * v23);
      if (v22)
      {
LABEL_14:
        int64_t v18 = v23;
        goto LABEL_15;
      }
      int64_t v26 = v18 + 4;
      if (v18 + 4 >= v28) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v27 + 8 * v26);
      v18 += 4;
      if (!v22) {
        break;
      }
    }
LABEL_15:
    unint64_t v16 = (v22 - 1) & v22;
  }
  while (1)
  {
    int64_t v18 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v18 >= v28) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    ++v26;
    if (v22) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1001F5404(void *a1, unsigned char *a2, const char *a3, const char *a4)
{
  uint64_t v8 = sub_100221CB0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1001EC8EC())
  {
    if (qword_100298ED8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_10029FC18);
    id v44 = a1;
    uint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_1002224E0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      uint64_t v17 = sub_1001ECB4C();
      uint64_t v45 = sub_1001BEBDC(v17, v18, &v47);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      id v19 = [v44 machineID];
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = sub_100222270();
        uint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v23 = 0;
      }
      uint64_t v45 = v21;
      uint64_t v46 = v23;
      sub_1000046DC((uint64_t *)&unk_10029EC60);
      uint64_t v37 = sub_1002222C0();
      uint64_t v45 = sub_1001BEBDC(v37, v38, &v47);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, a3, (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v36 = v44;
    }
  }
  else
  {
    if (qword_100298ED8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100222090();
    sub_100003CC8(v24, (uint64_t)qword_10029FC18);
    id v25 = a1;
    int64_t v26 = sub_100222070();
    os_log_type_t v27 = sub_100222520();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v43 = a4;
      id v44 = a2;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v47 = v42;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v29 = sub_1001ECB4C();
      uint64_t v45 = sub_1001BEBDC(v29, v30, &v47);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      id v31 = [v25 machineID];
      if (v31)
      {
        Swift::Int v32 = v31;
        uint64_t v33 = sub_100222270();
        uint64_t v35 = v34;
      }
      else
      {
        uint64_t v33 = 0;
        uint64_t v35 = 0;
      }
      uint64_t v45 = v33;
      uint64_t v46 = v35;
      sub_1000046DC((uint64_t *)&unk_10029EC60);
      uint64_t v39 = sub_1002222C0();
      uint64_t v45 = sub_1001BEBDC(v39, v40, &v47);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, v43, (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a2 = v44;
    }
    else
    {
    }
    [v25 setStatus:2];
    sub_100221CA0();
    Class isa = sub_100221C30().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    [v25 setModified:isa];

    *a2 = 1;
  }
}

void sub_1001F5990(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8, uint64_t *a9)
{
  uint64_t v10 = v9;
  uint64_t v11 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222490();
    uint64_t v11 = v35;
    uint64_t v27 = v36;
    uint64_t v12 = v37;
    int64_t v13 = v38;
    unint64_t v14 = v39;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v27 = a1 + 56;
    uint64_t v16 = ~v15;
    uint64_t v17 = -v15;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v14 = v18 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v12 = v16;
    int64_t v13 = 0;
  }
  int64_t v26 = (unint64_t)(v12 + 64) >> 6;
  if ((v11 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_100222790())
  {
    type metadata accessor for MachineMO();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v19 = v40;
    swift_unknownObjectRelease();
    int64_t v20 = v13;
    uint64_t v21 = v14;
    while (v19)
    {
      id v40 = v19;
      sub_1001EF8B0(&v40, a2, a3, a4, a5, a6, a7, a8, a9);

      if (v10) {
        break;
      }
      int64_t v13 = v20;
      unint64_t v14 = v21;
      if (v11 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v14)
      {
        uint64_t v21 = (v14 - 1) & v14;
        unint64_t v22 = __clz(__rbit64(v14)) | (v13 << 6);
        int64_t v20 = v13;
      }
      else
      {
        int64_t v20 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
          return;
        }
        if (v20 >= v26) {
          break;
        }
        unint64_t v23 = *(void *)(v27 + 8 * v20);
        if (!v23)
        {
          int64_t v24 = v13 + 2;
          if (v13 + 2 >= v26) {
            break;
          }
          unint64_t v23 = *(void *)(v27 + 8 * v24);
          if (v23) {
            goto LABEL_22;
          }
          int64_t v24 = v13 + 3;
          if (v13 + 3 >= v26) {
            break;
          }
          unint64_t v23 = *(void *)(v27 + 8 * v24);
          if (v23) {
            goto LABEL_22;
          }
          int64_t v24 = v13 + 4;
          if (v13 + 4 >= v26) {
            break;
          }
          unint64_t v23 = *(void *)(v27 + 8 * v24);
          if (v23)
          {
LABEL_22:
            int64_t v20 = v24;
          }
          else
          {
            int64_t v20 = v13 + 5;
            if (v13 + 5 >= v26) {
              break;
            }
            unint64_t v23 = *(void *)(v27 + 8 * v20);
            if (!v23)
            {
              int64_t v25 = v13 + 6;
              while (v26 != v25)
              {
                unint64_t v23 = *(void *)(v27 + 8 * v25++);
                if (v23)
                {
                  int64_t v20 = v25 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v21 = (v23 - 1) & v23;
        unint64_t v22 = __clz(__rbit64(v23)) + (v20 << 6);
      }
      id v19 = *(id *)(*(void *)(v11 + 48) + 8 * v22);
    }
  }
  sub_1001B30B0();
}

uint64_t sub_1001F5CB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v31 = (unint64_t *)result;
  uint64_t v32 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a3 + 56);
  uint64_t v6 = a3 + 56;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 24);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v7;
  uint64_t v33 = v6;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v36 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      if (!*(void *)(a4 + 16)) {
        goto LABEL_38;
      }
LABEL_23:
      uint64_t v17 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v13);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      sub_100222B00();
      swift_bridgeObjectRetain();
      sub_1002222E0();
      Swift::Int v20 = sub_100222B20();
      uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v22 = v20 & ~v21;
      if (((*(void *)(v36 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_37;
      }
      uint64_t v23 = *(void *)(a4 + 48);
      int64_t v24 = (void *)(v23 + 16 * v22);
      BOOL v25 = *v24 == v19 && v24[1] == v18;
      if (!v25 && (sub_100222A30() & 1) == 0)
      {
        uint64_t v26 = ~v21;
        while (1)
        {
          unint64_t v22 = (v22 + 1) & v26;
          if (((*(void *)(v36 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            break;
          }
          uint64_t v27 = (void *)(v23 + 16 * v22);
          BOOL v28 = *v27 == v19 && v27[1] == v18;
          if (v28 || (sub_100222A30() & 1) != 0) {
            goto LABEL_5;
          }
        }
LABEL_37:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease();
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v14 >= v34) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v33 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v34) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v33 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v34) {
          goto LABEL_41;
        }
        unint64_t v15 = *(void *)(v33 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (*(void *)(a4 + 16)) {
      goto LABEL_23;
    }
LABEL_38:
    *(unint64_t *)((char *)v31 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v32++, 1))
    {
      __break(1u);
LABEL_41:
      swift_retain();
      return sub_10018FDEC(v31, a2, v32, a3);
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v34) {
    goto LABEL_41;
  }
  unint64_t v15 = *(void *)(v33 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v34) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v33 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1001F5F7C(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001F5CB8((uint64_t)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001F5CB8((uint64_t)v12, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

id sub_1001F6148(void *a1, void *a2)
{
  id v4 = [a1 machines];
  if (v4)
  {
    char v5 = v4;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();
  }
  swift_bridgeObjectRelease();
  sub_1001E98DC((uint64_t)&_swiftEmptySetSingleton);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1001A0B30(v7);
  swift_bridgeObjectRelease();
  id v9 = [a1 allowedMachineIDs];
  if (v9)
  {
    uint64_t v10 = v9;
    sub_100222430();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1001F5F7C((uint64_t)&_swiftEmptySetSingleton, v8);
  swift_bridgeObjectRelease();
  id v12 = a2;
  id v13 = a1;
  sub_1001F4CE4(v11, (uint64_t)v12, v13);
  swift_release();

  Class isa = sub_100222420().super.isa;
  [v13 setAllowedMachineIDs:isa];

  id v17 = 0;
  if ([v12 save:&v17]) {
    return v17;
  }
  id v16 = v17;
  sub_100221B40();

  return (id)swift_willThrow();
}

id sub_1001F63A4(void *a1, void *a2)
{
  id v3 = [a1 machines];
  if (v3)
  {
    id v4 = v3;
    type metadata accessor for MachineMO();
    sub_1001F7AFC(&qword_10029EB78, (void (*)(uint64_t))type metadata accessor for MachineMO);
    sub_100222430();
  }
  swift_bridgeObjectRelease();
  sub_1001EB754((uint64_t)&_swiftEmptySetSingleton);
  if ((v5 & 1) == 0) {
    return (id)swift_bridgeObjectRelease();
  }
  sub_1001E9C5C((uint64_t)&_swiftEmptySetSingleton);
  swift_bridgeObjectRelease();
  id v8 = 0;
  if ([a2 save:&v8]) {
    return v8;
  }
  id v7 = v8;
  sub_100221B40();

  return (id)swift_willThrow();
}

uint64_t sub_1001F6534(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_10029ED28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F6594()
{
  uint64_t v1 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "honorIDMSListChanges"));
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = sub_100222270();
    uint64_t v6 = v5;

    if (v4 == 5457241 && v6 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      char v16 = 1;
      return v16 & 1;
    }
    char v8 = sub_100222A30();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_20;
    }
  }
  id v9 = [*(id *)(v0 + v1) honorIDMSListChanges];
  if (!v9) {
    goto LABEL_13;
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_100222270();
  uint64_t v13 = v12;

  if (v11 == 20302 && v13 == 0xE200000000000000) {
    goto LABEL_21;
  }
  char v15 = sub_100222A30();
  swift_bridgeObjectRelease();
  char v16 = 0;
  if ((v15 & 1) == 0)
  {
LABEL_13:
    id v17 = [*(id *)(v0 + v1) honorIDMSListChanges];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_100222270();
      uint64_t v21 = v20;

      if (v19 != 0x4E574F4E4B4E55 || v21 != 0xE700000000000000)
      {
        char v23 = sub_100222A30();
        swift_bridgeObjectRelease();
        char v16 = v23 ^ 1;
        return v16 & 1;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      char v16 = 0;
      return v16 & 1;
    }
LABEL_20:
    char v16 = 1;
  }
  return v16 & 1;
}

uint64_t sub_1001F676C(uint64_t a1, uint64_t a2)
{
  return sub_1001F2004(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24));
}

uint64_t sub_1001F6778()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

Swift::Int sub_1001F67B8()
{
  return sub_1001F2278(*(void *)(v0 + 16), *(void (**)(uint64_t, void))(v0 + 24));
}

uint64_t sub_1001F67C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F67D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001F67E4()
{
  return swift_release();
}

uint64_t sub_1001F67EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  type metadata accessor for Container.SemaphoreWrapper();
  swift_allocObject();
  char v23 = v19;
  uint64_t v24 = sub_1001984DC(v23, 0xD0000000000000E7, 0x8000000100246620);
  char v48 = v23;

  BOOL v25 = (void *)swift_allocObject();
  _OWORD v25[2] = v24;
  v25[3] = a18;
  uint64_t v47 = v25;
  v25[4] = a19;
  uint64_t v26 = qword_100298ED8;
  swift_retain();
  swift_retain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = a16;
  uint64_t v28 = a10;
  uint64_t v29 = sub_100222090();
  sub_100003CC8(v29, (uint64_t)qword_10029FC18);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v30 = sub_100222070();
  os_log_type_t v31 = sub_1002224E0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_100222450();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_1001BEBDC(v33, v35, &v52);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    uint64_t aBlock = a6;
    uint64_t v54 = a7;
    swift_bridgeObjectRetain();
    sub_1000046DC((uint64_t *)&unk_10029EC60);
    uint64_t v36 = sub_1002222C0();
    uint64_t aBlock = sub_1001BEBDC(v36, v37, &v52);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    uint64_t v27 = a16;
    uint64_t v28 = a10;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Setting allowed machine IDs: %{public}s, version %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v44 = *(id *)&v48[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v48;
  *(void *)(v38 + 24) = a2;
  *(void *)(v38 + 32) = a3;
  *(void *)(v38 + 40) = a4;
  *(void *)(v38 + 48) = a1;
  *(void *)(v38 + 56) = a14;
  *(void *)(v38 + 64) = a15;
  *(void *)(v38 + 72) = a12;
  *(void *)(v38 + 80) = a13;
  *(void *)(v38 + 88) = a8;
  *(void *)(v38 + 96) = a9;
  *(void *)(v38 + 104) = v28;
  *(void *)(v38 + 112) = a11;
  *(void *)(v38 + 120) = v27;
  *(void *)(v38 + 128) = a17;
  *(unsigned char *)(v38 + 136) = a5 & 1;
  *(void *)(v38 + 144) = a6;
  *(void *)(v38 + 152) = a7;
  *(void *)(v38 + 160) = sub_1001F6D48;
  *(void *)(v38 + 168) = v47;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1001F6DE4;
  *(void *)(v39 + 24) = v38;
  uint64_t v57 = sub_1000439DC;
  uint64_t v58 = v39;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v54 = 1107296256;
  BOOL v55 = sub_100112F58;
  unint64_t v56 = &unk_1002895B8;
  id v40 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  unint64_t v41 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  [v44 performBlockAndWait:v40];
  swift_release();
  swift_release();
  _Block_release(v40);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F6D48(char a1, uint64_t a2)
{
  return sub_1001ED894(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, uint64_t))(v2 + 24));
}

uint64_t sub_1001F6D54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_1001F6DE4()
{
  LOBYTE(v2) = *(unsigned char *)(v0 + 136);
  return sub_1001EDB08(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), v2, *(void *)(v0 + 144), *(void **)(v0 + 152), *(void (**)(uint64_t, uint64_t))(v0 + 160),
           *(void *)(v0 + 168));
}

uint64_t sub_1001F6E44()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F6E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v62 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & *(void *)(a1 + 56);
  int64_t v63 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v65 = a4 + 56;
  uint64_t v66 = a2 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_22:
    uint64_t v24 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v20);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    if (a2 && *(void *)(a2 + 16))
    {
      sub_100222B00();
      swift_bridgeObjectRetain();
      sub_1002222E0();
      Swift::Int v27 = sub_100222B20();
      uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v29 = v27 & ~v28;
      if ((*(void *)(v66 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
      {
        uint64_t v30 = *(void *)(a2 + 48);
        os_log_type_t v31 = (void *)(v30 + 16 * v29);
        BOOL v32 = *v31 == v25 && v31[1] == v26;
        if (v32 || (sub_100222A30() & 1) != 0)
        {
LABEL_60:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_61;
        }
        uint64_t v33 = ~v28;
        while (1)
        {
          unint64_t v29 = (v29 + 1) & v33;
          if (((*(void *)(v66 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
            break;
          }
          unint64_t v34 = (void *)(v30 + 16 * v29);
          BOOL v35 = *v34 == v25 && v34[1] == v26;
          if (v35 || (sub_100222A30() & 1) != 0) {
            goto LABEL_60;
          }
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    if (a3)
    {
      sub_1000046DC(&qword_10029FC40);
      sub_1001B46CC(&qword_10029FC48, &qword_10029FC40);
      if (sub_1002224B0()) {
        goto LABEL_60;
      }
    }
    if (a4)
    {
      if (*(void *)(a4 + 16))
      {
        sub_100222B00();
        sub_1002222E0();
        Swift::Int v36 = sub_100222B20();
        uint64_t v37 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v38 = v36 & ~v37;
        if ((*(void *)(v65 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
        {
          uint64_t v39 = *(void *)(a4 + 48);
          id v40 = (void *)(v39 + 16 * v38);
          BOOL v41 = *v40 == v25 && v40[1] == v26;
          if (v41 || (sub_100222A30() & 1) != 0) {
            goto LABEL_59;
          }
          uint64_t v42 = ~v37;
          unint64_t v43 = (v38 + 1) & v42;
          if ((*(void *)(v65 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43))
          {
            id v44 = (void *)(v39 + 16 * v43);
            if (*v44 != v25 || v44[1] != v26)
            {
              do
              {
                if (sub_100222A30()) {
                  break;
                }
                unint64_t v43 = (v43 + 1) & v42;
                if (((*(void *)(v65 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
                  goto LABEL_5;
                }
                uint64_t v45 = (void *)(v39 + 16 * v43);
              }
              while (*v45 != v25 || v45[1] != v26);
            }
LABEL_59:
            swift_release();
            swift_bridgeObjectRelease();
LABEL_61:
            uint64_t v47 = sub_100222270();
            uint64_t v49 = v48;
            uint64_t v50 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
            objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
            swift_bridgeObjectRetain();
            id v51 = v50;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v57 = v51;
            uint64_t v52 = 1;
            id v53 = sub_100062F10(0, a9, a10, a5, a6, a7, a8, v47, v49, a11 & 1, 1, v57);
            uint64_t v54 = self;
            sub_100042D4C();
            swift_allocError();
            *(_OWORD *)uint64_t v55 = xmmword_100231B00;
            *(unsigned char *)(v55 + 16) = 13;
            unint64_t v56 = (void *)sub_100221B30();
            swift_errorRelease();
            [v54 sendMetricWithEvent:v53 success:0 error:v56];

            return v52;
          }
        }
      }
    }
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v21 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v21 >= v63) {
    goto LABEL_63;
  }
  unint64_t v22 = *(void *)(v62 + 8 * v21);
  ++v18;
  if (v22) {
    goto LABEL_21;
  }
  int64_t v18 = v21 + 1;
  if (v21 + 1 >= v63) {
    goto LABEL_63;
  }
  unint64_t v22 = *(void *)(v62 + 8 * v18);
  if (v22) {
    goto LABEL_21;
  }
  int64_t v18 = v21 + 2;
  if (v21 + 2 >= v63) {
    goto LABEL_63;
  }
  unint64_t v22 = *(void *)(v62 + 8 * v18);
  if (v22)
  {
LABEL_21:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v63)
  {
LABEL_63:
    swift_release();
    return 0;
  }
  unint64_t v22 = *(void *)(v62 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v63) {
      goto LABEL_63;
    }
    unint64_t v22 = *(void *)(v62 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1001F73B8()
{
  uint64_t v0 = sub_1002221A0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  *(void *)&long long v52 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100222190();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  char v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v49 = (char *)&v44 - v10;
  uint64_t v11 = sub_1002222B0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  uint64_t v16 = swift_bridgeObjectRetain();
  id v17 = sub_10018CDB4(v16);
  swift_bridgeObjectRelease();
  *(void *)&long long v53 = v17;
  sub_1001F35FC((uint64_t *)&v53);
  uint64_t v46 = 0;
  uint64_t v47 = v8;
  uint64_t v48 = v1;
  uint64_t v18 = *(void *)(v53 + 16);
  if (v18)
  {
    uint64_t v19 = v0;
    unint64_t v20 = (void **)(v53 + 40);
    do
    {
      uint64_t v22 = (uint64_t)*(v20 - 1);
      int64_t v21 = *v20;
      swift_bridgeObjectRetain();
      v56._countAndFlagsBits = v22;
      v56._object = v21;
      sub_100222310(v56);
      swift_bridgeObjectRelease();
      v20 += 2;
      --v18;
    }
    while (v18);
    swift_release();
    uint64_t v0 = v19;
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_1002222A0();
  uint64_t v23 = sub_100222280();
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (v25 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1001F7AFC(&qword_10029FC50, (void (*)(uint64_t))&type metadata accessor for SHA256);
    uint64_t v27 = v52;
    sub_100222180();
    unint64_t v45 = v25;
    switch(v25 >> 62)
    {
      case 1uLL:
        if (v23 >> 32 < (int)v23) {
          goto LABEL_32;
        }
        sub_1000059E8(v23, v25);
        sub_1001F28E0((int)v23, v23 >> 32);
        break;
      case 2uLL:
        uint64_t v28 = *(void *)(v23 + 16);
        uint64_t v29 = *(void *)(v23 + 24);
        sub_10004BDEC(v23, v25);
        swift_retain();
        swift_retain();
        sub_1001F28E0(v28, v29);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)&v53 + 6) = 0;
        *(void *)&long long v53 = 0;
        goto LABEL_12;
      default:
        *(void *)&long long v53 = v23;
        WORD4(v53) = v25;
        BYTE10(v53) = BYTE2(v25);
        BYTE11(v53) = BYTE3(v25);
        BYTE12(v53) = BYTE4(v25);
        BYTE13(v53) = BYTE5(v25);
LABEL_12:
        sub_100222160();
        break;
    }
    sub_100039FCC(v23, v25);
    uint64_t v30 = v49;
    sub_100222170();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v27, v0);
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v30, v51);
    sub_1001F7AFC(&qword_10029FC58, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
    sub_100222380();
    long long v31 = v53;
    uint64_t v32 = *(void *)(v53 + 16);
    uint64_t v44 = v23;
    if (*((void *)&v53 + 1) != v32)
    {
      if (*((uint64_t *)&v53 + 1) < v32)
      {
        uint64_t v33 = (char *)_swiftEmptyArrayStorage;
        long long v52 = xmmword_100229540;
        unint64_t v35 = *((void *)&v53 + 1);
        while ((*((void *)&v31 + 1) & 0x8000000000000000) == 0)
        {
          if (v35 >= *(void *)(v31 + 16)) {
            goto LABEL_30;
          }
          char v36 = *(unsigned char *)(v31 + 32 + v35);
          sub_1000046DC(&qword_100299578);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = v52;
          *(void *)(v37 + 56) = &type metadata for UInt8;
          *(void *)(v37 + 64) = &protocol witness table for UInt8;
          *(unsigned char *)(v37 + 32) = v36;
          uint64_t v38 = sub_100222290();
          uint64_t v40 = v39;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v33 = sub_100187FB4(0, *((void *)v33 + 2) + 1, 1, v33);
          }
          unint64_t v42 = *((void *)v33 + 2);
          unint64_t v41 = *((void *)v33 + 3);
          if (v42 >= v41 >> 1) {
            uint64_t v33 = sub_100187FB4((char *)(v41 > 1), v42 + 1, 1, v33);
          }
          ++v35;
          *((void *)v33 + 2) = v42 + 1;
          unint64_t v43 = &v33[16 * v42];
          *((void *)v43 + 4) = v38;
          *((void *)v43 + 5) = v40;
          if (v32 == v35) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_30:
        __break(1u);
      }
      __break(1u);
LABEL_32:
      __break(1u);
    }
    uint64_t v33 = (char *)_swiftEmptyArrayStorage;
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v53 = v33;
    sub_1000046DC(&qword_10029F0A0);
    sub_1001B46CC(&qword_10029FC60, &qword_10029F0A0);
    uint64_t v26 = sub_100222210();
    sub_100039FCC(v44, v45);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
  }
  return v26;
}

uint64_t sub_1001F7AFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1001F7B4C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v10 = (uint64_t *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_secret];
  *uint64_t v10 = a1;
  v10[1] = a2;
  uint64_t v11 = (uint64_t *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_bottleSalt];
  *uint64_t v11 = a3;
  v11[1] = a4;
  uint64_t v12 = v4;
  sub_1000059E8(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1001FA370(1, a1, a2, a3, a4);
  if (v5)
  {
    sub_100005A40(a1, a2);
    swift_bridgeObjectRelease();
    type metadata accessor for EscrowKeys();
    sub_100005A40(*v10, v10[1]);

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    unint64_t v15 = v14;
    BOOL v72 = v12;
    uint64_t v16 = v13;
    SecKeyRef v17 = sub_1001FA660();
    unint64_t v66 = v15;
    id v18 = [objc_allocWithZone((Class)_SFECKeyPair) initWithSecKey:v17];

    uint64_t v65 = OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_encryptionKey;
    *(void *)&v72[OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_encryptionKey] = v18;
    uint64_t v64 = sub_1001FA370(0, a1, a2, a3, a4);
    unint64_t v63 = v20;
    SecKeyRef v21 = sub_1001FA660();
    id v22 = [objc_allocWithZone((Class)_SFECKeyPair) initWithSecKey:v21];

    uint64_t v23 = OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_signingKey;
    *(void *)&v72[OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_signingKey] = v22;
    uint64_t v24 = v23;
    uint64_t v25 = sub_1001FA370(2, a1, a2, a3, a4);
    unint64_t v27 = v26;
    uint64_t v62 = v24;
    swift_bridgeObjectRelease();
    id v61 = self;
    id v28 = objc_msgSend(objc_allocWithZone((Class)_SFAESKeySpecifier), "initWithBitSize:", objc_msgSend(v61, "aes256BitSize"));
    id v29 = objc_allocWithZone((Class)_SFAESKey);
    sub_1000059E8(v25, v27);
    id v30 = sub_100006F4C(v25, v27, (uint64_t)v28);
    uint64_t v57 = v28;
    sub_100005A40(v25, v27);
    long long v31 = v72;
    uint64_t v56 = OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_symmetricKey;
    *(void *)&v72[OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_symmetricKey] = v30;
    uint64_t v58 = v25;
    unint64_t v59 = v27;
    id v32 = objc_msgSend(objc_msgSend(*(id *)&v31[v62], "publicKey"), "spki");
    swift_unknownObjectRelease();
    uint64_t v33 = sub_100221BF0();
    unint64_t v35 = v34;

    uint64_t v36 = ccsha384_di();
    uint64_t v70 = sub_100006CCC((uint64_t)objc_msgSend(v61, "ccsha384_diSize"));
    unint64_t v71 = v37;
    uint64_t v68 = v33;
    unint64_t v69 = v35;
    unint64_t v60 = v35;
    sub_1000059E8(v33, v35);
    sub_1001F941C(&v70, &v68, v36);
    uint64_t v38 = v70;
    unint64_t v39 = v71;
    sub_1000059E8(v70, v71);
    uint64_t v40 = sub_100221BE0(0);
    uint64_t v42 = v41;
    sub_100005A40(v38, v39);
    sub_100005A40(v38, v39);
    sub_100005A40(v68, v69);
    sub_100005A40(v33, v60);
    id v43 = [*(id *)&v72[v62] keyData];
    uint64_t v44 = sub_100221BF0();
    unint64_t v46 = v45;

    sub_1001FAC00(v44, v46, v40, v42);
    sub_100005A40(v44, v46);
    id v47 = [*(id *)&v72[v65] keyData];
    uint64_t v48 = sub_100221BF0();
    unint64_t v50 = v49;

    sub_1001FA95C(v48, v50, v40, v42);
    sub_100005A40(v48, v50);
    id v51 = [*(id *)&v72[v56] keyData];
    uint64_t v52 = sub_100221BF0();
    unint64_t v54 = v53;

    sub_1001FAC00(v52, v54, v40, v42);
    id v55 = v72;

    sub_100005A40(v52, v54);
    swift_bridgeObjectRelease();
    sub_100005A40(v58, v59);
    sub_100005A40(v64, v63);
    sub_100005A40(v16, v66);
    v67.receiver = v55;
    v67.super_class = (Class)type metadata accessor for EscrowKeys();
    uint64_t v10 = (uint64_t *)objc_msgSendSuper2(&v67, "init");
    sub_100005A40(a1, a2);
  }
  return v10;
}

uint64_t sub_1001F8224(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, _DWORD *a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t *a10, uint64_t a11, uint64_t a12)
{
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3) {
        __break(1u);
      }
      swift_retain();
      sub_1001FA26C((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, a5, a6, a1, a2, a7, a8, a9, a10, a11, a12);
      uint64_t result = sub_100005A40(a3, a4);
      break;
    case 2uLL:
      uint64_t v19 = a4 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v24 = *(void *)(a3 + 24);
      uint64_t v26 = *(void *)(a3 + 16);
      swift_retain();
      swift_retain();
      sub_1001FA26C(v26, v24, v19, a5, a6, a1, a2, a7, a8, a9, a10, a11, a12);
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      memset(v33, 0, 14);
      uint64_t v22 = a12;
      uint64_t v16 = (char *)v33;
      goto LABEL_7;
    default:
      v33[0] = a3;
      LOWORD(v33[1]) = a4;
      BYTE2(v33[1]) = BYTE2(a4);
      BYTE3(v33[1]) = BYTE3(a4);
      BYTE4(v33[1]) = BYTE4(a4);
      BYTE5(v33[1]) = BYTE5(a4);
      uint64_t v16 = (char *)v33 + BYTE6(a4);
      uint64_t v22 = a12;
LABEL_7:
      uint64_t result = sub_1001F84A0((uint64_t)v33, (uint64_t)v16, a5, a6, a1, a2, a7, a8, a9, a10, a11, v22);
      break;
  }
  return result;
}

uint64_t sub_1001F84A0(uint64_t a1, uint64_t a2, uint64_t *a3, _DWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = *a3;
  unint64_t v12 = a3[1];
  switch(v12 >> 62)
  {
    case 1uLL:
      if (v13 >> 32 < (int)v13) {
        __break(1u);
      }
      sub_1000059E8(v13, v12);
      sub_1001FA164((int)v13, v13 >> 32, v12 & 0x3FFFFFFFFFFFFFFFLL, a4, a5, a6, a1, a2, a7, a8, a9, a10, a11, a12);
      break;
    case 2uLL:
      uint64_t v17 = *(void *)(v13 + 24);
      uint64_t v18 = *(void *)(v13 + 16);
      sub_1000059E8(v13, v12);
      swift_retain();
      swift_retain();
      sub_1001FA164(v18, v17, v12 & 0x3FFFFFFFFFFFFFFFLL, a4, a5, a6, a1, a2, a7, a8, a9, a10, a11, a12);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v30, 0, 14);
      sub_1001F8734((uint64_t)v30, (uint64_t)v30, a4, a5, a6, a1, a2, a7, a8, a9, a10, a11, a12);
      break;
    default:
      v30[0] = *a3;
      LOWORD(v30[1]) = v12;
      BYTE2(v30[1]) = BYTE2(v12);
      BYTE3(v30[1]) = BYTE3(v12);
      BYTE4(v30[1]) = BYTE4(v12);
      BYTE5(v30[1]) = BYTE5(v12);
      sub_1001F8734((uint64_t)v30, (uint64_t)v30 + BYTE6(v12), a4, a5, a6, a1, a2, a7, a8, a9, a10, a11, a12);
      break;
  }
  return sub_100005A40(v13, v12);
}

uint64_t sub_1001F8734(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t result = ccsha384_di();
  if (!a4)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (!a6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!a8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t result = cchkdf();
  *a3 = result;
  if (result)
  {
LABEL_6:
    uint64_t v19 = result;
    sub_1001F8AA8();
    swift_allocError();
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = 0;
    *(unsigned char *)(v20 + 16) = 2;
    return swift_willThrow();
  }
  if (a10 < 2u)
  {
    uint64_t result = ccrng();
    if (result)
    {
      uint64_t result = ccec_generate_key_deterministic();
      *a3 = result;
      if (result) {
        goto LABEL_6;
      }
      if (a13)
      {
        unint64_t v21 = sub_10000D894();
        uint64_t v27 = sub_100006CCC(v21);
        unint64_t v28 = v22;
        sub_1001F9998(&v27);
        uint64_t v23 = sub_100008E54(v27, v28);
LABEL_15:
        uint64_t v25 = *a11;
        unint64_t v26 = a11[1];
        *a11 = v23;
        a11[1] = v24;
        return sub_100005A40(v25, v26);
      }
LABEL_21:
      __break(1u);
      return result;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a10 == 2)
  {
    uint64_t v23 = sub_1001F88D8(a8, a9 - a8);
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1001F88D8(uint64_t __src, uint64_t a2)
{
  if (__src)
  {
    if (a2)
    {
      if (a2 <= 14)
      {
        return sub_10000CA58((unsigned char *)__src, (unsigned char *)(__src + a2));
      }
      else
      {
        sub_100221A70();
        swift_allocObject();
        sub_100221A20();
        if ((unint64_t)a2 >= 0x7FFFFFFF)
        {
          sub_100221BC0();
          __src = swift_allocObject();
          *(void *)(__src + 16) = 0;
          *(void *)(__src + 24) = a2;
        }
        else
        {
          return a2 << 32;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return __src;
}

id sub_1001F89C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EscrowKeys();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EscrowKeys()
{
  return self;
}

unint64_t sub_1001F8AA8()
{
  unint64_t result = qword_10029FCC0;
  if (!qword_10029FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029FCC0);
  }
  return result;
}

uint64_t sub_1001F8AFC(uint64_t a1)
{
  unint64_t v2 = sub_1001F8FF4();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1001F8B38(uint64_t a1)
{
  unint64_t v2 = sub_1001F8FF4();

  return Error<>._code.getter(a1, v2);
}

unint64_t sub_1001F8B74(uint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_100222840(23);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000015;
      v8._countAndFlagsBits = a1;
      v8._object = (void *)a2;
      sub_100222310(v8);
      return v6;
    case 2:
      sub_100222840(23);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000015;
      goto LABEL_4;
    case 3:
      if (a1 | a2) {
        return 0xD000000000000013;
      }
      else {
        return 0xD000000000000015;
      }
    default:
      sub_100222840(35);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000021;
LABEL_4:
      v7._countAndFlagsBits = sub_100222A00();
      sub_100222310(v7);
      swift_bridgeObjectRelease();
      return v6;
  }
}

unint64_t sub_1001F8D14()
{
  return sub_1001F8B74(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_1001F8D20(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = sub_10000939C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v7 = sub_1001F8B74(a1, a2, a3);
  if (v8)
  {
    unint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = sub_100222270();
    uint64_t v13 = v12;
    id v30 = &type metadata for String;
    *(void *)&long long v29 = v9;
    *((void *)&v29 + 1) = v10;
    sub_100005A98(&v29, v28);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10018A6E4(v28, v11, v13, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a3 == 2)
  {
    uint64_t v15 = sub_100222270();
    uint64_t v17 = v21;
    uint64_t v22 = (int)a1;
    id v23 = objc_allocWithZone((Class)NSError);
    NSString v24 = sub_100222260();
    id v25 = [v23 initWithDomain:v24 code:v22 userInfo:0];

    id v30 = (void *)sub_1001F9048();
    *(void *)&long long v29 = v25;
    goto LABEL_7;
  }
  if (!a3)
  {
    uint64_t v15 = sub_100222270();
    uint64_t v17 = v16;
    sub_100222270();
    id v18 = objc_allocWithZone((Class)NSError);
    NSString v19 = sub_100222260();
    swift_bridgeObjectRelease();
    id v20 = [v18 initWithDomain:v19 code:(int)a1 userInfo:0];

    id v30 = (void *)sub_1001F9048();
    *(void *)&long long v29 = v20;
LABEL_7:
    sub_100005A98(&v29, v28);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_10018A6E4(v28, v15, v17, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_1001F8F6C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_1001F8F88()
{
  uint64_t result = 3;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t result = 4;
      break;
    case 2:
      uint64_t result = 5;
      break;
    case 3:
      if (*(_OWORD *)v0 == 0) {
        uint64_t result = 1;
      }
      else {
        uint64_t result = 2;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001F8FE8()
{
  return sub_1001F8D20(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_1001F8FF4()
{
  unint64_t result = qword_10029FCC8;
  if (!qword_10029FCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029FCC8);
  }
  return result;
}

unint64_t sub_1001F9048()
{
  unint64_t result = qword_100299528;
  if (!qword_100299528)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100299528);
  }
  return result;
}

uint64_t sub_1001F9088(void *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t *a5, _DWORD *a6, unsigned __int8 a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  unint64_t v10 = a1[1];
  switch(v10 >> 62)
  {
    case 1uLL:
      *(void *)&long long v43 = *a1;
      *((void *)&v43 + 1) = v10 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1000059E8(a3, a4);
      sub_1001F9EAC((int *)&v43, a2, a3, a4, a5, a6, a7, a8, a9, a10);
      uint64_t result = sub_100005A40(a3, a4);
      uint64_t v26 = *((void *)&v43 + 1) | 0x4000000000000000;
      *a1 = v43;
      a1[1] = v26;
      return result;
    case 2uLL:
      *(void *)&long long v43 = *a1;
      *((void *)&v43 + 1) = v10 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1000059E8(a3, a4);
      sub_100221B90();
      uint64_t v27 = *(void *)(v43 + 16);
      uint64_t v42 = *(void *)(v43 + 24);
      uint64_t v28 = sub_100221A30();
      if (!v28)
      {
        sub_100005A40(a3, a4);
        __break(1u);
        JUMPOUT(0x1001F940CLL);
      }
      uint64_t v29 = v28;
      uint64_t v30 = sub_100221A60();
      uint64_t v31 = v27 - v30;
      if (__OFSUB__(v27, v30))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v32 = __OFSUB__(v42, v27);
      uint64_t v33 = v42 - v27;
      if (v32) {
        goto LABEL_15;
      }
      uint64_t v34 = sub_100221A50();
      if (v34 >= v33) {
        uint64_t v35 = v33;
      }
      else {
        uint64_t v35 = v34;
      }
      sub_1001F965C(a2, a3, a4, a5, a6, v29 + v31, v29 + v31 + v35, a7, a8, a9, a10);
      uint64_t result = sub_100005A40(a3, a4);
      unint64_t v25 = *((void *)&v43 + 1) | 0x8000000000000000;
      *a1 = v43;
LABEL_11:
      a1[1] = v25;
      return result;
    case 3uLL:
      *(void *)((char *)&v43 + 7) = 0;
      *(void *)&long long v43 = 0;
      sub_1000059E8(a3, a4);
      sub_1001F965C(a2, a3, a4, a5, a6, (uint64_t)&v43, (uint64_t)&v43, a7, a8, a9, a10);
      return sub_100005A40(a3, a4);
    default:
      *(void *)&long long v43 = *a1;
      WORD4(v43) = v10;
      BYTE10(v43) = BYTE2(v10);
      BYTE11(v43) = BYTE3(v10);
      BYTE12(v43) = BYTE4(v10);
      BYTE13(v43) = BYTE5(v10);
      BYTE14(v43) = BYTE6(v10);
      uint64_t v41 = (char *)&v43 + BYTE6(v10);
      sub_1000059E8(a3, a4);
      sub_1001F965C(a2, a3, a4, a5, a6, (uint64_t)&v43, (uint64_t)v41, a7, a8, a9, a10);
      uint64_t v19 = v43;
      uint64_t v20 = DWORD2(v43);
      uint64_t v21 = BYTE12(v43);
      uint64_t v22 = BYTE13(v43);
      uint64_t v23 = BYTE14(v43);
      uint64_t result = sub_100005A40(a3, a4);
      unint64_t v25 = v20 | (v21 << 32) | (v22 << 40) | (v23 << 48);
      *a1 = v19;
      goto LABEL_11;
  }
}

void sub_1001F941C(void *a1, void *a2, uint64_t a3)
{
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      *(void *)&long long v16 = *a1;
      *((void *)&v16 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1001F9FA0((int *)&v16, a2, a3);
      uint64_t v7 = v16;
      unint64_t v8 = *((void *)&v16 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v16 = *a1;
      *((void *)&v16 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v9 = *((void *)&v16 + 1);
      uint64_t v10 = *(void *)(v16 + 16);
      uint64_t v15 = *(void *)(v16 + 24);
      uint64_t v11 = sub_100221A30();
      if (!v11)
      {
        __break(1u);
        JUMPOUT(0x1001F964CLL);
      }
      uint64_t v12 = v11;
      uint64_t v13 = sub_100221A60();
      uint64_t v14 = v10 - v13;
      if (__OFSUB__(v10, v13))
      {
        __break(1u);
LABEL_12:
        __break(1u);
      }
      if (__OFSUB__(v15, v10)) {
        goto LABEL_12;
      }
      sub_100221A50();
      sub_1001F9C68(a2, a3, v12 + v14);
      *a1 = v16;
      a1[1] = v9 | 0x8000000000000000;
      return;
    case 3uLL:
      *(void *)((char *)&v16 + 7) = 0;
      *(void *)&long long v16 = 0;
      sub_1001F9C68(a2, a3, (uint64_t)&v16);
      return;
    default:
      *(void *)&long long v16 = *a1;
      WORD4(v16) = v3;
      BYTE10(v16) = BYTE2(v3);
      BYTE11(v16) = BYTE3(v3);
      BYTE12(v16) = BYTE4(v3);
      BYTE13(v16) = BYTE5(v3);
      BYTE14(v16) = BYTE6(v3);
      sub_1001F9C68(a2, a3, (uint64_t)&v16);
      uint64_t v7 = v16;
      unint64_t v8 = DWORD2(v16) | ((unint64_t)BYTE12(v16) << 32) | ((unint64_t)BYTE13(v16) << 40) | ((unint64_t)BYTE14(v16) << 48);
LABEL_4:
      *a1 = v7;
      a1[1] = v8;
      return;
  }
}

uint64_t sub_1001F965C(void *a1, uint64_t a2, unint64_t a3, uint64_t *a4, _DWORD *a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t *a9, uint64_t a10, uint64_t a11)
{
  unint64_t v11 = a1[1];
  switch(v11 >> 62)
  {
    case 1uLL:
      *(void *)&long long v43 = *a1;
      *((void *)&v43 + 1) = v11 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1000059E8(a2, a3);
      sub_1001FA054((int *)&v43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
      uint64_t result = sub_100005A40(a2, a3);
      uint64_t v23 = *((void *)&v43 + 1) | 0x4000000000000000;
      *a1 = v43;
      a1[1] = v23;
      return result;
    case 2uLL:
      *(void *)&long long v43 = *a1;
      *((void *)&v43 + 1) = v11 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v24 = *((void *)&v43 + 1);
      uint64_t v25 = *(void *)(v43 + 16);
      uint64_t v36 = *(void *)(v43 + 24);
      uint64_t v26 = sub_100221A30();
      if (!v26)
      {
        __break(1u);
        JUMPOUT(0x1001F9988);
      }
      uint64_t v27 = v26;
      uint64_t v28 = sub_100221A60();
      uint64_t v29 = v25 - v28;
      if (__OFSUB__(v25, v28))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v30 = __OFSUB__(v36, v25);
      uint64_t v31 = v36 - v25;
      if (v30) {
        goto LABEL_14;
      }
      uint64_t v32 = sub_100221A50();
      if (v32 >= v31) {
        uint64_t v33 = v31;
      }
      else {
        uint64_t v33 = v32;
      }
      sub_1001F8224(v27 + v29, v27 + v29 + v33, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
      uint64_t result = sub_100005A40(a2, a3);
      *a1 = v43;
      a1[1] = v24 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v43 + 7) = 0;
      *(void *)&long long v43 = 0;
      sub_1001F8224((uint64_t)&v43, (uint64_t)&v43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
      return sub_100005A40(a2, a3);
    default:
      *(void *)&long long v43 = *a1;
      WORD4(v43) = v11;
      BYTE10(v43) = BYTE2(v11);
      BYTE11(v43) = BYTE3(v11);
      BYTE12(v43) = BYTE4(v11);
      BYTE13(v43) = BYTE5(v11);
      BYTE14(v43) = BYTE6(v11);
      sub_1001F8224((uint64_t)&v43, (uint64_t)&v43 + BYTE6(v11), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
      uint64_t v15 = v43;
      uint64_t v16 = DWORD2(v43);
      uint64_t v17 = BYTE12(v43);
      uint64_t v18 = BYTE13(v43);
      uint64_t v19 = BYTE14(v43);
      uint64_t result = sub_100005A40(a2, a3);
      *a1 = v15;
      a1[1] = v16 | (v17 << 32) | (v18 << 40) | (v19 << 48);
      return result;
  }
}

uint64_t sub_1001F9998(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v6 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_13;
      }
      if (v6 < (int)v2) {
        goto LABEL_21;
      }
      if (sub_100221A30() && __OFSUB__((int)v2, sub_100221A60())) {
        goto LABEL_22;
      }
      sub_100221A70();
      swift_allocObject();
      uint64_t v8 = sub_100221A10();
      swift_release();
      uint64_t v5 = v8;
LABEL_13:
      if (v6 < (int)v2) {
        goto LABEL_19;
      }
      if (!sub_100221A30()) {
        goto LABEL_24;
      }
      if (__OFSUB__((int)v2, sub_100221A60())) {
        goto LABEL_20;
      }
      sub_100221A50();
      uint64_t result = ccec_x963_export();
      *a1 = v2;
      a1[1] = v5 | 0x4000000000000000;
      break;
    case 2uLL:
      uint64_t v9 = *a1;
      uint64_t v11 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v7 = *(void *)(v9 + 16);
      if (!sub_100221A30())
      {
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x1001F9C58);
      }
      if (__OFSUB__(v7, sub_100221A60()))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
      }
      sub_100221A50();
      uint64_t result = ccec_x963_export();
      *a1 = v9;
      a1[1] = v11 | 0x8000000000000000;
      break;
    case 3uLL:
      return ccec_x963_export();
    default:
      LOWORD(v10) = a1[1];
      BYTE2(v10) = BYTE2(a1[1]);
      HIBYTE(v10) = BYTE3(a1[1]);
      __int16 v12 = WORD2(a1[1]);
      unsigned __int8 v13 = BYTE6(a1[1]);
      uint64_t result = ccec_x963_export();
      *a1 = v2;
      a1[1] = v10 | ((unint64_t)v12 << 32) | ((unint64_t)HIBYTE(v12) << 40) | ((unint64_t)v13 << 48);
      return result;
  }
  return result;
}

void sub_1001F9C68(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      *(void *)&long long v11 = *a1;
      *((void *)&v11 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100006C24((int *)&v11, a2, a3);
      uint64_t v6 = v11;
      unint64_t v7 = *((void *)&v11 + 1) | 0x4000000000000000;
      goto LABEL_5;
    case 2uLL:
      *(void *)&long long v11 = *a1;
      *((void *)&v11 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v8 = *((void *)&v11 + 1);
      uint64_t v9 = *(void *)(v11 + 16);
      uint64_t v10 = *(void *)(v11 + 24);
      if (!sub_100221A30()) {
        goto LABEL_16;
      }
      if (__OFSUB__(v9, sub_100221A60()))
      {
        __break(1u);
      }
      else if (!__OFSUB__(v10, v9))
      {
        sub_100221A50();
        if (a3)
        {
          ccdigest();
          *a1 = v11;
          a1[1] = v8 | 0x8000000000000000;
          return;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x1001F9E9CLL);
      }
      __break(1u);
      return;
    case 3uLL:
      *(void *)((char *)&v11 + 7) = 0;
      *(void *)&long long v11 = 0;
      if (!a3) {
        goto LABEL_18;
      }
      ccdigest();
      return;
    default:
      *(void *)&long long v11 = *a1;
      WORD4(v11) = v3;
      BYTE10(v11) = BYTE2(v3);
      BYTE11(v11) = BYTE3(v3);
      BYTE12(v11) = BYTE4(v3);
      BYTE13(v11) = BYTE5(v3);
      BYTE14(v11) = BYTE6(v3);
      if (!a3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      ccdigest();
      uint64_t v6 = v11;
      unint64_t v7 = DWORD2(v11) | ((unint64_t)BYTE12(v11) << 32) | ((unint64_t)BYTE13(v11) << 40) | ((unint64_t)BYTE14(v11) << 48);
LABEL_5:
      *a1 = v6;
      a1[1] = v7;
      return;
  }
}

void sub_1001F9EAC(int *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t *a5, _DWORD *a6, unsigned __int8 a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  sub_100221BA0();
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  if ((int)v17 < (int)v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v25 = a8;
  unint64_t v26 = a4;
  uint64_t v18 = sub_100221A30();
  if (!v18)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v19 = v18;
  uint64_t v20 = sub_100221A60();
  uint64_t v21 = v16 - v20;
  if (__OFSUB__(v16, v20))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v22 = v17 - v16;
  uint64_t v23 = sub_100221A50();
  if (v23 >= v22) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v23;
  }
  sub_1001F965C(a2, a3, v26, a5, a6, v19 + v21, v19 + v21 + v24, a7, v25, a9, a10);
}

void sub_1001F9FA0(int *a1, void *a2, uint64_t a3)
{
  sub_100221BA0();
  uint64_t v6 = *a1;
  if (a1[1] < (int)v6)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = sub_100221A30();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_100221A60();
    uint64_t v10 = v6 - v9;
    if (!__OFSUB__(v6, v9))
    {
      sub_100221A50();
      sub_1001F9C68(a2, a3, v8 + v10);
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

void sub_1001FA054(int *a1, uint64_t a2, unint64_t a3, uint64_t *a4, _DWORD *a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t *a9, uint64_t a10, uint64_t a11)
{
  sub_100221BA0();
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  if ((int)v18 < (int)v17)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v19 = sub_100221A30();
  if (!v19)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v20 = v19;
  uint64_t v21 = sub_100221A60();
  uint64_t v22 = v17 - v21;
  if (__OFSUB__(v17, v21))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v23 = v18 - v17;
  uint64_t v24 = sub_100221A50();
  if (v24 >= v23) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v24;
  }
  sub_1001F8224(v20 + v22, v20 + v22 + v25, a2, a3, a4, v26, v27, a7, a8, a9, a10, a11);
  sub_100005A40(a2, a3);
}

uint64_t sub_1001FA164(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t result = sub_100221A30();
  uint64_t v21 = result;
  if (result)
  {
    uint64_t result = sub_100221A60();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v21 += a1 - result;
  }
  BOOL v22 = __OFSUB__(a2, a1);
  uint64_t v23 = a2 - a1;
  if (v22)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v24 = sub_100221A50();
  if (v24 >= v23) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v24;
  }
  uint64_t v26 = v21 + v25;
  if (v21) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 0;
  }
  return sub_1001F8734(v21, v27, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1001FA26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t result = sub_100221A30();
  uint64_t v20 = result;
  if (result)
  {
    uint64_t result = sub_100221A60();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v20 += a1 - result;
  }
  BOOL v21 = __OFSUB__(a2, a1);
  uint64_t v22 = a2 - a1;
  if (v21)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v23 = sub_100221A50();
  if (v23 >= v22) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v23;
  }
  uint64_t v25 = v20 + v24;
  if (v20) {
    uint64_t v26 = v25;
  }
  else {
    uint64_t v26 = 0;
  }
  return sub_1001F84A0(v20, v26, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1001FA370(int a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  long long v40 = xmmword_100229520;
  int v45 = a1;
  if (!(_BYTE)a1)
  {
    uint64_t v9 = 0xD00000000000001ALL;
    uint64_t v10 = "Escrow Signing Private Key";
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    uint64_t v9 = 0xD00000000000001DLL;
    uint64_t v10 = "Escrow Encryption Private Key";
LABEL_5:
    long long v11 = sub_1001BEF04(v9, (unint64_t)(v10 - 32) | 0x8000000000000000);
    uint64_t v12 = sub_100006D6C((unsigned char *)v11 + 32, v11[2]);
    uint64_t v14 = v13;
    swift_release();
    uint64_t v43 = v12;
    uint64_t v15 = 56;
    goto LABEL_7;
  }
  uint64_t v16 = sub_1001BEF04(0xD000000000000014, 0x8000000100246870);
  uint64_t v12 = sub_100006D6C((unsigned char *)v16 + 32, v16[2]);
  uint64_t v14 = v17;
  swift_release();
  uint64_t v43 = v12;
  uint64_t v15 = 32;
LABEL_7:
  unint64_t v18 = v14;
  unint64_t v44 = v14;
  uint64_t v19 = ccec_cp_384();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v36 = v12;
    BOOL v21 = self;
    id v22 = [v21 ccec384Context];
    uint64_t v41 = sub_100006CCC(v15);
    unint64_t v42 = v23;
    uint64_t v38 = a2;
    unint64_t v39 = a3;
    sub_1000059E8(a2, a3);
    swift_bridgeObjectRetain();
    uint64_t v14 = a4;
    uint64_t v24 = sub_1001BEF04(a4, a5);
    swift_bridgeObjectRelease();
    if ((a5 & 0x1000000000000000) != 0)
    {
      Swift::Int v25 = sub_100222330();
    }
    else if ((a5 & 0x2000000000000000) != 0)
    {
      Swift::Int v25 = HIBYTE(a5) & 0xF;
    }
    else
    {
      Swift::Int v25 = a4 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v26 = sub_100006D6C((unsigned char *)v24 + 32, v25);
    unint64_t v28 = v27;
    swift_release();
    sub_1001F9088(&v41, &v38, v26, v28, &v43, &v46, v45, (uint64_t *)&v40, v20, (uint64_t)v22);
    if (!v5)
    {
      unint64_t v32 = *((void *)&v40 + 1);
      uint64_t v14 = v40;
      uint64_t v33 = v38;
      unint64_t v34 = v39;
      sub_1000059E8(v40, *((unint64_t *)&v40 + 1));
      sub_100005A40(v33, v34);
      [v21 contextFree:v22];
      sub_100005A40(v41, v42);
      sub_100005A40(v14, v32);
      sub_100005A40(v36, v18);
      return v14;
    }
    sub_100005A40(v38, v39);
    [v21 contextFree:v22];
    sub_100005A40(v41, v42);
    sub_100005A40(v40, *((unint64_t *)&v40 + 1));
    uint64_t v29 = v36;
    unint64_t v30 = v18;
  }
  else
  {
    sub_1001F8AA8();
    swift_allocError();
    *(void *)uint64_t v31 = 0;
    *(void *)(v31 + 8) = 0;
    *(unsigned char *)(v31 + 16) = 3;
    swift_willThrow();
    sub_100005A40(v40, *((unint64_t *)&v40 + 1));
    uint64_t v29 = v43;
    unint64_t v30 = v44;
  }
  sub_100005A40(v29, v30);
  return v14;
}

SecKeyRef sub_1001FA660()
{
  sub_1000046DC(&qword_100299598);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229380;
  *(void *)(inited + 32) = kSecAttrKeyClass;
  *(void *)(inited + 40) = kSecAttrKeyClassPrivate;
  *(void *)(inited + 48) = kSecAttrKeyType;
  *(void *)(inited + 56) = kSecAttrKeyTypeEC;
  CFStringRef v1 = (id)kSecAttrKeyClass;
  CFStringRef v2 = (id)kSecAttrKeyClassPrivate;
  CFStringRef v3 = (id)kSecAttrKeyType;
  CFStringRef v4 = (id)kSecAttrKeyTypeEC;
  sub_10000924C(inited);
  CFDataRef isa = sub_100221BD0().super.isa;
  type metadata accessor for CFString(0);
  sub_1001FAE90();
  CFDictionaryRef v6 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  SecKeyRef v7 = SecKeyCreateWithData(isa, v6, 0);

  if (!v7)
  {
    sub_1001F8AA8();
    swift_allocError();
    *(void *)uint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 3;
    swift_willThrow();
  }
  return v7;
}

uint64_t sub_1001FA7BC()
{
  CFTypeRef result = 0;
  type metadata accessor for CFString(0);
  sub_1001FAE90();
  CFDictionaryRef isa = sub_1002221C0().super.isa;
  unsigned int v1 = SecItemAdd(isa, &result);

  if (v1)
  {
    if (v1 != -25299) {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    CFStringRef v2 = (id)kSecClass;
    sub_10000A5F4((uint64_t)v2, v7);

    sub_10000467C((uint64_t)v7);
    CFDictionaryRef v3 = sub_1002221C0().super.isa;
    CFDictionaryRef v4 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    unsigned int v1 = SecItemUpdate(v3, v4);

    if (v1)
    {
LABEL_4:
      sub_1001F8AA8();
      swift_allocError();
      *(void *)uint64_t v5 = v1;
      *(void *)(v5 + 8) = 0;
      *(unsigned char *)(v5 + 16) = 0;
      swift_willThrow();
    }
  }
  swift_unknownObjectRelease();
  return 1;
}

uint64_t sub_1001FA95C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000046DC((uint64_t *)&unk_10029EEE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229530;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = kSecAttrAccessible;
  *(void *)(inited + 80) = kSecAttrAccessibleWhenUnlocked;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 120) = 1;
  *(void *)(inited + 144) = &type metadata for Bool;
  *(void *)(inited + 152) = kSecAttrAccessGroup;
  *(void *)(inited + 160) = 0xD00000000000001ALL;
  *(void *)(inited + 168) = 0x80000001002326F0;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 200) = 0;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(void *)(inited + 232) = kSecAttrLabel;
  *(void *)(inited + 240) = a3;
  *(void *)(inited + 248) = a4;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = kSecAttrApplicationLabel;
  sub_1000046DC(&qword_100299578);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100229540;
  id v26 = objc_allocWithZone((Class)NSUUID);
  CFStringRef v9 = (id)kSecClass;
  CFStringRef v10 = (id)kSecClassKey;
  CFStringRef v11 = (id)kSecAttrAccessible;
  CFStringRef v12 = (id)kSecAttrAccessibleWhenUnlocked;
  CFStringRef v13 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v14 = (id)kSecAttrAccessGroup;
  CFStringRef v15 = (id)kSecAttrSynchronizable;
  CFStringRef v16 = (id)kSecAttrLabel;
  swift_bridgeObjectRetain();
  CFStringRef v17 = (id)kSecAttrApplicationLabel;
  id v18 = [v26 init];
  id v19 = [v18 UUIDString];

  uint64_t v20 = sub_100222270();
  uint64_t v22 = v21;

  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10000D794();
  *(void *)(v8 + 32) = v20;
  *(void *)(v8 + 40) = v22;
  *(void *)(inited + 280) = sub_100222290();
  *(void *)(inited + 288) = v23;
  *(void *)(inited + 304) = &type metadata for String;
  *(void *)(inited + 312) = kSecValueData;
  *(void *)(inited + 344) = &type metadata for Data;
  *(void *)(inited + 320) = a1;
  *(void *)(inited + 328) = a2;
  CFStringRef v24 = (id)kSecValueData;
  sub_1000059E8(a1, a2);
  sub_10000926C(inited);
  LOBYTE(a4) = sub_1001FA7BC();
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_1001FAC00(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000046DC((uint64_t *)&unk_10029EEE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229530;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = kSecAttrAccessible;
  *(void *)(inited + 80) = kSecAttrAccessibleWhenUnlocked;
  *(void *)(inited + 104) = v5;
  *(void *)(inited + 112) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 120) = 1;
  *(void *)(inited + 144) = &type metadata for Bool;
  *(void *)(inited + 152) = kSecAttrAccessGroup;
  *(void *)(inited + 160) = 0xD00000000000001ALL;
  *(void *)(inited + 168) = 0x80000001002326F0;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 200) = 0;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(void *)(inited + 232) = kSecAttrApplicationLabel;
  sub_1000046DC(&qword_100299578);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100229540;
  id v7 = objc_allocWithZone((Class)NSUUID);
  CFStringRef v8 = (id)kSecClass;
  CFStringRef v9 = (id)kSecClassKey;
  CFStringRef v10 = (id)kSecAttrAccessible;
  CFStringRef v11 = (id)kSecAttrAccessibleWhenUnlocked;
  CFStringRef v12 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v13 = (id)kSecAttrAccessGroup;
  CFStringRef v14 = (id)kSecAttrSynchronizable;
  CFStringRef v15 = (id)kSecAttrApplicationLabel;
  id v16 = [v7 init];
  id v17 = [v16 UUIDString];

  uint64_t v18 = sub_100222270();
  uint64_t v20 = v19;

  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10000D794();
  *(void *)(v6 + 32) = v18;
  *(void *)(v6 + 40) = v20;
  *(void *)(inited + 240) = sub_100222290();
  *(void *)(inited + 248) = v21;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = kSecAttrLabel;
  *(void *)(inited + 280) = a3;
  *(void *)(inited + 288) = a4;
  *(void *)(inited + 304) = &type metadata for String;
  *(void *)(inited + 312) = kSecValueData;
  *(void *)(inited + 344) = &type metadata for Data;
  *(void *)(inited + 320) = a1;
  *(void *)(inited + 328) = a2;
  CFStringRef v22 = (id)kSecAttrLabel;
  swift_bridgeObjectRetain();
  CFStringRef v23 = (id)kSecValueData;
  sub_1000059E8(a1, a2);
  sub_10000926C(inited);
  char v24 = sub_1001FA7BC();
  swift_bridgeObjectRelease();
  return v24 & 1;
}

unint64_t sub_1001FAE90()
{
  unint64_t result = qword_1002990E8;
  if (!qword_1002990E8)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002990E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EscrowKeysError()
{
  return &type metadata for EscrowKeysError;
}

void sub_1001FAEF8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100222700();
    type metadata accessor for EscrowRecordMO();
    sub_1001FFBF0();
    sub_100222490();
    uint64_t v1 = v28;
    uint64_t v27 = v29;
    uint64_t v2 = v30;
    uint64_t v3 = v31;
    unint64_t v4 = v32;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v27 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v24 = v2;
  Swift::Int v25 = (char *)_swiftEmptyArrayStorage;
  int64_t v26 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_100222790()) {
      goto LABEL_39;
    }
    type metadata accessor for EscrowRecordMO();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v33;
    swift_unknownObjectRelease();
    if (!v33) {
      goto LABEL_39;
    }
LABEL_32:
    id v15 = objc_msgSend(v11, "escrowMetadata", v24);
    if (v15
      && (id v16 = v15, v17 = [v15 bottleID], v16, v17))
    {
      uint64_t v18 = sub_100222270();
      uint64_t v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v25 = sub_100187FB4(0, *((void *)v25 + 2) + 1, 1, v25);
      }
      unint64_t v22 = *((void *)v25 + 2);
      unint64_t v21 = *((void *)v25 + 3);
      if (v22 >= v21 >> 1) {
        Swift::Int v25 = sub_100187FB4((char *)(v21 > 1), v22 + 1, 1, v25);
      }
      *((void *)v25 + 2) = v22 + 1;
      CFStringRef v23 = &v25[16 * v22];
      *((void *)v23 + 4) = v18;
      *((void *)v23 + 5) = v20;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_31:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v26) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_39;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v26) {
              goto LABEL_39;
            }
            unint64_t v13 = *(void *)(v27 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v26 != v14)
              {
                unint64_t v13 = *(void *)(v27 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_30;
                }
              }
LABEL_39:
              sub_1001B30B0();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_1001FB26C(uint64_t a1, uint64_t a2)
{
  uint64_t v468 = a2;
  uint64_t v4 = sub_1000046DC(&qword_10029A0A0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v498 = (uint64_t)&v464 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v496 = (uint64_t)&v464 - v10;
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v492 = (uint64_t)&v464 - v13;
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v488 = (uint64_t)&v464 - v16;
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v484 = (uint64_t)&v464 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v481 = (uint64_t)&v464 - v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v477 = (uint64_t)&v464 - v25;
  uint64_t v27 = __chkstk_darwin(v24, v26);
  uint64_t v474 = (uint64_t)&v464 - v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v502 = (uint64_t)&v464 - v31;
  uint64_t v33 = __chkstk_darwin(v30, v32);
  uint64_t v505 = (uint64_t)&v464 - v34;
  uint64_t v36 = __chkstk_darwin(v33, v35);
  uint64_t v513 = (uint64_t)&v464 - v37;
  __chkstk_darwin(v36, v38);
  uint64_t v512 = (uint64_t)&v464 - v39;
  uint64_t v552 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  uint64_t v558 = *(void *)(v552 - 8);
  uint64_t v41 = __chkstk_darwin(v552, v40);
  v497 = (char *)&v464 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v41, v43);
  v495 = (char *)&v464 - v45;
  uint64_t v47 = __chkstk_darwin(v44, v46);
  v491 = (_OWORD *)((char *)&v464 - v48);
  uint64_t v50 = __chkstk_darwin(v47, v49);
  v487 = (_OWORD *)((char *)&v464 - v51);
  uint64_t v53 = __chkstk_darwin(v50, v52);
  v483 = (char *)&v464 - v54;
  uint64_t v56 = __chkstk_darwin(v53, v55);
  v480 = (_OWORD *)((char *)&v464 - v57);
  uint64_t v59 = __chkstk_darwin(v56, v58);
  v476 = (_OWORD *)((char *)&v464 - v60);
  uint64_t v62 = __chkstk_darwin(v59, v61);
  v473 = (_OWORD *)((char *)&v464 - v63);
  uint64_t v65 = __chkstk_darwin(v62, v64);
  v501 = (_OWORD *)((char *)&v464 - v66);
  uint64_t v68 = __chkstk_darwin(v65, v67);
  v514 = (char *)&v464 - v69;
  uint64_t v71 = __chkstk_darwin(v68, v70);
  v509 = (_OWORD *)((char *)&v464 - v72);
  __chkstk_darwin(v71, v73);
  v508 = (char *)&v464 - v74;
  v551 = (char *)type metadata accessor for PasscodeGeneration(0);
  uint64_t v531 = *((void *)v551 - 1);
  __chkstk_darwin(v551, v75);
  v465 = (char *)&v464 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000046DC(&qword_10029A0E8);
  uint64_t v79 = __chkstk_darwin(v77 - 8, v78);
  uint64_t v467 = (uint64_t)&v464 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79, v81);
  uint64_t v530 = (uint64_t)&v464 - v82;
  uint64_t v83 = sub_1000046DC(&qword_10029A098);
  uint64_t v85 = __chkstk_darwin(v83 - 8, v84);
  uint64_t v494 = (uint64_t)&v464 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __chkstk_darwin(v85, v87);
  uint64_t v490 = (uint64_t)&v464 - v89;
  uint64_t v91 = __chkstk_darwin(v88, v90);
  uint64_t v486 = (uint64_t)&v464 - v92;
  uint64_t v94 = __chkstk_darwin(v91, v93);
  uint64_t v482 = (uint64_t)&v464 - v95;
  uint64_t v97 = __chkstk_darwin(v94, v96);
  uint64_t v479 = (uint64_t)&v464 - v98;
  uint64_t v100 = __chkstk_darwin(v97, v99);
  uint64_t v475 = (uint64_t)&v464 - v101;
  uint64_t v103 = __chkstk_darwin(v100, v102);
  uint64_t v472 = (uint64_t)&v464 - v104;
  uint64_t v106 = __chkstk_darwin(v103, v105);
  uint64_t v470 = (uint64_t)&v464 - v107;
  uint64_t v109 = __chkstk_darwin(v106, v108);
  uint64_t v500 = (uint64_t)&v464 - v110;
  uint64_t v112 = __chkstk_darwin(v109, v111);
  uint64_t v504 = (uint64_t)&v464 - v113;
  uint64_t v115 = __chkstk_darwin(v112, v114);
  uint64_t v511 = (uint64_t)&v464 - v116;
  uint64_t v118 = __chkstk_darwin(v115, v117);
  uint64_t v539 = (uint64_t)&v464 - v119;
  uint64_t v121 = __chkstk_darwin(v118, v120);
  uint64_t v466 = (uint64_t)&v464 - v122;
  uint64_t v124 = __chkstk_darwin(v121, v123);
  uint64_t v529 = (uint64_t)&v464 - v125;
  uint64_t v127 = __chkstk_darwin(v124, v126);
  uint64_t v527 = (uint64_t)&v464 - v128;
  uint64_t v130 = __chkstk_darwin(v127, v129);
  uint64_t v526 = (uint64_t)&v464 - v131;
  uint64_t v133 = __chkstk_darwin(v130, v132);
  uint64_t v524 = (uint64_t)&v464 - v134;
  uint64_t v136 = __chkstk_darwin(v133, v135);
  uint64_t v522 = (uint64_t)&v464 - v137;
  uint64_t v139 = __chkstk_darwin(v136, v138);
  v536 = (char *)&v464 - v140;
  uint64_t v142 = __chkstk_darwin(v139, v141);
  v535 = (char *)&v464 - v143;
  uint64_t v145 = __chkstk_darwin(v142, v144);
  uint64_t v534 = (uint64_t)&v464 - v146;
  __chkstk_darwin(v145, v147);
  uint64_t v533 = (uint64_t)&v464 - v148;
  uint64_t v149 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v559 = *(void *)(v149 - 8);
  uint64_t v151 = __chkstk_darwin(v149, v150);
  v493 = (char *)&v464 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __chkstk_darwin(v151, v153);
  uint64_t v489 = (uint64_t)&v464 - v155;
  uint64_t v157 = __chkstk_darwin(v154, v156);
  uint64_t v485 = (uint64_t)&v464 - v158;
  uint64_t v160 = __chkstk_darwin(v157, v159);
  uint64_t v538 = (uint64_t)&v464 - v161;
  uint64_t v163 = __chkstk_darwin(v160, v162);
  uint64_t v478 = (uint64_t)&v464 - v164;
  uint64_t v166 = __chkstk_darwin(v163, v165);
  uint64_t v537 = (uint64_t)&v464 - v167;
  uint64_t v169 = __chkstk_darwin(v166, v168);
  uint64_t v471 = (uint64_t)&v464 - v170;
  uint64_t v172 = __chkstk_darwin(v169, v171);
  uint64_t v540 = (uint64_t)&v464 - v173;
  uint64_t v175 = __chkstk_darwin(v172, v174);
  uint64_t v499 = (uint64_t)&v464 - v176;
  uint64_t v178 = __chkstk_darwin(v175, v177);
  uint64_t v503 = (uint64_t)&v464 - v179;
  uint64_t v181 = __chkstk_darwin(v178, v180);
  uint64_t v541 = (uint64_t)&v464 - v182;
  uint64_t v184 = __chkstk_darwin(v181, v183);
  uint64_t v507 = (uint64_t)&v464 - v185;
  uint64_t v187 = __chkstk_darwin(v184, v186);
  uint64_t v515 = (uint64_t)&v464 - v188;
  uint64_t v190 = __chkstk_darwin(v187, v189);
  v528 = (char *)&v464 - v191;
  uint64_t v193 = __chkstk_darwin(v190, v192);
  uint64_t v525 = (uint64_t)&v464 - v194;
  uint64_t v196 = __chkstk_darwin(v193, v195);
  v523 = (char *)&v464 - v197;
  uint64_t v199 = __chkstk_darwin(v196, v198);
  uint64_t v521 = (uint64_t)&v464 - v200;
  uint64_t v202 = __chkstk_darwin(v199, v201);
  uint64_t v520 = (uint64_t)&v464 - v203;
  uint64_t v205 = __chkstk_darwin(v202, v204);
  uint64_t v519 = (uint64_t)&v464 - v206;
  uint64_t v208 = __chkstk_darwin(v205, v207);
  uint64_t v516 = (uint64_t)&v464 - v209;
  uint64_t v211 = __chkstk_darwin(v208, v210);
  uint64_t v532 = (uint64_t)&v464 - v212;
  __chkstk_darwin(v211, v213);
  Class v215 = (char *)&v464 - v214;
  uint64_t v550 = sub_100221CB0();
  uint64_t v553 = *(void *)(v550 - 8);
  __chkstk_darwin(v550, v216);
  v549 = (char *)&v464 - ((v217 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v220 = __chkstk_darwin(v218 - 8, v219);
  uint64_t v510 = (uint64_t)&v464 - ((v221 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = __chkstk_darwin(v220, v222);
  uint64_t v518 = (uint64_t)&v464 - v224;
  __chkstk_darwin(v223, v225);
  id v227 = (char *)&v464 - v226;
  uint64_t v228 = sub_100221DC0();
  uint64_t v229 = *(void *)(v228 - 8);
  uint64_t v231 = __chkstk_darwin(v228, v230);
  v506 = (char *)&v464 - ((v232 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = __chkstk_darwin(v231, v233);
  v517 = (char *)&v464 - v235;
  __chkstk_darwin(v234, v236);
  uint64_t v238 = (char *)&v464 - v237;
  type metadata accessor for EscrowRecordMO();
  uint64_t v469 = v2;
  long long v239 = *(void **)(v2 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
  id v240 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v557 = v239;
  id v241 = [v240 initWithContext:v239];
  NSString v242 = sub_100222260();
  id v548 = v241;
  [v241 setLabel:v242];

  uint64_t v243 = type metadata accessor for EscrowInformation(0);
  sub_10000D830(a1 + *(int *)(v243 + 48), (uint64_t)v227, (uint64_t *)&unk_10029ED30);
  uint64_t v244 = *(uint64_t (**)(uint64_t, uint64_t, void *))(v229 + 48);
  uint64_t v543 = v229 + 48;
  v542 = v244;
  if (v244((uint64_t)v227, 1, (void *)v228) == 1)
  {
    sub_100221DB0();
    sub_10004015C((uint64_t)v227, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v229 + 32))(v238, v227, v228);
  }
  v245 = v549;
  sub_100221D90();
  id v246 = *(void (**)(char *, void *))(v229 + 8);
  v556 = (void *)v228;
  uint64_t v546 = v229 + 8;
  v545 = v246;
  v246(v238, (void *)v228);
  Class isa = sub_100221C30().super.isa;
  uint64_t v248 = *(void (**)(char *, uint64_t))(v553 + 8);
  v553 += 8;
  v544 = v248;
  v248(v245, v550);
  id v249 = v548;
  [v548 setCreationDate:isa];

  if ((*(void *)a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_177;
  }
  objc_msgSend(v249, "setRemainingAttempts:");
  if ((*(void *)(a1 + 24) & 0x8000000000000000) != 0)
  {
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
    goto LABEL_182;
  }
  uint64_t v555 = v229;
  objc_msgSend(v249, "setSilentAttemptAllowed:");
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v250 = *(void *)(a1 + 32) != 0;
  }
  else {
    uint64_t v250 = *(void *)(a1 + 32);
  }
  [v249 setRecordStatus:v250];
  [v249 setSosViability:*(void *)(a1 + 48)];
  NSString v251 = sub_100222260();
  [v249 setFederationID:v251];

  NSString v252 = sub_100222260();
  [v249 setExpectedFederationID:v252];

  type metadata accessor for EscrowMetadataMO();
  id v253 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v554 = [v253 initWithContext:v557];
  uint64_t v254 = a1 + *(int *)(v243 + 52);
  uint64_t v255 = v533;
  sub_10000D830(v254, v533, &qword_10029A098);
  long long v256 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v559 + 48);
  v559 += 48;
  if (v256(v255, 1, v149) == 1)
  {
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v257 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)&v215[v257] = qword_100299ED8;
    swift_retain();
    sub_10004015C(v255, &qword_10029A098);
  }
  else
  {
    sub_100200D3C(v255, (uint64_t)v215, type metadata accessor for EscrowInformation.Metadata);
  }
  uint64_t v258 = *(void *)&v215[*(int *)(v149 + 20)];
  swift_beginAccess();
  uint64_t v259 = *(void *)(v258 + 16);
  unint64_t v260 = *(void *)(v258 + 24);
  sub_1000059E8(v259, v260);
  sub_100200CDC((uint64_t)v215, type metadata accessor for EscrowInformation.Metadata);
  Class v261 = sub_100221BD0().super.isa;
  sub_100005A40(v259, v260);
  [v554 setBackupKeybagDigest:v261];

  uint64_t v262 = v534;
  sub_10000D830(v254, v534, &qword_10029A098);
  if (v256(v262, 1, v149) == 1)
  {
    uint64_t v263 = v532;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v264 = *(int *)(v149 + 20);
    uint64_t v265 = (uint64_t)v536;
    id v249 = v535;
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v263 + v264) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v262, &qword_10029A098);
    uint64_t v238 = (char *)v554;
  }
  else
  {
    uint64_t v263 = v532;
    sub_100200D3C(v262, v532, type metadata accessor for EscrowInformation.Metadata);
    uint64_t v238 = (char *)v554;
    uint64_t v265 = (uint64_t)v536;
    id v249 = v535;
  }
  v266 = (uint64_t *)(*(void *)(v263 + *(int *)(v149 + 20))
                   + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  swift_beginAccess();
  uint64_t v267 = *v266;
  sub_100200CDC(v263, type metadata accessor for EscrowInformation.Metadata);
  if (v267 < 0) {
    goto LABEL_178;
  }
  [v238 setSecureBackupUsesMultipleiCSCS:v267];
  sub_10000D830(v254, (uint64_t)v249, &qword_10029A098);
  if (v256((uint64_t)v249, 1, v149) != 1)
  {
    uint64_t v268 = v516;
    sub_100200D3C((uint64_t)v249, v516, type metadata accessor for EscrowInformation.Metadata);
    goto LABEL_24;
  }
  uint64_t v268 = v516;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  id v269 = (id)*(int *)(v149 + 20);
  if (qword_100298E50 != -1) {
    goto LABEL_185;
  }
  while (1)
  {
    *(void *)((char *)v269 + v268) = qword_100299ED8;
    swift_retain();
    sub_10004015C((uint64_t)v249, &qword_10029A098);
LABEL_24:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100200CDC(v268, type metadata accessor for EscrowInformation.Metadata);
    NSString v270 = sub_100222260();
    swift_bridgeObjectRelease();
    [v238 setBottleID:v270];

    sub_10000D830(v254, v265, &qword_10029A098);
    if (v256(v265, 1, v149) == 1)
    {
      uint64_t v271 = v519;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v272 = *(int *)(v149 + 20);
      uint64_t v273 = v556;
      if (qword_100298E50 != -1) {
        swift_once();
      }
      *(void *)(v271 + v272) = qword_100299ED8;
      swift_retain();
      sub_10004015C(v265, &qword_10029A098);
    }
    else
    {
      uint64_t v271 = v519;
      sub_100200D3C(v265, v519, type metadata accessor for EscrowInformation.Metadata);
      uint64_t v273 = v556;
    }
    uint64_t v274 = *(void *)(v271 + *(int *)(v149 + 20))
         + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
    swift_beginAccess();
    uint64_t v275 = v274;
    uint64_t v276 = v518;
    sub_10000D830(v275, v518, (uint64_t *)&unk_10029ED30);
    int v277 = v542(v276, 1, v273);
    uint64_t v278 = (uint64_t)v523;
    v279 = v517;
    if (v277 == 1)
    {
      sub_100221DB0();
      sub_10004015C(v276, (uint64_t *)&unk_10029ED30);
    }
    else
    {
      (*(void (**)(char *, uint64_t, void *))(v555 + 32))(v517, v276, v273);
    }
    sub_100200CDC(v271, type metadata accessor for EscrowInformation.Metadata);
    uint64_t v280 = v549;
    sub_100221D90();
    v545(v279, v273);
    Class v281 = sub_100221C30().super.isa;
    v544(v280, v550);
    [v238 setSecureBackupTimestamp:v281];

    uint64_t v282 = v522;
    sub_10000D830(v254, v522, &qword_10029A098);
    if (v256(v282, 1, v149) == 1)
    {
      uint64_t v283 = v520;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v284 = *(int *)(v149 + 20);
      uint64_t v268 = v552;
      if (qword_100298E50 != -1) {
        swift_once();
      }
      *(void *)(v283 + v284) = qword_100299ED8;
      swift_retain();
      sub_10004015C(v282, &qword_10029A098);
    }
    else
    {
      uint64_t v283 = v520;
      sub_100200D3C(v282, v520, type metadata accessor for EscrowInformation.Metadata);
      uint64_t v268 = v552;
    }
    v285 = (uint64_t *)(*(void *)(v283 + *(int *)(v149 + 20))
                     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
    swift_beginAccess();
    uint64_t v287 = *v285;
    unint64_t v286 = v285[1];
    sub_1000059E8(v287, v286);
    sub_100200CDC(v283, type metadata accessor for EscrowInformation.Metadata);
    Class v288 = sub_100221BD0().super.isa;
    sub_100005A40(v287, v286);
    [v238 setEscrowedSPKI:v288];

    uint64_t v289 = v524;
    sub_10000D830(v254, v524, &qword_10029A098);
    if (v256(v289, 1, v149) == 1)
    {
      uint64_t v290 = v521;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v291 = *(int *)(v149 + 20);
      if (qword_100298E50 != -1) {
        swift_once();
      }
      *(void *)(v290 + v291) = qword_100299ED8;
      swift_retain();
      sub_10004015C(v289, &qword_10029A098);
    }
    else
    {
      uint64_t v290 = v521;
      sub_100200D3C(v289, v521, type metadata accessor for EscrowInformation.Metadata);
    }
    v292 = (uint64_t *)(*(void *)(v290 + *(int *)(v149 + 20))
                     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
    swift_beginAccess();
    uint64_t v294 = *v292;
    unint64_t v293 = v292[1];
    sub_1000059E8(v294, v293);
    sub_100200CDC(v290, type metadata accessor for EscrowInformation.Metadata);
    Class v295 = sub_100221BD0().super.isa;
    sub_100005A40(v294, v293);
    [v238 setPeerInfo:v295];

    uint64_t v296 = v526;
    sub_10000D830(v254, v526, &qword_10029A098);
    if (v256(v296, 1, v149) == 1)
    {
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v297 = *(int *)(v149 + 20);
      uint64_t v298 = (uint64_t)v528;
      if (qword_100298E50 != -1) {
        swift_once();
      }
      *(void *)(v278 + v297) = qword_100299ED8;
      swift_retain();
      sub_10004015C(v296, &qword_10029A098);
    }
    else
    {
      sub_100200D3C(v296, v278, type metadata accessor for EscrowInformation.Metadata);
      uint64_t v298 = (uint64_t)v528;
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100200CDC(v278, type metadata accessor for EscrowInformation.Metadata);
    NSString v299 = sub_100222260();
    swift_bridgeObjectRelease();
    [v238 setSerial:v299];

    uint64_t v300 = v527;
    sub_10000D830(v254, v527, &qword_10029A098);
    if (v256(v300, 1, v149) == 1)
    {
      uint64_t v301 = v525;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v302 = *(int *)(v149 + 20);
      if (qword_100298E50 != -1) {
        swift_once();
      }
      *(void *)(v301 + v302) = qword_100299ED8;
      swift_retain();
      sub_10004015C(v300, &qword_10029A098);
    }
    else
    {
      uint64_t v301 = v525;
      sub_100200D3C(v300, v525, type metadata accessor for EscrowInformation.Metadata);
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100200CDC(v301, type metadata accessor for EscrowInformation.Metadata);
    NSString v303 = sub_100222260();
    swift_bridgeObjectRelease();
    [v238 setBuild:v303];

    uint64_t v304 = v529;
    sub_10000D830(v254, v529, &qword_10029A098);
    unsigned int v305 = v256(v304, 1, v149);
    v547 = v256;
    if (v305 == 1)
    {
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v306 = *(int *)(v149 + 20);
      if (qword_100298E50 != -1) {
        swift_once();
      }
      *(void *)(v298 + v306) = qword_100299ED8;
      swift_retain();
      sub_10004015C(v304, &qword_10029A098);
    }
    else
    {
      sub_100200D3C(v304, v298, type metadata accessor for EscrowInformation.Metadata);
    }
    uint64_t v307 = *(void *)(v298 + *(int *)(v149 + 20))
         + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
    swift_beginAccess();
    uint64_t v308 = v530;
    sub_10000D830(v307, v530, &qword_10029A0E8);
    long long v256 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v531 + 48);
    uint64_t v265 = v531 + 48;
    LODWORD(v307) = v256(v308, 1, (uint64_t)v551);
    sub_10004015C(v308, &qword_10029A0E8);
    sub_100200CDC(v298, type metadata accessor for EscrowInformation.Metadata);
    if (v307 == 1) {
      break;
    }
    type metadata accessor for PasscodeGen();
    id v309 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v269 = [v309 initWithContext:v557];
    uint64_t v310 = v466;
    sub_10000D830(v254, v466, &qword_10029A098);
    if (v547(v310, 1, v149) == 1)
    {
      uint64_t v311 = v515;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      uint64_t v312 = *(int *)(v149 + 20);
      if (qword_100298E50 != -1) {
        swift_once();
      }
      *(void *)(v311 + v312) = qword_100299ED8;
      swift_retain();
      sub_10004015C(v310, &qword_10029A098);
    }
    else
    {
      uint64_t v311 = v515;
      sub_100200D3C(v310, v515, type metadata accessor for EscrowInformation.Metadata);
    }
    uint64_t v313 = *(void *)(v311 + *(int *)(v149 + 20))
         + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
    swift_beginAccess();
    uint64_t v314 = v467;
    sub_10000D830(v313, v467, &qword_10029A0E8);
    if (v256(v314, 1, (uint64_t)v551) == 1)
    {
      uint64_t v238 = v465;
      *(void *)v465 = 0;
      _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_10004015C(v314, &qword_10029A0E8);
    }
    else
    {
      uint64_t v238 = v465;
      sub_100200D3C(v314, (uint64_t)v465, type metadata accessor for PasscodeGeneration);
    }
    id v249 = v554;
    uint64_t v268 = v552;
    sub_100200CDC(v515, type metadata accessor for EscrowInformation.Metadata);
    uint64_t v315 = *(void *)v238;
    sub_100200CDC((uint64_t)v238, type metadata accessor for PasscodeGeneration);
    if ((v315 & 0x8000000000000000) == 0)
    {
      [v269 setValue:v315];
      [v249 setPasscodeGen:v269];

      break;
    }
    __break(1u);
LABEL_185:
    swift_once();
  }
  [v548 setEscrowMetadata:v554];
  type metadata accessor for EscrowClientMetadataMO();
  id v316 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v557 = [v316 initWithContext:v557];
  uint64_t v317 = v539;
  sub_10000D830(v254, v539, &qword_10029A098);
  v318 = v547;
  unsigned int v319 = v547(v317, 1, v149);
  uint64_t v320 = (uint64_t)v514;
  if (v319 == 1)
  {
    uint64_t v321 = v507;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v322 = *(int *)(v149 + 20);
    uint64_t v323 = (uint64_t)v508;
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v321 + v322) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v539, &qword_10029A098);
  }
  else
  {
    uint64_t v321 = v507;
    sub_100200D3C(v317, v507, type metadata accessor for EscrowInformation.Metadata);
    uint64_t v323 = (uint64_t)v508;
  }
  uint64_t v324 = *(void *)(v321 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v325 = v324;
  uint64_t v326 = v512;
  sub_10000D830(v325, v512, &qword_10029A0A0);
  v327 = *(void **)(v558 + 48);
  v558 += 48;
  v551 = (char *)v327;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v327)(v326, 1, v268) == 1)
  {
    *(_OWORD *)uint64_t v323 = 0u;
    *(_OWORD *)(v323 + 16) = 0u;
    *(void *)(v323 + 48) = 0xE000000000000000;
    *(void *)(v323 + 56) = 0;
    *(void *)(v323 + 64) = 0xE000000000000000;
    *(void *)(v323 + 72) = 0;
    *(void *)(v323 + 80) = 0xE000000000000000;
    *(void *)(v323 + 88) = 0;
    *(void *)(v323 + 96) = 0xE000000000000000;
    *(void *)(v323 + 104) = 0;
    *(void *)(v323 + 112) = 0xE000000000000000;
    *(void *)(v323 + 120) = 0;
    *(void *)(v323 + 128) = 0xE000000000000000;
    *(void *)(v323 + 136) = 0;
    *(void *)(v323 + 32) = 0xE000000000000000;
    *(void *)(v323 + 40) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    id v249 = v556;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v555 + 56))(v323 + *(int *)(v268 + 64), 1, 1, v556);
    sub_10004015C(v326, &qword_10029A0A0);
  }
  else
  {
    sub_100200D3C(v326, v323, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
    id v249 = v556;
  }
  sub_100200CDC(v321, type metadata accessor for EscrowInformation.Metadata);
  uint64_t v328 = v510;
  sub_10000D830(v323 + *(int *)(v268 + 64), v510, (uint64_t *)&unk_10029ED30);
  if (v542(v328, 1, v249) == 1)
  {
    v329 = v506;
    sub_100221DB0();
    sub_10004015C(v328, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    v329 = v506;
    (*(void (**)(char *, uint64_t, id))(v555 + 32))(v506, v328, v249);
  }
  sub_100200CDC(v323, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  v330 = v549;
  sub_100221D90();
  v545(v329, v249);
  Class v331 = sub_100221C30().super.isa;
  v544(v330, v550);
  [v557 setSecureBackupMetadataTimestamp:v331];

  uint64_t v332 = v254;
  uint64_t v333 = v511;
  sub_10000D830(v254, v511, &qword_10029A098);
  if (v318(v333, 1, v149) == 1)
  {
    uint64_t v334 = v541;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v335 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v334 + v335) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v333, &qword_10029A098);
  }
  else
  {
    uint64_t v334 = v541;
    sub_100200D3C(v333, v541, type metadata accessor for EscrowInformation.Metadata);
  }
  uint64_t v336 = *(void *)(v334 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v337 = v336;
  uint64_t v338 = v513;
  sub_10000D830(v337, v513, &qword_10029A0A0);
  uint64_t v238 = v551;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v551)(v338, 1, v268) == 1)
  {
    v339 = v509;
    _OWORD *v509 = 0u;
    v339[1] = 0u;
    *((void *)v339 + 6) = 0xE000000000000000;
    *((void *)v339 + 7) = 0;
    *((void *)v339 + 8) = 0xE000000000000000;
    *((void *)v339 + 9) = 0;
    *((void *)v339 + 10) = 0xE000000000000000;
    *((void *)v339 + 11) = 0;
    *((void *)v339 + 12) = 0xE000000000000000;
    *((void *)v339 + 13) = 0;
    *((void *)v339 + 14) = 0xE000000000000000;
    *((void *)v339 + 15) = 0;
    *((void *)v339 + 16) = 0xE000000000000000;
    *((void *)v339 + 17) = 0;
    *((void *)v339 + 4) = 0xE000000000000000;
    *((void *)v339 + 5) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v555 + 56))((char *)v339 + *(int *)(v268 + 64), 1, 1, v556);
    sub_10004015C(v338, &qword_10029A0A0);
  }
  else
  {
    v339 = v509;
    sub_100200D3C(v338, (uint64_t)v509, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v541, type metadata accessor for EscrowInformation.Metadata);
  uint64_t v340 = *(void *)v339;
  sub_100200CDC((uint64_t)v339, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  if (v340 < 0) {
    goto LABEL_179;
  }
  [v557 setSecureBackupNumericPassphraseLength:v340];
  uint64_t v341 = v332;
  uint64_t v342 = v332;
  uint64_t v343 = v504;
  sub_10000D830(v342, v504, &qword_10029A098);
  if (v318(v343, 1, v149) == 1)
  {
    uint64_t v344 = v341;
    uint64_t v345 = v503;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v346 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v345 + v346) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v343, &qword_10029A098);
    uint64_t v347 = v345;
    uint64_t v341 = v344;
    uint64_t v238 = v551;
  }
  else
  {
    uint64_t v348 = v343;
    uint64_t v347 = v503;
    sub_100200D3C(v348, v503, type metadata accessor for EscrowInformation.Metadata);
  }
  uint64_t v349 = *(void *)(v347 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v350 = v349;
  uint64_t v351 = v505;
  sub_10000D830(v350, v505, &qword_10029A0A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v238)(v351, 1, v268) == 1)
  {
    *(_OWORD *)uint64_t v320 = 0u;
    *(_OWORD *)(v320 + 16) = 0u;
    *(void *)(v320 + 48) = 0xE000000000000000;
    *(void *)(v320 + 56) = 0;
    *(void *)(v320 + 64) = 0xE000000000000000;
    *(void *)(v320 + 72) = 0;
    *(void *)(v320 + 80) = 0xE000000000000000;
    *(void *)(v320 + 88) = 0;
    *(void *)(v320 + 96) = 0xE000000000000000;
    *(void *)(v320 + 104) = 0;
    *(void *)(v320 + 112) = 0xE000000000000000;
    *(void *)(v320 + 120) = 0;
    *(void *)(v320 + 128) = 0xE000000000000000;
    *(void *)(v320 + 136) = 0;
    *(void *)(v320 + 32) = 0xE000000000000000;
    *(void *)(v320 + 40) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v555 + 56))(v320 + *(int *)(v268 + 64), 1, 1, v556);
    sub_10004015C(v351, &qword_10029A0A0);
  }
  else
  {
    sub_100200D3C(v351, v320, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v347, type metadata accessor for EscrowInformation.Metadata);
  uint64_t v352 = *(void *)(v320 + 8);
  sub_100200CDC(v320, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  if (v352 < 0) {
    goto LABEL_180;
  }
  [v557 setSecureBackupUsesComplexPassphrase:v352];
  uint64_t v353 = v500;
  sub_10000D830(v341, v500, &qword_10029A098);
  if (v318(v353, 1, v149) == 1)
  {
    uint64_t v354 = v499;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v355 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v354 + v355) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v353, &qword_10029A098);
    uint64_t v356 = v354;
  }
  else
  {
    uint64_t v357 = v353;
    uint64_t v356 = v499;
    sub_100200D3C(v357, v499, type metadata accessor for EscrowInformation.Metadata);
  }
  uint64_t v358 = *(void *)(v356 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v359 = v358;
  uint64_t v360 = v502;
  sub_10000D830(v359, v502, &qword_10029A0A0);
  int v361 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v238)(v360, 1, v268);
  v362 = v501;
  if (v361 == 1)
  {
    _OWORD *v501 = 0u;
    v362[1] = 0u;
    *((void *)v362 + 6) = 0xE000000000000000;
    *((void *)v362 + 7) = 0;
    *((void *)v362 + 8) = 0xE000000000000000;
    *((void *)v362 + 9) = 0;
    *((void *)v362 + 10) = 0xE000000000000000;
    *((void *)v362 + 11) = 0;
    *((void *)v362 + 12) = 0xE000000000000000;
    *((void *)v362 + 13) = 0;
    *((void *)v362 + 14) = 0xE000000000000000;
    *((void *)v362 + 15) = 0;
    *((void *)v362 + 16) = 0xE000000000000000;
    *((void *)v362 + 17) = 0;
    *((void *)v362 + 4) = 0xE000000000000000;
    *((void *)v362 + 5) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v555 + 56))((char *)v362 + *(int *)(v268 + 64), 1, 1, v556);
    sub_10004015C(v360, &qword_10029A0A0);
  }
  else
  {
    sub_100200D3C(v360, (uint64_t)v501, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v356, type metadata accessor for EscrowInformation.Metadata);
  uint64_t v363 = *((void *)v362 + 2);
  sub_100200CDC((uint64_t)v362, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  if (v363 < 0) {
    goto LABEL_181;
  }
  [v557 setSecureBackupUsesNumericPassphrase:v363];
  uint64_t v364 = v470;
  sub_10000D830(v341, v470, &qword_10029A098);
  v365 = v318;
  if (v318(v364, 1, v149) == 1)
  {
    uint64_t v366 = v540;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v367 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v366 + v367) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v364, &qword_10029A098);
  }
  else
  {
    uint64_t v366 = v540;
    sub_100200D3C(v364, v540, type metadata accessor for EscrowInformation.Metadata);
  }
  uint64_t v368 = *(void *)(v366 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v369 = v368;
  uint64_t v370 = v474;
  sub_10000D830(v369, v474, &qword_10029A0A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v238)(v370, 1, v268) == 1)
  {
    v371 = v473;
    _OWORD *v473 = 0u;
    v371[1] = 0u;
    *((void *)v371 + 6) = 0xE000000000000000;
    *((void *)v371 + 7) = 0;
    *((void *)v371 + 8) = 0xE000000000000000;
    *((void *)v371 + 9) = 0;
    *((void *)v371 + 10) = 0xE000000000000000;
    *((void *)v371 + 11) = 0;
    *((void *)v371 + 12) = 0xE000000000000000;
    *((void *)v371 + 13) = 0;
    *((void *)v371 + 14) = 0xE000000000000000;
    *((void *)v371 + 15) = 0;
    *((void *)v371 + 16) = 0xE000000000000000;
    *((void *)v371 + 17) = 0;
    *((void *)v371 + 4) = 0xE000000000000000;
    *((void *)v371 + 5) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v555 + 56))((char *)v371 + *(int *)(v268 + 64), 1, 1, v556);
    uint64_t v372 = v370;
    v373 = v371;
    sub_10004015C(v372, &qword_10029A0A0);
  }
  else
  {
    uint64_t v374 = v370;
    v373 = v473;
    sub_100200D3C(v374, (uint64_t)v473, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  v375 = v365;
  sub_100200CDC(v540, type metadata accessor for EscrowInformation.Metadata);
  swift_bridgeObjectRetain();
  sub_100200CDC((uint64_t)v373, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  NSString v376 = sub_100222260();
  swift_bridgeObjectRelease();
  [v557 setDeviceColor:v376];

  uint64_t v377 = v341;
  uint64_t v378 = v472;
  sub_10000D830(v341, v472, &qword_10029A098);
  if (v375(v378, 1, v149) == 1)
  {
    uint64_t v379 = v471;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v380 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    v381 = v483;
    *(void *)(v379 + v380) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v378, &qword_10029A098);
  }
  else
  {
    v381 = v483;
    uint64_t v379 = v471;
    sub_100200D3C(v378, v471, type metadata accessor for EscrowInformation.Metadata);
  }
  v382 = v556;
  uint64_t v383 = *(void *)(v379 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v384 = v383;
  uint64_t v385 = v477;
  sub_10000D830(v384, v477, &qword_10029A0A0);
  uint64_t v386 = v552;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v238)(v385, 1, v552) == 1)
  {
    v387 = v476;
    _OWORD *v476 = 0u;
    v387[1] = 0u;
    *((void *)v387 + 6) = 0xE000000000000000;
    *((void *)v387 + 7) = 0;
    *((void *)v387 + 8) = 0xE000000000000000;
    *((void *)v387 + 9) = 0;
    *((void *)v387 + 10) = 0xE000000000000000;
    *((void *)v387 + 11) = 0;
    *((void *)v387 + 12) = 0xE000000000000000;
    *((void *)v387 + 13) = 0;
    *((void *)v387 + 14) = 0xE000000000000000;
    *((void *)v387 + 15) = 0;
    *((void *)v387 + 16) = 0xE000000000000000;
    *((void *)v387 + 17) = 0;
    *((void *)v387 + 4) = 0xE000000000000000;
    *((void *)v387 + 5) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v555 + 56))((char *)v387 + *(int *)(v386 + 64), 1, 1, v382);
    sub_10004015C(v385, &qword_10029A0A0);
  }
  else
  {
    v387 = v476;
    sub_100200D3C(v385, (uint64_t)v476, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  uint64_t v388 = (uint64_t)v381;
  sub_100200CDC(v379, type metadata accessor for EscrowInformation.Metadata);
  swift_bridgeObjectRetain();
  sub_100200CDC((uint64_t)v387, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  NSString v389 = sub_100222260();
  swift_bridgeObjectRelease();
  [v557 setDeviceEnclosureColor:v389];

  uint64_t v390 = v475;
  sub_10000D830(v377, v475, &qword_10029A098);
  v391 = v547;
  if (v547(v390, 1, v149) == 1)
  {
    uint64_t v392 = v537;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v393 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v392 + v393) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v390, &qword_10029A098);
  }
  else
  {
    uint64_t v392 = v537;
    sub_100200D3C(v390, v537, type metadata accessor for EscrowInformation.Metadata);
  }
  v394 = v556;
  uint64_t v395 = v377;
  uint64_t v396 = *(void *)(v392 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v397 = v396;
  uint64_t v398 = v481;
  sub_10000D830(v397, v481, &qword_10029A0A0);
  uint64_t v399 = v552;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v238)(v398, 1, v552) == 1)
  {
    v400 = v480;
    _OWORD *v480 = 0u;
    v400[1] = 0u;
    *((void *)v400 + 6) = 0xE000000000000000;
    *((void *)v400 + 7) = 0;
    *((void *)v400 + 8) = 0xE000000000000000;
    *((void *)v400 + 9) = 0;
    *((void *)v400 + 10) = 0xE000000000000000;
    *((void *)v400 + 11) = 0;
    *((void *)v400 + 12) = 0xE000000000000000;
    *((void *)v400 + 13) = 0;
    *((void *)v400 + 14) = 0xE000000000000000;
    *((void *)v400 + 15) = 0;
    *((void *)v400 + 16) = 0xE000000000000000;
    *((void *)v400 + 17) = 0;
    *((void *)v400 + 4) = 0xE000000000000000;
    *((void *)v400 + 5) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v555 + 56))((char *)v400 + *(int *)(v399 + 64), 1, 1, v394);
    uint64_t v401 = v398;
    v402 = v400;
    uint64_t v392 = v537;
    sub_10004015C(v401, &qword_10029A0A0);
  }
  else
  {
    uint64_t v403 = v398;
    v402 = v480;
    sub_100200D3C(v403, (uint64_t)v480, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v392, type metadata accessor for EscrowInformation.Metadata);
  swift_bridgeObjectRetain();
  sub_100200CDC((uint64_t)v402, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  NSString v404 = sub_100222260();
  swift_bridgeObjectRelease();
  [v557 setDeviceMid:v404];

  uint64_t v405 = v479;
  sub_10000D830(v395, v479, &qword_10029A098);
  if (v391(v405, 1, v149) == 1)
  {
    uint64_t v406 = v478;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v407 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v406 + v407) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v405, &qword_10029A098);
  }
  else
  {
    uint64_t v406 = v478;
    sub_100200D3C(v405, v478, type metadata accessor for EscrowInformation.Metadata);
  }
  v408 = v556;
  uint64_t v409 = *(void *)(v406 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v410 = v409;
  uint64_t v411 = v484;
  sub_10000D830(v410, v484, &qword_10029A0A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v238)(v411, 1, v399) == 1)
  {
    *(_OWORD *)uint64_t v388 = 0u;
    *(_OWORD *)(v388 + 16) = 0u;
    *(void *)(v388 + 48) = 0xE000000000000000;
    *(void *)(v388 + 56) = 0;
    *(void *)(v388 + 64) = 0xE000000000000000;
    *(void *)(v388 + 72) = 0;
    *(void *)(v388 + 80) = 0xE000000000000000;
    *(void *)(v388 + 88) = 0;
    *(void *)(v388 + 96) = 0xE000000000000000;
    *(void *)(v388 + 104) = 0;
    *(void *)(v388 + 112) = 0xE000000000000000;
    *(void *)(v388 + 120) = 0;
    *(void *)(v388 + 128) = 0xE000000000000000;
    *(void *)(v388 + 136) = 0;
    *(void *)(v388 + 32) = 0xE000000000000000;
    *(void *)(v388 + 40) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v555 + 56))(v388 + *(int *)(v399 + 64), 1, 1, v408);
    sub_10004015C(v411, &qword_10029A0A0);
  }
  else
  {
    sub_100200D3C(v411, v388, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v406, type metadata accessor for EscrowInformation.Metadata);
  swift_bridgeObjectRetain();
  sub_100200CDC(v388, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  NSString v412 = sub_100222260();
  swift_bridgeObjectRelease();
  [v557 setDeviceModel:v412];

  uint64_t v413 = v482;
  sub_10000D830(v395, v482, &qword_10029A098);
  if (v391(v413, 1, v149) == 1)
  {
    uint64_t v414 = v538;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v415 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v414 + v415) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v413, &qword_10029A098);
  }
  else
  {
    uint64_t v414 = v538;
    sub_100200D3C(v413, v538, type metadata accessor for EscrowInformation.Metadata);
  }
  v416 = v556;
  uint64_t v417 = *(void *)(v414 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v418 = v417;
  uint64_t v419 = v488;
  sub_10000D830(v418, v488, &qword_10029A0A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v238)(v419, 1, v399) == 1)
  {
    v420 = v487;
    _OWORD *v487 = 0u;
    v420[1] = 0u;
    *((void *)v420 + 6) = 0xE000000000000000;
    *((void *)v420 + 7) = 0;
    *((void *)v420 + 8) = 0xE000000000000000;
    *((void *)v420 + 9) = 0;
    *((void *)v420 + 10) = 0xE000000000000000;
    *((void *)v420 + 11) = 0;
    *((void *)v420 + 12) = 0xE000000000000000;
    *((void *)v420 + 13) = 0;
    *((void *)v420 + 14) = 0xE000000000000000;
    *((void *)v420 + 15) = 0;
    *((void *)v420 + 16) = 0xE000000000000000;
    *((void *)v420 + 17) = 0;
    *((void *)v420 + 4) = 0xE000000000000000;
    *((void *)v420 + 5) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v555 + 56))((char *)v420 + *(int *)(v399 + 64), 1, 1, v416);
    uint64_t v421 = v419;
    v422 = v420;
    uint64_t v414 = v538;
    sub_10004015C(v421, &qword_10029A0A0);
  }
  else
  {
    uint64_t v423 = v419;
    v422 = v487;
    sub_100200D3C(v423, (uint64_t)v487, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v414, type metadata accessor for EscrowInformation.Metadata);
  swift_bridgeObjectRetain();
  sub_100200CDC((uint64_t)v422, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  NSString v424 = sub_100222260();
  swift_bridgeObjectRelease();
  [v557 setDeviceModelClass:v424];

  uint64_t v425 = v486;
  sub_10000D830(v395, v486, &qword_10029A098);
  if (v391(v425, 1, v149) == 1)
  {
    uint64_t v426 = v485;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v427 = *(int *)(v149 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v426 + v427) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v425, &qword_10029A098);
  }
  else
  {
    uint64_t v426 = v485;
    sub_100200D3C(v425, v485, type metadata accessor for EscrowInformation.Metadata);
  }
  v428 = v556;
  uint64_t v429 = *(void *)(v426 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v430 = v429;
  uint64_t v431 = v492;
  sub_10000D830(v430, v492, &qword_10029A0A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v238)(v431, 1, v399) == 1)
  {
    v432 = v491;
    _OWORD *v491 = 0u;
    v432[1] = 0u;
    *((void *)v432 + 6) = 0xE000000000000000;
    *((void *)v432 + 7) = 0;
    *((void *)v432 + 8) = 0xE000000000000000;
    *((void *)v432 + 9) = 0;
    *((void *)v432 + 10) = 0xE000000000000000;
    *((void *)v432 + 11) = 0;
    *((void *)v432 + 12) = 0xE000000000000000;
    *((void *)v432 + 13) = 0;
    *((void *)v432 + 14) = 0xE000000000000000;
    *((void *)v432 + 15) = 0;
    *((void *)v432 + 16) = 0xE000000000000000;
    *((void *)v432 + 17) = 0;
    *((void *)v432 + 4) = 0xE000000000000000;
    *((void *)v432 + 5) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v555 + 56))((char *)v432 + *(int *)(v399 + 64), 1, 1, v428);
    sub_10004015C(v431, &qword_10029A0A0);
  }
  else
  {
    v432 = v491;
    sub_100200D3C(v431, (uint64_t)v491, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v426, type metadata accessor for EscrowInformation.Metadata);
  swift_bridgeObjectRetain();
  sub_100200CDC((uint64_t)v432, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  NSString v433 = sub_100222260();
  swift_bridgeObjectRelease();
  [v557 setDeviceModelVersion:v433];

  uint64_t v434 = v490;
  sub_10000D830(v395, v490, &qword_10029A098);
  if (v391(v434, 1, v149) == 1)
  {
    uint64_t v435 = v489;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v436 = *(int *)(v149 + 20);
    uint64_t v437 = (uint64_t)v495;
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)(v435 + v436) = qword_100299ED8;
    swift_retain();
    sub_10004015C(v434, &qword_10029A098);
    uint64_t v438 = v435;
  }
  else
  {
    uint64_t v439 = v434;
    uint64_t v438 = v489;
    sub_100200D3C(v439, v489, type metadata accessor for EscrowInformation.Metadata);
    uint64_t v437 = (uint64_t)v495;
  }
  id v249 = v548;
  uint64_t v440 = *(void *)(v438 + *(int *)(v149 + 20))
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v441 = v440;
  uint64_t v442 = v496;
  sub_10000D830(v441, v496, &qword_10029A0A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v551)(v442, 1, v399) == 1)
  {
    *(_OWORD *)uint64_t v437 = 0u;
    *(_OWORD *)(v437 + 16) = 0u;
    *(void *)(v437 + 48) = 0xE000000000000000;
    *(void *)(v437 + 56) = 0;
    *(void *)(v437 + 64) = 0xE000000000000000;
    *(void *)(v437 + 72) = 0;
    *(void *)(v437 + 80) = 0xE000000000000000;
    *(void *)(v437 + 88) = 0;
    *(void *)(v437 + 96) = 0xE000000000000000;
    *(void *)(v437 + 104) = 0;
    *(void *)(v437 + 112) = 0xE000000000000000;
    *(void *)(v437 + 120) = 0;
    *(void *)(v437 + 128) = 0xE000000000000000;
    *(void *)(v437 + 136) = 0;
    *(void *)(v437 + 32) = 0xE000000000000000;
    *(void *)(v437 + 40) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v555 + 56))(v437 + *(int *)(v399 + 64), 1, 1, v556);
    sub_10004015C(v442, &qword_10029A0A0);
  }
  else
  {
    sub_100200D3C(v442, v437, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC(v438, type metadata accessor for EscrowInformation.Metadata);
  swift_bridgeObjectRetain();
  sub_100200CDC(v437, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  NSString v443 = sub_100222260();
  swift_bridgeObjectRelease();
  [v557 setDeviceName:v443];

  uint64_t v444 = v494;
  sub_10000D830(v395, v494, &qword_10029A098);
  if (v391(v444, 1, v149) == 1)
  {
    uint64_t v238 = v493;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v445 = *(int *)(v149 + 20);
    uint64_t v446 = (uint64_t)v497;
    uint64_t v447 = v555;
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)&v238[v445] = qword_100299ED8;
    swift_retain();
    sub_10004015C(v444, &qword_10029A098);
  }
  else
  {
    uint64_t v238 = v493;
    sub_100200D3C(v444, (uint64_t)v493, type metadata accessor for EscrowInformation.Metadata);
    uint64_t v446 = (uint64_t)v497;
    uint64_t v447 = v555;
  }
  uint64_t v448 = *(void *)&v238[*(int *)(v149 + 20)]
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v449 = v448;
  uint64_t v450 = v498;
  sub_10000D830(v449, v498, &qword_10029A0A0);
  unsigned int v451 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v551)(v450, 1, v399);
  v452 = v556;
  if (v451 == 1)
  {
    *(_OWORD *)uint64_t v446 = 0u;
    *(_OWORD *)(v446 + 16) = 0u;
    *(void *)(v446 + 48) = 0xE000000000000000;
    *(void *)(v446 + 56) = 0;
    *(void *)(v446 + 64) = 0xE000000000000000;
    *(void *)(v446 + 72) = 0;
    *(void *)(v446 + 80) = 0xE000000000000000;
    *(void *)(v446 + 88) = 0;
    *(void *)(v446 + 96) = 0xE000000000000000;
    *(void *)(v446 + 104) = 0;
    *(void *)(v446 + 112) = 0xE000000000000000;
    *(void *)(v446 + 120) = 0;
    *(void *)(v446 + 128) = 0xE000000000000000;
    *(void *)(v446 + 136) = 0;
    *(void *)(v446 + 32) = 0xE000000000000000;
    *(void *)(v446 + 40) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v447 + 56))(v446 + *(int *)(v399 + 64), 1, 1, v452);
    sub_10004015C(v450, &qword_10029A0A0);
  }
  else
  {
    sub_100200D3C(v450, v446, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  sub_100200CDC((uint64_t)v238, type metadata accessor for EscrowInformation.Metadata);
  uint64_t v453 = *(void *)(v446 + 136);
  sub_100200CDC(v446, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  if ((v453 & 0x8000000000000000) == 0)
  {
    id v454 = v557;
    [v557 setDevicePlatform:v453];
    uint64_t v238 = (char *)v554;
    [v554 setClientMetadata:v454];
    if (qword_100298EE0 == -1) {
      goto LABEL_172;
    }
    goto LABEL_183;
  }
LABEL_182:
  __break(1u);
LABEL_183:
  swift_once();
LABEL_172:
  uint64_t v455 = sub_100222090();
  sub_100003CC8(v455, (uint64_t)qword_10029FCD0);
  v456 = v249;
  v457 = sub_100222070();
  os_log_type_t v458 = sub_1002224E0();
  if (os_log_type_enabled(v457, v458))
  {
    v459 = (uint8_t *)swift_slowAlloc();
    v460 = (void *)swift_slowAlloc();
    *(_DWORD *)v459 = 138543362;
    v560 = v456;
    v461 = v456;
    uint64_t v238 = (char *)v554;
    sub_100222690();
    void *v460 = v456;

    _os_log_impl((void *)&_mh_execute_header, v457, v458, "setEscrowRecord saving new escrow record: %{public}@", v459, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    v457 = v456;
  }

  v462 = (SEL *)(&off_100289670)[(char)v468];
  id v463 = *(id *)(v469 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO);
  objc_msgSend(v463, *v462, v456);
}

id sub_1001FEE08()
{
  uint64_t v1 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) fullyViableEscrowRecords];
  if (v2)
  {
    uint64_t v3 = v2;
    type metadata accessor for EscrowRecordMO();
    sub_1001FFBF0();
    sub_100222430();
  }
  id v4 = [*(id *)(v0 + v1) partiallyViableEscrowRecords];
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for EscrowRecordMO();
    sub_1001FFBF0();
    sub_100222430();
  }
  id v6 = objc_allocWithZone((Class)TPCachedViableBottles);
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  Class v8 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v6 initWithViableBottles:isa partialBottles:v8];

  return v9;
}

void sub_1001FEFA4()
{
  uint64_t v1 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO) fullyViableEscrowRecords];
  if (v2)
  {
    uint64_t v3 = v2;
    type metadata accessor for EscrowRecordMO();
    sub_1001FFBF0();
    sub_100222430();
  }
  id v4 = objc_msgSend(*(id *)(v0 + v1), "partiallyViableEscrowRecords", v8);
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for EscrowRecordMO();
    sub_1001FFBF0();
    sub_100222430();
  }
  id v6 = objc_msgSend(*(id *)(v0 + v1), "legacyEscrowRecords", v9);
  if (v6)
  {
    uint64_t v7 = v6;
    type metadata accessor for EscrowRecordMO();
    sub_1001FFBF0();
    sub_100222430();
  }
}

uint64_t sub_1001FF7B8()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_10029FCD0);
  sub_100003CC8(v0, (uint64_t)qword_10029FCD0);
  return sub_100222080();
}

uint64_t sub_1001FF83C(uint64_t a1, char a2, uint64_t a3, void (*a4)(void, uint64_t))
{
  sub_100119E14(0xD00000000000001ELL, 0x80000001002459C0);
  if (a2)
  {
    swift_errorRetain();
    if (qword_100298EE0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100222090();
    sub_100003CC8(v11, (uint64_t)qword_10029FCD0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = sub_100222070();
    os_log_type_t v13 = sub_100222500();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v17 = v15;
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v18._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v18);
      swift_bridgeObjectRelease();
      sub_1001B6120(a1, 1);
      sub_1001BEBDC(0x203A726F727265, 0xE700000000000000, &v17);
      sub_100222690();
      swift_bridgeObjectRelease();
      sub_1001B6120(a1, 1);
      sub_1001B6120(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "fetchEscrowRecords failed with %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001B6120(a1, 1);
      sub_1001B6120(a1, 1);
    }

    swift_errorRetain();
    a4(0, a1);
    sub_1001B6120(a1, 1);
    return sub_1001B6120(a1, 1);
  }
  else
  {
    if (qword_100298EE0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_100222090();
    sub_100003CC8(v7, (uint64_t)qword_10029FCD0);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100222070();
    os_log_type_t v9 = sub_1002224E0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134349056;
      sub_100222690();
      sub_1001B6120(a1, 0);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "fetchEscrowRecords succeeded with %{public}ld records", v10, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_1001B6120(a1, 0);
    }

    return ((uint64_t (*)(uint64_t, void))a4)(a1, 0);
  }
}

unint64_t sub_1001FFBF0()
{
  unint64_t result = qword_10029F050;
  if (!qword_10029F050)
  {
    type metadata accessor for EscrowRecordMO();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029F050);
  }
  return result;
}

id sub_1001FFC48(void *a1, int a2)
{
  LODWORD(v148) = a2;
  uint64_t v3 = sub_1000046DC(&qword_10029ED28);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v5, v8);
  uint64_t v149 = (char *)&v141 - v10;
  __chkstk_darwin(v9, v11);
  os_log_type_t v13 = (char *)&v141 - v12;
  uint64_t v14 = sub_100221CB0();
  uint64_t v15 = *(char **)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v145 = (char *)&v141 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)&v141 - v21;
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v147 = (char *)&v141 - v25;
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)&v141 - v27;
  id v29 = [objc_allocWithZone((Class)OTEscrowRecord) init];
  id v30 = [objc_allocWithZone((Class)OTEscrowRecordMetadata) init];
  id v31 = [objc_allocWithZone((Class)OTEscrowRecordMetadataClientMetadata) init];
  id v150 = v29;
  if (!v29)
  {

    return v150;
  }
  uint64_t v32 = v30;
  uint64_t v143 = v7;
  uint64_t v144 = v22;
  id v146 = v31;
  id v33 = v150;
  id v34 = [a1 creationDate];
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = v147;
    sub_100221C80();

    uint64_t v37 = (void (*)(char *, char *, uint64_t))*((void *)v15 + 4);
    v37(v13, v36, v14);
    uint64_t v38 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)v15 + 7);
    v38(v13, 0, 1, v14);
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v15 + 6))(v13, 1, v14) != 1)
    {
      uint64_t v142 = v38;
      v37(v28, v13, v14);
      sub_100221C70();
      if ((~*(void *)&v39 & 0x7FF0000000000000) != 0)
      {
        if (v39 > -1.0)
        {
          uint64_t v40 = (uint64_t)v149;
          if (v39 < 1.84467441e19)
          {
            [v33 setCreationDate:(unint64_t)v39];
            (*((void (**)(char *, uint64_t))v15 + 1))(v28, v14);
            uint64_t v38 = v142;
            goto LABEL_11;
          }
LABEL_90:
          __break(1u);
          goto LABEL_91;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_90;
    }
  }
  else
  {
    uint64_t v38 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)v15 + 7);
    v38(v13, 1, 1, v14);
  }
  uint64_t v40 = (uint64_t)v149;
  sub_10004015C((uint64_t)v13, &qword_10029ED28);
LABEL_11:
  id v41 = [a1 label];
  if (v41)
  {
    uint64_t v42 = v41;
    sub_100222270();
  }
  NSString v43 = sub_100222260();
  swift_bridgeObjectRelease();
  [v33 setLabel:v43];

  unint64_t v44 = (unint64_t)[a1 remainingAttempts];
  if ((v44 & 0x8000000000000000) != 0) {
    goto LABEL_97;
  }
  [v33 setRemainingAttempts:v44];
  unint64_t v45 = (unint64_t)[a1 silentAttemptAllowed];
  if ((v45 & 0x8000000000000000) != 0) {
    goto LABEL_97;
  }
  [v33 setSilentAttemptAllowed:v45];
  objc_msgSend(v33, "setRecordStatus:", objc_msgSend(a1, "recordStatus") != 0);
  id v46 = [a1 federationID];
  if (v46)
  {
    uint64_t v47 = v46;
    sub_100222270();
  }
  NSString v48 = sub_100222260();
  swift_bridgeObjectRelease();
  [v33 setFederationId:v48];

  id v49 = [a1 expectedFederationID];
  if (v49)
  {
    uint64_t v50 = v49;
    sub_100222270();
  }
  NSString v51 = sub_100222260();
  swift_bridgeObjectRelease();
  [v33 setExpectedFederationId:v51];

  [v33 setRecordViability:v148];
  id v52 = [a1 sosViability];
  if (v52 == (id)2) {
    uint64_t v53 = 2;
  }
  else {
    uint64_t v53 = v52 == (id)1;
  }
  [v33 setViabilityStatus:v53];
  if (!v32)
  {

    return v150;
  }
  uint64_t v149 = (char *)v14;
  id v54 = v32;
  id v55 = [a1 escrowMetadata];
  id v56 = v146;
  if (!v55)
  {
LABEL_86:
    [v33 setEscrowInformationMetadata:v54];

    return v150;
  }
  uint64_t v57 = v55;
  id v148 = v33;
  id v58 = [v55 backupKeybagDigest];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = sub_100221BF0();
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v62 = 0xC000000000000000;
  }
  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v60, v62);
  [v54 setBackupKeybagDigest:isa];

  id v64 = [v57 secureBackupTimestamp];
  if (!v64)
  {
    v38((char *)v40, 1, 1, (uint64_t)v149);
    goto LABEL_35;
  }
  uint64_t v65 = v64;
  uint64_t v66 = v147;
  sub_100221C80();

  uint64_t v67 = (void (*)(uint64_t, char *, char *))*((void *)v15 + 4);
  uint64_t v68 = v66;
  uint64_t v69 = v149;
  v67(v40, v68, v149);
  v38((char *)v40, 0, 1, (uint64_t)v69);
  if ((*((unsigned int (**)(uint64_t, uint64_t, char *))v15 + 6))(v40, 1, v69) == 1)
  {
LABEL_35:
    sub_10004015C(v40, &qword_10029ED28);
    goto LABEL_36;
  }
  v67((uint64_t)v144, (char *)v40, v149);
  sub_100221C70();
  if ((~*(void *)&v70 & 0x7FF0000000000000) == 0)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if (v70 <= -1.0)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  if (v70 >= 1.84467441e19)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  [v54 setSecureBackupTimestamp:(unint64_t)v70];
  (*((void (**)(char *, char *))v15 + 1))(v144, v149);
LABEL_36:
  unint64_t v71 = (unint64_t)[v57 secureBackupUsesMultipleiCSCS];
  if ((v71 & 0x8000000000000000) == 0)
  {
    [v54 setSecureBackupUsesMultipleIcscs:v71];
    id v72 = [v57 bottleID];
    if (v72)
    {
      uint64_t v73 = v72;
      sub_100222270();
    }
    NSString v74 = sub_100222260();
    swift_bridgeObjectRelease();
    [v54 setBottleId:v74];

    id v75 = [v57 escrowedSPKI];
    if (v75)
    {
      uint64_t v76 = v75;
      uint64_t v77 = sub_100221BF0();
      unint64_t v79 = v78;
    }
    else
    {
      uint64_t v77 = 0;
      unint64_t v79 = 0xC000000000000000;
    }
    Class v80 = sub_100221BD0().super.isa;
    sub_100005A40(v77, v79);
    [v54 setEscrowedSpki:v80];

    id v81 = [v57 peerInfo];
    if (v81)
    {
      uint64_t v82 = v81;
      uint64_t v83 = sub_100221BF0();
      unint64_t v85 = v84;
    }
    else
    {
      uint64_t v83 = 0;
      unint64_t v85 = 0xC000000000000000;
    }
    Class v86 = sub_100221BD0().super.isa;
    sub_100005A40(v83, v85);
    [v54 setPeerInfo:v86];

    id v87 = [v57 serial];
    if (v87)
    {
      uint64_t v88 = v87;
      sub_100222270();
    }
    NSString v89 = sub_100222260();
    swift_bridgeObjectRelease();
    [v54 setSerial:v89];

    id v90 = [v57 build];
    if (v90)
    {
      uint64_t v91 = v90;
      sub_100222270();
    }
    NSString v92 = sub_100222260();
    swift_bridgeObjectRelease();
    [v54 setBuild:v92];

    id v93 = [v57 passcodeGen];
    if (v93)
    {
      uint64_t v94 = v93;
      id v95 = [objc_allocWithZone((Class)OTEscrowRecordMetadataPasscodeGeneration) init];
      if (v95)
      {
        uint64_t v96 = v95;
        unint64_t v97 = (unint64_t)[v94 value];
        if ((v97 & 0x8000000000000000) != 0) {
          goto LABEL_97;
        }
        [v96 setValue:v97];
        id v98 = v96;
        [v54 setPasscodeGeneration:v98];
      }
    }
    id v33 = v148;
    if (!v56)
    {
LABEL_85:
      [v54 setClientMetadata:v56];

      goto LABEL_86;
    }
    uint64_t v142 = v38;
    uint64_t v144 = v15;
    id v99 = v56;
    id v100 = [v57 clientMetadata];
    if (!v100)
    {
      uint64_t v101 = v99;
LABEL_84:

      goto LABEL_85;
    }
    uint64_t v101 = v100;
    id v102 = [v100 deviceMid];
    if (v102)
    {
      uint64_t v103 = v102;
      sub_100222270();
    }
    NSString v104 = sub_100222260();
    swift_bridgeObjectRelease();
    [v99 setDeviceMid:v104];

    id v105 = [v101 deviceColor];
    if (v105)
    {
      uint64_t v106 = v105;
      sub_100222270();
    }
    NSString v107 = sub_100222260();
    swift_bridgeObjectRelease();
    [v99 setDeviceColor:v107];

    id v108 = [v101 deviceModel];
    if (v108)
    {
      uint64_t v109 = v108;
      sub_100222270();
    }
    NSString v110 = sub_100222260();
    swift_bridgeObjectRelease();
    [v99 setDeviceModel:v110];

    id v111 = [v101 deviceName];
    if (v111)
    {
      uint64_t v112 = v111;
      sub_100222270();
    }
    NSString v113 = sub_100222260();
    swift_bridgeObjectRelease();
    [v99 setDeviceName:v113];

    unint64_t v114 = (unint64_t)[v101 devicePlatform];
    if ((v114 & 0x8000000000000000) == 0)
    {
      [v99 setDevicePlatform:v114];
      id v115 = [v101 deviceModelClass];
      if (v115)
      {
        uint64_t v116 = v115;
        sub_100222270();
      }
      NSString v117 = sub_100222260();
      swift_bridgeObjectRelease();
      [v99 setDeviceModelClass:v117];

      id v118 = [v101 deviceModelVersion];
      if (v118)
      {
        uint64_t v119 = v118;
        sub_100222270();
      }
      NSString v120 = sub_100222260();
      swift_bridgeObjectRelease();
      [v99 setDeviceModelVersion:v120];

      id v121 = [v101 deviceEnclosureColor];
      if (v121)
      {
        uint64_t v122 = v121;
        sub_100222270();
      }
      NSString v123 = sub_100222260();
      swift_bridgeObjectRelease();
      [v99 setDeviceEnclosureColor:v123];

      id v124 = [v101 secureBackupMetadataTimestamp];
      if (v124)
      {
        uint64_t v125 = v124;
        uint64_t v126 = v147;
        sub_100221C80();

        uint64_t v141 = v57;
        uint64_t v127 = v101;
        id v128 = v56;
        uint64_t v129 = (uint64_t)v143;
        uint64_t v130 = v144;
        uint64_t v131 = v126;
        uint64_t v132 = v149;
        uint64_t v133 = (void (*)(void))*((void *)v144 + 4);
        ((void (*)(char *, char *, char *))v133)(v143, v131, v149);
        v142((char *)v129, 0, 1, (uint64_t)v132);
        uint64_t v134 = v130;
        id v56 = v128;
        uint64_t v101 = v127;
        uint64_t v57 = v141;
        if ((*((unsigned int (**)(uint64_t, uint64_t, char *))v134 + 6))(v129, 1, v132) != 1)
        {
          uint64_t v135 = v145;
          v133();
          sub_100221C70();
          if ((~*(void *)&v136 & 0x7FF0000000000000) != 0)
          {
            if (v136 > -1.0)
            {
              id v33 = v148;
              if (v136 < 1.84467441e19)
              {
                [v99 setSecureBackupMetadataTimestamp:(unint64_t)v136];
                (*((void (**)(char *, char *))v144 + 1))(v135, v149);
LABEL_80:
                unint64_t v137 = (unint64_t)[v101 secureBackupUsesComplexPassphrase];
                if ((v137 & 0x8000000000000000) == 0)
                {
                  [v99 setSecureBackupUsesComplexPassphrase:v137];
                  unint64_t v138 = (unint64_t)[v101 secureBackupUsesNumericPassphrase];
                  if ((v138 & 0x8000000000000000) == 0)
                  {
                    [v99 setSecureBackupUsesNumericPassphrase:v138];
                    unint64_t v139 = (unint64_t)[v101 secureBackupNumericPassphraseLength];
                    if ((v139 & 0x8000000000000000) == 0)
                    {
                      [v99 setSecureBackupNumericPassphraseLength:v139];

                      goto LABEL_84;
                    }
                  }
                }
                goto LABEL_97;
              }
LABEL_96:
              __break(1u);
              goto LABEL_97;
            }
LABEL_95:
            __break(1u);
            goto LABEL_96;
          }
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
      }
      else
      {
        uint64_t v129 = (uint64_t)v143;
        v142(v143, 1, 1, (uint64_t)v149);
      }
      sub_10004015C(v129, &qword_10029ED28);
      id v33 = v148;
      goto LABEL_80;
    }
  }
LABEL_97:
  id result = (id)sub_100222950();
  __break(1u);
  return result;
}

uint64_t sub_100200CDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100200D3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100200DA4()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_10029FCE8);
  sub_100003CC8(v0, (uint64_t)qword_10029FCE8);
  return sub_100222080();
}

char *sub_100200E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, unint64_t a8)
{
  sub_100221A70();
  swift_allocObject();
  uint64_t v15 = v8;
  uint64_t v201 = 0x4800000000;
  uint64_t v202 = sub_100221A40();
  sub_100204054((int *)&v201);
  if (v9)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:
    type metadata accessor for BottledPeer();
    swift_deallocPartialClassInstance();
    return v15;
  }
  uint64_t v187 = a1;
  uint64_t v188 = a2;
  uint64_t v189 = a4;
  uint64_t v190 = a6;
  uint64_t v192 = a5;
  uint64_t v16 = v201;
  uint64_t v17 = v202;
  uint64_t v18 = v202 | 0x4000000000000000;
  uint64_t v19 = v15;
  uint64_t v20 = &v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_secret];
  *(void *)uint64_t v20 = v201;
  *((void *)v20 + 1) = v18;
  objc_allocWithZone((Class)type metadata accessor for EscrowKeys());
  sub_1000059E8(v16, v17 | 0x4000000000000000);
  sub_1000059E8(v16, v17 | 0x4000000000000000);
  uint64_t v21 = sub_1001F7B4C(v16, v17 | 0x4000000000000000, a7, a8);
  uint64_t v199 = v20;
  uint64_t v22 = OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowKeys;
  *(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowKeys] = v21;
  id v23 = [objc_allocWithZone((Class)OTBottleContents) init];
  uint64_t v24 = v19;
  if (!v23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100203D54();
    swift_allocError();
    *id v105 = 3;
    swift_willThrow();
    swift_release();

    uint64_t v106 = a6;
LABEL_13:

LABEL_14:
    int v107 = 0;
    int v108 = 0;
    int v109 = 0;
LABEL_15:
    uint64_t v20 = v199;
    goto LABEL_20;
  }
  uint64_t v25 = v23;
  uint64_t v197 = v22;
  id v26 = [objc_allocWithZone((Class)OTPrivateKey) init];
  if (!v26)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100203D54();
    swift_allocError();
    *NSString v110 = 5;
    swift_willThrow();
    swift_release();

    int v107 = 0;
    int v108 = 0;
    int v109 = 0;
    goto LABEL_20;
  }
  uint64_t v27 = v26;
  id v185 = v25;
  uint64_t v186 = v19;
  [v26 setKeyType:1];
  id v28 = [v192 keyData];
  uint64_t v29 = sub_100221BF0();
  unint64_t v31 = v30;

  Class isa = sub_100221BD0().super.isa;
  sub_100005A40(v29, v31);
  [v27 setKeyData:isa];

  id v33 = [objc_allocWithZone((Class)OTPrivateKey) init];
  if (!v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100203D54();
    swift_allocError();
    *id v111 = 5;
    swift_willThrow();
    swift_release();

    int v107 = 0;
    int v108 = 0;
    int v109 = 0;
LABEL_19:
    uint64_t v24 = v19;
LABEL_20:

    sub_100005A40(*(void *)v20, *((void *)v20 + 1));
    if (v107)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v24;
      if ((v109 & 1) == 0)
      {
LABEL_22:
        if (!v108)
        {
LABEL_29:

          goto LABEL_30;
        }
        uint64_t v113 = OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey;
LABEL_28:
        sub_100005A40(*(void *)&v15[v113], *(void *)&v15[v113 + 8]);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v15 = v24;
      if (!v109) {
        goto LABEL_22;
      }
    }

    if (v108) {
      sub_100005A40(*(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey], *(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey + 8]);
    }
    sub_100005A40(*(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningPublicKey], *(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningPublicKey + 8]);
    sub_100005A40(*(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI], *(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI + 8]);
    sub_100005A40(*(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peersigningSPKI], *(void *)&v15[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peersigningSPKI + 8]);
    uint64_t v113 = OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents;
    goto LABEL_28;
  }
  id v34 = v33;
  [v33 setKeyType:1];
  id v35 = [v190 keyData];
  uint64_t v36 = sub_100221BF0();
  unint64_t v38 = v37;

  Class v39 = sub_100221BD0().super.isa;
  sub_100005A40(v36, v38);
  [v34 setKeyData:v39];

  [v25 setPeerSigningPrivKey:v27];
  [v25 setPeerEncryptionPrivKey:v34];
  id v40 = [v25 data];
  id v41 = v34;
  uint64_t v22 = v197;
  if (!v40)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100203D54();
    swift_allocError();
    unsigned char *v112 = 3;
    swift_willThrow();
    swift_release();

    int v107 = 0;
    int v108 = 0;
    int v109 = 0;
    goto LABEL_19;
  }
  uint64_t v42 = v40;
  uint64_t v184 = v41;
  uint64_t v43 = sub_100221BF0();
  unint64_t v45 = v44;

  id v46 = objc_msgSend(objc_allocWithZone((Class)_SFAESKeySpecifier), "initWithBitSize:", objc_msgSend(self, "aes256BitSize"));
  id v47 = [objc_allocWithZone((Class)_SFAuthenticatedEncryptionOperation) initWithKeySpecifier:v46];

  Class v48 = sub_100221BD0().super.isa;
  uint64_t v24 = v186;
  uint64_t v49 = *(void *)(*(void *)&v186[v197] + OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_symmetricKey);
  uint64_t v201 = 0;
  id v50 = [v47 encrypt:v48 withKey:v49 error:&v201];

  id v51 = (id)v201;
  if (!v50)
  {
    id v115 = (id)v201;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100221B40();

    swift_willThrow();
    swift_release();

    sub_100005A40(v43, v45);
    goto LABEL_14;
  }
  self;
  uint64_t v52 = swift_dynamicCastObjCClass();
  if (!v52)
  {
    id v116 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100203D54();
    swift_allocError();
    *NSString v117 = 4;
    swift_willThrow();

    sub_100005A40(v43, v45);
    swift_release();

LABEL_37:
    uint64_t v106 = v184;
    goto LABEL_13;
  }
  id v171 = (id)v52;
  uint64_t v182 = v43;
  unint64_t v183 = v45;
  uint64_t v181 = v47;
  uint64_t v53 = *(void **)(*(void *)&v186[v197] + OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_signingKey);
  id v54 = v51;
  id v180 = v50;
  id v55 = [v53 publicKey];
  self;
  uint64_t v179 = v55;
  id v173 = (id)swift_dynamicCastObjCClassUnconditional();
  id v56 = [*(id *)(*(void *)&v186[v197] + OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_encryptionKey) publicKey];
  self;
  id v174 = (id)swift_dynamicCastObjCClassUnconditional();
  id v57 = [v192 publicKey];
  self;
  id v178 = (id)swift_dynamicCastObjCClassUnconditional();
  id v58 = [v190 publicKey];
  self;
  id v176 = (id)swift_dynamicCastObjCClassUnconditional();
  id v59 = [objc_allocWithZone((Class)OTBottle) init];
  if (!v59)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100203D54();
    swift_allocError();
    *id v118 = 3;
    swift_willThrow();

LABEL_36:
    sub_100005A40(v182, v183);
    swift_release();

    goto LABEL_37;
  }
  uint64_t v60 = v59;
  uint64_t v169 = v58;
  uint64_t v170 = v57;
  uint64_t v172 = v56;
  NSString v61 = sub_100222260();
  [v60 setPeerID:v61];

  NSString v62 = sub_100222260();
  [v60 setBottleID:v62];

  id v63 = [v173 encodeSubjectPublicKeyInfo];
  uint64_t v64 = sub_100221BF0();
  unint64_t v66 = v65;

  Class v67 = sub_100221BD0().super.isa;
  sub_100005A40(v64, v66);
  [v60 setEscrowedSigningSPKI:v67];

  id v68 = [v174 encodeSubjectPublicKeyInfo];
  uint64_t v69 = sub_100221BF0();
  unint64_t v71 = v70;

  Class v72 = sub_100221BD0().super.isa;
  sub_100005A40(v69, v71);
  [v60 setEscrowedEncryptionSPKI:v72];

  id v73 = [v178 encodeSubjectPublicKeyInfo];
  uint64_t v74 = sub_100221BF0();
  unint64_t v76 = v75;

  Class v77 = sub_100221BD0().super.isa;
  sub_100005A40(v74, v76);
  [v60 setPeerSigningSPKI:v77];

  id v78 = [v176 encodeSubjectPublicKeyInfo];
  uint64_t v79 = sub_100221BF0();
  unint64_t v81 = v80;

  Class v82 = sub_100221BD0().super.isa;
  sub_100005A40(v79, v81);
  [v60 setPeerEncryptionSPKI:v82];

  id v83 = [objc_allocWithZone((Class)OTAuthenticatedCiphertext) init];
  if (!v83)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100203D54();
    swift_allocError();
    *uint64_t v119 = 4;
    swift_willThrow();

    goto LABEL_36;
  }
  id v177 = v60;
  unint64_t v84 = v83;
  id v85 = [v171 ciphertext];
  uint64_t v86 = sub_100221BF0();
  unint64_t v88 = v87;

  Class v89 = sub_100221BD0().super.isa;
  sub_100005A40(v86, v88);
  [v84 setCiphertext:v89];

  id v90 = [v171 authenticationCode];
  uint64_t v91 = sub_100221BF0();
  unint64_t v93 = v92;

  Class v94 = sub_100221BD0().super.isa;
  sub_100005A40(v91, v93);
  [v84 setAuthenticationCode:v94];

  id v95 = [v171 initializationVector];
  uint64_t v96 = sub_100221BF0();
  unint64_t v98 = v97;

  Class v99 = sub_100221BD0().super.isa;
  sub_100005A40(v96, v98);
  [v84 setInitializationVector:v99];

  id v175 = v84;
  [v177 setContents:v84];
  id v100 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerID];
  *id v100 = v187;
  v100[1] = v188;
  uint64_t v101 = &v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_bottleID];
  *(void *)uint64_t v101 = a3;
  *((void *)v101 + 1) = v189;
  id v102 = objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
  swift_bridgeObjectRetain();
  id v103 = v192;
  id v104 = v190;
  uint64_t v193 = v103;
  uint64_t v195 = v104;
  *(void *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerKeys] = sub_100043C0C(v187, v188, v103, v104);
  id result = (char *)[v177 data];
  if (result)
  {
    NSString v120 = result;
    uint64_t v121 = sub_100221BF0();
    uint64_t v123 = v122;

    id v124 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents];
    uint64_t v191 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents];
    *id v124 = v121;
    v124[1] = v123;
    id v125 = [*(id *)(*(void *)&v186[v197] + OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_signingKey) publicKey];
    self;
    uint64_t v126 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v127 = [v126 keyData];
    uint64_t v128 = sub_100221BF0();
    uint64_t v130 = v129;

    uint64_t v131 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningPublicKey];
    uint64_t *v131 = v128;
    v131[1] = v130;
    id v132 = [v126 encodeSubjectPublicKeyInfo];
    uint64_t v133 = sub_100221BF0();
    uint64_t v135 = v134;

    double v136 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI];
    *double v136 = v133;
    v136[1] = v135;
    id v137 = [v178 encodeSubjectPublicKeyInfo];
    uint64_t v138 = sub_100221BF0();
    uint64_t v140 = v139;

    uint64_t v141 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peersigningSPKI];
    *uint64_t v141 = v138;
    v141[1] = v140;
    id v142 = [objc_allocWithZone((Class)_SFECKeySpecifier) initWithCurve:4];
    id v143 = [objc_allocWithZone((Class)_SFSHA384DigestOperation) init];
    id v144 = [objc_allocWithZone((Class)_SFEC_X962SigningOperation) initWithKeySpecifier:v142 digestOperation:v143];

    uint64_t v145 = *v191;
    unint64_t v146 = v191[1];
    sub_1000059E8(*v191, v146);
    Class v147 = sub_100221BD0().super.isa;
    sub_100005A40(v145, v146);
    id v148 = v144;
    uint64_t v149 = *(void *)(*(void *)&v186[v197] + OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_signingKey);
    uint64_t v201 = 0;
    id v150 = [v144 sign:v147 withKey:v149 error:&v201];

    if (v150)
    {
      id v151 = (id)v201;
      id v152 = [v150 signature];
      uint64_t v153 = sub_100221BF0();
      uint64_t v155 = v154;

      uint64_t v156 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey];
      uint64_t *v156 = v153;
      v156[1] = v155;
      uint64_t v157 = *v191;
      unint64_t v158 = v191[1];
      sub_1000059E8(*v191, v158);
      Class v159 = sub_100221BD0().super.isa;
      sub_100005A40(v157, v158);
      uint64_t v201 = 0;
      id v160 = [v148 sign:v159 withKey:v193 error:&v201];

      if (v160)
      {
        id v161 = (id)v201;
        id v162 = [v160 signature];
        uint64_t v163 = sub_100221BF0();
        uint64_t v165 = v164;

        swift_release();
        sub_100005A40(v182, v183);

        uint64_t v166 = (uint64_t *)&v186[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey];
        *uint64_t v166 = v163;
        v166[1] = v165;

        v200.receiver = v186;
        v200.super_class = (Class)type metadata accessor for BottledPeer();
        uint64_t v15 = (char *)objc_msgSendSuper2(&v200, "init");

        return v15;
      }
      id v168 = (id)v201;
      sub_100221B40();

      swift_willThrow();
      swift_release();

      sub_100005A40(v182, v183);
      int v107 = 1;
      int v108 = 1;
    }
    else
    {
      id v167 = (id)v201;
      sub_100221B40();

      swift_willThrow();
      swift_release();

      sub_100005A40(v182, v183);
      int v108 = 0;
      int v107 = 1;
    }
    int v109 = 1;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

char *sub_10020226C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v16 = &v10[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_secret];
  *(void *)uint64_t v16 = a3;
  *((void *)v16 + 1) = a4;
  objc_allocWithZone((Class)type metadata accessor for EscrowKeys());
  sub_1000059E8(a3, a4);
  sub_1000059E8(a3, a4);
  uint64_t v17 = v10;
  uint64_t v18 = sub_1001F7B4C(a3, a4, a5, a6);
  if (!v11)
  {
    unint64_t v217 = a4;
    uint64_t v214 = a3;
    uint64_t v215 = OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowKeys;
    uint64_t v19 = v17;
    *(void *)&v17[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowKeys] = v18;
    objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v18
                                                          + OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_signingKey), "publicKey"));
    self;
    uint64_t v20 = (void *)swift_dynamicCastObjCClass();
    id v216 = v20;
    if (!v20)
    {
      swift_unknownObjectRelease();
      if (qword_100298EE8 != -1) {
        swift_once();
      }
      uint64_t v100 = sub_100222090();
      sub_100003CC8(v100, (uint64_t)qword_10029FCE8);
      uint64_t v101 = sub_100222070();
      os_log_type_t v102 = sub_1002224E0();
      if (os_log_type_enabled(v101, v102))
      {
        id v103 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v103 = 0;
        _os_log_impl((void *)&_mh_execute_header, v101, v102, "escrow key not an SFECPublicKey?", v103, 2u);
        swift_slowDealloc();
      }

      sub_100203D54();
      swift_allocError();
      *id v104 = 3;
      swift_willThrow();
      sub_100005A40(a9, a10);
      sub_100005A40(a7, a8);
      sub_100005A40(a3, a4);
      sub_100005A40(a1, a2);
      goto LABEL_41;
    }
    id v21 = [v20 encodeSubjectPublicKeyInfo];
    uint64_t v22 = sub_100221BF0();
    uint64_t v24 = v23;

    uint64_t v25 = (uint64_t *)&v17[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningSPKI];
    uint64_t *v25 = v22;
    v25[1] = v24;
    uint64_t v211 = v25;
    id v26 = objc_allocWithZone((Class)OTBottle);
    sub_1000059E8(a1, a2);
    Class isa = sub_100221BD0().super.isa;
    sub_100005A40(a1, a2);
    id v28 = [v26 initWithData:isa];

    if (!v28)
    {
      if (qword_100298EE8 != -1) {
        swift_once();
      }
      uint64_t v105 = sub_100222090();
      sub_100003CC8(v105, (uint64_t)qword_10029FCE8);
      uint64_t v106 = sub_100222070();
      os_log_type_t v107 = sub_1002224E0();
      if (os_log_type_enabled(v106, v107))
      {
        int v108 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v108 = 0;
        _os_log_impl((void *)&_mh_execute_header, v106, v107, "Unable to deserialize bottle", v108, 2u);
        swift_slowDealloc();
      }

      sub_100203D54();
      swift_allocError();
      *int v109 = 0;
      swift_willThrow();
      sub_100005A40(a9, a10);
      sub_100005A40(a7, a8);
      sub_100005A40(a3, a4);
      sub_100005A40(a1, a2);
      swift_unknownObjectRelease();
      goto LABEL_41;
    }
    id v210 = v28;
    id v29 = [v28 escrowedSigningSPKI];
    uint64_t v209 = v16;
    if (v29)
    {
      unint64_t v30 = v29;
      uint64_t v31 = sub_100221BF0();
      unint64_t v33 = v32;

      uint64_t v35 = *v211;
      unint64_t v34 = v211[1];
      uint64_t v36 = a1;
      if (v33 >> 60 != 15)
      {
        sub_1000059E8(*v211, v211[1]);
        sub_10004BDEC(v31, v33);
        char v37 = sub_10003FE7C(v31, v33, v35, v34);
        sub_100005A40(v35, v34);
        sub_100039FCC(v31, v33);
        sub_100039FCC(v31, v33);
        if (v37)
        {
          id v38 = [objc_allocWithZone((Class)_SFECKeySpecifier) initWithCurve:4];
          id v39 = [objc_allocWithZone((Class)_SFSHA384DigestOperation) init];
          id v208 = [objc_allocWithZone((Class)_SFEC_X962SigningOperation) initWithKeySpecifier:v38 digestOperation:v39];

          id v40 = objc_allocWithZone((Class)_SFSignedData);
          sub_1000059E8(a1, a2);
          sub_1000059E8(a7, a8);
          Class v41 = sub_100221BD0().super.isa;
          Class v42 = sub_100221BD0().super.isa;
          id v43 = [v40 initWithData:v41 signature:v42];
          sub_100005A40(a7, a8);
          sub_100005A40(a1, a2);

          id v223 = 0;
          uint64_t v207 = v43;
          id v44 = [v208 verify:v43 withKey:v216 error:&v223];
          id v45 = v223;
          if (!v44)
          {
            uint64_t v121 = v45;
            sub_100221B40();

            swift_willThrow();
            sub_100005A40(a9, a10);
            sub_100005A40(a7, a8);
            sub_100005A40(v214, v217);
            sub_100005A40(a1, a2);
            swift_unknownObjectRelease();

            int v115 = 0;
            int v116 = 0;
LABEL_59:
            NSString v117 = v209;
LABEL_60:
            id v118 = &qword_10029F000;
LABEL_44:

            sub_100005A40(*(void *)v117, *((void *)v117 + 1));
            if (v115)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v116 & 1) == 0) {
                goto LABEL_46;
              }
            }
            else if (!v116)
            {
LABEL_46:
              int v119 = 0;
              if (!v44) {
                goto LABEL_48;
              }
              goto LABEL_47;
            }

            int v119 = 1;
            if ((v44 & 1) == 0)
            {
LABEL_48:
              if (v216)
              {
                sub_100005A40(*(void *)&v19[v118[424]], *(void *)&v19[v118[424] + 8]);
                if ((v119 & 1) == 0) {
                  goto LABEL_51;
                }
              }
              else if (!v119)
              {
                goto LABEL_51;
              }
              sub_100005A40(*(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peersigningSPKI], *(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peersigningSPKI + 8]);
              sub_100005A40(*(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents], *(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents + 8]);
              goto LABEL_51;
            }
LABEL_47:
            sub_100005A40(*(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey], *(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey + 8]);
            sub_100005A40(*(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey], *(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey + 8]);
            sub_100005A40(*(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningPublicKey], *(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningPublicKey + 8]);
            goto LABEL_48;
          }
          uint64_t v46 = sub_100221BF0();
          sub_100005A40(v46, v47);

          id v48 = objc_msgSend(objc_allocWithZone((Class)_SFAESKeySpecifier), "initWithBitSize:", objc_msgSend(self, "aes256BitSize"));
          id v49 = [objc_allocWithZone((Class)_SFAuthenticatedEncryptionOperation) initWithKeySpecifier:v48];

          id v50 = [v210 contents];
          if (v50)
          {
            id v51 = v50;
            id v52 = [v50 ciphertext];
            if (v52)
            {
              uint64_t v53 = v52;
              uint64_t v54 = sub_100221BF0();
              unint64_t v56 = v55;

              id v57 = [v51 authenticationCode];
              if (v57)
              {
                id v58 = v57;
                id v206 = v49;
                uint64_t v59 = sub_100221BF0();
                unint64_t v204 = v60;

                uint64_t v203 = v51;
                id v61 = [v51 initializationVector];
                if (v61)
                {
                  NSString v62 = v61;
                  uint64_t v63 = sub_100221BF0();
                  unint64_t v65 = v64;

                  id v197 = objc_allocWithZone((Class)_SFAuthenticatedCiphertext);
                  unint64_t v201 = v56;
                  Class v66 = sub_100221BD0().super.isa;
                  id v199 = (id)v59;
                  Class v67 = sub_100221BD0().super.isa;
                  Class v68 = sub_100221BD0().super.isa;
                  id v69 = [v197 initWithCiphertext:v66 authenticationCode:v67 initializationVector:v68];
                  uint64_t v70 = v63;
                  unint64_t v71 = v69;
                  sub_100005A40(v70, v65);
                  sub_100005A40((uint64_t)v199, v204);
                  sub_100005A40(v54, v201);

                  uint64_t v72 = *(void *)(*(void *)&v19[v215] + OBJC_IVAR____TtC18TrustedPeersHelper10EscrowKeys_symmetricKey);
                  id v223 = 0;
                  id v44 = [v206 decrypt:v71 withKey:v72 error:&v223];
                  id v73 = v223;
                  if (v44)
                  {
                    uint64_t v202 = v71;
                    uint64_t v205 = sub_100221BF0();
                    unint64_t v75 = v74;

                    switch(v75 >> 62)
                    {
                      case 1uLL:
                        uint64_t v124 = (int)v205;
                        uint64_t v125 = v205 >> 32;
                        goto LABEL_64;
                      case 2uLL:
                        uint64_t v124 = *(void *)(v205 + 16);
                        uint64_t v125 = *(void *)(v205 + 24);
LABEL_64:
                        if (v124 == v125) {
                          goto LABEL_65;
                        }
                        goto LABEL_16;
                      case 3uLL:
                        goto LABEL_65;
                      default:
                        if ((v75 & 0xFF000000000000) == 0)
                        {
LABEL_65:
                          sub_100203D54();
                          swift_allocError();
                          unsigned char *v126 = 1;
                          swift_willThrow();
                          sub_100005A40(a9, a10);
                          sub_100005A40(a7, a8);
                          sub_100005A40(v214, v217);
                          sub_100005A40(a1, a2);
                          sub_100005A40(v205, v75);
                          swift_unknownObjectRelease();

                          int v115 = 0;
                          LODWORD(v44) = 0;
LABEL_68:
                          int v116 = 0;
LABEL_69:
                          NSString v117 = v209;
                          goto LABEL_43;
                        }
LABEL_16:
                        id v76 = objc_allocWithZone((Class)OTBottleContents);
                        sub_1000059E8(v205, v75);
                        Class v77 = sub_100221BD0().super.isa;
                        sub_100005A40(v205, v75);
                        id v44 = [v76 initWithData:v77];

                        id v200 = v44;
                        if (v44)
                        {
                          id v198 = (id)v75;
                          id v78 = [v210 peerID];
                          if (v78)
                          {
                            uint64_t v79 = v78;
                            uint64_t v80 = sub_100222270();
                            uint64_t v82 = v81;

                            id v83 = (uint64_t *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerID];
                            *id v83 = v80;
                            v83[1] = v82;
                            id v84 = [v210 bottleID];
                            if (v84)
                            {
                              id v85 = v84;
                              uint64_t v86 = sub_100222270();
                              uint64_t v88 = v87;

                              Class v89 = (uint64_t *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_bottleID];
                              *Class v89 = v86;
                              v89[1] = v88;
                              uint64_t v195 = *v83;
                              uint64_t v90 = v83[1];
                              swift_bridgeObjectRetain();
                              id v91 = [v200 peerSigningPrivKey];
                              if (v91)
                              {
                                unint64_t v92 = v91;
                                id v223 = 0;
                                id v44 = [v91 asECKeyPair:&v223];

                                uint64_t v16 = v209;
                                if (v44)
                                {
                                  id v93 = v223;
                                  id v94 = [v200 peerEncryptionPrivKey];
                                  if (v94)
                                  {
                                    id v95 = v94;
                                    id v223 = 0;
                                    id v96 = [v94 asECKeyPair:&v223];

                                    id v97 = v223;
                                    if (v96)
                                    {
                                      objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
                                      id v98 = v97;
                                      Class v99 = sub_100043C0C(v195, v90, v44, v96);
                                      uint64_t v194 = OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerKeys;
                                      *(void *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peerKeys] = v99;
                                      uint64_t v129 = (uint64_t *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_contents];
                                      *uint64_t v129 = a1;
                                      v129[1] = a2;
                                      sub_1000059E8(a1, a2);
                                      id v130 = [v210 peerSigningSPKI];
                                      if (v130)
                                      {
                                        uint64_t v131 = v130;
                                        uint64_t v192 = v129;
                                        uint64_t v132 = sub_100221BF0();
                                        uint64_t v134 = v133;

                                        uint64_t v135 = (uint64_t *)&v19[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_peersigningSPKI];
                                        uint64_t *v135 = v132;
                                        v135[1] = v134;
                                        id v136 = [v210 peerSigningSPKI];
                                        if (v136)
                                        {
                                          id v137 = v136;
                                          uint64_t v138 = sub_100221BF0();
                                          unint64_t v140 = v139;

                                          Class v141 = sub_100221BD0().super.isa;
                                          id v142 = self;
                                          id v196 = [v142 keyWithSubjectPublicKeyInfo:v141];
                                          sub_100005A40(v138, v140);

                                          id v143 = [v210 peerEncryptionSPKI];
                                          if (v143)
                                          {
                                            id v144 = v143;
                                            uint64_t v145 = sub_100221BF0();
                                            unint64_t v147 = v146;

                                            Class v148 = sub_100221BD0().super.isa;
                                            id v193 = [v142 keyWithSubjectPublicKeyInfo:v148];
                                            sub_100005A40(v145, v147);

                                            id v149 = [*(id *)(*(void *)&v19[v194]+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey) publicKey];
                                            if (v149)
                                            {
                                              id v150 = v149;
                                              unint64_t v151 = a10;
                                              id v152 = v196;
                                              if (v196)
                                              {
                                                sub_10020411C();
                                                id v153 = v196;
                                                id v154 = v150;
                                                char v155 = sub_100222650();

                                                id v152 = v196;
                                                if ((v155 & 1) == 0) {
                                                  goto LABEL_85;
                                                }
LABEL_80:
                                                uint64_t v156 = v19;
                                                id v157 = [*(id *)(*(void *)&v19[v194]+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey) publicKey];
                                                if (v157)
                                                {
                                                  unint64_t v158 = v157;
                                                  Class v159 = v193;
                                                  if (v193)
                                                  {
                                                    sub_10020411C();
                                                    id v160 = v193;
                                                    id v161 = v158;
                                                    char v162 = sub_100222650();

                                                    if ((v162 & 1) == 0) {
                                                      goto LABEL_91;
                                                    }
LABEL_87:
                                                    id v164 = [v216 encodeSubjectPublicKeyInfo];
                                                    uint64_t v165 = sub_100221BF0();
                                                    uint64_t v167 = v166;

                                                    uint64_t v168 = *v211;
                                                    unint64_t v169 = v211[1];
                                                    *uint64_t v211 = v165;
                                                    v211[1] = v167;
                                                    sub_100005A40(v168, v169);
                                                    uint64_t v170 = (uint64_t *)&v156[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingPeerKey];
                                                    *uint64_t v170 = a9;
                                                    v170[1] = a10;
                                                    id v171 = (uint64_t *)&v156[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_signatureUsingEscrowKey];
                                                    *id v171 = a7;
                                                    v171[1] = a8;
                                                    sub_1000059E8(a7, a8);
                                                    sub_1000059E8(a9, a10);
                                                    id v172 = [v216 keyData];
                                                    uint64_t v173 = sub_100221BF0();
                                                    uint64_t v175 = v174;

                                                    id v176 = (uint64_t *)&v156[OBJC_IVAR____TtC18TrustedPeersHelper11BottledPeer_escrowSigningPublicKey];
                                                    uint64_t *v176 = v173;
                                                    v176[1] = v175;
                                                    uint64_t v177 = *v192;
                                                    unint64_t v178 = v192[1];
                                                    id v212 = objc_allocWithZone((Class)_SFSignedData);
                                                    sub_1000059E8(a9, a10);
                                                    sub_1000059E8(v177, v178);
                                                    Class v179 = sub_100221BD0().super.isa;
                                                    Class v180 = sub_100221BD0().super.isa;
                                                    id v213 = [v212 initWithData:v179 signature:v180];
                                                    sub_100005A40(a9, a10);
                                                    sub_100005A40(v177, v178);

                                                    uint64_t v181 = *(void **)(*(void *)&v156[v194]
                                                                    + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicSigningKey);
                                                    if (v181)
                                                    {
                                                      id v223 = 0;
                                                      id v182 = v181;
                                                      id v183 = [v208 verify:v213 withKey:v182 error:&v223];
                                                      id v184 = v223;
                                                      if (v183)
                                                      {

                                                        uint64_t v185 = sub_100221BF0();
                                                        unint64_t v187 = v186;
                                                        sub_100005A40(v205, (unint64_t)v198);
                                                        swift_unknownObjectRelease();

                                                        sub_100005A40(v185, v187);
                                                        v222.receiver = v156;
                                                        v222.super_class = (Class)type metadata accessor for BottledPeer();
                                                        uint64_t v19 = (char *)objc_msgSendSuper2(&v222, "init");
                                                        sub_100005A40(a9, a10);
                                                        sub_100005A40(a7, a8);
                                                        sub_100005A40(v214, v217);
                                                        sub_100005A40(a1, a2);
                                                        return v19;
                                                      }
                                                      uint64_t v191 = v184;
                                                      sub_100221B40();

                                                      swift_willThrow();
                                                      sub_100005A40(a9, a10);
                                                      sub_100005A40(a7, a8);
                                                      sub_100005A40(v214, v217);
                                                      sub_100005A40(a1, a2);
                                                      sub_100005A40(v205, (unint64_t)v198);
                                                      swift_unknownObjectRelease();

                                                      uint64_t v190 = v203;
                                                    }
                                                    else
                                                    {
                                                      sub_100203D54();
                                                      swift_allocError();
                                                      *uint64_t v189 = 2;
                                                      swift_willThrow();
                                                      sub_100005A40(a9, a10);
                                                      sub_100005A40(a7, a8);
                                                      sub_100005A40(v214, v217);
                                                      sub_100005A40(a1, a2);

                                                      sub_100005A40(v205, (unint64_t)v198);
                                                      swift_unknownObjectRelease();

                                                      uint64_t v190 = v202;
                                                    }

                                                    int v115 = 1;
                                                    LODWORD(v44) = 1;
                                                    int v116 = 1;
                                                    NSString v117 = v209;
                                                    goto LABEL_95;
                                                  }
                                                }
                                                else
                                                {
                                                  Class v159 = v193;
                                                  if (!v193) {
                                                    goto LABEL_87;
                                                  }
                                                }
LABEL_91:
                                                sub_100203D54();
                                                swift_allocError();
                                                *uint64_t v188 = 2;
                                                swift_willThrow();
                                                sub_100005A40(a9, a10);
                                                sub_100005A40(a7, a8);
                                                sub_100005A40(v214, v217);
                                                sub_100005A40(a1, a2);

                                                sub_100005A40(v205, (unint64_t)v198);
                                                swift_unknownObjectRelease();

                                                LODWORD(v44) = 0;
                                                int v115 = 1;
                                                int v116 = 1;
                                                NSString v117 = v209;
LABEL_95:
                                                uint64_t v19 = v156;
                                                goto LABEL_60;
                                              }
                                            }
                                            else
                                            {
                                              unint64_t v151 = a10;
                                              id v152 = v196;
                                              if (!v196) {
                                                goto LABEL_80;
                                              }
                                            }
LABEL_85:
                                            sub_100203D54();
                                            swift_allocError();
                                            *uint64_t v163 = 2;
                                            swift_willThrow();
                                            sub_100005A40(a9, v151);
                                            sub_100005A40(a7, a8);
                                            sub_100005A40(v214, v217);
                                            sub_100005A40(a1, a2);

                                            sub_100005A40(v205, (unint64_t)v198);
                                            swift_unknownObjectRelease();

                                            LODWORD(v44) = 0;
                                            int v115 = 1;
                                            int v116 = 1;
                                            goto LABEL_59;
                                          }
LABEL_106:
                                          __break(1u);
                                          JUMPOUT(0x100203BB8);
                                        }
LABEL_105:
                                        __break(1u);
                                        goto LABEL_106;
                                      }
LABEL_104:
                                      __break(1u);
                                      goto LABEL_105;
                                    }
                                    id v128 = v223;

                                    swift_bridgeObjectRelease();
                                    sub_100221B40();

                                    swift_willThrow();
                                    sub_100005A40(a9, a10);
                                    sub_100005A40(a7, a8);
                                    sub_100005A40(v214, v217);
                                    sub_100005A40(a1, a2);
                                    sub_100005A40(v205, (unint64_t)v198);
                                    swift_unknownObjectRelease();

                                    LODWORD(v44) = 0;
                                    int v116 = 0;
                                    int v115 = 1;
                                    goto LABEL_69;
                                  }
LABEL_103:
                                  __break(1u);
                                  goto LABEL_104;
                                }
                                id v44 = v223;
                                swift_bridgeObjectRelease();
                                sub_100221B40();

                                swift_willThrow();
                                sub_100005A40(a9, a10);
                                sub_100005A40(a7, a8);
                                sub_100005A40(v214, v217);
                                sub_100005A40(a1, a2);
                                sub_100005A40(v205, (unint64_t)v198);
                                swift_unknownObjectRelease();

                                LODWORD(v44) = 0;
                                int v116 = 0;
                                int v115 = 1;
LABEL_42:
                                NSString v117 = v16;
LABEL_43:
                                id v118 = &qword_10029F000;
                                goto LABEL_44;
                              }
LABEL_102:
                              __break(1u);
                              goto LABEL_103;
                            }
LABEL_101:
                            __break(1u);
                            goto LABEL_102;
                          }
LABEL_100:
                          __break(1u);
                          goto LABEL_101;
                        }
                        sub_100203D54();
                        swift_allocError();
                        *id v127 = 0;
                        swift_willThrow();
                        sub_100005A40(a9, a10);
                        sub_100005A40(a7, a8);
                        sub_100005A40(v214, v217);
                        sub_100005A40(a1, a2);
                        sub_100005A40(v205, v75);
                        swift_unknownObjectRelease();

                        uint64_t v123 = v71;
                        break;
                    }
                  }
                  else
                  {
                    uint64_t v122 = v73;
                    sub_100221B40();

                    swift_willThrow();
                    sub_100005A40(a9, a10);
                    sub_100005A40(a7, a8);
                    sub_100005A40(v214, v217);
                    sub_100005A40(a1, a2);
                    swift_unknownObjectRelease();

                    uint64_t v123 = v203;
                  }

                  int v115 = 0;
                  goto LABEL_68;
                }
LABEL_99:
                __break(1u);
                goto LABEL_100;
              }
LABEL_98:
              __break(1u);
              goto LABEL_99;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_98;
        }
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v35 = *v211;
      unint64_t v34 = v211[1];
      unint64_t v33 = 0xF000000000000000;
      uint64_t v36 = a1;
    }
    sub_1000059E8(v35, v34);
    sub_100039FCC(v31, v33);
    sub_100039FCC(v35, v34);
LABEL_36:
    if (qword_100298EE8 != -1) {
      swift_once();
    }
    uint64_t v110 = sub_100222090();
    sub_100003CC8(v110, (uint64_t)qword_10029FCE8);
    id v111 = sub_100222070();
    os_log_type_t v112 = sub_1002224E0();
    uint64_t v16 = v209;
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v113 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v113 = 0;
      _os_log_impl((void *)&_mh_execute_header, v111, v112, "Bottled SPKI does not match re-created SPKI", v113, 2u);
      swift_slowDealloc();
    }

    sub_100203D54();
    swift_allocError();
    unsigned char *v114 = 8;
    swift_willThrow();
    sub_100005A40(a9, a10);
    sub_100005A40(a7, a8);
    sub_100005A40(v214, v217);
    sub_100005A40(v36, a2);
    swift_unknownObjectRelease();

LABEL_41:
    int v115 = 0;
    LODWORD(v44) = 0;
    int v116 = 0;
    goto LABEL_42;
  }
  sub_100005A40(a9, a10);
  sub_100005A40(a7, a8);
  sub_100005A40(a3, a4);
  sub_100005A40(a1, a2);
  sub_100005A40(*(void *)v16, *((void *)v16 + 1));
  uint64_t v19 = v17;
LABEL_51:

  type metadata accessor for BottledPeer();
  swift_deallocPartialClassInstance();
  return v19;
}

id sub_100203BF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BottledPeer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BottledPeer()
{
  return self;
}

unint64_t sub_100203D54()
{
  unint64_t result = qword_10029FD80;
  if (!qword_10029FD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029FD80);
  }
  return result;
}

BOOL sub_100203DA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100203DBC(uint64_t a1)
{
  unint64_t v2 = sub_100204000();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100203DF8(uint64_t a1)
{
  unint64_t v2 = sub_100204000();

  return Error<>._code.getter(a1, v2);
}

void *sub_100203E34(char a1)
{
  unint64_t v1 = 0xD000000000000021;
  unint64_t v2 = 0x8000000100246AC0;
  switch(a1)
  {
    case 1:
      unint64_t v1 = 0xD000000000000021;
      uint64_t v3 = "could not decrypt bottle contents";
      goto LABEL_11;
    case 2:
      unint64_t v1 = 0xD000000000000031;
      uint64_t v3 = "public and private peer signing keys do not match";
      goto LABEL_11;
    case 3:
      unint64_t v1 = 0xD000000000000017;
      uint64_t v3 = "failed to create bottle";
      goto LABEL_11;
    case 4:
      unint64_t v1 = 0xD000000000000029;
      uint64_t v3 = "failed to create authenticated ciphertext";
      goto LABEL_11;
    case 5:
      uint64_t v4 = "failed to create private key";
      goto LABEL_8;
    case 6:
      uint64_t v4 = "failed to create escrow keys";
LABEL_8:
      unint64_t v2 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      unint64_t v1 = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t v1 = 0xD000000000000018;
      uint64_t v3 = "failed to create entropy";
      goto LABEL_11;
    case 8:
      unint64_t v1 = 0xD000000000000043;
      uint64_t v3 = "keys generated by the entropy+salt do not match the bottle contents";
LABEL_11:
      unint64_t v2 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  uint64_t v5 = sub_100222270();
  uint64_t v7 = v6;
  uint64_t v12 = &type metadata for String;
  *(void *)&long long v11 = v1;
  *((void *)&v11 + 1) = v2;
  sub_100005A98(&v11, v10);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10018A6E4(v10, v5, v7, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return &_swiftEmptyDictionarySingleton;
}

unint64_t sub_100203FC8()
{
  return 0xD000000000000024;
}

uint64_t sub_100203FE4()
{
  return qword_100231D18[*v0];
}

void *sub_100203FF8()
{
  return sub_100203E34(*v0);
}

unint64_t sub_100204000()
{
  unint64_t result = qword_10029FD88;
  if (!qword_10029FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029FD88);
  }
  return result;
}

void sub_100204054(int *a1)
{
  sub_100221BA0();
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if ((int)v3 < (int)v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = sub_100221A30();
  if (!v4)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_100221A60();
  uint64_t v7 = v2 - v6;
  if (__OFSUB__(v2, v6))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v8 = v3 - v2;
  uint64_t v9 = sub_100221A50();
  if (v9 >= v8) {
    size_t v10 = v8;
  }
  else {
    size_t v10 = v9;
  }
  if (SecRandomCopyBytes(kSecRandomDefault, v10, (void *)(v5 + v7)))
  {
    sub_100203D54();
    swift_allocError();
    *long long v11 = 7;
    swift_willThrow();
  }
}

unint64_t sub_10020411C()
{
  unint64_t result = qword_10029FD90;
  if (!qword_10029FD90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10029FD90);
  }
  return result;
}

uint64_t sub_10020415C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v10 = [objc_allocWithZone((Class)_SFECKeySpecifier) initWithCurve:4];
  id v11 = [objc_allocWithZone((Class)_SFSHA384DigestOperation) init];
  id v12 = [objc_allocWithZone((Class)_SFEC_X962SigningOperation) initWithKeySpecifier:v10 digestOperation:v11];

  id v13 = objc_allocWithZone((Class)_SFSignedData);
  sub_1000059E8(a1, a2);
  sub_1000059E8(a3, a4);
  Class isa = sub_100221BD0().super.isa;
  Class v15 = sub_100221BD0().super.isa;
  id v16 = [v13 initWithData:isa signature:v15];
  sub_100005A40(a3, a4);
  sub_100005A40(a1, a2);

  id v24 = 0;
  id v17 = [v12 verify:v16 withKey:a5 error:&v24];
  id v18 = v24;
  if (v17)
  {
    uint64_t v19 = sub_100221BF0();
    unint64_t v21 = v20;

    sub_100005A40(v19, v21);
  }
  else
  {
    uint64_t v22 = v18;
    sub_100221B40();

    swift_willThrow();
  }
  return 1;
}

uint64_t getEnumTagSinglePayload for BottledPeer.Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BottledPeer.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002044BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

unsigned char *sub_1002044E4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BottledPeer.Error()
{
  return &type metadata for BottledPeer.Error;
}

unint64_t sub_100204500()
{
  unint64_t result = qword_10029FD98;
  if (!qword_10029FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029FD98);
  }
  return result;
}

id sub_100204558(void *a1, void *a2)
{
  id result = [a1 hasChanges];
  if ((result & 1) == 0)
  {
    return [a2 refreshObject:a1 mergeChanges:0];
  }
  return result;
}

void sub_1002045BC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_100298EF0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100222090();
  sub_100003CC8(v6, (uint64_t)qword_10029FDA0);
  BOOL v7 = sub_100222070();
  os_log_type_t v8 = sub_1002224F0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "onqueueRemoveDuplicateVouchers start", v9, 2u);
    swift_slowDealloc();
  }

  sub_100206310(a1, a2, v3);
}

uint64_t sub_1002046E0()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_10029FDA0);
  sub_100003CC8(v0, (uint64_t)qword_10029FDA0);
  return sub_100222080();
}

id sub_10020475C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t *a7, uint64_t *a8)
{
  id v12 = [a1 voucherInfo];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = sub_100221BF0();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0xC000000000000000;
  }
  uint64_t v156 = a6;
  id v159 = a1;
  id v17 = [a1 voucherInfoSig];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = sub_100221BF0();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xC000000000000000;
  }
  Class isa = sub_100221BD0().super.isa;
  Class v23 = sub_100221BD0().super.isa;
  id v24 = [self voucherInfoWithData:isa sig:v23];
  sub_100005A40(v19, v21);
  sub_100005A40(v14, v16);

  if (v24)
  {
    id v25 = v24;
    id v26 = [v25 beneficiaryID];
    uint64_t v27 = sub_100222270();
    uint64_t v29 = v28;

    id v30 = [a4 peerID];
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = sub_100222270();
      uint64_t v34 = v33;

      if (v27 == v32 && v29 == v34)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_19;
      }
      char v45 = sub_100222A30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v45)
      {
LABEL_19:
        uint64_t v46 = *a8;
        swift_bridgeObjectRetain();
        char v47 = sub_1000396BC(v25, v46);
        swift_bridgeObjectRelease();
        if (v47)
        {
          id v48 = v159;
          if (qword_100298EF0 != -1) {
            swift_once();
          }
          uint64_t v49 = sub_100222090();
          sub_100003CC8(v49, (uint64_t)qword_10029FDA0);
          id v50 = v25;
          id v51 = a4;
          id v52 = v50;
          id v53 = v51;
          id v54 = v52;
          unint64_t v55 = sub_100222070();
          os_log_type_t v56 = sub_100222520();
          if (os_log_type_enabled(v55, v56))
          {
            uint64_t v57 = swift_slowAlloc();
            uint64_t v162 = swift_slowAlloc();
            *(_DWORD *)uint64_t v57 = 136446978;
            id v58 = [v53 peerID];
            if (v58)
            {
              uint64_t v59 = v58;
              uint64_t v60 = sub_100222270();
              unint64_t v62 = v61;
            }
            else
            {
              uint64_t v60 = 7104878;
              unint64_t v62 = 0xE300000000000000;
            }
            sub_1001BEBDC(v60, v62, &v162);
            sub_100222690();

            swift_bridgeObjectRelease();
            *(_WORD *)(v57 + 12) = 2082;
            id v136 = [v54 sponsorID];
            uint64_t v137 = sub_100222270();
            unint64_t v139 = v138;

            sub_1001BEBDC(v137, v139, &v162);
            sub_100222690();

            swift_bridgeObjectRelease();
            *(_WORD *)(v57 + 22) = 2082;
            id v140 = [v54 beneficiaryID];
            uint64_t v141 = sub_100222270();
            unint64_t v143 = v142;

            sub_1001BEBDC(v141, v143, &v162);
            sub_100222690();

            swift_bridgeObjectRelease();
            *(_WORD *)(v57 + 32) = 2050;
            [v54 reason];

            sub_100222690();
            _os_log_impl((void *)&_mh_execute_header, v55, v56, "duplicate voucher for peerID %{public}s sponsorID %{public}s beneficiaryID %{public}s reason %{public}lu", (uint8_t *)v57, 0x2Au);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            id v48 = v159;
          }
          else
          {
          }
          id v144 = v48;
          sub_1002223A0();
          if (*(void *)((*v156 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v156 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1002223F0();
          }
          sub_100222410();
          sub_1002223E0();
        }
        else
        {
          id v77 = v25;
          sub_100190890(&v162, v77);

          id v48 = v159;
          if (qword_100298EF0 != -1) {
            swift_once();
          }
          uint64_t v78 = sub_100222090();
          sub_100003CC8(v78, (uint64_t)qword_10029FDA0);
          id v79 = v77;
          id v80 = a4;
          id v81 = v79;
          id v82 = v80;
          id v54 = v81;
          id v83 = sub_100222070();
          os_log_type_t v84 = sub_1002224F0();
          if (os_log_type_enabled(v83, v84))
          {
            uint64_t v85 = swift_slowAlloc();
            uint64_t v162 = swift_slowAlloc();
            *(_DWORD *)uint64_t v85 = 136446978;
            id v86 = [v82 peerID];
            if (v86)
            {
              uint64_t v87 = v86;
              uint64_t v88 = sub_100222270();
              unint64_t v90 = v89;
            }
            else
            {
              uint64_t v88 = 7104878;
              unint64_t v90 = 0xE300000000000000;
            }
            sub_1001BEBDC(v88, v90, &v162);
            sub_100222690();

            swift_bridgeObjectRelease();
            *(_WORD *)(v85 + 12) = 2082;
            id v145 = [v54 sponsorID];
            uint64_t v146 = sub_100222270();
            unint64_t v148 = v147;

            sub_1001BEBDC(v146, v148, &v162);
            sub_100222690();

            swift_bridgeObjectRelease();
            *(_WORD *)(v85 + 22) = 2082;
            id v149 = [v54 beneficiaryID];
            uint64_t v150 = sub_100222270();
            unint64_t v152 = v151;

            sub_1001BEBDC(v150, v152, &v162);
            sub_100222690();

            swift_bridgeObjectRelease();
            *(_WORD *)(v85 + 32) = 2050;
            [v54 reason];

            sub_100222690();
            _os_log_impl((void *)&_mh_execute_header, v83, v84, "voucher kept for peerID %{public}s sponsorID %{public}s beneficiaryID %{public}s reason %{public}lu", (uint8_t *)v85, 0x2Au);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            id v48 = v159;
            goto LABEL_66;
          }
        }
LABEL_66:
        id result = [v48 hasChanges];
        if ((result & 1) == 0) {
          return [a3 refreshObject:v48 mergeChanges:0];
        }
        return result;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_100298EF0 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_100222090();
    sub_100003CC8(v63, (uint64_t)qword_10029FDA0);
    id v64 = v25;
    id v65 = a4;
    id v66 = v64;
    id v67 = v65;
    id v68 = v66;
    id v69 = sub_100222070();
    os_log_type_t v70 = sub_100222520();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v162 = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 136446978;
      id v72 = [v67 peerID];
      os_log_type_t v154 = v70;
      if (v72)
      {
        id v73 = v72;
        uint64_t v74 = sub_100222270();
        unint64_t v76 = v75;
      }
      else
      {
        uint64_t v74 = 7104878;
        unint64_t v76 = 0xE300000000000000;
      }
      sub_1001BEBDC(v74, v76, &v162);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2082;
      id v93 = [v68 sponsorID];
      uint64_t v94 = sub_100222270();
      unint64_t v96 = v95;

      sub_1001BEBDC(v94, v96, &v162);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 22) = 2082;
      id v97 = [v68 beneficiaryID];
      uint64_t v98 = sub_100222270();
      unint64_t v100 = v99;

      sub_1001BEBDC(v98, v100, &v162);
      sub_100222690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 32) = 2050;
      [v68 reason];

      sub_100222690();
      _os_log_impl((void *)&_mh_execute_header, v69, v154, "voucher inconsistency for peerID %{public}s sponsorID %{public}s beneficiaryID %{public}s reason %{public}lu", (uint8_t *)v71, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v101 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v102 = sub_100222260();
    id v103 = [v101 initWithEntityName:v102];

    sub_1002068E0();
    sub_1000046DC(&qword_100299578);
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = xmmword_100229380;
    *(void *)(v104 + 56) = type metadata accessor for ContainerMO();
    *(void *)(v104 + 64) = sub_1002073E0(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
    *(void *)(v104 + 32) = a5;
    id v105 = a5;
    id v106 = [v68 beneficiaryID];
    uint64_t v107 = sub_100222270();
    uint64_t v109 = v108;

    *(void *)(v104 + 96) = &type metadata for String;
    *(void *)(v104 + 104) = sub_10000D794();
    *(void *)(v104 + 72) = v107;
    *(void *)(v104 + 80) = v109;
    uint64_t v110 = (void *)sub_1002224C0();
    [v103 setPredicate:v110];

    [v103 setFetchLimit:1];
    type metadata accessor for PeerMO();
    uint64_t v111 = sub_1002225D0();
    if (!v160)
    {
      id v48 = v159;
      if (v111)
      {
        os_log_type_t v112 = sub_100222070();
        os_log_type_t v113 = sub_100222520();
        if (os_log_type_enabled(v112, v113))
        {
          unint64_t v114 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v114 = 0;
          _os_log_impl((void *)&_mh_execute_header, v112, v113, "moving voucher", v114, 2u);
          swift_slowDealloc();
        }

        id v115 = [v68 beneficiaryID];
        uint64_t v116 = sub_100222270();
        uint64_t v118 = v117;

        if (*(void *)(*a7 + 16) && (sub_10000AB48(v116, v118), (v119 & 1) != 0)) {
          NSString v120 = (void *)swift_bridgeObjectRetain();
        }
        else {
          NSString v120 = _swiftEmptyArrayStorage;
        }
        uint64_t v162 = (uint64_t)v120;
        swift_bridgeObjectRelease();
        id v121 = v159;
        sub_1002223A0();
        if (*(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
        id v122 = [v68 beneficiaryID];
        uint64_t v123 = sub_100222270();
        uint64_t v125 = v124;

        uint64_t v126 = v162;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v161 = *a7;
        *a7 = 0x8000000000000000;
        sub_10018B630(v126, v123, v125, isUniquelyReferenced_nonNull_native);
        *a7 = v161;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v128 = v68;
        uint64_t v129 = sub_100222070();
        os_log_type_t v130 = sub_100222500();
        if (os_log_type_enabled(v129, v130))
        {
          uint64_t v131 = (uint8_t *)swift_slowAlloc();
          uint64_t v162 = swift_slowAlloc();
          *(_DWORD *)uint64_t v131 = 136315138;
          id v132 = [v128 beneficiaryID];
          uint64_t v133 = sub_100222270();
          unint64_t v135 = v134;

          sub_1001BEBDC(v133, v135, &v162);
          sub_100222690();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v129, v130, "deleting voucher due to peerID not found: %s", v131, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        id v48 = v159;
        id v153 = v159;
        sub_1002223A0();
        if (*(void *)((*v156 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v156 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
      goto LABEL_66;
    }

    id v91 = v159;
    id result = [v159 hasChanges];
    if (result) {
      return result;
    }
    return [a3 refreshObject:v91 mergeChanges:0];
  }
  if (qword_100298EF0 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_100222090();
  sub_100003CC8(v35, (uint64_t)qword_10029FDA0);
  id v36 = a4;
  char v37 = sub_100222070();
  os_log_type_t v38 = sub_100222500();
  if (os_log_type_enabled(v37, v38))
  {
    id v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v162 = swift_slowAlloc();
    *(_DWORD *)id v39 = 136446210;
    id v40 = [v36 peerID];
    if (v40)
    {
      Class v41 = v40;
      uint64_t v42 = sub_100222270();
      unint64_t v44 = v43;
    }
    else
    {
      uint64_t v42 = 7104878;
      unint64_t v44 = 0xE300000000000000;
    }
    sub_1001BEBDC(v42, v44, &v162);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "voucher dedup unable to construct TPVoucher for peerID %{public}s, leaving in DB", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v91 = v159;
  id result = [v159 hasChanges];
  if ((result & 1) == 0) {
    return [a3 refreshObject:v91 mergeChanges:0];
  }
  return result;
}

void sub_100205A08(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, void *a5)
{
  sub_100205A88(a4, a5, a1, a2, a3);
}

void sub_100205A88(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id v7 = (id)a4;
  uint64_t v8 = a3;
  id v10 = (void *)sub_1001A0BC8((uint64_t)a1, a2, a3, a4);
  if (v5)
  {
LABEL_2:
    swift_errorRetain();
    if (qword_100298EF0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100222090();
    sub_100003CC8(v11, (uint64_t)qword_10029FDA0);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v12 = sub_100222070();
    os_log_type_t v13 = sub_100222500();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      unint64_t v15 = (void *)swift_slowAlloc();
      id v56 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446466;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v8, (unint64_t)v7, (uint64_t *)&v56);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2112;
      swift_errorRetain();
      uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
      sub_100222690();
      *unint64_t v15 = v55;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to move vouchers for beneficiary %{public}s): %@", (uint8_t *)v14, 0x16u);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    return;
  }
  unint64_t v16 = v10;
  uint64_t v53 = v8;
  unint64_t v17 = a5 >> 62;
  if (!v10)
  {
    if (qword_100298EF0 == -1) {
      goto LABEL_17;
    }
    goto LABEL_53;
  }
  if (v17)
  {
    id v33 = v10;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100222970();
    if (!v18) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v19 = v10;
    swift_bridgeObjectRetain();
    if (!v18) {
      goto LABEL_29;
    }
  }
  if (v18 < 1)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    swift_once();
LABEL_17:
    uint64_t v23 = sub_100222090();
    sub_100003CC8(v23, (uint64_t)qword_10029FDA0);
    swift_bridgeObjectRetain_n();
    id v24 = sub_100222070();
    os_log_type_t v25 = sub_100222500();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      id v56 = (id)swift_slowAlloc();
      *(_DWORD *)id v26 = 136446210;
      id v52 = v26 + 4;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v53, (unint64_t)v7, (uint64_t *)&v56);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Could not find peerMO for beneficiary %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v17)
    {
      id v50 = a1;
      swift_bridgeObjectRetain();
      id v51 = v50;
      uint64_t v27 = sub_100222970();
      if (v27) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v28 = a1;
      swift_bridgeObjectRetain();
      id v29 = v28;
      if (v27)
      {
LABEL_22:
        if (v27 < 1) {
          __break(1u);
        }
        for (uint64_t i = 0; i != v27; ++i)
        {
          if ((a5 & 0xC000000000000001) != 0) {
            id v31 = (id)sub_100222880();
          }
          else {
            id v31 = *(id *)(a5 + 8 * i + 32);
          }
          uint64_t v32 = v31;
          objc_msgSend(a1, "deleteObject:", v31, v52);
        }
      }
    }
    swift_bridgeObjectRelease();

    return;
  }
  for (uint64_t j = 0; j != v18; ++j)
  {
    if ((a5 & 0xC000000000000001) != 0) {
      id v21 = (id)sub_100222880();
    }
    else {
      id v21 = *(id *)(a5 + 8 * j + 32);
    }
    uint64_t v22 = v21;
    [v16 addVouchersObject:v21];
  }
LABEL_29:
  swift_bridgeObjectRelease();

  id v56 = 0;
  unsigned __int8 v34 = [a1 save:&v56];
  id v35 = v56;
  if ((v34 & 1) == 0)
  {
    id v43 = v56;
    sub_100221B40();

    swift_willThrow();
    if (qword_100298EF0 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_100222090();
    sub_100003CC8(v44, (uint64_t)qword_10029FDA0);
    swift_errorRetain();
    swift_errorRetain();
    char v45 = sub_100222070();
    os_log_type_t v46 = sub_100222500();
    if (os_log_type_enabled(v45, v46))
    {
      char v47 = (uint8_t *)swift_slowAlloc();
      id v54 = (void *)swift_slowAlloc();
      *(_DWORD *)char v47 = 138543362;
      swift_errorRetain();
      id v48 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v56 = v48;
      sub_100222690();
      void *v54 = v48;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "voucher cleanup unable to save %{public}@", v47, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_willThrow();
    uint64_t v8 = v53;
    goto LABEL_2;
  }
  if (v18)
  {
    unint64_t v17 = a5 & 0xC000000000000001;
    swift_bridgeObjectRetain_n();
    id v36 = v35;
    id v7 = a1;
    uint64_t v37 = 4;
    uint64_t v38 = 0;
    if ((a5 & 0xC000000000000001) == 0) {
      goto LABEL_33;
    }
LABEL_32:
    for (id k = (id)sub_100222880(); ; id k = *(id *)(a5 + 8 * v37))
    {
      id v40 = k;
      BOOL v41 = __OFADD__(v38, 1);
      uint64_t v42 = v38 + 1;
      if (v41) {
        break;
      }
      if (([k hasChanges] & 1) == 0) {
        [v7 refreshObject:v40 mergeChanges:0];
      }

      if (v42 == v18)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_48;
      }
      uint64_t v38 = ++v37 - 4;
      if (v17) {
        goto LABEL_32;
      }
LABEL_33:
      ;
    }
    __break(1u);
    goto LABEL_52;
  }
  id v49 = v56;
LABEL_48:
  if (([v16 hasChanges] & 1) == 0) {
    [a1 refreshObject:v16 mergeChanges:0];
  }
}

void sub_100206310(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v8 = sub_100222260();
  id v9 = [v7 initWithEntityName:v8];

  sub_1002068E0();
  sub_1000046DC(&qword_100299578);
  uint64_t v10 = swift_allocObject();
  long long v31 = xmmword_100229540;
  *(_OWORD *)(v10 + 16) = xmmword_100229540;
  *(void *)(v10 + 56) = type metadata accessor for ContainerMO();
  *(void *)(v10 + 64) = sub_1002073E0(&qword_10029EBA8, (void (*)(uint64_t))type metadata accessor for ContainerMO);
  *(void *)(v10 + 32) = a1;
  id v11 = a1;
  id v12 = (void *)sub_1002224C0();
  [v9 setPredicate:v12];

  sub_1000046DC(&qword_10029EC28);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v31;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 32) = 0x444972656570;
  *(void *)(v13 + 40) = 0xE600000000000000;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v9 setPropertiesToFetch:isa];

  [v9 setFetchBatchSize:10];
  char v40 = 0;
  id v36 = &v40;
  uint64_t v37 = a3;
  id v38 = v11;
  id v39 = a2;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  id v33 = sub_100206970;
  uint64_t v34 = v15;
  id v16 = a2;
  sub_100114A8C(v9, (void (*)(void *, unsigned char *))sub_100206920, (uint64_t)v35, (void (*)(unint64_t))sub_1002069BC, (uint64_t)v32);
  swift_release();
  if (!v3)
  {
    if (v40 == 1)
    {
      if (qword_100298EF0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_100222090();
      sub_100003CC8(v17, (uint64_t)qword_10029FDA0);
      uint64_t v18 = sub_100222070();
      os_log_type_t v19 = sub_100222520();
      if (os_log_type_enabled(v18, v19))
      {
        unint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "voucher cleanup: have to iterate again", v20, 2u);
        swift_slowDealloc();
      }

      char v40 = 0;
      __chkstk_darwin(v21, v22);
      void v30[2] = &v40;
      v30[3] = a3;
      v30[4] = v11;
      v30[5] = v16;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v16;
      uint64_t v29[2] = sub_100206A14;
      v29[3] = __chkstk_darwin(v23, v24);
      id v25 = v16;
      sub_100114A8C(v9, (void (*)(void *, unsigned char *))sub_100206920, (uint64_t)v30, (void (*)(unint64_t))sub_10020755C, (uint64_t)v29);
      swift_release();
      if (v40 == 1)
      {
        id v26 = sub_100222070();
        os_log_type_t v27 = sub_100222500();
        if (os_log_type_enabled(v26, v27))
        {
          id v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "voucher cleanup: Unexpectedly have to iterate again??", v28, 2u);
          swift_slowDealloc();
        }
      }
    }
    objc_msgSend(v16, "refreshAllObjects", v31);
  }
}

uint64_t sub_1002067C8(uint64_t a1, void (*a2)(void *))
{
  v5[3] = sub_1000046DC(&qword_10029FDC0);
  v5[4] = sub_100207460();
  v5[0] = a1;
  swift_bridgeObjectRetain();
  a2(v5);
  return sub_100004788((uint64_t)v5);
}

uint64_t sub_100206840(void *a1, void *a2)
{
  sub_1000059A4(a1, a1[3]);
  *(void *)(swift_allocObject() + 16) = a2;
  id v3 = a2;
  sub_100222390();
  return swift_release();
}

unint64_t sub_1002068E0()
{
  unint64_t result = qword_10029EB70;
  if (!qword_10029EB70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10029EB70);
  }
  return result;
}

uint64_t sub_100206920(void *a1)
{
  return sub_1002069D8(a1);
}

uint64_t sub_100206938()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100206970(void *a1)
{
  return sub_100206840(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002069BC(uint64_t a1)
{
  return sub_1002067C8(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1002069D8(void *a1)
{
  id v3 = *(unsigned char **)(v1 + 16);
  uint64_t result = sub_100206C5C(a1, *(void ***)(v1 + 32), *(void **)(v1 + 40));
  if (!v2) {
    *id v3 = (result | *v3) & 1;
  }
  return result;
}

uint64_t sub_100206A14(void *a1)
{
  return sub_100206840(a1, *(void **)(v1 + 16));
}

uint64_t sub_100206A64(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_100206A90(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100206ABC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v4 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v4 + 8 * v10);
        if (!v18)
        {
          int64_t v10 = v17 + 3;
          if (v17 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v4 + 8 * v10);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v8) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100206C5C(void *a1, void **a2, void *a3)
{
  uint64_t v4 = v3;
  if (qword_100298EF0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  uint64_t v9 = sub_100003CC8(v8, (uint64_t)qword_10029FDA0);
  id v10 = a1;
  uint64_t v52 = v9;
  unint64_t v11 = sub_100222070();
  os_log_type_t v12 = sub_100222520();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v51 = v3;
    uint64_t v53 = a2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    id v14 = [v10 peerID];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = sub_100222270();
      unint64_t v18 = v17;
    }
    else
    {
      unint64_t v18 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    unint64_t v56 = sub_1001BEBDC(v16, v18, (uint64_t *)&v57);
    sub_100222690();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "cleaning up vouchers for peer %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v53;
    uint64_t v4 = v51;
  }
  else
  {
  }
  uint64_t v57 = &_swiftEmptySetSingleton;
  unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v55 = &_swiftEmptyDictionarySingleton;
  id v19 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v20 = sub_100222260();
  id v21 = [v19 initWithEntityName:v20];

  sub_1002068E0();
  sub_1000046DC(&qword_100299578);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100229540;
  *(void *)(v22 + 56) = type metadata accessor for PeerMO();
  *(void *)(v22 + 64) = sub_1002073E0(&qword_10029FDB8, (void (*)(uint64_t))type metadata accessor for PeerMO);
  *(void *)(v22 + 32) = v10;
  id v23 = v10;
  uint64_t v24 = (void *)sub_1002224C0();
  [v21 setPredicate:v24];

  sub_1000046DC(&qword_10029EC28);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100229380;
  *(void *)(v25 + 32) = 0x4972656863756F76;
  *(void *)(v25 + 40) = 0xEB000000006F666ELL;
  *(void *)(v25 + 88) = &type metadata for String;
  *(void *)(v25 + 56) = &type metadata for String;
  strcpy((char *)(v25 + 64), "voucherInfoSig");
  *(unsigned char *)(v25 + 79) = -18;
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  [v21 setPropertiesToFetch:isa];

  id v27 = [v21 setFetchBatchSize:10];
  uint64_t v28 = (uint64_t)&v51;
  __chkstk_darwin(v27, v29);
  v48[2] = a3;
  v48[3] = v23;
  uint64_t v48[4] = a2;
  v48[5] = &v56;
  id v49 = (void **)&v55;
  id v50 = &v57;
  sub_100114DA0(v21, (void (*)(void *, unsigned char *))sub_100207434, (uint64_t)v48, (void (*)(unint64_t))ResetReason.rawValue.getter, 0);
  if (v4)
  {

LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v28 & 1;
  }
  unint64_t v30 = v56;
  uint64_t v53 = a2;
  if (v56 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id v36 = a3;
    uint64_t v31 = sub_100222970();
    if (!v31) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v31 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    id v32 = a3;
    if (!v31) {
      goto LABEL_20;
    }
  }
  if (v31 < 1) {
    __break(1u);
  }
  for (uint64_t i = 0; i != v31; ++i)
  {
    if ((v30 & 0xC000000000000001) != 0) {
      id v34 = (id)sub_100222880();
    }
    else {
      id v34 = *(id *)(v30 + 8 * i + 32);
    }
    id v35 = v34;
    objc_msgSend(a3, "deleteObject:", v34, v51, v52);
  }
LABEL_20:

  swift_bridgeObjectRelease_n();
  id v54 = 0;
  id v37 = [a3 save:&v54];
  id v39 = v54;
  if ((v37 & 1) == 0)
  {
    id v42 = v54;
    sub_100221B40();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v28 = sub_100222070();
    os_log_type_t v43 = sub_100222500();
    if (os_log_type_enabled((os_log_t)v28, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      char v45 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 138543362;
      swift_errorRetain();
      os_log_type_t v46 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v54 = v46;
      sub_100222690();
      void *v45 = v46;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v28, v43, "voucher cleanup unable to save %{public}@", v44, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_willThrow();
    goto LABEL_26;
  }
  __chkstk_darwin(v37, v38);
  id v49 = (void **)a3;
  id v50 = v53;
  id v40 = v39;
  uint64_t v41 = swift_bridgeObjectRetain();
  sub_100206ABC(v41, (void (*)(uint64_t, uint64_t, uint64_t))sub_100207458);
  swift_bridgeObjectRelease();

  uint64_t v28 = v55[2];
  swift_bridgeObjectRelease();
  LOBYTE(v28) = v28 != 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28 & 1;
}

uint64_t sub_1002073E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100207434(void *a1, uint64_t a2)
{
  return sub_10020475C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(uint64_t **)(v2 + 48), *(uint64_t **)(v2 + 56));
}

void sub_100207458(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100205A08(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24));
}

unint64_t sub_100207460()
{
  unint64_t result = qword_10029FDC8;
  if (!qword_10029FDC8)
  {
    sub_100004870(&qword_10029FDC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029FDC8);
  }
  return result;
}

id sub_1002074BC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  id result = [a1 hasChanges];
  if ((result & 1) == 0)
  {
    return [v3 refreshObject:a1 mergeChanges:0];
  }
  return result;
}

uint64_t sub_100207520(void *a1, uint64_t (*a2)(void))
{
  return sub_100206A64(a1, a2);
}

uint64_t sub_100207538(void *a1)
{
  return sub_100206A90(a1);
}

uint64_t sub_10020755C(uint64_t a1)
{
  return sub_1002069BC(a1);
}

BOOL sub_100207578(void **a1, void **a2)
{
  return _sSo15TPPolicyVersionC18TrustedPeersHelperE1loiySbAB_ABtFZ_0(*a1, *a2);
}

BOOL _sSo15TPPolicyVersionC18TrustedPeersHelperE1loiySbAB_ABtFZ_0(void *a1, void *a2)
{
  id v4 = [a1 versionNumber];
  if (v4 == [a2 versionNumber])
  {
    id v5 = [a1 policyHash];
    uint64_t v6 = sub_100222270();
    uint64_t v8 = v7;

    id v9 = [a2 policyHash];
    uint64_t v10 = sub_100222270();
    uint64_t v12 = v11;

    if (v6 == v10 && v8 == v12)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
    else
    {
      char v14 = sub_100222A30();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
  }
  else
  {
    id v16 = [a1 versionNumber];
    return v16 < [a2 versionNumber];
  }
}

unint64_t sub_1002076B8()
{
  unint64_t result = qword_10029FDD0;
  if (!qword_10029FDD0)
  {
    sub_1000438B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029FDD0);
  }
  return result;
}

id VoucherMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

id BottleMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for BottleMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for BottleMO()
{
  return self;
}

id BottleMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BottleMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static BottleMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

void *sub_1002078E0()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_1002078EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BottleMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id ContainerMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ContainerMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for ContainerMO()
{
  return self;
}

id ContainerMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContainerMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static ContainerMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100207AB0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ContainerMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id CustodianRecoveryKeyMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CustodianRecoveryKeyMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for CustodianRecoveryKeyMO()
{
  return self;
}

id CustodianRecoveryKeyMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CustodianRecoveryKeyMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static CustodianRecoveryKeyMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100207C74@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CustodianRecoveryKeyMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id EscrowClientMetadataMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for EscrowClientMetadataMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for EscrowClientMetadataMO()
{
  return self;
}

id EscrowClientMetadataMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EscrowClientMetadataMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static EscrowClientMetadataMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100207E38@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EscrowClientMetadataMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id EscrowMetadataMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for EscrowMetadataMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for EscrowMetadataMO()
{
  return self;
}

id EscrowMetadataMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EscrowMetadataMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static EscrowMetadataMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100208004@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EscrowMetadataMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id EscrowRecordMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for EscrowRecordMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for EscrowRecordMO()
{
  return self;
}

id EscrowRecordMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EscrowRecordMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static EscrowRecordMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_1002081CC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EscrowRecordMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id MachineMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for MachineMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for MachineMO()
{
  return self;
}

id MachineMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MachineMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static MachineMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_10020838C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MachineMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id PasscodeGen.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for PasscodeGen();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for PasscodeGen()
{
  return self;
}

id PasscodeGen.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PasscodeGen();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static PasscodeGen.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100208554@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PasscodeGen();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id PeerMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for PeerMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for PeerMO()
{
  return self;
}

id PeerMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PeerMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static PeerMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_10020870C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PeerMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id PolicyMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for PolicyMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for PolicyMO()
{
  return self;
}

id PolicyMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PolicyMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static PolicyMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_1002088C8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PolicyMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id RecoveryVoucherMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for RecoveryVoucherMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for RecoveryVoucherMO()
{
  return self;
}

id RecoveryVoucherMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecoveryVoucherMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static RecoveryVoucherMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100208A94@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RecoveryVoucherMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

id VoucherMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for VoucherMO();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for VoucherMO()
{
  return self;
}

id VoucherMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VoucherMO();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static VoucherMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100222260();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100208C54@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VoucherMO();
  uint64_t result = sub_100222860();
  *a1 = result;
  return result;
}

void sub_100208E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100208E6C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100208E7C(uint64_t a1)
{
}

void sub_100208E84(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [a3 userInfo];
  obuint64_t j = [v4 objectForKeyedSubscript:@"CKRetryAfter"];

  id v5 = obj;
  if (obj)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    if (*(void *)(v6 + 40))
    {
      [obj doubleValue];
      double v8 = v7;
      [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) doubleValue];
      id v5 = obj;
      if (v8 >= v9) {
        goto LABEL_6;
      }
      uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    }
    objc_storeStrong((id *)(v6 + 40), obj);
    id v5 = obj;
  }
LABEL_6:
}

uint64_t sub_10020C3B8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 24;
        goto LABEL_44;
      case 2u:
        uint64_t v15 = objc_alloc_init(OTEscrowRecordMetadataClientMetadata);
        objc_storeStrong((id *)(a1 + 56), v15);
        if (!PBReaderPlaceMark() || (sub_10021A960((uint64_t)v15, a2) & 1) == 0) {
          goto LABEL_59;
        }
        goto LABEL_47;
      case 3u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 96) |= 2u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if (v20 < 0)
            {
              v16 += 7;
              BOOL v9 = v17++ >= 9;
              if (v9)
              {
                uint64_t v18 = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v18 = 0;
        }
LABEL_51:
        uint64_t v26 = 16;
        goto LABEL_56;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_44;
      case 5u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v18 |= (unint64_t)(v24 & 0x7F) << v21;
            if (v24 < 0)
            {
              v21 += 7;
              BOOL v9 = v22++ >= 9;
              if (v9)
              {
                uint64_t v18 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v18 = 0;
        }
LABEL_55:
        uint64_t v26 = 8;
LABEL_56:
        *(void *)(a1 + v26) = v18;
        goto LABEL_57;
      case 6u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 64;
        goto LABEL_44;
      case 7u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 80;
        goto LABEL_44;
      case 8u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_44;
      case 9u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 88;
        goto LABEL_44;
      case 0xAu:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
LABEL_44:
        uint64_t v25 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_57;
      case 0xBu:
        uint64_t v15 = (OTEscrowRecordMetadataClientMetadata *)objc_alloc_init((Class)OTEscrowRecordMetadataPasscodeGeneration);
        objc_storeStrong((id *)(a1 + 72), v15);
        if PBReaderPlaceMark() && (OTEscrowRecordMetadataPasscodeGenerationReadFrom())
        {
LABEL_47:
          PBReaderRecallMark();

LABEL_57:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_59:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_57;
    }
  }
}

BOOL sub_100210044(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v12 = v6 >> 3;
      if ((v6 >> 3) == 3) {
        break;
      }
      if (v12 == 2)
      {
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 8;
        goto LABEL_23;
      }
      if (v12 == 1)
      {
        uint64_t v13 = PBReaderReadData();
        uint64_t v14 = 16;
LABEL_23:
        uint64_t v15 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = PBReaderReadData();
    uint64_t v14 = 24;
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100210434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10021044C(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_1002B0FB8)
  {
    v6[1] = _NSConcreteStackBlock;
    uint64_t v6[2] = (void *)3221225472;
    v6[3] = sub_100210638;
    v6[4] = &unk_100282FF8;
    v6[5] = v6;
    long long v7 = off_100289828;
    uint64_t v8 = 0;
    qword_1002B0FB8 = _sl_dlopen();
  }
  if (!qword_1002B0FB8)
  {
    uint64_t v3 = +[NSAssertionHandler currentHandler];
    char v4 = +[NSString stringWithUTF8String:"void *ManagedConfigurationLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"OTManagedConfigurationAdapter.m", 33, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("MCProfileConnection");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = +[NSAssertionHandler currentHandler];
    unsigned int v5 = +[NSString stringWithUTF8String:"Class getMCProfileConnectionClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"OTManagedConfigurationAdapter.m", 34, @"Unable to find class %s", "MCProfileConnection");

LABEL_10:
    __break(1u);
  }
  qword_1002B0FB0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100210638()
{
  uint64_t result = _sl_dlopen();
  qword_1002B0FB8 = result;
  return result;
}

id TrustedPeersHelperSetupProtocol(void *a1)
{
  id v1 = a1;
  if (qword_1002B0FC8 != -1) {
    dispatch_once(&qword_1002B0FC8, &stru_100289840);
  }
  v32[0] = objc_opt_class();
  v32[1] = objc_opt_class();
  id v2 = +[NSArray arrayWithObjects:v32 count:2];
  unsigned int v22 = +[NSSet setWithArray:v2];

  v31[0] = objc_opt_class();
  v31[1] = objc_opt_class();
  uint64_t v3 = +[NSArray arrayWithObjects:v31 count:2];
  char v4 = +[NSSet setWithArray:v3];

  v30[0] = objc_opt_class();
  v30[1] = objc_opt_class();
  unsigned int v5 = +[NSArray arrayWithObjects:v30 count:2];
  unint64_t v23 = +[NSSet setWithArray:v5];

  char v20 = +[NSSet setWithObject:objc_opt_class()];
  char v21 = +[NSSet setWithObject:objc_opt_class()];
  uint64_t v18 = +[NSSet setWithObject:objc_opt_class()];
  v29[0] = objc_opt_class();
  v29[1] = objc_opt_class();
  unint64_t v6 = +[NSArray arrayWithObjects:v29 count:2];
  unsigned int v17 = +[NSSet setWithArray:v6];

  v28[0] = objc_opt_class();
  v28[1] = objc_opt_class();
  _OWORD v28[2] = objc_opt_class();
  v28[3] = objc_opt_class();
  long long v7 = +[NSArray arrayWithObjects:v28 count:4];
  unint64_t v19 = +[NSSet setWithArray:v7];

  v27[0] = objc_opt_class();
  v27[1] = objc_opt_class();
  uint64_t v8 = +[NSArray arrayWithObjects:v27 count:2];
  char v16 = +[NSSet setWithArray:v8];

  v26[0] = objc_opt_class();
  v26[1] = objc_opt_class();
  BOOL v9 = +[NSArray arrayWithObjects:v26 count:2];
  uint64_t v15 = +[NSSet setWithArray:v9];

  v25[0] = objc_opt_class();
  v25[1] = objc_opt_class();
  int v10 = +[NSArray arrayWithObjects:v25 count:2];
  uint64_t v14 = +[NSSet setWithArray:v10];

  v24[0] = objc_opt_class();
  v24[1] = objc_opt_class();
  uint64_t v11 = +[NSArray arrayWithObjects:v24 count:2];
  uint64_t v13 = +[NSSet setWithArray:v11];

  [v1 setClasses:qword_1002B0FC0 forSelector:"honorIDMSListChangesForSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"dumpWithSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"octagonPeerIDGivenBottleIDWithSpecificUser:bottleID:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"trustedDeviceNamesByPeerIDWithSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"departByDistrustingSelfWithSpecificUser:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"distrustPeerIDsWithSpecificUser:peerIDs:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"dropPeerIDsWithSpecificUser:peerIDs:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"trustStatusWithSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"resetWithSpecificUser:resetReason:idmsTargetContext:idmsCuttlefishPassword:notifyIdMS:internalAccount:demoAccount:isGuitarfish:accountType:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"localResetWithSpecificUser:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"setAllowedMachineIDsWithSpecificUser:allowedMachineIDs:userInitiatedRemovals:evictedRemovals:unknownReasonRemovals:honorIDMSListChanges:version:flowID:deviceSessionID:canSendMetrics:altDSID:trustedDeviceHash:deletedDeviceHash:trustedDevicesUpdateTimestamp:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"markTrustedDeviceListFetchFailed:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchAllowedMachineIDsWithSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchEgoEpochWithSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"prepareWithSpecificUser:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:setting:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:reply:" argumentIndex:6 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"establishWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:3 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"preflightVouchWithBottleWithSpecificUser:bottleID:reply:" argumentIndex:3 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"preflightVouchWithRecoveryKeyWithSpecificUser:recoveryKey:salt:reply:" argumentIndex:2 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"joinWithSpecificUser:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:flowID:deviceSessionID:canSendMetrics:reply:" argumentIndex:3 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"preflightPreapprovedJoinWithSpecificUser:preapprovedKeys:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"attemptPreapprovedJoinWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:3 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"setPreapprovedKeysWithSpecificUser:preapprovedKeys:reply:" argumentIndex:1 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchViableBottlesWithSpecificUser:source:flowID:deviceSessionID:reply:" argumentIndex:2 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchViableEscrowRecordsWithSpecificUser:source:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchEscrowContentsWithSpecificUser:reply:" argumentIndex:3 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchPolicyDocumentsWithSpecificUser:versions:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchRecoverableTLKSharesWithSpecificUser:peerID:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchCurrentPolicyWithSpecificUser:modelIDOverride:isInheritedAccount:reply:" argumentIndex:2 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"setRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"createCustodianRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:uuid:kind:reply:" argumentIndex:2 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"removeCustodianRecoveryKeyWithSpecificUser:uuid:reply:" argumentIndex:0 ofReply:1];
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  objc_msgSend(v1, "setClasses:forSelector:argumentIndex:ofReply:", qword_1002B0FC0);
  [v1 setClasses:qword_1002B0FC0 forSelector:"getSupportAppInfoWithSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"resetAccountCDPContentsWithSpecificUser:idmsTargetContext:idmsCuttlefishPassword:notifyIdMS:internalAccount:demoAccount:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"removeEscrowCacheWithSpecificUser:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"fetchAccountSettingsWithSpecificUser:forceFetch:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"isRecoveryKeySet:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:qword_1002B0FC0 forSelector:"testSemaphoreWithSpecificUser:arg:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v19 forSelector:"fetchAccountSettingsWithSpecificUser:forceFetch:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v23 forSelector:"fetchRecoverableTLKSharesWithSpecificUser:peerID:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v22 forSelector:"establishWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:1 ofReply:0];
  [v1 setClasses:v4 forSelector:"establishWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:2 ofReply:0];
  [v1 setClasses:v23 forSelector:"establishWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:v22 forSelector:"joinWithSpecificUser:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:flowID:deviceSessionID:canSendMetrics:reply:" argumentIndex:3 ofReply:0];
  [v1 setClasses:v4 forSelector:"joinWithSpecificUser:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:flowID:deviceSessionID:canSendMetrics:reply:" argumentIndex:4 ofReply:0];
  [v1 setClasses:v23 forSelector:"joinWithSpecificUser:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:flowID:deviceSessionID:canSendMetrics:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:v22 forSelector:"attemptPreapprovedJoinWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:1 ofReply:0];
  [v1 setClasses:v4 forSelector:"attemptPreapprovedJoinWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:2 ofReply:0];
  [v1 setClasses:v23 forSelector:"attemptPreapprovedJoinWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:v22 forSelector:"vouchWithSpecificUser:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:ckksKeys:flowID:deviceSessionID:canSendMetrics:reply:" argumentIndex:6 ofReply:0];
  [v1 setClasses:v4 forSelector:"vouchWithBottleWithSpecificUser:bottleID:entropy:bottleSalt:tlkShares:reply:" argumentIndex:4 ofReply:0];
  [v1 setClasses:v4 forSelector:"vouchWithBottleWithSpecificUser:bottleID:entropy:bottleSalt:tlkShares:reply:" argumentIndex:2 ofReply:1];
  [v1 setClasses:v22 forSelector:"setRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:reply:" argumentIndex:3 ofReply:0];
  [v1 setClasses:v23 forSelector:"setRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v22 forSelector:"createCustodianRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:uuid:kind:reply:" argumentIndex:3 ofReply:0];
  [v1 setClasses:v23 forSelector:"createCustodianRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:uuid:kind:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v4 forSelector:"vouchWithRecoveryKeyWithSpecificUser:recoveryKey:salt:tlkShares:reply:" argumentIndex:3 ofReply:0];
  [v1 setClasses:v4 forSelector:"vouchWithRecoveryKeyWithSpecificUser:recoveryKey:salt:tlkShares:reply:" argumentIndex:2 ofReply:1];
  [v1 setClasses:v4 forSelector:"vouchWithCustodianRecoveryKeyWithSpecificUser:crk:tlkShares:reply:" argumentIndex:2 ofReply:0];
  [v1 setClasses:v4 forSelector:"vouchWithRerollWithSpecificUser:oldPeerID:tlkShares:reply:" argumentIndex:2 ofReply:0];
  [v1 setClasses:v23 forSelector:"prepareInheritancePeerWithSpecificUser:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:crk:reply:" argumentIndex:7 ofReply:1];
  [v1 setClasses:v4 forSelector:"vouchWithCustodianRecoveryKeyWithSpecificUser:crk:tlkShares:reply:" argumentIndex:2 ofReply:1];
  [v1 setClasses:v4 forSelector:"recoverTLKSharesForInheritorWithSpecificUser:crk:tlkShares:reply:" argumentIndex:2 ofReply:0];
  [v1 setClasses:v4 forSelector:"recoverTLKSharesForInheritorWithSpecificUser:crk:tlkShares:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v21 forSelector:"createCustodianRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:uuid:kind:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:v21 forSelector:"preflightVouchWithCustodianRecoveryKeyWithSpecificUser:crk:reply:" argumentIndex:1 ofReply:0];
  [v1 setClasses:v21 forSelector:"vouchWithCustodianRecoveryKeyWithSpecificUser:crk:tlkShares:reply:" argumentIndex:1 ofReply:0];
  [v1 setClasses:v21 forSelector:"findCustodianRecoveryKeyWithSpecificUser:uuid:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v18 forSelector:"requestHealthCheckWithSpecificUser:requiresEscrowCheck:repair:knownFederations:flowID:deviceSessionID:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v20 forSelector:"updateWithSpecificUser:forceRefetch:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v20 forSelector:"fetchTrustStateWithSpecificUser:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v17 forSelector:"fetchTrustStateWithSpecificUser:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:v22 forSelector:"updateTLKsWithSpecificUser:ckksKeys:tlkShares:reply:" argumentIndex:1 ofReply:0];
  [v1 setClasses:v4 forSelector:"updateTLKsWithSpecificUser:ckksKeys:tlkShares:reply:" argumentIndex:2 ofReply:0];
  [v1 setClasses:v23 forSelector:"updateTLKsWithSpecificUser:ckksKeys:tlkShares:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v14 forSelector:"fetchCurrentItemWithSpecificUser:items:reply:" argumentIndex:1 ofReply:0];
  [v1 setClasses:v13 forSelector:"fetchCurrentItemWithSpecificUser:items:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v23 forSelector:"fetchCurrentItemWithSpecificUser:items:reply:" argumentIndex:1 ofReply:1];
  [v1 setClasses:v16 forSelector:"fetchPCSIdentityByPublicKeyWithSpecificUser:pcsservices:reply:" argumentIndex:1 ofReply:0];
  [v1 setClasses:v15 forSelector:"fetchPCSIdentityByPublicKeyWithSpecificUser:pcsservices:reply:" argumentIndex:0 ofReply:1];
  [v1 setClasses:v23 forSelector:"fetchPCSIdentityByPublicKeyWithSpecificUser:pcsservices:reply:" argumentIndex:1 ofReply:1];

  return v1;
}

void sub_100213D68(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,long long buf)
{
  if (a2 == 1)
  {
    id v33 = objc_begin_catch(a1);
    id v34 = secLogObjForScope();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v33;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "TrustedPeersHelperSetupProtocol failed, continuing, but you might crash later: %@", (uint8_t *)&buf, 0xCu);
    }

    objc_exception_throw(v33);
  }
  _Unwind_Resume(a1);
}

void sub_100213E34(id a1)
{
  id v1 = CKAcceptableValueClasses();
  uint64_t v2 = +[NSMutableSet setWithSet:v1];
  uint64_t v3 = (void *)qword_1002B0FC0;
  qword_1002B0FC0 = v2;

  char v4 = (void *)qword_1002B0FC0;
  id v5 = +[SecXPCHelper safeErrorClasses];
  [v4 unionSet:v5];
}

id SecCKKSHostOSVersion()
{
  *(void *)&long long v0 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v0 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12[14] = v0;
  long long v13 = v0;
  v12[12] = v0;
  v12[13] = v0;
  v12[10] = v0;
  v12[11] = v0;
  v12[8] = v0;
  v12[9] = v0;
  v12[6] = v0;
  v12[7] = v0;
  v12[4] = v0;
  v12[5] = v0;
  v12[2] = v0;
  uint64_t v12[3] = v0;
  v12[0] = v0;
  v12[1] = v0;
  size_t v9 = 256;
  int v1 = sysctlbyname("kern.osrelease", v12, &v9, 0, 0);
  *(void *)&long long v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10[14] = v2;
  long long v11 = v2;
  v10[12] = v2;
  v10[13] = v2;
  v10[10] = v2;
  v10[11] = v2;
  v10[8] = v2;
  v10[9] = v2;
  v10[6] = v2;
  v10[7] = v2;
  v10[4] = v2;
  v10[5] = v2;
  _OWORD v10[2] = v2;
  v10[3] = v2;
  v10[0] = v2;
  v10[1] = v2;
  size_t v8 = 256;
  if (sysctlbyname("kern.osversion", v10, &v8, 0, 0) | v1
    || (HIBYTE(v13) = 0,
        HIBYTE(v11) = 0,
        +[NSString stringWithFormat:@"%s (%s)", v12, v10],
        (id v5 = objc_claimAutoreleasedReturnValue()) == 0))
  {
    uint64_t v3 = +[NSProcessInfo processInfo];
    char v4 = [v3 operatingSystemVersionString];

    id v5 = [v4 stringByReplacingOccurrencesOfString:@"Version" withString:&stru_10028AEB8];
  }
  unint64_t v6 = +[NSString stringWithFormat:@"%@ %@", @"iphone", v5];

  return v6;
}

uint64_t sub_100217544(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      uint64_t v17 = PBReaderReadData();
      uint64_t v18 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v17;
    }
    else if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_30;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          LODWORD(v14) = 0;
          goto LABEL_32;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v14) = 0;
      }
LABEL_32:
      *(_DWORD *)(a1 + 16) = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1002194F8(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v15 = 0;
  char v16 = &v15;
  uint64_t v17 = 0x3032000000;
  uint64_t v18 = sub_100219670;
  unint64_t v19 = sub_100219680;
  id v5 = &_os_log_disabled;
  id v20 = &_os_log_disabled;
  if (qword_1002B0FD8 != -1) {
    dispatch_once(&qword_1002B0FD8, &stru_1002898A0);
  }
  unint64_t v6 = qword_1002B0FD0;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100219688;
  block[3] = &unk_1002898C8;
  id v12 = v4;
  id v13 = v3;
  uint64_t v14 = &v15;
  id v7 = v3;
  id v8 = v4;
  dispatch_sync(v6, block);
  id v9 = (id)v16[5];

  _Block_object_dispose(&v15, 8);

  return v9;
}

uint64_t sub_100219670(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100219680(uint64_t a1)
{
}

void sub_100219688(void *a1)
{
  if (!qword_1002B0FE0)
  {
    uint64_t v2 = +[NSMutableDictionary dictionary];
    id v3 = (void *)qword_1002B0FE0;
    qword_1002B0FE0 = v2;
  }
  id v4 = (void *)a1[5];
  if (a1[4])
  {
    id v5 = [v4 stringByAppendingFormat:@"-%@", a1[4]];
  }
  else
  {
    id v5 = v4;
  }
  id v13 = v5;
  uint64_t v6 = [(id)qword_1002B0FE0 objectForKeyedSubscript:v5];
  uint64_t v7 = *(void *)(a1[6] + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (!*(void *)(*(void *)(a1[6] + 8) + 40))
  {
    id v9 = v13;
    os_log_t v10 = os_log_create("com.apple.security.ckks", (const char *)[v9 cStringUsingEncoding:4]);
    uint64_t v11 = *(void *)(a1[6] + 8);
    id v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    [(id)qword_1002B0FE0 setObject:*(void *)(*(void *)(a1[6] + 8) + 40) forKeyedSubscript:v9];
  }
}

void sub_1002197A4(id a1)
{
  id v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("ckks-logger", v3);
  uint64_t v2 = (void *)qword_1002B0FD0;
  qword_1002B0FD0 = (uint64_t)v1;
}

uint64_t sub_10021A960(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 104) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_64;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            uint64_t v14 = 0;
            goto LABEL_66;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_64:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0;
        }
LABEL_66:
        uint64_t v37 = 16;
        goto LABEL_83;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 104) |= 4u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                uint64_t v14 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0;
        }
LABEL_70:
        uint64_t v37 = 24;
        goto LABEL_83;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 104) |= 8u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v14 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                uint64_t v14 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0;
        }
LABEL_74:
        uint64_t v37 = 32;
        goto LABEL_83;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 104) |= 0x10u;
        while (2)
        {
          unint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v28 == -1 || v28 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28 + 1;
            v14 |= (unint64_t)(v29 & 0x7F) << v26;
            if (v29 < 0)
            {
              v26 += 7;
              BOOL v9 = v27++ >= 9;
              if (v9)
              {
                uint64_t v14 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0;
        }
LABEL_78:
        uint64_t v37 = 40;
        goto LABEL_83;
      case 5u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 48;
        goto LABEL_55;
      case 6u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 56;
        goto LABEL_55;
      case 7u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 64;
        goto LABEL_55;
      case 8u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 72;
        goto LABEL_55;
      case 9u:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 80;
        goto LABEL_55;
      case 0xAu:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 88;
        goto LABEL_55;
      case 0xBu:
        uint64_t v30 = PBReaderReadString();
        uint64_t v31 = 96;
LABEL_55:
        id v32 = *(void **)(a1 + v31);
        *(void *)(a1 + v31) = v30;

        continue;
      case 0xCu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 104) |= 1u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v35 == -1 || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v36 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
      v14 |= (unint64_t)(v36 & 0x7F) << v33;
      if ((v36 & 0x80) == 0) {
        goto LABEL_80;
      }
      v33 += 7;
      BOOL v9 = v34++ >= 9;
      if (v9)
      {
        uint64_t v14 = 0;
        goto LABEL_82;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_80:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v14 = 0;
    }
LABEL_82:
    uint64_t v37 = 8;
LABEL_83:
    *(void *)(a1 + v37) = v14;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100221814(id a1)
{
  byte_1002B0FE8 = _os_feature_enabled_impl();
  dispatch_queue_t v1 = secLogObjForScope();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    if (byte_1002B0FE8) {
      uint64_t v2 = "enabled";
    }
    else {
      uint64_t v2 = "disabled";
    }
    int v3 = 136315138;
    char v4 = v2;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "SeparateUserKeychain set via feature flag to %s", (uint8_t *)&v3, 0xCu);
  }
}

CFURLRef SecCopyURLForFileInUserScopedKeychainDirectory(uint64_t a1)
{
  if (qword_1002B0FF0 != -1) {
    dispatch_once(&qword_1002B0FF0, &stru_1002898F8);
  }
  syslog(5, "SecCopyURLForFileInParameterizedKeychainDirectory: forceUserScope:%d", byte_1002B0FE8);
  CFURLRef v2 = (const __CFURL *)SecCopyBaseFilesURL();
  if (a1) {
    CFStringRef Copy = CFStringCreateWithFormat(kCFAllocatorDefault, 0, @"%@/%@", @"Library/Keychains", a1);
  }
  else {
    CFStringRef Copy = CFStringCreateCopy(kCFAllocatorDefault, @"Library/Keychains");
  }
  CFStringRef v4 = Copy;
  if (v2) {
    BOOL v5 = Copy == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    CFURLRef v6 = CFURLCreateCopyAppendingPathComponent(kCFAllocatorDefault, v2, Copy, a1 == 0);
    CFRelease(v4);
LABEL_14:
    CFRelease(v2);
    return v6;
  }
  if (Copy) {
    CFRelease(Copy);
  }
  CFURLRef v6 = 0;
  if (v2) {
    goto LABEL_14;
  }
  return v6;
}

uint64_t sub_100221A10()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_100221A20()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_100221A30()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_100221A40()
{
  return __DataStorage.init(length:)();
}

uint64_t sub_100221A50()
{
  return __DataStorage._length.getter();
}

uint64_t sub_100221A60()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_100221A70()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_100221A80()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_100221A90()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_100221AA0()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_100221AF0()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t sub_100221B10()
{
  return _BridgedStoredNSError.userInfo.getter();
}

uint64_t sub_100221B30()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_100221B40()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_100221B50()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

void sub_100221B60(NSURL *retstr@<X8>)
{
}

uint64_t sub_100221B70()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100221B80()
{
  return type metadata accessor for URL();
}

void sub_100221B90()
{
}

void sub_100221BA0()
{
}

uint64_t sub_100221BB0()
{
  return Data.init(base64Encoded:options:)();
}

uint64_t sub_100221BC0()
{
  return type metadata accessor for Data.RangeReference();
}

NSData sub_100221BD0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_100221BE0(NSDataBase64EncodingOptions options)
{
  return Data.base64EncodedString(options:)(options)._countAndFlagsBits;
}

uint64_t sub_100221BF0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100221C00()
{
  return Date.init(timeInterval:since:)();
}

uint64_t sub_100221C10()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_100221C20()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_100221C30()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_100221C40()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_100221C50()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t sub_100221C60()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t sub_100221C70()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_100221C80()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100221C90()
{
  return Date.compare(_:)();
}

uint64_t sub_100221CA0()
{
  return Date.init()();
}

uint64_t sub_100221CB0()
{
  return type metadata accessor for Date();
}

uint64_t sub_100221CC0()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_100221CD0()
{
  return UUID.uuidString.getter();
}

NSUUID sub_100221CE0()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_100221CF0()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100221D00()
{
  return type metadata accessor for UUID();
}

uint64_t sub_100221D10()
{
  return dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();
}

uint64_t sub_100221D20()
{
  return dispatch thunk of CKCodeOperation.codeService.setter();
}

uint64_t sub_100221D30()
{
  return CKCodeOperation.init(functionName:request:)();
}

uint64_t sub_100221D40()
{
  return Ckcode_RecordTransport.init()();
}

uint64_t sub_100221D50()
{
  return type metadata accessor for Ckcode_RecordTransport();
}

uint64_t sub_100221D60()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_100221D70()
{
  return _CFObject.hash(into:)();
}

uint64_t sub_100221D80()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_100221D90()
{
  return Google_Protobuf_Timestamp.date.getter();
}

uint64_t sub_100221DA0()
{
  return Google_Protobuf_Timestamp.init(date:)();
}

uint64_t sub_100221DB0()
{
  return Google_Protobuf_Timestamp.init()();
}

uint64_t sub_100221DC0()
{
  return type metadata accessor for Google_Protobuf_Timestamp();
}

uint64_t sub_100221DD0()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0()
{
  return UnknownStorage.init()();
}

uint64_t sub_100221DF0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t sub_100221E00()
{
  return JSONEncodingOptions.init()();
}

uint64_t sub_100221E10()
{
  return type metadata accessor for JSONEncodingOptions();
}

uint64_t sub_100221E20()
{
  return _MessageImplementationBase._protobuf_generated_isEqualTo(other:)();
}

uint64_t sub_100221E50()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

uint64_t sub_100221E60()
{
  return dispatch thunk of Decoder.handleConflictingOneOf()();
}

uint64_t sub_100221E70()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t sub_100221E80()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t sub_100221E90()
{
  return dispatch thunk of Decoder.decodeSingularBytesField(value:)();
}

uint64_t sub_100221EA0()
{
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t sub_100221EB0()
{
  return dispatch thunk of Decoder.decodeSingularInt64Field(value:)();
}

uint64_t sub_100221EC0()
{
  return dispatch thunk of Decoder.decodeRepeatedStringField(value:)();
}

uint64_t sub_100221ED0()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t sub_100221EE0()
{
  return dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
}

uint64_t sub_100221EF0()
{
  return dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
}

uint64_t sub_100221F00()
{
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t sub_100221F10()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100221F20()
{
  return Message.jsonString(options:)();
}

uint64_t sub_100221F30()
{
  return Message.isInitialized.getter();
}

uint64_t sub_100221F40()
{
  return Message.serializedData(partial:)();
}

uint64_t sub_100221F60()
{
  return Message.hash(into:)();
}

uint64_t sub_100221F70()
{
  return static Message.with(_:)();
}

uint64_t sub_100221F80()
{
  return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
}

uint64_t sub_100221F90()
{
  return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
}

uint64_t sub_100221FA0()
{
  return dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
}

uint64_t sub_100221FB0()
{
  return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
}

uint64_t sub_100221FC0()
{
  return dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)();
}

uint64_t sub_100221FD0()
{
  return dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
}

uint64_t sub_100221FE0()
{
  return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
}

uint64_t sub_100221FF0()
{
  return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
}

uint64_t sub_100222000()
{
  return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
}

uint64_t sub_100222010()
{
  return dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
}

uint64_t sub_100222020()
{
  return dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
}

uint64_t sub_100222030()
{
  return type metadata accessor for _NameMap.NameDescription();
}

uint64_t sub_100222040()
{
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100222050()
{
  return _NameMap.init()();
}

uint64_t sub_100222060()
{
  return type metadata accessor for _NameMap();
}

uint64_t sub_100222070()
{
  return Logger.logObject.getter();
}

uint64_t sub_100222080()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100222090()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1002220A0()
{
  return errno.getter();
}

uint64_t sub_1002220B0()
{
  return errno.setter();
}

uint64_t sub_1002220C0()
{
  return FileDescriptor._writeAll<A>(_:)();
}

uint64_t sub_1002220D0()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_1002220E0()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1002220F0()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_100222100()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_100222110()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t sub_100222120()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_100222130()
{
  return static DispatchTime.now()();
}

uint64_t sub_100222140()
{
  return DispatchTime.advanced(by:)();
}

uint64_t sub_100222150()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_100222160()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t sub_100222170()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t sub_100222180()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t sub_100222190()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t sub_1002221A0()
{
  return type metadata accessor for SHA256();
}

uint64_t sub_1002221B0()
{
  return related decl 'e' for CKErrorCode.underlyingError.getter();
}

NSDictionary sub_1002221C0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1002221D0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1002221E0()
{
  return Dictionary.description.getter();
}

uint64_t sub_1002221F0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_100222200()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_100222210()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_100222220()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t sub_100222230()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t sub_100222240()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t sub_100222250()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_100222260()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100222270()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100222280()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_100222290()
{
  return String.init(format:_:)();
}

uint64_t sub_1002222A0()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_1002222B0()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_1002222C0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1002222D0()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_1002222E0()
{
  return String.hash(into:)();
}

uint64_t sub_1002222F0()
{
  return String.index(after:)();
}

uint64_t sub_100222300()
{
  return String.append<A>(contentsOf:)();
}

void sub_100222310(Swift::String a1)
{
}

uint64_t sub_100222320()
{
  return String.init(cString:)();
}

Swift::Int sub_100222330()
{
  return String.UTF8View._foreignCount()();
}

BOOL sub_100222340(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

BOOL sub_100222350(Swift::String a1)
{
  return String.hasSuffix(_:)(a1);
}

uint64_t sub_100222360()
{
  return String.subscript.getter();
}

uint64_t sub_100222370()
{
  return String.subscript.getter();
}

uint64_t sub_100222380()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_100222390()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_1002223A0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1002223B0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1002223C0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1002223D0()
{
  return Array.description.getter();
}

uint64_t sub_1002223E0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1002223F0()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_100222400()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_100222410()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSSet sub_100222420()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_100222430()
{
  return static Set._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100222440()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100222450()
{
  return Set.description.getter();
}

uint64_t sub_100222460()
{
  return Set.init(minimumCapacity:)();
}

void sub_100222470(Swift::Int a1)
{
}

uint64_t sub_100222480()
{
  return Set.Index._asCocoa.modify();
}

uint64_t sub_100222490()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber sub_1002224A0()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_1002224B0()
{
  return Collection<>.contains<A>(_:)();
}

uint64_t sub_1002224C0()
{
  return NSPredicate.init(format:_:)();
}

uint64_t sub_1002224D0()
{
  return CKCodeService.add<A, B>(_:)();
}

uint64_t sub_1002224E0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_1002224F0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_100222500()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_100222510()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_100222520()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_100222530()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_100222540()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_100222550()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_100222560()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t sub_100222570()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_100222580()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_100222590()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_1002225A0()
{
  return OS_dispatch_semaphore.wait(timeout:)();
}

Swift::Int sub_1002225B0()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1002225C0()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t sub_1002225D0()
{
  return NSManagedObjectContext.count<A>(for:)();
}

uint64_t sub_1002225E0()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t sub_1002225F0()
{
  return NSSet.init(arrayLiteral:)();
}

uint64_t sub_100222600()
{
  return NSSet.makeIterator()();
}

uint64_t sub_100222610()
{
  return NSCoder.decodeObject(of:forKey:)();
}

uint64_t sub_100222620()
{
  return CKRecord.init(_:)();
}

NSNumber sub_100222630(Swift::Int integerLiteral)
{
  return NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int sub_100222640(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_100222650()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_100222660()
{
  return NSObject.hashValue.getter();
}

uint64_t sub_100222670()
{
  return type metadata accessor for Optional();
}

uint64_t sub_100222680()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_100222690()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1002226A0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1002226B0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_1002226C0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1002226D0()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1002226E0()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_1002226F0()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t sub_100222700()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_100222710()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t sub_100222720()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t sub_100222730()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t sub_100222740()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t sub_100222750()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_100222760()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_100222770()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_100222780()
{
  return __CocoaSet.element(at:)();
}

uint64_t sub_100222790()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_1002227A0()
{
  return __CocoaSet.contains(_:)();
}

uint64_t sub_1002227B0()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t sub_1002227C0()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int sub_1002227D0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_1002227E0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_1002227F0()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100222800()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_100222810()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_100222820()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_100222830()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_100222840(Swift::Int a1)
{
}

uint64_t sub_100222850()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_100222860()
{
  return Identifiable<>.id.getter();
}

void sub_100222870(Swift::Int a1)
{
}

uint64_t sub_100222880()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_100222890()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1002228A0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1002228B0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1002228C0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1002228D0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_1002228E0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1002228F0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100222900()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_100222910()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t sub_100222920()
{
  return __CocoaDictionary.count.getter();
}

uint64_t sub_100222930()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t sub_100222940()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t sub_100222950()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100222960()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100222970()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_100222980()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t sub_100222990()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1002229A0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1002229B0()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t sub_1002229C0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1002229D0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_1002229F0(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_100222A00()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_100222A10()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_100222A20()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_100222A30()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100222A40()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_100222A50()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100222A60()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100222A90()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_100222AA0()
{
  return Error._code.getter();
}

uint64_t sub_100222AB0()
{
  return Error._domain.getter();
}

uint64_t sub_100222AC0()
{
  return Error._userInfo.getter();
}

uint64_t sub_100222AD0()
{
  return Int32.init(truncating:)();
}

NSNumber sub_100222AE0()
{
  return Int32._bridgeToObjectiveC()();
}

uint64_t sub_100222AF0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_100222B00()
{
  return Hasher.init(_seed:)();
}

void sub_100222B10(Swift::UInt a1)
{
}

Swift::Int sub_100222B20()
{
  return Hasher._finalize()();
}

uint64_t sub_100222B30()
{
  return type metadata accessor for Result();
}

CCRNGStatus CCRandomGenerateBytes(void *bytes, size_t count)
{
  return _CCRandomGenerateBytes(bytes, count);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

void CFRelease(CFTypeRef cf)
{
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return _CFStringCreateCopy(alloc, theString);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return _CFStringCreateWithFormat(alloc, formatOptions, format);
}

CFURLRef CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory)
{
  return _CFURLCreateCopyAppendingPathComponent(allocator, url, pathComponent, isDirectory);
}

uint64_t CKAcceptableValueClasses()
{
  return _CKAcceptableValueClasses();
}

uint64_t CKCanRetryForError()
{
  return _CKCanRetryForError();
}

uint64_t CKRetryAfterSecondsForError()
{
  return _CKRetryAfterSecondsForError();
}

uint64_t CKXPCSuitableError()
{
  return _CKXPCSuitableError();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t OTEscrowRecordMetadataPasscodeGenerationReadFrom()
{
  return _OTEscrowRecordMetadataPasscodeGenerationReadFrom();
}

uint64_t OctagonPlatformSupportsSOS()
{
  return _OctagonPlatformSupportsSOS();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return _PBDataWriterWriteSubmessage();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return _PBDataWriterWriteUint64Field();
}

uint64_t PBReaderPlaceMark()
{
  return _PBReaderPlaceMark();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderRecallMark()
{
  return _PBReaderRecallMark();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t SFAccessibilityMakeWithMode()
{
  return _SFAccessibilityMakeWithMode();
}

uint64_t SOSCompatibilityModeEnabled()
{
  return _SOSCompatibilityModeEnabled();
}

uint64_t SecCopyBaseFilesURL()
{
  return _SecCopyBaseFilesURL();
}

uint64_t SecIsInternalRelease()
{
  return _SecIsInternalRelease();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return _SecItemAdd(attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return _SecItemDelete(query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return _SecItemUpdate(query, attributesToUpdate);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return _SecKeyCreateWithData(keyData, attributes, error);
}

CFTypeID SecKeyGetTypeID(void)
{
  return _SecKeyGetTypeID();
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

uint64_t TPPeerStatusToString()
{
  return _TPPeerStatusToString();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _exit(int a1)
{
}

{
}

{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t cc_clear()
{
  return _cc_clear();
}

uint64_t ccaes_siv_decrypt_mode()
{
  return _ccaes_siv_decrypt_mode();
}

uint64_t ccaes_siv_encrypt_mode()
{
  return _ccaes_siv_encrypt_mode();
}

uint64_t ccdigest()
{
  return _ccdigest();
}

uint64_t ccec_cp_384()
{
  return _ccec_cp_384();
}

uint64_t ccec_generate_key_deterministic()
{
  return _ccec_generate_key_deterministic();
}

uint64_t ccec_x963_export()
{
  return _ccec_x963_export();
}

uint64_t cchkdf()
{
  return _cchkdf();
}

uint64_t ccrng()
{
  return _ccrng();
}

uint64_t ccsha384_di()
{
  return _ccsha384_di();
}

uint64_t ccsiv_aad()
{
  return _ccsiv_aad();
}

uint64_t ccsiv_ciphertext_size()
{
  return _ccsiv_ciphertext_size();
}

uint64_t ccsiv_crypt()
{
  return _ccsiv_crypt();
}

uint64_t ccsiv_init()
{
  return _ccsiv_init();
}

uint64_t ccsiv_plaintext_size()
{
  return _ccsiv_plaintext_size();
}

uint64_t ccsiv_set_nonce()
{
  return _ccsiv_set_nonce();
}

uint64_t cczp_bitlen()
{
  return _cczp_bitlen();
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return _confstr(a1, a2, a3);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

malloc_zone_t *__cdecl malloc_create_zone(vm_size_t start_size, unsigned int flags)
{
  return _malloc_create_zone(start_size, flags);
}

void malloc_set_zone_name(malloc_zone_t *zone, const char *name)
{
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void malloc_zone_free(malloc_zone_t *zone, void *ptr)
{
}

void *__cdecl malloc_zone_malloc(malloc_zone_t *zone, size_t size)
{
  return _malloc_zone_malloc(zone, size);
}

void *__cdecl malloc_zone_realloc(malloc_zone_t *zone, void *ptr, size_t size)
{
  return _malloc_zone_realloc(zone, ptr, size);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return _memset_s(__s, __smax, __c, __n);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t secLogObjForScope()
{
  return _secLogObjForScope();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

void syslog(int a1, const char *a2, ...)
{
}

uint64_t u_setMemoryFunctions()
{
  return _u_setMemoryFunctions();
}

id objc_msgSend_CKPropertiesDescription(void *a1, const char *a2, ...)
{
  return _[a1 CKPropertiesDescription];
}

id objc_msgSend_PCSPublicKey(void *a1, const char *a2, ...)
{
  return _[a1 PCSPublicKey];
}

id objc_msgSend_PCSServiceID(void *a1, const char *a2, ...)
{
  return _[a1 PCSServiceID];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__isCKServerInternalError(void *a1, const char *a2, ...)
{
  return _[a1 _isCKServerInternalError];
}

id objc_msgSend__isRetryableNSURLError(void *a1, const char *a2, ...)
{
  return _[a1 _isRetryableNSURLError];
}

id objc_msgSend__newZeroingDataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newZeroingDataWithBytes:length:");
}

id objc_msgSend_aessivkey(void *a1, const char *a2, ...)
{
  return _[a1 aessivkey];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allSelves(void *a1, const char *a2, ...)
{
  return _[a1 allSelves];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_altDSID(void *a1, const char *a2, ...)
{
  return _[a1 altDSID];
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appleAccountID(void *a1, const char *a2, ...)
{
  return _[a1 appleAccountID];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_authenticationCode(void *a1, const char *a2, ...)
{
  return _[a1 authenticationCode];
}

id objc_msgSend_base64EncodedDataWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedDataWithOptions:");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_ciphertext(void *a1, const char *a2, ...)
{
  return _[a1 ciphertext];
}

id objc_msgSend_classA(void *a1, const char *a2, ...)
{
  return _[a1 classA];
}

id objc_msgSend_classC(void *a1, const char *a2, ...)
{
  return _[a1 classC];
}

id objc_msgSend_cloudkitContainerName(void *a1, const char *a2, ...)
{
  return _[a1 cloudkitContainerName];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collectableEscrowRecords(void *a1, const char *a2, ...)
{
  return _[a1 collectableEscrowRecords];
}

id objc_msgSend_collectableTlkShares(void *a1, const char *a2, ...)
{
  return _[a1 collectableTlkShares];
}

id objc_msgSend_collectedEscrowRecords(void *a1, const char *a2, ...)
{
  return _[a1 collectedEscrowRecords];
}

id objc_msgSend_collectedTlkShares(void *a1, const char *a2, ...)
{
  return _[a1 collectedTlkShares];
}

id objc_msgSend_containerIDForContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerIDForContainerIdentifier:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createSecKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSecKey:");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentPersona(void *a1, const char *a2, ...)
{
  return _[a1 currentPersona];
}

id objc_msgSend_currentSelf(void *a1, const char *a2, ...)
{
  return _[a1 currentSelf];
}

id objc_msgSend_currentThreadPersonaUniqueString(void *a1, const char *a2, ...)
{
  return _[a1 currentThreadPersonaUniqueString];
}

id objc_msgSend_curve(void *a1, const char *a2, ...)
{
  return _[a1 curve];
}

id objc_msgSend_cuttlefishRetryAfter(void *a1, const char *a2, ...)
{
  return _[a1 cuttlefishRetryAfter];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataForSigning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForSigning:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithLength:");
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeBytesForKey_returnedLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBytesForKey:returnedLength:");
}

id objc_msgSend_decodeInt32ForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeInt32ForKey:");
}

id objc_msgSend_decodeInt64ForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeInt64ForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decrypt_withKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decrypt:withKey:error:");
}

id objc_msgSend_decryptData_authenticatedData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decryptData:authenticatedData:error:");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_doSIV_nonce_text_buffer_bufferLength_authenticatedData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doSIV:nonce:text:buffer:bufferLength:authenticatedData:error:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_egoPeerID(void *a1, const char *a2, ...)
{
  return _[a1 egoPeerID];
}

id objc_msgSend_egoPeerMachineID(void *a1, const char *a2, ...)
{
  return _[a1 egoPeerMachineID];
}

id objc_msgSend_egoStatus(void *a1, const char *a2, ...)
{
  return _[a1 egoStatus];
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeInt32_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt32:forKey:");
}

id objc_msgSend_encodeInt64_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt64:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodeSubjectPublicKeyInfo(void *a1, const char *a2, ...)
{
  return _[a1 encodeSubjectPublicKeyInfo];
}

id objc_msgSend_encodeWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeWithCoder:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _[a1 encodedData];
}

id objc_msgSend_encrypt_withKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encrypt:withKey:error:");
}

id objc_msgSend_encryptData_authenticatedData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptData:authenticatedData:error:");
}

id objc_msgSend_encryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 encryptionKey];
}

id objc_msgSend_encryptionSPKI(void *a1, const char *a2, ...)
{
  return _[a1 encryptionSPKI];
}

id objc_msgSend_ensureKeyLoadedFromKeychain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ensureKeyLoadedFromKeychain:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_epoch(void *a1, const char *a2, ...)
{
  return _[a1 epoch];
}

id objc_msgSend_errorWithDomain_code_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:description:");
}

id objc_msgSend_errorWithDomain_code_description_underlying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:description:underlying:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_escrowRecordGarbageCollectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 escrowRecordGarbageCollectionEnabled];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_fetchKeyMaterialItemFromKeychain_resave_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchKeyMaterialItemFromKeychain:resave:error:");
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return _[a1 finishDecoding];
}

id objc_msgSend_generateAndRestorePersonaContextWithPersonaUniqueString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateAndRestorePersonaContextWithPersonaUniqueString:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_identityIsPreapproved(void *a1, const char *a2, ...)
{
  return _[a1 identityIsPreapproved];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_init_sender_receiver_curve_version_epoch_poisoned_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init:sender:receiver:curve:version:epoch:poisoned:zoneID:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initWithAESKey_wrappedAESKey_uuid_parentKeyUUID_keyclass_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAESKey:wrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:");
}

id objc_msgSend_initWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAltDSID:");
}

id objc_msgSend_initWithBase64EncodedData_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase64EncodedData:options:");
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase64EncodedString:options:");
}

id objc_msgSend_initWithBytes_len_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:len:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:freeWhenDone:");
}

id objc_msgSend_initWithCiphertext_authenticationCode_initializationVector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCiphertext:authenticationCode:initializationVector:");
}

id objc_msgSend_initWithCloudkitContainerName_octagonContextID_appleAccountID_altDSID_isPrimaryPersona_personaUniqueString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudkitContainerName:octagonContextID:appleAccountID:altDSID:isPrimaryPersona:personaUniqueString:");
}

id objc_msgSend_initWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoder:");
}

id objc_msgSend_initWithContainerID_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerID:options:");
}

id objc_msgSend_initWithCurve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCurve:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_signature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:signature:");
}

id objc_msgSend_initWithKeySpecifier_digestOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeySpecifier:digestOperation:");
}

id objc_msgSend_initWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLength:");
}

id objc_msgSend_initWithSecKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSecKey:");
}

id objc_msgSend_initWithSecureElementIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSecureElementIdentity:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_initializationVector(void *a1, const char *a2, ...)
{
  return _[a1 initializationVector];
}

id objc_msgSend_isCloudKeychainSyncAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isCloudKeychainSyncAllowed];
}

id objc_msgSend_isCuttlefishError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCuttlefishError:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExcluded(void *a1, const char *a2, ...)
{
  return _[a1 isExcluded];
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return _[a1 isLocked];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isPrimaryAccount(void *a1, const char *a2, ...)
{
  return _[a1 isPrimaryAccount];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemPtr(void *a1, const char *a2, ...)
{
  return _[a1 itemPtr];
}

id objc_msgSend_itemPtrName(void *a1, const char *a2, ...)
{
  return _[a1 itemPtrName];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_key_wrappedByKey_uuid_parentKeyUUID_keyclass_zoneID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "key:wrappedByKey:uuid:parentKeyUUID:keyclass:zoneID:error:");
}

id objc_msgSend_keyData(void *a1, const char *a2, ...)
{
  return _[a1 keyData];
}

id objc_msgSend_keyType(void *a1, const char *a2, ...)
{
  return _[a1 keyType];
}

id objc_msgSend_keyWithSubjectPublicKeyInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyWithSubjectPublicKeyInfo:");
}

id objc_msgSend_keyWrappedBySelf_uuid_keyclass_zoneID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyWrappedBySelf:uuid:keyclass:zoneID:error:");
}

id objc_msgSend_keyclass(void *a1, const char *a2, ...)
{
  return _[a1 keyclass];
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _[a1 kind];
}

id objc_msgSend_leaveTrust(void *a1, const char *a2, ...)
{
  return _[a1 leaveTrust];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_loadFromProtobuf_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadFromProtobuf:error:");
}

id objc_msgSend_loadKeyMaterialFromKeychain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadKeyMaterialFromKeychain:");
}

id objc_msgSend_memberChanges(void *a1, const char *a2, ...)
{
  return _[a1 memberChanges];
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_moveRequest(void *a1, const char *a2, ...)
{
  return _[a1 moveRequest];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _[a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_newUpload(void *a1, const char *a2, ...)
{
  return _[a1 newUpload];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_octagonContextID(void *a1, const char *a2, ...)
{
  return _[a1 octagonContextID];
}

id objc_msgSend_operatingSystemVersionString(void *a1, const char *a2, ...)
{
  return _[a1 operatingSystemVersionString];
}

id objc_msgSend_osVersion(void *a1, const char *a2, ...)
{
  return _[a1 osVersion];
}

id objc_msgSend_parentKeyUUID(void *a1, const char *a2, ...)
{
  return _[a1 parentKeyUUID];
}

id objc_msgSend_peerCountsByMachineID(void *a1, const char *a2, ...)
{
  return _[a1 peerCountsByMachineID];
}

id objc_msgSend_peerID(void *a1, const char *a2, ...)
{
  return _[a1 peerID];
}

id objc_msgSend_peerIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 peerIdentifier];
}

id objc_msgSend_peerStatus(void *a1, const char *a2, ...)
{
  return _[a1 peerStatus];
}

id objc_msgSend_peersCleanedup(void *a1, const char *a2, ...)
{
  return _[a1 peersCleanedup];
}

id objc_msgSend_personaUniqueString(void *a1, const char *a2, ...)
{
  return _[a1 personaUniqueString];
}

id objc_msgSend_poisoned(void *a1, const char *a2, ...)
{
  return _[a1 poisoned];
}

id objc_msgSend_postEscrowCFU(void *a1, const char *a2, ...)
{
  return _[a1 postEscrowCFU];
}

id objc_msgSend_postRepairCFU(void *a1, const char *a2, ...)
{
  return _[a1 postRepairCFU];
}

id objc_msgSend_prepareThreadForKeychainAPIUseForPersonaIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareThreadForKeychainAPIUseForPersonaIdentifier:");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_publicEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 publicEncryptionKey];
}

id objc_msgSend_publicKey(void *a1, const char *a2, ...)
{
  return _[a1 publicKey];
}

id objc_msgSend_publicSigningKey(void *a1, const char *a2, ...)
{
  return _[a1 publicSigningKey];
}

id objc_msgSend_queryKeyMaterialInKeychain_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryKeyMaterialInKeychain:error:");
}

id objc_msgSend_randomKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "randomKey:");
}

id objc_msgSend_randomKeyWrappedByParent_keyclass_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "randomKeyWrappedByParent:keyclass:error:");
}

id objc_msgSend_receiverPeerID(void *a1, const char *a2, ...)
{
  return _[a1 receiverPeerID];
}

id objc_msgSend_receiverPublicEncryptionKeySPKI(void *a1, const char *a2, ...)
{
  return _[a1 receiverPublicEncryptionKeySPKI];
}

id objc_msgSend_recoveryString(void *a1, const char *a2, ...)
{
  return _[a1 recoveryString];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_reroll(void *a1, const char *a2, ...)
{
  return _[a1 reroll];
}

id objc_msgSend_resetOctagon(void *a1, const char *a2, ...)
{
  return _[a1 resetOctagon];
}

id objc_msgSend_safeErrorClasses(void *a1, const char *a2, ...)
{
  return _[a1 safeErrorClasses];
}

id objc_msgSend_salt(void *a1, const char *a2, ...)
{
  return _[a1 salt];
}

id objc_msgSend_saveKeyMaterialToKeychain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveKeyMaterialToKeychain:");
}

id objc_msgSend_secureElementIdentity(void *a1, const char *a2, ...)
{
  return _[a1 secureElementIdentity];
}

id objc_msgSend_senderPeerID(void *a1, const char *a2, ...)
{
  return _[a1 senderPeerID];
}

id objc_msgSend_serializeAsProtobuf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeAsProtobuf:");
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _[a1 service];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccountOverrideInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountOverrideInfo:");
}

id objc_msgSend_setAessivkey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAessivkey:");
}

id objc_msgSend_setAuthenticationCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticationCode:");
}

id objc_msgSend_setBackupKeybagDigest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackupKeybagDigest:");
}

id objc_msgSend_setBottleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottleID:");
}

id objc_msgSend_setBottleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottleId:");
}

id objc_msgSend_setBottleValidity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottleValidity:");
}

id objc_msgSend_setBuild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuild:");
}

id objc_msgSend_setByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObject:");
}

id objc_msgSend_setBypassPCSEncryption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBypassPCSEncryption:");
}

id objc_msgSend_setCiphertext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCiphertext:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClientMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientMetadata:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setCurrentFederation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentFederation:");
}

id objc_msgSend_setCurve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurve:");
}

id objc_msgSend_setDeviceColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceColor:");
}

id objc_msgSend_setDeviceEnclosureColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceEnclosureColor:");
}

id objc_msgSend_setDeviceMid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceMid:");
}

id objc_msgSend_setDeviceModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceModel:");
}

id objc_msgSend_setDeviceModelClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceModelClass:");
}

id objc_msgSend_setDeviceModelVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceModelVersion:");
}

id objc_msgSend_setDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceName:");
}

id objc_msgSend_setEncryptionSPKI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEncryptionSPKI:");
}

id objc_msgSend_setEpoch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEpoch:");
}

id objc_msgSend_setEscrowInformationMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowInformationMetadata:");
}

id objc_msgSend_setEscrowRecordLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowRecordLabel:");
}

id objc_msgSend_setEscrowedEncryptionSPKI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowedEncryptionSPKI:");
}

id objc_msgSend_setEscrowedSigningSPKI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowedSigningSPKI:");
}

id objc_msgSend_setEscrowedSpki_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowedSpki:");
}

id objc_msgSend_setExpectedFederationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedFederationId:");
}

id objc_msgSend_setExpectedReceiveSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedReceiveSize:");
}

id objc_msgSend_setExpectedSendSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedSendSize:");
}

id objc_msgSend_setFederationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFederationId:");
}

id objc_msgSend_setInitializationVector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitializationVector:");
}

id objc_msgSend_setIntendedFederation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntendedFederation:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setKeyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyData:");
}

id objc_msgSend_setKeyMaterialInKeychain_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyMaterialInKeychain:error:");
}

id objc_msgSend_setKeyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyType:");
}

id objc_msgSend_setKeyclass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyclass:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setParentKeyUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentKeyUUID:");
}

id objc_msgSend_setPasscodeGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasscodeGeneration:");
}

id objc_msgSend_setPeerEncryptionPrivKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerEncryptionPrivKey:");
}

id objc_msgSend_setPeerEncryptionSPKI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerEncryptionSPKI:");
}

id objc_msgSend_setPeerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerID:");
}

id objc_msgSend_setPeerInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerInfo:");
}

id objc_msgSend_setPeerSigningPrivKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerSigningPrivKey:");
}

id objc_msgSend_setPeerSigningSPKI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerSigningSPKI:");
}

id objc_msgSend_setPoisoned_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPoisoned:");
}

id objc_msgSend_setReceiverPeerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceiverPeerID:");
}

id objc_msgSend_setReceiverPublicEncryptionKeySPKI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceiverPublicEncryptionKeySPKI:");
}

id objc_msgSend_setRecordId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordId:");
}

id objc_msgSend_setReserved1_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReserved1:");
}

id objc_msgSend_setReserved2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReserved2:");
}

id objc_msgSend_setReserved3_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReserved3:");
}

id objc_msgSend_setReserved4_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReserved4:");
}

id objc_msgSend_setReserved5_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReserved5:");
}

id objc_msgSend_setReserved6_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReserved6:");
}

id objc_msgSend_setReserved7_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReserved7:");
}

id objc_msgSend_setSenderPeerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderPeerID:");
}

id objc_msgSend_setSerial_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerial:");
}

id objc_msgSend_setSerialNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerialNumber:");
}

id objc_msgSend_setSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignature:");
}

id objc_msgSend_setSigningSPKI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSigningSPKI:");
}

id objc_msgSend_setTlkUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTlkUUID:");
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUuid:");
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVersion:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setWrappedTLK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWrappedTLK:");
}

id objc_msgSend_setWrappedkey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWrappedkey:");
}

id objc_msgSend_setZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoneName:");
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sign_withKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sign:withKey:error:");
}

id objc_msgSend_signRecord_ckrecord_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signRecord:ckrecord:error:");
}

id objc_msgSend_signature(void *a1, const char *a2, ...)
{
  return _[a1 signature];
}

id objc_msgSend_signingKey(void *a1, const char *a2, ...)
{
  return _[a1 signingKey];
}

id objc_msgSend_signingSPKI(void *a1, const char *a2, ...)
{
  return _[a1 signingSPKI];
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_spid(void *a1, const char *a2, ...)
{
  return _[a1 spid];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringForObjectValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForObjectValue:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_subdataWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subdataWithRange:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_successfulKeysRecovered(void *a1, const char *a2, ...)
{
  return _[a1 successfulKeysRecovered];
}

id objc_msgSend_superfluousPeers(void *a1, const char *a2, ...)
{
  return _[a1 superfluousPeers];
}

id objc_msgSend_superfluousPeersCleanupEnabled(void *a1, const char *a2, ...)
{
  return _[a1 superfluousPeersCleanupEnabled];
}

id objc_msgSend_tlk(void *a1, const char *a2, ...)
{
  return _[a1 tlk];
}

id objc_msgSend_tlkRecoveryErrors(void *a1, const char *a2, ...)
{
  return _[a1 tlkRecoveryErrors];
}

id objc_msgSend_tlkShareGarbageCollectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 tlkShareGarbageCollectionEnabled];
}

id objc_msgSend_tlkUUID(void *a1, const char *a2, ...)
{
  return _[a1 tlkUUID];
}

id objc_msgSend_totalEscrowRecords(void *a1, const char *a2, ...)
{
  return _[a1 totalEscrowRecords];
}

id objc_msgSend_totalPeers(void *a1, const char *a2, ...)
{
  return _[a1 totalPeers];
}

id objc_msgSend_totalTLKSharesRecovered(void *a1, const char *a2, ...)
{
  return _[a1 totalTLKSharesRecovered];
}

id objc_msgSend_totalTlkShares(void *a1, const char *a2, ...)
{
  return _[a1 totalTlkShares];
}

id objc_msgSend_trustedPeers(void *a1, const char *a2, ...)
{
  return _[a1 trustedPeers];
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_unknownMachineIDsPresent(void *a1, const char *a2, ...)
{
  return _[a1 unknownMachineIDsPresent];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_unwrapAESKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unwrapAESKey:error:");
}

id objc_msgSend_unwrapUsing_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unwrapUsing:error:");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userPersonaType(void *a1, const char *a2, ...)
{
  return _[a1 userPersonaType];
}

id objc_msgSend_userPersonaUniqueString(void *a1, const char *a2, ...)
{
  return _[a1 userPersonaUniqueString];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _[a1 uuid];
}

id objc_msgSend_verify_withKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verify:withKey:error:");
}

id objc_msgSend_verifySignature_verifyingPeer_ckrecord_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifySignature:verifyingPeer:ckrecord:error:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_viablePeerCountsByModelID(void *a1, const char *a2, ...)
{
  return _[a1 viablePeerCountsByModelID];
}

id objc_msgSend_viewList(void *a1, const char *a2, ...)
{
  return _[a1 viewList];
}

id objc_msgSend_walrus(void *a1, const char *a2, ...)
{
  return _[a1 walrus];
}

id objc_msgSend_webAccess(void *a1, const char *a2, ...)
{
  return _[a1 webAccess];
}

id objc_msgSend_wrap_publicKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrap:publicKey:error:");
}

id objc_msgSend_wrapAESKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapAESKey:error:");
}

id objc_msgSend_wrappedData(void *a1, const char *a2, ...)
{
  return _[a1 wrappedData];
}

id objc_msgSend_wrappedTLK(void *a1, const char *a2, ...)
{
  return _[a1 wrappedTLK];
}

id objc_msgSend_wrappedkey(void *a1, const char *a2, ...)
{
  return _[a1 wrappedkey];
}

id objc_msgSend_wrapsSelf(void *a1, const char *a2, ...)
{
  return _[a1 wrapsSelf];
}

id objc_msgSend_zeroKey(void *a1, const char *a2, ...)
{
  return _[a1 zeroKey];
}

id objc_msgSend_zoneID(void *a1, const char *a2, ...)
{
  return _[a1 zoneID];
}

id objc_msgSend_zoneName(void *a1, const char *a2, ...)
{
  return _[a1 zoneName];
}