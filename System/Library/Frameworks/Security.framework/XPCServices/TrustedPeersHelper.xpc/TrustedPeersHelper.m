int main(int argc, const char **argv, const char **envp)
{
  malloc_zone_t *zone;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  int result;
  void v27[5];

  zone = malloc_create_zone(0, 0);
  malloc_set_zone_name(zone, "ICU");
  LODWORD(v27[0]) = 0;
  u_setMemoryFunctions();
  v4 = type metadata accessor for CuttlefishCKOperationRunnerCreator();
  v5 = swift_allocObject();
  v6 = sub_1000047D8(0, &qword_100298EF8);
  v7 = objc_msgSend(objc_allocWithZone((Class)OTPersonaActualAdapter), "init", v27[0]);
  v8 = [objc_allocWithZone((Class)OTManagedConfigurationActualAdapter) init];
  v27[3] = v4;
  v27[4] = &off_100282198;
  v27[0] = v5;
  type metadata accessor for ContainerMap();
  v9 = (void *)swift_allocObject();
  v10 = sub_100002F80((uint64_t)v27, v4);
  __chkstk_darwin(v10, v10);
  v12 = (void *)((char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  v14 = *v12;
  swift_retain();
  v15 = sub_1000039D0(v14, v6, (uint64_t)v7, (uint64_t)v8, v9);
  sub_100004788((uint64_t)v27);
  swift_release();
  qword_1002A0230 = (uint64_t)v15;
  v16 = sub_100222090();
  sub_100003C64(v16, qword_100298B80);
  sub_100003CC8(v16, (uint64_t)qword_100298B80);
  sub_100222080();
  qword_1002A0238 = 0xD00000000000001CLL;
  unk_1002A0240 = 0x8000000100232270;
  if (_set_user_dir_suffix() && (sub_10003AC0C(65537), v18 = v17, swift_bridgeObjectRelease(), v18))
  {
    v19 = sub_100222070();
    v20 = sub_1002224E0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Starting up", v21, 2u);
      swift_slowDealloc();
    }

    v22 = self;
    v23 = objc_allocWithZone((Class)type metadata accessor for SetValueTransformer());
    v24 = objc_msgSend(v23, "init", v27[0]);
    if (qword_100298BA0 != -1) {
      swift_once();
    }
    [v22 setValueTransformer:v24 forName:qword_1002A0258];

    qword_1002A0248 = (uint64_t)[objc_allocWithZone((Class)type metadata accessor for ServiceDelegate()) init];
    v25 = [self serviceListener];
    qword_1002A0250 = (uint64_t)v25;
    [v25 setDelegate:qword_1002A0248];
    [v25 resume];
    return 0;
  }
  else
  {
    result = sub_100222960();
    __break(1u);
  }
  return result;
}

id sub_100002BB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServiceDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t variable initialization expression of Changes.recoveryEncryptionPubKey()
{
  return 0;
}

uint64_t variable initialization expression of TLKShare.signature()
{
  return 0;
}

uint64_t variable initialization expression of EscrowInformation.Metadata.ClientMetadata._secureBackupMetadataTimestamp@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C((uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp, a1);
}

void *variable initialization expression of Changes.differences()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of Peer._permanentInfoAndSig@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for SignedPeerPermanentInfo, a1);
}

uint64_t variable initialization expression of Peer._stableInfoAndSig@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t variable initialization expression of Peer._dynamicInfoAndSig@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for SignedPeerDynamicInfo, a1);
}

uint64_t variable initialization expression of Peer._recoveryVoucher@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for SignedRecoveryVoucher, a1);
}

uint64_t variable initialization expression of Peer._custodianRecoveryKeyAndSig@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for SignedCustodianRecoveryKey, a1);
}

uint64_t variable initialization expression of PeerDifference.operation@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for PeerDifference.OneOf_Operation, a1);
}

uint64_t variable initialization expression of TLKShare.poisoned()
{
  return 0;
}

uint64_t variable initialization expression of ViewKey.keyclass()
{
  return 0;
}

uint64_t variable initialization expression of ViewKeys._storage()
{
  return sub_100002E78(&qword_100298CB8);
}

uint64_t variable initialization expression of DirectPCSIdentity._item@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C((uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport, a1);
}

uint64_t variable initialization expression of EscrowPair._storage()
{
  return sub_100002E78(&qword_100298CD8);
}

uint64_t variable initialization expression of Changes.more()
{
  return 0;
}

uint64_t variable initialization expression of PolicyDocumentMapEntry._key@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for PolicyDocumentKey, a1);
}

uint64_t variable initialization expression of RemoveUnreadableCKServerDataRequest._accountInfo@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for AccountInfo, a1);
}

uint64_t variable initialization expression of EscrowProxyFederationMoveRecordRequest._metrics@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for Metrics, a1);
}

uint64_t variable initialization expression of AddCustodianRecoveryKeyResponse._changes@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for Changes, a1);
}

uint64_t variable initialization expression of EstablishRequest._storage()
{
  return sub_100002E78(&qword_100298D20);
}

uint64_t variable initialization expression of JoinWithVoucherRequest._storage()
{
  return sub_100002E78(&qword_100298D38);
}

uint64_t variable initialization expression of UpdateTrustRequest._trustedDevicesVersion@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for IdmsTrustedDevicesVersion, a1);
}

uint64_t variable initialization expression of AddCustodianRecoveryKeyRequest._storage()
{
  return sub_100002E78(&qword_100298D90);
}

uint64_t variable initialization expression of FetchRecoverableTLKSharesResponse.View._keys@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for ViewKeysRecords, a1);
}

uint64_t variable initialization expression of GetRepairActionResponse._storage()
{
  return sub_100002E78(&qword_100298E00);
}

uint64_t variable initialization expression of EscrowInformation.Metadata._storage()
{
  return sub_100002E78(&qword_100298E50);
}

uint64_t sub_100002E78(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t variable initialization expression of EscrowInformation._escrowInformationMetadata@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for EscrowInformation.Metadata, a1);
}

uint64_t variable initialization expression of DirectPCSIdentity._pcsService@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for PCSService, a1);
}

uint64_t variable initialization expression of CurrentCKKSItem._itemSpecifier@<X0>(uint64_t a1@<X8>)
{
  return sub_100002F0C(type metadata accessor for CurrentCKKSItemSpecifier, a1);
}

uint64_t sub_100002F0C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t sub_100002F80(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_100002FD0()
{
  return sub_100221D80();
}

uint64_t sub_10000301C()
{
  return sub_100221D70();
}

Swift::Int sub_100003074()
{
  return sub_100222B20();
}

uint64_t sub_1000030DC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id sub_1000030E4()
{
  return *v0;
}

void *sub_1000030EC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1000030FC(void *a1@<X8>)
{
  *a1 = *v1;
}

_DWORD *sub_100003108@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_100003118(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_100003124(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100003138()
{
  swift_getWitnessTable();

  return sub_100221D60();
}

uint64_t sub_1000031A4()
{
  return sub_100222270();
}

uint64_t sub_1000031B4(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990A8, type metadata accessor for CKUnderlyingError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100003220(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990A8, type metadata accessor for CKUnderlyingError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000328C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000049A4(&qword_1002990A8, type metadata accessor for CKUnderlyingError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10000331C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000049A4(&qword_1002990A8, type metadata accessor for CKUnderlyingError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10000339C()
{
  return sub_100222270();
}

uint64_t sub_1000033AC(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990E0, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100003418(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990E0, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100003484(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000049A4(&qword_1002990E0, type metadata accessor for CKError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_100003514()
{
  id v1 = *v0;
  uint64_t v2 = sub_100222660();

  return v2;
}

uint64_t sub_10000354C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000049A4(&qword_1002990E0, type metadata accessor for CKError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1000035C8()
{
  return sub_100222B20();
}

uint64_t sub_100003628(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_100299070, type metadata accessor for CKUnderlyingError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100003694(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_100299070, type metadata accessor for CKUnderlyingError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100003704(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990A8, type metadata accessor for CKUnderlyingError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100003770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000049A4(&qword_1002990A8, type metadata accessor for CKUnderlyingError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000037F4(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990B0, type metadata accessor for CKError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100003860(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990B0, type metadata accessor for CKError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000038CC(uint64_t a1)
{
  uint64_t v2 = sub_1000049A4(&qword_1002990E0, type metadata accessor for CKError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100003938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000049A4(&qword_1002990E0, type metadata accessor for CKError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

BOOL sub_1000039BC(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_1000039D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  uint64_t v13 = a2;
  uint64_t v12 = sub_100222550();
  uint64_t v7 = *(void *)(v12 - 8);
  __chkstk_darwin();
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100222530();
  __chkstk_darwin();
  sub_100222120();
  __chkstk_darwin();
  uint64_t v18 = type metadata accessor for CuttlefishCKOperationRunnerCreator();
  v19 = &off_100282198;
  *(void *)&long long v17 = a1;
  sub_1000047D8(0, &qword_100298FF8);
  sub_100222100();
  v16 = &_swiftEmptyArrayStorage;
  sub_1000049A4(&qword_100299000, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000046DC(&qword_100299008);
  sub_100004814();
  sub_1002226C0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12);
  a5[2] = sub_100222580();
  a5[11] = sub_100009108((uint64_t)&_swiftEmptyArrayStorage);
  sub_1000048B8(&v17, (uint64_t)(a5 + 3));
  uint64_t v10 = v14;
  a5[8] = v13;
  a5[9] = v10;
  a5[10] = v15;
  return a5;
}

uint64_t *sub_100003C64(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100003CC8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for ServiceDelegate()
{
  return self;
}

uint64_t sub_100003D24(void *a1)
{
  uint64_t v2 = sub_100222090();
  sub_100003CC8(v2, (uint64_t)qword_100298B80);
  id v3 = a1;
  uint64_t v4 = sub_100222070();
  os_log_type_t v5 = sub_1002224E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    *(void *)&v45[0] = v3;
    id v8 = v3;
    sub_100222690();
    *uint64_t v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received a new client: %{public}@", v6, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  NSString v9 = sub_100222260();
  id v10 = [v3 valueForEntitlement:v9];

  if (!v10)
  {
    memset(v45, 0, sizeof(v45));
    goto LABEL_12;
  }
  sub_1002226B0();
  swift_unknownObjectRelease();
  sub_100004720((uint64_t)v45, (uint64_t)v43);
  if (swift_dynamicCast() && v44 == (id)1)
  {
    v11 = sub_100222070();
    os_log_type_t v12 = sub_1002224E0();
    if (!os_log_type_enabled(v11, v12))
    {
LABEL_10:

      sub_100004788((uint64_t)v43);
      sub_10000467C((uint64_t)v45);
      id v14 = [self interfaceWithProtocol:&OBJC_PROTOCOL___TrustedPeersHelperProtocol];
      id v15 = TrustedPeersHelperSetupProtocol(v14);

      [v3 setExportedInterface:v15];
      id v16 = [v3 endpoint];
      uint64_t v17 = qword_1002A0230;
      type metadata accessor for Client();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v16;
      *(void *)(v18 + 24) = v17;
      swift_retain();
      [v3 setExportedObject:v18];
      [v3 resume];
      swift_release();
      return 1;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_1001BEBDC(0xD00000000000002BLL, 0x8000000100232350, &v42);
LABEL_9:
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "client has entitlement '%{public}s'", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_10;
  }
  if (swift_dynamicCast() && v41 == 1)
  {
    v11 = sub_100222070();
    os_log_type_t v12 = sub_1002224E0();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_10;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    id v44 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v42 = sub_1001BEBDC(0xD00000000000002BLL, 0x8000000100232350, (uint64_t *)&v44);
    goto LABEL_9;
  }
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      id v26 = v3;
      v27 = sub_100222070();
      os_log_type_t v37 = sub_1002224E0();
      if (os_log_type_enabled(v27, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        v39 = (void *)swift_slowAlloc();
        id v44 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 138543874;
        id v40 = v26;
        sub_100222690();
        void *v39 = v26;

        *(_WORD *)(v38 + 12) = 2082;
        HIDWORD(v42) = (unint64_t)sub_1001BEBDC(0xD00000000000002BLL, 0x8000000100232350, (uint64_t *)&v44) >> 32;
        sub_100222690();
        *(_WORD *)(v38 + 22) = 1024;
        LODWORD(v42) = v41;
        sub_100222690();
        v32 = "client(%{public}@ has wrong BOOLean value for '%{public}s' (%{BOOL}d), rejecting";
        v33 = v27;
        os_log_type_t v34 = v37;
        v35 = (uint8_t *)v38;
        uint32_t v36 = 28;
        goto LABEL_26;
      }
LABEL_27:

      goto LABEL_28;
    }
    sub_100004788((uint64_t)v43);
LABEL_12:
    id v20 = v3;
    v21 = sub_100222070();
    os_log_type_t v22 = sub_1002224E0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      v24 = (void *)swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138543618;
      id v44 = v20;
      id v25 = v20;
      sub_100222690();
      void *v24 = v20;

      *(_WORD *)(v23 + 12) = 2082;
      id v44 = (id)sub_1001BEBDC(0xD00000000000002BLL, 0x8000000100232350, v43);
      sub_100222690();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "client(%{public}@ is missing entitlement '%{public}s'", (uint8_t *)v23, 0x16u);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_29;
  }
  id v26 = v3;
  v27 = sub_100222070();
  os_log_type_t v28 = sub_1002224E0();
  if (!os_log_type_enabled(v27, v28)) {
    goto LABEL_27;
  }
  uint64_t v29 = swift_slowAlloc();
  v30 = (void *)swift_slowAlloc();
  uint64_t v42 = swift_slowAlloc();
  *(_DWORD *)uint64_t v29 = 138543874;
  id v31 = v26;
  sub_100222690();
  void *v30 = v26;

  *(_WORD *)(v29 + 12) = 2082;
  sub_1001BEBDC(0xD00000000000002BLL, 0x8000000100232350, &v42);
  sub_100222690();
  *(_WORD *)(v29 + 22) = 2048;
  sub_100222690();
  v32 = "client(%{public}@ has wrong integer value for '%{public}s' (%ld), rejecting";
  v33 = v27;
  os_log_type_t v34 = v28;
  v35 = (uint8_t *)v29;
  uint32_t v36 = 32;
LABEL_26:
  _os_log_impl((void *)&_mh_execute_header, v33, v34, v32, v35, v36);
  sub_1000046DC(&qword_100298F90);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_28:

  sub_100004788((uint64_t)v43);
LABEL_29:
  sub_10000467C((uint64_t)v45);
  return 0;
}

uint64_t sub_10000467C(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299EA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000046DC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100004720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000046DC(&qword_100299EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100004788(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000047D8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_100004814()
{
  unint64_t result = qword_100299010;
  if (!qword_100299010)
  {
    sub_100004870(&qword_100299008);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100299010);
  }
  return result;
}

uint64_t sub_100004870(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000048B8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void type metadata accessor for CKUnderlyingError(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void type metadata accessor for TPPeerStatus(uint64_t a1)
{
}

void type metadata accessor for CuttlefishResetReason(uint64_t a1)
{
}

void type metadata accessor for TPPBCustodianRecoveryKey_Kind(uint64_t a1)
{
}

void type metadata accessor for TPPBPeerStableInfoUserControllableViewStatus(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_10000495C()
{
  return sub_1000049A4(&qword_100299050, type metadata accessor for CKError);
}

uint64_t sub_1000049A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000049EC()
{
  return sub_1000049A4(&qword_100299058, type metadata accessor for CKError);
}

uint64_t sub_100004A34()
{
  return sub_1000049A4(&qword_100299060, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_100004A7C()
{
  return sub_1000049A4(&qword_100299068, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_100004AC4()
{
  return sub_1000049A4(&qword_100299070, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_100004B0C()
{
  return sub_1000049A4(&qword_100299078, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_100004B54()
{
  return sub_1000049A4(&qword_100299080, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_100004B9C()
{
  return sub_1000049A4(&qword_100299088, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_100004BF8()
{
  return sub_1000049A4(&qword_100299090, _s3__C4CodeOMa_0);
}

unint64_t sub_100004C44()
{
  unint64_t result = qword_100299098;
  if (!qword_100299098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100299098);
  }
  return result;
}

uint64_t sub_100004C98()
{
  return sub_1000049A4(&qword_1002990A0, _s3__C4CodeOMa_0);
}

uint64_t sub_100004CE0()
{
  return sub_1000049A4(&qword_1002990A8, type metadata accessor for CKUnderlyingError);
}

uint64_t sub_100004D28()
{
  return sub_1000049A4(&qword_1002990B0, type metadata accessor for CKError);
}

uint64_t sub_100004D70()
{
  return sub_1000049A4(&qword_1002990B8, type metadata accessor for CKError);
}

uint64_t sub_100004DB8()
{
  return sub_1000049A4(&qword_1002990C0, type metadata accessor for CKError);
}

uint64_t sub_100004E00()
{
  return sub_1000049A4(&qword_1002990C8, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_100004E5C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100004EA4()
{
  return sub_1000049A4(&qword_1002990D0, type metadata accessor for Code);
}

uint64_t sub_100004EEC()
{
  return sub_1000049A4(&qword_1002990D8, type metadata accessor for Code);
}

uint64_t sub_100004F34()
{
  return sub_1000049A4(&qword_1002990E0, type metadata accessor for CKError);
}

uint64_t sub_100004F7C()
{
  return sub_1000049A4((unint64_t *)&qword_1002990E8, type metadata accessor for CFString);
}

uint64_t sub_100004FC4()
{
  return sub_1000049A4(&qword_1002990F0, type metadata accessor for CFString);
}

uint64_t sub_100005020()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_100299170);
  sub_100003CC8(v0, (uint64_t)qword_100299170);
  return sub_100222080();
}

double sub_1000050E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100004720(a1, (uint64_t)&v19);
  if (v20)
  {
    sub_100005A98(&v19, v21);
    long long v3 = self;
    sub_1000059A4(v21, v22);
    uint64_t v4 = sub_100222A20();
    *(void *)&long long v19 = 0;
    id v5 = [v3 archivedDataWithRootObject:v4 requiringSecureCoding:1 error:&v19];
    swift_unknownObjectRelease();
    id v6 = (id)v19;
    if (v5)
    {
      uint64_t v7 = sub_100221BF0();
      uint64_t v9 = v8;

      *(void *)(a2 + 24) = &type metadata for Data;
      *(void *)a2 = v7;
      *(void *)(a2 + 8) = v9;
      sub_100004788((uint64_t)v21);
      return result;
    }
    v11 = v6;
    uint64_t v12 = sub_100221B40();

    swift_willThrow();
    sub_100004788((uint64_t)v21);
    if (qword_100298B98 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_100299170);
    swift_errorRetain();
    swift_errorRetain();
    id v14 = sub_100222070();
    os_log_type_t v15 = sub_1002224E0();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      v21[0] = swift_slowAlloc();
      *(_DWORD *)id v16 = 136446210;
      *(void *)&long long v19 = v12;
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      uint64_t v17 = sub_1002222C0();
      *(void *)&long long v19 = sub_1001BEBDC(v17, v18, v21);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to serialize a Set: %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    sub_10000467C((uint64_t)&v19);
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double sub_100005400@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100004720(a1, (uint64_t)v9);
  if (v9[3])
  {
    if (swift_dynamicCast())
    {
      id v3 = objc_allocWithZone((Class)NSKeyedUnarchiver);
      sub_1000059E8(v7, v8);
      id v4 = sub_100197258();
      sub_1000046DC(&qword_1002991B0);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_100229380;
      *(void *)(v5 + 32) = sub_1000047D8(0, &qword_1002991B8);
      *(void *)(v5 + 40) = sub_1000047D8(0, &qword_1002991C0);
      sub_100222270();
      sub_100222610();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100005A40(v7, v8);
      sub_100005A40(v7, v8);
      return result;
    }
  }
  else
  {
    sub_10000467C((uint64_t)v9);
  }
  double result = 0.0;
  *a2 = 0u;
  a2[1] = 0u;
  return result;
}

id sub_100005750(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, _OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_1002226B0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
    id v7 = a1;
  }
  a4(v16, v15);

  sub_10000467C((uint64_t)v15);
  uint64_t v8 = v17;
  if (v17)
  {
    uint64_t v9 = sub_1000059A4(v16, v17);
    uint64_t v10 = *(void *)(v8 - 8);
    __chkstk_darwin(v9, v9);
    uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = (void *)sub_100222A20();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    sub_100004788((uint64_t)v16);
  }
  else
  {
    uint64_t v13 = 0;
  }

  return v13;
}

NSString sub_1000058D0()
{
  NSString result = sub_100222260();
  qword_1002A0258 = (uint64_t)result;
  return result;
}

id sub_100005948()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SetValueTransformer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SetValueTransformer()
{
  return self;
}

void *sub_1000059A4(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1000059E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100005A40(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

_OWORD *sub_100005A98(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id sub_100005AA8(char *a1)
{
  uint64_t v4 = OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey;
  uint64_t v5 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey];
  id v31 = v1;
  id v6 = [v5 publicKey];
  id v7 = [v6 keyData];

  uint64_t v8 = sub_100221BF0();
  unint64_t v10 = v9;

  uint64_t v11 = ccsha384_di();
  id v12 = objc_msgSend(self, "ccsha384_diSize");
  uint64_t v29 = sub_100006CCC((uint64_t)v12);
  unint64_t v30 = v13;
  uint64_t v27 = v8;
  unint64_t v28 = v10;
  sub_1000059E8(v8, v10);
  sub_1000066EC(&v29, &v27, v11);
  uint64_t v14 = v29;
  unint64_t v15 = v30;
  sub_1000059E8(v29, v30);
  uint64_t v16 = sub_100221BE0(0);
  unint64_t v18 = v17;
  sub_100005A40(v14, v15);
  sub_100005A40(v14, v15);
  sub_100005A40(v27, v28);
  uint64_t v29 = 2968402;
  unint64_t v30 = 0xE300000000000000;
  v32._countAndFlagsBits = v16;
  v32._object = v18;
  sub_100222310(v32);
  swift_bridgeObjectRelease();
  sub_100005A40(v8, v10);
  long long v19 = *(void **)&a1[v4];
  uint64_t v20 = v29;
  uint64_t v21 = v30;
  uint64_t v22 = *(void **)&a1[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_encryptionKey];
  objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
  uint64_t v23 = sub_100043C0C(v20, v21, v19, v22);
  id v24 = v31;
  if (v2)
  {

    type metadata accessor for RecoveryKey();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v31[OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys] = v23;

    v26.receiver = v24;
    v26.super_class = (Class)type metadata accessor for RecoveryKey();
    id v24 = objc_msgSendSuper2(&v26, "init");
  }
  return v24;
}

id sub_100005D10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecoveryKey();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RecoveryKey()
{
  return self;
}

uint64_t sub_100005D78(uint64_t a1, char *a2, int a3)
{
  LODWORD(v32) = a3;
  uint64_t v5 = sub_100221D00();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  unint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v35 = a1;
  v10(v9, a1, v5);
  uint64_t v11 = OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey;
  id v12 = [*(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey] publicKey];
  uint64_t v31 = OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_encryptionKey;
  id v13 = [*(id *)&a2[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_encryptionKey] publicKey];
  uint64_t v14 = *(void **)&a2[v11];
  id v15 = objc_allocWithZone((Class)TPCustodianRecoveryKey);
  id v16 = v14;
  uint64_t v17 = v33;
  id v18 = sub_100007424((uint64_t)v9, (uint64_t)v12, (uint64_t)v13, (uint64_t)v16, v32);
  if (v17)
  {

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v35, v5);
    uint64_t v19 = v34;
    type metadata accessor for CustodianRecoveryKey();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v20 = v18;
    uint64_t v32 = v6;
    uint64_t v33 = v5;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    uint64_t v21 = v34;
    *(void *)(v34 + 24) = v20;
    id v22 = [v20 peerID];
    uint64_t v23 = sub_100222270();
    uint64_t v25 = v24;

    objc_super v26 = *(void **)&a2[v11];
    uint64_t v27 = *(void **)&a2[v31];
    id v28 = objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
    uint64_t v19 = v21;
    unint64_t v30 = sub_100043C0C(v23, v25, v26, v27);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
    *(void *)(v21 + 16) = v30;
  }
  return v19;
}

uint64_t sub_10000603C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v7 = v5;
  id v13 = sub_1001BEF04(a2, a3);
  if ((a3 & 0x1000000000000000) != 0)
  {
    Swift::Int v14 = sub_100222330();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((a3 & 0x2000000000000000) != 0) {
      Swift::Int v14 = HIBYTE(a3) & 0xF;
    }
    else {
      Swift::Int v14 = a2 & 0xFFFFFFFFFFFFLL;
    }
  }
  uint64_t v15 = sub_100006D6C((unsigned char *)v13 + 32, v14);
  unint64_t v17 = v16;
  swift_release();
  objc_allocWithZone((Class)type metadata accessor for RecoveryKeySet());
  sub_1000059E8(v15, v17);
  id v18 = sub_100008330(v15, v17, a4, a5);
  if (v6)
  {

    sub_100005A40(v15, v17);
LABEL_11:
    type metadata accessor for CustodianRecoveryKey();
    swift_deallocPartialClassInstance();
    return v7;
  }
  uint64_t v46 = v7;
  v47 = v18;
  uint64_t v45 = OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey;
  id v19 = objc_msgSend(objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey], "publicKey"), "spki");
  swift_unknownObjectRelease();
  uint64_t v20 = sub_100221BF0();
  unint64_t v22 = v21;

  id v23 = objc_msgSend(objc_msgSend(a1, "signingPublicKey"), "spki");
  swift_unknownObjectRelease();
  uint64_t v24 = sub_100221BF0();
  unint64_t v26 = v25;

  LOBYTE(v23) = sub_10003FE7C(v20, v22, v24, v26);
  sub_100005A40(v24, v26);
  sub_100005A40(v20, v22);
  if ((v23 & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v44 = OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_encryptionKey;
  id v27 = objc_msgSend(objc_msgSend(*(id *)&v47[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_encryptionKey], "publicKey"), "spki");
  swift_unknownObjectRelease();
  uint64_t v28 = sub_100221BF0();
  unint64_t v30 = v29;

  id v31 = objc_msgSend(objc_msgSend(a1, "encryptionPublicKey"), "spki");
  swift_unknownObjectRelease();
  uint64_t v32 = sub_100221BF0();
  unint64_t v34 = v33;

  LOBYTE(v31) = sub_10003FE7C(v28, v30, v32, v34);
  sub_100005A40(v32, v34);
  sub_100005A40(v28, v30);
  if ((v31 & 1) == 0)
  {
LABEL_10:
    sub_1000064EC();
    swift_allocError();
    swift_willThrow();

    sub_100005A40(v15, v17);
    uint64_t v7 = v46;
    goto LABEL_11;
  }
  *(void *)(v46 + 24) = a1;
  id v35 = a1;
  id v36 = [v35 peerID];
  uint64_t v37 = sub_100222270();
  uint64_t v39 = v38;

  id v40 = *(void **)&v47[v45];
  unsigned __int8 v41 = *(void **)&v47[v44];
  objc_allocWithZone((Class)type metadata accessor for OctagonSelfPeerKeys());
  v43 = sub_100043C0C(v37, v39, v40, v41);

  sub_100005A40(v15, v17);
  uint64_t v7 = v46;
  *(void *)(v46 + 16) = v43;
  return v7;
}

uint64_t type metadata accessor for CustodianRecoveryKey()
{
  return self;
}

uint64_t sub_100006484()
{
  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for InheritanceKey()
{
  return self;
}

unint64_t sub_1000064EC()
{
  unint64_t result = qword_1002993D0;
  if (!qword_1002993D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002993D0);
  }
  return result;
}

uint64_t sub_100006540()
{
  return 1;
}

Swift::Int sub_100006548()
{
  return sub_100222B20();
}

void sub_10000658C()
{
}

Swift::Int sub_1000065B4()
{
  return sub_100222B20();
}

uint64_t sub_1000065F4(uint64_t a1)
{
  unint64_t v2 = sub_100006698();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100006630(uint64_t a1)
{
  unint64_t v2 = sub_100006698();

  return Error<>._code.getter(a1, v2);
}

unint64_t sub_100006670()
{
  return 0xD000000000000024;
}

uint64_t sub_10000668C()
{
  return 9;
}

unint64_t sub_100006698()
{
  unint64_t result = qword_1002993D8;
  if (!qword_1002993D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002993D8);
  }
  return result;
}

void sub_1000066EC(void *a1, void *a2, uint64_t a3)
{
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      *(void *)&long long v16 = *a1;
      *((void *)&v16 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100006B70((int *)&v16, a2, a3);
      uint64_t v7 = v16;
      unint64_t v8 = *((void *)&v16 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v16 = *a1;
      *((void *)&v16 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v9 = *((void *)&v16 + 1);
      uint64_t v10 = *(void *)(v16 + 16);
      uint64_t v15 = *(void *)(v16 + 24);
      uint64_t v11 = sub_100221A30();
      if (!v11)
      {
        __break(1u);
        JUMPOUT(0x10000691CLL);
      }
      uint64_t v12 = v11;
      uint64_t v13 = sub_100221A60();
      uint64_t v14 = v10 - v13;
      if (__OFSUB__(v10, v13))
      {
        __break(1u);
LABEL_12:
        __break(1u);
      }
      if (__OFSUB__(v15, v10)) {
        goto LABEL_12;
      }
      sub_100221A50();
      sub_10000692C(a2, a3, v12 + v14);
      *a1 = v16;
      a1[1] = v9 | 0x8000000000000000;
      return;
    case 3uLL:
      *(void *)((char *)&v16 + 7) = 0;
      *(void *)&long long v16 = 0;
      sub_10000692C(a2, a3, (uint64_t)&v16);
      return;
    default:
      *(void *)&long long v16 = *a1;
      WORD4(v16) = v3;
      BYTE10(v16) = BYTE2(v3);
      BYTE11(v16) = BYTE3(v3);
      BYTE12(v16) = BYTE4(v3);
      BYTE13(v16) = BYTE5(v3);
      BYTE14(v16) = BYTE6(v3);
      sub_10000692C(a2, a3, (uint64_t)&v16);
      uint64_t v7 = v16;
      unint64_t v8 = DWORD2(v16) | ((unint64_t)BYTE12(v16) << 32) | ((unint64_t)BYTE13(v16) << 40) | ((unint64_t)BYTE14(v16) << 48);
LABEL_4:
      *a1 = v7;
      a1[1] = v8;
      return;
  }
}

void sub_10000692C(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      *(void *)&long long v11 = *a1;
      *((void *)&v11 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100006C24((int *)&v11, a2, a3);
      uint64_t v6 = v11;
      unint64_t v7 = *((void *)&v11 + 1) | 0x4000000000000000;
      goto LABEL_5;
    case 2uLL:
      *(void *)&long long v11 = *a1;
      *((void *)&v11 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v8 = *((void *)&v11 + 1);
      uint64_t v9 = *(void *)(v11 + 16);
      uint64_t v10 = *(void *)(v11 + 24);
      if (!sub_100221A30()) {
        goto LABEL_16;
      }
      if (__OFSUB__(v9, sub_100221A60()))
      {
        __break(1u);
      }
      else if (!__OFSUB__(v10, v9))
      {
        sub_100221A50();
        if (a3)
        {
          ccdigest();
          *a1 = v11;
          a1[1] = v8 | 0x8000000000000000;
          return;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x100006B60);
      }
      __break(1u);
      return;
    case 3uLL:
      *(void *)((char *)&v11 + 7) = 0;
      *(void *)&long long v11 = 0;
      if (!a3) {
        goto LABEL_18;
      }
      ccdigest();
      return;
    default:
      *(void *)&long long v11 = *a1;
      WORD4(v11) = v3;
      BYTE10(v11) = BYTE2(v3);
      BYTE11(v11) = BYTE3(v3);
      BYTE12(v11) = BYTE4(v3);
      BYTE13(v11) = BYTE5(v3);
      BYTE14(v11) = BYTE6(v3);
      if (!a3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      ccdigest();
      uint64_t v6 = v11;
      unint64_t v7 = DWORD2(v11) | ((unint64_t)BYTE12(v11) << 32) | ((unint64_t)BYTE13(v11) << 40) | ((unint64_t)BYTE14(v11) << 48);
LABEL_5:
      *a1 = v6;
      a1[1] = v7;
      return;
  }
}

void sub_100006B70(int *a1, void *a2, uint64_t a3)
{
  sub_100221BA0();
  uint64_t v6 = *a1;
  if (a1[1] < (int)v6)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = sub_100221A30();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_100221A60();
    uint64_t v10 = v6 - v9;
    if (!__OFSUB__(v6, v9))
    {
      sub_100221A50();
      sub_10000692C(a2, a3, v8 + v10);
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

void sub_100006C24(int *a1, uint64_t a2, uint64_t a3)
{
  sub_100221BA0();
  uint64_t v5 = *a1;
  if (a1[1] < (int)v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (!sub_100221A30())
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (__OFSUB__(v5, sub_100221A60()))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_100221A50();
  if (a3)
  {
    ccdigest();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100006CCC(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_100221A70();
      swift_allocObject();
      sub_100221A40();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_100221BC0();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_100006D6C(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_10000CA58(__src, &__src[a2]);
  }
  sub_100221A70();
  swift_allocObject();
  sub_100221A20();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_100221BC0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

id sub_100006E20(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = sub_1001BEF04(a1, a2);
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v10 = sub_100222330();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((a2 & 0x2000000000000000) != 0) {
      Swift::Int v10 = HIBYTE(a2) & 0xF;
    }
    else {
      Swift::Int v10 = a1 & 0xFFFFFFFFFFFFLL;
    }
  }
  uint64_t v11 = sub_100006D6C((unsigned char *)v9 + 32, v10);
  unint64_t v13 = v12;
  swift_release();
  id v14 = objc_allocWithZone((Class)type metadata accessor for RecoveryKeySet());
  sub_1000059E8(v11, v13);
  unint64_t v15 = a4;
  id v16 = v14;
  unint64_t v17 = sub_100008330(v11, v13, a3, v15);
  if (!v4)
  {
    id v18 = v17;
    id v19 = objc_allocWithZone((Class)type metadata accessor for RecoveryKey());
    id v16 = sub_100005AA8(v18);
  }
  sub_100005A40(v11, v13);
  return v16;
}

id sub_100006F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Class isa = sub_100221BD0().super.isa;
  id v10 = 0;
  id v6 = [v3 initWithData:isa specifier:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_100221B40();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_100007014(void *a1)
{
  id v3 = [a1 signingKeyData];
  uint64_t v4 = sub_100221BF0();
  unint64_t v6 = v5;

  uint64_t v7 = ccsha384_di();
  id v8 = objc_msgSend(self, "ccsha384_diSize");
  uint64_t v49 = sub_100006CCC((uint64_t)v8);
  unint64_t v50 = v9;
  uint64_t v47 = v4;
  unint64_t v48 = v6;
  sub_1000059E8(v4, v6);
  sub_1000066EC(&v49, &v47, v7);
  uint64_t v10 = v49;
  unint64_t v11 = v50;
  sub_1000059E8(v49, v50);
  uint64_t v12 = sub_100221BE0(0);
  id v14 = v13;
  sub_100005A40(v10, v11);
  sub_100005A40(v10, v11);
  sub_100005A40(v47, v48);
  uint64_t v49 = 2968402;
  unint64_t v50 = 0xE300000000000000;
  v52._countAndFlagsBits = v12;
  v52._object = v14;
  sub_100222310(v52);
  swift_bridgeObjectRelease();
  sub_100005A40(v4, v6);
  unint64_t v51 = v50;
  id v15 = [a1 signingKeyData];
  uint64_t v16 = sub_100221BF0();
  unint64_t v18 = v17;

  id v19 = objc_allocWithZone((Class)_SFECKeySpecifier);
  sub_1000059E8(v16, v18);
  id v20 = [v19 initWithCurve:4];
  id v21 = objc_allocWithZone((Class)_SFECPublicKey);
  id v22 = sub_100006F4C(v16, v18, (uint64_t)v20);

  sub_100005A40(v16, v18);
  if (v1)
  {
    sub_100005A40(v16, v18);
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v23 = [v22 encodeSubjectPublicKeyInfo];
    uint64_t v46 = sub_100221BF0();
    unint64_t v25 = v24;

    sub_100005A40(v16, v18);
    id v26 = [a1 encryptionKeyData];
    uint64_t v27 = sub_100221BF0();
    unint64_t v29 = v28;

    id v30 = objc_allocWithZone((Class)_SFECKeySpecifier);
    sub_1000059E8(v27, v29);
    id v31 = [v30 initWithCurve:4];
    id v32 = objc_allocWithZone((Class)_SFECPublicKey);
    id v33 = sub_100006F4C(v27, v29, (uint64_t)v31);

    sub_100005A40(v27, v29);
    unint64_t v45 = v25;
    id v35 = [v33 encodeSubjectPublicKeyInfo];
    uint64_t v43 = sub_100221BF0();
    unint64_t v44 = v36;

    sub_100005A40(v27, v29);
    id v37 = objc_allocWithZone((Class)TrustedPeersHelperPeer);
    swift_bridgeObjectRetain();
    NSString v38 = sub_100222260();
    swift_bridgeObjectRelease();
    Class isa = sub_100221BD0().super.isa;
    Class v40 = sub_100221BD0().super.isa;
    Class v41 = sub_100222420().super.isa;
    swift_bridgeObjectRelease();
    id v42 = [v37 initWithPeerID:v38 signingSPKI:isa encryptionSPKI:v40 secureElementIdentity:0 viewList:v41];
    sub_100005A40(v43, v44);
    sub_100005A40(v46, v45);

    return (uint64_t)v42;
  }
}

id sub_100007424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = v5;
  Class isa = sub_100221CE0().super.isa;
  id v21 = 0;
  id v13 = [v6 initWithUUID:isa signingPublicKey:a2 encryptionPublicKey:a3 signingKeyPair:a4 kind:a5 error:&v21];

  id v14 = v21;
  if (v13)
  {
    uint64_t v15 = sub_100221D00();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    id v17 = v14;
    v16(a1, v15);
  }
  else
  {
    id v18 = v21;
    sub_100221B40();

    swift_willThrow();
    uint64_t v19 = sub_100221D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
  }
  return v13;
}

uint64_t sub_100007590(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  int v29 = a6;
  uint64_t v30 = a1;
  uint64_t v11 = sub_100221D00();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001BEF04(a2, a3);
  if ((a3 & 0x1000000000000000) != 0)
  {
    Swift::Int v17 = sub_100222330();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((a3 & 0x2000000000000000) != 0) {
      Swift::Int v17 = HIBYTE(a3) & 0xF;
    }
    else {
      Swift::Int v17 = a2 & 0xFFFFFFFFFFFFLL;
    }
  }
  uint64_t v18 = sub_100006D6C((unsigned char *)v16 + 32, v17);
  unint64_t v20 = v19;
  swift_release();
  id v21 = objc_allocWithZone((Class)type metadata accessor for RecoveryKeySet());
  sub_1000059E8(v18, v20);
  unint64_t v22 = a5;
  uint64_t v23 = (uint64_t)v21;
  unint64_t v24 = sub_100008330(v18, v20, a4, v22);
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v30, v11);
  }
  else
  {
    unint64_t v25 = v24;
    uint64_t v26 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v30, v11);
    type metadata accessor for CustodianRecoveryKey();
    uint64_t v23 = swift_allocObject();
    sub_100005D78((uint64_t)v15, v25, v29);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v26, v11);
  }
  sub_100005A40(v18, v20);
  return v23;
}

void *sub_1000077C4()
{
  uint64_t v0 = sub_100222270();
  uint64_t v2 = v1;
  uint64_t v7 = &type metadata for String;
  *(void *)&long long v6 = 0xD000000000000045;
  *((void *)&v6 + 1) = 0x8000000100232490;
  sub_100005A98(&v6, v5);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10018A6E4(v5, v0, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return &_swiftEmptyDictionarySingleton;
}

uint64_t getEnumTagSinglePayload for RecoveryKey.Error(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for RecoveryKey.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100007974);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecoveryKey.Error()
{
  return &type metadata for RecoveryKey.Error;
}

unint64_t sub_1000079B4()
{
  unint64_t result = qword_1002993E0;
  if (!qword_1002993E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002993E0);
  }
  return result;
}

id sub_100007C78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PolicyRedactionCrypter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PolicyRedactionCrypter()
{
  return self;
}

id sub_100007CD0(void *a1, uint64_t a2, void *a3)
{
  long long v6 = self;
  id v7 = objc_msgSend(objc_allocWithZone((Class)_SFAESKeySpecifier), "initWithBitSize:", objc_msgSend(v6, "aes256BitSize"));
  id v8 = [objc_allocWithZone((Class)_SFAuthenticatedEncryptionOperation) initWithKeySpecifier:v7];

  sub_1000059E8(a2, (unint64_t)a3);
  id v9 = objc_msgSend(objc_allocWithZone((Class)_SFAESKeySpecifier), "initWithBitSize:", objc_msgSend(v6, "aes256BitSize"));
  id v10 = objc_allocWithZone((Class)_SFAESKey);
  id v11 = sub_100006F4C(a2, (uint64_t)a3, (uint64_t)v9);

  sub_100005A40(a2, (unint64_t)a3);
  if (v3) {
    goto LABEL_2;
  }
  id result = [a1 ciphertext];
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = result;
  uint64_t v14 = sub_100221BF0();
  unint64_t v16 = v15;

  id result = [a1 authenticationCode];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  Swift::Int v17 = result;
  id v32 = v11;
  id v33 = v8;
  uint64_t v18 = sub_100221BF0();
  unint64_t v20 = v19;

  id result = [a1 initializationVector];
  if (result)
  {
    id v21 = result;
    uint64_t v22 = sub_100221BF0();
    unint64_t v24 = v23;

    id v25 = objc_allocWithZone((Class)_SFAuthenticatedCiphertext);
    Class isa = sub_100221BD0().super.isa;
    id v35 = (id)v14;
    Class v27 = sub_100221BD0().super.isa;
    Class v28 = sub_100221BD0().super.isa;
    id v29 = [v25 initWithCiphertext:isa authenticationCode:v27 initializationVector:v28];
    sub_100005A40(v22, v24);
    sub_100005A40(v18, v20);
    sub_100005A40((uint64_t)v35, v16);

    id v36 = 0;
    id v8 = v33;
    id v30 = [v33 decrypt:v29 withKey:v32 error:&v36];
    id v31 = v36;
    if (v30)
    {
      a3 = (void *)sub_100221BF0();

      return a3;
    }
    a3 = v31;
    sub_100221B40();

    swift_willThrow();
LABEL_2:

    return a3;
  }
LABEL_12:
  __break(1u);
  return result;
}

char **sub_100007FFC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v7 = self;
  id v8 = &selRef_setAllSelves_;
  id v9 = objc_msgSend(objc_allocWithZone((Class)_SFAESKeySpecifier), "initWithBitSize:", objc_msgSend(v7, "aes256BitSize"));
  id v10 = [objc_allocWithZone((Class)_SFAuthenticatedEncryptionOperation) initWithKeySpecifier:v9];

  sub_1000059E8(a3, a4);
  id v11 = objc_msgSend(objc_allocWithZone((Class)_SFAESKeySpecifier), "initWithBitSize:", objc_msgSend(v7, "aes256BitSize"));
  id v12 = objc_allocWithZone((Class)_SFAESKey);
  id v13 = sub_100006F4C(a3, a4, (uint64_t)v11);

  sub_100005A40(a3, a4);
  if (v4) {
    goto LABEL_2;
  }
  Class isa = sub_100221BD0().super.isa;
  id v35 = 0;
  id v15 = [v10 encrypt:isa withKey:v13 additionalAuthenticatedData:0 error:&v35];

  id v8 = v35;
  if (!v15)
  {
    unint64_t v34 = v35;
    sub_100221B40();

    swift_willThrow();
LABEL_2:

    return v8;
  }
  id v16 = objc_allocWithZone((Class)TPPBPolicyRedactionAuthenticatedCiphertext);
  Swift::Int v17 = v8;
  id result = (char **)[v16 init];
  if (result)
  {
    id v8 = result;
    id v19 = [v15 ciphertext];
    uint64_t v20 = sub_100221BF0();
    unint64_t v22 = v21;

    Class v23 = sub_100221BD0().super.isa;
    sub_100005A40(v20, v22);
    [v8 setCiphertext:v23];

    id v24 = [v15 authenticationCode];
    uint64_t v25 = sub_100221BF0();
    unint64_t v27 = v26;

    Class v28 = sub_100221BD0().super.isa;
    sub_100005A40(v25, v27);
    [v8 setAuthenticationCode:v28];

    id v29 = [v15 initializationVector];
    uint64_t v30 = sub_100221BF0();
    unint64_t v32 = v31;

    Class v33 = sub_100221BD0().super.isa;
    sub_100005A40(v30, v32);
    [v8 setInitializationVector:v33];

    return v8;
  }
  __break(1u);
  return result;
}

char *sub_100008330(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v10 = v4;
  uint64_t v11 = sub_10000CC1C(1, a1, a2, a3, a4);
  if (v5)
  {
    sub_100005A40(a1, a2);

    swift_bridgeObjectRelease();
    type metadata accessor for RecoveryKeySet();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v13 = v11;
    unint64_t v14 = v12;
    SecKeyRef v15 = sub_10000CED0();
    unint64_t v54 = v14;
    id v16 = [objc_allocWithZone((Class)_SFECKeyPair) initWithSecKey:v15];

    uint64_t v17 = OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_encryptionKey;
    *(void *)&v10[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_encryptionKey] = v16;
    uint64_t v18 = sub_10000CC1C(0, a1, a2, a3, a4);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v21 = v18;
    SecKeyRef v23 = sub_10000CED0();
    uint64_t v46 = v21;
    unint64_t v47 = v20;
    id v24 = [objc_allocWithZone((Class)_SFECKeyPair) initWithSecKey:v23];

    uint64_t v45 = OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey;
    *(void *)&v10[OBJC_IVAR____TtC18TrustedPeersHelper14RecoveryKeySet_signingKey] = v24;
    id v25 = objc_msgSend(objc_msgSend(v24, "publicKey"), "spki");
    swift_unknownObjectRelease();
    uint64_t v26 = sub_100221BF0();
    unint64_t v28 = v27;

    uint64_t v29 = ccsha384_di();
    id v30 = objc_msgSend(self, "ccsha384_diSize");
    uint64_t v52 = sub_100006CCC((uint64_t)v30);
    unint64_t v53 = v31;
    uint64_t v50 = v26;
    unint64_t v51 = v28;
    unint64_t v44 = v28;
    sub_1000059E8(v26, v28);
    sub_1000066EC(&v52, &v50, v29);
    uint64_t v32 = v52;
    unint64_t v33 = v53;
    sub_1000059E8(v52, v53);
    uint64_t v48 = sub_100221BE0(0);
    uint64_t v35 = v34;
    sub_100005A40(v32, v33);
    sub_100005A40(v32, v33);
    sub_100005A40(v50, v51);
    sub_100005A40(v26, v44);
    id v36 = [*(id *)&v10[v45] keyData];
    uint64_t v37 = sub_100221BF0();
    unint64_t v39 = v38;

    sub_10000D248(v37, v39, v48, v35);
    sub_100005A40(v37, v39);
    id v40 = [*(id *)&v10[v17] keyData];
    uint64_t v41 = sub_100221BF0();
    unint64_t v43 = v42;

    sub_10000D4EC(v41, v43, v48, v35);
    sub_100005A40(v41, v43);
    swift_bridgeObjectRelease();
    sub_100005A40(v46, v47);
    sub_100005A40(v13, v54);
    v49.receiver = v10;
    v49.super_class = (Class)type metadata accessor for RecoveryKeySet();
    id v10 = (char *)objc_msgSendSuper2(&v49, "init");
    sub_100005A40(a1, a2);
  }
  return v10;
}

uint64_t sub_1000087BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, _DWORD *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  char v12 = a9 & 1;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3) {
        __break(1u);
      }
      swift_retain();
      sub_10000C8D8((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, a5, a6, a1, a2, a7, a8, v12, a10, a11, a12);
      uint64_t result = sub_100005A40(a3, a4);
      break;
    case 2uLL:
      uint64_t v20 = a4 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v25 = *(void *)(a3 + 24);
      uint64_t v27 = *(void *)(a3 + 16);
      swift_retain();
      swift_retain();
      sub_10000C8D8(v27, v25, v20, a5, a6, a1, a2, a7, a8, v12, a10, a11, a12);
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      memset(v34, 0, 14);
      SecKeyRef v23 = a12;
      uint64_t v17 = (char *)v34;
      goto LABEL_7;
    default:
      v34[0] = a3;
      LOWORD(v34[1]) = a4;
      BYTE2(v34[1]) = BYTE2(a4);
      BYTE3(v34[1]) = BYTE3(a4);
      BYTE4(v34[1]) = BYTE4(a4);
      BYTE5(v34[1]) = BYTE5(a4);
      uint64_t v17 = (char *)v34 + BYTE6(a4);
      SecKeyRef v23 = a12;
LABEL_7:
      uint64_t result = sub_100008A3C((uint64_t)v34, (uint64_t)v17, a5, a6, a1, a2, a7, a8, v12, a10, a11, v23);
      break;
  }
  return result;
}

uint64_t sub_100008A3C(uint64_t a1, uint64_t a2, uint64_t *a3, _DWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v13 = *a3;
  unint64_t v12 = a3[1];
  switch(v12 >> 62)
  {
    case 1uLL:
      if (v13 >> 32 < (int)v13) {
        __break(1u);
      }
      uint64_t v17 = a7;
      sub_1000059E8(v13, v12);
      sub_10000C7CC((int)v13, v13 >> 32, v12 & 0x3FFFFFFFFFFFFFFFLL, a4, a5, a6, a1, a2, v17, a8, a9 & 1, a10, a11, a12);
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(v13 + 24);
      uint64_t v23 = *(void *)(v13 + 16);
      uint64_t v18 = a7;
      sub_1000059E8(v13, v12);
      swift_retain();
      swift_retain();
      sub_10000C7CC(v23, v22, v12 & 0x3FFFFFFFFFFFFFFFLL, a4, a5, a6, a1, a2, v18, a8, a9 & 1, a10, a11, a12);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v35, 0, 14);
      uint64_t v21 = a12;
      id v16 = (char *)v35;
      goto LABEL_7;
    default:
      v35[0] = *a3;
      LOWORD(v35[1]) = v12;
      BYTE2(v35[1]) = BYTE2(v12);
      BYTE3(v35[1]) = BYTE3(v12);
      BYTE4(v35[1]) = BYTE4(v12);
      BYTE5(v35[1]) = BYTE5(v12);
      id v16 = (char *)v35 + BYTE6(v12);
      uint64_t v21 = a12;
LABEL_7:
      LOBYTE(v20) = a9 & 1;
      sub_100008CD4((uint64_t)v35, (uint64_t)v16, a4, a5, a6, a1, a2, a7, a8, v20, a10, a11, v21);
      break;
  }
  return sub_100005A40(v13, v12);
}

uint64_t sub_100008CD4(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  uint64_t result = ccsha384_di();
  if (!a4)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (!a6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!a1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!a8)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  LODWORD(result) = cchkdf();
  *a3 = result;
  if (result)
  {
LABEL_8:
    uint64_t v19 = result;
    sub_10000A00C();
    swift_allocError();
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = 0;
    *(unsigned char *)(v20 + 16) = 2;
    return swift_willThrow();
  }
  uint64_t result = ccrng();
  if (!result) {
    goto LABEL_15;
  }
  uint64_t result = ccec_generate_key_deterministic();
  *a3 = result;
  if (result) {
    goto LABEL_8;
  }
  if (a12)
  {
    unint64_t v21 = sub_10000D894();
    uint64_t v27 = sub_100006CCC(v21);
    unint64_t v28 = v22;
    sub_10000C2E8(&v27);
    uint64_t v23 = sub_100008E54(v27, v28);
    uint64_t v24 = *a13;
    unint64_t v25 = a13[1];
    *a13 = v23;
    a13[1] = v26;
    return sub_100005A40(v24, v25);
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100008E54(uint64_t a1, unint64_t a2)
{
  v28[3] = &type metadata for Data;
  v28[4] = &protocol witness table for Data;
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v4 = sub_1000059A4(v28, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_1000059E8(a1, a2);
      sub_1000059E8(v5, v6);
      id v8 = (unsigned char *)sub_100221A30();
      if (v8)
      {
        uint64_t v9 = sub_100221A60();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = sub_100221A50();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      unint64_t v12 = &v8[v11];
      if (v8) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      sub_10000C9E0(v8, v13, &v27);
      sub_100005A40(v5, v6);
LABEL_27:
      sub_100005A40(a1, a2);
      uint64_t v24 = v27;
      sub_100004788((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_1000059E8(a1, a2);
      swift_retain();
      swift_retain();
      id v16 = (unsigned char *)sub_100221A30();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = sub_100221A60();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = sub_100221A50();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      unint64_t v22 = &v16[v21];
      if (v16) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 0;
      }
      sub_10000C9E0(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_1000059E8(a1, a2);
      id v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_1000059E8(a1, a2);
      id v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_10000C9E0(v26, v7, &v27);
      goto LABEL_27;
  }
}

unint64_t sub_100009108(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC((uint64_t *)&unk_10029EB40);
  objc_super v2 = (void *)sub_1002229C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 64);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 4);
    uint64_t v6 = (uint64_t)*(v4 - 3);
    uint64_t v7 = (uint64_t)*(v4 - 2);
    uint64_t v8 = (uint64_t)*(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v10 = v9;
    unint64_t result = sub_10000A9D4(v5, v6, v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 32 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    *(void *)(v2[7] + 8 * result) = v10;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000924C(uint64_t a1)
{
  return sub_100009760(a1, &qword_1002995A0, (uint64_t (*)(id))sub_10000AA94);
}

unint64_t sub_10000926C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_100299588);
  uint64_t v2 = sub_1002229C0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000D830(v6, (uint64_t)&v13, &qword_100299590);
    uint64_t v7 = v13;
    unint64_t result = sub_10000AA94(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_100005A98(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000939C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_100299530);
  uint64_t v2 = sub_1002229C0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000D830(v6, (uint64_t)&v15, &qword_100299538);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10000AB48(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100005A98(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000094D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_1002995A8);
  uint64_t v2 = (void *)sub_1002229C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1000059E8(v7, v8);
    unint64_t result = sub_10000AB48(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000095FC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_100299540);
  uint64_t v2 = sub_1002229C0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000D830(v6, (uint64_t)v15, &qword_100299548);
    unint64_t result = sub_10000ABC0((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100005A98(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100009740(uint64_t a1)
{
  return sub_100009760(a1, &qword_10029EDD0, (uint64_t (*)(id))sub_10000AC04);
}

unint64_t sub_100009760(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(a2);
  uint64_t v5 = (void *)sub_1002229C0();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    char v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    _OWORD v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100009878(uint64_t a1)
{
  return sub_100009CD0(a1, (uint64_t *)&unk_10029EE70);
}

unint64_t sub_100009884(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_1002995B0);
  uint64_t v2 = (void *)sub_1002229C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10000AB48(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    *id v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000099A0(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299558);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_100299560);
  uint64_t v7 = sub_1002229C0();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10000D830(v13, (uint64_t)v6, &qword_100299558);
    unint64_t result = sub_10000AC48((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_100221B80();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100009B94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_10029F090);
  uint64_t v2 = (void *)sub_1002229C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10000AB48(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100009CB8(uint64_t a1)
{
  return sub_100009CD0(a1, &qword_1002995B8);
}

unint64_t sub_100009CC4(uint64_t a1)
{
  return sub_100009CD0(a1, (uint64_t *)&unk_10029ECB0);
}

unint64_t sub_100009CD0(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(a2);
  uint64_t v3 = (void *)sub_1002229C0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_10000AB48(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100009DE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000046DC(&qword_100299568);
  uint64_t v2 = (void *)sub_1002229C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000D830(v4, (uint64_t)&v16, &qword_100299570);
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    unint64_t result = sub_10000AB48(v16, v17);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v9 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v9 = v5;
    v9[1] = v6;
    uint64_t v10 = v2[7] + 40 * result;
    long long v11 = v18;
    long long v12 = v19;
    *(void *)(v10 + 32) = v20;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_100009F64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecoveryKeySet();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RecoveryKeySet()
{
  return self;
}

unint64_t sub_10000A00C()
{
  unint64_t result = qword_100299518;
  if (!qword_100299518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100299518);
  }
  return result;
}

uint64_t sub_10000A060(uint64_t a1)
{
  unint64_t v2 = sub_10000A5A0();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000A09C(uint64_t a1)
{
  unint64_t v2 = sub_10000A5A0();

  return Error<>._code.getter(a1, v2);
}

unint64_t sub_10000A0D8(uint64_t a1, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_100222840(23);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000015;
      v10._countAndFlagsBits = a1;
      v10._object = (void *)a2;
      sub_100222310(v10);
      return v8;
    case 2:
      sub_100222840(31);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000001DLL;
      goto LABEL_4;
    case 3:
      if (a1 ^ 1 | a2) {
        unint64_t v6 = 0xD00000000000001DLL;
      }
      else {
        unint64_t v6 = 0xD000000000000013;
      }
      if (a1 | a2) {
        return v6;
      }
      else {
        return 0xD000000000000015;
      }
    default:
      sub_100222840(35);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000021;
LABEL_4:
      unint64_t v8 = v5;
      v9._countAndFlagsBits = sub_100222A00();
      sub_100222310(v9);
      swift_bridgeObjectRelease();
      return v8;
  }
}

unint64_t sub_10000A298()
{
  return sub_10000A0D8(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_10000A2B0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = sub_10000939C((uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v7 = sub_10000A0D8(a1, a2, a3);
  if (v8)
  {
    unint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = sub_100222270();
    uint64_t v13 = v12;
    uint64_t v29 = &type metadata for String;
    *(void *)&long long v28 = v9;
    *((void *)&v28 + 1) = v10;
    sub_100005A98(&v28, v27);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10018A6E4(v27, v11, v13, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a3 == 2)
  {
    uint64_t v15 = sub_100222270();
    uint64_t v17 = v21;
    id v22 = objc_allocWithZone((Class)NSError);
    NSString v23 = sub_100222260();
    id v24 = [v22 initWithDomain:v23 code:(int)a1 userInfo:0];

    uint64_t v29 = (void *)sub_1000047D8(0, (unint64_t *)&qword_100299528);
    *(void *)&long long v28 = v24;
    goto LABEL_7;
  }
  if (!a3)
  {
    uint64_t v15 = sub_100222270();
    uint64_t v17 = v16;
    sub_100222270();
    id v18 = objc_allocWithZone((Class)NSError);
    NSString v19 = sub_100222260();
    swift_bridgeObjectRelease();
    id v20 = [v18 initWithDomain:v19 code:(int)a1 userInfo:0];

    uint64_t v29 = (void *)sub_1000047D8(0, (unint64_t *)&qword_100299528);
    *(void *)&long long v28 = v20;
LABEL_7:
    sub_100005A98(&v28, v27);
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_10018A6E4(v27, v15, v17, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_10000A51C()
{
  return 0xD000000000000033;
}

uint64_t sub_10000A538()
{
  uint64_t result = 3;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t result = 4;
      break;
    case 2:
      uint64_t result = 5;
      break;
    case 3:
      uint64_t result = qword_100229648[*(void *)v0];
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10000A594()
{
  return sub_10000A2B0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

unint64_t sub_10000A5A0()
{
  unint64_t result = qword_100299520;
  if (!qword_100299520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100299520);
  }
  return result;
}

double sub_10000A5F4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10000AA94(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10018B9CC();
      uint64_t v9 = v11;
    }

    sub_100005A98((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_10000ACE0(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_10000A6EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10000AB48(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10018BB94();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_100005A98((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_10000AF04(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_10000A7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10000AB48(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10018C1E0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_10000B0DC(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_10000A8D8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10000ABC0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10018C39C();
      uint64_t v9 = v11;
    }
    sub_10000B8E4(*(void *)(v9 + 48) + 40 * v6);
    sub_100005A98((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_10000B2B4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_10000A9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100222B00();
  swift_bridgeObjectRetain();
  sub_1002222E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1002222E0();
  swift_bridgeObjectRelease();
  Swift::Int v8 = sub_100222B20();

  return sub_10000B480(a1, a2, a3, a4, v8);
}

unint64_t sub_10000AA94(uint64_t a1)
{
  sub_100222B00();
  type metadata accessor for CFString(0);
  sub_10000D7E8(&qword_10029EEF0, type metadata accessor for CFString);
  sub_100221D70();
  Swift::Int v2 = sub_100222B20();

  return sub_10000B580(a1, v2);
}

unint64_t sub_10000AB48(uint64_t a1, uint64_t a2)
{
  sub_100222B00();
  sub_1002222E0();
  Swift::Int v4 = sub_100222B20();

  return sub_10000B6DC(a1, a2, v4);
}

unint64_t sub_10000ABC0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1002227D0(*(void *)(v2 + 40));

  return sub_10000B7C0(a1, v4);
}

unint64_t sub_10000AC04(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_100222640(*(void *)(v2 + 40));

  return sub_10000B938(a1, v4);
}

unint64_t sub_10000AC48(uint64_t a1)
{
  sub_100221B80();
  sub_10000D7E8((unint64_t *)&unk_10029EC50, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v2 = sub_1002221F0();

  return sub_10000BA54(a1, v2);
}

void sub_10000ACE0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1002226D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v11 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_100222B00();
        type metadata accessor for CFString(0);
        sub_10000D7E8(&qword_10029EEF0, type metadata accessor for CFString);
        id v12 = v11;
        sub_100221D70();
        Swift::Int v13 = sub_100222B20();

        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(a2 + 48);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            void *v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          NSString v19 = (_OWORD *)(v18 + 32 * v3);
          id v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 2))
          {
            long long v10 = v20[1];
            *NSString v19 = *v20;
            v19[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10000AF04(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1002226D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100222B00();
        swift_bridgeObjectRetain();
        sub_1002222E0();
        Swift::Int v10 = sub_100222B20();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10000B0DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1002226D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100222B00();
        swift_bridgeObjectRetain();
        sub_1002222E0();
        Swift::Int v9 = sub_100222B20();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10000B2B4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1002226D0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10000B888(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        Swift::Int v10 = sub_1002227D0(*(void *)(a2 + 40));
        double result = sub_10000B8E4((uint64_t)v28);
        Swift::Int v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            BOOL v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10000B480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      unint64_t v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_100222A30() & 1) != 0)
      {
        BOOL v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_100222A30() & 1) != 0) {
          break;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_10000B580(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_10000D7E8(&qword_10029EEF0, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_100221D60();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_100221D60();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10000B6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_100222A30() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_100222A30() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10000B7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10000B888(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1002227E0();
      sub_10000B8E4((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10000B888(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10000B8E4(uint64_t a1)
{
  return a1;
}

unint64_t sub_10000B938(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1000047D8(0, (unint64_t *)&qword_10029EDB0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_100222650();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_100222650();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10000BA54(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_100221B80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4);
      sub_10000D7E8(&qword_100299550, (void (*)(uint64_t))&type metadata accessor for URL);
      char v16 = sub_100222250();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_10000BC14(void *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t *a5, _DWORD *a6, char a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  char v10 = a7 & 1;
  unint64_t v11 = a1[1];
  switch(v11 >> 62)
  {
    case 1uLL:
      *(void *)&long long v43 = *a1;
      *((void *)&v43 + 1) = v11 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1000059E8(a3, a4);
      sub_10000C5B8((int *)&v43, a2, a3, a4, a5, a6, v10, a8, a9, a10);
      uint64_t result = sub_100005A40(a3, a4);
      uint64_t v26 = *((void *)&v43 + 1) | 0x4000000000000000;
      *a1 = v43;
      a1[1] = v26;
      return result;
    case 2uLL:
      char v38 = a7 & 1;
      *(void *)&long long v43 = *a1;
      *((void *)&v43 + 1) = v11 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1000059E8(a3, a4);
      sub_100221B90();
      uint64_t v27 = *(void *)(v43 + 16);
      uint64_t v42 = *(void *)(v43 + 24);
      uint64_t v28 = sub_100221A30();
      if (!v28)
      {
        sub_100005A40(a3, a4);
        __break(1u);
        JUMPOUT(0x10000BF98);
      }
      uint64_t v29 = v28;
      uint64_t v30 = sub_100221A60();
      uint64_t v31 = v27 - v30;
      if (__OFSUB__(v27, v30))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v32 = __OFSUB__(v42, v27);
      uint64_t v33 = v42 - v27;
      if (v32) {
        goto LABEL_15;
      }
      uint64_t v34 = sub_100221A50();
      if (v34 >= v33) {
        uint64_t v35 = v33;
      }
      else {
        uint64_t v35 = v34;
      }
      sub_10000BFA8(a2, a3, a4, a5, a6, v29 + v31, v29 + v31 + v35, v38, a8, a9, a10);
      uint64_t result = sub_100005A40(a3, a4);
      unint64_t v25 = *((void *)&v43 + 1) | 0x8000000000000000;
      *a1 = v43;
LABEL_11:
      a1[1] = v25;
      return result;
    case 3uLL:
      *(void *)((char *)&v43 + 7) = 0;
      *(void *)&long long v43 = 0;
      sub_1000059E8(a3, a4);
      sub_10000BFA8(a2, a3, a4, a5, a6, (uint64_t)&v43, (uint64_t)&v43, v10, a8, a9, a10);
      return sub_100005A40(a3, a4);
    default:
      *(void *)&long long v43 = *a1;
      WORD4(v43) = v11;
      BYTE10(v43) = BYTE2(v11);
      BYTE11(v43) = BYTE3(v11);
      BYTE12(v43) = BYTE4(v11);
      BYTE13(v43) = BYTE5(v11);
      BYTE14(v43) = BYTE6(v11);
      uint64_t v41 = (char *)&v43 + BYTE6(v11);
      sub_1000059E8(a3, a4);
      sub_10000BFA8(a2, a3, a4, a5, a6, (uint64_t)&v43, (uint64_t)v41, v10, a8, a9, a10);
      uint64_t v19 = v43;
      uint64_t v20 = DWORD2(v43);
      uint64_t v21 = BYTE12(v43);
      uint64_t v22 = BYTE13(v43);
      uint64_t v23 = BYTE14(v43);
      uint64_t result = sub_100005A40(a3, a4);
      unint64_t v25 = v20 | (v21 << 32) | (v22 << 40) | (v23 << 48);
      *a1 = v19;
      goto LABEL_11;
  }
}

uint64_t sub_10000BFA8(void *a1, uint64_t a2, unint64_t a3, uint64_t *a4, _DWORD *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  char v11 = a8 & 1;
  unint64_t v12 = a1[1];
  switch(v12 >> 62)
  {
    case 1uLL:
      *(void *)&long long v41 = *a1;
      *((void *)&v41 + 1) = v12 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1000059E8(a2, a3);
      sub_10000C6BC((int *)&v41, a2, a3, a4, a5, a6, a7, v11, a9, a10, a11);
      uint64_t result = sub_100005A40(a2, a3);
      uint64_t v25 = *((void *)&v41 + 1) | 0x4000000000000000;
      *a1 = v41;
      a1[1] = v25;
      return result;
    case 2uLL:
      *(void *)&long long v41 = *a1;
      *((void *)&v41 + 1) = v12 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v26 = *((void *)&v41 + 1);
      uint64_t v27 = *(void *)(v41 + 16);
      uint64_t v38 = *(void *)(v41 + 24);
      uint64_t v28 = sub_100221A30();
      if (!v28)
      {
        __break(1u);
        JUMPOUT(0x10000C2D8);
      }
      uint64_t v29 = v28;
      uint64_t v30 = sub_100221A60();
      uint64_t v31 = v27 - v30;
      if (__OFSUB__(v27, v30))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v32 = __OFSUB__(v38, v27);
      uint64_t v33 = v38 - v27;
      if (v32) {
        goto LABEL_14;
      }
      uint64_t v34 = sub_100221A50();
      if (v34 >= v33) {
        uint64_t v35 = v33;
      }
      else {
        uint64_t v35 = v34;
      }
      sub_1000087BC(v29 + v31, v29 + v31 + v35, a2, a3, a4, a5, a6, a7, v11, a9, a10, a11);
      uint64_t result = sub_100005A40(a2, a3);
      *a1 = v41;
      a1[1] = v26 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v41 + 7) = 0;
      *(void *)&long long v41 = 0;
      sub_1000087BC((uint64_t)&v41, (uint64_t)&v41, a2, a3, a4, a5, a6, a7, v11, a9, a10, a11);
      return sub_100005A40(a2, a3);
    default:
      *(void *)&long long v41 = *a1;
      WORD4(v41) = v12;
      BYTE10(v41) = BYTE2(v12);
      BYTE11(v41) = BYTE3(v12);
      BYTE12(v41) = BYTE4(v12);
      BYTE13(v41) = BYTE5(v12);
      BYTE14(v41) = BYTE6(v12);
      sub_1000087BC((uint64_t)&v41, (uint64_t)&v41 + BYTE6(v12), a2, a3, a4, a5, a6, a7, v11, a9, a10, a11);
      uint64_t v17 = v41;
      uint64_t v18 = DWORD2(v41);
      uint64_t v19 = BYTE12(v41);
      uint64_t v20 = BYTE13(v41);
      uint64_t v21 = BYTE14(v41);
      uint64_t result = sub_100005A40(a2, a3);
      *a1 = v17;
      a1[1] = v18 | (v19 << 32) | (v20 << 40) | (v21 << 48);
      return result;
  }
}

uint64_t sub_10000C2E8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v6 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_13;
      }
      if (v6 < (int)v2) {
        goto LABEL_21;
      }
      if (sub_100221A30() && __OFSUB__((int)v2, sub_100221A60())) {
        goto LABEL_22;
      }
      sub_100221A70();
      swift_allocObject();
      uint64_t v8 = sub_100221A10();
      swift_release();
      uint64_t v5 = v8;
LABEL_13:
      if (v6 < (int)v2) {
        goto LABEL_19;
      }
      if (!sub_100221A30()) {
        goto LABEL_24;
      }
      if (__OFSUB__((int)v2, sub_100221A60())) {
        goto LABEL_20;
      }
      sub_100221A50();
      uint64_t result = ccec_x963_export();
      *a1 = v2;
      a1[1] = v5 | 0x4000000000000000;
      break;
    case 2uLL:
      uint64_t v9 = *a1;
      uint64_t v11 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v7 = *(void *)(v9 + 16);
      if (!sub_100221A30())
      {
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x10000C5A8);
      }
      if (__OFSUB__(v7, sub_100221A60()))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
      }
      sub_100221A50();
      uint64_t result = ccec_x963_export();
      *a1 = v9;
      a1[1] = v11 | 0x8000000000000000;
      break;
    case 3uLL:
      return ccec_x963_export();
    default:
      LOWORD(v10) = a1[1];
      BYTE2(v10) = BYTE2(a1[1]);
      HIBYTE(v10) = BYTE3(a1[1]);
      __int16 v12 = WORD2(a1[1]);
      unsigned __int8 v13 = BYTE6(a1[1]);
      uint64_t result = ccec_x963_export();
      *a1 = v2;
      a1[1] = v10 | ((unint64_t)v12 << 32) | ((unint64_t)HIBYTE(v12) << 40) | ((unint64_t)v13 << 48);
      return result;
  }
  return result;
}

void sub_10000C5B8(int *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t *a5, _DWORD *a6, char a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  sub_100221BA0();
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  if ((int)v17 < (int)v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v25 = a3;
  uint64_t v26 = a8;
  uint64_t v18 = sub_100221A30();
  if (!v18)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v19 = v18;
  uint64_t v20 = sub_100221A60();
  uint64_t v21 = v16 - v20;
  if (__OFSUB__(v16, v20))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  char v28 = a7 & 1;
  uint64_t v22 = v17 - v16;
  uint64_t v23 = sub_100221A50();
  if (v23 >= v22) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v23;
  }
  sub_10000BFA8(a2, v25, a4, a5, a6, v19 + v21, v19 + v21 + v24, v28, v26, a9, a10);
}

void sub_10000C6BC(int *a1, uint64_t a2, unint64_t a3, uint64_t *a4, _DWORD *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  sub_100221BA0();
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  if ((int)v18 < (int)v17)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v19 = sub_100221A30();
  if (!v19)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v20 = v19;
  uint64_t v21 = sub_100221A60();
  uint64_t v22 = v17 - v21;
  if (__OFSUB__(v17, v21))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  char v23 = a8 & 1;
  uint64_t v24 = v18 - v17;
  uint64_t v25 = sub_100221A50();
  if (v25 >= v24) {
    uint64_t v26 = v24;
  }
  else {
    uint64_t v26 = v25;
  }
  sub_1000087BC(v20 + v22, v20 + v22 + v26, a2, a3, a4, a5, v27, v28, v23, a9, a10, a11);
  sub_100005A40(a2, a3);
}

uint64_t sub_10000C7CC(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t result = sub_100221A30();
  uint64_t v21 = result;
  if (result)
  {
    uint64_t result = sub_100221A60();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v21 += a1 - result;
  }
  BOOL v22 = __OFSUB__(a2, a1);
  uint64_t v23 = a2 - a1;
  if (v22)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v24 = sub_100221A50();
  if (v24 >= v23) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v24;
  }
  uint64_t v26 = v21 + v25;
  if (v21) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 0;
  }
  LOBYTE(v28) = a11 & 1;
  return sub_100008CD4(v21, v27, a4, a5, a6, a7, a8, a9, a10, v28, a12, a13, a14);
}

uint64_t sub_10000C8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  uint64_t result = sub_100221A30();
  uint64_t v20 = result;
  if (result)
  {
    uint64_t result = sub_100221A60();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v20 += a1 - result;
  }
  BOOL v21 = __OFSUB__(a2, a1);
  uint64_t v22 = a2 - a1;
  if (v21)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v23 = sub_100221A50();
  if (v23 >= v22) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v23;
  }
  uint64_t v25 = v20 + v24;
  if (v20) {
    uint64_t v26 = v25;
  }
  else {
    uint64_t v26 = 0;
  }
  return sub_100008A3C(v20, v26, a4, a5, a6, a7, a8, a9, a10 & 1, a11, a12, a13);
}

unsigned char *sub_10000C9E0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_10000CA58(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_10000CB1C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_10000CB98((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10000CA58(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_10000CB1C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_100221A70();
  swift_allocObject();
  uint64_t result = sub_100221A20();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_100221BC0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_10000CB98(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_100221A70();
  swift_allocObject();
  uint64_t result = sub_100221A20();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10000CC1C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  long long v34 = xmmword_100229520;
  if (a1)
  {
    uint64_t v11 = 0xD00000000000001FLL;
    unint64_t v10 = 0x8000000100232770;
  }
  else
  {
    unint64_t v10 = 0x8000000100232750;
    uint64_t v11 = 0xD00000000000001CLL;
  }
  __int16 v12 = sub_1001BEF04(v11, v10);
  uint64_t v13 = sub_100006D6C((unsigned char *)v12 + 32, v12[2]);
  unint64_t v15 = v14;
  swift_release();
  uint64_t v37 = v13;
  unint64_t v38 = v15;
  uint64_t v16 = ccec_cp_384();
  if (v16)
  {
    uint64_t v17 = v16;
    int v39 = a1 & 1;
    id v30 = self;
    id v18 = [v30 ccec384Context];
    sub_100221A70();
    swift_allocObject();
    uint64_t v35 = 0x3800000000;
    unint64_t v36 = sub_100221A40() | 0x4000000000000000;
    uint64_t v32 = a2;
    unint64_t v33 = a3;
    sub_1000059E8(a2, a3);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1001BEF04(a4, a5);
    swift_bridgeObjectRelease();
    if ((a5 & 0x1000000000000000) != 0)
    {
      Swift::Int v20 = sub_100222330();
    }
    else if ((a5 & 0x2000000000000000) != 0)
    {
      Swift::Int v20 = HIBYTE(a5) & 0xF;
    }
    else
    {
      Swift::Int v20 = a4 & 0xFFFFFFFFFFFFLL;
    }
    a3 = sub_100006D6C((unsigned char *)v19 + 32, v20);
    unint64_t v22 = v21;
    swift_release();
    sub_10000BC14(&v35, &v32, a3, v22, &v37, &v40, v39, v17, (uint64_t)v18, (uint64_t *)&v34);
    if (!v31)
    {
      unint64_t v26 = *((void *)&v34 + 1);
      a3 = v34;
      uint64_t v27 = v32;
      unint64_t v28 = v33;
      sub_1000059E8(v34, *((unint64_t *)&v34 + 1));
      sub_100005A40(v27, v28);
      [v30 contextFree:v18];
      sub_100005A40(v35, v36);
      sub_100005A40(a3, v26);
      sub_100005A40(v13, v15);
      return a3;
    }
    sub_100005A40(v32, v33);
    [v30 contextFree:v18];
    sub_100005A40(v35, v36);
    sub_100005A40(v34, *((unint64_t *)&v34 + 1));
    uint64_t v23 = v13;
    unint64_t v24 = v15;
  }
  else
  {
    sub_10000A00C();
    swift_allocError();
    *(void *)uint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    *(unsigned char *)(v25 + 16) = 3;
    swift_willThrow();
    sub_100005A40(v34, *((unint64_t *)&v34 + 1));
    uint64_t v23 = v37;
    unint64_t v24 = v38;
  }
  sub_100005A40(v23, v24);
  return a3;
}

SecKeyRef sub_10000CED0()
{
  sub_1000046DC(&qword_100299598);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229380;
  *(void *)(inited + 32) = kSecAttrKeyClass;
  *(void *)(inited + 40) = kSecAttrKeyClassPrivate;
  *(void *)(inited + 48) = kSecAttrKeyType;
  *(void *)(inited + 56) = kSecAttrKeyTypeEC;
  CFStringRef v1 = (id)kSecAttrKeyClass;
  CFStringRef v2 = (id)kSecAttrKeyClassPrivate;
  CFStringRef v3 = (id)kSecAttrKeyType;
  CFStringRef v4 = (id)kSecAttrKeyTypeEC;
  sub_100009760(inited, &qword_1002995A0, (uint64_t (*)(id))sub_10000AA94);
  CFDataRef isa = sub_100221BD0().super.isa;
  type metadata accessor for CFString(0);
  sub_10000D7E8((unint64_t *)&qword_1002990E8, type metadata accessor for CFString);
  CFDictionaryRef v6 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  SecKeyRef v7 = SecKeyCreateWithData(isa, v6, 0);

  if (!v7)
  {
    sub_10000A00C();
    swift_allocError();
    *(void *)uint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 3;
    swift_willThrow();
  }
  return v7;
}

uint64_t sub_10000D078()
{
  CFTypeRef result = 0;
  type metadata accessor for CFString(0);
  sub_10000D7E8((unint64_t *)&qword_1002990E8, type metadata accessor for CFString);
  CFDictionaryRef isa = sub_1002221C0().super.isa;
  unsigned int v1 = SecItemAdd(isa, &result);

  if (v1)
  {
    if (v1 != -25299) {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    CFStringRef v2 = (id)kSecClass;
    sub_10000A5F4((uint64_t)v2, v7);

    sub_10000467C((uint64_t)v7);
    CFDictionaryRef v3 = sub_1002221C0().super.isa;
    CFDictionaryRef v4 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    unsigned int v1 = SecItemUpdate(v3, v4);

    if (v1)
    {
LABEL_4:
      sub_10000A00C();
      swift_allocError();
      *(void *)uint64_t v5 = v1;
      *(void *)(v5 + 8) = 0;
      *(unsigned char *)(v5 + 16) = 0;
      swift_willThrow();
    }
  }
  swift_unknownObjectRelease();
  return 1;
}

uint64_t sub_10000D248(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000046DC((uint64_t *)&unk_10029EEE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229530;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = kSecAttrAccessible;
  *(void *)(inited + 80) = kSecAttrAccessibleWhenUnlocked;
  *(void *)(inited + 104) = v5;
  *(void *)(inited + 112) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 120) = 1;
  *(void *)(inited + 144) = &type metadata for Bool;
  *(void *)(inited + 152) = kSecAttrAccessGroup;
  *(void *)(inited + 160) = 0xD00000000000001ALL;
  *(void *)(inited + 168) = 0x80000001002326F0;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 200) = 0;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(void *)(inited + 232) = kSecAttrApplicationLabel;
  sub_1000046DC(&qword_100299578);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100229540;
  id v7 = objc_allocWithZone((Class)NSUUID);
  CFStringRef v8 = (id)kSecClass;
  CFStringRef v9 = (id)kSecClassKey;
  CFStringRef v10 = (id)kSecAttrAccessible;
  CFStringRef v11 = (id)kSecAttrAccessibleWhenUnlocked;
  CFStringRef v12 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v13 = (id)kSecAttrAccessGroup;
  CFStringRef v14 = (id)kSecAttrSynchronizable;
  CFStringRef v15 = (id)kSecAttrApplicationLabel;
  id v16 = [v7 init];
  id v17 = [v16 UUIDString];

  uint64_t v18 = sub_100222270();
  uint64_t v20 = v19;

  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10000D794();
  *(void *)(v6 + 32) = v18;
  *(void *)(v6 + 40) = v20;
  *(void *)(inited + 240) = sub_100222290();
  *(void *)(inited + 248) = v21;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = kSecAttrLabel;
  *(void *)(inited + 280) = a3;
  *(void *)(inited + 288) = a4;
  *(void *)(inited + 304) = &type metadata for String;
  *(void *)(inited + 312) = kSecValueData;
  *(void *)(inited + 344) = &type metadata for Data;
  *(void *)(inited + 320) = a1;
  *(void *)(inited + 328) = a2;
  CFStringRef v22 = (id)kSecAttrLabel;
  swift_bridgeObjectRetain();
  CFStringRef v23 = (id)kSecValueData;
  sub_1000059E8(a1, a2);
  sub_10000926C(inited);
  char v24 = sub_10000D078();
  swift_bridgeObjectRelease();
  return v24 & 1;
}

uint64_t sub_10000D4EC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000046DC((uint64_t *)&unk_10029EEE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229530;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = kSecAttrAccessible;
  *(void *)(inited + 80) = kSecAttrAccessibleWhenUnlocked;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 112) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 120) = 1;
  *(void *)(inited + 144) = &type metadata for Bool;
  *(void *)(inited + 152) = kSecAttrAccessGroup;
  *(void *)(inited + 160) = 0xD00000000000001ALL;
  *(void *)(inited + 168) = 0x80000001002326F0;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 200) = 0;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(void *)(inited + 232) = kSecAttrLabel;
  *(void *)(inited + 240) = a3;
  *(void *)(inited + 248) = a4;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = kSecAttrApplicationLabel;
  sub_1000046DC(&qword_100299578);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100229540;
  id v26 = objc_allocWithZone((Class)NSUUID);
  CFStringRef v9 = (id)kSecClass;
  CFStringRef v10 = (id)kSecClassKey;
  CFStringRef v11 = (id)kSecAttrAccessible;
  CFStringRef v12 = (id)kSecAttrAccessibleWhenUnlocked;
  CFStringRef v13 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v14 = (id)kSecAttrAccessGroup;
  CFStringRef v15 = (id)kSecAttrSynchronizable;
  CFStringRef v16 = (id)kSecAttrLabel;
  swift_bridgeObjectRetain();
  CFStringRef v17 = (id)kSecAttrApplicationLabel;
  id v18 = [v26 init];
  id v19 = [v18 UUIDString];

  uint64_t v20 = sub_100222270();
  uint64_t v22 = v21;

  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10000D794();
  *(void *)(v8 + 32) = v20;
  *(void *)(v8 + 40) = v22;
  *(void *)(inited + 280) = sub_100222290();
  *(void *)(inited + 288) = v23;
  *(void *)(inited + 304) = &type metadata for String;
  *(void *)(inited + 312) = kSecValueData;
  *(void *)(inited + 344) = &type metadata for Data;
  *(void *)(inited + 320) = a1;
  *(void *)(inited + 328) = a2;
  CFStringRef v24 = (id)kSecValueData;
  sub_1000059E8(a1, a2);
  sub_10000926C(inited);
  LOBYTE(a4) = sub_10000D078();
  swift_bridgeObjectRelease();
  return a4 & 1;
}

unint64_t sub_10000D794()
{
  unint64_t result = qword_100299580;
  if (!qword_100299580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100299580);
  }
  return result;
}

uint64_t sub_10000D7E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000D830(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000046DC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10000D894()
{
  return 3 * ((unint64_t)(cczp_bitlen() + 7) >> 3) + 1;
}

uint64_t sub_10000D8C4(uint64_t a1)
{
  uint64_t v9 = sub_1000046DC(&qword_1002995C0);
  unint64_t v10 = sub_10000D960();
  v8[0] = a1;
  CFStringRef v2 = sub_1000059A4(v8, v9);
  CFDictionaryRef v3 = (unsigned char *)(*v2 + 32);
  CFDictionaryRef v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_10000C9E0(v3, v4, &v7);
  uint64_t v5 = v7;
  sub_100004788((uint64_t)v8);
  return v5;
}

unint64_t sub_10000D960()
{
  unint64_t result = qword_1002995C8;
  if (!qword_1002995C8)
  {
    sub_100004870(&qword_1002995C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002995C8);
  }
  return result;
}

uint64_t sub_10000D9C0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for RecoveryKeySetError(uint64_t a1)
{
  return sub_10000D9E8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_10000D9E8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s18TrustedPeersHelper19RecoveryKeySetErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10000D9C0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RecoveryKeySetError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10000D9C0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10000D9E8(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for RecoveryKeySetError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RecoveryKeySetError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10000D9E8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecoveryKeySetError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RecoveryKeySetError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10000DB8C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10000DBA4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RecoveryKeySetError()
{
  return &type metadata for RecoveryKeySetError;
}

void sub_10000DBCC(uint64_t a1)
{
}

void sub_10000DBEC(uint64_t a1)
{
}

void sub_10000DC0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v7 = sub_100222260();
  id v8 = [v6 initWithVersion:a3 hash:v7];

  *a4 = v8;
}

uint64_t sub_10000DC84()
{
  sub_1000046DC(&qword_1002995D0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229660;
  id v1 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v2 = sub_100222260();
  id v3 = [v1 initWithVersion:1 hash:v2];

  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = sub_10000E5B8;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = sub_10000E5D4;
  *(void *)(v0 + 64) = 0;
  id v4 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v5 = sub_100222260();
  id v6 = [v4 initWithVersion:2 hash:v5];

  *(void *)(v0 + 72) = v6;
  *(void *)(v0 + 80) = sub_10000EB4C;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = sub_10000EB68;
  *(void *)(v0 + 104) = 0;
  id v7 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v8 = sub_100222260();
  id v9 = [v7 initWithVersion:3 hash:v8];

  *(void *)(v0 + 112) = v9;
  *(void *)(v0 + 120) = sub_10000F138;
  *(void *)(v0 + 128) = 0;
  *(void *)(v0 + 136) = sub_10000F154;
  *(void *)(v0 + 144) = 0;
  id v10 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v11 = sub_100222260();
  id v12 = [v10 initWithVersion:4 hash:v11];

  *(void *)(v0 + 152) = v12;
  *(void *)(v0 + 160) = sub_10001134C;
  *(void *)(v0 + 168) = 0;
  *(void *)(v0 + 176) = sub_100011368;
  *(void *)(v0 + 184) = 0;
  id v13 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v14 = sub_100222260();
  id v15 = [v13 initWithVersion:5 hash:v14];

  *(void *)(v0 + 192) = v15;
  *(void *)(v0 + 200) = sub_100013468;
  *(void *)(v0 + 208) = 0;
  *(void *)(v0 + 216) = sub_100013484;
  *(void *)(v0 + 224) = 0;
  id v16 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v17 = sub_100222260();
  id v18 = [v16 initWithVersion:6 hash:v17];

  *(void *)(v0 + 232) = v18;
  *(void *)(v0 + 240) = sub_100015714;
  *(void *)(v0 + 248) = 0;
  *(void *)(v0 + 256) = sub_100015730;
  *(void *)(v0 + 264) = 0;
  id v19 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v20 = sub_100222260();
  id v21 = [v19 initWithVersion:7 hash:v20];

  *(void *)(v0 + 272) = v21;
  *(void *)(v0 + 280) = sub_1000179C4;
  *(void *)(v0 + 288) = 0;
  *(void *)(v0 + 296) = sub_1000179E0;
  *(void *)(v0 + 304) = 0;
  id v22 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v23 = sub_100222260();
  id v24 = [v22 initWithVersion:8 hash:v23];

  *(void *)(v0 + 312) = v24;
  *(void *)(v0 + 320) = sub_100019CDC;
  *(void *)(v0 + 328) = 0;
  *(void *)(v0 + 336) = sub_100019CF8;
  *(void *)(v0 + 344) = 0;
  id v25 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v26 = sub_100222260();
  id v27 = [v25 initWithVersion:9 hash:v26];

  *(void *)(v0 + 352) = v27;
  *(void *)(v0 + 360) = sub_10001C28C;
  *(void *)(v0 + 368) = 0;
  *(void *)(v0 + 376) = sub_10001C2A8;
  *(void *)(v0 + 384) = 0;
  id v28 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v29 = sub_100222260();
  id v30 = [v28 initWithVersion:10 hash:v29];

  *(void *)(v0 + 392) = v30;
  *(void *)(v0 + 400) = sub_10001E8A4;
  *(void *)(v0 + 408) = 0;
  *(void *)(v0 + 416) = sub_10001E8C0;
  *(void *)(v0 + 424) = 0;
  id v31 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v32 = sub_100222260();
  id v33 = [v31 initWithVersion:11 hash:v32];

  *(void *)(v0 + 432) = v33;
  *(void *)(v0 + 440) = sub_100020F78;
  *(void *)(v0 + 448) = 0;
  *(void *)(v0 + 456) = sub_100020F94;
  *(void *)(v0 + 464) = 0;
  id v34 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v35 = sub_100222260();
  id v36 = [v34 initWithVersion:12 hash:v35];

  *(void *)(v0 + 472) = v36;
  *(void *)(v0 + 480) = sub_100023728;
  *(void *)(v0 + 488) = 0;
  *(void *)(v0 + 496) = sub_100023744;
  *(void *)(v0 + 504) = 0;
  id v37 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v38 = sub_100222260();
  id v39 = [v37 initWithVersion:13 hash:v38];

  *(void *)(v0 + 512) = v39;
  *(void *)(v0 + 520) = sub_100025ED8;
  *(void *)(v0 + 528) = 0;
  *(void *)(v0 + 536) = sub_100025EF4;
  *(void *)(v0 + 544) = 0;
  id v40 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v41 = sub_100222260();
  id v42 = [v40 initWithVersion:15 hash:v41];

  *(void *)(v0 + 552) = v42;
  *(void *)(v0 + 560) = sub_100028760;
  *(void *)(v0 + 568) = 0;
  *(void *)(v0 + 576) = sub_10002877C;
  *(void *)(v0 + 584) = 0;
  id v43 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v44 = sub_100222260();
  id v45 = [v43 initWithVersion:16 hash:v44];

  *(void *)(v0 + 592) = v45;
  *(void *)(v0 + 600) = sub_10002B1E8;
  *(void *)(v0 + 608) = 0;
  *(void *)(v0 + 616) = sub_10002B204;
  *(void *)(v0 + 624) = 0;
  id v46 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v47 = sub_100222260();
  id v48 = [v46 initWithVersion:17 hash:v47];

  *(void *)(v0 + 632) = v48;
  *(void *)(v0 + 640) = sub_10002DB78;
  *(void *)(v0 + 648) = 0;
  *(void *)(v0 + 656) = sub_10002DB94;
  *(void *)(v0 + 664) = 0;
  id v49 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v50 = sub_100222260();
  id v51 = [v49 initWithVersion:18 hash:v50];

  *(void *)(v0 + 672) = v51;
  *(void *)(v0 + 680) = sub_1000308EC;
  *(void *)(v0 + 688) = 0;
  *(void *)(v0 + 696) = sub_100030908;
  *(void *)(v0 + 704) = 0;
  id v52 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v53 = sub_100222260();
  id v54 = [v52 initWithVersion:19 hash:v53];

  *(void *)(v0 + 712) = v54;
  *(void *)(v0 + 720) = sub_100033740;
  *(void *)(v0 + 728) = 0;
  *(void *)(v0 + 736) = sub_10003375C;
  *(void *)(v0 + 744) = 0;
  id v55 = objc_allocWithZone((Class)TPPolicyVersion);
  NSString v56 = sub_100222260();
  id v57 = [v55 initWithVersion:20 hash:v56];

  *(void *)(v0 + 752) = v57;
  *(void *)(v0 + 760) = sub_1000365FC;
  *(void *)(v0 + 768) = 0;
  *(void *)(v0 + 776) = sub_100036618;
  *(void *)(v0 + 784) = 0;
  return v0;
}

unint64_t sub_10000E5B8()
{
  return 0xD00000000000011CLL;
}

id sub_10000E5D4()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229670;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  sub_1002223E0();
  uint64_t v20 = v0;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100229680;
  NSString v22 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  id v24 = self;
  id v25 = [v24 TPPBPolicyCategoriesByViewWithView:v22 categories:isa];

  *(void *)(v21 + 32) = v25;
  NSString v26 = sub_100222260();
  Class v27 = sub_1002223B0().super.isa;
  id v28 = [v24 TPPBPolicyCategoriesByViewWithView:v26 categories:v27];

  *(void *)(v21 + 40) = v28;
  NSString v29 = sub_100222260();
  Class v30 = sub_1002223B0().super.isa;
  id v31 = [v24 TPPBPolicyCategoriesByViewWithView:v29 categories:v30];

  *(void *)(v21 + 48) = v31;
  sub_1002223E0();
  uint64_t v32 = v21;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100229680;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = self;
  id v37 = [v36 TPPBPolicyIntroducersByCategoryWithCategory:v34 introducers:v35];

  *(void *)(v33 + 32) = v37;
  NSString v38 = sub_100222260();
  Class v39 = sub_1002223B0().super.isa;
  id v40 = [v36 TPPBPolicyIntroducersByCategoryWithCategory:v38 introducers:v39];

  *(void *)(v33 + 40) = v40;
  NSString v41 = sub_100222260();
  Class v42 = sub_1002223B0().super.isa;
  id v43 = [v36 TPPBPolicyIntroducersByCategoryWithCategory:v41 introducers:v42];

  *(void *)(v33 + 48) = v43;
  sub_1002223E0();
  id v44 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(1, v20, v32, v33, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_10000EB4C()
{
  return 0xD000000000000134;
}

id sub_10000EB68()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229690;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  sub_1002223E0();
  uint64_t v23 = v0;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100229680;
  NSString v25 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v27 = self;
  id v28 = [v27 TPPBPolicyCategoriesByViewWithView:v25 categories:isa];

  *(void *)(v24 + 32) = v28;
  NSString v29 = sub_100222260();
  Class v30 = sub_1002223B0().super.isa;
  id v31 = [v27 TPPBPolicyCategoriesByViewWithView:v29 categories:v30];

  *(void *)(v24 + 40) = v31;
  NSString v32 = sub_100222260();
  Class v33 = sub_1002223B0().super.isa;
  id v34 = [v27 TPPBPolicyCategoriesByViewWithView:v32 categories:v33];

  *(void *)(v24 + 48) = v34;
  sub_1002223E0();
  uint64_t v35 = v24;
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100229680;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  Class v39 = self;
  id v40 = [v39 TPPBPolicyIntroducersByCategoryWithCategory:v37 introducers:v38];

  *(void *)(v36 + 32) = v40;
  NSString v41 = sub_100222260();
  Class v42 = sub_1002223B0().super.isa;
  id v43 = [v39 TPPBPolicyIntroducersByCategoryWithCategory:v41 introducers:v42];

  *(void *)(v36 + 40) = v43;
  NSString v44 = sub_100222260();
  Class v45 = sub_1002223B0().super.isa;
  id v46 = [v39 TPPBPolicyIntroducersByCategoryWithCategory:v44 introducers:v45];

  *(void *)(v36 + 48) = v46;
  sub_1002223E0();
  id v47 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(2, v23, v35, v36, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_10000F138()
{
  return 0xD000000000000A54;
}

id sub_10000F154()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229690;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  sub_1002223E0();
  uint64_t v265 = v0;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1002296A0;
  NSString v24 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  NSString v26 = self;
  id v27 = [v26 TPPBPolicyCategoriesByViewWithView:v24 categories:isa];

  *(void *)(v23 + 32) = v27;
  NSString v28 = sub_100222260();
  Class v29 = sub_1002223B0().super.isa;
  id v30 = [v26 TPPBPolicyCategoriesByViewWithView:v28 categories:v29];

  *(void *)(v23 + 40) = v30;
  NSString v31 = sub_100222260();
  Class v32 = sub_1002223B0().super.isa;
  id v33 = [v26 TPPBPolicyCategoriesByViewWithView:v31 categories:v32];

  *(void *)(v23 + 48) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v26 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v23 + 56) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v26 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v23 + 64) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v26 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v23 + 72) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v26 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v23 + 80) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v26 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v23 + 88) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v26 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v23 + 96) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v26 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v23 + 104) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v26 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v23 + 112) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v26 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v23 + 120) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v26 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v23 + 128) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v26 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v23 + 136) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v26 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v23 + 144) = v69;
  sub_1002223E0();
  uint64_t v264 = v23;
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1002296B0;
  NSString v71 = sub_100222260();
  Class v72 = sub_1002223B0().super.isa;
  v73 = self;
  id v74 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v71 introducers:v72];

  *(void *)(v70 + 32) = v74;
  NSString v75 = sub_100222260();
  Class v76 = sub_1002223B0().super.isa;
  id v77 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v75 introducers:v76];

  *(void *)(v70 + 40) = v77;
  NSString v78 = sub_100222260();
  Class v79 = sub_1002223B0().super.isa;
  id v80 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v78 introducers:v79];

  *(void *)(v70 + 48) = v80;
  NSString v81 = sub_100222260();
  Class v82 = sub_1002223B0().super.isa;
  id v83 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v81 introducers:v82];

  *(void *)(v70 + 56) = v83;
  sub_1002223E0();
  uint64_t v263 = v70;
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_1002296C0;
  v85 = self;
  NSString v86 = sub_100222260();
  NSString v87 = sub_100222260();
  id v88 = [v85 fieldMatch:v86 fieldRegex:v87];

  NSString v89 = sub_100222260();
  v90 = self;
  id v91 = [v90 TPPBPolicyKeyViewMappingWithView:v89 matchingRule:v88];

  *(void *)(v84 + 32) = v91;
  NSString v92 = sub_100222260();
  NSString v93 = sub_100222260();
  id v94 = [v85 fieldMatch:v92 fieldRegex:v93];

  NSString v95 = sub_100222260();
  id v96 = [v90 TPPBPolicyKeyViewMappingWithView:v95 matchingRule:v94];

  *(void *)(v84 + 40) = v96;
  NSString v97 = sub_100222260();
  NSString v98 = sub_100222260();
  id v99 = [v85 fieldMatch:v97 fieldRegex:v98];

  NSString v100 = sub_100222260();
  id v101 = [v90 TPPBPolicyKeyViewMappingWithView:v100 matchingRule:v99];

  *(void *)(v84 + 48) = v101;
  NSString v102 = sub_100222260();
  NSString v103 = sub_100222260();
  id v104 = [v85 fieldMatch:v102 fieldRegex:v103];

  NSString v105 = sub_100222260();
  id v106 = [v90 TPPBPolicyKeyViewMappingWithView:v105 matchingRule:v104];

  *(void *)(v84 + 56) = v106;
  NSString v107 = sub_100222260();
  NSString v108 = sub_100222260();
  id v109 = [v85 fieldMatch:v107 fieldRegex:v108];

  NSString v110 = sub_100222260();
  id v111 = [v90 TPPBPolicyKeyViewMappingWithView:v110 matchingRule:v109];

  *(void *)(v84 + 64) = v111;
  NSString v112 = sub_100222260();
  NSString v113 = sub_100222260();
  id v114 = [v85 fieldMatch:v112 fieldRegex:v113];

  NSString v115 = sub_100222260();
  id v116 = [v90 TPPBPolicyKeyViewMappingWithView:v115 matchingRule:v114];

  *(void *)(v84 + 72) = v116;
  NSString v117 = sub_100222260();
  NSString v118 = sub_100222260();
  id v119 = [v85 fieldMatch:v117 fieldRegex:v118];

  NSString v120 = sub_100222260();
  id v121 = [v90 TPPBPolicyKeyViewMappingWithView:v120 matchingRule:v119];

  *(void *)(v84 + 80) = v121;
  uint64_t v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = xmmword_100229680;
  NSString v123 = sub_100222260();
  NSString v124 = sub_100222260();
  id v125 = [v85 fieldMatch:v123 fieldRegex:v124];

  *(void *)(v122 + 32) = v125;
  NSString v126 = sub_100222260();
  NSString v127 = sub_100222260();
  id v128 = [v85 fieldMatch:v126 fieldRegex:v127];

  *(void *)(v122 + 40) = v128;
  NSString v129 = sub_100222260();
  NSString v130 = sub_100222260();
  id v131 = [v85 fieldMatch:v129 fieldRegex:v130];

  *(void *)(v122 + 48) = v131;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v132 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v133 = [v85 orMatch:v132];

  NSString v134 = sub_100222260();
  id v135 = [v90 TPPBPolicyKeyViewMappingWithView:v134 matchingRule:v133];

  *(void *)(v84 + 88) = v135;
  NSString v136 = sub_100222260();
  NSString v137 = sub_100222260();
  id v138 = [v85 fieldMatch:v136 fieldRegex:v137];

  NSString v139 = sub_100222260();
  id v140 = [v90 TPPBPolicyKeyViewMappingWithView:v139 matchingRule:v138];

  *(void *)(v84 + 96) = v140;
  uint64_t v141 = swift_allocObject();
  *(_OWORD *)(v141 + 16) = xmmword_1002296B0;
  uint64_t v142 = swift_allocObject();
  *(_OWORD *)(v142 + 16) = xmmword_1002296D0;
  NSString v143 = sub_100222260();
  NSString v144 = sub_100222260();
  id v145 = [v85 fieldMatch:v143 fieldRegex:v144];

  *(void *)(v142 + 32) = v145;
  NSString v146 = sub_100222260();
  NSString v147 = sub_100222260();
  id v148 = [v85 fieldMatch:v146 fieldRegex:v147];

  *(void *)(v142 + 40) = v148;
  sub_1002223E0();
  Class v149 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v150 = [v85 andMatch:v149];

  *(void *)(v141 + 32) = v150;
  uint64_t v151 = swift_allocObject();
  *(_OWORD *)(v151 + 16) = xmmword_1002296D0;
  NSString v152 = sub_100222260();
  NSString v153 = sub_100222260();
  id v154 = [v85 fieldMatch:v152 fieldRegex:v153];

  *(void *)(v151 + 32) = v154;
  NSString v155 = sub_100222260();
  NSString v156 = sub_100222260();
  id v157 = [v85 fieldMatch:v155 fieldRegex:v156];

  *(void *)(v151 + 40) = v157;
  sub_1002223E0();
  Class v158 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v159 = [v85 andMatch:v158];

  *(void *)(v141 + 40) = v159;
  NSString v160 = sub_100222260();
  NSString v161 = sub_100222260();
  id v162 = [v85 fieldMatch:v160 fieldRegex:v161];

  *(void *)(v141 + 48) = v162;
  NSString v163 = sub_100222260();
  NSString v164 = sub_100222260();
  id v165 = [v85 fieldMatch:v163 fieldRegex:v164];

  *(void *)(v141 + 56) = v165;
  sub_1002223E0();
  Class v166 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v167 = [v85 orMatch:v166];

  NSString v168 = sub_100222260();
  id v169 = [v90 TPPBPolicyKeyViewMappingWithView:v168 matchingRule:v167];

  *(void *)(v84 + 104) = v169;
  uint64_t v170 = swift_allocObject();
  *(_OWORD *)(v170 + 16) = xmmword_1002296D0;
  NSString v171 = sub_100222260();
  NSString v172 = sub_100222260();
  id v173 = [v85 fieldMatch:v171 fieldRegex:v172];

  *(void *)(v170 + 32) = v173;
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = xmmword_100229680;
  NSString v175 = sub_100222260();
  NSString v176 = sub_100222260();
  id v177 = [v85 fieldMatch:v175 fieldRegex:v176];

  *(void *)(v174 + 32) = v177;
  NSString v178 = sub_100222260();
  NSString v179 = sub_100222260();
  id v180 = [v85 fieldMatch:v178 fieldRegex:v179];

  *(void *)(v174 + 40) = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v85 fieldMatch:v181 fieldRegex:v182];

  *(void *)(v174 + 48) = v183;
  sub_1002223E0();
  Class v184 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v185 = [v85 andMatch:v184];

  *(void *)(v170 + 40) = v185;
  sub_1002223E0();
  Class v186 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v187 = [v85 orMatch:v186];

  NSString v188 = sub_100222260();
  id v189 = [v90 TPPBPolicyKeyViewMappingWithView:v188 matchingRule:v187];

  *(void *)(v84 + 112) = v189;
  uint64_t v190 = swift_allocObject();
  *(_OWORD *)(v190 + 16) = xmmword_1002296E0;
  NSString v191 = sub_100222260();
  NSString v192 = sub_100222260();
  id v193 = [v85 fieldMatch:v191 fieldRegex:v192];

  *(void *)(v190 + 32) = v193;
  NSString v194 = sub_100222260();
  NSString v195 = sub_100222260();
  id v196 = [v85 fieldMatch:v194 fieldRegex:v195];

  *(void *)(v190 + 40) = v196;
  NSString v197 = sub_100222260();
  NSString v198 = sub_100222260();
  id v199 = [v85 fieldMatch:v197 fieldRegex:v198];

  *(void *)(v190 + 48) = v199;
  NSString v200 = sub_100222260();
  NSString v201 = sub_100222260();
  id v202 = [v85 fieldMatch:v200 fieldRegex:v201];

  *(void *)(v190 + 56) = v202;
  NSString v203 = sub_100222260();
  NSString v204 = sub_100222260();
  id v205 = [v85 fieldMatch:v203 fieldRegex:v204];

  *(void *)(v190 + 64) = v205;
  NSString v206 = sub_100222260();
  NSString v207 = sub_100222260();
  id v208 = [v85 fieldMatch:v206 fieldRegex:v207];

  *(void *)(v190 + 72) = v208;
  NSString v209 = sub_100222260();
  NSString v210 = sub_100222260();
  id v211 = [v85 fieldMatch:v209 fieldRegex:v210];

  *(void *)(v190 + 80) = v211;
  NSString v212 = sub_100222260();
  NSString v213 = sub_100222260();
  id v214 = [v85 fieldMatch:v212 fieldRegex:v213];

  *(void *)(v190 + 88) = v214;
  NSString v215 = sub_100222260();
  NSString v216 = sub_100222260();
  id v217 = [v85 fieldMatch:v215 fieldRegex:v216];

  *(void *)(v190 + 96) = v217;
  NSString v218 = sub_100222260();
  NSString v219 = sub_100222260();
  id v220 = [v85 fieldMatch:v218 fieldRegex:v219];

  *(void *)(v190 + 104) = v220;
  NSString v221 = sub_100222260();
  NSString v222 = sub_100222260();
  id v223 = [v85 fieldMatch:v221 fieldRegex:v222];

  *(void *)(v190 + 112) = v223;
  NSString v224 = sub_100222260();
  NSString v225 = sub_100222260();
  id v226 = [v85 fieldMatch:v224 fieldRegex:v225];

  *(void *)(v190 + 120) = v226;
  sub_1002223E0();
  Class v227 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v228 = [v85 orMatch:v227];

  NSString v229 = sub_100222260();
  id v230 = [v90 TPPBPolicyKeyViewMappingWithView:v229 matchingRule:v228];

  uint64_t v231 = v84;
  *(void *)(v84 + 120) = v230;
  NSString v232 = sub_100222260();
  NSString v233 = sub_100222260();
  id v234 = [v85 fieldMatch:v232 fieldRegex:v233];

  NSString v235 = sub_100222260();
  id v236 = [v90 TPPBPolicyKeyViewMappingWithView:v235 matchingRule:v234];

  *(void *)(v84 + 128) = v236;
  NSString v237 = sub_100222260();
  NSString v238 = sub_100222260();
  id v239 = [v85 fieldMatch:v237 fieldRegex:v238];

  NSString v240 = sub_100222260();
  id v241 = [v90 TPPBPolicyKeyViewMappingWithView:v240 matchingRule:v239];

  *(void *)(v84 + 136) = v241;
  uint64_t v242 = swift_allocObject();
  *(_OWORD *)(v242 + 16) = xmmword_100229680;
  NSString v243 = sub_100222260();
  NSString v244 = sub_100222260();
  id v245 = [v85 fieldMatch:v243 fieldRegex:v244];

  *(void *)(v242 + 32) = v245;
  NSString v246 = sub_100222260();
  NSString v247 = sub_100222260();
  id v248 = [v85 fieldMatch:v246 fieldRegex:v247];

  *(void *)(v242 + 40) = v248;
  NSString v249 = sub_100222260();
  NSString v250 = sub_100222260();
  id v251 = [v85 fieldMatch:v249 fieldRegex:v250];

  *(void *)(v242 + 48) = v251;
  sub_1002223E0();
  Class v252 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v253 = [v85 orMatch:v252];

  NSString v254 = sub_100222260();
  id v255 = [v90 TPPBPolicyKeyViewMappingWithView:v254 matchingRule:v253];

  *(void *)(v231 + 144) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v85 fieldMatch:v256 fieldRegex:v257];

  NSString v259 = sub_100222260();
  id v260 = [v90 TPPBPolicyKeyViewMappingWithView:v259 matchingRule:v258];

  *(void *)(v231 + 152) = v260;
  sub_1002223E0();
  id v261 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(3, v265, v264, v263, (uint64_t)&_swiftEmptyArrayStorage, v231, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_10001134C()
{
  return 0xD0000000000009E4;
}

id sub_100011368()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229690;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  sub_1002223E0();
  uint64_t v258 = v0;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1002296F0;
  NSString v24 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  NSString v26 = self;
  id v27 = [v26 TPPBPolicyCategoriesByViewWithView:v24 categories:isa];

  *(void *)(v23 + 32) = v27;
  NSString v28 = sub_100222260();
  Class v29 = sub_1002223B0().super.isa;
  id v30 = [v26 TPPBPolicyCategoriesByViewWithView:v28 categories:v29];

  *(void *)(v23 + 40) = v30;
  NSString v31 = sub_100222260();
  Class v32 = sub_1002223B0().super.isa;
  id v33 = [v26 TPPBPolicyCategoriesByViewWithView:v31 categories:v32];

  *(void *)(v23 + 48) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v26 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v23 + 56) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v26 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v23 + 64) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v26 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v23 + 72) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v26 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v23 + 80) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v26 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v23 + 88) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v26 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v23 + 96) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v26 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v23 + 104) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v26 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v23 + 112) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v26 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v23 + 120) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v26 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v23 + 128) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v26 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v23 + 136) = v66;
  sub_1002223E0();
  uint64_t v257 = v23;
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1002296B0;
  NSString v68 = sub_100222260();
  Class v69 = sub_1002223B0().super.isa;
  uint64_t v70 = self;
  id v71 = [v70 TPPBPolicyIntroducersByCategoryWithCategory:v68 introducers:v69];

  *(void *)(v67 + 32) = v71;
  NSString v72 = sub_100222260();
  Class v73 = sub_1002223B0().super.isa;
  id v74 = [v70 TPPBPolicyIntroducersByCategoryWithCategory:v72 introducers:v73];

  *(void *)(v67 + 40) = v74;
  NSString v75 = sub_100222260();
  Class v76 = sub_1002223B0().super.isa;
  id v77 = [v70 TPPBPolicyIntroducersByCategoryWithCategory:v75 introducers:v76];

  *(void *)(v67 + 48) = v77;
  NSString v78 = sub_100222260();
  Class v79 = sub_1002223B0().super.isa;
  id v80 = [v70 TPPBPolicyIntroducersByCategoryWithCategory:v78 introducers:v79];

  *(void *)(v67 + 56) = v80;
  sub_1002223E0();
  uint64_t v256 = v67;
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_1002296A0;
  Class v82 = (void *)v81;
  id v83 = self;
  NSString v84 = sub_100222260();
  NSString v85 = sub_100222260();
  id v86 = [v83 fieldMatch:v84 fieldRegex:v85];

  NSString v87 = sub_100222260();
  id v88 = self;
  id v89 = [v88 TPPBPolicyKeyViewMappingWithView:v87 matchingRule:v86];

  v82[4] = v89;
  NSString v90 = sub_100222260();
  NSString v91 = sub_100222260();
  id v92 = [v83 fieldMatch:v90 fieldRegex:v91];

  NSString v93 = sub_100222260();
  id v94 = [v88 TPPBPolicyKeyViewMappingWithView:v93 matchingRule:v92];

  v82[5] = v94;
  NSString v95 = sub_100222260();
  NSString v96 = sub_100222260();
  id v97 = [v83 fieldMatch:v95 fieldRegex:v96];

  NSString v98 = sub_100222260();
  id v99 = [v88 TPPBPolicyKeyViewMappingWithView:v98 matchingRule:v97];

  v82[6] = v99;
  NSString v100 = sub_100222260();
  NSString v101 = sub_100222260();
  id v102 = [v83 fieldMatch:v100 fieldRegex:v101];

  NSString v103 = sub_100222260();
  id v104 = [v88 TPPBPolicyKeyViewMappingWithView:v103 matchingRule:v102];

  v82[7] = v104;
  NSString v105 = sub_100222260();
  NSString v106 = sub_100222260();
  id v107 = [v83 fieldMatch:v105 fieldRegex:v106];

  NSString v108 = sub_100222260();
  id v109 = [v88 TPPBPolicyKeyViewMappingWithView:v108 matchingRule:v107];

  v82[8] = v109;
  NSString v110 = sub_100222260();
  NSString v111 = sub_100222260();
  id v112 = [v83 fieldMatch:v110 fieldRegex:v111];

  NSString v113 = sub_100222260();
  id v114 = [v88 TPPBPolicyKeyViewMappingWithView:v113 matchingRule:v112];

  v82[9] = v114;
  NSString v115 = sub_100222260();
  NSString v116 = sub_100222260();
  id v117 = [v83 fieldMatch:v115 fieldRegex:v116];

  NSString v118 = sub_100222260();
  id v119 = [v88 TPPBPolicyKeyViewMappingWithView:v118 matchingRule:v117];

  v82[10] = v119;
  uint64_t v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = xmmword_100229680;
  NSString v121 = sub_100222260();
  NSString v122 = sub_100222260();
  id v123 = [v83 fieldMatch:v121 fieldRegex:v122];

  *(void *)(v120 + 32) = v123;
  NSString v124 = sub_100222260();
  NSString v125 = sub_100222260();
  id v126 = [v83 fieldMatch:v124 fieldRegex:v125];

  *(void *)(v120 + 40) = v126;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v83 fieldMatch:v127 fieldRegex:v128];

  *(void *)(v120 + 48) = v129;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v130 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v131 = [v83 orMatch:v130];

  NSString v132 = sub_100222260();
  id v133 = [v88 TPPBPolicyKeyViewMappingWithView:v132 matchingRule:v131];

  id v255 = v82;
  v82[11] = v133;
  NSString v134 = sub_100222260();
  NSString v135 = sub_100222260();
  id v136 = [v83 fieldMatch:v134 fieldRegex:v135];

  NSString v137 = sub_100222260();
  id v138 = [v88 TPPBPolicyKeyViewMappingWithView:v137 matchingRule:v136];

  v82[12] = v138;
  uint64_t v139 = swift_allocObject();
  *(_OWORD *)(v139 + 16) = xmmword_1002296B0;
  uint64_t v140 = swift_allocObject();
  *(_OWORD *)(v140 + 16) = xmmword_1002296D0;
  NSString v141 = sub_100222260();
  NSString v142 = sub_100222260();
  id v143 = [v83 fieldMatch:v141 fieldRegex:v142];

  *(void *)(v140 + 32) = v143;
  NSString v144 = sub_100222260();
  NSString v145 = sub_100222260();
  id v146 = [v83 fieldMatch:v144 fieldRegex:v145];

  *(void *)(v140 + 40) = v146;
  sub_1002223E0();
  Class v147 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v148 = [v83 andMatch:v147];

  *(void *)(v139 + 32) = v148;
  uint64_t v149 = swift_allocObject();
  *(_OWORD *)(v149 + 16) = xmmword_1002296D0;
  NSString v150 = sub_100222260();
  NSString v151 = sub_100222260();
  id v152 = [v83 fieldMatch:v150 fieldRegex:v151];

  *(void *)(v149 + 32) = v152;
  NSString v153 = sub_100222260();
  NSString v154 = sub_100222260();
  id v155 = [v83 fieldMatch:v153 fieldRegex:v154];

  *(void *)(v149 + 40) = v155;
  sub_1002223E0();
  Class v156 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v157 = [v83 andMatch:v156];

  *(void *)(v139 + 40) = v157;
  NSString v158 = sub_100222260();
  NSString v159 = sub_100222260();
  id v160 = [v83 fieldMatch:v158 fieldRegex:v159];

  *(void *)(v139 + 48) = v160;
  NSString v161 = sub_100222260();
  NSString v162 = sub_100222260();
  id v163 = [v83 fieldMatch:v161 fieldRegex:v162];

  *(void *)(v139 + 56) = v163;
  sub_1002223E0();
  Class v164 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v165 = [v83 orMatch:v164];

  NSString v166 = sub_100222260();
  id v167 = [v88 TPPBPolicyKeyViewMappingWithView:v166 matchingRule:v165];

  v255[13] = v167;
  uint64_t v168 = swift_allocObject();
  *(_OWORD *)(v168 + 16) = xmmword_1002296D0;
  NSString v169 = sub_100222260();
  NSString v170 = sub_100222260();
  id v171 = [v83 fieldMatch:v169 fieldRegex:v170];

  *(void *)(v168 + 32) = v171;
  uint64_t v172 = swift_allocObject();
  *(_OWORD *)(v172 + 16) = xmmword_100229680;
  NSString v173 = sub_100222260();
  NSString v174 = sub_100222260();
  id v175 = [v83 fieldMatch:v173 fieldRegex:v174];

  *(void *)(v172 + 32) = v175;
  NSString v176 = sub_100222260();
  NSString v177 = sub_100222260();
  id v178 = [v83 fieldMatch:v176 fieldRegex:v177];

  *(void *)(v172 + 40) = v178;
  NSString v179 = sub_100222260();
  NSString v180 = sub_100222260();
  id v181 = [v83 fieldMatch:v179 fieldRegex:v180];

  *(void *)(v172 + 48) = v181;
  sub_1002223E0();
  Class v182 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v183 = [v83 andMatch:v182];

  *(void *)(v168 + 40) = v183;
  sub_1002223E0();
  Class v184 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v185 = [v83 orMatch:v184];

  NSString v186 = sub_100222260();
  id v187 = [v88 TPPBPolicyKeyViewMappingWithView:v186 matchingRule:v185];

  v255[14] = v187;
  uint64_t v188 = swift_allocObject();
  *(_OWORD *)(v188 + 16) = xmmword_1002296E0;
  NSString v189 = sub_100222260();
  NSString v190 = sub_100222260();
  id v191 = [v83 fieldMatch:v189 fieldRegex:v190];

  *(void *)(v188 + 32) = v191;
  NSString v192 = sub_100222260();
  NSString v193 = sub_100222260();
  id v194 = [v83 fieldMatch:v192 fieldRegex:v193];

  *(void *)(v188 + 40) = v194;
  NSString v195 = sub_100222260();
  NSString v196 = sub_100222260();
  id v197 = [v83 fieldMatch:v195 fieldRegex:v196];

  *(void *)(v188 + 48) = v197;
  NSString v198 = sub_100222260();
  NSString v199 = sub_100222260();
  id v200 = [v83 fieldMatch:v198 fieldRegex:v199];

  *(void *)(v188 + 56) = v200;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v83 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v188 + 64) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v83 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v188 + 72) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v83 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v188 + 80) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v83 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v188 + 88) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v83 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v188 + 96) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v83 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v188 + 104) = v218;
  NSString v219 = sub_100222260();
  NSString v220 = sub_100222260();
  id v221 = [v83 fieldMatch:v219 fieldRegex:v220];

  *(void *)(v188 + 112) = v221;
  NSString v222 = sub_100222260();
  NSString v223 = sub_100222260();
  id v224 = [v83 fieldMatch:v222 fieldRegex:v223];

  *(void *)(v188 + 120) = v224;
  sub_1002223E0();
  Class v225 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v226 = [v83 orMatch:v225];

  NSString v227 = sub_100222260();
  id v228 = [v88 TPPBPolicyKeyViewMappingWithView:v227 matchingRule:v226];

  v255[15] = v228;
  NSString v229 = sub_100222260();
  NSString v230 = sub_100222260();
  id v231 = [v83 fieldMatch:v229 fieldRegex:v230];

  NSString v232 = sub_100222260();
  id v233 = [v88 TPPBPolicyKeyViewMappingWithView:v232 matchingRule:v231];

  v255[16] = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v83 fieldMatch:v234 fieldRegex:v235];

  NSString v237 = sub_100222260();
  id v238 = [v88 TPPBPolicyKeyViewMappingWithView:v237 matchingRule:v236];

  v255[17] = v238;
  uint64_t v239 = swift_allocObject();
  *(_OWORD *)(v239 + 16) = xmmword_100229680;
  NSString v240 = sub_100222260();
  NSString v241 = sub_100222260();
  id v242 = [v83 fieldMatch:v240 fieldRegex:v241];

  *(void *)(v239 + 32) = v242;
  NSString v243 = sub_100222260();
  NSString v244 = sub_100222260();
  id v245 = [v83 fieldMatch:v243 fieldRegex:v244];

  *(void *)(v239 + 40) = v245;
  NSString v246 = sub_100222260();
  NSString v247 = sub_100222260();
  id v248 = [v83 fieldMatch:v246 fieldRegex:v247];

  *(void *)(v239 + 48) = v248;
  sub_1002223E0();
  Class v249 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v250 = [v83 orMatch:v249];

  NSString v251 = sub_100222260();
  id v252 = [v88 TPPBPolicyKeyViewMappingWithView:v251 matchingRule:v250];

  v255[18] = v252;
  sub_1002223E0();
  id v253 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(4, v258, v257, v256, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v255, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_100013468()
{
  return 0xD000000000000A54;
}

id sub_100013484()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229700;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  sub_1002223E0();
  uint64_t v269 = v0;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1002296F0;
  NSString v27 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v29 = self;
  id v30 = [v29 TPPBPolicyCategoriesByViewWithView:v27 categories:isa];

  *(void *)(v26 + 32) = v30;
  NSString v31 = sub_100222260();
  Class v32 = sub_1002223B0().super.isa;
  id v33 = [v29 TPPBPolicyCategoriesByViewWithView:v31 categories:v32];

  *(void *)(v26 + 40) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v29 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v26 + 48) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v29 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v26 + 56) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v29 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v26 + 64) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v29 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v26 + 72) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v29 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v26 + 80) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v29 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v26 + 88) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v29 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v26 + 96) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v29 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v26 + 104) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v29 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v26 + 112) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v29 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v26 + 120) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v29 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v26 + 128) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v29 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v26 + 136) = v69;
  sub_1002223E0();
  uint64_t v268 = v26;
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1002296B0;
  NSString v71 = sub_100222260();
  Class v72 = sub_1002223B0().super.isa;
  Class v73 = self;
  id v74 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v71 introducers:v72];

  *(void *)(v70 + 32) = v74;
  NSString v75 = sub_100222260();
  Class v76 = sub_1002223B0().super.isa;
  id v77 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v75 introducers:v76];

  *(void *)(v70 + 40) = v77;
  NSString v78 = sub_100222260();
  Class v79 = sub_1002223B0().super.isa;
  id v80 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v78 introducers:v79];

  *(void *)(v70 + 48) = v80;
  NSString v81 = sub_100222260();
  Class v82 = sub_1002223B0().super.isa;
  id v83 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v81 introducers:v82];

  *(void *)(v70 + 56) = v83;
  sub_1002223E0();
  uint64_t v267 = v70;
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_1002296C0;
  NSString v85 = (void *)v84;
  id v86 = self;
  NSString v87 = sub_100222260();
  NSString v88 = sub_100222260();
  id v89 = [v86 fieldMatch:v87 fieldRegex:v88];

  NSString v90 = sub_100222260();
  NSString v91 = self;
  id v92 = [v91 TPPBPolicyKeyViewMappingWithView:v90 matchingRule:v89];

  v85[4] = v92;
  NSString v93 = sub_100222260();
  NSString v94 = sub_100222260();
  id v95 = [v86 fieldMatch:v93 fieldRegex:v94];

  NSString v96 = sub_100222260();
  id v97 = [v91 TPPBPolicyKeyViewMappingWithView:v96 matchingRule:v95];

  v85[5] = v97;
  NSString v98 = sub_100222260();
  NSString v99 = sub_100222260();
  id v100 = [v86 fieldMatch:v98 fieldRegex:v99];

  NSString v101 = sub_100222260();
  id v102 = [v91 TPPBPolicyKeyViewMappingWithView:v101 matchingRule:v100];

  v85[6] = v102;
  NSString v103 = sub_100222260();
  NSString v104 = sub_100222260();
  id v105 = [v86 fieldMatch:v103 fieldRegex:v104];

  NSString v106 = sub_100222260();
  id v107 = [v91 TPPBPolicyKeyViewMappingWithView:v106 matchingRule:v105];

  v85[7] = v107;
  NSString v108 = sub_100222260();
  NSString v109 = sub_100222260();
  id v110 = [v86 fieldMatch:v108 fieldRegex:v109];

  NSString v111 = sub_100222260();
  id v112 = [v91 TPPBPolicyKeyViewMappingWithView:v111 matchingRule:v110];

  v85[8] = v112;
  NSString v113 = sub_100222260();
  NSString v114 = sub_100222260();
  id v115 = [v86 fieldMatch:v113 fieldRegex:v114];

  NSString v116 = sub_100222260();
  id v117 = [v91 TPPBPolicyKeyViewMappingWithView:v116 matchingRule:v115];

  v85[9] = v117;
  NSString v118 = sub_100222260();
  NSString v119 = sub_100222260();
  id v120 = [v86 fieldMatch:v118 fieldRegex:v119];

  NSString v121 = sub_100222260();
  id v122 = [v91 TPPBPolicyKeyViewMappingWithView:v121 matchingRule:v120];

  v85[10] = v122;
  uint64_t v123 = swift_allocObject();
  *(_OWORD *)(v123 + 16) = xmmword_100229680;
  NSString v124 = sub_100222260();
  NSString v125 = sub_100222260();
  id v126 = [v86 fieldMatch:v124 fieldRegex:v125];

  *(void *)(v123 + 32) = v126;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v86 fieldMatch:v127 fieldRegex:v128];

  *(void *)(v123 + 40) = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v86 fieldMatch:v130 fieldRegex:v131];

  *(void *)(v123 + 48) = v132;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v133 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v134 = [v86 orMatch:v133];

  NSString v135 = sub_100222260();
  id v136 = [v91 TPPBPolicyKeyViewMappingWithView:v135 matchingRule:v134];

  v270 = v85;
  v85[11] = v136;
  NSString v137 = sub_100222260();
  NSString v138 = sub_100222260();
  id v139 = [v86 fieldMatch:v137 fieldRegex:v138];

  NSString v140 = sub_100222260();
  id v141 = [v91 TPPBPolicyKeyViewMappingWithView:v140 matchingRule:v139];

  v85[12] = v141;
  uint64_t v142 = swift_allocObject();
  *(_OWORD *)(v142 + 16) = xmmword_1002296B0;
  uint64_t v143 = swift_allocObject();
  *(_OWORD *)(v143 + 16) = xmmword_1002296D0;
  NSString v144 = sub_100222260();
  NSString v145 = sub_100222260();
  id v146 = [v86 fieldMatch:v144 fieldRegex:v145];

  *(void *)(v143 + 32) = v146;
  NSString v147 = sub_100222260();
  NSString v148 = sub_100222260();
  id v149 = [v86 fieldMatch:v147 fieldRegex:v148];

  *(void *)(v143 + 40) = v149;
  sub_1002223E0();
  Class v150 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v151 = [v86 andMatch:v150];

  *(void *)(v142 + 32) = v151;
  uint64_t v152 = swift_allocObject();
  *(_OWORD *)(v152 + 16) = xmmword_1002296D0;
  NSString v153 = sub_100222260();
  NSString v154 = sub_100222260();
  id v155 = [v86 fieldMatch:v153 fieldRegex:v154];

  *(void *)(v152 + 32) = v155;
  NSString v156 = sub_100222260();
  NSString v157 = sub_100222260();
  id v158 = [v86 fieldMatch:v156 fieldRegex:v157];

  *(void *)(v152 + 40) = v158;
  sub_1002223E0();
  Class v159 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v160 = [v86 andMatch:v159];

  *(void *)(v142 + 40) = v160;
  NSString v161 = sub_100222260();
  NSString v162 = sub_100222260();
  id v163 = [v86 fieldMatch:v161 fieldRegex:v162];

  *(void *)(v142 + 48) = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v86 fieldMatch:v164 fieldRegex:v165];

  *(void *)(v142 + 56) = v166;
  sub_1002223E0();
  Class v167 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v168 = [v86 orMatch:v167];

  NSString v169 = sub_100222260();
  id v170 = [v91 TPPBPolicyKeyViewMappingWithView:v169 matchingRule:v168];

  v270[13] = v170;
  uint64_t v171 = swift_allocObject();
  *(_OWORD *)(v171 + 16) = xmmword_1002296D0;
  NSString v172 = sub_100222260();
  NSString v173 = sub_100222260();
  id v174 = [v86 fieldMatch:v172 fieldRegex:v173];

  *(void *)(v171 + 32) = v174;
  uint64_t v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = xmmword_100229680;
  NSString v176 = sub_100222260();
  NSString v177 = sub_100222260();
  id v178 = [v86 fieldMatch:v176 fieldRegex:v177];

  *(void *)(v175 + 32) = v178;
  NSString v179 = sub_100222260();
  NSString v180 = sub_100222260();
  id v181 = [v86 fieldMatch:v179 fieldRegex:v180];

  *(void *)(v175 + 40) = v181;
  NSString v182 = sub_100222260();
  NSString v183 = sub_100222260();
  id v184 = [v86 fieldMatch:v182 fieldRegex:v183];

  *(void *)(v175 + 48) = v184;
  sub_1002223E0();
  Class v185 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v186 = [v86 andMatch:v185];

  *(void *)(v171 + 40) = v186;
  sub_1002223E0();
  Class v187 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v188 = [v86 orMatch:v187];

  NSString v189 = sub_100222260();
  id v190 = [v91 TPPBPolicyKeyViewMappingWithView:v189 matchingRule:v188];

  v270[14] = v190;
  uint64_t v191 = swift_allocObject();
  *(_OWORD *)(v191 + 16) = xmmword_1002296F0;
  NSString v192 = sub_100222260();
  NSString v193 = sub_100222260();
  id v194 = [v86 fieldMatch:v192 fieldRegex:v193];

  *(void *)(v191 + 32) = v194;
  NSString v195 = sub_100222260();
  NSString v196 = sub_100222260();
  id v197 = [v86 fieldMatch:v195 fieldRegex:v196];

  *(void *)(v191 + 40) = v197;
  NSString v198 = sub_100222260();
  NSString v199 = sub_100222260();
  id v200 = [v86 fieldMatch:v198 fieldRegex:v199];

  *(void *)(v191 + 48) = v200;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v86 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v191 + 56) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v86 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v191 + 64) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v86 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v191 + 72) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v86 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v191 + 80) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v86 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v191 + 88) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v86 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v191 + 96) = v218;
  NSString v219 = sub_100222260();
  NSString v220 = sub_100222260();
  id v221 = [v86 fieldMatch:v219 fieldRegex:v220];

  *(void *)(v191 + 104) = v221;
  NSString v222 = sub_100222260();
  NSString v223 = sub_100222260();
  id v224 = [v86 fieldMatch:v222 fieldRegex:v223];

  *(void *)(v191 + 112) = v224;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v86 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v191 + 120) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v86 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v191 + 128) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v86 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v191 + 136) = v233;
  sub_1002223E0();
  Class v234 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v235 = [v86 orMatch:v234];

  NSString v236 = sub_100222260();
  id v237 = [v91 TPPBPolicyKeyViewMappingWithView:v236 matchingRule:v235];

  v270[15] = v237;
  NSString v238 = sub_100222260();
  NSString v239 = sub_100222260();
  id v240 = [v86 fieldMatch:v238 fieldRegex:v239];

  NSString v241 = sub_100222260();
  id v242 = [v91 TPPBPolicyKeyViewMappingWithView:v241 matchingRule:v240];

  v270[16] = v242;
  NSString v243 = sub_100222260();
  NSString v244 = sub_100222260();
  id v245 = [v86 fieldMatch:v243 fieldRegex:v244];

  NSString v246 = sub_100222260();
  id v247 = [v91 TPPBPolicyKeyViewMappingWithView:v246 matchingRule:v245];

  v270[17] = v247;
  uint64_t v248 = swift_allocObject();
  *(_OWORD *)(v248 + 16) = xmmword_100229680;
  NSString v249 = sub_100222260();
  NSString v250 = sub_100222260();
  id v251 = [v86 fieldMatch:v249 fieldRegex:v250];

  *(void *)(v248 + 32) = v251;
  NSString v252 = sub_100222260();
  NSString v253 = sub_100222260();
  id v254 = [v86 fieldMatch:v252 fieldRegex:v253];

  *(void *)(v248 + 40) = v254;
  NSString v255 = sub_100222260();
  NSString v256 = sub_100222260();
  id v257 = [v86 fieldMatch:v255 fieldRegex:v256];

  *(void *)(v248 + 48) = v257;
  sub_1002223E0();
  Class v258 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v259 = [v86 orMatch:v258];

  NSString v260 = sub_100222260();
  id v261 = [v91 TPPBPolicyKeyViewMappingWithView:v260 matchingRule:v259];

  v270[18] = v261;
  id v262 = [v86 trueMatch];
  NSString v263 = sub_100222260();
  id v264 = [v91 TPPBPolicyKeyViewMappingWithView:v263 matchingRule:v262];

  v270[19] = v264;
  sub_1002223E0();
  id v265 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(5, v269, v268, v267, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v270, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_100015714()
{
  return 0xD000000000000A70;
}

id sub_100015730()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229700;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  sub_1002223E0();
  uint64_t v268 = v0;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1002296F0;
  NSString v27 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v29 = self;
  id v30 = [v29 TPPBPolicyCategoriesByViewWithView:v27 categories:isa];

  *(void *)(v26 + 32) = v30;
  NSString v31 = sub_100222260();
  Class v32 = sub_1002223B0().super.isa;
  id v33 = [v29 TPPBPolicyCategoriesByViewWithView:v31 categories:v32];

  *(void *)(v26 + 40) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v29 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v26 + 48) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v29 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v26 + 56) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v29 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v26 + 64) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v29 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v26 + 72) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v29 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v26 + 80) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v29 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v26 + 88) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v29 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v26 + 96) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v29 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v26 + 104) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v29 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v26 + 112) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v29 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v26 + 120) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v29 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v26 + 128) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v29 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v26 + 136) = v69;
  sub_1002223E0();
  uint64_t v267 = v26;
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1002296B0;
  NSString v71 = sub_100222260();
  Class v72 = sub_1002223B0().super.isa;
  Class v73 = self;
  id v74 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v71 introducers:v72];

  *(void *)(v70 + 32) = v74;
  NSString v75 = sub_100222260();
  Class v76 = sub_1002223B0().super.isa;
  id v77 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v75 introducers:v76];

  *(void *)(v70 + 40) = v77;
  NSString v78 = sub_100222260();
  Class v79 = sub_1002223B0().super.isa;
  id v80 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v78 introducers:v79];

  *(void *)(v70 + 48) = v80;
  NSString v81 = sub_100222260();
  Class v82 = sub_1002223B0().super.isa;
  id v83 = [v73 TPPBPolicyIntroducersByCategoryWithCategory:v81 introducers:v82];

  *(void *)(v70 + 56) = v83;
  sub_1002223E0();
  uint64_t v266 = v70;
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_1002296C0;
  NSString v85 = self;
  NSString v86 = sub_100222260();
  NSString v87 = sub_100222260();
  id v88 = [v85 fieldMatch:v86 fieldRegex:v87];

  NSString v89 = sub_100222260();
  NSString v90 = self;
  id v91 = [v90 TPPBPolicyKeyViewMappingWithView:v89 matchingRule:v88];

  *(void *)(v84 + 32) = v91;
  NSString v92 = sub_100222260();
  NSString v93 = sub_100222260();
  id v94 = [v85 fieldMatch:v92 fieldRegex:v93];

  NSString v95 = sub_100222260();
  id v96 = [v90 TPPBPolicyKeyViewMappingWithView:v95 matchingRule:v94];

  *(void *)(v84 + 40) = v96;
  NSString v97 = sub_100222260();
  NSString v98 = sub_100222260();
  id v99 = [v85 fieldMatch:v97 fieldRegex:v98];

  NSString v100 = sub_100222260();
  id v101 = [v90 TPPBPolicyKeyViewMappingWithView:v100 matchingRule:v99];

  *(void *)(v84 + 48) = v101;
  NSString v102 = sub_100222260();
  NSString v103 = sub_100222260();
  id v104 = [v85 fieldMatch:v102 fieldRegex:v103];

  NSString v105 = sub_100222260();
  id v106 = [v90 TPPBPolicyKeyViewMappingWithView:v105 matchingRule:v104];

  *(void *)(v84 + 56) = v106;
  NSString v107 = sub_100222260();
  NSString v108 = sub_100222260();
  id v109 = [v85 fieldMatch:v107 fieldRegex:v108];

  NSString v110 = sub_100222260();
  id v111 = [v90 TPPBPolicyKeyViewMappingWithView:v110 matchingRule:v109];

  *(void *)(v84 + 64) = v111;
  NSString v112 = sub_100222260();
  NSString v113 = sub_100222260();
  id v114 = [v85 fieldMatch:v112 fieldRegex:v113];

  NSString v115 = sub_100222260();
  id v116 = [v90 TPPBPolicyKeyViewMappingWithView:v115 matchingRule:v114];

  *(void *)(v84 + 72) = v116;
  NSString v117 = sub_100222260();
  NSString v118 = sub_100222260();
  id v119 = [v85 fieldMatch:v117 fieldRegex:v118];

  NSString v120 = sub_100222260();
  id v121 = [v90 TPPBPolicyKeyViewMappingWithView:v120 matchingRule:v119];

  *(void *)(v84 + 80) = v121;
  uint64_t v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = xmmword_100229680;
  NSString v123 = sub_100222260();
  NSString v124 = sub_100222260();
  id v125 = [v85 fieldMatch:v123 fieldRegex:v124];

  *(void *)(v122 + 32) = v125;
  NSString v126 = sub_100222260();
  NSString v127 = sub_100222260();
  id v128 = [v85 fieldMatch:v126 fieldRegex:v127];

  *(void *)(v122 + 40) = v128;
  NSString v129 = sub_100222260();
  NSString v130 = sub_100222260();
  id v131 = [v85 fieldMatch:v129 fieldRegex:v130];

  *(void *)(v122 + 48) = v131;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v132 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v133 = [v85 orMatch:v132];

  NSString v134 = sub_100222260();
  id v135 = [v90 TPPBPolicyKeyViewMappingWithView:v134 matchingRule:v133];

  uint64_t v269 = (void *)v84;
  *(void *)(v84 + 88) = v135;
  NSString v136 = sub_100222260();
  NSString v137 = sub_100222260();
  id v138 = [v85 fieldMatch:v136 fieldRegex:v137];

  NSString v139 = sub_100222260();
  id v140 = [v90 TPPBPolicyKeyViewMappingWithView:v139 matchingRule:v138];

  *(void *)(v84 + 96) = v140;
  uint64_t v141 = swift_allocObject();
  *(_OWORD *)(v141 + 16) = xmmword_1002296B0;
  uint64_t v142 = swift_allocObject();
  *(_OWORD *)(v142 + 16) = xmmword_1002296D0;
  NSString v143 = sub_100222260();
  NSString v144 = sub_100222260();
  id v145 = [v85 fieldMatch:v143 fieldRegex:v144];

  *(void *)(v142 + 32) = v145;
  NSString v146 = sub_100222260();
  NSString v147 = sub_100222260();
  id v148 = [v85 fieldMatch:v146 fieldRegex:v147];

  *(void *)(v142 + 40) = v148;
  sub_1002223E0();
  Class v149 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v150 = [v85 andMatch:v149];

  *(void *)(v141 + 32) = v150;
  uint64_t v151 = swift_allocObject();
  *(_OWORD *)(v151 + 16) = xmmword_1002296D0;
  NSString v152 = sub_100222260();
  NSString v153 = sub_100222260();
  id v154 = [v85 fieldMatch:v152 fieldRegex:v153];

  *(void *)(v151 + 32) = v154;
  NSString v155 = sub_100222260();
  NSString v156 = sub_100222260();
  id v157 = [v85 fieldMatch:v155 fieldRegex:v156];

  *(void *)(v151 + 40) = v157;
  sub_1002223E0();
  Class v158 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v159 = [v85 andMatch:v158];

  *(void *)(v141 + 40) = v159;
  NSString v160 = sub_100222260();
  NSString v161 = sub_100222260();
  id v162 = [v85 fieldMatch:v160 fieldRegex:v161];

  *(void *)(v141 + 48) = v162;
  NSString v163 = sub_100222260();
  NSString v164 = sub_100222260();
  id v165 = [v85 fieldMatch:v163 fieldRegex:v164];

  *(void *)(v141 + 56) = v165;
  sub_1002223E0();
  Class v166 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v167 = [v85 orMatch:v166];

  NSString v168 = sub_100222260();
  id v169 = [v90 TPPBPolicyKeyViewMappingWithView:v168 matchingRule:v167];

  v269[13] = v169;
  uint64_t v170 = swift_allocObject();
  *(_OWORD *)(v170 + 16) = xmmword_1002296D0;
  NSString v171 = sub_100222260();
  NSString v172 = sub_100222260();
  id v173 = [v85 fieldMatch:v171 fieldRegex:v172];

  *(void *)(v170 + 32) = v173;
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = xmmword_100229680;
  NSString v175 = sub_100222260();
  NSString v176 = sub_100222260();
  id v177 = [v85 fieldMatch:v175 fieldRegex:v176];

  *(void *)(v174 + 32) = v177;
  NSString v178 = sub_100222260();
  NSString v179 = sub_100222260();
  id v180 = [v85 fieldMatch:v178 fieldRegex:v179];

  *(void *)(v174 + 40) = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v85 fieldMatch:v181 fieldRegex:v182];

  *(void *)(v174 + 48) = v183;
  sub_1002223E0();
  Class v184 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v185 = [v85 andMatch:v184];

  *(void *)(v170 + 40) = v185;
  sub_1002223E0();
  Class v186 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v187 = [v85 orMatch:v186];

  NSString v188 = sub_100222260();
  id v189 = [v90 TPPBPolicyKeyViewMappingWithView:v188 matchingRule:v187];

  v269[14] = v189;
  uint64_t v190 = swift_allocObject();
  *(_OWORD *)(v190 + 16) = xmmword_1002296F0;
  NSString v191 = sub_100222260();
  NSString v192 = sub_100222260();
  id v193 = [v85 fieldMatch:v191 fieldRegex:v192];

  *(void *)(v190 + 32) = v193;
  NSString v194 = sub_100222260();
  NSString v195 = sub_100222260();
  id v196 = [v85 fieldMatch:v194 fieldRegex:v195];

  *(void *)(v190 + 40) = v196;
  NSString v197 = sub_100222260();
  NSString v198 = sub_100222260();
  id v199 = [v85 fieldMatch:v197 fieldRegex:v198];

  *(void *)(v190 + 48) = v199;
  NSString v200 = sub_100222260();
  NSString v201 = sub_100222260();
  id v202 = [v85 fieldMatch:v200 fieldRegex:v201];

  *(void *)(v190 + 56) = v202;
  NSString v203 = sub_100222260();
  NSString v204 = sub_100222260();
  id v205 = [v85 fieldMatch:v203 fieldRegex:v204];

  *(void *)(v190 + 64) = v205;
  NSString v206 = sub_100222260();
  NSString v207 = sub_100222260();
  id v208 = [v85 fieldMatch:v206 fieldRegex:v207];

  *(void *)(v190 + 72) = v208;
  NSString v209 = sub_100222260();
  NSString v210 = sub_100222260();
  id v211 = [v85 fieldMatch:v209 fieldRegex:v210];

  *(void *)(v190 + 80) = v211;
  NSString v212 = sub_100222260();
  NSString v213 = sub_100222260();
  id v214 = [v85 fieldMatch:v212 fieldRegex:v213];

  *(void *)(v190 + 88) = v214;
  NSString v215 = sub_100222260();
  NSString v216 = sub_100222260();
  id v217 = [v85 fieldMatch:v215 fieldRegex:v216];

  *(void *)(v190 + 96) = v217;
  NSString v218 = sub_100222260();
  NSString v219 = sub_100222260();
  id v220 = [v85 fieldMatch:v218 fieldRegex:v219];

  *(void *)(v190 + 104) = v220;
  NSString v221 = sub_100222260();
  NSString v222 = sub_100222260();
  id v223 = [v85 fieldMatch:v221 fieldRegex:v222];

  *(void *)(v190 + 112) = v223;
  NSString v224 = sub_100222260();
  NSString v225 = sub_100222260();
  id v226 = [v85 fieldMatch:v224 fieldRegex:v225];

  *(void *)(v190 + 120) = v226;
  NSString v227 = sub_100222260();
  NSString v228 = sub_100222260();
  id v229 = [v85 fieldMatch:v227 fieldRegex:v228];

  *(void *)(v190 + 128) = v229;
  NSString v230 = sub_100222260();
  NSString v231 = sub_100222260();
  id v232 = [v85 fieldMatch:v230 fieldRegex:v231];

  *(void *)(v190 + 136) = v232;
  sub_1002223E0();
  Class v233 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v234 = [v85 orMatch:v233];

  NSString v235 = sub_100222260();
  id v236 = [v90 TPPBPolicyKeyViewMappingWithView:v235 matchingRule:v234];

  v269[15] = v236;
  NSString v237 = sub_100222260();
  NSString v238 = sub_100222260();
  id v239 = [v85 fieldMatch:v237 fieldRegex:v238];

  NSString v240 = sub_100222260();
  id v241 = [v90 TPPBPolicyKeyViewMappingWithView:v240 matchingRule:v239];

  v269[16] = v241;
  NSString v242 = sub_100222260();
  NSString v243 = sub_100222260();
  id v244 = [v85 fieldMatch:v242 fieldRegex:v243];

  NSString v245 = sub_100222260();
  id v246 = [v90 TPPBPolicyKeyViewMappingWithView:v245 matchingRule:v244];

  v269[17] = v246;
  uint64_t v247 = swift_allocObject();
  *(_OWORD *)(v247 + 16) = xmmword_100229680;
  NSString v248 = sub_100222260();
  NSString v249 = sub_100222260();
  id v250 = [v85 fieldMatch:v248 fieldRegex:v249];

  *(void *)(v247 + 32) = v250;
  NSString v251 = sub_100222260();
  NSString v252 = sub_100222260();
  id v253 = [v85 fieldMatch:v251 fieldRegex:v252];

  *(void *)(v247 + 40) = v253;
  NSString v254 = sub_100222260();
  NSString v255 = sub_100222260();
  id v256 = [v85 fieldMatch:v254 fieldRegex:v255];

  *(void *)(v247 + 48) = v256;
  sub_1002223E0();
  Class v257 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v258 = [v85 orMatch:v257];

  NSString v259 = sub_100222260();
  id v260 = [v90 TPPBPolicyKeyViewMappingWithView:v259 matchingRule:v258];

  v269[18] = v260;
  id v261 = [v85 trueMatch];
  NSString v262 = sub_100222260();
  id v263 = [v90 TPPBPolicyKeyViewMappingWithView:v262 matchingRule:v261];

  v269[19] = v263;
  sub_1002223E0();
  id v264 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(6, v268, v267, v266, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v269, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_1000179C4()
{
  return 0xD000000000000A90;
}

id sub_1000179E0()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229700;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  sub_1002223E0();
  uint64_t v272 = v0;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1002296A0;
  NSString v27 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v29 = self;
  id v30 = [v29 TPPBPolicyCategoriesByViewWithView:v27 categories:isa];

  *(void *)(v26 + 32) = v30;
  NSString v31 = sub_100222260();
  Class v32 = sub_1002223B0().super.isa;
  id v33 = [v29 TPPBPolicyCategoriesByViewWithView:v31 categories:v32];

  *(void *)(v26 + 40) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v29 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v26 + 48) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v29 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v26 + 56) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v29 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v26 + 64) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v29 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v26 + 72) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v29 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v26 + 80) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v29 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v26 + 88) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v29 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v26 + 96) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v29 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v26 + 104) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v29 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v26 + 112) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v29 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v26 + 120) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v29 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v26 + 128) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v29 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v26 + 136) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v29 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v26 + 144) = v72;
  sub_1002223E0();
  uint64_t v271 = v26;
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1002296B0;
  NSString v74 = sub_100222260();
  Class v75 = sub_1002223B0().super.isa;
  Class v76 = self;
  id v77 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v74 introducers:v75];

  *(void *)(v73 + 32) = v77;
  NSString v78 = sub_100222260();
  Class v79 = sub_1002223B0().super.isa;
  id v80 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v78 introducers:v79];

  *(void *)(v73 + 40) = v80;
  NSString v81 = sub_100222260();
  Class v82 = sub_1002223B0().super.isa;
  id v83 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v81 introducers:v82];

  *(void *)(v73 + 48) = v83;
  NSString v84 = sub_100222260();
  Class v85 = sub_1002223B0().super.isa;
  id v86 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v84 introducers:v85];

  *(void *)(v73 + 56) = v86;
  sub_1002223E0();
  uint64_t v270 = v73;
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_1002296C0;
  id v88 = (void *)v87;
  NSString v89 = self;
  NSString v90 = sub_100222260();
  NSString v91 = sub_100222260();
  id v92 = [v89 fieldMatch:v90 fieldRegex:v91];

  NSString v93 = sub_100222260();
  id v94 = self;
  id v95 = [v94 TPPBPolicyKeyViewMappingWithView:v93 matchingRule:v92];

  v88[4] = v95;
  NSString v96 = sub_100222260();
  NSString v97 = sub_100222260();
  id v98 = [v89 fieldMatch:v96 fieldRegex:v97];

  NSString v99 = sub_100222260();
  id v100 = [v94 TPPBPolicyKeyViewMappingWithView:v99 matchingRule:v98];

  v88[5] = v100;
  NSString v101 = sub_100222260();
  NSString v102 = sub_100222260();
  id v103 = [v89 fieldMatch:v101 fieldRegex:v102];

  NSString v104 = sub_100222260();
  id v105 = [v94 TPPBPolicyKeyViewMappingWithView:v104 matchingRule:v103];

  v88[6] = v105;
  NSString v106 = sub_100222260();
  NSString v107 = sub_100222260();
  id v108 = [v89 fieldMatch:v106 fieldRegex:v107];

  NSString v109 = sub_100222260();
  id v110 = [v94 TPPBPolicyKeyViewMappingWithView:v109 matchingRule:v108];

  v88[7] = v110;
  NSString v111 = sub_100222260();
  NSString v112 = sub_100222260();
  id v113 = [v89 fieldMatch:v111 fieldRegex:v112];

  NSString v114 = sub_100222260();
  id v115 = [v94 TPPBPolicyKeyViewMappingWithView:v114 matchingRule:v113];

  v88[8] = v115;
  NSString v116 = sub_100222260();
  NSString v117 = sub_100222260();
  id v118 = [v89 fieldMatch:v116 fieldRegex:v117];

  NSString v119 = sub_100222260();
  id v120 = [v94 TPPBPolicyKeyViewMappingWithView:v119 matchingRule:v118];

  v88[9] = v120;
  NSString v121 = sub_100222260();
  NSString v122 = sub_100222260();
  id v123 = [v89 fieldMatch:v121 fieldRegex:v122];

  NSString v124 = sub_100222260();
  id v125 = [v94 TPPBPolicyKeyViewMappingWithView:v124 matchingRule:v123];

  v88[10] = v125;
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_100229680;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v89 fieldMatch:v127 fieldRegex:v128];

  *(void *)(v126 + 32) = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v89 fieldMatch:v130 fieldRegex:v131];

  *(void *)(v126 + 40) = v132;
  NSString v133 = sub_100222260();
  NSString v134 = sub_100222260();
  id v135 = [v89 fieldMatch:v133 fieldRegex:v134];

  *(void *)(v126 + 48) = v135;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v136 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v137 = [v89 orMatch:v136];

  NSString v138 = sub_100222260();
  id v139 = [v94 TPPBPolicyKeyViewMappingWithView:v138 matchingRule:v137];

  v273 = v88;
  v88[11] = v139;
  NSString v140 = sub_100222260();
  NSString v141 = sub_100222260();
  id v142 = [v89 fieldMatch:v140 fieldRegex:v141];

  NSString v143 = sub_100222260();
  id v144 = [v94 TPPBPolicyKeyViewMappingWithView:v143 matchingRule:v142];

  v88[12] = v144;
  uint64_t v145 = swift_allocObject();
  *(_OWORD *)(v145 + 16) = xmmword_1002296B0;
  uint64_t v146 = swift_allocObject();
  *(_OWORD *)(v146 + 16) = xmmword_1002296D0;
  NSString v147 = sub_100222260();
  NSString v148 = sub_100222260();
  id v149 = [v89 fieldMatch:v147 fieldRegex:v148];

  *(void *)(v146 + 32) = v149;
  NSString v150 = sub_100222260();
  NSString v151 = sub_100222260();
  id v152 = [v89 fieldMatch:v150 fieldRegex:v151];

  *(void *)(v146 + 40) = v152;
  sub_1002223E0();
  Class v153 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v154 = [v89 andMatch:v153];

  *(void *)(v145 + 32) = v154;
  uint64_t v155 = swift_allocObject();
  *(_OWORD *)(v155 + 16) = xmmword_1002296D0;
  NSString v156 = sub_100222260();
  NSString v157 = sub_100222260();
  id v158 = [v89 fieldMatch:v156 fieldRegex:v157];

  *(void *)(v155 + 32) = v158;
  NSString v159 = sub_100222260();
  NSString v160 = sub_100222260();
  id v161 = [v89 fieldMatch:v159 fieldRegex:v160];

  *(void *)(v155 + 40) = v161;
  sub_1002223E0();
  Class v162 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v163 = [v89 andMatch:v162];

  *(void *)(v145 + 40) = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v89 fieldMatch:v164 fieldRegex:v165];

  *(void *)(v145 + 48) = v166;
  NSString v167 = sub_100222260();
  NSString v168 = sub_100222260();
  id v169 = [v89 fieldMatch:v167 fieldRegex:v168];

  *(void *)(v145 + 56) = v169;
  sub_1002223E0();
  Class v170 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v171 = [v89 orMatch:v170];

  NSString v172 = sub_100222260();
  id v173 = [v94 TPPBPolicyKeyViewMappingWithView:v172 matchingRule:v171];

  v273[13] = v173;
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = xmmword_1002296D0;
  NSString v175 = sub_100222260();
  NSString v176 = sub_100222260();
  id v177 = [v89 fieldMatch:v175 fieldRegex:v176];

  *(void *)(v174 + 32) = v177;
  uint64_t v178 = swift_allocObject();
  *(_OWORD *)(v178 + 16) = xmmword_100229680;
  NSString v179 = sub_100222260();
  NSString v180 = sub_100222260();
  id v181 = [v89 fieldMatch:v179 fieldRegex:v180];

  *(void *)(v178 + 32) = v181;
  NSString v182 = sub_100222260();
  NSString v183 = sub_100222260();
  id v184 = [v89 fieldMatch:v182 fieldRegex:v183];

  *(void *)(v178 + 40) = v184;
  NSString v185 = sub_100222260();
  NSString v186 = sub_100222260();
  id v187 = [v89 fieldMatch:v185 fieldRegex:v186];

  *(void *)(v178 + 48) = v187;
  sub_1002223E0();
  Class v188 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v189 = [v89 andMatch:v188];

  *(void *)(v174 + 40) = v189;
  sub_1002223E0();
  Class v190 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v191 = [v89 orMatch:v190];

  NSString v192 = sub_100222260();
  id v193 = [v94 TPPBPolicyKeyViewMappingWithView:v192 matchingRule:v191];

  v273[14] = v193;
  uint64_t v194 = swift_allocObject();
  *(_OWORD *)(v194 + 16) = xmmword_1002296F0;
  NSString v195 = sub_100222260();
  NSString v196 = sub_100222260();
  id v197 = [v89 fieldMatch:v195 fieldRegex:v196];

  *(void *)(v194 + 32) = v197;
  NSString v198 = sub_100222260();
  NSString v199 = sub_100222260();
  id v200 = [v89 fieldMatch:v198 fieldRegex:v199];

  *(void *)(v194 + 40) = v200;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v89 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v194 + 48) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v89 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v194 + 56) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v89 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v194 + 64) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v89 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v194 + 72) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v89 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v194 + 80) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v89 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v194 + 88) = v218;
  NSString v219 = sub_100222260();
  NSString v220 = sub_100222260();
  id v221 = [v89 fieldMatch:v219 fieldRegex:v220];

  *(void *)(v194 + 96) = v221;
  NSString v222 = sub_100222260();
  NSString v223 = sub_100222260();
  id v224 = [v89 fieldMatch:v222 fieldRegex:v223];

  *(void *)(v194 + 104) = v224;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v89 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v194 + 112) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v89 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v194 + 120) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v89 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v194 + 128) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v89 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v194 + 136) = v236;
  sub_1002223E0();
  Class v237 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v238 = [v89 orMatch:v237];

  NSString v239 = sub_100222260();
  id v240 = [v94 TPPBPolicyKeyViewMappingWithView:v239 matchingRule:v238];

  v273[15] = v240;
  NSString v241 = sub_100222260();
  NSString v242 = sub_100222260();
  id v243 = [v89 fieldMatch:v241 fieldRegex:v242];

  NSString v244 = sub_100222260();
  id v245 = [v94 TPPBPolicyKeyViewMappingWithView:v244 matchingRule:v243];

  v273[16] = v245;
  NSString v246 = sub_100222260();
  NSString v247 = sub_100222260();
  id v248 = [v89 fieldMatch:v246 fieldRegex:v247];

  NSString v249 = sub_100222260();
  id v250 = [v94 TPPBPolicyKeyViewMappingWithView:v249 matchingRule:v248];

  v273[17] = v250;
  uint64_t v251 = swift_allocObject();
  *(_OWORD *)(v251 + 16) = xmmword_100229680;
  NSString v252 = sub_100222260();
  NSString v253 = sub_100222260();
  id v254 = [v89 fieldMatch:v252 fieldRegex:v253];

  *(void *)(v251 + 32) = v254;
  NSString v255 = sub_100222260();
  NSString v256 = sub_100222260();
  id v257 = [v89 fieldMatch:v255 fieldRegex:v256];

  *(void *)(v251 + 40) = v257;
  NSString v258 = sub_100222260();
  NSString v259 = sub_100222260();
  id v260 = [v89 fieldMatch:v258 fieldRegex:v259];

  *(void *)(v251 + 48) = v260;
  sub_1002223E0();
  Class v261 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v262 = [v89 orMatch:v261];

  NSString v263 = sub_100222260();
  id v264 = [v94 TPPBPolicyKeyViewMappingWithView:v263 matchingRule:v262];

  v273[18] = v264;
  id v265 = [v89 trueMatch];
  NSString v266 = sub_100222260();
  id v267 = [v94 TPPBPolicyKeyViewMappingWithView:v266 matchingRule:v265];

  v273[19] = v267;
  sub_1002223E0();
  id v268 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(7, v272, v271, v270, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v273, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_100019CDC()
{
  return 0xD000000000000BC0;
}

id sub_100019CF8()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229700;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  sub_1002223E0();
  uint64_t v291 = v0;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1002296A0;
  NSString v27 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v29 = self;
  id v30 = [v29 TPPBPolicyCategoriesByViewWithView:v27 categories:isa];

  *(void *)(v26 + 32) = v30;
  NSString v31 = sub_100222260();
  Class v32 = sub_1002223B0().super.isa;
  id v33 = [v29 TPPBPolicyCategoriesByViewWithView:v31 categories:v32];

  *(void *)(v26 + 40) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v29 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v26 + 48) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v29 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v26 + 56) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v29 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v26 + 64) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v29 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v26 + 72) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v29 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v26 + 80) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v29 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v26 + 88) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v29 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v26 + 96) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v29 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v26 + 104) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v29 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v26 + 112) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v29 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v26 + 120) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v29 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v26 + 128) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v29 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v26 + 136) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v29 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v26 + 144) = v72;
  sub_1002223E0();
  uint64_t v290 = v26;
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1002296B0;
  NSString v74 = sub_100222260();
  Class v75 = sub_1002223B0().super.isa;
  Class v76 = self;
  id v77 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v74 introducers:v75];

  *(void *)(v73 + 32) = v77;
  NSString v78 = sub_100222260();
  Class v79 = sub_1002223B0().super.isa;
  id v80 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v78 introducers:v79];

  *(void *)(v73 + 40) = v80;
  NSString v81 = sub_100222260();
  Class v82 = sub_1002223B0().super.isa;
  id v83 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v81 introducers:v82];

  *(void *)(v73 + 48) = v83;
  NSString v84 = sub_100222260();
  Class v85 = sub_1002223B0().super.isa;
  id v86 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v84 introducers:v85];

  *(void *)(v73 + 56) = v86;
  sub_1002223E0();
  uint64_t v289 = v73;
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_1002296C0;
  id v88 = (void *)v87;
  NSString v89 = self;
  NSString v90 = sub_100222260();
  NSString v91 = sub_100222260();
  id v92 = [v89 fieldMatch:v90 fieldRegex:v91];

  NSString v93 = sub_100222260();
  id v94 = self;
  id v95 = [v94 TPPBPolicyKeyViewMappingWithView:v93 matchingRule:v92];

  v88[4] = v95;
  NSString v96 = sub_100222260();
  NSString v97 = sub_100222260();
  id v98 = [v89 fieldMatch:v96 fieldRegex:v97];

  NSString v99 = sub_100222260();
  id v100 = [v94 TPPBPolicyKeyViewMappingWithView:v99 matchingRule:v98];

  v88[5] = v100;
  NSString v101 = sub_100222260();
  NSString v102 = sub_100222260();
  id v103 = [v89 fieldMatch:v101 fieldRegex:v102];

  NSString v104 = sub_100222260();
  id v105 = [v94 TPPBPolicyKeyViewMappingWithView:v104 matchingRule:v103];

  v88[6] = v105;
  NSString v106 = sub_100222260();
  NSString v107 = sub_100222260();
  id v108 = [v89 fieldMatch:v106 fieldRegex:v107];

  NSString v109 = sub_100222260();
  id v110 = [v94 TPPBPolicyKeyViewMappingWithView:v109 matchingRule:v108];

  v88[7] = v110;
  NSString v111 = sub_100222260();
  NSString v112 = sub_100222260();
  id v113 = [v89 fieldMatch:v111 fieldRegex:v112];

  NSString v114 = sub_100222260();
  id v115 = [v94 TPPBPolicyKeyViewMappingWithView:v114 matchingRule:v113];

  v88[8] = v115;
  NSString v116 = sub_100222260();
  NSString v117 = sub_100222260();
  id v118 = [v89 fieldMatch:v116 fieldRegex:v117];

  NSString v119 = sub_100222260();
  id v120 = [v94 TPPBPolicyKeyViewMappingWithView:v119 matchingRule:v118];

  v88[9] = v120;
  NSString v121 = sub_100222260();
  NSString v122 = sub_100222260();
  id v123 = [v89 fieldMatch:v121 fieldRegex:v122];

  NSString v124 = sub_100222260();
  id v125 = [v94 TPPBPolicyKeyViewMappingWithView:v124 matchingRule:v123];

  v88[10] = v125;
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_100229680;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v89 fieldMatch:v127 fieldRegex:v128];

  *(void *)(v126 + 32) = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v89 fieldMatch:v130 fieldRegex:v131];

  *(void *)(v126 + 40) = v132;
  NSString v133 = sub_100222260();
  NSString v134 = sub_100222260();
  id v135 = [v89 fieldMatch:v133 fieldRegex:v134];

  *(void *)(v126 + 48) = v135;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v136 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v137 = [v89 orMatch:v136];

  NSString v138 = sub_100222260();
  id v139 = [v94 TPPBPolicyKeyViewMappingWithView:v138 matchingRule:v137];

  uint64_t v288 = (uint64_t)v88;
  v88[11] = v139;
  NSString v140 = sub_100222260();
  NSString v141 = sub_100222260();
  id v142 = [v89 fieldMatch:v140 fieldRegex:v141];

  NSString v143 = sub_100222260();
  id v144 = [v94 TPPBPolicyKeyViewMappingWithView:v143 matchingRule:v142];

  v88[12] = v144;
  uint64_t v145 = swift_allocObject();
  *(_OWORD *)(v145 + 16) = xmmword_1002296B0;
  uint64_t v146 = swift_allocObject();
  *(_OWORD *)(v146 + 16) = xmmword_1002296D0;
  NSString v147 = sub_100222260();
  NSString v148 = sub_100222260();
  id v149 = [v89 fieldMatch:v147 fieldRegex:v148];

  *(void *)(v146 + 32) = v149;
  NSString v150 = sub_100222260();
  NSString v151 = sub_100222260();
  id v152 = [v89 fieldMatch:v150 fieldRegex:v151];

  *(void *)(v146 + 40) = v152;
  sub_1002223E0();
  Class v153 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v154 = [v89 andMatch:v153];

  *(void *)(v145 + 32) = v154;
  uint64_t v155 = swift_allocObject();
  *(_OWORD *)(v155 + 16) = xmmword_1002296D0;
  NSString v156 = sub_100222260();
  NSString v157 = sub_100222260();
  id v158 = [v89 fieldMatch:v156 fieldRegex:v157];

  *(void *)(v155 + 32) = v158;
  NSString v159 = sub_100222260();
  NSString v160 = sub_100222260();
  id v161 = [v89 fieldMatch:v159 fieldRegex:v160];

  *(void *)(v155 + 40) = v161;
  sub_1002223E0();
  Class v162 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v163 = [v89 andMatch:v162];

  *(void *)(v145 + 40) = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v89 fieldMatch:v164 fieldRegex:v165];

  *(void *)(v145 + 48) = v166;
  NSString v167 = sub_100222260();
  NSString v168 = sub_100222260();
  id v169 = [v89 fieldMatch:v167 fieldRegex:v168];

  *(void *)(v145 + 56) = v169;
  sub_1002223E0();
  Class v170 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v171 = [v89 orMatch:v170];

  NSString v172 = sub_100222260();
  id v173 = [v94 TPPBPolicyKeyViewMappingWithView:v172 matchingRule:v171];

  v88[13] = v173;
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = xmmword_1002296D0;
  NSString v175 = sub_100222260();
  NSString v176 = sub_100222260();
  id v177 = [v89 fieldMatch:v175 fieldRegex:v176];

  *(void *)(v174 + 32) = v177;
  uint64_t v178 = swift_allocObject();
  *(_OWORD *)(v178 + 16) = xmmword_100229680;
  NSString v179 = sub_100222260();
  NSString v180 = sub_100222260();
  id v181 = [v89 fieldMatch:v179 fieldRegex:v180];

  *(void *)(v178 + 32) = v181;
  NSString v182 = sub_100222260();
  NSString v183 = sub_100222260();
  id v184 = [v89 fieldMatch:v182 fieldRegex:v183];

  *(void *)(v178 + 40) = v184;
  NSString v185 = sub_100222260();
  NSString v186 = sub_100222260();
  id v187 = [v89 fieldMatch:v185 fieldRegex:v186];

  *(void *)(v178 + 48) = v187;
  sub_1002223E0();
  Class v188 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v189 = [v89 andMatch:v188];

  *(void *)(v174 + 40) = v189;
  sub_1002223E0();
  Class v190 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v191 = [v89 orMatch:v190];

  NSString v192 = sub_100222260();
  id v193 = [v94 TPPBPolicyKeyViewMappingWithView:v192 matchingRule:v191];

  v88[14] = v193;
  uint64_t v194 = swift_allocObject();
  *(_OWORD *)(v194 + 16) = xmmword_1002296F0;
  NSString v195 = sub_100222260();
  NSString v196 = sub_100222260();
  id v197 = [v89 fieldMatch:v195 fieldRegex:v196];

  *(void *)(v194 + 32) = v197;
  NSString v198 = sub_100222260();
  NSString v199 = sub_100222260();
  id v200 = [v89 fieldMatch:v198 fieldRegex:v199];

  *(void *)(v194 + 40) = v200;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v89 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v194 + 48) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v89 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v194 + 56) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v89 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v194 + 64) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v89 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v194 + 72) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v89 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v194 + 80) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v89 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v194 + 88) = v218;
  NSString v219 = sub_100222260();
  NSString v220 = sub_100222260();
  id v221 = [v89 fieldMatch:v219 fieldRegex:v220];

  *(void *)(v194 + 96) = v221;
  NSString v222 = sub_100222260();
  NSString v223 = sub_100222260();
  id v224 = [v89 fieldMatch:v222 fieldRegex:v223];

  *(void *)(v194 + 104) = v224;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v89 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v194 + 112) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v89 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v194 + 120) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v89 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v194 + 128) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v89 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v194 + 136) = v236;
  sub_1002223E0();
  Class v237 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v238 = [v89 orMatch:v237];

  NSString v239 = sub_100222260();
  id v240 = [v94 TPPBPolicyKeyViewMappingWithView:v239 matchingRule:v238];

  v88[15] = v240;
  uint64_t v241 = swift_allocObject();
  *(_OWORD *)(v241 + 16) = xmmword_1002296D0;
  NSString v242 = sub_100222260();
  NSString v243 = sub_100222260();
  id v244 = [v89 fieldMatch:v242 fieldRegex:v243];

  *(void *)(v241 + 32) = v244;
  NSString v245 = sub_100222260();
  NSString v246 = sub_100222260();
  id v247 = [v89 fieldMatch:v245 fieldRegex:v246];

  *(void *)(v241 + 40) = v247;
  sub_1002223E0();
  Class v248 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v249 = [v89 orMatch:v248];

  NSString v250 = sub_100222260();
  id v251 = [v94 TPPBPolicyKeyViewMappingWithView:v250 matchingRule:v249];

  v88[16] = v251;
  uint64_t v252 = swift_allocObject();
  *(_OWORD *)(v252 + 16) = xmmword_1002296B0;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v89 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v252 + 32) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v89 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v252 + 40) = v258;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v89 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v252 + 48) = v261;
  NSString v262 = sub_100222260();
  NSString v263 = sub_100222260();
  id v264 = [v89 fieldMatch:v262 fieldRegex:v263];

  *(void *)(v252 + 56) = v264;
  sub_1002223E0();
  Class v265 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v266 = [v89 orMatch:v265];

  NSString v267 = sub_100222260();
  id v268 = [v94 TPPBPolicyKeyViewMappingWithView:v267 matchingRule:v266];

  v88[17] = v268;
  uint64_t v269 = swift_allocObject();
  *(_OWORD *)(v269 + 16) = xmmword_100229680;
  NSString v270 = sub_100222260();
  NSString v271 = sub_100222260();
  id v272 = [v89 fieldMatch:v270 fieldRegex:v271];

  *(void *)(v269 + 32) = v272;
  NSString v273 = sub_100222260();
  NSString v274 = sub_100222260();
  id v275 = [v89 fieldMatch:v273 fieldRegex:v274];

  *(void *)(v269 + 40) = v275;
  NSString v276 = sub_100222260();
  NSString v277 = sub_100222260();
  id v278 = [v89 fieldMatch:v276 fieldRegex:v277];

  *(void *)(v269 + 48) = v278;
  sub_1002223E0();
  Class v279 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v280 = [v89 orMatch:v279];

  NSString v281 = sub_100222260();
  id v282 = [v94 TPPBPolicyKeyViewMappingWithView:v281 matchingRule:v280];

  *(void *)(v288 + 144) = v282;
  id v283 = [v89 trueMatch];
  NSString v284 = sub_100222260();
  id v285 = [v94 TPPBPolicyKeyViewMappingWithView:v284 matchingRule:v283];

  *(void *)(v288 + 152) = v285;
  sub_1002223E0();
  id v286 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(8, v291, v290, v289, (uint64_t)&_swiftEmptyArrayStorage, v288, (uint64_t)&off_10027BFF0, (uint64_t)&off_10027C060, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_10001C28C()
{
  return 0xD000000000000C30;
}

id sub_10001C2A8()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229700;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  sub_1002223E0();
  uint64_t v293 = v0;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1002296A0;
  NSString v27 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v29 = self;
  id v30 = [v29 TPPBPolicyCategoriesByViewWithView:v27 categories:isa];

  *(void *)(v26 + 32) = v30;
  NSString v31 = sub_100222260();
  Class v32 = sub_1002223B0().super.isa;
  id v33 = [v29 TPPBPolicyCategoriesByViewWithView:v31 categories:v32];

  *(void *)(v26 + 40) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v29 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v26 + 48) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v29 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v26 + 56) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v29 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v26 + 64) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v29 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v26 + 72) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v29 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v26 + 80) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v29 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v26 + 88) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v29 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v26 + 96) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v29 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v26 + 104) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v29 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v26 + 112) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v29 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v26 + 120) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v29 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v26 + 128) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v29 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v26 + 136) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v29 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v26 + 144) = v72;
  sub_1002223E0();
  uint64_t v292 = v26;
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1002296B0;
  NSString v74 = sub_100222260();
  Class v75 = sub_1002223B0().super.isa;
  Class v76 = self;
  id v77 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v74 introducers:v75];

  *(void *)(v73 + 32) = v77;
  NSString v78 = sub_100222260();
  Class v79 = sub_1002223B0().super.isa;
  id v80 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v78 introducers:v79];

  *(void *)(v73 + 40) = v80;
  NSString v81 = sub_100222260();
  Class v82 = sub_1002223B0().super.isa;
  id v83 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v81 introducers:v82];

  *(void *)(v73 + 48) = v83;
  NSString v84 = sub_100222260();
  Class v85 = sub_1002223B0().super.isa;
  id v86 = [v76 TPPBPolicyIntroducersByCategoryWithCategory:v84 introducers:v85];

  *(void *)(v73 + 56) = v86;
  sub_1002223E0();
  uint64_t v291 = v73;
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_1002296C0;
  id v88 = (void *)v87;
  NSString v89 = self;
  NSString v90 = sub_100222260();
  NSString v91 = sub_100222260();
  id v92 = [v89 fieldMatch:v90 fieldRegex:v91];

  NSString v93 = sub_100222260();
  id v94 = self;
  id v95 = [v94 TPPBPolicyKeyViewMappingWithView:v93 matchingRule:v92];

  v88[4] = v95;
  NSString v96 = sub_100222260();
  NSString v97 = sub_100222260();
  id v98 = [v89 fieldMatch:v96 fieldRegex:v97];

  NSString v99 = sub_100222260();
  id v100 = [v94 TPPBPolicyKeyViewMappingWithView:v99 matchingRule:v98];

  v88[5] = v100;
  NSString v101 = sub_100222260();
  NSString v102 = sub_100222260();
  id v103 = [v89 fieldMatch:v101 fieldRegex:v102];

  NSString v104 = sub_100222260();
  id v105 = [v94 TPPBPolicyKeyViewMappingWithView:v104 matchingRule:v103];

  v88[6] = v105;
  NSString v106 = sub_100222260();
  NSString v107 = sub_100222260();
  id v108 = [v89 fieldMatch:v106 fieldRegex:v107];

  NSString v109 = sub_100222260();
  id v110 = [v94 TPPBPolicyKeyViewMappingWithView:v109 matchingRule:v108];

  v88[7] = v110;
  NSString v111 = sub_100222260();
  NSString v112 = sub_100222260();
  id v113 = [v89 fieldMatch:v111 fieldRegex:v112];

  NSString v114 = sub_100222260();
  id v115 = [v94 TPPBPolicyKeyViewMappingWithView:v114 matchingRule:v113];

  v88[8] = v115;
  NSString v116 = sub_100222260();
  NSString v117 = sub_100222260();
  id v118 = [v89 fieldMatch:v116 fieldRegex:v117];

  NSString v119 = sub_100222260();
  id v120 = [v94 TPPBPolicyKeyViewMappingWithView:v119 matchingRule:v118];

  v88[9] = v120;
  NSString v121 = sub_100222260();
  NSString v122 = sub_100222260();
  id v123 = [v89 fieldMatch:v121 fieldRegex:v122];

  NSString v124 = sub_100222260();
  id v125 = [v94 TPPBPolicyKeyViewMappingWithView:v124 matchingRule:v123];

  v88[10] = v125;
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_100229680;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v89 fieldMatch:v127 fieldRegex:v128];

  *(void *)(v126 + 32) = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v89 fieldMatch:v130 fieldRegex:v131];

  *(void *)(v126 + 40) = v132;
  NSString v133 = sub_100222260();
  NSString v134 = sub_100222260();
  id v135 = [v89 fieldMatch:v133 fieldRegex:v134];

  *(void *)(v126 + 48) = v135;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v136 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v137 = [v89 orMatch:v136];

  NSString v138 = sub_100222260();
  id v139 = [v94 TPPBPolicyKeyViewMappingWithView:v138 matchingRule:v137];

  uint64_t v294 = (uint64_t)v88;
  v88[11] = v139;
  NSString v140 = sub_100222260();
  NSString v141 = sub_100222260();
  id v142 = [v89 fieldMatch:v140 fieldRegex:v141];

  NSString v143 = sub_100222260();
  id v144 = [v94 TPPBPolicyKeyViewMappingWithView:v143 matchingRule:v142];

  v88[12] = v144;
  uint64_t v145 = swift_allocObject();
  *(_OWORD *)(v145 + 16) = xmmword_1002296B0;
  uint64_t v146 = swift_allocObject();
  *(_OWORD *)(v146 + 16) = xmmword_1002296D0;
  NSString v147 = sub_100222260();
  NSString v148 = sub_100222260();
  id v149 = [v89 fieldMatch:v147 fieldRegex:v148];

  *(void *)(v146 + 32) = v149;
  NSString v150 = sub_100222260();
  NSString v151 = sub_100222260();
  id v152 = [v89 fieldMatch:v150 fieldRegex:v151];

  *(void *)(v146 + 40) = v152;
  sub_1002223E0();
  Class v153 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v154 = [v89 andMatch:v153];

  *(void *)(v145 + 32) = v154;
  uint64_t v155 = swift_allocObject();
  *(_OWORD *)(v155 + 16) = xmmword_1002296D0;
  NSString v156 = sub_100222260();
  NSString v157 = sub_100222260();
  id v158 = [v89 fieldMatch:v156 fieldRegex:v157];

  *(void *)(v155 + 32) = v158;
  NSString v159 = sub_100222260();
  NSString v160 = sub_100222260();
  id v161 = [v89 fieldMatch:v159 fieldRegex:v160];

  *(void *)(v155 + 40) = v161;
  sub_1002223E0();
  Class v162 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v163 = [v89 andMatch:v162];

  *(void *)(v145 + 40) = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v89 fieldMatch:v164 fieldRegex:v165];

  *(void *)(v145 + 48) = v166;
  NSString v167 = sub_100222260();
  NSString v168 = sub_100222260();
  id v169 = [v89 fieldMatch:v167 fieldRegex:v168];

  *(void *)(v145 + 56) = v169;
  sub_1002223E0();
  Class v170 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v171 = [v89 orMatch:v170];

  NSString v172 = sub_100222260();
  id v173 = [v94 TPPBPolicyKeyViewMappingWithView:v172 matchingRule:v171];

  v88[13] = v173;
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = xmmword_1002296D0;
  NSString v175 = sub_100222260();
  NSString v176 = sub_100222260();
  id v177 = [v89 fieldMatch:v175 fieldRegex:v176];

  *(void *)(v174 + 32) = v177;
  uint64_t v178 = swift_allocObject();
  *(_OWORD *)(v178 + 16) = xmmword_100229680;
  NSString v179 = sub_100222260();
  NSString v180 = sub_100222260();
  id v181 = [v89 fieldMatch:v179 fieldRegex:v180];

  *(void *)(v178 + 32) = v181;
  NSString v182 = sub_100222260();
  NSString v183 = sub_100222260();
  id v184 = [v89 fieldMatch:v182 fieldRegex:v183];

  *(void *)(v178 + 40) = v184;
  NSString v185 = sub_100222260();
  NSString v186 = sub_100222260();
  id v187 = [v89 fieldMatch:v185 fieldRegex:v186];

  *(void *)(v178 + 48) = v187;
  sub_1002223E0();
  Class v188 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v189 = [v89 andMatch:v188];

  *(void *)(v174 + 40) = v189;
  sub_1002223E0();
  Class v190 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v191 = [v89 orMatch:v190];

  NSString v192 = sub_100222260();
  id v193 = [v94 TPPBPolicyKeyViewMappingWithView:v192 matchingRule:v191];

  v88[14] = v193;
  uint64_t v194 = swift_allocObject();
  *(_OWORD *)(v194 + 16) = xmmword_1002296F0;
  NSString v195 = sub_100222260();
  NSString v196 = sub_100222260();
  id v197 = [v89 fieldMatch:v195 fieldRegex:v196];

  *(void *)(v194 + 32) = v197;
  NSString v198 = sub_100222260();
  NSString v199 = sub_100222260();
  id v200 = [v89 fieldMatch:v198 fieldRegex:v199];

  *(void *)(v194 + 40) = v200;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v89 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v194 + 48) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v89 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v194 + 56) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v89 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v194 + 64) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v89 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v194 + 72) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v89 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v194 + 80) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v89 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v194 + 88) = v218;
  NSString v219 = sub_100222260();
  NSString v220 = sub_100222260();
  id v221 = [v89 fieldMatch:v219 fieldRegex:v220];

  *(void *)(v194 + 96) = v221;
  NSString v222 = sub_100222260();
  NSString v223 = sub_100222260();
  id v224 = [v89 fieldMatch:v222 fieldRegex:v223];

  *(void *)(v194 + 104) = v224;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v89 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v194 + 112) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v89 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v194 + 120) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v89 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v194 + 128) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v89 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v194 + 136) = v236;
  sub_1002223E0();
  Class v237 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v238 = [v89 orMatch:v237];

  NSString v239 = sub_100222260();
  id v240 = [v94 TPPBPolicyKeyViewMappingWithView:v239 matchingRule:v238];

  v88[15] = v240;
  uint64_t v241 = swift_allocObject();
  *(_OWORD *)(v241 + 16) = xmmword_1002296D0;
  NSString v242 = sub_100222260();
  NSString v243 = sub_100222260();
  id v244 = [v89 fieldMatch:v242 fieldRegex:v243];

  *(void *)(v241 + 32) = v244;
  NSString v245 = sub_100222260();
  NSString v246 = sub_100222260();
  id v247 = [v89 fieldMatch:v245 fieldRegex:v246];

  *(void *)(v241 + 40) = v247;
  sub_1002223E0();
  Class v248 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v249 = [v89 orMatch:v248];

  NSString v250 = sub_100222260();
  id v251 = [v94 TPPBPolicyKeyViewMappingWithView:v250 matchingRule:v249];

  v88[16] = v251;
  uint64_t v252 = swift_allocObject();
  *(_OWORD *)(v252 + 16) = xmmword_100229710;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v89 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v252 + 32) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v89 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v252 + 40) = v258;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v89 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v252 + 48) = v261;
  NSString v262 = sub_100222260();
  NSString v263 = sub_100222260();
  id v264 = [v89 fieldMatch:v262 fieldRegex:v263];

  *(void *)(v252 + 56) = v264;
  NSString v265 = sub_100222260();
  NSString v266 = sub_100222260();
  id v267 = [v89 fieldMatch:v265 fieldRegex:v266];

  *(void *)(v252 + 64) = v267;
  sub_1002223E0();
  Class v268 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v269 = [v89 orMatch:v268];

  NSString v270 = sub_100222260();
  id v271 = [v94 TPPBPolicyKeyViewMappingWithView:v270 matchingRule:v269];

  v88[17] = v271;
  uint64_t v272 = swift_allocObject();
  *(_OWORD *)(v272 + 16) = xmmword_100229680;
  NSString v273 = sub_100222260();
  NSString v274 = sub_100222260();
  id v275 = [v89 fieldMatch:v273 fieldRegex:v274];

  *(void *)(v272 + 32) = v275;
  NSString v276 = sub_100222260();
  NSString v277 = sub_100222260();
  id v278 = [v89 fieldMatch:v276 fieldRegex:v277];

  *(void *)(v272 + 40) = v278;
  NSString v279 = sub_100222260();
  NSString v280 = sub_100222260();
  id v281 = [v89 fieldMatch:v279 fieldRegex:v280];

  *(void *)(v272 + 48) = v281;
  sub_1002223E0();
  Class v282 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v283 = [v89 orMatch:v282];

  NSString v284 = sub_100222260();
  id v285 = [v94 TPPBPolicyKeyViewMappingWithView:v284 matchingRule:v283];

  *(void *)(v294 + 144) = v285;
  id v286 = [v89 trueMatch];
  NSString v287 = sub_100222260();
  id v288 = [v94 TPPBPolicyKeyViewMappingWithView:v287 matchingRule:v286];

  *(void *)(v294 + 152) = v288;
  sub_1002223E0();
  id v289 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(9, v293, v292, v291, (uint64_t)&_swiftEmptyArrayStorage, v294, (uint64_t)&off_10027C5F0, (uint64_t)&off_10027C660, (uint64_t)&off_10027C690, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_10001E8A4()
{
  return 0xD000000000000C8CLL;
}

id sub_10001E8C0()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v299 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1002296A0;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  sub_1002223E0();
  uint64_t v298 = v29;
  uint64_t v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = xmmword_100229710;
  NSString v77 = sub_100222260();
  Class v78 = sub_1002223B0().super.isa;
  Class v79 = self;
  id v80 = [v79 TPPBPolicyIntroducersByCategoryWithCategory:v77 introducers:v78];

  *(void *)(v76 + 32) = v80;
  NSString v81 = sub_100222260();
  Class v82 = sub_1002223B0().super.isa;
  id v83 = [v79 TPPBPolicyIntroducersByCategoryWithCategory:v81 introducers:v82];

  *(void *)(v76 + 40) = v83;
  NSString v84 = sub_100222260();
  Class v85 = sub_1002223B0().super.isa;
  id v86 = [v79 TPPBPolicyIntroducersByCategoryWithCategory:v84 introducers:v85];

  *(void *)(v76 + 48) = v86;
  NSString v87 = sub_100222260();
  Class v88 = sub_1002223B0().super.isa;
  id v89 = [v79 TPPBPolicyIntroducersByCategoryWithCategory:v87 introducers:v88];

  *(void *)(v76 + 56) = v89;
  NSString v90 = sub_100222260();
  Class v91 = sub_1002223B0().super.isa;
  id v92 = [v79 TPPBPolicyIntroducersByCategoryWithCategory:v90 introducers:v91];

  *(void *)(v76 + 64) = v92;
  sub_1002223E0();
  uint64_t v297 = v76;
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1002296C0;
  id v94 = (void *)v93;
  id v95 = self;
  NSString v96 = sub_100222260();
  NSString v97 = sub_100222260();
  id v98 = [v95 fieldMatch:v96 fieldRegex:v97];

  NSString v99 = sub_100222260();
  id v100 = self;
  id v101 = [v100 TPPBPolicyKeyViewMappingWithView:v99 matchingRule:v98];

  v94[4] = v101;
  NSString v102 = sub_100222260();
  NSString v103 = sub_100222260();
  id v104 = [v95 fieldMatch:v102 fieldRegex:v103];

  NSString v105 = sub_100222260();
  id v106 = [v100 TPPBPolicyKeyViewMappingWithView:v105 matchingRule:v104];

  v94[5] = v106;
  NSString v107 = sub_100222260();
  NSString v108 = sub_100222260();
  id v109 = [v95 fieldMatch:v107 fieldRegex:v108];

  NSString v110 = sub_100222260();
  id v111 = [v100 TPPBPolicyKeyViewMappingWithView:v110 matchingRule:v109];

  v94[6] = v111;
  NSString v112 = sub_100222260();
  NSString v113 = sub_100222260();
  id v114 = [v95 fieldMatch:v112 fieldRegex:v113];

  NSString v115 = sub_100222260();
  id v116 = [v100 TPPBPolicyKeyViewMappingWithView:v115 matchingRule:v114];

  v94[7] = v116;
  NSString v117 = sub_100222260();
  NSString v118 = sub_100222260();
  id v119 = [v95 fieldMatch:v117 fieldRegex:v118];

  NSString v120 = sub_100222260();
  id v121 = [v100 TPPBPolicyKeyViewMappingWithView:v120 matchingRule:v119];

  v94[8] = v121;
  NSString v122 = sub_100222260();
  NSString v123 = sub_100222260();
  id v124 = [v95 fieldMatch:v122 fieldRegex:v123];

  NSString v125 = sub_100222260();
  id v126 = [v100 TPPBPolicyKeyViewMappingWithView:v125 matchingRule:v124];

  v94[9] = v126;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v95 fieldMatch:v127 fieldRegex:v128];

  NSString v130 = sub_100222260();
  id v131 = [v100 TPPBPolicyKeyViewMappingWithView:v130 matchingRule:v129];

  v94[10] = v131;
  uint64_t v132 = swift_allocObject();
  *(_OWORD *)(v132 + 16) = xmmword_100229680;
  NSString v133 = sub_100222260();
  NSString v134 = sub_100222260();
  id v135 = [v95 fieldMatch:v133 fieldRegex:v134];

  *(void *)(v132 + 32) = v135;
  NSString v136 = sub_100222260();
  NSString v137 = sub_100222260();
  id v138 = [v95 fieldMatch:v136 fieldRegex:v137];

  *(void *)(v132 + 40) = v138;
  NSString v139 = sub_100222260();
  NSString v140 = sub_100222260();
  id v141 = [v95 fieldMatch:v139 fieldRegex:v140];

  *(void *)(v132 + 48) = v141;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v142 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v143 = [v95 orMatch:v142];

  NSString v144 = sub_100222260();
  id v145 = [v100 TPPBPolicyKeyViewMappingWithView:v144 matchingRule:v143];

  uint64_t v300 = (uint64_t)v94;
  v94[11] = v145;
  NSString v146 = sub_100222260();
  NSString v147 = sub_100222260();
  id v148 = [v95 fieldMatch:v146 fieldRegex:v147];

  NSString v149 = sub_100222260();
  id v150 = [v100 TPPBPolicyKeyViewMappingWithView:v149 matchingRule:v148];

  v94[12] = v150;
  uint64_t v151 = swift_allocObject();
  *(_OWORD *)(v151 + 16) = xmmword_1002296B0;
  uint64_t v152 = swift_allocObject();
  *(_OWORD *)(v152 + 16) = xmmword_1002296D0;
  NSString v153 = sub_100222260();
  NSString v154 = sub_100222260();
  id v155 = [v95 fieldMatch:v153 fieldRegex:v154];

  *(void *)(v152 + 32) = v155;
  NSString v156 = sub_100222260();
  NSString v157 = sub_100222260();
  id v158 = [v95 fieldMatch:v156 fieldRegex:v157];

  *(void *)(v152 + 40) = v158;
  sub_1002223E0();
  Class v159 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v160 = [v95 andMatch:v159];

  *(void *)(v151 + 32) = v160;
  uint64_t v161 = swift_allocObject();
  *(_OWORD *)(v161 + 16) = xmmword_1002296D0;
  NSString v162 = sub_100222260();
  NSString v163 = sub_100222260();
  id v164 = [v95 fieldMatch:v162 fieldRegex:v163];

  *(void *)(v161 + 32) = v164;
  NSString v165 = sub_100222260();
  NSString v166 = sub_100222260();
  id v167 = [v95 fieldMatch:v165 fieldRegex:v166];

  *(void *)(v161 + 40) = v167;
  sub_1002223E0();
  Class v168 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v169 = [v95 andMatch:v168];

  *(void *)(v151 + 40) = v169;
  NSString v170 = sub_100222260();
  NSString v171 = sub_100222260();
  id v172 = [v95 fieldMatch:v170 fieldRegex:v171];

  *(void *)(v151 + 48) = v172;
  NSString v173 = sub_100222260();
  NSString v174 = sub_100222260();
  id v175 = [v95 fieldMatch:v173 fieldRegex:v174];

  *(void *)(v151 + 56) = v175;
  sub_1002223E0();
  Class v176 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v177 = [v95 orMatch:v176];

  NSString v178 = sub_100222260();
  id v179 = [v100 TPPBPolicyKeyViewMappingWithView:v178 matchingRule:v177];

  v94[13] = v179;
  uint64_t v180 = swift_allocObject();
  *(_OWORD *)(v180 + 16) = xmmword_1002296D0;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v95 fieldMatch:v181 fieldRegex:v182];

  *(void *)(v180 + 32) = v183;
  uint64_t v184 = swift_allocObject();
  *(_OWORD *)(v184 + 16) = xmmword_100229680;
  NSString v185 = sub_100222260();
  NSString v186 = sub_100222260();
  id v187 = [v95 fieldMatch:v185 fieldRegex:v186];

  *(void *)(v184 + 32) = v187;
  NSString v188 = sub_100222260();
  NSString v189 = sub_100222260();
  id v190 = [v95 fieldMatch:v188 fieldRegex:v189];

  *(void *)(v184 + 40) = v190;
  NSString v191 = sub_100222260();
  NSString v192 = sub_100222260();
  id v193 = [v95 fieldMatch:v191 fieldRegex:v192];

  *(void *)(v184 + 48) = v193;
  sub_1002223E0();
  Class v194 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v195 = [v95 andMatch:v194];

  *(void *)(v180 + 40) = v195;
  sub_1002223E0();
  Class v196 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v197 = [v95 orMatch:v196];

  NSString v198 = sub_100222260();
  id v199 = [v100 TPPBPolicyKeyViewMappingWithView:v198 matchingRule:v197];

  v94[14] = v199;
  uint64_t v200 = swift_allocObject();
  *(_OWORD *)(v200 + 16) = xmmword_1002296F0;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v95 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v200 + 32) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v95 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v200 + 40) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v95 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v200 + 48) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v95 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v200 + 56) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v95 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v200 + 64) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v95 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v200 + 72) = v218;
  NSString v219 = sub_100222260();
  NSString v220 = sub_100222260();
  id v221 = [v95 fieldMatch:v219 fieldRegex:v220];

  *(void *)(v200 + 80) = v221;
  NSString v222 = sub_100222260();
  NSString v223 = sub_100222260();
  id v224 = [v95 fieldMatch:v222 fieldRegex:v223];

  *(void *)(v200 + 88) = v224;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v95 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v200 + 96) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v95 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v200 + 104) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v95 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v200 + 112) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v95 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v200 + 120) = v236;
  NSString v237 = sub_100222260();
  NSString v238 = sub_100222260();
  id v239 = [v95 fieldMatch:v237 fieldRegex:v238];

  *(void *)(v200 + 128) = v239;
  NSString v240 = sub_100222260();
  NSString v241 = sub_100222260();
  id v242 = [v95 fieldMatch:v240 fieldRegex:v241];

  *(void *)(v200 + 136) = v242;
  sub_1002223E0();
  Class v243 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v244 = [v95 orMatch:v243];

  NSString v245 = sub_100222260();
  id v246 = [v100 TPPBPolicyKeyViewMappingWithView:v245 matchingRule:v244];

  v94[15] = v246;
  uint64_t v247 = swift_allocObject();
  *(_OWORD *)(v247 + 16) = xmmword_1002296D0;
  NSString v248 = sub_100222260();
  NSString v249 = sub_100222260();
  id v250 = [v95 fieldMatch:v248 fieldRegex:v249];

  *(void *)(v247 + 32) = v250;
  NSString v251 = sub_100222260();
  NSString v252 = sub_100222260();
  id v253 = [v95 fieldMatch:v251 fieldRegex:v252];

  *(void *)(v247 + 40) = v253;
  sub_1002223E0();
  Class v254 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v255 = [v95 orMatch:v254];

  NSString v256 = sub_100222260();
  id v257 = [v100 TPPBPolicyKeyViewMappingWithView:v256 matchingRule:v255];

  v94[16] = v257;
  uint64_t v258 = swift_allocObject();
  *(_OWORD *)(v258 + 16) = xmmword_100229710;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v95 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v258 + 32) = v261;
  NSString v262 = sub_100222260();
  NSString v263 = sub_100222260();
  id v264 = [v95 fieldMatch:v262 fieldRegex:v263];

  *(void *)(v258 + 40) = v264;
  NSString v265 = sub_100222260();
  NSString v266 = sub_100222260();
  id v267 = [v95 fieldMatch:v265 fieldRegex:v266];

  *(void *)(v258 + 48) = v267;
  NSString v268 = sub_100222260();
  NSString v269 = sub_100222260();
  id v270 = [v95 fieldMatch:v268 fieldRegex:v269];

  *(void *)(v258 + 56) = v270;
  NSString v271 = sub_100222260();
  NSString v272 = sub_100222260();
  id v273 = [v95 fieldMatch:v271 fieldRegex:v272];

  *(void *)(v258 + 64) = v273;
  sub_1002223E0();
  Class v274 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v275 = [v95 orMatch:v274];

  NSString v276 = sub_100222260();
  id v277 = [v100 TPPBPolicyKeyViewMappingWithView:v276 matchingRule:v275];

  v94[17] = v277;
  uint64_t v278 = swift_allocObject();
  *(_OWORD *)(v278 + 16) = xmmword_100229680;
  NSString v279 = sub_100222260();
  NSString v280 = sub_100222260();
  id v281 = [v95 fieldMatch:v279 fieldRegex:v280];

  *(void *)(v278 + 32) = v281;
  NSString v282 = sub_100222260();
  NSString v283 = sub_100222260();
  id v284 = [v95 fieldMatch:v282 fieldRegex:v283];

  *(void *)(v278 + 40) = v284;
  NSString v285 = sub_100222260();
  NSString v286 = sub_100222260();
  id v287 = [v95 fieldMatch:v285 fieldRegex:v286];

  *(void *)(v278 + 48) = v287;
  sub_1002223E0();
  Class v288 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v289 = [v95 orMatch:v288];

  NSString v290 = sub_100222260();
  id v291 = [v100 TPPBPolicyKeyViewMappingWithView:v290 matchingRule:v289];

  *(void *)(v300 + 144) = v291;
  id v292 = [v95 trueMatch];
  NSString v293 = sub_100222260();
  id v294 = [v100 TPPBPolicyKeyViewMappingWithView:v293 matchingRule:v292];

  *(void *)(v300 + 152) = v294;
  sub_1002223E0();
  id v295 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(10, v299, v298, v297, (uint64_t)&_swiftEmptyArrayStorage, v300, (uint64_t)&off_10027CCA0, (uint64_t)&off_10027CD10, (uint64_t)&off_10027CD40, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_100020F78()
{
  return 0xD000000000000CC8;
}

id sub_100020F94()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v308 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1002296C0;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v32 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v29 + 152) = v78;
  sub_1002223E0();
  uint64_t v307 = v29;
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_100229710;
  NSString v80 = sub_100222260();
  Class v81 = sub_1002223B0().super.isa;
  Class v82 = self;
  id v83 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v80 introducers:v81];

  *(void *)(v79 + 32) = v83;
  NSString v84 = sub_100222260();
  Class v85 = sub_1002223B0().super.isa;
  id v86 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v84 introducers:v85];

  *(void *)(v79 + 40) = v86;
  NSString v87 = sub_100222260();
  Class v88 = sub_1002223B0().super.isa;
  id v89 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v87 introducers:v88];

  *(void *)(v79 + 48) = v89;
  NSString v90 = sub_100222260();
  Class v91 = sub_1002223B0().super.isa;
  id v92 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v90 introducers:v91];

  *(void *)(v79 + 56) = v92;
  NSString v93 = sub_100222260();
  Class v94 = sub_1002223B0().super.isa;
  id v95 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v93 introducers:v94];

  *(void *)(v79 + 64) = v95;
  sub_1002223E0();
  uint64_t v306 = v79;
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = xmmword_100229730;
  NSString v97 = (void *)v96;
  id v98 = self;
  NSString v99 = sub_100222260();
  NSString v100 = sub_100222260();
  id v101 = [v98 fieldMatch:v99 fieldRegex:v100];

  NSString v102 = sub_100222260();
  NSString v103 = self;
  id v104 = [v103 TPPBPolicyKeyViewMappingWithView:v102 matchingRule:v101];

  v97[4] = v104;
  NSString v105 = sub_100222260();
  NSString v106 = sub_100222260();
  id v107 = [v98 fieldMatch:v105 fieldRegex:v106];

  NSString v108 = sub_100222260();
  id v109 = [v103 TPPBPolicyKeyViewMappingWithView:v108 matchingRule:v107];

  v97[5] = v109;
  NSString v110 = sub_100222260();
  NSString v111 = sub_100222260();
  id v112 = [v98 fieldMatch:v110 fieldRegex:v111];

  NSString v113 = sub_100222260();
  id v114 = [v103 TPPBPolicyKeyViewMappingWithView:v113 matchingRule:v112];

  v97[6] = v114;
  NSString v115 = sub_100222260();
  NSString v116 = sub_100222260();
  id v117 = [v98 fieldMatch:v115 fieldRegex:v116];

  NSString v118 = sub_100222260();
  id v119 = [v103 TPPBPolicyKeyViewMappingWithView:v118 matchingRule:v117];

  v97[7] = v119;
  NSString v120 = sub_100222260();
  NSString v121 = sub_100222260();
  id v122 = [v98 fieldMatch:v120 fieldRegex:v121];

  NSString v123 = sub_100222260();
  id v124 = [v103 TPPBPolicyKeyViewMappingWithView:v123 matchingRule:v122];

  v97[8] = v124;
  NSString v125 = sub_100222260();
  NSString v126 = sub_100222260();
  id v127 = [v98 fieldMatch:v125 fieldRegex:v126];

  NSString v128 = sub_100222260();
  id v129 = [v103 TPPBPolicyKeyViewMappingWithView:v128 matchingRule:v127];

  v97[9] = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v98 fieldMatch:v130 fieldRegex:v131];

  NSString v133 = sub_100222260();
  id v134 = [v103 TPPBPolicyKeyViewMappingWithView:v133 matchingRule:v132];

  v97[10] = v134;
  uint64_t v135 = swift_allocObject();
  *(_OWORD *)(v135 + 16) = xmmword_100229680;
  NSString v136 = sub_100222260();
  NSString v137 = sub_100222260();
  id v138 = [v98 fieldMatch:v136 fieldRegex:v137];

  *(void *)(v135 + 32) = v138;
  NSString v139 = sub_100222260();
  NSString v140 = sub_100222260();
  id v141 = [v98 fieldMatch:v139 fieldRegex:v140];

  *(void *)(v135 + 40) = v141;
  NSString v142 = sub_100222260();
  NSString v143 = sub_100222260();
  id v144 = [v98 fieldMatch:v142 fieldRegex:v143];

  *(void *)(v135 + 48) = v144;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v145 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v146 = [v98 orMatch:v145];

  NSString v147 = sub_100222260();
  id v148 = [v103 TPPBPolicyKeyViewMappingWithView:v147 matchingRule:v146];

  v97[11] = v148;
  NSString v149 = sub_100222260();
  NSString v150 = sub_100222260();
  id v151 = [v98 fieldMatch:v149 fieldRegex:v150];

  NSString v152 = sub_100222260();
  id v153 = [v103 TPPBPolicyKeyViewMappingWithView:v152 matchingRule:v151];

  v97[12] = v153;
  NSString v154 = sub_100222260();
  NSString v155 = sub_100222260();
  id v156 = [v98 fieldMatch:v154 fieldRegex:v155];

  NSString v157 = sub_100222260();
  id v158 = [v103 TPPBPolicyKeyViewMappingWithView:v157 matchingRule:v156];

  v97[13] = v158;
  uint64_t v159 = swift_allocObject();
  *(_OWORD *)(v159 + 16) = xmmword_1002296B0;
  uint64_t v160 = swift_allocObject();
  *(_OWORD *)(v160 + 16) = xmmword_1002296D0;
  NSString v161 = sub_100222260();
  NSString v162 = sub_100222260();
  id v163 = [v98 fieldMatch:v161 fieldRegex:v162];

  *(void *)(v160 + 32) = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v98 fieldMatch:v164 fieldRegex:v165];

  *(void *)(v160 + 40) = v166;
  sub_1002223E0();
  Class v167 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v168 = [v98 andMatch:v167];

  *(void *)(v159 + 32) = v168;
  uint64_t v169 = swift_allocObject();
  *(_OWORD *)(v169 + 16) = xmmword_1002296D0;
  NSString v170 = sub_100222260();
  NSString v171 = sub_100222260();
  id v172 = [v98 fieldMatch:v170 fieldRegex:v171];

  *(void *)(v169 + 32) = v172;
  NSString v173 = sub_100222260();
  NSString v174 = sub_100222260();
  id v175 = [v98 fieldMatch:v173 fieldRegex:v174];

  *(void *)(v169 + 40) = v175;
  sub_1002223E0();
  Class v176 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v177 = [v98 andMatch:v176];

  *(void *)(v159 + 40) = v177;
  NSString v178 = sub_100222260();
  NSString v179 = sub_100222260();
  id v180 = [v98 fieldMatch:v178 fieldRegex:v179];

  *(void *)(v159 + 48) = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v98 fieldMatch:v181 fieldRegex:v182];

  *(void *)(v159 + 56) = v183;
  sub_1002223E0();
  Class v184 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v185 = [v98 orMatch:v184];

  NSString v186 = sub_100222260();
  id v187 = [v103 TPPBPolicyKeyViewMappingWithView:v186 matchingRule:v185];

  uint64_t v188 = (uint64_t)v97;
  v97[14] = v187;
  uint64_t v189 = swift_allocObject();
  *(_OWORD *)(v189 + 16) = xmmword_1002296D0;
  NSString v190 = sub_100222260();
  NSString v191 = sub_100222260();
  id v192 = [v98 fieldMatch:v190 fieldRegex:v191];

  *(void *)(v189 + 32) = v192;
  uint64_t v193 = swift_allocObject();
  *(_OWORD *)(v193 + 16) = xmmword_100229680;
  NSString v194 = sub_100222260();
  NSString v195 = sub_100222260();
  id v196 = [v98 fieldMatch:v194 fieldRegex:v195];

  *(void *)(v193 + 32) = v196;
  NSString v197 = sub_100222260();
  NSString v198 = sub_100222260();
  id v199 = [v98 fieldMatch:v197 fieldRegex:v198];

  *(void *)(v193 + 40) = v199;
  NSString v200 = sub_100222260();
  NSString v201 = sub_100222260();
  id v202 = [v98 fieldMatch:v200 fieldRegex:v201];

  *(void *)(v193 + 48) = v202;
  sub_1002223E0();
  Class v203 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v204 = [v98 andMatch:v203];

  *(void *)(v189 + 40) = v204;
  sub_1002223E0();
  Class v205 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v206 = [v98 orMatch:v205];

  NSString v207 = sub_100222260();
  id v208 = [v103 TPPBPolicyKeyViewMappingWithView:v207 matchingRule:v206];

  v97[15] = v208;
  uint64_t v209 = swift_allocObject();
  *(_OWORD *)(v209 + 16) = xmmword_1002296F0;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v98 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v209 + 32) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v98 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v209 + 40) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v98 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v209 + 48) = v218;
  NSString v219 = sub_100222260();
  NSString v220 = sub_100222260();
  id v221 = [v98 fieldMatch:v219 fieldRegex:v220];

  *(void *)(v209 + 56) = v221;
  NSString v222 = sub_100222260();
  NSString v223 = sub_100222260();
  id v224 = [v98 fieldMatch:v222 fieldRegex:v223];

  *(void *)(v209 + 64) = v224;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v98 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v209 + 72) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v98 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v209 + 80) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v98 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v209 + 88) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v98 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v209 + 96) = v236;
  NSString v237 = sub_100222260();
  NSString v238 = sub_100222260();
  id v239 = [v98 fieldMatch:v237 fieldRegex:v238];

  *(void *)(v209 + 104) = v239;
  NSString v240 = sub_100222260();
  NSString v241 = sub_100222260();
  id v242 = [v98 fieldMatch:v240 fieldRegex:v241];

  *(void *)(v209 + 112) = v242;
  NSString v243 = sub_100222260();
  NSString v244 = sub_100222260();
  id v245 = [v98 fieldMatch:v243 fieldRegex:v244];

  *(void *)(v209 + 120) = v245;
  NSString v246 = sub_100222260();
  NSString v247 = sub_100222260();
  id v248 = [v98 fieldMatch:v246 fieldRegex:v247];

  *(void *)(v209 + 128) = v248;
  NSString v249 = sub_100222260();
  NSString v250 = sub_100222260();
  id v251 = [v98 fieldMatch:v249 fieldRegex:v250];

  *(void *)(v209 + 136) = v251;
  sub_1002223E0();
  Class v252 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v253 = [v98 orMatch:v252];

  NSString v254 = sub_100222260();
  id v255 = [v103 TPPBPolicyKeyViewMappingWithView:v254 matchingRule:v253];

  v97[16] = v255;
  uint64_t v256 = swift_allocObject();
  *(_OWORD *)(v256 + 16) = xmmword_1002296D0;
  NSString v257 = sub_100222260();
  NSString v258 = sub_100222260();
  id v259 = [v98 fieldMatch:v257 fieldRegex:v258];

  *(void *)(v256 + 32) = v259;
  NSString v260 = sub_100222260();
  NSString v261 = sub_100222260();
  id v262 = [v98 fieldMatch:v260 fieldRegex:v261];

  *(void *)(v256 + 40) = v262;
  sub_1002223E0();
  Class v263 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v264 = [v98 orMatch:v263];

  NSString v265 = sub_100222260();
  id v266 = [v103 TPPBPolicyKeyViewMappingWithView:v265 matchingRule:v264];

  v97[17] = v266;
  uint64_t v267 = swift_allocObject();
  *(_OWORD *)(v267 + 16) = xmmword_100229710;
  NSString v268 = sub_100222260();
  NSString v269 = sub_100222260();
  id v270 = [v98 fieldMatch:v268 fieldRegex:v269];

  *(void *)(v267 + 32) = v270;
  NSString v271 = sub_100222260();
  NSString v272 = sub_100222260();
  id v273 = [v98 fieldMatch:v271 fieldRegex:v272];

  *(void *)(v267 + 40) = v273;
  NSString v274 = sub_100222260();
  NSString v275 = sub_100222260();
  id v276 = [v98 fieldMatch:v274 fieldRegex:v275];

  *(void *)(v267 + 48) = v276;
  NSString v277 = sub_100222260();
  NSString v278 = sub_100222260();
  id v279 = [v98 fieldMatch:v277 fieldRegex:v278];

  *(void *)(v267 + 56) = v279;
  NSString v280 = sub_100222260();
  NSString v281 = sub_100222260();
  id v282 = [v98 fieldMatch:v280 fieldRegex:v281];

  *(void *)(v267 + 64) = v282;
  sub_1002223E0();
  Class v283 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v284 = [v98 orMatch:v283];

  NSString v285 = sub_100222260();
  id v286 = [v103 TPPBPolicyKeyViewMappingWithView:v285 matchingRule:v284];

  v97[18] = v286;
  uint64_t v287 = swift_allocObject();
  *(_OWORD *)(v287 + 16) = xmmword_100229680;
  NSString v288 = sub_100222260();
  NSString v289 = sub_100222260();
  id v290 = [v98 fieldMatch:v288 fieldRegex:v289];

  *(void *)(v287 + 32) = v290;
  NSString v291 = sub_100222260();
  NSString v292 = sub_100222260();
  id v293 = [v98 fieldMatch:v291 fieldRegex:v292];

  *(void *)(v287 + 40) = v293;
  NSString v294 = sub_100222260();
  NSString v295 = sub_100222260();
  id v296 = [v98 fieldMatch:v294 fieldRegex:v295];

  *(void *)(v287 + 48) = v296;
  sub_1002223E0();
  Class v297 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v298 = [v98 orMatch:v297];

  NSString v299 = sub_100222260();
  id v300 = [v103 TPPBPolicyKeyViewMappingWithView:v299 matchingRule:v298];

  *(void *)(v188 + 152) = v300;
  id v301 = [v98 trueMatch];
  NSString v302 = sub_100222260();
  id v303 = [v103 TPPBPolicyKeyViewMappingWithView:v302 matchingRule:v301];

  *(void *)(v188 + 160) = v303;
  sub_1002223E0();
  id v304 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(11, v308, v307, v306, (uint64_t)&_swiftEmptyArrayStorage, v188, (uint64_t)&off_10027D390, (uint64_t)&off_10027D400, (uint64_t)&off_10027D430, (uint64_t)&_swiftEmptyArrayStorage, 1);
}

unint64_t sub_100023728()
{
  return 0xD000000000000CD8;
}

id sub_100023744()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v308 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1002296C0;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v32 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v29 + 152) = v78;
  sub_1002223E0();
  uint64_t v307 = v29;
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_100229710;
  NSString v80 = sub_100222260();
  Class v81 = sub_1002223B0().super.isa;
  Class v82 = self;
  id v83 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v80 introducers:v81];

  *(void *)(v79 + 32) = v83;
  NSString v84 = sub_100222260();
  Class v85 = sub_1002223B0().super.isa;
  id v86 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v84 introducers:v85];

  *(void *)(v79 + 40) = v86;
  NSString v87 = sub_100222260();
  Class v88 = sub_1002223B0().super.isa;
  id v89 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v87 introducers:v88];

  *(void *)(v79 + 48) = v89;
  NSString v90 = sub_100222260();
  Class v91 = sub_1002223B0().super.isa;
  id v92 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v90 introducers:v91];

  *(void *)(v79 + 56) = v92;
  NSString v93 = sub_100222260();
  Class v94 = sub_1002223B0().super.isa;
  id v95 = [v82 TPPBPolicyIntroducersByCategoryWithCategory:v93 introducers:v94];

  *(void *)(v79 + 64) = v95;
  sub_1002223E0();
  uint64_t v306 = v79;
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = xmmword_100229730;
  NSString v97 = (void *)v96;
  id v98 = self;
  NSString v99 = sub_100222260();
  NSString v100 = sub_100222260();
  id v101 = [v98 fieldMatch:v99 fieldRegex:v100];

  NSString v102 = sub_100222260();
  NSString v103 = self;
  id v104 = [v103 TPPBPolicyKeyViewMappingWithView:v102 matchingRule:v101];

  v97[4] = v104;
  NSString v105 = sub_100222260();
  NSString v106 = sub_100222260();
  id v107 = [v98 fieldMatch:v105 fieldRegex:v106];

  NSString v108 = sub_100222260();
  id v109 = [v103 TPPBPolicyKeyViewMappingWithView:v108 matchingRule:v107];

  v97[5] = v109;
  NSString v110 = sub_100222260();
  NSString v111 = sub_100222260();
  id v112 = [v98 fieldMatch:v110 fieldRegex:v111];

  NSString v113 = sub_100222260();
  id v114 = [v103 TPPBPolicyKeyViewMappingWithView:v113 matchingRule:v112];

  v97[6] = v114;
  NSString v115 = sub_100222260();
  NSString v116 = sub_100222260();
  id v117 = [v98 fieldMatch:v115 fieldRegex:v116];

  NSString v118 = sub_100222260();
  id v119 = [v103 TPPBPolicyKeyViewMappingWithView:v118 matchingRule:v117];

  v97[7] = v119;
  NSString v120 = sub_100222260();
  NSString v121 = sub_100222260();
  id v122 = [v98 fieldMatch:v120 fieldRegex:v121];

  NSString v123 = sub_100222260();
  id v124 = [v103 TPPBPolicyKeyViewMappingWithView:v123 matchingRule:v122];

  v97[8] = v124;
  NSString v125 = sub_100222260();
  NSString v126 = sub_100222260();
  id v127 = [v98 fieldMatch:v125 fieldRegex:v126];

  NSString v128 = sub_100222260();
  id v129 = [v103 TPPBPolicyKeyViewMappingWithView:v128 matchingRule:v127];

  v97[9] = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v98 fieldMatch:v130 fieldRegex:v131];

  NSString v133 = sub_100222260();
  id v134 = [v103 TPPBPolicyKeyViewMappingWithView:v133 matchingRule:v132];

  v97[10] = v134;
  uint64_t v135 = swift_allocObject();
  *(_OWORD *)(v135 + 16) = xmmword_100229680;
  NSString v136 = sub_100222260();
  NSString v137 = sub_100222260();
  id v138 = [v98 fieldMatch:v136 fieldRegex:v137];

  *(void *)(v135 + 32) = v138;
  NSString v139 = sub_100222260();
  NSString v140 = sub_100222260();
  id v141 = [v98 fieldMatch:v139 fieldRegex:v140];

  *(void *)(v135 + 40) = v141;
  NSString v142 = sub_100222260();
  NSString v143 = sub_100222260();
  id v144 = [v98 fieldMatch:v142 fieldRegex:v143];

  *(void *)(v135 + 48) = v144;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v145 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v146 = [v98 orMatch:v145];

  NSString v147 = sub_100222260();
  id v148 = [v103 TPPBPolicyKeyViewMappingWithView:v147 matchingRule:v146];

  v97[11] = v148;
  NSString v149 = sub_100222260();
  NSString v150 = sub_100222260();
  id v151 = [v98 fieldMatch:v149 fieldRegex:v150];

  NSString v152 = sub_100222260();
  id v305 = v103;
  id v153 = [v103 TPPBPolicyKeyViewMappingWithView:v152 matchingRule:v151];

  v97[12] = v153;
  NSString v154 = sub_100222260();
  NSString v155 = sub_100222260();
  id v156 = [v98 fieldMatch:v154 fieldRegex:v155];

  NSString v157 = sub_100222260();
  id v158 = [v103 TPPBPolicyKeyViewMappingWithView:v157 matchingRule:v156];

  v97[13] = v158;
  uint64_t v159 = swift_allocObject();
  *(_OWORD *)(v159 + 16) = xmmword_1002296B0;
  uint64_t v160 = swift_allocObject();
  *(_OWORD *)(v160 + 16) = xmmword_1002296D0;
  NSString v161 = sub_100222260();
  NSString v162 = sub_100222260();
  id v163 = [v98 fieldMatch:v161 fieldRegex:v162];

  *(void *)(v160 + 32) = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v98 fieldMatch:v164 fieldRegex:v165];

  *(void *)(v160 + 40) = v166;
  sub_1002223E0();
  Class v167 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v168 = [v98 andMatch:v167];

  *(void *)(v159 + 32) = v168;
  uint64_t v169 = swift_allocObject();
  *(_OWORD *)(v169 + 16) = xmmword_1002296D0;
  NSString v170 = sub_100222260();
  NSString v171 = sub_100222260();
  id v172 = [v98 fieldMatch:v170 fieldRegex:v171];

  *(void *)(v169 + 32) = v172;
  NSString v173 = sub_100222260();
  NSString v174 = sub_100222260();
  id v175 = [v98 fieldMatch:v173 fieldRegex:v174];

  *(void *)(v169 + 40) = v175;
  sub_1002223E0();
  Class v176 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v177 = [v98 andMatch:v176];

  *(void *)(v159 + 40) = v177;
  NSString v178 = sub_100222260();
  NSString v179 = sub_100222260();
  id v180 = [v98 fieldMatch:v178 fieldRegex:v179];

  *(void *)(v159 + 48) = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v98 fieldMatch:v181 fieldRegex:v182];

  *(void *)(v159 + 56) = v183;
  sub_1002223E0();
  Class v184 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v185 = [v98 orMatch:v184];

  NSString v186 = sub_100222260();
  id v187 = [v305 TPPBPolicyKeyViewMappingWithView:v186 matchingRule:v185];

  v97[14] = v187;
  uint64_t v188 = swift_allocObject();
  *(_OWORD *)(v188 + 16) = xmmword_1002296D0;
  NSString v189 = sub_100222260();
  NSString v190 = sub_100222260();
  id v191 = [v98 fieldMatch:v189 fieldRegex:v190];

  *(void *)(v188 + 32) = v191;
  uint64_t v192 = swift_allocObject();
  *(_OWORD *)(v192 + 16) = xmmword_100229680;
  NSString v193 = sub_100222260();
  NSString v194 = sub_100222260();
  id v195 = [v98 fieldMatch:v193 fieldRegex:v194];

  *(void *)(v192 + 32) = v195;
  NSString v196 = sub_100222260();
  NSString v197 = sub_100222260();
  id v198 = [v98 fieldMatch:v196 fieldRegex:v197];

  *(void *)(v192 + 40) = v198;
  NSString v199 = sub_100222260();
  NSString v200 = sub_100222260();
  id v201 = [v98 fieldMatch:v199 fieldRegex:v200];

  *(void *)(v192 + 48) = v201;
  sub_1002223E0();
  Class v202 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v203 = [v98 andMatch:v202];

  *(void *)(v188 + 40) = v203;
  sub_1002223E0();
  Class v204 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v205 = [v98 orMatch:v204];

  NSString v206 = sub_100222260();
  id v207 = [v305 TPPBPolicyKeyViewMappingWithView:v206 matchingRule:v205];

  v97[15] = v207;
  uint64_t v208 = swift_allocObject();
  *(_OWORD *)(v208 + 16) = xmmword_1002296F0;
  NSString v209 = sub_100222260();
  NSString v210 = sub_100222260();
  id v211 = [v98 fieldMatch:v209 fieldRegex:v210];

  *(void *)(v208 + 32) = v211;
  NSString v212 = sub_100222260();
  NSString v213 = sub_100222260();
  id v214 = [v98 fieldMatch:v212 fieldRegex:v213];

  *(void *)(v208 + 40) = v214;
  NSString v215 = sub_100222260();
  NSString v216 = sub_100222260();
  id v217 = [v98 fieldMatch:v215 fieldRegex:v216];

  *(void *)(v208 + 48) = v217;
  NSString v218 = sub_100222260();
  NSString v219 = sub_100222260();
  id v220 = [v98 fieldMatch:v218 fieldRegex:v219];

  *(void *)(v208 + 56) = v220;
  NSString v221 = sub_100222260();
  NSString v222 = sub_100222260();
  id v223 = [v98 fieldMatch:v221 fieldRegex:v222];

  *(void *)(v208 + 64) = v223;
  NSString v224 = sub_100222260();
  NSString v225 = sub_100222260();
  id v226 = [v98 fieldMatch:v224 fieldRegex:v225];

  *(void *)(v208 + 72) = v226;
  NSString v227 = sub_100222260();
  NSString v228 = sub_100222260();
  id v229 = [v98 fieldMatch:v227 fieldRegex:v228];

  *(void *)(v208 + 80) = v229;
  NSString v230 = sub_100222260();
  NSString v231 = sub_100222260();
  id v232 = [v98 fieldMatch:v230 fieldRegex:v231];

  *(void *)(v208 + 88) = v232;
  NSString v233 = sub_100222260();
  NSString v234 = sub_100222260();
  id v235 = [v98 fieldMatch:v233 fieldRegex:v234];

  *(void *)(v208 + 96) = v235;
  NSString v236 = sub_100222260();
  NSString v237 = sub_100222260();
  id v238 = [v98 fieldMatch:v236 fieldRegex:v237];

  *(void *)(v208 + 104) = v238;
  NSString v239 = sub_100222260();
  NSString v240 = sub_100222260();
  id v241 = [v98 fieldMatch:v239 fieldRegex:v240];

  *(void *)(v208 + 112) = v241;
  NSString v242 = sub_100222260();
  NSString v243 = sub_100222260();
  id v244 = [v98 fieldMatch:v242 fieldRegex:v243];

  *(void *)(v208 + 120) = v244;
  NSString v245 = sub_100222260();
  NSString v246 = sub_100222260();
  id v247 = [v98 fieldMatch:v245 fieldRegex:v246];

  *(void *)(v208 + 128) = v247;
  NSString v248 = sub_100222260();
  NSString v249 = sub_100222260();
  id v250 = [v98 fieldMatch:v248 fieldRegex:v249];

  *(void *)(v208 + 136) = v250;
  sub_1002223E0();
  Class v251 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v252 = [v98 orMatch:v251];

  NSString v253 = sub_100222260();
  id v254 = [v305 TPPBPolicyKeyViewMappingWithView:v253 matchingRule:v252];

  v97[16] = v254;
  uint64_t v255 = swift_allocObject();
  *(_OWORD *)(v255 + 16) = xmmword_1002296D0;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v98 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v255 + 32) = v258;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v98 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v255 + 40) = v261;
  sub_1002223E0();
  Class v262 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v263 = [v98 orMatch:v262];

  NSString v264 = sub_100222260();
  id v265 = [v305 TPPBPolicyKeyViewMappingWithView:v264 matchingRule:v263];

  v97[17] = v265;
  uint64_t v266 = swift_allocObject();
  *(_OWORD *)(v266 + 16) = xmmword_100229710;
  NSString v267 = sub_100222260();
  NSString v268 = sub_100222260();
  id v269 = [v98 fieldMatch:v267 fieldRegex:v268];

  *(void *)(v266 + 32) = v269;
  NSString v270 = sub_100222260();
  NSString v271 = sub_100222260();
  id v272 = [v98 fieldMatch:v270 fieldRegex:v271];

  *(void *)(v266 + 40) = v272;
  NSString v273 = sub_100222260();
  NSString v274 = sub_100222260();
  id v275 = [v98 fieldMatch:v273 fieldRegex:v274];

  *(void *)(v266 + 48) = v275;
  NSString v276 = sub_100222260();
  NSString v277 = sub_100222260();
  id v278 = [v98 fieldMatch:v276 fieldRegex:v277];

  *(void *)(v266 + 56) = v278;
  NSString v279 = sub_100222260();
  NSString v280 = sub_100222260();
  id v281 = [v98 fieldMatch:v279 fieldRegex:v280];

  *(void *)(v266 + 64) = v281;
  sub_1002223E0();
  Class v282 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v283 = [v98 orMatch:v282];

  NSString v284 = sub_100222260();
  id v285 = [v305 TPPBPolicyKeyViewMappingWithView:v284 matchingRule:v283];

  v97[18] = v285;
  uint64_t v286 = swift_allocObject();
  *(_OWORD *)(v286 + 16) = xmmword_100229680;
  NSString v287 = sub_100222260();
  NSString v288 = sub_100222260();
  id v289 = [v98 fieldMatch:v287 fieldRegex:v288];

  *(void *)(v286 + 32) = v289;
  NSString v290 = sub_100222260();
  NSString v291 = sub_100222260();
  id v292 = [v98 fieldMatch:v290 fieldRegex:v291];

  *(void *)(v286 + 40) = v292;
  NSString v293 = sub_100222260();
  NSString v294 = sub_100222260();
  id v295 = [v98 fieldMatch:v293 fieldRegex:v294];

  *(void *)(v286 + 48) = v295;
  sub_1002223E0();
  Class v296 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v297 = [v98 orMatch:v296];

  NSString v298 = sub_100222260();
  id v299 = [v305 TPPBPolicyKeyViewMappingWithView:v298 matchingRule:v297];

  v97[19] = v299;
  id v300 = [v98 trueMatch];
  NSString v301 = sub_100222260();
  id v302 = [v305 TPPBPolicyKeyViewMappingWithView:v301 matchingRule:v300];

  v97[20] = v302;
  sub_1002223E0();
  id v303 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(12, v308, v307, v306, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v97, (uint64_t)&off_10027DA80, (uint64_t)&off_10027DAF0, (uint64_t)&off_10027DB20, (uint64_t)&off_10027DB60, 1);
}

unint64_t sub_100025ED8()
{
  return 0xD000000000000D18;
}

id sub_100025EF4()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v316 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100229730;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v32 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v29 + 152) = v78;
  NSString v79 = sub_100222260();
  Class v80 = sub_1002223B0().super.isa;
  id v81 = [v32 TPPBPolicyCategoriesByViewWithView:v79 categories:v80];

  *(void *)(v29 + 160) = v81;
  sub_1002223E0();
  uint64_t v315 = v29;
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_100229710;
  NSString v83 = sub_100222260();
  Class v84 = sub_1002223B0().super.isa;
  Class v85 = self;
  id v86 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v83 introducers:v84];

  *(void *)(v82 + 32) = v86;
  NSString v87 = sub_100222260();
  Class v88 = sub_1002223B0().super.isa;
  id v89 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v87 introducers:v88];

  *(void *)(v82 + 40) = v89;
  NSString v90 = sub_100222260();
  Class v91 = sub_1002223B0().super.isa;
  id v92 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v90 introducers:v91];

  *(void *)(v82 + 48) = v92;
  NSString v93 = sub_100222260();
  Class v94 = sub_1002223B0().super.isa;
  id v95 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v93 introducers:v94];

  *(void *)(v82 + 56) = v95;
  NSString v96 = sub_100222260();
  Class v97 = sub_1002223B0().super.isa;
  id v98 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v96 introducers:v97];

  *(void *)(v82 + 64) = v98;
  sub_1002223E0();
  uint64_t v314 = v82;
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_100229740;
  NSString v100 = (void *)v99;
  id v101 = self;
  NSString v102 = sub_100222260();
  NSString v103 = sub_100222260();
  id v104 = [v101 fieldMatch:v102 fieldRegex:v103];

  NSString v105 = sub_100222260();
  NSString v106 = self;
  id v107 = [v106 TPPBPolicyKeyViewMappingWithView:v105 matchingRule:v104];

  v100[4] = v107;
  NSString v108 = sub_100222260();
  NSString v109 = sub_100222260();
  id v110 = [v101 fieldMatch:v108 fieldRegex:v109];

  NSString v111 = sub_100222260();
  id v112 = [v106 TPPBPolicyKeyViewMappingWithView:v111 matchingRule:v110];

  v100[5] = v112;
  NSString v113 = sub_100222260();
  NSString v114 = sub_100222260();
  id v115 = [v101 fieldMatch:v113 fieldRegex:v114];

  NSString v116 = sub_100222260();
  id v117 = [v106 TPPBPolicyKeyViewMappingWithView:v116 matchingRule:v115];

  v100[6] = v117;
  NSString v118 = sub_100222260();
  NSString v119 = sub_100222260();
  id v120 = [v101 fieldMatch:v118 fieldRegex:v119];

  NSString v121 = sub_100222260();
  id v122 = [v106 TPPBPolicyKeyViewMappingWithView:v121 matchingRule:v120];

  v100[7] = v122;
  NSString v123 = sub_100222260();
  NSString v124 = sub_100222260();
  id v125 = [v101 fieldMatch:v123 fieldRegex:v124];

  NSString v126 = sub_100222260();
  id v127 = [v106 TPPBPolicyKeyViewMappingWithView:v126 matchingRule:v125];

  v100[8] = v127;
  NSString v128 = sub_100222260();
  NSString v129 = sub_100222260();
  id v130 = [v101 fieldMatch:v128 fieldRegex:v129];

  NSString v131 = sub_100222260();
  id v132 = [v106 TPPBPolicyKeyViewMappingWithView:v131 matchingRule:v130];

  v100[9] = v132;
  NSString v133 = sub_100222260();
  NSString v134 = sub_100222260();
  id v135 = [v101 fieldMatch:v133 fieldRegex:v134];

  NSString v136 = sub_100222260();
  id v137 = [v106 TPPBPolicyKeyViewMappingWithView:v136 matchingRule:v135];

  v100[10] = v137;
  uint64_t v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = xmmword_100229680;
  NSString v139 = sub_100222260();
  NSString v140 = sub_100222260();
  id v141 = [v101 fieldMatch:v139 fieldRegex:v140];

  *(void *)(v138 + 32) = v141;
  NSString v142 = sub_100222260();
  NSString v143 = sub_100222260();
  id v144 = [v101 fieldMatch:v142 fieldRegex:v143];

  *(void *)(v138 + 40) = v144;
  NSString v145 = sub_100222260();
  NSString v146 = sub_100222260();
  id v147 = [v101 fieldMatch:v145 fieldRegex:v146];

  *(void *)(v138 + 48) = v147;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v148 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v149 = [v101 orMatch:v148];

  NSString v150 = sub_100222260();
  id v151 = [v106 TPPBPolicyKeyViewMappingWithView:v150 matchingRule:v149];

  v100[11] = v151;
  NSString v152 = sub_100222260();
  NSString v153 = sub_100222260();
  id v154 = [v101 fieldMatch:v152 fieldRegex:v153];

  NSString v155 = sub_100222260();
  id v156 = [v106 TPPBPolicyKeyViewMappingWithView:v155 matchingRule:v154];

  v100[12] = v156;
  NSString v157 = sub_100222260();
  NSString v158 = sub_100222260();
  id v159 = [v101 fieldMatch:v157 fieldRegex:v158];

  NSString v160 = sub_100222260();
  id v313 = v106;
  id v161 = [v106 TPPBPolicyKeyViewMappingWithView:v160 matchingRule:v159];

  v100[13] = v161;
  NSString v162 = sub_100222260();
  NSString v163 = sub_100222260();
  id v164 = [v101 fieldMatch:v162 fieldRegex:v163];

  NSString v165 = sub_100222260();
  id v166 = [v106 TPPBPolicyKeyViewMappingWithView:v165 matchingRule:v164];

  v100[14] = v166;
  uint64_t v167 = swift_allocObject();
  *(_OWORD *)(v167 + 16) = xmmword_1002296B0;
  uint64_t v168 = swift_allocObject();
  *(_OWORD *)(v168 + 16) = xmmword_1002296D0;
  NSString v169 = sub_100222260();
  NSString v170 = sub_100222260();
  id v171 = [v101 fieldMatch:v169 fieldRegex:v170];

  *(void *)(v168 + 32) = v171;
  NSString v172 = sub_100222260();
  NSString v173 = sub_100222260();
  id v174 = [v101 fieldMatch:v172 fieldRegex:v173];

  *(void *)(v168 + 40) = v174;
  sub_1002223E0();
  Class v175 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v176 = [v101 andMatch:v175];

  *(void *)(v167 + 32) = v176;
  uint64_t v177 = swift_allocObject();
  *(_OWORD *)(v177 + 16) = xmmword_1002296D0;
  NSString v178 = sub_100222260();
  NSString v179 = sub_100222260();
  id v180 = [v101 fieldMatch:v178 fieldRegex:v179];

  *(void *)(v177 + 32) = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v101 fieldMatch:v181 fieldRegex:v182];

  *(void *)(v177 + 40) = v183;
  sub_1002223E0();
  Class v184 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v185 = [v101 andMatch:v184];

  *(void *)(v167 + 40) = v185;
  NSString v186 = sub_100222260();
  NSString v187 = sub_100222260();
  id v188 = [v101 fieldMatch:v186 fieldRegex:v187];

  *(void *)(v167 + 48) = v188;
  NSString v189 = sub_100222260();
  NSString v190 = sub_100222260();
  id v191 = [v101 fieldMatch:v189 fieldRegex:v190];

  *(void *)(v167 + 56) = v191;
  sub_1002223E0();
  Class v192 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v193 = [v101 orMatch:v192];

  NSString v194 = sub_100222260();
  id v195 = [v313 TPPBPolicyKeyViewMappingWithView:v194 matchingRule:v193];

  v100[15] = v195;
  uint64_t v196 = swift_allocObject();
  *(_OWORD *)(v196 + 16) = xmmword_1002296D0;
  NSString v197 = sub_100222260();
  NSString v198 = sub_100222260();
  id v199 = [v101 fieldMatch:v197 fieldRegex:v198];

  *(void *)(v196 + 32) = v199;
  uint64_t v200 = swift_allocObject();
  *(_OWORD *)(v200 + 16) = xmmword_100229680;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v101 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v200 + 32) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v101 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v200 + 40) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v101 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v200 + 48) = v209;
  sub_1002223E0();
  Class v210 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v211 = [v101 andMatch:v210];

  *(void *)(v196 + 40) = v211;
  sub_1002223E0();
  Class v212 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v213 = [v101 orMatch:v212];

  NSString v214 = sub_100222260();
  id v215 = [v313 TPPBPolicyKeyViewMappingWithView:v214 matchingRule:v213];

  v100[16] = v215;
  uint64_t v216 = swift_allocObject();
  *(_OWORD *)(v216 + 16) = xmmword_1002296F0;
  NSString v217 = sub_100222260();
  NSString v218 = sub_100222260();
  id v219 = [v101 fieldMatch:v217 fieldRegex:v218];

  *(void *)(v216 + 32) = v219;
  NSString v220 = sub_100222260();
  NSString v221 = sub_100222260();
  id v222 = [v101 fieldMatch:v220 fieldRegex:v221];

  *(void *)(v216 + 40) = v222;
  NSString v223 = sub_100222260();
  NSString v224 = sub_100222260();
  id v225 = [v101 fieldMatch:v223 fieldRegex:v224];

  *(void *)(v216 + 48) = v225;
  NSString v226 = sub_100222260();
  NSString v227 = sub_100222260();
  id v228 = [v101 fieldMatch:v226 fieldRegex:v227];

  *(void *)(v216 + 56) = v228;
  NSString v229 = sub_100222260();
  NSString v230 = sub_100222260();
  id v231 = [v101 fieldMatch:v229 fieldRegex:v230];

  *(void *)(v216 + 64) = v231;
  NSString v232 = sub_100222260();
  NSString v233 = sub_100222260();
  id v234 = [v101 fieldMatch:v232 fieldRegex:v233];

  *(void *)(v216 + 72) = v234;
  NSString v235 = sub_100222260();
  NSString v236 = sub_100222260();
  id v237 = [v101 fieldMatch:v235 fieldRegex:v236];

  *(void *)(v216 + 80) = v237;
  NSString v238 = sub_100222260();
  NSString v239 = sub_100222260();
  id v240 = [v101 fieldMatch:v238 fieldRegex:v239];

  *(void *)(v216 + 88) = v240;
  NSString v241 = sub_100222260();
  NSString v242 = sub_100222260();
  id v243 = [v101 fieldMatch:v241 fieldRegex:v242];

  *(void *)(v216 + 96) = v243;
  NSString v244 = sub_100222260();
  NSString v245 = sub_100222260();
  id v246 = [v101 fieldMatch:v244 fieldRegex:v245];

  *(void *)(v216 + 104) = v246;
  NSString v247 = sub_100222260();
  NSString v248 = sub_100222260();
  id v249 = [v101 fieldMatch:v247 fieldRegex:v248];

  *(void *)(v216 + 112) = v249;
  NSString v250 = sub_100222260();
  NSString v251 = sub_100222260();
  id v252 = [v101 fieldMatch:v250 fieldRegex:v251];

  *(void *)(v216 + 120) = v252;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v101 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v216 + 128) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v101 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v216 + 136) = v258;
  sub_1002223E0();
  Class v259 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v260 = [v101 orMatch:v259];

  NSString v261 = sub_100222260();
  id v262 = [v313 TPPBPolicyKeyViewMappingWithView:v261 matchingRule:v260];

  v100[17] = v262;
  uint64_t v263 = swift_allocObject();
  *(_OWORD *)(v263 + 16) = xmmword_1002296D0;
  NSString v264 = sub_100222260();
  NSString v265 = sub_100222260();
  id v266 = [v101 fieldMatch:v264 fieldRegex:v265];

  *(void *)(v263 + 32) = v266;
  NSString v267 = sub_100222260();
  NSString v268 = sub_100222260();
  id v269 = [v101 fieldMatch:v267 fieldRegex:v268];

  *(void *)(v263 + 40) = v269;
  sub_1002223E0();
  Class v270 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v271 = [v101 orMatch:v270];

  NSString v272 = sub_100222260();
  id v273 = [v313 TPPBPolicyKeyViewMappingWithView:v272 matchingRule:v271];

  v100[18] = v273;
  uint64_t v274 = swift_allocObject();
  *(_OWORD *)(v274 + 16) = xmmword_100229710;
  NSString v275 = sub_100222260();
  NSString v276 = sub_100222260();
  id v277 = [v101 fieldMatch:v275 fieldRegex:v276];

  *(void *)(v274 + 32) = v277;
  NSString v278 = sub_100222260();
  NSString v279 = sub_100222260();
  id v280 = [v101 fieldMatch:v278 fieldRegex:v279];

  *(void *)(v274 + 40) = v280;
  NSString v281 = sub_100222260();
  NSString v282 = sub_100222260();
  id v283 = [v101 fieldMatch:v281 fieldRegex:v282];

  *(void *)(v274 + 48) = v283;
  NSString v284 = sub_100222260();
  NSString v285 = sub_100222260();
  id v286 = [v101 fieldMatch:v284 fieldRegex:v285];

  *(void *)(v274 + 56) = v286;
  NSString v287 = sub_100222260();
  NSString v288 = sub_100222260();
  id v289 = [v101 fieldMatch:v287 fieldRegex:v288];

  *(void *)(v274 + 64) = v289;
  sub_1002223E0();
  Class v290 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v291 = [v101 orMatch:v290];

  NSString v292 = sub_100222260();
  id v293 = [v313 TPPBPolicyKeyViewMappingWithView:v292 matchingRule:v291];

  v100[19] = v293;
  uint64_t v294 = swift_allocObject();
  *(_OWORD *)(v294 + 16) = xmmword_100229680;
  NSString v295 = sub_100222260();
  NSString v296 = sub_100222260();
  id v297 = [v101 fieldMatch:v295 fieldRegex:v296];

  *(void *)(v294 + 32) = v297;
  NSString v298 = sub_100222260();
  NSString v299 = sub_100222260();
  id v300 = [v101 fieldMatch:v298 fieldRegex:v299];

  *(void *)(v294 + 40) = v300;
  NSString v301 = sub_100222260();
  NSString v302 = sub_100222260();
  id v303 = [v101 fieldMatch:v301 fieldRegex:v302];

  *(void *)(v294 + 48) = v303;
  sub_1002223E0();
  Class v304 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v305 = [v101 orMatch:v304];

  NSString v306 = sub_100222260();
  id v307 = [v313 TPPBPolicyKeyViewMappingWithView:v306 matchingRule:v305];

  v100[20] = v307;
  id v308 = [v101 trueMatch];
  NSString v309 = sub_100222260();
  id v310 = [v313 TPPBPolicyKeyViewMappingWithView:v309 matchingRule:v308];

  v100[21] = v310;
  sub_1002223E0();
  id v311 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(13, v316, v315, v314, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v100, (uint64_t)&off_10027E1E0, (uint64_t)&off_10027E250, (uint64_t)&off_10027E280, (uint64_t)&off_10027E2C0, 1);
}

unint64_t sub_100028760()
{
  return 0xD000000000000EACLL;
}

id sub_10002877C()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v330 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100229730;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v32 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v29 + 152) = v78;
  NSString v79 = sub_100222260();
  Class v80 = sub_1002223B0().super.isa;
  id v81 = [v32 TPPBPolicyCategoriesByViewWithView:v79 categories:v80];

  *(void *)(v29 + 160) = v81;
  sub_1002223E0();
  uint64_t v329 = v29;
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_100229710;
  NSString v83 = sub_100222260();
  Class v84 = sub_1002223B0().super.isa;
  Class v85 = self;
  id v86 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v83 introducers:v84];

  *(void *)(v82 + 32) = v86;
  NSString v87 = sub_100222260();
  Class v88 = sub_1002223B0().super.isa;
  id v89 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v87 introducers:v88];

  *(void *)(v82 + 40) = v89;
  NSString v90 = sub_100222260();
  Class v91 = sub_1002223B0().super.isa;
  id v92 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v90 introducers:v91];

  *(void *)(v82 + 48) = v92;
  NSString v93 = sub_100222260();
  Class v94 = sub_1002223B0().super.isa;
  id v95 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v93 introducers:v94];

  *(void *)(v82 + 56) = v95;
  NSString v96 = sub_100222260();
  Class v97 = sub_1002223B0().super.isa;
  id v98 = [v85 TPPBPolicyIntroducersByCategoryWithCategory:v96 introducers:v97];

  *(void *)(v82 + 64) = v98;
  sub_1002223E0();
  uint64_t v328 = v82;
  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_100229740;
  NSString v100 = (void *)v99;
  id v101 = self;
  NSString v102 = sub_100222260();
  NSString v103 = sub_100222260();
  id v104 = [v101 fieldMatch:v102 fieldRegex:v103];

  NSString v105 = sub_100222260();
  NSString v106 = self;
  id v107 = [v106 TPPBPolicyKeyViewMappingWithView:v105 matchingRule:v104];

  v100[4] = v107;
  NSString v108 = sub_100222260();
  NSString v109 = sub_100222260();
  id v110 = [v101 fieldMatch:v108 fieldRegex:v109];

  NSString v111 = sub_100222260();
  id v112 = [v106 TPPBPolicyKeyViewMappingWithView:v111 matchingRule:v110];

  v100[5] = v112;
  NSString v113 = sub_100222260();
  NSString v114 = sub_100222260();
  id v115 = [v101 fieldMatch:v113 fieldRegex:v114];

  NSString v116 = sub_100222260();
  id v117 = [v106 TPPBPolicyKeyViewMappingWithView:v116 matchingRule:v115];

  v100[6] = v117;
  NSString v118 = sub_100222260();
  NSString v119 = sub_100222260();
  id v120 = [v101 fieldMatch:v118 fieldRegex:v119];

  NSString v121 = sub_100222260();
  id v122 = [v106 TPPBPolicyKeyViewMappingWithView:v121 matchingRule:v120];

  v100[7] = v122;
  NSString v123 = sub_100222260();
  NSString v124 = sub_100222260();
  id v125 = [v101 fieldMatch:v123 fieldRegex:v124];

  NSString v126 = sub_100222260();
  id v127 = [v106 TPPBPolicyKeyViewMappingWithView:v126 matchingRule:v125];

  v100[8] = v127;
  NSString v128 = sub_100222260();
  NSString v129 = sub_100222260();
  id v130 = [v101 fieldMatch:v128 fieldRegex:v129];

  NSString v131 = sub_100222260();
  id v132 = [v106 TPPBPolicyKeyViewMappingWithView:v131 matchingRule:v130];

  v100[9] = v132;
  NSString v133 = sub_100222260();
  NSString v134 = sub_100222260();
  id v135 = [v101 fieldMatch:v133 fieldRegex:v134];

  NSString v136 = sub_100222260();
  id v137 = [v106 TPPBPolicyKeyViewMappingWithView:v136 matchingRule:v135];

  v100[10] = v137;
  uint64_t v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = xmmword_100229680;
  NSString v139 = sub_100222260();
  NSString v140 = sub_100222260();
  id v141 = [v101 fieldMatch:v139 fieldRegex:v140];

  *(void *)(v138 + 32) = v141;
  NSString v142 = sub_100222260();
  NSString v143 = sub_100222260();
  id v144 = [v101 fieldMatch:v142 fieldRegex:v143];

  *(void *)(v138 + 40) = v144;
  NSString v145 = sub_100222260();
  NSString v146 = sub_100222260();
  id v147 = [v101 fieldMatch:v145 fieldRegex:v146];

  *(void *)(v138 + 48) = v147;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v148 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v149 = [v101 orMatch:v148];

  NSString v150 = sub_100222260();
  id v151 = [v106 TPPBPolicyKeyViewMappingWithView:v150 matchingRule:v149];

  v100[11] = v151;
  NSString v152 = sub_100222260();
  NSString v153 = sub_100222260();
  id v154 = [v101 fieldMatch:v152 fieldRegex:v153];

  NSString v155 = sub_100222260();
  id v156 = [v106 TPPBPolicyKeyViewMappingWithView:v155 matchingRule:v154];

  v100[12] = v156;
  NSString v157 = sub_100222260();
  NSString v158 = sub_100222260();
  id v159 = [v101 fieldMatch:v157 fieldRegex:v158];

  NSString v160 = sub_100222260();
  id v331 = v106;
  id v161 = [v106 TPPBPolicyKeyViewMappingWithView:v160 matchingRule:v159];

  v100[13] = v161;
  NSString v162 = sub_100222260();
  NSString v163 = sub_100222260();
  id v164 = [v101 fieldMatch:v162 fieldRegex:v163];

  NSString v165 = sub_100222260();
  id v166 = [v106 TPPBPolicyKeyViewMappingWithView:v165 matchingRule:v164];

  v100[14] = v166;
  uint64_t v167 = swift_allocObject();
  *(_OWORD *)(v167 + 16) = xmmword_1002296B0;
  uint64_t v168 = swift_allocObject();
  *(_OWORD *)(v168 + 16) = xmmword_1002296D0;
  NSString v169 = sub_100222260();
  NSString v170 = sub_100222260();
  id v171 = [v101 fieldMatch:v169 fieldRegex:v170];

  *(void *)(v168 + 32) = v171;
  NSString v172 = sub_100222260();
  NSString v173 = sub_100222260();
  id v174 = [v101 fieldMatch:v172 fieldRegex:v173];

  *(void *)(v168 + 40) = v174;
  sub_1002223E0();
  Class v175 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v176 = [v101 andMatch:v175];

  *(void *)(v167 + 32) = v176;
  uint64_t v177 = swift_allocObject();
  *(_OWORD *)(v177 + 16) = xmmword_1002296D0;
  NSString v178 = sub_100222260();
  NSString v179 = sub_100222260();
  id v180 = [v101 fieldMatch:v178 fieldRegex:v179];

  *(void *)(v177 + 32) = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v101 fieldMatch:v181 fieldRegex:v182];

  *(void *)(v177 + 40) = v183;
  sub_1002223E0();
  Class v184 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v185 = [v101 andMatch:v184];

  *(void *)(v167 + 40) = v185;
  NSString v186 = sub_100222260();
  NSString v187 = sub_100222260();
  id v188 = [v101 fieldMatch:v186 fieldRegex:v187];

  *(void *)(v167 + 48) = v188;
  NSString v189 = sub_100222260();
  NSString v190 = sub_100222260();
  id v191 = [v101 fieldMatch:v189 fieldRegex:v190];

  *(void *)(v167 + 56) = v191;
  sub_1002223E0();
  Class v192 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v193 = [v101 orMatch:v192];

  NSString v194 = sub_100222260();
  id v195 = [v106 TPPBPolicyKeyViewMappingWithView:v194 matchingRule:v193];

  v100[15] = v195;
  uint64_t v196 = swift_allocObject();
  *(_OWORD *)(v196 + 16) = xmmword_1002296D0;
  NSString v197 = sub_100222260();
  NSString v198 = sub_100222260();
  id v199 = [v101 fieldMatch:v197 fieldRegex:v198];

  *(void *)(v196 + 32) = v199;
  uint64_t v200 = swift_allocObject();
  *(_OWORD *)(v200 + 16) = xmmword_100229680;
  NSString v201 = sub_100222260();
  NSString v202 = sub_100222260();
  id v203 = [v101 fieldMatch:v201 fieldRegex:v202];

  *(void *)(v200 + 32) = v203;
  NSString v204 = sub_100222260();
  NSString v205 = sub_100222260();
  id v206 = [v101 fieldMatch:v204 fieldRegex:v205];

  *(void *)(v200 + 40) = v206;
  NSString v207 = sub_100222260();
  NSString v208 = sub_100222260();
  id v209 = [v101 fieldMatch:v207 fieldRegex:v208];

  *(void *)(v200 + 48) = v209;
  sub_1002223E0();
  Class v210 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v211 = [v101 andMatch:v210];

  *(void *)(v196 + 40) = v211;
  sub_1002223E0();
  Class v212 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v213 = [v101 orMatch:v212];

  NSString v214 = sub_100222260();
  id v215 = [v106 TPPBPolicyKeyViewMappingWithView:v214 matchingRule:v213];

  v100[16] = v215;
  uint64_t v216 = swift_allocObject();
  *(_OWORD *)(v216 + 16) = xmmword_1002296F0;
  NSString v217 = sub_100222260();
  NSString v218 = sub_100222260();
  id v219 = [v101 fieldMatch:v217 fieldRegex:v218];

  *(void *)(v216 + 32) = v219;
  NSString v220 = sub_100222260();
  NSString v221 = sub_100222260();
  id v222 = [v101 fieldMatch:v220 fieldRegex:v221];

  *(void *)(v216 + 40) = v222;
  NSString v223 = sub_100222260();
  NSString v224 = sub_100222260();
  id v225 = [v101 fieldMatch:v223 fieldRegex:v224];

  *(void *)(v216 + 48) = v225;
  NSString v226 = sub_100222260();
  NSString v227 = sub_100222260();
  id v228 = [v101 fieldMatch:v226 fieldRegex:v227];

  *(void *)(v216 + 56) = v228;
  NSString v229 = sub_100222260();
  NSString v230 = sub_100222260();
  id v231 = [v101 fieldMatch:v229 fieldRegex:v230];

  *(void *)(v216 + 64) = v231;
  NSString v232 = sub_100222260();
  NSString v233 = sub_100222260();
  id v234 = [v101 fieldMatch:v232 fieldRegex:v233];

  *(void *)(v216 + 72) = v234;
  NSString v235 = sub_100222260();
  NSString v236 = sub_100222260();
  id v237 = [v101 fieldMatch:v235 fieldRegex:v236];

  *(void *)(v216 + 80) = v237;
  NSString v238 = sub_100222260();
  NSString v239 = sub_100222260();
  id v240 = [v101 fieldMatch:v238 fieldRegex:v239];

  *(void *)(v216 + 88) = v240;
  NSString v241 = sub_100222260();
  NSString v242 = sub_100222260();
  id v243 = [v101 fieldMatch:v241 fieldRegex:v242];

  *(void *)(v216 + 96) = v243;
  NSString v244 = sub_100222260();
  NSString v245 = sub_100222260();
  id v246 = [v101 fieldMatch:v244 fieldRegex:v245];

  *(void *)(v216 + 104) = v246;
  NSString v247 = sub_100222260();
  NSString v248 = sub_100222260();
  id v249 = [v101 fieldMatch:v247 fieldRegex:v248];

  *(void *)(v216 + 112) = v249;
  NSString v250 = sub_100222260();
  NSString v251 = sub_100222260();
  id v252 = [v101 fieldMatch:v250 fieldRegex:v251];

  *(void *)(v216 + 120) = v252;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v101 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v216 + 128) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v101 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v216 + 136) = v258;
  sub_1002223E0();
  Class v259 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v260 = [v101 orMatch:v259];

  NSString v261 = sub_100222260();
  id v262 = [v106 TPPBPolicyKeyViewMappingWithView:v261 matchingRule:v260];

  v100[17] = v262;
  uint64_t v263 = swift_allocObject();
  *(_OWORD *)(v263 + 16) = xmmword_1002296D0;
  NSString v264 = sub_100222260();
  NSString v265 = sub_100222260();
  id v266 = [v101 fieldMatch:v264 fieldRegex:v265];

  *(void *)(v263 + 32) = v266;
  NSString v267 = sub_100222260();
  NSString v268 = sub_100222260();
  id v269 = [v101 fieldMatch:v267 fieldRegex:v268];

  *(void *)(v263 + 40) = v269;
  sub_1002223E0();
  Class v270 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v271 = [v101 orMatch:v270];

  NSString v272 = sub_100222260();
  id v273 = [v106 TPPBPolicyKeyViewMappingWithView:v272 matchingRule:v271];

  v100[18] = v273;
  uint64_t v274 = swift_allocObject();
  *(_OWORD *)(v274 + 16) = xmmword_100229750;
  NSString v275 = sub_100222260();
  NSString v276 = sub_100222260();
  id v277 = [v101 fieldMatch:v275 fieldRegex:v276];

  *(void *)(v274 + 32) = v277;
  NSString v278 = sub_100222260();
  NSString v279 = sub_100222260();
  id v280 = [v101 fieldMatch:v278 fieldRegex:v279];

  *(void *)(v274 + 40) = v280;
  NSString v281 = sub_100222260();
  NSString v282 = sub_100222260();
  id v283 = [v101 fieldMatch:v281 fieldRegex:v282];

  *(void *)(v274 + 48) = v283;
  NSString v284 = sub_100222260();
  NSString v285 = sub_100222260();
  id v286 = [v101 fieldMatch:v284 fieldRegex:v285];

  *(void *)(v274 + 56) = v286;
  NSString v287 = sub_100222260();
  NSString v288 = sub_100222260();
  id v289 = [v101 fieldMatch:v287 fieldRegex:v288];

  *(void *)(v274 + 64) = v289;
  NSString v290 = sub_100222260();
  NSString v291 = sub_100222260();
  id v292 = [v101 fieldMatch:v290 fieldRegex:v291];

  *(void *)(v274 + 72) = v292;
  NSString v293 = sub_100222260();
  NSString v294 = sub_100222260();
  id v295 = [v101 fieldMatch:v293 fieldRegex:v294];

  *(void *)(v274 + 80) = v295;
  NSString v296 = sub_100222260();
  NSString v297 = sub_100222260();
  id v298 = [v101 fieldMatch:v296 fieldRegex:v297];

  *(void *)(v274 + 88) = v298;
  NSString v299 = sub_100222260();
  NSString v300 = sub_100222260();
  id v301 = [v101 fieldMatch:v299 fieldRegex:v300];

  *(void *)(v274 + 96) = v301;
  NSString v302 = sub_100222260();
  NSString v303 = sub_100222260();
  id v304 = [v101 fieldMatch:v302 fieldRegex:v303];

  *(void *)(v274 + 104) = v304;
  sub_1002223E0();
  Class v305 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v306 = [v101 orMatch:v305];

  NSString v307 = sub_100222260();
  id v308 = [v331 TPPBPolicyKeyViewMappingWithView:v307 matchingRule:v306];

  v100[19] = v308;
  uint64_t v309 = swift_allocObject();
  *(_OWORD *)(v309 + 16) = xmmword_100229680;
  NSString v310 = sub_100222260();
  NSString v311 = sub_100222260();
  id v312 = [v101 fieldMatch:v310 fieldRegex:v311];

  *(void *)(v309 + 32) = v312;
  NSString v313 = sub_100222260();
  NSString v314 = sub_100222260();
  id v315 = [v101 fieldMatch:v313 fieldRegex:v314];

  *(void *)(v309 + 40) = v315;
  NSString v316 = sub_100222260();
  NSString v317 = sub_100222260();
  id v318 = [v101 fieldMatch:v316 fieldRegex:v317];

  *(void *)(v309 + 48) = v318;
  sub_1002223E0();
  Class v319 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v320 = [v101 orMatch:v319];

  NSString v321 = sub_100222260();
  id v322 = [v331 TPPBPolicyKeyViewMappingWithView:v321 matchingRule:v320];

  v100[20] = v322;
  id v323 = [v101 trueMatch];
  NSString v324 = sub_100222260();
  id v325 = [v331 TPPBPolicyKeyViewMappingWithView:v324 matchingRule:v323];

  v100[21] = v325;
  sub_1002223E0();
  id v326 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(15, v330, v329, v328, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v100, (uint64_t)&off_10027E940, (uint64_t)&off_10027E9B0, (uint64_t)&off_10027E9E0, (uint64_t)&off_10027EA20, 1);
}

unint64_t sub_10002B1E8()
{
  return 0xD000000000000D6CLL;
}

id sub_10002B204()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v324 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100229740;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v32 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v29 + 152) = v78;
  NSString v79 = sub_100222260();
  Class v80 = sub_1002223B0().super.isa;
  id v81 = [v32 TPPBPolicyCategoriesByViewWithView:v79 categories:v80];

  *(void *)(v29 + 160) = v81;
  NSString v82 = sub_100222260();
  Class v83 = sub_1002223B0().super.isa;
  id v84 = [v32 TPPBPolicyCategoriesByViewWithView:v82 categories:v83];

  *(void *)(v29 + 168) = v84;
  sub_1002223E0();
  uint64_t v323 = v29;
  uint64_t v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = xmmword_100229710;
  NSString v86 = sub_100222260();
  Class v87 = sub_1002223B0().super.isa;
  Class v88 = self;
  id v89 = [v88 TPPBPolicyIntroducersByCategoryWithCategory:v86 introducers:v87];

  *(void *)(v85 + 32) = v89;
  NSString v90 = sub_100222260();
  Class v91 = sub_1002223B0().super.isa;
  id v92 = [v88 TPPBPolicyIntroducersByCategoryWithCategory:v90 introducers:v91];

  *(void *)(v85 + 40) = v92;
  NSString v93 = sub_100222260();
  Class v94 = sub_1002223B0().super.isa;
  id v95 = [v88 TPPBPolicyIntroducersByCategoryWithCategory:v93 introducers:v94];

  *(void *)(v85 + 48) = v95;
  NSString v96 = sub_100222260();
  Class v97 = sub_1002223B0().super.isa;
  id v98 = [v88 TPPBPolicyIntroducersByCategoryWithCategory:v96 introducers:v97];

  *(void *)(v85 + 56) = v98;
  NSString v99 = sub_100222260();
  Class v100 = sub_1002223B0().super.isa;
  id v101 = [v88 TPPBPolicyIntroducersByCategoryWithCategory:v99 introducers:v100];

  *(void *)(v85 + 64) = v101;
  sub_1002223E0();
  uint64_t v322 = v85;
  uint64_t v102 = swift_allocObject();
  *(_OWORD *)(v102 + 16) = xmmword_100229760;
  NSString v103 = (void *)v102;
  id v104 = self;
  NSString v105 = sub_100222260();
  NSString v106 = sub_100222260();
  id v107 = [v104 fieldMatch:v105 fieldRegex:v106];

  NSString v108 = sub_100222260();
  NSString v109 = self;
  id v110 = [v109 TPPBPolicyKeyViewMappingWithView:v108 matchingRule:v107];

  v103[4] = v110;
  NSString v111 = sub_100222260();
  NSString v112 = sub_100222260();
  id v113 = [v104 fieldMatch:v111 fieldRegex:v112];

  NSString v114 = sub_100222260();
  id v115 = [v109 TPPBPolicyKeyViewMappingWithView:v114 matchingRule:v113];

  v103[5] = v115;
  NSString v116 = sub_100222260();
  NSString v117 = sub_100222260();
  id v118 = [v104 fieldMatch:v116 fieldRegex:v117];

  NSString v119 = sub_100222260();
  id v120 = [v109 TPPBPolicyKeyViewMappingWithView:v119 matchingRule:v118];

  v103[6] = v120;
  NSString v121 = sub_100222260();
  NSString v122 = sub_100222260();
  id v123 = [v104 fieldMatch:v121 fieldRegex:v122];

  NSString v124 = sub_100222260();
  id v125 = [v109 TPPBPolicyKeyViewMappingWithView:v124 matchingRule:v123];

  v103[7] = v125;
  NSString v126 = sub_100222260();
  NSString v127 = sub_100222260();
  id v128 = [v104 fieldMatch:v126 fieldRegex:v127];

  NSString v129 = sub_100222260();
  id v130 = [v109 TPPBPolicyKeyViewMappingWithView:v129 matchingRule:v128];

  v103[8] = v130;
  NSString v131 = sub_100222260();
  NSString v132 = sub_100222260();
  id v133 = [v104 fieldMatch:v131 fieldRegex:v132];

  NSString v134 = sub_100222260();
  id v135 = [v109 TPPBPolicyKeyViewMappingWithView:v134 matchingRule:v133];

  v103[9] = v135;
  NSString v136 = sub_100222260();
  NSString v137 = sub_100222260();
  id v138 = [v104 fieldMatch:v136 fieldRegex:v137];

  NSString v139 = sub_100222260();
  id v140 = [v109 TPPBPolicyKeyViewMappingWithView:v139 matchingRule:v138];

  v103[10] = v140;
  uint64_t v141 = swift_allocObject();
  *(_OWORD *)(v141 + 16) = xmmword_100229680;
  NSString v142 = sub_100222260();
  NSString v143 = sub_100222260();
  id v144 = [v104 fieldMatch:v142 fieldRegex:v143];

  *(void *)(v141 + 32) = v144;
  NSString v145 = sub_100222260();
  NSString v146 = sub_100222260();
  id v147 = [v104 fieldMatch:v145 fieldRegex:v146];

  *(void *)(v141 + 40) = v147;
  NSString v148 = sub_100222260();
  NSString v149 = sub_100222260();
  id v150 = [v104 fieldMatch:v148 fieldRegex:v149];

  *(void *)(v141 + 48) = v150;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v151 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v152 = [v104 orMatch:v151];

  NSString v153 = sub_100222260();
  id v154 = [v109 TPPBPolicyKeyViewMappingWithView:v153 matchingRule:v152];

  v103[11] = v154;
  NSString v155 = sub_100222260();
  NSString v156 = sub_100222260();
  id v157 = [v104 fieldMatch:v155 fieldRegex:v156];

  NSString v158 = sub_100222260();
  id v159 = [v109 TPPBPolicyKeyViewMappingWithView:v158 matchingRule:v157];

  v103[12] = v159;
  NSString v160 = sub_100222260();
  NSString v161 = sub_100222260();
  id v162 = [v104 fieldMatch:v160 fieldRegex:v161];

  NSString v163 = sub_100222260();
  id v164 = [v109 TPPBPolicyKeyViewMappingWithView:v163 matchingRule:v162];

  v103[13] = v164;
  NSString v165 = sub_100222260();
  NSString v166 = sub_100222260();
  id v167 = [v104 fieldMatch:v165 fieldRegex:v166];

  NSString v168 = sub_100222260();
  id v321 = v109;
  id v169 = [v109 TPPBPolicyKeyViewMappingWithView:v168 matchingRule:v167];

  v103[14] = v169;
  NSString v170 = sub_100222260();
  NSString v171 = sub_100222260();
  id v172 = [v104 fieldMatch:v170 fieldRegex:v171];

  NSString v173 = sub_100222260();
  id v174 = [v109 TPPBPolicyKeyViewMappingWithView:v173 matchingRule:v172];

  v103[15] = v174;
  uint64_t v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = xmmword_1002296B0;
  uint64_t v176 = swift_allocObject();
  *(_OWORD *)(v176 + 16) = xmmword_1002296D0;
  NSString v177 = sub_100222260();
  NSString v178 = sub_100222260();
  id v179 = [v104 fieldMatch:v177 fieldRegex:v178];

  *(void *)(v176 + 32) = v179;
  NSString v180 = sub_100222260();
  NSString v181 = sub_100222260();
  id v182 = [v104 fieldMatch:v180 fieldRegex:v181];

  *(void *)(v176 + 40) = v182;
  sub_1002223E0();
  Class v183 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v184 = [v104 andMatch:v183];

  *(void *)(v175 + 32) = v184;
  uint64_t v185 = swift_allocObject();
  *(_OWORD *)(v185 + 16) = xmmword_1002296D0;
  NSString v186 = sub_100222260();
  NSString v187 = sub_100222260();
  id v188 = [v104 fieldMatch:v186 fieldRegex:v187];

  *(void *)(v185 + 32) = v188;
  NSString v189 = sub_100222260();
  NSString v190 = sub_100222260();
  id v191 = [v104 fieldMatch:v189 fieldRegex:v190];

  *(void *)(v185 + 40) = v191;
  sub_1002223E0();
  Class v192 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v193 = [v104 andMatch:v192];

  *(void *)(v175 + 40) = v193;
  NSString v194 = sub_100222260();
  NSString v195 = sub_100222260();
  id v196 = [v104 fieldMatch:v194 fieldRegex:v195];

  *(void *)(v175 + 48) = v196;
  NSString v197 = sub_100222260();
  NSString v198 = sub_100222260();
  id v199 = [v104 fieldMatch:v197 fieldRegex:v198];

  *(void *)(v175 + 56) = v199;
  sub_1002223E0();
  Class v200 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v201 = [v104 orMatch:v200];

  NSString v202 = sub_100222260();
  id v203 = [v321 TPPBPolicyKeyViewMappingWithView:v202 matchingRule:v201];

  v103[16] = v203;
  uint64_t v204 = swift_allocObject();
  *(_OWORD *)(v204 + 16) = xmmword_1002296D0;
  NSString v205 = sub_100222260();
  NSString v206 = sub_100222260();
  id v207 = [v104 fieldMatch:v205 fieldRegex:v206];

  *(void *)(v204 + 32) = v207;
  uint64_t v208 = swift_allocObject();
  *(_OWORD *)(v208 + 16) = xmmword_100229680;
  NSString v209 = sub_100222260();
  NSString v210 = sub_100222260();
  id v211 = [v104 fieldMatch:v209 fieldRegex:v210];

  *(void *)(v208 + 32) = v211;
  NSString v212 = sub_100222260();
  NSString v213 = sub_100222260();
  id v214 = [v104 fieldMatch:v212 fieldRegex:v213];

  *(void *)(v208 + 40) = v214;
  NSString v215 = sub_100222260();
  NSString v216 = sub_100222260();
  id v217 = [v104 fieldMatch:v215 fieldRegex:v216];

  *(void *)(v208 + 48) = v217;
  sub_1002223E0();
  Class v218 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v219 = [v104 andMatch:v218];

  *(void *)(v204 + 40) = v219;
  sub_1002223E0();
  Class v220 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v221 = [v104 orMatch:v220];

  NSString v222 = sub_100222260();
  id v223 = [v321 TPPBPolicyKeyViewMappingWithView:v222 matchingRule:v221];

  v103[17] = v223;
  uint64_t v224 = swift_allocObject();
  *(_OWORD *)(v224 + 16) = xmmword_1002296F0;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v104 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v224 + 32) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v104 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v224 + 40) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v104 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v224 + 48) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v104 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v224 + 56) = v236;
  NSString v237 = sub_100222260();
  NSString v238 = sub_100222260();
  id v239 = [v104 fieldMatch:v237 fieldRegex:v238];

  *(void *)(v224 + 64) = v239;
  NSString v240 = sub_100222260();
  NSString v241 = sub_100222260();
  id v242 = [v104 fieldMatch:v240 fieldRegex:v241];

  *(void *)(v224 + 72) = v242;
  NSString v243 = sub_100222260();
  NSString v244 = sub_100222260();
  id v245 = [v104 fieldMatch:v243 fieldRegex:v244];

  *(void *)(v224 + 80) = v245;
  NSString v246 = sub_100222260();
  NSString v247 = sub_100222260();
  id v248 = [v104 fieldMatch:v246 fieldRegex:v247];

  *(void *)(v224 + 88) = v248;
  NSString v249 = sub_100222260();
  NSString v250 = sub_100222260();
  id v251 = [v104 fieldMatch:v249 fieldRegex:v250];

  *(void *)(v224 + 96) = v251;
  NSString v252 = sub_100222260();
  NSString v253 = sub_100222260();
  id v254 = [v104 fieldMatch:v252 fieldRegex:v253];

  *(void *)(v224 + 104) = v254;
  NSString v255 = sub_100222260();
  NSString v256 = sub_100222260();
  id v257 = [v104 fieldMatch:v255 fieldRegex:v256];

  *(void *)(v224 + 112) = v257;
  NSString v258 = sub_100222260();
  NSString v259 = sub_100222260();
  id v260 = [v104 fieldMatch:v258 fieldRegex:v259];

  *(void *)(v224 + 120) = v260;
  NSString v261 = sub_100222260();
  NSString v262 = sub_100222260();
  id v263 = [v104 fieldMatch:v261 fieldRegex:v262];

  *(void *)(v224 + 128) = v263;
  NSString v264 = sub_100222260();
  NSString v265 = sub_100222260();
  id v266 = [v104 fieldMatch:v264 fieldRegex:v265];

  *(void *)(v224 + 136) = v266;
  sub_1002223E0();
  Class v267 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v268 = [v104 orMatch:v267];

  NSString v269 = sub_100222260();
  id v270 = [v321 TPPBPolicyKeyViewMappingWithView:v269 matchingRule:v268];

  v103[18] = v270;
  uint64_t v271 = swift_allocObject();
  *(_OWORD *)(v271 + 16) = xmmword_1002296D0;
  NSString v272 = sub_100222260();
  NSString v273 = sub_100222260();
  id v274 = [v104 fieldMatch:v272 fieldRegex:v273];

  *(void *)(v271 + 32) = v274;
  NSString v275 = sub_100222260();
  NSString v276 = sub_100222260();
  id v277 = [v104 fieldMatch:v275 fieldRegex:v276];

  *(void *)(v271 + 40) = v277;
  sub_1002223E0();
  Class v278 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v279 = [v104 orMatch:v278];

  NSString v280 = sub_100222260();
  id v281 = [v321 TPPBPolicyKeyViewMappingWithView:v280 matchingRule:v279];

  v103[19] = v281;
  uint64_t v282 = swift_allocObject();
  *(_OWORD *)(v282 + 16) = xmmword_100229710;
  NSString v283 = sub_100222260();
  NSString v284 = sub_100222260();
  id v285 = [v104 fieldMatch:v283 fieldRegex:v284];

  *(void *)(v282 + 32) = v285;
  NSString v286 = sub_100222260();
  NSString v287 = sub_100222260();
  id v288 = [v104 fieldMatch:v286 fieldRegex:v287];

  *(void *)(v282 + 40) = v288;
  NSString v289 = sub_100222260();
  NSString v290 = sub_100222260();
  id v291 = [v104 fieldMatch:v289 fieldRegex:v290];

  *(void *)(v282 + 48) = v291;
  NSString v292 = sub_100222260();
  NSString v293 = sub_100222260();
  id v294 = [v104 fieldMatch:v292 fieldRegex:v293];

  *(void *)(v282 + 56) = v294;
  NSString v295 = sub_100222260();
  NSString v296 = sub_100222260();
  id v297 = [v104 fieldMatch:v295 fieldRegex:v296];

  *(void *)(v282 + 64) = v297;
  sub_1002223E0();
  Class v298 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v299 = [v104 orMatch:v298];

  NSString v300 = sub_100222260();
  id v301 = [v321 TPPBPolicyKeyViewMappingWithView:v300 matchingRule:v299];

  v103[20] = v301;
  uint64_t v302 = swift_allocObject();
  *(_OWORD *)(v302 + 16) = xmmword_100229680;
  NSString v303 = sub_100222260();
  NSString v304 = sub_100222260();
  id v305 = [v104 fieldMatch:v303 fieldRegex:v304];

  *(void *)(v302 + 32) = v305;
  NSString v306 = sub_100222260();
  NSString v307 = sub_100222260();
  id v308 = [v104 fieldMatch:v306 fieldRegex:v307];

  *(void *)(v302 + 40) = v308;
  NSString v309 = sub_100222260();
  NSString v310 = sub_100222260();
  id v311 = [v104 fieldMatch:v309 fieldRegex:v310];

  *(void *)(v302 + 48) = v311;
  sub_1002223E0();
  Class v312 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v313 = [v104 orMatch:v312];

  NSString v314 = sub_100222260();
  id v315 = [v321 TPPBPolicyKeyViewMappingWithView:v314 matchingRule:v313];

  v103[21] = v315;
  id v316 = [v104 trueMatch];
  NSString v317 = sub_100222260();
  id v318 = [v321 TPPBPolicyKeyViewMappingWithView:v317 matchingRule:v316];

  v103[22] = v318;
  sub_1002223E0();
  id v319 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(16, v324, v323, v322, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v103, (uint64_t)&off_10027F0E0, (uint64_t)&off_10027F150, (uint64_t)&off_10027F180, (uint64_t)&off_10027F1C0, 1);
}

unint64_t sub_10002DB78()
{
  return 0xD000000000000F9CLL;
}

id sub_10002DB94()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v354 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100229770;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v32 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v29 + 152) = v78;
  NSString v79 = sub_100222260();
  Class v80 = sub_1002223B0().super.isa;
  id v81 = [v32 TPPBPolicyCategoriesByViewWithView:v79 categories:v80];

  *(void *)(v29 + 160) = v81;
  NSString v82 = sub_100222260();
  Class v83 = sub_1002223B0().super.isa;
  id v84 = [v32 TPPBPolicyCategoriesByViewWithView:v82 categories:v83];

  *(void *)(v29 + 168) = v84;
  NSString v85 = sub_100222260();
  Class v86 = sub_1002223B0().super.isa;
  id v87 = [v32 TPPBPolicyCategoriesByViewWithView:v85 categories:v86];

  *(void *)(v29 + 176) = v87;
  NSString v88 = sub_100222260();
  Class v89 = sub_1002223B0().super.isa;
  id v90 = [v32 TPPBPolicyCategoriesByViewWithView:v88 categories:v89];

  *(void *)(v29 + 184) = v90;
  sub_1002223E0();
  uint64_t v353 = v29;
  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = xmmword_100229710;
  NSString v92 = sub_100222260();
  Class v93 = sub_1002223B0().super.isa;
  Class v94 = self;
  id v95 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v92 introducers:v93];

  *(void *)(v91 + 32) = v95;
  NSString v96 = sub_100222260();
  Class v97 = sub_1002223B0().super.isa;
  id v98 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v96 introducers:v97];

  *(void *)(v91 + 40) = v98;
  NSString v99 = sub_100222260();
  Class v100 = sub_1002223B0().super.isa;
  id v101 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v99 introducers:v100];

  *(void *)(v91 + 48) = v101;
  NSString v102 = sub_100222260();
  Class v103 = sub_1002223B0().super.isa;
  id v104 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v102 introducers:v103];

  *(void *)(v91 + 56) = v104;
  NSString v105 = sub_100222260();
  Class v106 = sub_1002223B0().super.isa;
  id v107 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v105 introducers:v106];

  *(void *)(v91 + 64) = v107;
  sub_1002223E0();
  uint64_t v352 = v91;
  uint64_t v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = xmmword_100229780;
  NSString v109 = (void *)v108;
  id v110 = self;
  NSString v111 = sub_100222260();
  NSString v112 = sub_100222260();
  id v113 = [v110 fieldMatch:v111 fieldRegex:v112];

  NSString v114 = sub_100222260();
  id v115 = self;
  id v116 = [v115 TPPBPolicyKeyViewMappingWithView:v114 matchingRule:v113];

  v109[4] = v116;
  NSString v117 = sub_100222260();
  NSString v118 = sub_100222260();
  id v119 = [v110 fieldMatch:v117 fieldRegex:v118];

  NSString v120 = sub_100222260();
  id v121 = [v115 TPPBPolicyKeyViewMappingWithView:v120 matchingRule:v119];

  v109[5] = v121;
  NSString v122 = sub_100222260();
  NSString v123 = sub_100222260();
  id v124 = [v110 fieldMatch:v122 fieldRegex:v123];

  NSString v125 = sub_100222260();
  id v126 = [v115 TPPBPolicyKeyViewMappingWithView:v125 matchingRule:v124];

  v109[6] = v126;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v110 fieldMatch:v127 fieldRegex:v128];

  NSString v130 = sub_100222260();
  id v131 = [v115 TPPBPolicyKeyViewMappingWithView:v130 matchingRule:v129];

  v109[7] = v131;
  NSString v132 = sub_100222260();
  NSString v133 = sub_100222260();
  id v134 = [v110 fieldMatch:v132 fieldRegex:v133];

  NSString v135 = sub_100222260();
  id v136 = [v115 TPPBPolicyKeyViewMappingWithView:v135 matchingRule:v134];

  v109[8] = v136;
  NSString v137 = sub_100222260();
  NSString v138 = sub_100222260();
  id v139 = [v110 fieldMatch:v137 fieldRegex:v138];

  NSString v140 = sub_100222260();
  id v141 = [v115 TPPBPolicyKeyViewMappingWithView:v140 matchingRule:v139];

  v109[9] = v141;
  NSString v142 = sub_100222260();
  NSString v143 = sub_100222260();
  id v144 = [v110 fieldMatch:v142 fieldRegex:v143];

  NSString v145 = sub_100222260();
  id v146 = [v115 TPPBPolicyKeyViewMappingWithView:v145 matchingRule:v144];

  v109[10] = v146;
  uint64_t v147 = swift_allocObject();
  *(_OWORD *)(v147 + 16) = xmmword_100229680;
  NSString v148 = sub_100222260();
  NSString v149 = sub_100222260();
  id v150 = [v110 fieldMatch:v148 fieldRegex:v149];

  *(void *)(v147 + 32) = v150;
  NSString v151 = sub_100222260();
  NSString v152 = sub_100222260();
  id v153 = [v110 fieldMatch:v151 fieldRegex:v152];

  *(void *)(v147 + 40) = v153;
  NSString v154 = sub_100222260();
  NSString v155 = sub_100222260();
  id v156 = [v110 fieldMatch:v154 fieldRegex:v155];

  *(void *)(v147 + 48) = v156;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v157 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v158 = [v110 orMatch:v157];

  NSString v159 = sub_100222260();
  id v160 = [v115 TPPBPolicyKeyViewMappingWithView:v159 matchingRule:v158];

  v109[11] = v160;
  NSString v161 = sub_100222260();
  NSString v162 = sub_100222260();
  id v163 = [v110 fieldMatch:v161 fieldRegex:v162];

  NSString v164 = sub_100222260();
  id v165 = [v115 TPPBPolicyKeyViewMappingWithView:v164 matchingRule:v163];

  v109[12] = v165;
  NSString v166 = sub_100222260();
  NSString v167 = sub_100222260();
  id v168 = [v110 fieldMatch:v166 fieldRegex:v167];

  NSString v169 = sub_100222260();
  id v170 = [v115 TPPBPolicyKeyViewMappingWithView:v169 matchingRule:v168];

  v109[13] = v170;
  NSString v171 = sub_100222260();
  NSString v172 = sub_100222260();
  id v173 = [v110 fieldMatch:v171 fieldRegex:v172];

  NSString v174 = sub_100222260();
  id v175 = [v115 TPPBPolicyKeyViewMappingWithView:v174 matchingRule:v173];

  v109[14] = v175;
  NSString v176 = sub_100222260();
  NSString v177 = sub_100222260();
  id v178 = [v110 fieldMatch:v176 fieldRegex:v177];

  NSString v179 = sub_100222260();
  id v180 = [v115 TPPBPolicyKeyViewMappingWithView:v179 matchingRule:v178];

  v109[15] = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v110 fieldMatch:v181 fieldRegex:v182];

  NSString v184 = sub_100222260();
  id v355 = v115;
  id v185 = [v115 TPPBPolicyKeyViewMappingWithView:v184 matchingRule:v183];

  v109[16] = v185;
  NSString v186 = sub_100222260();
  NSString v187 = sub_100222260();
  id v188 = [v110 fieldMatch:v186 fieldRegex:v187];

  NSString v189 = sub_100222260();
  id v190 = [v115 TPPBPolicyKeyViewMappingWithView:v189 matchingRule:v188];

  v109[17] = v190;
  uint64_t v191 = swift_allocObject();
  *(_OWORD *)(v191 + 16) = xmmword_1002296B0;
  uint64_t v192 = swift_allocObject();
  *(_OWORD *)(v192 + 16) = xmmword_1002296D0;
  NSString v193 = sub_100222260();
  NSString v194 = sub_100222260();
  id v195 = [v110 fieldMatch:v193 fieldRegex:v194];

  *(void *)(v192 + 32) = v195;
  NSString v196 = sub_100222260();
  NSString v197 = sub_100222260();
  id v198 = [v110 fieldMatch:v196 fieldRegex:v197];

  *(void *)(v192 + 40) = v198;
  sub_1002223E0();
  Class v199 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v200 = [v110 andMatch:v199];

  *(void *)(v191 + 32) = v200;
  uint64_t v201 = swift_allocObject();
  *(_OWORD *)(v201 + 16) = xmmword_1002296D0;
  NSString v202 = sub_100222260();
  NSString v203 = sub_100222260();
  id v204 = [v110 fieldMatch:v202 fieldRegex:v203];

  *(void *)(v201 + 32) = v204;
  NSString v205 = sub_100222260();
  NSString v206 = sub_100222260();
  id v207 = [v110 fieldMatch:v205 fieldRegex:v206];

  *(void *)(v201 + 40) = v207;
  sub_1002223E0();
  Class v208 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v209 = [v110 andMatch:v208];

  *(void *)(v191 + 40) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v110 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v191 + 48) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v110 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v191 + 56) = v215;
  sub_1002223E0();
  Class v216 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v217 = [v110 orMatch:v216];

  NSString v218 = sub_100222260();
  id v219 = [v115 TPPBPolicyKeyViewMappingWithView:v218 matchingRule:v217];

  v109[18] = v219;
  uint64_t v220 = swift_allocObject();
  *(_OWORD *)(v220 + 16) = xmmword_1002296D0;
  NSString v221 = sub_100222260();
  NSString v222 = sub_100222260();
  id v223 = [v110 fieldMatch:v221 fieldRegex:v222];

  *(void *)(v220 + 32) = v223;
  uint64_t v224 = swift_allocObject();
  *(_OWORD *)(v224 + 16) = xmmword_100229680;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v110 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v224 + 32) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v110 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v224 + 40) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v110 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v224 + 48) = v233;
  sub_1002223E0();
  Class v234 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v235 = [v110 andMatch:v234];

  *(void *)(v220 + 40) = v235;
  sub_1002223E0();
  Class v236 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v237 = [v110 orMatch:v236];

  NSString v238 = sub_100222260();
  id v239 = [v115 TPPBPolicyKeyViewMappingWithView:v238 matchingRule:v237];

  v109[19] = v239;
  uint64_t v240 = swift_allocObject();
  *(_OWORD *)(v240 + 16) = xmmword_1002296F0;
  NSString v241 = sub_100222260();
  NSString v242 = sub_100222260();
  id v243 = [v110 fieldMatch:v241 fieldRegex:v242];

  *(void *)(v240 + 32) = v243;
  NSString v244 = sub_100222260();
  NSString v245 = sub_100222260();
  id v246 = [v110 fieldMatch:v244 fieldRegex:v245];

  *(void *)(v240 + 40) = v246;
  NSString v247 = sub_100222260();
  NSString v248 = sub_100222260();
  id v249 = [v110 fieldMatch:v247 fieldRegex:v248];

  *(void *)(v240 + 48) = v249;
  NSString v250 = sub_100222260();
  NSString v251 = sub_100222260();
  id v252 = [v110 fieldMatch:v250 fieldRegex:v251];

  *(void *)(v240 + 56) = v252;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v110 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v240 + 64) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v110 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v240 + 72) = v258;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v110 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v240 + 80) = v261;
  NSString v262 = sub_100222260();
  NSString v263 = sub_100222260();
  id v264 = [v110 fieldMatch:v262 fieldRegex:v263];

  *(void *)(v240 + 88) = v264;
  NSString v265 = sub_100222260();
  NSString v266 = sub_100222260();
  id v267 = [v110 fieldMatch:v265 fieldRegex:v266];

  *(void *)(v240 + 96) = v267;
  NSString v268 = sub_100222260();
  NSString v269 = sub_100222260();
  id v270 = [v110 fieldMatch:v268 fieldRegex:v269];

  *(void *)(v240 + 104) = v270;
  NSString v271 = sub_100222260();
  NSString v272 = sub_100222260();
  id v273 = [v110 fieldMatch:v271 fieldRegex:v272];

  *(void *)(v240 + 112) = v273;
  NSString v274 = sub_100222260();
  NSString v275 = sub_100222260();
  id v276 = [v110 fieldMatch:v274 fieldRegex:v275];

  *(void *)(v240 + 120) = v276;
  NSString v277 = sub_100222260();
  NSString v278 = sub_100222260();
  id v279 = [v110 fieldMatch:v277 fieldRegex:v278];

  *(void *)(v240 + 128) = v279;
  NSString v280 = sub_100222260();
  NSString v281 = sub_100222260();
  id v282 = [v110 fieldMatch:v280 fieldRegex:v281];

  *(void *)(v240 + 136) = v282;
  sub_1002223E0();
  Class v283 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v284 = [v110 orMatch:v283];

  NSString v285 = sub_100222260();
  id v286 = [v115 TPPBPolicyKeyViewMappingWithView:v285 matchingRule:v284];

  v109[20] = v286;
  uint64_t v287 = swift_allocObject();
  *(_OWORD *)(v287 + 16) = xmmword_1002296D0;
  NSString v288 = sub_100222260();
  NSString v289 = sub_100222260();
  id v290 = [v110 fieldMatch:v288 fieldRegex:v289];

  *(void *)(v287 + 32) = v290;
  NSString v291 = sub_100222260();
  NSString v292 = sub_100222260();
  id v293 = [v110 fieldMatch:v291 fieldRegex:v292];

  *(void *)(v287 + 40) = v293;
  sub_1002223E0();
  Class v294 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v295 = [v110 orMatch:v294];

  NSString v296 = sub_100222260();
  id v297 = [v115 TPPBPolicyKeyViewMappingWithView:v296 matchingRule:v295];

  v109[21] = v297;
  uint64_t v298 = swift_allocObject();
  *(_OWORD *)(v298 + 16) = xmmword_100229750;
  NSString v299 = sub_100222260();
  NSString v300 = sub_100222260();
  id v301 = [v110 fieldMatch:v299 fieldRegex:v300];

  *(void *)(v298 + 32) = v301;
  NSString v302 = sub_100222260();
  NSString v303 = sub_100222260();
  id v304 = [v110 fieldMatch:v302 fieldRegex:v303];

  *(void *)(v298 + 40) = v304;
  NSString v305 = sub_100222260();
  NSString v306 = sub_100222260();
  id v307 = [v110 fieldMatch:v305 fieldRegex:v306];

  *(void *)(v298 + 48) = v307;
  NSString v308 = sub_100222260();
  NSString v309 = sub_100222260();
  id v310 = [v110 fieldMatch:v308 fieldRegex:v309];

  *(void *)(v298 + 56) = v310;
  NSString v311 = sub_100222260();
  NSString v312 = sub_100222260();
  id v313 = [v110 fieldMatch:v311 fieldRegex:v312];

  *(void *)(v298 + 64) = v313;
  NSString v314 = sub_100222260();
  NSString v315 = sub_100222260();
  id v316 = [v110 fieldMatch:v314 fieldRegex:v315];

  *(void *)(v298 + 72) = v316;
  NSString v317 = sub_100222260();
  NSString v318 = sub_100222260();
  id v319 = [v110 fieldMatch:v317 fieldRegex:v318];

  *(void *)(v298 + 80) = v319;
  NSString v320 = sub_100222260();
  NSString v321 = sub_100222260();
  id v322 = [v110 fieldMatch:v320 fieldRegex:v321];

  *(void *)(v298 + 88) = v322;
  NSString v323 = sub_100222260();
  NSString v324 = sub_100222260();
  id v325 = [v110 fieldMatch:v323 fieldRegex:v324];

  *(void *)(v298 + 96) = v325;
  NSString v326 = sub_100222260();
  NSString v327 = sub_100222260();
  id v328 = [v110 fieldMatch:v326 fieldRegex:v327];

  *(void *)(v298 + 104) = v328;
  sub_1002223E0();
  Class v329 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v330 = [v110 orMatch:v329];

  NSString v331 = sub_100222260();
  id v332 = [v355 TPPBPolicyKeyViewMappingWithView:v331 matchingRule:v330];

  v109[22] = v332;
  uint64_t v333 = swift_allocObject();
  *(_OWORD *)(v333 + 16) = xmmword_100229680;
  NSString v334 = sub_100222260();
  NSString v335 = sub_100222260();
  id v336 = [v110 fieldMatch:v334 fieldRegex:v335];

  *(void *)(v333 + 32) = v336;
  NSString v337 = sub_100222260();
  NSString v338 = sub_100222260();
  id v339 = [v110 fieldMatch:v337 fieldRegex:v338];

  *(void *)(v333 + 40) = v339;
  NSString v340 = sub_100222260();
  NSString v341 = sub_100222260();
  id v342 = [v110 fieldMatch:v340 fieldRegex:v341];

  *(void *)(v333 + 48) = v342;
  sub_1002223E0();
  Class v343 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v344 = [v110 orMatch:v343];

  NSString v345 = sub_100222260();
  id v346 = [v355 TPPBPolicyKeyViewMappingWithView:v345 matchingRule:v344];

  v109[23] = v346;
  id v347 = [v110 trueMatch];
  NSString v348 = sub_100222260();
  id v349 = [v355 TPPBPolicyKeyViewMappingWithView:v348 matchingRule:v347];

  v109[24] = v349;
  sub_1002223E0();
  id v350 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(17, v354, v353, v352, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v109, (uint64_t)&off_10027F910, (uint64_t)&off_10027F980, (uint64_t)&off_10027F9B0, (uint64_t)&off_10027F9F0, 1);
}

unint64_t sub_1000308EC()
{
  return 0xD000000000001060;
}

id sub_100030908()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229720;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  sub_1002223E0();
  uint64_t v360 = v0;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100229770;
  NSString v30 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v32 = self;
  id v33 = [v32 TPPBPolicyCategoriesByViewWithView:v30 categories:isa];

  *(void *)(v29 + 32) = v33;
  NSString v34 = sub_100222260();
  Class v35 = sub_1002223B0().super.isa;
  id v36 = [v32 TPPBPolicyCategoriesByViewWithView:v34 categories:v35];

  *(void *)(v29 + 40) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v32 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v29 + 48) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v32 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v29 + 56) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v32 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v29 + 64) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v32 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v29 + 72) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v32 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v29 + 80) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v32 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v29 + 88) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v32 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v29 + 96) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v32 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v29 + 104) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v32 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v29 + 112) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v32 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v29 + 120) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v32 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v29 + 128) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v32 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v29 + 136) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v32 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v29 + 144) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v32 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v29 + 152) = v78;
  NSString v79 = sub_100222260();
  Class v80 = sub_1002223B0().super.isa;
  id v81 = [v32 TPPBPolicyCategoriesByViewWithView:v79 categories:v80];

  *(void *)(v29 + 160) = v81;
  NSString v82 = sub_100222260();
  Class v83 = sub_1002223B0().super.isa;
  id v84 = [v32 TPPBPolicyCategoriesByViewWithView:v82 categories:v83];

  *(void *)(v29 + 168) = v84;
  NSString v85 = sub_100222260();
  Class v86 = sub_1002223B0().super.isa;
  id v87 = [v32 TPPBPolicyCategoriesByViewWithView:v85 categories:v86];

  *(void *)(v29 + 176) = v87;
  NSString v88 = sub_100222260();
  Class v89 = sub_1002223B0().super.isa;
  id v90 = [v32 TPPBPolicyCategoriesByViewWithView:v88 categories:v89];

  *(void *)(v29 + 184) = v90;
  sub_1002223E0();
  uint64_t v359 = v29;
  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = xmmword_100229710;
  NSString v92 = sub_100222260();
  Class v93 = sub_1002223B0().super.isa;
  Class v94 = self;
  id v95 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v92 introducers:v93];

  *(void *)(v91 + 32) = v95;
  NSString v96 = sub_100222260();
  Class v97 = sub_1002223B0().super.isa;
  id v98 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v96 introducers:v97];

  *(void *)(v91 + 40) = v98;
  NSString v99 = sub_100222260();
  Class v100 = sub_1002223B0().super.isa;
  id v101 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v99 introducers:v100];

  *(void *)(v91 + 48) = v101;
  NSString v102 = sub_100222260();
  Class v103 = sub_1002223B0().super.isa;
  id v104 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v102 introducers:v103];

  *(void *)(v91 + 56) = v104;
  NSString v105 = sub_100222260();
  Class v106 = sub_1002223B0().super.isa;
  id v107 = [v94 TPPBPolicyIntroducersByCategoryWithCategory:v105 introducers:v106];

  *(void *)(v91 + 64) = v107;
  sub_1002223E0();
  uint64_t v358 = v91;
  uint64_t v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = xmmword_100229780;
  NSString v109 = (void *)v108;
  id v110 = self;
  NSString v111 = sub_100222260();
  NSString v112 = sub_100222260();
  id v113 = [v110 fieldMatch:v111 fieldRegex:v112];

  NSString v114 = sub_100222260();
  id v115 = self;
  id v116 = [v115 TPPBPolicyKeyViewMappingWithView:v114 matchingRule:v113];

  v109[4] = v116;
  NSString v117 = sub_100222260();
  NSString v118 = sub_100222260();
  id v119 = [v110 fieldMatch:v117 fieldRegex:v118];

  NSString v120 = sub_100222260();
  id v121 = [v115 TPPBPolicyKeyViewMappingWithView:v120 matchingRule:v119];

  v109[5] = v121;
  NSString v122 = sub_100222260();
  NSString v123 = sub_100222260();
  id v124 = [v110 fieldMatch:v122 fieldRegex:v123];

  NSString v125 = sub_100222260();
  id v126 = [v115 TPPBPolicyKeyViewMappingWithView:v125 matchingRule:v124];

  v109[6] = v126;
  NSString v127 = sub_100222260();
  NSString v128 = sub_100222260();
  id v129 = [v110 fieldMatch:v127 fieldRegex:v128];

  NSString v130 = sub_100222260();
  id v131 = [v115 TPPBPolicyKeyViewMappingWithView:v130 matchingRule:v129];

  v109[7] = v131;
  NSString v132 = sub_100222260();
  NSString v133 = sub_100222260();
  id v134 = [v110 fieldMatch:v132 fieldRegex:v133];

  NSString v135 = sub_100222260();
  id v136 = [v115 TPPBPolicyKeyViewMappingWithView:v135 matchingRule:v134];

  v109[8] = v136;
  NSString v137 = sub_100222260();
  NSString v138 = sub_100222260();
  id v139 = [v110 fieldMatch:v137 fieldRegex:v138];

  NSString v140 = sub_100222260();
  id v141 = [v115 TPPBPolicyKeyViewMappingWithView:v140 matchingRule:v139];

  v109[9] = v141;
  NSString v142 = sub_100222260();
  NSString v143 = sub_100222260();
  id v144 = [v110 fieldMatch:v142 fieldRegex:v143];

  NSString v145 = sub_100222260();
  id v146 = [v115 TPPBPolicyKeyViewMappingWithView:v145 matchingRule:v144];

  v109[10] = v146;
  uint64_t v147 = swift_allocObject();
  *(_OWORD *)(v147 + 16) = xmmword_100229680;
  NSString v148 = sub_100222260();
  NSString v149 = sub_100222260();
  id v150 = [v110 fieldMatch:v148 fieldRegex:v149];

  *(void *)(v147 + 32) = v150;
  NSString v151 = sub_100222260();
  NSString v152 = sub_100222260();
  id v153 = [v110 fieldMatch:v151 fieldRegex:v152];

  *(void *)(v147 + 40) = v153;
  NSString v154 = sub_100222260();
  NSString v155 = sub_100222260();
  id v156 = [v110 fieldMatch:v154 fieldRegex:v155];

  *(void *)(v147 + 48) = v156;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v157 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v158 = [v110 orMatch:v157];

  NSString v159 = sub_100222260();
  id v160 = [v115 TPPBPolicyKeyViewMappingWithView:v159 matchingRule:v158];

  v109[11] = v160;
  NSString v161 = sub_100222260();
  NSString v162 = sub_100222260();
  id v163 = [v110 fieldMatch:v161 fieldRegex:v162];

  NSString v164 = sub_100222260();
  id v165 = [v115 TPPBPolicyKeyViewMappingWithView:v164 matchingRule:v163];

  v109[12] = v165;
  NSString v166 = sub_100222260();
  NSString v167 = sub_100222260();
  id v168 = [v110 fieldMatch:v166 fieldRegex:v167];

  NSString v169 = sub_100222260();
  id v170 = [v115 TPPBPolicyKeyViewMappingWithView:v169 matchingRule:v168];

  v109[13] = v170;
  NSString v171 = sub_100222260();
  NSString v172 = sub_100222260();
  id v173 = [v110 fieldMatch:v171 fieldRegex:v172];

  NSString v174 = sub_100222260();
  id v175 = [v115 TPPBPolicyKeyViewMappingWithView:v174 matchingRule:v173];

  v109[14] = v175;
  NSString v176 = sub_100222260();
  NSString v177 = sub_100222260();
  id v178 = [v110 fieldMatch:v176 fieldRegex:v177];

  NSString v179 = sub_100222260();
  id v180 = [v115 TPPBPolicyKeyViewMappingWithView:v179 matchingRule:v178];

  v109[15] = v180;
  NSString v181 = sub_100222260();
  NSString v182 = sub_100222260();
  id v183 = [v110 fieldMatch:v181 fieldRegex:v182];

  NSString v184 = sub_100222260();
  id v361 = v115;
  id v185 = [v115 TPPBPolicyKeyViewMappingWithView:v184 matchingRule:v183];

  v109[16] = v185;
  NSString v186 = sub_100222260();
  NSString v187 = sub_100222260();
  id v188 = [v110 fieldMatch:v186 fieldRegex:v187];

  NSString v189 = sub_100222260();
  id v190 = [v115 TPPBPolicyKeyViewMappingWithView:v189 matchingRule:v188];

  v109[17] = v190;
  uint64_t v191 = swift_allocObject();
  *(_OWORD *)(v191 + 16) = xmmword_1002296B0;
  uint64_t v192 = swift_allocObject();
  *(_OWORD *)(v192 + 16) = xmmword_1002296D0;
  NSString v193 = sub_100222260();
  NSString v194 = sub_100222260();
  id v195 = [v110 fieldMatch:v193 fieldRegex:v194];

  *(void *)(v192 + 32) = v195;
  NSString v196 = sub_100222260();
  NSString v197 = sub_100222260();
  id v198 = [v110 fieldMatch:v196 fieldRegex:v197];

  *(void *)(v192 + 40) = v198;
  sub_1002223E0();
  Class v199 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v200 = [v110 andMatch:v199];

  *(void *)(v191 + 32) = v200;
  uint64_t v201 = swift_allocObject();
  *(_OWORD *)(v201 + 16) = xmmword_1002296D0;
  NSString v202 = sub_100222260();
  NSString v203 = sub_100222260();
  id v204 = [v110 fieldMatch:v202 fieldRegex:v203];

  *(void *)(v201 + 32) = v204;
  NSString v205 = sub_100222260();
  NSString v206 = sub_100222260();
  id v207 = [v110 fieldMatch:v205 fieldRegex:v206];

  *(void *)(v201 + 40) = v207;
  sub_1002223E0();
  Class v208 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v209 = [v110 andMatch:v208];

  *(void *)(v191 + 40) = v209;
  NSString v210 = sub_100222260();
  NSString v211 = sub_100222260();
  id v212 = [v110 fieldMatch:v210 fieldRegex:v211];

  *(void *)(v191 + 48) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v110 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v191 + 56) = v215;
  sub_1002223E0();
  Class v216 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v217 = [v110 orMatch:v216];

  NSString v218 = sub_100222260();
  id v219 = [v115 TPPBPolicyKeyViewMappingWithView:v218 matchingRule:v217];

  v109[18] = v219;
  uint64_t v220 = swift_allocObject();
  *(_OWORD *)(v220 + 16) = xmmword_1002296D0;
  NSString v221 = sub_100222260();
  NSString v222 = sub_100222260();
  id v223 = [v110 fieldMatch:v221 fieldRegex:v222];

  *(void *)(v220 + 32) = v223;
  uint64_t v224 = swift_allocObject();
  *(_OWORD *)(v224 + 16) = xmmword_100229680;
  NSString v225 = sub_100222260();
  NSString v226 = sub_100222260();
  id v227 = [v110 fieldMatch:v225 fieldRegex:v226];

  *(void *)(v224 + 32) = v227;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v110 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v224 + 40) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v110 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v224 + 48) = v233;
  sub_1002223E0();
  Class v234 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v235 = [v110 andMatch:v234];

  *(void *)(v220 + 40) = v235;
  sub_1002223E0();
  Class v236 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v237 = [v110 orMatch:v236];

  NSString v238 = sub_100222260();
  id v239 = [v115 TPPBPolicyKeyViewMappingWithView:v238 matchingRule:v237];

  v109[19] = v239;
  uint64_t v240 = swift_allocObject();
  *(_OWORD *)(v240 + 16) = xmmword_1002296F0;
  NSString v241 = sub_100222260();
  NSString v242 = sub_100222260();
  id v243 = [v110 fieldMatch:v241 fieldRegex:v242];

  *(void *)(v240 + 32) = v243;
  NSString v244 = sub_100222260();
  NSString v245 = sub_100222260();
  id v246 = [v110 fieldMatch:v244 fieldRegex:v245];

  *(void *)(v240 + 40) = v246;
  NSString v247 = sub_100222260();
  NSString v248 = sub_100222260();
  id v249 = [v110 fieldMatch:v247 fieldRegex:v248];

  *(void *)(v240 + 48) = v249;
  NSString v250 = sub_100222260();
  NSString v251 = sub_100222260();
  id v252 = [v110 fieldMatch:v250 fieldRegex:v251];

  *(void *)(v240 + 56) = v252;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v110 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v240 + 64) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v110 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v240 + 72) = v258;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v110 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v240 + 80) = v261;
  NSString v262 = sub_100222260();
  NSString v263 = sub_100222260();
  id v264 = [v110 fieldMatch:v262 fieldRegex:v263];

  *(void *)(v240 + 88) = v264;
  NSString v265 = sub_100222260();
  NSString v266 = sub_100222260();
  id v267 = [v110 fieldMatch:v265 fieldRegex:v266];

  *(void *)(v240 + 96) = v267;
  NSString v268 = sub_100222260();
  NSString v269 = sub_100222260();
  id v270 = [v110 fieldMatch:v268 fieldRegex:v269];

  *(void *)(v240 + 104) = v270;
  NSString v271 = sub_100222260();
  NSString v272 = sub_100222260();
  id v273 = [v110 fieldMatch:v271 fieldRegex:v272];

  *(void *)(v240 + 112) = v273;
  NSString v274 = sub_100222260();
  NSString v275 = sub_100222260();
  id v276 = [v110 fieldMatch:v274 fieldRegex:v275];

  *(void *)(v240 + 120) = v276;
  NSString v277 = sub_100222260();
  NSString v278 = sub_100222260();
  id v279 = [v110 fieldMatch:v277 fieldRegex:v278];

  *(void *)(v240 + 128) = v279;
  NSString v280 = sub_100222260();
  NSString v281 = sub_100222260();
  id v282 = [v110 fieldMatch:v280 fieldRegex:v281];

  *(void *)(v240 + 136) = v282;
  sub_1002223E0();
  Class v283 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v284 = [v110 orMatch:v283];

  NSString v285 = sub_100222260();
  id v286 = [v115 TPPBPolicyKeyViewMappingWithView:v285 matchingRule:v284];

  v109[20] = v286;
  uint64_t v287 = swift_allocObject();
  *(_OWORD *)(v287 + 16) = xmmword_1002296D0;
  NSString v288 = sub_100222260();
  NSString v289 = sub_100222260();
  id v290 = [v110 fieldMatch:v288 fieldRegex:v289];

  *(void *)(v287 + 32) = v290;
  NSString v291 = sub_100222260();
  NSString v292 = sub_100222260();
  id v293 = [v110 fieldMatch:v291 fieldRegex:v292];

  *(void *)(v287 + 40) = v293;
  sub_1002223E0();
  Class v294 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v295 = [v110 orMatch:v294];

  NSString v296 = sub_100222260();
  id v297 = [v115 TPPBPolicyKeyViewMappingWithView:v296 matchingRule:v295];

  v109[21] = v297;
  uint64_t v298 = swift_allocObject();
  *(_OWORD *)(v298 + 16) = xmmword_1002296E0;
  NSString v299 = sub_100222260();
  NSString v300 = sub_100222260();
  id v301 = [v110 fieldMatch:v299 fieldRegex:v300];

  *(void *)(v298 + 32) = v301;
  NSString v302 = sub_100222260();
  NSString v303 = sub_100222260();
  id v304 = [v110 fieldMatch:v302 fieldRegex:v303];

  *(void *)(v298 + 40) = v304;
  NSString v305 = sub_100222260();
  NSString v306 = sub_100222260();
  id v307 = [v110 fieldMatch:v305 fieldRegex:v306];

  *(void *)(v298 + 48) = v307;
  NSString v308 = sub_100222260();
  NSString v309 = sub_100222260();
  id v310 = [v110 fieldMatch:v308 fieldRegex:v309];

  *(void *)(v298 + 56) = v310;
  NSString v311 = sub_100222260();
  NSString v312 = sub_100222260();
  id v313 = [v110 fieldMatch:v311 fieldRegex:v312];

  *(void *)(v298 + 64) = v313;
  NSString v314 = sub_100222260();
  NSString v315 = sub_100222260();
  id v316 = [v110 fieldMatch:v314 fieldRegex:v315];

  *(void *)(v298 + 72) = v316;
  NSString v317 = sub_100222260();
  NSString v318 = sub_100222260();
  id v319 = [v110 fieldMatch:v317 fieldRegex:v318];

  *(void *)(v298 + 80) = v319;
  NSString v320 = sub_100222260();
  NSString v321 = sub_100222260();
  id v322 = [v110 fieldMatch:v320 fieldRegex:v321];

  *(void *)(v298 + 88) = v322;
  NSString v323 = sub_100222260();
  NSString v324 = sub_100222260();
  id v325 = [v110 fieldMatch:v323 fieldRegex:v324];

  *(void *)(v298 + 96) = v325;
  NSString v326 = sub_100222260();
  NSString v327 = sub_100222260();
  id v328 = [v110 fieldMatch:v326 fieldRegex:v327];

  *(void *)(v298 + 104) = v328;
  NSString v329 = sub_100222260();
  NSString v330 = sub_100222260();
  id v331 = [v110 fieldMatch:v329 fieldRegex:v330];

  *(void *)(v298 + 112) = v331;
  NSString v332 = sub_100222260();
  NSString v333 = sub_100222260();
  id v334 = [v110 fieldMatch:v332 fieldRegex:v333];

  *(void *)(v298 + 120) = v334;
  sub_1002223E0();
  Class v335 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v336 = [v110 orMatch:v335];

  NSString v337 = sub_100222260();
  id v338 = [v361 TPPBPolicyKeyViewMappingWithView:v337 matchingRule:v336];

  v109[22] = v338;
  uint64_t v339 = swift_allocObject();
  *(_OWORD *)(v339 + 16) = xmmword_100229680;
  NSString v340 = sub_100222260();
  NSString v341 = sub_100222260();
  id v342 = [v110 fieldMatch:v340 fieldRegex:v341];

  *(void *)(v339 + 32) = v342;
  NSString v343 = sub_100222260();
  NSString v344 = sub_100222260();
  id v345 = [v110 fieldMatch:v343 fieldRegex:v344];

  *(void *)(v339 + 40) = v345;
  NSString v346 = sub_100222260();
  NSString v347 = sub_100222260();
  id v348 = [v110 fieldMatch:v346 fieldRegex:v347];

  *(void *)(v339 + 48) = v348;
  sub_1002223E0();
  Class v349 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v350 = [v110 orMatch:v349];

  NSString v351 = sub_100222260();
  id v352 = [v361 TPPBPolicyKeyViewMappingWithView:v351 matchingRule:v350];

  v109[23] = v352;
  id v353 = [v110 trueMatch];
  NSString v354 = sub_100222260();
  id v355 = [v361 TPPBPolicyKeyViewMappingWithView:v354 matchingRule:v353];

  v109[24] = v355;
  sub_1002223E0();
  id v356 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(18, v360, v359, v358, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v109, (uint64_t)&off_100280140, (uint64_t)&off_1002801B0, (uint64_t)&off_1002801E0, (uint64_t)&off_100280220, 1);
}

unint64_t sub_100033740()
{
  return 0xD000000000001088;
}

id sub_10003375C()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229750;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  NSString v29 = sub_100222260();
  NSString v30 = sub_100222260();
  id v31 = [v3 TPPBPolicyModelToCategoryWithPrefix:v29 category:v30];

  *(void *)(v0 + 104) = v31;
  sub_1002223E0();
  uint64_t v363 = v0;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100229770;
  NSString v33 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v35 = self;
  id v36 = [v35 TPPBPolicyCategoriesByViewWithView:v33 categories:isa];

  *(void *)(v32 + 32) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v35 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v32 + 40) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v35 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v32 + 48) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v35 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v32 + 56) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v35 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v32 + 64) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v35 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v32 + 72) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v35 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v32 + 80) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v35 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v32 + 88) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v35 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v32 + 96) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v35 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v32 + 104) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v35 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v32 + 112) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v35 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v32 + 120) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v35 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v32 + 128) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v35 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v32 + 136) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v35 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v32 + 144) = v78;
  NSString v79 = sub_100222260();
  Class v80 = sub_1002223B0().super.isa;
  id v81 = [v35 TPPBPolicyCategoriesByViewWithView:v79 categories:v80];

  *(void *)(v32 + 152) = v81;
  NSString v82 = sub_100222260();
  Class v83 = sub_1002223B0().super.isa;
  id v84 = [v35 TPPBPolicyCategoriesByViewWithView:v82 categories:v83];

  *(void *)(v32 + 160) = v84;
  NSString v85 = sub_100222260();
  Class v86 = sub_1002223B0().super.isa;
  id v87 = [v35 TPPBPolicyCategoriesByViewWithView:v85 categories:v86];

  *(void *)(v32 + 168) = v87;
  NSString v88 = sub_100222260();
  Class v89 = sub_1002223B0().super.isa;
  id v90 = [v35 TPPBPolicyCategoriesByViewWithView:v88 categories:v89];

  *(void *)(v32 + 176) = v90;
  NSString v91 = sub_100222260();
  Class v92 = sub_1002223B0().super.isa;
  id v93 = [v35 TPPBPolicyCategoriesByViewWithView:v91 categories:v92];

  *(void *)(v32 + 184) = v93;
  sub_1002223E0();
  uint64_t v362 = v32;
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_100229710;
  NSString v95 = sub_100222260();
  Class v96 = sub_1002223B0().super.isa;
  Class v97 = self;
  id v98 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v95 introducers:v96];

  *(void *)(v94 + 32) = v98;
  NSString v99 = sub_100222260();
  Class v100 = sub_1002223B0().super.isa;
  id v101 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v99 introducers:v100];

  *(void *)(v94 + 40) = v101;
  NSString v102 = sub_100222260();
  Class v103 = sub_1002223B0().super.isa;
  id v104 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v102 introducers:v103];

  *(void *)(v94 + 48) = v104;
  NSString v105 = sub_100222260();
  Class v106 = sub_1002223B0().super.isa;
  id v107 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v105 introducers:v106];

  *(void *)(v94 + 56) = v107;
  NSString v108 = sub_100222260();
  Class v109 = sub_1002223B0().super.isa;
  id v110 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v108 introducers:v109];

  *(void *)(v94 + 64) = v110;
  sub_1002223E0();
  uint64_t v361 = v94;
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_100229780;
  NSString v112 = (void *)v111;
  id v113 = self;
  NSString v114 = sub_100222260();
  NSString v115 = sub_100222260();
  id v116 = [v113 fieldMatch:v114 fieldRegex:v115];

  NSString v117 = sub_100222260();
  NSString v118 = self;
  id v119 = [v118 TPPBPolicyKeyViewMappingWithView:v117 matchingRule:v116];

  v112[4] = v119;
  NSString v120 = sub_100222260();
  NSString v121 = sub_100222260();
  id v122 = [v113 fieldMatch:v120 fieldRegex:v121];

  NSString v123 = sub_100222260();
  id v124 = [v118 TPPBPolicyKeyViewMappingWithView:v123 matchingRule:v122];

  v112[5] = v124;
  NSString v125 = sub_100222260();
  NSString v126 = sub_100222260();
  id v127 = [v113 fieldMatch:v125 fieldRegex:v126];

  NSString v128 = sub_100222260();
  id v129 = [v118 TPPBPolicyKeyViewMappingWithView:v128 matchingRule:v127];

  v112[6] = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v113 fieldMatch:v130 fieldRegex:v131];

  NSString v133 = sub_100222260();
  id v134 = [v118 TPPBPolicyKeyViewMappingWithView:v133 matchingRule:v132];

  v112[7] = v134;
  NSString v135 = sub_100222260();
  NSString v136 = sub_100222260();
  id v137 = [v113 fieldMatch:v135 fieldRegex:v136];

  NSString v138 = sub_100222260();
  id v139 = [v118 TPPBPolicyKeyViewMappingWithView:v138 matchingRule:v137];

  v112[8] = v139;
  NSString v140 = sub_100222260();
  NSString v141 = sub_100222260();
  id v142 = [v113 fieldMatch:v140 fieldRegex:v141];

  NSString v143 = sub_100222260();
  id v144 = [v118 TPPBPolicyKeyViewMappingWithView:v143 matchingRule:v142];

  v112[9] = v144;
  NSString v145 = sub_100222260();
  NSString v146 = sub_100222260();
  id v147 = [v113 fieldMatch:v145 fieldRegex:v146];

  NSString v148 = sub_100222260();
  id v149 = [v118 TPPBPolicyKeyViewMappingWithView:v148 matchingRule:v147];

  v112[10] = v149;
  uint64_t v150 = swift_allocObject();
  *(_OWORD *)(v150 + 16) = xmmword_100229680;
  NSString v151 = sub_100222260();
  NSString v152 = sub_100222260();
  id v153 = [v113 fieldMatch:v151 fieldRegex:v152];

  *(void *)(v150 + 32) = v153;
  NSString v154 = sub_100222260();
  NSString v155 = sub_100222260();
  id v156 = [v113 fieldMatch:v154 fieldRegex:v155];

  *(void *)(v150 + 40) = v156;
  NSString v157 = sub_100222260();
  NSString v158 = sub_100222260();
  id v159 = [v113 fieldMatch:v157 fieldRegex:v158];

  *(void *)(v150 + 48) = v159;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v160 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v161 = [v113 orMatch:v160];

  NSString v162 = sub_100222260();
  id v163 = [v118 TPPBPolicyKeyViewMappingWithView:v162 matchingRule:v161];

  v112[11] = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v113 fieldMatch:v164 fieldRegex:v165];

  NSString v167 = sub_100222260();
  id v168 = [v118 TPPBPolicyKeyViewMappingWithView:v167 matchingRule:v166];

  v112[12] = v168;
  NSString v169 = sub_100222260();
  NSString v170 = sub_100222260();
  id v171 = [v113 fieldMatch:v169 fieldRegex:v170];

  NSString v172 = sub_100222260();
  id v173 = [v118 TPPBPolicyKeyViewMappingWithView:v172 matchingRule:v171];

  v112[13] = v173;
  NSString v174 = sub_100222260();
  NSString v175 = sub_100222260();
  id v176 = [v113 fieldMatch:v174 fieldRegex:v175];

  NSString v177 = sub_100222260();
  id v178 = [v118 TPPBPolicyKeyViewMappingWithView:v177 matchingRule:v176];

  v112[14] = v178;
  NSString v179 = sub_100222260();
  NSString v180 = sub_100222260();
  id v181 = [v113 fieldMatch:v179 fieldRegex:v180];

  NSString v182 = sub_100222260();
  id v183 = [v118 TPPBPolicyKeyViewMappingWithView:v182 matchingRule:v181];

  v112[15] = v183;
  NSString v184 = sub_100222260();
  NSString v185 = sub_100222260();
  id v186 = [v113 fieldMatch:v184 fieldRegex:v185];

  NSString v187 = sub_100222260();
  id v364 = v118;
  id v188 = [v118 TPPBPolicyKeyViewMappingWithView:v187 matchingRule:v186];

  v112[16] = v188;
  NSString v189 = sub_100222260();
  NSString v190 = sub_100222260();
  id v191 = [v113 fieldMatch:v189 fieldRegex:v190];

  NSString v192 = sub_100222260();
  id v193 = [v118 TPPBPolicyKeyViewMappingWithView:v192 matchingRule:v191];

  v112[17] = v193;
  uint64_t v194 = swift_allocObject();
  *(_OWORD *)(v194 + 16) = xmmword_1002296B0;
  uint64_t v195 = swift_allocObject();
  *(_OWORD *)(v195 + 16) = xmmword_1002296D0;
  NSString v196 = sub_100222260();
  NSString v197 = sub_100222260();
  id v198 = [v113 fieldMatch:v196 fieldRegex:v197];

  *(void *)(v195 + 32) = v198;
  NSString v199 = sub_100222260();
  NSString v200 = sub_100222260();
  id v201 = [v113 fieldMatch:v199 fieldRegex:v200];

  *(void *)(v195 + 40) = v201;
  sub_1002223E0();
  Class v202 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v203 = [v113 andMatch:v202];

  *(void *)(v194 + 32) = v203;
  uint64_t v204 = swift_allocObject();
  *(_OWORD *)(v204 + 16) = xmmword_1002296D0;
  NSString v205 = sub_100222260();
  NSString v206 = sub_100222260();
  id v207 = [v113 fieldMatch:v205 fieldRegex:v206];

  *(void *)(v204 + 32) = v207;
  NSString v208 = sub_100222260();
  NSString v209 = sub_100222260();
  id v210 = [v113 fieldMatch:v208 fieldRegex:v209];

  *(void *)(v204 + 40) = v210;
  sub_1002223E0();
  Class v211 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v212 = [v113 andMatch:v211];

  *(void *)(v194 + 40) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v113 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v194 + 48) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v113 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v194 + 56) = v218;
  sub_1002223E0();
  Class v219 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v220 = [v113 orMatch:v219];

  NSString v221 = sub_100222260();
  id v222 = [v118 TPPBPolicyKeyViewMappingWithView:v221 matchingRule:v220];

  v112[18] = v222;
  uint64_t v223 = swift_allocObject();
  *(_OWORD *)(v223 + 16) = xmmword_1002296D0;
  NSString v224 = sub_100222260();
  NSString v225 = sub_100222260();
  id v226 = [v113 fieldMatch:v224 fieldRegex:v225];

  *(void *)(v223 + 32) = v226;
  uint64_t v227 = swift_allocObject();
  *(_OWORD *)(v227 + 16) = xmmword_100229680;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v113 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v227 + 32) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v113 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v227 + 40) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v113 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v227 + 48) = v236;
  sub_1002223E0();
  Class v237 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v238 = [v113 andMatch:v237];

  *(void *)(v223 + 40) = v238;
  sub_1002223E0();
  Class v239 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v240 = [v113 orMatch:v239];

  NSString v241 = sub_100222260();
  id v242 = [v118 TPPBPolicyKeyViewMappingWithView:v241 matchingRule:v240];

  v112[19] = v242;
  uint64_t v243 = swift_allocObject();
  *(_OWORD *)(v243 + 16) = xmmword_1002296F0;
  NSString v244 = sub_100222260();
  NSString v245 = sub_100222260();
  id v246 = [v113 fieldMatch:v244 fieldRegex:v245];

  *(void *)(v243 + 32) = v246;
  NSString v247 = sub_100222260();
  NSString v248 = sub_100222260();
  id v249 = [v113 fieldMatch:v247 fieldRegex:v248];

  *(void *)(v243 + 40) = v249;
  NSString v250 = sub_100222260();
  NSString v251 = sub_100222260();
  id v252 = [v113 fieldMatch:v250 fieldRegex:v251];

  *(void *)(v243 + 48) = v252;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v113 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v243 + 56) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v113 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v243 + 64) = v258;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v113 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v243 + 72) = v261;
  NSString v262 = sub_100222260();
  NSString v263 = sub_100222260();
  id v264 = [v113 fieldMatch:v262 fieldRegex:v263];

  *(void *)(v243 + 80) = v264;
  NSString v265 = sub_100222260();
  NSString v266 = sub_100222260();
  id v267 = [v113 fieldMatch:v265 fieldRegex:v266];

  *(void *)(v243 + 88) = v267;
  NSString v268 = sub_100222260();
  NSString v269 = sub_100222260();
  id v270 = [v113 fieldMatch:v268 fieldRegex:v269];

  *(void *)(v243 + 96) = v270;
  NSString v271 = sub_100222260();
  NSString v272 = sub_100222260();
  id v273 = [v113 fieldMatch:v271 fieldRegex:v272];

  *(void *)(v243 + 104) = v273;
  NSString v274 = sub_100222260();
  NSString v275 = sub_100222260();
  id v276 = [v113 fieldMatch:v274 fieldRegex:v275];

  *(void *)(v243 + 112) = v276;
  NSString v277 = sub_100222260();
  NSString v278 = sub_100222260();
  id v279 = [v113 fieldMatch:v277 fieldRegex:v278];

  *(void *)(v243 + 120) = v279;
  NSString v280 = sub_100222260();
  NSString v281 = sub_100222260();
  id v282 = [v113 fieldMatch:v280 fieldRegex:v281];

  *(void *)(v243 + 128) = v282;
  NSString v283 = sub_100222260();
  NSString v284 = sub_100222260();
  id v285 = [v113 fieldMatch:v283 fieldRegex:v284];

  *(void *)(v243 + 136) = v285;
  sub_1002223E0();
  Class v286 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v287 = [v113 orMatch:v286];

  NSString v288 = sub_100222260();
  id v289 = [v118 TPPBPolicyKeyViewMappingWithView:v288 matchingRule:v287];

  v112[20] = v289;
  uint64_t v290 = swift_allocObject();
  *(_OWORD *)(v290 + 16) = xmmword_1002296D0;
  NSString v291 = sub_100222260();
  NSString v292 = sub_100222260();
  id v293 = [v113 fieldMatch:v291 fieldRegex:v292];

  *(void *)(v290 + 32) = v293;
  NSString v294 = sub_100222260();
  NSString v295 = sub_100222260();
  id v296 = [v113 fieldMatch:v294 fieldRegex:v295];

  *(void *)(v290 + 40) = v296;
  sub_1002223E0();
  Class v297 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v298 = [v113 orMatch:v297];

  NSString v299 = sub_100222260();
  id v300 = [v118 TPPBPolicyKeyViewMappingWithView:v299 matchingRule:v298];

  v112[21] = v300;
  uint64_t v301 = swift_allocObject();
  *(_OWORD *)(v301 + 16) = xmmword_1002296E0;
  NSString v302 = sub_100222260();
  NSString v303 = sub_100222260();
  id v304 = [v113 fieldMatch:v302 fieldRegex:v303];

  *(void *)(v301 + 32) = v304;
  NSString v305 = sub_100222260();
  NSString v306 = sub_100222260();
  id v307 = [v113 fieldMatch:v305 fieldRegex:v306];

  *(void *)(v301 + 40) = v307;
  NSString v308 = sub_100222260();
  NSString v309 = sub_100222260();
  id v310 = [v113 fieldMatch:v308 fieldRegex:v309];

  *(void *)(v301 + 48) = v310;
  NSString v311 = sub_100222260();
  NSString v312 = sub_100222260();
  id v313 = [v113 fieldMatch:v311 fieldRegex:v312];

  *(void *)(v301 + 56) = v313;
  NSString v314 = sub_100222260();
  NSString v315 = sub_100222260();
  id v316 = [v113 fieldMatch:v314 fieldRegex:v315];

  *(void *)(v301 + 64) = v316;
  NSString v317 = sub_100222260();
  NSString v318 = sub_100222260();
  id v319 = [v113 fieldMatch:v317 fieldRegex:v318];

  *(void *)(v301 + 72) = v319;
  NSString v320 = sub_100222260();
  NSString v321 = sub_100222260();
  id v322 = [v113 fieldMatch:v320 fieldRegex:v321];

  *(void *)(v301 + 80) = v322;
  NSString v323 = sub_100222260();
  NSString v324 = sub_100222260();
  id v325 = [v113 fieldMatch:v323 fieldRegex:v324];

  *(void *)(v301 + 88) = v325;
  NSString v326 = sub_100222260();
  NSString v327 = sub_100222260();
  id v328 = [v113 fieldMatch:v326 fieldRegex:v327];

  *(void *)(v301 + 96) = v328;
  NSString v329 = sub_100222260();
  NSString v330 = sub_100222260();
  id v331 = [v113 fieldMatch:v329 fieldRegex:v330];

  *(void *)(v301 + 104) = v331;
  NSString v332 = sub_100222260();
  NSString v333 = sub_100222260();
  id v334 = [v113 fieldMatch:v332 fieldRegex:v333];

  *(void *)(v301 + 112) = v334;
  NSString v335 = sub_100222260();
  NSString v336 = sub_100222260();
  id v337 = [v113 fieldMatch:v335 fieldRegex:v336];

  *(void *)(v301 + 120) = v337;
  sub_1002223E0();
  Class v338 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v339 = [v113 orMatch:v338];

  NSString v340 = sub_100222260();
  id v341 = [v364 TPPBPolicyKeyViewMappingWithView:v340 matchingRule:v339];

  v112[22] = v341;
  uint64_t v342 = swift_allocObject();
  *(_OWORD *)(v342 + 16) = xmmword_100229680;
  NSString v343 = sub_100222260();
  NSString v344 = sub_100222260();
  id v345 = [v113 fieldMatch:v343 fieldRegex:v344];

  *(void *)(v342 + 32) = v345;
  NSString v346 = sub_100222260();
  NSString v347 = sub_100222260();
  id v348 = [v113 fieldMatch:v346 fieldRegex:v347];

  *(void *)(v342 + 40) = v348;
  NSString v349 = sub_100222260();
  NSString v350 = sub_100222260();
  id v351 = [v113 fieldMatch:v349 fieldRegex:v350];

  *(void *)(v342 + 48) = v351;
  sub_1002223E0();
  Class v352 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v353 = [v113 orMatch:v352];

  NSString v354 = sub_100222260();
  id v355 = [v364 TPPBPolicyKeyViewMappingWithView:v354 matchingRule:v353];

  v112[23] = v355;
  id v356 = [v113 trueMatch];
  NSString v357 = sub_100222260();
  id v358 = [v364 TPPBPolicyKeyViewMappingWithView:v357 matchingRule:v356];

  v112[24] = v358;
  sub_1002223E0();
  id v359 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(19, v363, v362, v361, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v112, (uint64_t)&off_100280980, (uint64_t)&off_1002809F0, (uint64_t)&off_100280A20, (uint64_t)&off_100280A60, 1);
}

unint64_t sub_1000365FC()
{
  return 0xD000000000001090;
}

id sub_100036618()
{
  sub_1000046DC(&qword_1002995D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100229750;
  NSString v1 = sub_100222260();
  NSString v2 = sub_100222260();
  id v3 = self;
  id v4 = [v3 TPPBPolicyModelToCategoryWithPrefix:v1 category:v2];

  *(void *)(v0 + 32) = v4;
  NSString v5 = sub_100222260();
  NSString v6 = sub_100222260();
  id v7 = [v3 TPPBPolicyModelToCategoryWithPrefix:v5 category:v6];

  *(void *)(v0 + 40) = v7;
  NSString v8 = sub_100222260();
  NSString v9 = sub_100222260();
  id v10 = [v3 TPPBPolicyModelToCategoryWithPrefix:v8 category:v9];

  *(void *)(v0 + 48) = v10;
  NSString v11 = sub_100222260();
  NSString v12 = sub_100222260();
  id v13 = [v3 TPPBPolicyModelToCategoryWithPrefix:v11 category:v12];

  *(void *)(v0 + 56) = v13;
  NSString v14 = sub_100222260();
  NSString v15 = sub_100222260();
  id v16 = [v3 TPPBPolicyModelToCategoryWithPrefix:v14 category:v15];

  *(void *)(v0 + 64) = v16;
  NSString v17 = sub_100222260();
  NSString v18 = sub_100222260();
  id v19 = [v3 TPPBPolicyModelToCategoryWithPrefix:v17 category:v18];

  *(void *)(v0 + 72) = v19;
  NSString v20 = sub_100222260();
  NSString v21 = sub_100222260();
  id v22 = [v3 TPPBPolicyModelToCategoryWithPrefix:v20 category:v21];

  *(void *)(v0 + 80) = v22;
  NSString v23 = sub_100222260();
  NSString v24 = sub_100222260();
  id v25 = [v3 TPPBPolicyModelToCategoryWithPrefix:v23 category:v24];

  *(void *)(v0 + 88) = v25;
  NSString v26 = sub_100222260();
  NSString v27 = sub_100222260();
  id v28 = [v3 TPPBPolicyModelToCategoryWithPrefix:v26 category:v27];

  *(void *)(v0 + 96) = v28;
  NSString v29 = sub_100222260();
  NSString v30 = sub_100222260();
  id v31 = [v3 TPPBPolicyModelToCategoryWithPrefix:v29 category:v30];

  *(void *)(v0 + 104) = v31;
  sub_1002223E0();
  uint64_t v363 = v0;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100229770;
  NSString v33 = sub_100222260();
  Class isa = sub_1002223B0().super.isa;
  Class v35 = self;
  id v36 = [v35 TPPBPolicyCategoriesByViewWithView:v33 categories:isa];

  *(void *)(v32 + 32) = v36;
  NSString v37 = sub_100222260();
  Class v38 = sub_1002223B0().super.isa;
  id v39 = [v35 TPPBPolicyCategoriesByViewWithView:v37 categories:v38];

  *(void *)(v32 + 40) = v39;
  NSString v40 = sub_100222260();
  Class v41 = sub_1002223B0().super.isa;
  id v42 = [v35 TPPBPolicyCategoriesByViewWithView:v40 categories:v41];

  *(void *)(v32 + 48) = v42;
  NSString v43 = sub_100222260();
  Class v44 = sub_1002223B0().super.isa;
  id v45 = [v35 TPPBPolicyCategoriesByViewWithView:v43 categories:v44];

  *(void *)(v32 + 56) = v45;
  NSString v46 = sub_100222260();
  Class v47 = sub_1002223B0().super.isa;
  id v48 = [v35 TPPBPolicyCategoriesByViewWithView:v46 categories:v47];

  *(void *)(v32 + 64) = v48;
  NSString v49 = sub_100222260();
  Class v50 = sub_1002223B0().super.isa;
  id v51 = [v35 TPPBPolicyCategoriesByViewWithView:v49 categories:v50];

  *(void *)(v32 + 72) = v51;
  NSString v52 = sub_100222260();
  Class v53 = sub_1002223B0().super.isa;
  id v54 = [v35 TPPBPolicyCategoriesByViewWithView:v52 categories:v53];

  *(void *)(v32 + 80) = v54;
  NSString v55 = sub_100222260();
  Class v56 = sub_1002223B0().super.isa;
  id v57 = [v35 TPPBPolicyCategoriesByViewWithView:v55 categories:v56];

  *(void *)(v32 + 88) = v57;
  NSString v58 = sub_100222260();
  Class v59 = sub_1002223B0().super.isa;
  id v60 = [v35 TPPBPolicyCategoriesByViewWithView:v58 categories:v59];

  *(void *)(v32 + 96) = v60;
  NSString v61 = sub_100222260();
  Class v62 = sub_1002223B0().super.isa;
  id v63 = [v35 TPPBPolicyCategoriesByViewWithView:v61 categories:v62];

  *(void *)(v32 + 104) = v63;
  NSString v64 = sub_100222260();
  Class v65 = sub_1002223B0().super.isa;
  id v66 = [v35 TPPBPolicyCategoriesByViewWithView:v64 categories:v65];

  *(void *)(v32 + 112) = v66;
  NSString v67 = sub_100222260();
  Class v68 = sub_1002223B0().super.isa;
  id v69 = [v35 TPPBPolicyCategoriesByViewWithView:v67 categories:v68];

  *(void *)(v32 + 120) = v69;
  NSString v70 = sub_100222260();
  Class v71 = sub_1002223B0().super.isa;
  id v72 = [v35 TPPBPolicyCategoriesByViewWithView:v70 categories:v71];

  *(void *)(v32 + 128) = v72;
  NSString v73 = sub_100222260();
  Class v74 = sub_1002223B0().super.isa;
  id v75 = [v35 TPPBPolicyCategoriesByViewWithView:v73 categories:v74];

  *(void *)(v32 + 136) = v75;
  NSString v76 = sub_100222260();
  Class v77 = sub_1002223B0().super.isa;
  id v78 = [v35 TPPBPolicyCategoriesByViewWithView:v76 categories:v77];

  *(void *)(v32 + 144) = v78;
  NSString v79 = sub_100222260();
  Class v80 = sub_1002223B0().super.isa;
  id v81 = [v35 TPPBPolicyCategoriesByViewWithView:v79 categories:v80];

  *(void *)(v32 + 152) = v81;
  NSString v82 = sub_100222260();
  Class v83 = sub_1002223B0().super.isa;
  id v84 = [v35 TPPBPolicyCategoriesByViewWithView:v82 categories:v83];

  *(void *)(v32 + 160) = v84;
  NSString v85 = sub_100222260();
  Class v86 = sub_1002223B0().super.isa;
  id v87 = [v35 TPPBPolicyCategoriesByViewWithView:v85 categories:v86];

  *(void *)(v32 + 168) = v87;
  NSString v88 = sub_100222260();
  Class v89 = sub_1002223B0().super.isa;
  id v90 = [v35 TPPBPolicyCategoriesByViewWithView:v88 categories:v89];

  *(void *)(v32 + 176) = v90;
  NSString v91 = sub_100222260();
  Class v92 = sub_1002223B0().super.isa;
  id v93 = [v35 TPPBPolicyCategoriesByViewWithView:v91 categories:v92];

  *(void *)(v32 + 184) = v93;
  sub_1002223E0();
  uint64_t v362 = v32;
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_100229710;
  NSString v95 = sub_100222260();
  Class v96 = sub_1002223B0().super.isa;
  Class v97 = self;
  id v98 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v95 introducers:v96];

  *(void *)(v94 + 32) = v98;
  NSString v99 = sub_100222260();
  Class v100 = sub_1002223B0().super.isa;
  id v101 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v99 introducers:v100];

  *(void *)(v94 + 40) = v101;
  NSString v102 = sub_100222260();
  Class v103 = sub_1002223B0().super.isa;
  id v104 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v102 introducers:v103];

  *(void *)(v94 + 48) = v104;
  NSString v105 = sub_100222260();
  Class v106 = sub_1002223B0().super.isa;
  id v107 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v105 introducers:v106];

  *(void *)(v94 + 56) = v107;
  NSString v108 = sub_100222260();
  Class v109 = sub_1002223B0().super.isa;
  id v110 = [v97 TPPBPolicyIntroducersByCategoryWithCategory:v108 introducers:v109];

  *(void *)(v94 + 64) = v110;
  sub_1002223E0();
  uint64_t v361 = v94;
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_100229780;
  NSString v112 = (void *)v111;
  id v113 = self;
  NSString v114 = sub_100222260();
  NSString v115 = sub_100222260();
  id v116 = [v113 fieldMatch:v114 fieldRegex:v115];

  NSString v117 = sub_100222260();
  NSString v118 = self;
  id v119 = [v118 TPPBPolicyKeyViewMappingWithView:v117 matchingRule:v116];

  v112[4] = v119;
  NSString v120 = sub_100222260();
  NSString v121 = sub_100222260();
  id v122 = [v113 fieldMatch:v120 fieldRegex:v121];

  NSString v123 = sub_100222260();
  id v124 = [v118 TPPBPolicyKeyViewMappingWithView:v123 matchingRule:v122];

  v112[5] = v124;
  NSString v125 = sub_100222260();
  NSString v126 = sub_100222260();
  id v127 = [v113 fieldMatch:v125 fieldRegex:v126];

  NSString v128 = sub_100222260();
  id v129 = [v118 TPPBPolicyKeyViewMappingWithView:v128 matchingRule:v127];

  v112[6] = v129;
  NSString v130 = sub_100222260();
  NSString v131 = sub_100222260();
  id v132 = [v113 fieldMatch:v130 fieldRegex:v131];

  NSString v133 = sub_100222260();
  id v134 = [v118 TPPBPolicyKeyViewMappingWithView:v133 matchingRule:v132];

  v112[7] = v134;
  NSString v135 = sub_100222260();
  NSString v136 = sub_100222260();
  id v137 = [v113 fieldMatch:v135 fieldRegex:v136];

  NSString v138 = sub_100222260();
  id v139 = [v118 TPPBPolicyKeyViewMappingWithView:v138 matchingRule:v137];

  v112[8] = v139;
  NSString v140 = sub_100222260();
  NSString v141 = sub_100222260();
  id v142 = [v113 fieldMatch:v140 fieldRegex:v141];

  NSString v143 = sub_100222260();
  id v144 = [v118 TPPBPolicyKeyViewMappingWithView:v143 matchingRule:v142];

  v112[9] = v144;
  NSString v145 = sub_100222260();
  NSString v146 = sub_100222260();
  id v147 = [v113 fieldMatch:v145 fieldRegex:v146];

  NSString v148 = sub_100222260();
  id v149 = [v118 TPPBPolicyKeyViewMappingWithView:v148 matchingRule:v147];

  v112[10] = v149;
  uint64_t v150 = swift_allocObject();
  *(_OWORD *)(v150 + 16) = xmmword_100229680;
  NSString v151 = sub_100222260();
  NSString v152 = sub_100222260();
  id v153 = [v113 fieldMatch:v151 fieldRegex:v152];

  *(void *)(v150 + 32) = v153;
  NSString v154 = sub_100222260();
  NSString v155 = sub_100222260();
  id v156 = [v113 fieldMatch:v154 fieldRegex:v155];

  *(void *)(v150 + 40) = v156;
  NSString v157 = sub_100222260();
  NSString v158 = sub_100222260();
  id v159 = [v113 fieldMatch:v157 fieldRegex:v158];

  *(void *)(v150 + 48) = v159;
  sub_1002223E0();
  sub_1000047D8(0, &qword_1002995E0);
  Class v160 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v161 = [v113 orMatch:v160];

  NSString v162 = sub_100222260();
  id v163 = [v118 TPPBPolicyKeyViewMappingWithView:v162 matchingRule:v161];

  v112[11] = v163;
  NSString v164 = sub_100222260();
  NSString v165 = sub_100222260();
  id v166 = [v113 fieldMatch:v164 fieldRegex:v165];

  NSString v167 = sub_100222260();
  id v168 = [v118 TPPBPolicyKeyViewMappingWithView:v167 matchingRule:v166];

  v112[12] = v168;
  NSString v169 = sub_100222260();
  NSString v170 = sub_100222260();
  id v171 = [v113 fieldMatch:v169 fieldRegex:v170];

  NSString v172 = sub_100222260();
  id v173 = [v118 TPPBPolicyKeyViewMappingWithView:v172 matchingRule:v171];

  v112[13] = v173;
  NSString v174 = sub_100222260();
  NSString v175 = sub_100222260();
  id v176 = [v113 fieldMatch:v174 fieldRegex:v175];

  NSString v177 = sub_100222260();
  id v178 = [v118 TPPBPolicyKeyViewMappingWithView:v177 matchingRule:v176];

  v112[14] = v178;
  NSString v179 = sub_100222260();
  NSString v180 = sub_100222260();
  id v181 = [v113 fieldMatch:v179 fieldRegex:v180];

  NSString v182 = sub_100222260();
  id v183 = [v118 TPPBPolicyKeyViewMappingWithView:v182 matchingRule:v181];

  v112[15] = v183;
  NSString v184 = sub_100222260();
  NSString v185 = sub_100222260();
  id v186 = [v113 fieldMatch:v184 fieldRegex:v185];

  NSString v187 = sub_100222260();
  id v364 = v118;
  id v188 = [v118 TPPBPolicyKeyViewMappingWithView:v187 matchingRule:v186];

  v112[16] = v188;
  NSString v189 = sub_100222260();
  NSString v190 = sub_100222260();
  id v191 = [v113 fieldMatch:v189 fieldRegex:v190];

  NSString v192 = sub_100222260();
  id v193 = [v118 TPPBPolicyKeyViewMappingWithView:v192 matchingRule:v191];

  v112[17] = v193;
  uint64_t v194 = swift_allocObject();
  *(_OWORD *)(v194 + 16) = xmmword_1002296B0;
  uint64_t v195 = swift_allocObject();
  *(_OWORD *)(v195 + 16) = xmmword_1002296D0;
  NSString v196 = sub_100222260();
  NSString v197 = sub_100222260();
  id v198 = [v113 fieldMatch:v196 fieldRegex:v197];

  *(void *)(v195 + 32) = v198;
  NSString v199 = sub_100222260();
  NSString v200 = sub_100222260();
  id v201 = [v113 fieldMatch:v199 fieldRegex:v200];

  *(void *)(v195 + 40) = v201;
  sub_1002223E0();
  Class v202 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v203 = [v113 andMatch:v202];

  *(void *)(v194 + 32) = v203;
  uint64_t v204 = swift_allocObject();
  *(_OWORD *)(v204 + 16) = xmmword_1002296D0;
  NSString v205 = sub_100222260();
  NSString v206 = sub_100222260();
  id v207 = [v113 fieldMatch:v205 fieldRegex:v206];

  *(void *)(v204 + 32) = v207;
  NSString v208 = sub_100222260();
  NSString v209 = sub_100222260();
  id v210 = [v113 fieldMatch:v208 fieldRegex:v209];

  *(void *)(v204 + 40) = v210;
  sub_1002223E0();
  Class v211 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v212 = [v113 andMatch:v211];

  *(void *)(v194 + 40) = v212;
  NSString v213 = sub_100222260();
  NSString v214 = sub_100222260();
  id v215 = [v113 fieldMatch:v213 fieldRegex:v214];

  *(void *)(v194 + 48) = v215;
  NSString v216 = sub_100222260();
  NSString v217 = sub_100222260();
  id v218 = [v113 fieldMatch:v216 fieldRegex:v217];

  *(void *)(v194 + 56) = v218;
  sub_1002223E0();
  Class v219 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v220 = [v113 orMatch:v219];

  NSString v221 = sub_100222260();
  id v222 = [v118 TPPBPolicyKeyViewMappingWithView:v221 matchingRule:v220];

  v112[18] = v222;
  uint64_t v223 = swift_allocObject();
  *(_OWORD *)(v223 + 16) = xmmword_1002296D0;
  NSString v224 = sub_100222260();
  NSString v225 = sub_100222260();
  id v226 = [v113 fieldMatch:v224 fieldRegex:v225];

  *(void *)(v223 + 32) = v226;
  uint64_t v227 = swift_allocObject();
  *(_OWORD *)(v227 + 16) = xmmword_100229680;
  NSString v228 = sub_100222260();
  NSString v229 = sub_100222260();
  id v230 = [v113 fieldMatch:v228 fieldRegex:v229];

  *(void *)(v227 + 32) = v230;
  NSString v231 = sub_100222260();
  NSString v232 = sub_100222260();
  id v233 = [v113 fieldMatch:v231 fieldRegex:v232];

  *(void *)(v227 + 40) = v233;
  NSString v234 = sub_100222260();
  NSString v235 = sub_100222260();
  id v236 = [v113 fieldMatch:v234 fieldRegex:v235];

  *(void *)(v227 + 48) = v236;
  sub_1002223E0();
  Class v237 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v238 = [v113 andMatch:v237];

  *(void *)(v223 + 40) = v238;
  sub_1002223E0();
  Class v239 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v240 = [v113 orMatch:v239];

  NSString v241 = sub_100222260();
  id v242 = [v118 TPPBPolicyKeyViewMappingWithView:v241 matchingRule:v240];

  v112[19] = v242;
  uint64_t v243 = swift_allocObject();
  *(_OWORD *)(v243 + 16) = xmmword_1002296F0;
  NSString v244 = sub_100222260();
  NSString v245 = sub_100222260();
  id v246 = [v113 fieldMatch:v244 fieldRegex:v245];

  *(void *)(v243 + 32) = v246;
  NSString v247 = sub_100222260();
  NSString v248 = sub_100222260();
  id v249 = [v113 fieldMatch:v247 fieldRegex:v248];

  *(void *)(v243 + 40) = v249;
  NSString v250 = sub_100222260();
  NSString v251 = sub_100222260();
  id v252 = [v113 fieldMatch:v250 fieldRegex:v251];

  *(void *)(v243 + 48) = v252;
  NSString v253 = sub_100222260();
  NSString v254 = sub_100222260();
  id v255 = [v113 fieldMatch:v253 fieldRegex:v254];

  *(void *)(v243 + 56) = v255;
  NSString v256 = sub_100222260();
  NSString v257 = sub_100222260();
  id v258 = [v113 fieldMatch:v256 fieldRegex:v257];

  *(void *)(v243 + 64) = v258;
  NSString v259 = sub_100222260();
  NSString v260 = sub_100222260();
  id v261 = [v113 fieldMatch:v259 fieldRegex:v260];

  *(void *)(v243 + 72) = v261;
  NSString v262 = sub_100222260();
  NSString v263 = sub_100222260();
  id v264 = [v113 fieldMatch:v262 fieldRegex:v263];

  *(void *)(v243 + 80) = v264;
  NSString v265 = sub_100222260();
  NSString v266 = sub_100222260();
  id v267 = [v113 fieldMatch:v265 fieldRegex:v266];

  *(void *)(v243 + 88) = v267;
  NSString v268 = sub_100222260();
  NSString v269 = sub_100222260();
  id v270 = [v113 fieldMatch:v268 fieldRegex:v269];

  *(void *)(v243 + 96) = v270;
  NSString v271 = sub_100222260();
  NSString v272 = sub_100222260();
  id v273 = [v113 fieldMatch:v271 fieldRegex:v272];

  *(void *)(v243 + 104) = v273;
  NSString v274 = sub_100222260();
  NSString v275 = sub_100222260();
  id v276 = [v113 fieldMatch:v274 fieldRegex:v275];

  *(void *)(v243 + 112) = v276;
  NSString v277 = sub_100222260();
  NSString v278 = sub_100222260();
  id v279 = [v113 fieldMatch:v277 fieldRegex:v278];

  *(void *)(v243 + 120) = v279;
  NSString v280 = sub_100222260();
  NSString v281 = sub_100222260();
  id v282 = [v113 fieldMatch:v280 fieldRegex:v281];

  *(void *)(v243 + 128) = v282;
  NSString v283 = sub_100222260();
  NSString v284 = sub_100222260();
  id v285 = [v113 fieldMatch:v283 fieldRegex:v284];

  *(void *)(v243 + 136) = v285;
  sub_1002223E0();
  Class v286 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v287 = [v113 orMatch:v286];

  NSString v288 = sub_100222260();
  id v289 = [v118 TPPBPolicyKeyViewMappingWithView:v288 matchingRule:v287];

  v112[20] = v289;
  uint64_t v290 = swift_allocObject();
  *(_OWORD *)(v290 + 16) = xmmword_1002296D0;
  NSString v291 = sub_100222260();
  NSString v292 = sub_100222260();
  id v293 = [v113 fieldMatch:v291 fieldRegex:v292];

  *(void *)(v290 + 32) = v293;
  NSString v294 = sub_100222260();
  NSString v295 = sub_100222260();
  id v296 = [v113 fieldMatch:v294 fieldRegex:v295];

  *(void *)(v290 + 40) = v296;
  sub_1002223E0();
  Class v297 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v298 = [v113 orMatch:v297];

  NSString v299 = sub_100222260();
  id v300 = [v118 TPPBPolicyKeyViewMappingWithView:v299 matchingRule:v298];

  v112[21] = v300;
  uint64_t v301 = swift_allocObject();
  *(_OWORD *)(v301 + 16) = xmmword_1002296E0;
  NSString v302 = sub_100222260();
  NSString v303 = sub_100222260();
  id v304 = [v113 fieldMatch:v302 fieldRegex:v303];

  *(void *)(v301 + 32) = v304;
  NSString v305 = sub_100222260();
  NSString v306 = sub_100222260();
  id v307 = [v113 fieldMatch:v305 fieldRegex:v306];

  *(void *)(v301 + 40) = v307;
  NSString v308 = sub_100222260();
  NSString v309 = sub_100222260();
  id v310 = [v113 fieldMatch:v308 fieldRegex:v309];

  *(void *)(v301 + 48) = v310;
  NSString v311 = sub_100222260();
  NSString v312 = sub_100222260();
  id v313 = [v113 fieldMatch:v311 fieldRegex:v312];

  *(void *)(v301 + 56) = v313;
  NSString v314 = sub_100222260();
  NSString v315 = sub_100222260();
  id v316 = [v113 fieldMatch:v314 fieldRegex:v315];

  *(void *)(v301 + 64) = v316;
  NSString v317 = sub_100222260();
  NSString v318 = sub_100222260();
  id v319 = [v113 fieldMatch:v317 fieldRegex:v318];

  *(void *)(v301 + 72) = v319;
  NSString v320 = sub_100222260();
  NSString v321 = sub_100222260();
  id v322 = [v113 fieldMatch:v320 fieldRegex:v321];

  *(void *)(v301 + 80) = v322;
  NSString v323 = sub_100222260();
  NSString v324 = sub_100222260();
  id v325 = [v113 fieldMatch:v323 fieldRegex:v324];

  *(void *)(v301 + 88) = v325;
  NSString v326 = sub_100222260();
  NSString v327 = sub_100222260();
  id v328 = [v113 fieldMatch:v326 fieldRegex:v327];

  *(void *)(v301 + 96) = v328;
  NSString v329 = sub_100222260();
  NSString v330 = sub_100222260();
  id v331 = [v113 fieldMatch:v329 fieldRegex:v330];

  *(void *)(v301 + 104) = v331;
  NSString v332 = sub_100222260();
  NSString v333 = sub_100222260();
  id v334 = [v113 fieldMatch:v332 fieldRegex:v333];

  *(void *)(v301 + 112) = v334;
  NSString v335 = sub_100222260();
  NSString v336 = sub_100222260();
  id v337 = [v113 fieldMatch:v335 fieldRegex:v336];

  *(void *)(v301 + 120) = v337;
  sub_1002223E0();
  Class v338 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v339 = [v113 orMatch:v338];

  NSString v340 = sub_100222260();
  id v341 = [v364 TPPBPolicyKeyViewMappingWithView:v340 matchingRule:v339];

  v112[22] = v341;
  uint64_t v342 = swift_allocObject();
  *(_OWORD *)(v342 + 16) = xmmword_100229680;
  NSString v343 = sub_100222260();
  NSString v344 = sub_100222260();
  id v345 = [v113 fieldMatch:v343 fieldRegex:v344];

  *(void *)(v342 + 32) = v345;
  NSString v346 = sub_100222260();
  NSString v347 = sub_100222260();
  id v348 = [v113 fieldMatch:v346 fieldRegex:v347];

  *(void *)(v342 + 40) = v348;
  NSString v349 = sub_100222260();
  NSString v350 = sub_100222260();
  id v351 = [v113 fieldMatch:v349 fieldRegex:v350];

  *(void *)(v342 + 48) = v351;
  sub_1002223E0();
  Class v352 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v353 = [v113 orMatch:v352];

  NSString v354 = sub_100222260();
  id v355 = [v364 TPPBPolicyKeyViewMappingWithView:v354 matchingRule:v353];

  v112[23] = v355;
  id v356 = [v113 trueMatch];
  NSString v357 = sub_100222260();
  id v358 = [v364 TPPBPolicyKeyViewMappingWithView:v357 matchingRule:v356];

  v112[24] = v358;
  sub_1002223E0();
  id v359 = objc_allocWithZone((Class)TPPolicyDocument);
  return sub_100039D2C(20, v363, v362, v361, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v112, (uint64_t)&off_1002811D0, (uint64_t)&off_100281240, (uint64_t)&off_100281270, (uint64_t)&off_1002812B0, 1);
}

BOOL sub_1000394B8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_100222AF0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_100039584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_100222B00();
    sub_1002222E0();
    Swift::Int v6 = sub_100222B20();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_100222A30() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          id v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_100222A30() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000396BC(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1002227A0();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v6 = sub_100222640(*(void *)(a2 + 40)),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1000047D8(0, &qword_10029EC30);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_100222650();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_100222650();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

void *sub_10003981C(uint64_t *a1)
{
  uint64_t v2 = sub_10000DC84();
  uint64_t v3 = sub_1000399CC(v2, a1);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_10018D0DC(0, v4, 0);
    uint64_t v5 = (void *)(v3 + 64);
    do
    {
      uint64_t v6 = *v5;
      uint64_t v7 = swift_allocObject();
      long long v14 = *((_OWORD *)v5 - 2);
      long long v15 = *((_OWORD *)v5 - 1);
      *(_OWORD *)(v7 + 16) = v14;
      *(_OWORD *)(v7 + 32) = v15;
      *(void *)(v7 + 48) = v6;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_100039F5C;
      *(void *)(v8 + 24) = v7;
      id v9 = (id)v14;
      swift_retain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10018D0DC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_10018D0DC(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      char v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = sub_100039F9C;
      v12[5] = v8;
      v5 += 5;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000399CC(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 16);
  if (!v3)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)&_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  uint64_t v19 = result + 32;
  while (v4 < *(void *)(v2 + 16))
  {
    uint64_t v5 = v19 + 40 * v4;
    long long v21 = *(_OWORD *)v5;
    long long v22 = *(_OWORD *)(v5 + 16);
    uint64_t v6 = *(void *)(v5 + 32);
    ++v4;
    id v7 = *(id *)v5;
    swift_retain();
    swift_retain();
    id v8 = [v7 versionNumber];
    uint64_t v9 = *a2;
    if (*(void *)(*a2 + 16)
      && (id v10 = v8,
          uint64_t v11 = sub_100222AF0(),
          uint64_t v12 = -1 << *(unsigned char *)(v9 + 32),
          unint64_t v13 = v11 & ~v12,
          ((*(void *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0))
    {
      uint64_t v14 = *(void *)(v9 + 48);
      if (*(id *)(v14 + 8 * v13) != v10)
      {
        uint64_t v15 = ~v12;
        do
        {
          unint64_t v13 = (v13 + 1) & v15;
          if (((*(void *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
            goto LABEL_12;
          }
        }
        while (*(id *)(v14 + 8 * v13) != v10);
      }
      swift_release();

      uint64_t result = swift_release();
      if (v4 == v3) {
        goto LABEL_17;
      }
    }
    else
    {
LABEL_12:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_10018D0FC(0, *((void *)&_swiftEmptyArrayStorage + 2) + 1, 1);
      }
      unint64_t v17 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v16 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v17 >= v16 >> 1) {
        uint64_t result = sub_10018D0FC(v16 > 1, v17 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v17 + 1;
      NSString v18 = (char *)&_swiftEmptyArrayStorage + 40 * v17;
      *((_OWORD *)v18 + 2) = v21;
      *((_OWORD *)v18 + 3) = v22;
      *((void *)v18 + 8) = v6;
      if (v4 == v3) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100039BDC(uint64_t a1)
{
  (*(void (**)(void))(a1 + 8))();
  uint64_t v2 = sub_100221BB0();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4 >> 60 != 15)
  {
    NSString v5 = [*(id *)a1 policyHash];
    if (!v5)
    {
      sub_100222270();
      NSString v5 = sub_100222260();
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = self;
    Class isa = sub_100221BD0().super.isa;
    id v8 = [v6 policyDocWithHash:v5 data:isa];
    sub_100039FCC(v2, v4);

    if (v8) {
      return (uint64_t)v8;
    }
  }
  uint64_t result = sub_100222960();
  __break(1u);
  return result;
}

id sub_100039D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1000047D8(0, &qword_1002995E8);
  Class isa = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  sub_1000047D8(0, &qword_1002995F0);
  Class v11 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  sub_1000047D8(0, &qword_1002995F8);
  Class v12 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  sub_1000047D8(0, &qword_100299600);
  Class v13 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  sub_1000047D8(0, &qword_100299608);
  Class v14 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  Class v15 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  Class v16 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  Class v17 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  Class v18 = sub_1002223B0().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v23 initWithVersion:a1 modelToCategory:isa categoriesByView:v11 introducersByCategory:v12 redactions:v13 keyViewMapping:v14 userControllableViewList:v15 piggybackViews:v16 priorityViews:v17 inheritedExcludedViews:v18 hashAlgo:a11];

  return v19;
}

uint64_t sub_100039F5C()
{
  return sub_100039BDC(v0 + 16);
}

uint64_t sub_100039F64()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100039F9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_100039FCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100005A40(a1, a2);
  }
  return a1;
}

uint64_t sub_100039FE0(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_10000DC84();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t result = (uint64_t)v1;
  NSString v5 = (void *)result;
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v3)
  {
    unint64_t v7 = 0;
    uint64_t v8 = v2 + 64;
    uint64_t v30 = v3;
    uint64_t v28 = v3 - 1;
    do
    {
      NSString v29 = v6;
      uint64_t v9 = (void *)(v8 + 40 * v7);
      unint64_t v10 = v7;
      while (1)
      {
        if (v10 >= *(void *)(v2 + 16))
        {
          __break(1u);
          return result;
        }
        long long v31 = *((_OWORD *)v9 - 1);
        long long v33 = *((_OWORD *)v9 - 2);
        uint64_t v11 = *v9;
        id v12 = v5;
        id v13 = (id)v33;
        swift_retain();
        swift_retain();
        id v14 = [v13 versionNumber];
        unint64_t v15 = (unint64_t)[v12 version];

        if ((v15 & 0x8000000000000000) == 0 && v14 == (id)v15) {
          break;
        }
        ++v10;
        swift_release();

        uint64_t result = swift_release();
        v9 += 5;
        if (v30 == v10)
        {
          uint64_t v6 = v29;
          goto LABEL_15;
        }
      }
      uint64_t v6 = v29;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_10018D0FC(0, v29[2] + 1, 1);
        uint64_t v6 = v29;
      }
      unint64_t v17 = v6[2];
      unint64_t v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        uint64_t result = sub_10018D0FC(v16 > 1, v17 + 1, 1);
        uint64_t v6 = v29;
      }
      unint64_t v7 = v10 + 1;
      v6[2] = v17 + 1;
      Class v18 = &v6[5 * v17];
      *((_OWORD *)v18 + 2) = v33;
      *((_OWORD *)v18 + 3) = v31;
      v18[8] = v11;
      uint64_t v8 = v2 + 64;
    }
    while (v28 != v10);
  }
LABEL_15:

  swift_bridgeObjectRelease();
  int64_t v19 = v6[2];
  if (v19)
  {
    sub_10018D0DC(0, v19, 0);
    NSString v20 = v6 + 8;
    do
    {
      uint64_t v21 = *v20;
      uint64_t v22 = swift_allocObject();
      long long v32 = *((_OWORD *)v20 - 2);
      long long v34 = *((_OWORD *)v20 - 1);
      *(_OWORD *)(v22 + 16) = v32;
      *(_OWORD *)(v22 + 32) = v34;
      *(void *)(v22 + 48) = v21;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_10003A5CC;
      *(void *)(v23 + 24) = v22;
      id v24 = (id)v32;
      swift_retain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10018D0DC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v26 = _swiftEmptyArrayStorage[2];
      unint64_t v25 = _swiftEmptyArrayStorage[3];
      if (v26 >= v25 >> 1) {
        sub_10018D0DC(v25 > 1, v26 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v26 + 1;
      NSString v27 = &_swiftEmptyArrayStorage[2 * v26];
      v27[4] = sub_10003A5C4;
      v27[5] = v23;
      v20 += 5;
      --v19;
    }
    while (v19);
  }
  swift_release();
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_10003A328()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t initializeBufferWithCopyOfBuffer for RawPolicy(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for RawPolicy(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for RawPolicy(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 4);
  long long v4 = *a2;
  long long v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v3;
  id v6 = (id)v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RawPolicy(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for RawPolicy(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RawPolicy(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawPolicy(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawPolicy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawPolicy()
{
  return &type metadata for RawPolicy;
}

uint64_t sub_10003A5D0()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_100299610);
  sub_100003CC8(v0, (uint64_t)qword_100299610);
  return sub_100222080();
}

void sub_10003A64C(char *a1@<X0>, int a2@<W2>, uint64_t *a3@<X8>)
{
  if (!a1)
  {
    if (qword_100298BB8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_100222090();
    sub_100003CC8(v7, (uint64_t)qword_100299610);
    uint64_t v8 = sub_100222070();
    os_log_type_t v9 = sub_100222500();
    if (!os_log_type_enabled(v8, v9)) {
      goto LABEL_13;
    }
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "failed to bind memory", v10, 2u);
    goto LABEL_12;
  }
  sub_1002220B0();
  if ((uint64_t)confstr(a2, a1, 0x400uLL) > 0)
  {
    *a3 = sub_100222320();
    a3[1] = v6;
    return;
  }
  if (qword_100298BB8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_100299610);
  uint64_t v8 = sub_100222070();
  os_log_type_t v12 = sub_100222500();
  if (os_log_type_enabled(v8, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109376;
    sub_100222690();
    *(_WORD *)(v13 + 8) = 1024;
    sub_1002220A0();
    sub_100222690();
    _os_log_impl((void *)&_mh_execute_header, v8, v12, "confstr %d failed: %d", (uint8_t *)v13, 0xEu);
LABEL_12:
    swift_slowDealloc();
  }
LABEL_13:

  *a3 = 0;
  a3[1] = 0;
}

void sub_10003A878(uint64_t *a1, int a2)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v7 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_100229520;
      uint64_t v8 = v3 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v8 < (int)v3) {
        goto LABEL_15;
      }
      if (sub_100221A30() && __OFSUB__((int)v3, sub_100221A60())) {
        goto LABEL_16;
      }
      sub_100221A70();
      swift_allocObject();
      uint64_t v10 = sub_100221A10();
      swift_release();
      uint64_t v7 = v10;
LABEL_11:
      if (v8 < (int)v3)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      sub_10003AB60((int)v3, v3 >> 32, v7, a2);
      *a1 = v3;
      a1[1] = v7 | 0x4000000000000000;
      return;
    case 2uLL:
      uint64_t v12 = *a1;
      unint64_t v13 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100221B90();
      uint64_t v9 = v13;
      sub_10003AB60(*(void *)(v12 + 16), *(void *)(v12 + 24), v13, a2);
      *a1 = v12;
      a1[1] = v9 | 0x8000000000000000;
      return;
    case 3uLL:
      memset(v11, 0, 15);
      sub_10003A64C((char *)v11, a2, &v12);
      return;
    default:
      v11[0] = *a1;
      LOWORD(v11[1]) = v2;
      BYTE2(v11[1]) = BYTE2(v2);
      BYTE3(v11[1]) = BYTE3(v2);
      BYTE4(v11[1]) = BYTE4(v2);
      BYTE5(v11[1]) = BYTE5(v2);
      BYTE6(v11[1]) = BYTE6(v2);
      sub_10003A64C((char *)v11, a2, &v12);
      unint64_t v6 = LODWORD(v11[1]) | ((unint64_t)BYTE4(v11[1]) << 32) | ((unint64_t)BYTE5(v11[1]) << 40) | ((unint64_t)BYTE6(v11[1]) << 48);
      *a1 = v11[0];
      a1[1] = v6;
      return;
  }
}

void sub_10003AB60(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7 = sub_100221A30();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_100221A60();
    uint64_t v10 = a1 - v9;
    if (__OFSUB__(a1, v9))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_100221A50();
      sub_10003A64C((char *)(v8 + v10), a4, &v11);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10003AC0C(int a1)
{
  sub_100221A70();
  swift_allocObject();
  uint64_t v2 = sub_100221A40();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    if (sub_100221A30())
    {
      uint64_t result = sub_100221A60();
      if (__OFSUB__(0, result)) {
        goto LABEL_12;
      }
    }
    swift_allocObject();
    uint64_t v4 = sub_100221A10();
    swift_release();
    uint64_t v2 = v4;
  }
  uint64_t result = sub_100221A30();
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = sub_100221A60();
  uint64_t v6 = -result;
  if (__OFSUB__(0, result))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = sub_100221A50();
  if (v7 >= 1024) {
    size_t v8 = 1024;
  }
  else {
    size_t v8 = v7;
  }
  bzero((void *)(v5 + v6), v8);
  uint64_t v11 = 0x40000000000;
  unint64_t v12 = v2 | 0x4000000000000000;
  sub_10003A878(&v11, a1);
  uint64_t v10 = v9;
  sub_100005A40(v11, v12);
  return v10;
}

uint64_t FetchPolicyDocumentsRequest._protobuf_generated_isEqualTo(other:)(void *a1)
{
  return sub_1000C6908(v1, a1);
}

uint64_t FetchPolicyDocumentsResponse._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  uint64_t v3 = sub_100221DF0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  size_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v17 - v10;
  if (sub_10003CA7C(*v1, *a1))
  {
    uint64_t PolicyDocumentsResponse = type metadata accessor for FetchPolicyDocumentsResponse(0);
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v13(v11, (char *)v1 + *(int *)(PolicyDocumentsResponse + 20), v3);
    v13(v8, (char *)a1 + *(int *)(PolicyDocumentsResponse + 20), v3);
    sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v14 = sub_100222250();
    unint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v8, v3);
    v15(v11, v3);
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t FetchChangesRequest._protobuf_generated_isEqualTo(other:)(char *a1)
{
  return _s18TrustedPeersHelper19FetchChangesRequestV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t FetchChangesResponse._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_1000CCA0C(v1, a1);
}

uint64_t FetchViableBottlesRequest._protobuf_generated_isEqualTo(other:)(char *a1)
{
  return _s18TrustedPeersHelper25FetchViableBottlesRequestV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t FetchViableBottlesResponse._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  return _s18TrustedPeersHelper26FetchViableBottlesResponseV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t EscrowPair._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_1000D70A4(v1, a1);
}

uint64_t SetRecoveryKeyRequest._protobuf_generated_isEqualTo(other:)(void *a1)
{
  return _s18TrustedPeersHelper21SetRecoveryKeyRequestV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t SetRecoveryKeyResponse._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  return sub_1000CA7E4(v1, a1);
}

uint64_t UpdateTrustRequest._protobuf_generated_isEqualTo(other:)(void *a1)
{
  return _s18TrustedPeersHelper18UpdateTrustRequestV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t UpdateTrustResponse._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  return sub_1000CCF24(v1, a1);
}

uint64_t JoinWithVoucherRequest._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_1000CB0D0(v1, a1);
}

uint64_t JoinWithVoucherResponse._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  return sub_1000C96F4(v1, a1);
}

uint64_t EstablishRequest._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_1000D1BCC(v1, a1);
}

uint64_t EstablishResponse._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  return sub_1000CF4A4(v1, a1);
}

uint64_t ResetRequest._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  return _s18TrustedPeersHelper12ResetRequestV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t ResetResponse._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return _s18TrustedPeersHelper13ResetResponseV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t PolicyDocumentMapEntry._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return _s18TrustedPeersHelper22PolicyDocumentMapEntryV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t PolicyDocumentKey._protobuf_generated_isEqualTo(other:)(char *a1)
{
  uint64_t v3 = sub_100221DF0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  size_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v18 - v10;
  if (*(void *)v1 == *(void *)a1)
  {
    BOOL v12 = *((void *)v1 + 1) == *((void *)a1 + 1) && *((void *)v1 + 2) == *((void *)a1 + 2);
    if (v12 || (char v13 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v14 = type metadata accessor for PolicyDocumentKey(0);
      unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v15(v11, &v1[*(int *)(v14 + 24)], v3);
      v15(v8, &a1[*(int *)(v14 + 24)], v3);
      sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v13 = sub_100222250();
      unint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
      v16(v8, v3);
      v16(v11, v3);
    }
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t Changes._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  uint64_t v3 = sub_100221DF0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  size_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v18 - v10;
  BOOL v12 = *(void *)v1 == *(void *)a1 && *(void *)(v1 + 8) == *(void *)(a1 + 8);
  if (v12 || (char v13 = 0, (sub_100222A30() & 1) != 0))
  {
    if ((sub_10003F80C(*(void *)(v1 + 16), *(void *)(a1 + 16)) & 1) != 0
      && (sub_10003FE7C(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(a1 + 24), *(void *)(a1 + 32)) & 1) != 0
      && (sub_10003FE7C(*(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(a1 + 40), *(void *)(a1 + 48)) & 1) != 0
      && *(unsigned __int8 *)(v1 + 56) == *(unsigned __int8 *)(a1 + 56))
    {
      uint64_t v15 = type metadata accessor for Changes(0);
      unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v16(v11, v1 + *(int *)(v15 + 36), v3);
      v16(v8, a1 + *(int *)(v15 + 36), v3);
      sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v13 = sub_100222250();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v8, v3);
      v17(v11, v3);
    }
    else
    {
      char v13 = 0;
    }
  }
  return v13 & 1;
}

uint64_t TLKShare._protobuf_generated_isEqualTo(other:)(char *a1)
{
  return _s18TrustedPeersHelper8TLKShareV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t PeerDifference._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return _s18TrustedPeersHelper14PeerDifferenceV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t Peer._protobuf_generated_isEqualTo(other:)(void *a1)
{
  return _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t SignedPeerDynamicInfo._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_10003B420(a1, type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t SignedRecoveryVoucher._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_10003B420(a1, type metadata accessor for SignedRecoveryVoucher);
}

uint64_t sub_10003B420(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  char v13 = (char *)&v19 - v12;
  if ((sub_10003FE7C(*(void *)v2, *(void *)(v2 + 8), *(void *)a1, *(void *)(a1 + 8)) & 1) != 0
    && (sub_10003FE7C(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24)) & 1) != 0)
  {
    uint64_t v14 = a2(0);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v15(v13, v2 + *(int *)(v14 + 24), v5);
    v15(v10, a1 + *(int *)(v14 + 24), v5);
    sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v16 = sub_100222250();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17(v10, v5);
    v17(v13, v5);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t SignedVoucher._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_10003B420(a1, type metadata accessor for SignedVoucher);
}

uint64_t SignedPeerStableInfo._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_10003B420(a1, type metadata accessor for SignedPeerStableInfo);
}

uint64_t SignedPeerPermanentInfo._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_10003B420(a1, type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t Bottle._protobuf_generated_isEqualTo(other:)(uint64_t *a1)
{
  return _s18TrustedPeersHelper6BottleV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t ViewKey._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return _s18TrustedPeersHelper7ViewKeyV2eeoiySbAC_ACtFZ_0(v1, a1);
}

uint64_t ViewKeys._protobuf_generated_isEqualTo(other:)(uint64_t a1)
{
  return sub_1000C3830(v1, a1);
}

uint64_t sub_10003B65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221D50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  NSString v85 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v66 - v10;
  uint64_t v12 = type metadata accessor for ViewKeysRecords(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  char v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000046DC(&qword_100299648);
  __chkstk_darwin(v17 - 8, v18);
  NSString v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000046DC(&qword_100299650);
  __chkstk_darwin(v77, v21);
  uint64_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecoverableTLKShares = type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
  uint64_t v25 = __chkstk_darwin(RecoverableTLKShares, v24);
  Class v80 = (uint64_t *)((char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25, v27);
  NSString v79 = (uint64_t *)((char *)&v66 - v29);
  uint64_t v30 = *(void *)(a1 + 16);
  if (v30 != *(void *)(a2 + 16))
  {
LABEL_29:
    char v65 = 0;
    return v65 & 1;
  }
  if (!v30 || a1 == a2)
  {
    char v65 = 1;
    return v65 & 1;
  }
  Class v71 = v23;
  uint64_t v72 = v12;
  NSString v67 = v16;
  Class v68 = v20;
  uint64_t v31 = 0;
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v74 = a2 + v32;
  uint64_t v75 = a1 + v32;
  uint64_t v73 = *(void *)(v28 + 72);
  uint64_t v69 = v30;
  NSString v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v33 = v5 + 16;
  uint64_t v66 = v5;
  NSString v82 = (void (**)(char *, uint64_t))(v5 + 8);
  while (1)
  {
    uint64_t v76 = v31;
    uint64_t v34 = v73 * v31;
    Class v35 = v79;
    sub_100040280(v75 + v73 * v31, (uint64_t)v79, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
    uint64_t v36 = v74 + v34;
    NSString v37 = v80;
    sub_100040280(v36, (uint64_t)v80, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
    BOOL v38 = *v35 == *v37 && v35[1] == v37[1];
    if (!v38 && (sub_100222A30() & 1) == 0) {
      goto LABEL_28;
    }
    uint64_t v39 = *(int *)(RecoverableTLKShares + 28);
    uint64_t v40 = (uint64_t)v80 + v39;
    uint64_t v41 = (uint64_t)v71;
    uint64_t v42 = (uint64_t)&v71[*(int *)(v77 + 48)];
    sub_10000D830((uint64_t)v79 + v39, (uint64_t)v71, &qword_100299648);
    sub_10000D830(v40, v42, &qword_100299648);
    NSString v43 = *v70;
    uint64_t v44 = v72;
    if ((*v70)(v41, 1, v72) == 1)
    {
      if (v43(v42, 1, v44) != 1) {
        goto LABEL_27;
      }
      sub_10004015C(v41, &qword_100299648);
    }
    else
    {
      uint64_t v45 = (uint64_t)v68;
      sub_10000D830(v41, (uint64_t)v68, &qword_100299648);
      if (v43(v42, 1, v44) == 1)
      {
        sub_1000401B8(v45, type metadata accessor for ViewKeysRecords);
LABEL_27:
        sub_10004015C(v41, &qword_100299650);
LABEL_28:
        sub_1000401B8((uint64_t)v80, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
        sub_1000401B8((uint64_t)v79, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
        goto LABEL_29;
      }
      uint64_t v46 = (uint64_t)v67;
      sub_100040218(v42, (uint64_t)v67, type metadata accessor for ViewKeysRecords);
      char v47 = static ViewKeysRecords.== infix(_:_:)(v45, v46);
      sub_1000401B8(v46, type metadata accessor for ViewKeysRecords);
      sub_1000401B8(v45, type metadata accessor for ViewKeysRecords);
      sub_10004015C(v41, &qword_100299648);
      if ((v47 & 1) == 0) {
        goto LABEL_28;
      }
    }
    uint64_t v48 = v80[2];
    uint64_t v84 = v79[2];
    uint64_t v49 = *(void *)(v48 + 16);
    uint64_t v86 = *(void *)(v84 + 16);
    if (v86 != v49) {
      goto LABEL_28;
    }
    if (v86 && v84 != v48) {
      break;
    }
LABEL_22:
    uint64_t v63 = (uint64_t)v79;
    uint64_t v64 = (uint64_t)v80;
    sub_100221DF0();
    sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v65 = sub_100222250();
    sub_1000401B8(v64, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
    sub_1000401B8(v63, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
    if (v65)
    {
      uint64_t v31 = v76 + 1;
      if (v76 + 1 != v69) {
        continue;
      }
    }
    return v65 & 1;
  }
  unint64_t v50 = 0;
  unint64_t v51 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v81 = *(void *)(v66 + 72);
  NSString v52 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v66 + 16);
  uint64_t v83 = v48;
  while (1)
  {
    uint64_t result = v52(v11, v84 + v51, v4);
    if (v50 >= *(void *)(v48 + 16)) {
      break;
    }
    unint64_t v54 = v48 + v51;
    uint64_t v55 = v4;
    Class v56 = v11;
    id v57 = v85;
    NSString v58 = v52;
    v52(v85, v54, v55);
    sub_100040114(&qword_100299630, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
    char v59 = sub_100222250();
    uint64_t v60 = v33;
    NSString v61 = *v82;
    Class v62 = v57;
    uint64_t v11 = v56;
    uint64_t v4 = v55;
    uint64_t v48 = v83;
    (*v82)(v62, v4);
    v61(v11, v4);
    if ((v59 & 1) == 0) {
      goto LABEL_28;
    }
    uint64_t v33 = v60;
    ++v50;
    v51 += v81;
    NSString v52 = v58;
    if (v86 == v50) {
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10003BD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221D50();
  uint64_t v6 = __chkstk_darwin(v4, v5);
  __chkstk_darwin(v6, v7);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12 == *(void *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      uint64_t v14 = v8 + 16;
      uint64_t v33 = v9;
      uint64_t v34 = v15;
      uint64_t v16 = (v13 + 32) & ~v13;
      uint64_t v17 = *(void *)(v14 + 56);
      uint64_t v35 = v14;
      uint64_t v31 = v17;
      unint64_t v32 = (void (**)(uint64_t, uint64_t))(v14 - 8);
      uint64_t v18 = v12 - 1;
      uint64_t v19 = v9;
      do
      {
        uint64_t v20 = a1;
        uint64_t v21 = v11;
        uint64_t v22 = v11;
        uint64_t v23 = v34;
        v34((uint64_t)v21, a1 + v16, v4);
        uint64_t v24 = a2;
        v23(v19, a2 + v16, v4);
        uint64_t v11 = v22;
        sub_100040114(&qword_100299630, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
        char v25 = sub_100222250();
        uint64_t v26 = *v32;
        (*v32)(v19, v4);
        v26((uint64_t)v22, v4);
        BOOL v28 = v18-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v16 += v31;
        a2 = v24;
        a1 = v20;
      }
      while (v28);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_10003BFB0(uint64_t a1, uint64_t a2)
{
  return sub_10003D84C(a1, a2, type metadata accessor for DirectPCSIdentity, type metadata accessor for DirectPCSIdentity, (uint64_t (*)(char *, char *))static DirectPCSIdentity.== infix(_:_:), type metadata accessor for DirectPCSIdentity);
}

uint64_t sub_10003C004(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = type metadata accessor for PCSService(0);
  uint64_t v5 = __chkstk_darwin(v100, v4);
  uint64_t v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v11 = (char *)&v92 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12 == *(void *)(a2 + 16))
  {
    if (!v12 || a1 == a2) {
      return 1;
    }
    unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v98 = *(void *)(v9 + 72);
    uint64_t v99 = a1;
    uint64_t v95 = a2;
    while (1)
    {
      sub_100040280(a1 + v13, (uint64_t)v11, type metadata accessor for PCSService);
      sub_100040280(a2 + v13, (uint64_t)v7, type metadata accessor for PCSService);
      if (*(_DWORD *)v11 != *(_DWORD *)v7) {
        break;
      }
      uint64_t v15 = *((void *)v11 + 1);
      unint64_t v14 = *((void *)v11 + 2);
      uint64_t v16 = *((void *)v7 + 1);
      unint64_t v17 = *((void *)v7 + 2);
      uint64_t v18 = 0;
      switch(v14 >> 62)
      {
        case 1uLL:
          LODWORD(v18) = HIDWORD(v15) - v15;
          if (__OFSUB__(HIDWORD(v15), v15))
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
          }
          uint64_t v18 = (int)v18;
LABEL_11:
          unint64_t v22 = v17 >> 62;
          switch(v17 >> 62)
          {
            case 1uLL:
              LODWORD(v23) = HIDWORD(v16) - v16;
              if (__OFSUB__(HIDWORD(v16), v16)) {
                goto LABEL_129;
              }
              uint64_t v23 = (int)v23;
LABEL_16:
              if (v18 != v23) {
                goto LABEL_125;
              }
              if (v18 < 1) {
                goto LABEL_117;
              }
              break;
            case 2uLL:
              uint64_t v25 = *(void *)(v16 + 16);
              uint64_t v24 = *(void *)(v16 + 24);
              BOOL v21 = __OFSUB__(v24, v25);
              uint64_t v23 = v24 - v25;
              if (!v21) {
                goto LABEL_16;
              }
              goto LABEL_130;
            case 3uLL:
              if (v18) {
                goto LABEL_125;
              }
              goto LABEL_117;
            default:
              uint64_t v23 = BYTE6(v17);
              goto LABEL_16;
          }
          uint64_t v97 = *((void *)v7 + 1);
          switch(v14 >> 62)
          {
            case 1uLL:
              unint64_t v96 = v17;
              if ((int)v15 > v15 >> 32) {
                goto LABEL_131;
              }
              sub_1000059E8(v15, v14);
              uint64_t v33 = (char *)sub_100221A30();
              if (!v33) {
                goto LABEL_32;
              }
              uint64_t v34 = sub_100221A60();
              if (__OFSUB__((int)v15, v34)) {
                goto LABEL_133;
              }
              v33 += (int)v15 - v34;
LABEL_32:
              a2 = v95;
              sub_100221A50();
              if (v22)
              {
                uint64_t v94 = v33;
                if (v22 == 1)
                {
                  uint64_t v35 = (int)v97;
                  uint64_t v36 = (v97 >> 32) - (int)v97;
                  if (v97 >> 32 < (int)v97) {
                    goto LABEL_141;
                  }
                  swift_retain();
                  NSString v37 = (char *)sub_100221A30();
                  if (v37)
                  {
                    uint64_t v38 = sub_100221A60();
                    if (__OFSUB__(v35, v38)) {
                      goto LABEL_149;
                    }
                    v37 += v35 - v38;
                  }
                  a2 = v95;
                  uint64_t v39 = sub_100221A50();
                  if (v39 >= v36) {
                    size_t v40 = v36;
                  }
                  else {
                    size_t v40 = v39;
                  }
                  if (!v94) {
                    goto LABEL_151;
                  }
                  if (!v37) {
                    goto LABEL_152;
                  }
                  int v41 = memcmp(v94, v37, v40);
                  sub_100005A40(v97, v96);
                }
                else
                {
                  uint64_t v77 = *(void *)(v97 + 16);
                  unint64_t v96 = *(void *)(v97 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v78 = sub_100221A30();
                  if (v78)
                  {
                    uint64_t v79 = v78;
                    uint64_t v80 = sub_100221A60();
                    if (__OFSUB__(v77, v80)) {
                      goto LABEL_148;
                    }
                    uint64_t v81 = (const void *)(v79 + v77 - v80);
                  }
                  else
                  {
                    uint64_t v81 = 0;
                  }
                  int64_t v87 = v96 - v77;
                  if (__OFSUB__(v96, v77)) {
                    goto LABEL_143;
                  }
                  uint64_t v88 = sub_100221A50();
                  if (v88 >= v87) {
                    size_t v89 = v87;
                  }
                  else {
                    size_t v89 = v88;
                  }
                  a2 = v95;
                  if (!v94) {
                    goto LABEL_162;
                  }
                  if (!v81) {
                    goto LABEL_163;
                  }
                  int v41 = memcmp(v94, v81, v89);
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                __s1[0] = v97;
                LODWORD(__s1[1]) = v96;
                WORD2(__s1[1]) = WORD2(v96);
                if (!v33) {
                  goto LABEL_156;
                }
                int v41 = memcmp(v33, __s1, BYTE6(v96));
              }
              uint64_t v57 = v15;
              unint64_t v58 = v14;
LABEL_116:
              sub_100005A40(v57, v58);
              if (v41) {
                goto LABEL_125;
              }
LABEL_117:
              BOOL v90 = *((void *)v11 + 3) == *((void *)v7 + 3) && *((void *)v11 + 4) == *((void *)v7 + 4);
              if (!v90 && (sub_100222A30() & 1) == 0) {
                goto LABEL_125;
              }
              sub_100221DF0();
              sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
              if ((sub_100222250() & 1) == 0) {
                goto LABEL_125;
              }
              sub_1000401B8((uint64_t)v7, type metadata accessor for PCSService);
              sub_1000401B8((uint64_t)v11, type metadata accessor for PCSService);
              a1 = v99;
              v13 += v98;
              if (!--v12) {
                return 1;
              }
              break;
            case 2uLL:
              unint64_t v96 = v17;
              uint64_t v42 = (const void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v43 = *(void *)(v15 + 16);
              swift_retain();
              swift_retain();
              uint64_t v44 = (char *)sub_100221A30();
              uint64_t v94 = v42;
              if (!v44) {
                goto LABEL_47;
              }
              uint64_t v45 = sub_100221A60();
              if (__OFSUB__(v43, v45)) {
                goto LABEL_132;
              }
              v44 += v43 - v45;
LABEL_47:
              sub_100221A50();
              if (v22)
              {
                id v93 = v44;
                if (v22 == 1)
                {
                  uint64_t v46 = (int)v97;
                  uint64_t v47 = (v97 >> 32) - (int)v97;
                  if (v97 >> 32 < (int)v97) {
                    goto LABEL_136;
                  }
                  swift_retain();
                  uint64_t v48 = sub_100221A30();
                  if (v48)
                  {
                    uint64_t v49 = v48;
                    uint64_t v50 = sub_100221A60();
                    if (__OFSUB__(v46, v50)) {
                      goto LABEL_147;
                    }
                    unint64_t v51 = (const void *)(v49 + v46 - v50);
                  }
                  else
                  {
                    unint64_t v51 = 0;
                  }
                  uint64_t v85 = sub_100221A50();
                  if (v85 >= v47) {
                    size_t v86 = v47;
                  }
                  else {
                    size_t v86 = v85;
                  }
                  if (!v93) {
                    goto LABEL_160;
                  }
                  if (!v51) {
                    goto LABEL_161;
                  }
                  int v70 = memcmp(v93, v51, v86);
                  sub_100005A40(v97, v96);
                }
                else
                {
                  uint64_t v71 = *(void *)(v97 + 16);
                  uint64_t v72 = *(void *)(v97 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v73 = sub_100221A30();
                  if (v73)
                  {
                    uint64_t v74 = v73;
                    uint64_t v75 = sub_100221A60();
                    if (__OFSUB__(v71, v75)) {
                      goto LABEL_146;
                    }
                    uint64_t v76 = (const void *)(v74 + v71 - v75);
                  }
                  else
                  {
                    uint64_t v76 = 0;
                  }
                  if (__OFSUB__(v72, v71)) {
                    goto LABEL_142;
                  }
                  uint64_t v83 = sub_100221A50();
                  if (v83 >= v72 - v71) {
                    size_t v84 = v72 - v71;
                  }
                  else {
                    size_t v84 = v83;
                  }
                  a2 = v95;
                  if (!v93) {
                    goto LABEL_158;
                  }
                  if (!v76) {
                    goto LABEL_159;
                  }
                  int v70 = memcmp(v93, v76, v84);
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                __s1[0] = v97;
                LODWORD(__s1[1]) = v96;
                WORD2(__s1[1]) = WORD2(v96);
                if (!v44) {
                  goto LABEL_155;
                }
                int v70 = memcmp(v44, __s1, BYTE6(v96));
              }
LABEL_105:
              swift_release();
              swift_release();
              if (v70) {
                goto LABEL_125;
              }
              goto LABEL_117;
            case 3uLL:
              memset(__s1, 0, 14);
              if (!v22) {
                goto LABEL_62;
              }
              if (v22 == 1)
              {
                uint64_t v52 = (int)v16;
                uint64_t v27 = (v16 >> 32) - (int)v16;
                if (v16 >> 32 < (int)v16) {
                  goto LABEL_135;
                }
                unint64_t v28 = v17;
                swift_retain();
                uint64_t v53 = sub_100221A30();
                if (!v53) {
                  goto LABEL_153;
                }
                uint64_t v30 = v53;
                uint64_t v54 = sub_100221A60();
                BOOL v21 = __OFSUB__(v52, v54);
                uint64_t v32 = v52 - v54;
                if (v21) {
                  goto LABEL_140;
                }
LABEL_58:
                uint64_t v55 = sub_100221A50();
                if (v55 >= v27) {
                  size_t v56 = v27;
                }
                else {
                  size_t v56 = v55;
                }
                int v41 = memcmp(__s1, (const void *)(v30 + v32), v56);
                uint64_t v57 = v97;
                unint64_t v58 = v28;
                goto LABEL_116;
              }
              uint64_t v65 = *(void *)(v16 + 16);
              uint64_t v66 = *(void *)(v16 + 24);
              swift_retain();
              swift_retain();
              uint64_t v64 = (char *)sub_100221A30();
              if (v64)
              {
                uint64_t v67 = sub_100221A60();
                if (__OFSUB__(v65, v67)) {
                  goto LABEL_145;
                }
                v64 += v65 - v67;
              }
              BOOL v21 = __OFSUB__(v66, v65);
              int64_t v68 = v66 - v65;
              if (v21) {
                goto LABEL_137;
              }
              uint64_t v69 = sub_100221A50();
              if (!v64) {
                goto LABEL_154;
              }
LABEL_86:
              if (v69 >= v68) {
                size_t v82 = v68;
              }
              else {
                size_t v82 = v69;
              }
              int v70 = memcmp(__s1, v64, v82);
              goto LABEL_105;
            default:
              __s1[0] = v15;
              LOWORD(__s1[1]) = v14;
              BYTE2(__s1[1]) = BYTE2(v14);
              BYTE3(__s1[1]) = BYTE3(v14);
              BYTE4(__s1[1]) = BYTE4(v14);
              BYTE5(__s1[1]) = BYTE5(v14);
              if (!v22)
              {
LABEL_62:
                uint64_t __s2 = v16;
                __int16 v102 = v17;
                char v103 = BYTE2(v17);
                char v104 = BYTE3(v17);
                char v105 = BYTE4(v17);
                char v106 = BYTE5(v17);
                if (memcmp(__s1, &__s2, BYTE6(v17))) {
                  goto LABEL_125;
                }
                goto LABEL_117;
              }
              if (v22 == 1)
              {
                uint64_t v26 = (int)v16;
                uint64_t v27 = (v16 >> 32) - (int)v16;
                if (v16 >> 32 < (int)v16) {
                  goto LABEL_134;
                }
                unint64_t v28 = v17;
                swift_retain();
                uint64_t v29 = sub_100221A30();
                if (!v29)
                {
                  sub_100221A50();
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  sub_100221A50();
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
LABEL_157:
                  __break(1u);
LABEL_158:
                  __break(1u);
LABEL_159:
                  __break(1u);
LABEL_160:
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
                  JUMPOUT(0x10003CA4CLL);
                }
                uint64_t v30 = v29;
                uint64_t v31 = sub_100221A60();
                BOOL v21 = __OFSUB__(v26, v31);
                uint64_t v32 = v26 - v31;
                if (v21) {
                  goto LABEL_139;
                }
                goto LABEL_58;
              }
              uint64_t v59 = *(void *)(v16 + 16);
              uint64_t v60 = *(void *)(v16 + 24);
              swift_retain();
              swift_retain();
              uint64_t v61 = sub_100221A30();
              if (v61)
              {
                uint64_t v62 = v61;
                uint64_t v63 = sub_100221A60();
                if (__OFSUB__(v59, v63)) {
                  goto LABEL_144;
                }
                uint64_t v64 = (char *)(v62 + v59 - v63);
              }
              else
              {
                uint64_t v64 = 0;
              }
              int64_t v68 = v60 - v59;
              if (__OFSUB__(v60, v59)) {
                goto LABEL_138;
              }
              uint64_t v69 = sub_100221A50();
              a2 = v95;
              if (!v64) {
                goto LABEL_157;
              }
              goto LABEL_86;
          }
          break;
        case 2uLL:
          uint64_t v20 = *(void *)(v15 + 16);
          uint64_t v19 = *(void *)(v15 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          uint64_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_11;
          }
          goto LABEL_128;
        case 3uLL:
          goto LABEL_11;
        default:
          uint64_t v18 = BYTE6(v14);
          goto LABEL_11;
      }
    }
LABEL_125:
    sub_1000401B8((uint64_t)v7, type metadata accessor for PCSService);
    sub_1000401B8((uint64_t)v11, type metadata accessor for PCSService);
  }
  return 0;
}

uint64_t sub_10003CA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  int v70 = (uint64_t *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000046DC(&qword_100299668);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = sub_1000046DC(&qword_100299670);
  __chkstk_darwin(v71, v12);
  unint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for PolicyDocumentMapEntry(0);
  uint64_t v16 = __chkstk_darwin(v73, v15);
  uint64_t v18 = (uint64_t *)((char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v19);
  unint64_t v22 = (char *)&v61 - v21;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 != *(void *)(a2 + 16))
  {
LABEL_55:
    char v58 = 0;
    return v58 & 1;
  }
  if (v23 && a1 != a2)
  {
    unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v68 = a2;
    uint64_t v69 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v25 = *(void *)(v20 + 72);
    uint64_t v62 = 0;
    uint64_t v63 = v25;
    uint64_t v26 = v23 - 1;
    uint64_t v66 = v4;
    uint64_t v67 = a1;
    uint64_t v64 = v14;
    uint64_t v65 = v11;
    while (2)
    {
      uint64_t v72 = v26;
      sub_100040280(a1 + v24, (uint64_t)v22, type metadata accessor for PolicyDocumentMapEntry);
      sub_100040280(a2 + v24, (uint64_t)v18, type metadata accessor for PolicyDocumentMapEntry);
      uint64_t v27 = *(int *)(v73 + 24);
      uint64_t v28 = (uint64_t)v18 + v27;
      uint64_t v29 = (uint64_t)&v14[*(int *)(v71 + 48)];
      sub_10000D830((uint64_t)&v22[v27], (uint64_t)v14, &qword_100299668);
      sub_10000D830(v28, v29, &qword_100299668);
      uint64_t v30 = *v69;
      if ((*v69)(v14, 1, v4) == 1)
      {
        if (v30((char *)v29, 1, v4) == 1)
        {
          sub_10004015C((uint64_t)v14, &qword_100299668);
LABEL_14:
          uint64_t v33 = *(void *)v22;
          unint64_t v34 = *((void *)v22 + 1);
          uint64_t v35 = *v18;
          unint64_t v36 = v18[1];
          uint64_t v37 = 0;
          switch(v34 >> 62)
          {
            case 1uLL:
              LODWORD(v37) = HIDWORD(v33) - v33;
              if (!__OFSUB__(HIDWORD(v33), v33))
              {
                uint64_t v37 = (int)v37;
LABEL_19:
                switch(v36 >> 62)
                {
                  case 1uLL:
                    LODWORD(v41) = HIDWORD(v35) - v35;
                    if (__OFSUB__(HIDWORD(v35), v35)) {
                      goto LABEL_59;
                    }
                    uint64_t v41 = (int)v41;
LABEL_24:
                    if (v37 != v41) {
                      goto LABEL_54;
                    }
                    if (v37 < 1) {
                      goto LABEL_45;
                    }
                    break;
                  case 2uLL:
                    uint64_t v43 = *(void *)(v35 + 16);
                    uint64_t v42 = *(void *)(v35 + 24);
                    BOOL v40 = __OFSUB__(v42, v43);
                    uint64_t v41 = v42 - v43;
                    if (!v40) {
                      goto LABEL_24;
                    }
                    goto LABEL_60;
                  case 3uLL:
                    if (v37) {
                      goto LABEL_54;
                    }
                    goto LABEL_45;
                  default:
                    uint64_t v41 = BYTE6(v36);
                    goto LABEL_24;
                }
                switch(v34 >> 62)
                {
                  case 1uLL:
                    if (v33 >> 32 < (int)v33) {
                      goto LABEL_61;
                    }
                    sub_1000059E8(*(void *)v22, *((void *)v22 + 1));
                    uint64_t v44 = sub_100221A30();
                    if (v44)
                    {
                      uint64_t v61 = (v33 >> 32) - (int)v33;
                      uint64_t v45 = v44;
                      uint64_t v46 = sub_100221A60();
                      if (__OFSUB__((int)v33, v46)) {
                        goto LABEL_63;
                      }
                      uint64_t v47 = v45 + (int)v33 - v46;
                    }
                    else
                    {
                      uint64_t v47 = 0;
                    }
                    sub_100221A50();
                    uint64_t v56 = v35;
                    uint64_t v57 = v62;
                    sub_100187600(v47, v56, v36, (char *)__s1);
                    uint64_t v62 = v57;
                    sub_100005A40(v33, v34);
LABEL_44:
                    if ((__s1[0] & 1) == 0) {
                      goto LABEL_54;
                    }
LABEL_45:
                    sub_100221DF0();
                    sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                    char v58 = sub_100222250();
                    sub_1000401B8((uint64_t)v18, type metadata accessor for PolicyDocumentMapEntry);
                    sub_1000401B8((uint64_t)v22, type metadata accessor for PolicyDocumentMapEntry);
                    uint64_t v26 = v72 - 1;
                    if ((v58 & 1) == 0) {
                      return v58 & 1;
                    }
                    unint64_t v14 = v64;
                    v24 += v63;
                    a1 = v67;
                    a2 = v68;
                    uint64_t v11 = v65;
                    uint64_t v4 = v66;
                    if (!v72) {
                      return v58 & 1;
                    }
                    continue;
                  case 2uLL:
                    uint64_t v48 = *(void *)(v33 + 16);
                    uint64_t v49 = *(void *)(v33 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v50 = sub_100221A30();
                    if (!v50) {
                      goto LABEL_37;
                    }
                    uint64_t v51 = sub_100221A60();
                    if (__OFSUB__(v48, v51)) {
                      goto LABEL_64;
                    }
                    v50 += v48 - v51;
LABEL_37:
                    if (__OFSUB__(v49, v48)) {
                      goto LABEL_62;
                    }
                    sub_100221A50();
                    uint64_t v52 = v35;
                    uint64_t v53 = v62;
                    sub_100187600(v50, v52, v36, (char *)__s1);
                    uint64_t v62 = v53;
                    swift_release();
                    swift_release();
                    goto LABEL_44;
                  case 3uLL:
                    memset(__s1, 0, 14);
                    goto LABEL_40;
                  default:
                    __s1[0] = *(void *)v22;
                    LOWORD(__s1[1]) = v34;
                    BYTE2(__s1[1]) = BYTE2(v34);
                    BYTE3(__s1[1]) = BYTE3(v34);
                    BYTE4(__s1[1]) = BYTE4(v34);
                    BYTE5(__s1[1]) = BYTE5(v34);
LABEL_40:
                    uint64_t v54 = v35;
                    uint64_t v55 = v62;
                    sub_100187600((uint64_t)__s1, v54, v36, &v74);
                    uint64_t v62 = v55;
                    if ((v74 & 1) == 0) {
                      goto LABEL_54;
                    }
                    goto LABEL_45;
                }
              }
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
              return result;
            case 2uLL:
              uint64_t v39 = *(void *)(v33 + 16);
              uint64_t v38 = *(void *)(v33 + 24);
              BOOL v40 = __OFSUB__(v38, v39);
              uint64_t v37 = v38 - v39;
              if (!v40) {
                goto LABEL_19;
              }
              goto LABEL_58;
            case 3uLL:
              goto LABEL_19;
            default:
              uint64_t v37 = BYTE6(v34);
              goto LABEL_19;
          }
        }
        uint64_t v59 = &qword_100299670;
      }
      else
      {
        sub_10000D830((uint64_t)v14, (uint64_t)v11, &qword_100299668);
        if (v30((char *)v29, 1, v4) == 1)
        {
          uint64_t v59 = &qword_100299670;
        }
        else
        {
          uint64_t v31 = v70;
          sub_100040218(v29, (uint64_t)v70, type metadata accessor for PolicyDocumentKey);
          if (*v11 == *v31 && (v11[1] == v31[1] && v11[2] == v31[2] || (sub_100222A30() & 1) != 0))
          {
            sub_100221DF0();
            sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v32 = sub_100222250();
            sub_1000401B8((uint64_t)v31, type metadata accessor for PolicyDocumentKey);
            sub_1000401B8((uint64_t)v11, type metadata accessor for PolicyDocumentKey);
            sub_10004015C((uint64_t)v14, &qword_100299668);
            if ((v32 & 1) == 0) {
              goto LABEL_54;
            }
            goto LABEL_14;
          }
          sub_1000401B8((uint64_t)v31, type metadata accessor for PolicyDocumentKey);
          uint64_t v59 = &qword_100299668;
        }
        sub_1000401B8((uint64_t)v11, type metadata accessor for PolicyDocumentKey);
      }
      break;
    }
    sub_10004015C((uint64_t)v14, v59);
LABEL_54:
    sub_1000401B8((uint64_t)v18, type metadata accessor for PolicyDocumentMapEntry);
    sub_1000401B8((uint64_t)v22, type metadata accessor for PolicyDocumentMapEntry);
    goto LABEL_55;
  }
  char v58 = 1;
  return v58 & 1;
}

uint64_t sub_10003D348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6, v9);
  uint64_t v12 = (uint64_t *)((char *)&v17 - v11);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 == *(void *)(a2 + 16))
  {
    if (!v13 || a1 == a2) {
      return 1;
    }
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = *(void *)(v10 + 72);
    while (1)
    {
      sub_100040280(a1 + v14, (uint64_t)v12, type metadata accessor for PolicyDocumentKey);
      sub_100040280(a2 + v14, (uint64_t)v8, type metadata accessor for PolicyDocumentKey);
      if (*v12 != *v8) {
        break;
      }
      BOOL v15 = v12[1] == v8[1] && v12[2] == v8[2];
      if (!v15 && (sub_100222A30() & 1) == 0) {
        break;
      }
      sub_100221DF0();
      sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      if ((sub_100222250() & 1) == 0) {
        break;
      }
      sub_1000401B8((uint64_t)v8, type metadata accessor for PolicyDocumentKey);
      sub_1000401B8((uint64_t)v12, type metadata accessor for PolicyDocumentKey);
      v14 += v18;
      if (!--v13) {
        return 1;
      }
    }
    sub_1000401B8((uint64_t)v8, type metadata accessor for PolicyDocumentKey);
    sub_1000401B8((uint64_t)v12, type metadata accessor for PolicyDocumentKey);
  }
  return 0;
}

uint64_t sub_10003D59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EscrowPair(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 == *(void *)(a2 + 16))
  {
    if (!v13 || a1 == a2) {
      return 1;
    }
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v21 = *(void *)(v10 + 72);
    while (1)
    {
      sub_100040280(a1 + v14, (uint64_t)v12, type metadata accessor for EscrowPair);
      sub_100040280(a2 + v14, (uint64_t)v8, type metadata accessor for EscrowPair);
      uint64_t v15 = *(int *)(v4 + 20);
      uint64_t v16 = *(void *)&v12[v15];
      uint64_t v17 = *(void *)&v8[v15];
      if (v16 != v17)
      {
        swift_retain();
        swift_retain();
        BOOL v18 = sub_1000961F4(v16, v17);
        swift_release();
        swift_release();
        if (!v18) {
          break;
        }
      }
      sub_100221DF0();
      sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      if ((sub_100222250() & 1) == 0) {
        break;
      }
      sub_1000401B8((uint64_t)v8, type metadata accessor for EscrowPair);
      sub_1000401B8((uint64_t)v12, type metadata accessor for EscrowPair);
      v14 += v21;
      if (!--v13) {
        return 1;
      }
    }
    sub_1000401B8((uint64_t)v8, type metadata accessor for EscrowPair);
    sub_1000401B8((uint64_t)v12, type metadata accessor for EscrowPair);
  }
  return 0;
}

uint64_t sub_10003D7F8(uint64_t a1, uint64_t a2)
{
  return sub_10003D84C(a1, a2, type metadata accessor for EscrowInformation, type metadata accessor for EscrowInformation, (uint64_t (*)(char *, char *))static EscrowInformation.== infix(_:_:), type metadata accessor for EscrowInformation);
}

uint64_t sub_10003D84C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 == *(void *)(a2 + 16))
  {
    if (!v20 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      uint64_t v30 = a2;
      uint64_t v21 = a5;
      unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v23 = *(void *)(v17 + 72);
      uint64_t v24 = v20 - 1;
      do
      {
        sub_100040280(a1 + v22, (uint64_t)v19, a4);
        sub_100040280(v30 + v22, (uint64_t)v15, a4);
        char v25 = v21(v19, v15);
        sub_1000401B8((uint64_t)v15, a6);
        sub_1000401B8((uint64_t)v19, a6);
        BOOL v27 = v24-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v22 += v23;
      }
      while (v27);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_10003D9E8(uint64_t a1, uint64_t a2)
{
  return sub_10003D84C(a1, a2, type metadata accessor for SupportAppDevice, type metadata accessor for SupportAppDevice, (uint64_t (*)(char *, char *))static SupportAppDevice.== infix(_:_:), type metadata accessor for SupportAppDevice);
}

uint64_t sub_10003DA3C(uint64_t a1, uint64_t a2)
{
  return sub_10003D84C(a1, a2, type metadata accessor for CurrentCKKSItem, type metadata accessor for CurrentCKKSItem, (uint64_t (*)(char *, char *))static CurrentCKKSItem.== infix(_:_:), type metadata accessor for CurrentCKKSItem);
}

uint64_t sub_10003DA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6, v9);
  uint64_t v12 = (uint64_t *)((char *)&v22 - v11);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 != *(void *)(a2 + 16))
  {
LABEL_23:
    char v18 = 0;
    return v18 & 1;
  }
  if (v13 && a1 != a2)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v23 = *(void *)(v10 + 72);
    uint64_t v15 = v13 - 1;
    while (1)
    {
      sub_100040280(a1 + v14, (uint64_t)v12, type metadata accessor for CurrentCKKSItemSpecifier);
      sub_100040280(a2 + v14, (uint64_t)v8, type metadata accessor for CurrentCKKSItemSpecifier);
      BOOL v16 = *v12 == *v8 && v12[1] == v8[1];
      if (!v16 && (sub_100222A30() & 1) == 0) {
        break;
      }
      BOOL v17 = v12[2] == v8[2] && v12[3] == v8[3];
      if (!v17 && (sub_100222A30() & 1) == 0) {
        break;
      }
      sub_100221DF0();
      sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v18 = sub_100222250();
      sub_1000401B8((uint64_t)v8, type metadata accessor for CurrentCKKSItemSpecifier);
      sub_1000401B8((uint64_t)v12, type metadata accessor for CurrentCKKSItemSpecifier);
      BOOL v20 = v15-- != 0;
      if (v18)
      {
        v14 += v23;
        if (v20) {
          continue;
        }
      }
      return v18 & 1;
    }
    sub_1000401B8((uint64_t)v8, type metadata accessor for CurrentCKKSItemSpecifier);
    sub_1000401B8((uint64_t)v12, type metadata accessor for CurrentCKKSItemSpecifier);
    goto LABEL_23;
  }
  char v18 = 1;
  return v18 & 1;
}

uint64_t sub_10003DD08(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_100222A30(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_100222A30() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_10003DDD0(uint64_t a1, uint64_t a2)
{
  return sub_10003D84C(a1, a2, type metadata accessor for TLKShare, type metadata accessor for TLKShare, _s18TrustedPeersHelper8TLKShareV2eeoiySbAC_ACtFZ_0, type metadata accessor for TLKShare);
}

uint64_t sub_10003DE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewKeys(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 != *(void *)(a2 + 16))
  {
LABEL_15:
    char v20 = 0;
    return v20 & 1;
  }
  if (v13 && a1 != a2)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v25 = *(void *)(v10 + 72);
    uint64_t v15 = v13 - 1;
    while (1)
    {
      sub_100040280(a1 + v14, (uint64_t)v12, type metadata accessor for ViewKeys);
      sub_100040280(a2 + v14, (uint64_t)v8, type metadata accessor for ViewKeys);
      uint64_t v16 = *(int *)(v4 + 20);
      uint64_t v17 = *(void *)&v12[v16];
      uint64_t v18 = *(void *)&v8[v16];
      if (v17 != v18)
      {
        swift_retain();
        swift_retain();
        BOOL v19 = sub_100092CD4(v17, v18);
        swift_release();
        swift_release();
        if (!v19) {
          break;
        }
      }
      sub_100221DF0();
      sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v20 = sub_100222250();
      sub_1000401B8((uint64_t)v8, type metadata accessor for ViewKeys);
      sub_1000401B8((uint64_t)v12, type metadata accessor for ViewKeys);
      BOOL v22 = v15-- != 0;
      if (v20)
      {
        v14 += v25;
        if (v22) {
          continue;
        }
      }
      return v20 & 1;
    }
    sub_1000401B8((uint64_t)v8, type metadata accessor for ViewKeys);
    sub_1000401B8((uint64_t)v12, type metadata accessor for ViewKeys);
    goto LABEL_15;
  }
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_10003E094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299638);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SupportAppView(0);
  uint64_t v19 = __chkstk_darwin(v17, v18);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v19, v22);
  uint64_t v26 = (char *)&v46 - v25;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 != *(void *)(a2 + 16))
  {
LABEL_23:
    char v44 = 0;
    return v44 & 1;
  }
  uint64_t v56 = v4;
  uint64_t v57 = v16;
  if (v27 && a1 != a2)
  {
    uint64_t v59 = v23;
    uint64_t v51 = v12;
    uint64_t v49 = v8;
    unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v29 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v47 = v13;
    uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v53 = *(void *)(v24 + 72);
    uint64_t v54 = a1;
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v30 = v27 - 1;
    uint64_t v55 = a2;
    while (1)
    {
      uint64_t v58 = v30;
      sub_100040280(a1 + v28, (uint64_t)v26, type metadata accessor for SupportAppView);
      sub_100040280(a2 + v28, (uint64_t)v21, type metadata accessor for SupportAppView);
      BOOL v31 = *(void *)v26 == *(void *)v21 && *((void *)v26 + 1) == *((void *)v21 + 1);
      if (!v31 && (sub_100222A30() & 1) == 0) {
        break;
      }
      uint64_t v32 = *(int *)(v59 + 28);
      uint64_t v33 = &v21[v32];
      uint64_t v34 = (uint64_t)v57;
      uint64_t v35 = (uint64_t)&v57[*(int *)(v13 + 48)];
      sub_10000D830((uint64_t)&v26[v32], (uint64_t)v57, (uint64_t *)&unk_10029ED30);
      uint64_t v36 = (uint64_t)v33;
      uint64_t v37 = v34;
      sub_10000D830(v36, v35, (uint64_t *)&unk_10029ED30);
      uint64_t v38 = *v29;
      uint64_t v39 = v34;
      uint64_t v40 = v56;
      if ((*v29)(v39, 1, v56) == 1)
      {
        if (v38(v35, 1, v40) != 1) {
          goto LABEL_21;
        }
        sub_10004015C(v37, (uint64_t *)&unk_10029ED30);
      }
      else
      {
        uint64_t v41 = (uint64_t)v51;
        sub_10000D830(v37, (uint64_t)v51, (uint64_t *)&unk_10029ED30);
        if (v38(v35, 1, v40) == 1)
        {
          (*v50)(v41, v40);
LABEL_21:
          sub_10004015C(v37, &qword_100299638);
          break;
        }
        uint64_t v42 = v49;
        (*v48)(v49, v35, v40);
        sub_100040114(&qword_100299640, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
        int v52 = sub_100222250();
        uint64_t v43 = *v50;
        (*v50)((uint64_t)v42, v40);
        v43(v41, v40);
        sub_10004015C((uint64_t)v57, (uint64_t *)&unk_10029ED30);
        uint64_t v13 = v47;
        if ((v52 & 1) == 0) {
          break;
        }
      }
      if (v26[16] != v21[16]) {
        break;
      }
      sub_100221DF0();
      sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v44 = sub_100222250();
      sub_1000401B8((uint64_t)v21, type metadata accessor for SupportAppView);
      sub_1000401B8((uint64_t)v26, type metadata accessor for SupportAppView);
      uint64_t v30 = v58 - 1;
      if (v44)
      {
        a1 = v54;
        v28 += v53;
        a2 = v55;
        if (v58) {
          continue;
        }
      }
      return v44 & 1;
    }
    sub_1000401B8((uint64_t)v21, type metadata accessor for SupportAppView);
    sub_1000401B8((uint64_t)v26, type metadata accessor for SupportAppView);
    goto LABEL_23;
  }
  char v44 = 1;
  return v44 & 1;
}

uint64_t sub_10003E5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v143 = type metadata accessor for SignedVoucher(0);
  uint64_t v5 = __chkstk_darwin(v143, v4);
  uint64_t v7 = (void *)((char *)v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5, v8);
  uint64_t v11 = (void *)((char *)v138 - v10);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v12 && a1 != a2)
  {
    unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v14 = *(void *)(v9 + 72);
    uint64_t v140 = a2;
    uint64_t v141 = v14;
    uint64_t v142 = a1;
    while (1)
    {
      sub_100040280(a1 + v13, (uint64_t)v11, type metadata accessor for SignedVoucher);
      unint64_t v145 = v13;
      sub_100040280(a2 + v13, (uint64_t)v7, type metadata accessor for SignedVoucher);
      uint64_t v16 = *v11;
      unint64_t v15 = v11[1];
      uint64_t v17 = *v7;
      unint64_t v18 = v7[1];
      uint64_t v19 = 0;
      switch(v15 >> 62)
      {
        case 1uLL:
          LODWORD(v19) = HIDWORD(v16) - v16;
          if (__OFSUB__(HIDWORD(v16), v16))
          {
            __break(1u);
LABEL_229:
            __break(1u);
LABEL_230:
            __break(1u);
LABEL_231:
            __break(1u);
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
LABEL_234:
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
          }
          uint64_t v19 = (int)v19;
LABEL_10:
          uint64_t v144 = v12;
          unint64_t v23 = v18 >> 62;
          switch(v18 >> 62)
          {
            case 1uLL:
              LODWORD(v24) = HIDWORD(v17) - v17;
              if (__OFSUB__(HIDWORD(v17), v17)) {
                goto LABEL_230;
              }
              uint64_t v24 = (int)v24;
LABEL_15:
              if (v19 != v24) {
                goto LABEL_226;
              }
              if (v19 < 1) {
                goto LABEL_114;
              }
              break;
            case 2uLL:
              uint64_t v26 = *(void *)(v17 + 16);
              uint64_t v25 = *(void *)(v17 + 24);
              BOOL v22 = __OFSUB__(v25, v26);
              uint64_t v24 = v25 - v26;
              if (!v22) {
                goto LABEL_15;
              }
              goto LABEL_231;
            case 3uLL:
              if (v19) {
                goto LABEL_226;
              }
              goto LABEL_114;
            default:
              uint64_t v24 = BYTE6(v18);
              goto LABEL_15;
          }
          break;
        case 2uLL:
          uint64_t v21 = *(void *)(v16 + 16);
          uint64_t v20 = *(void *)(v16 + 24);
          BOOL v22 = __OFSUB__(v20, v21);
          uint64_t v19 = v20 - v21;
          if (!v22) {
            goto LABEL_10;
          }
          goto LABEL_229;
        case 3uLL:
          goto LABEL_10;
        default:
          uint64_t v19 = BYTE6(v15);
          goto LABEL_10;
      }
      switch(v15 >> 62)
      {
        case 1uLL:
          if ((int)v16 > v16 >> 32) {
            goto LABEL_236;
          }
          sub_1000059E8(v16, v15);
          uint64_t v32 = (char *)sub_100221A30();
          if (!v32) {
            goto LABEL_31;
          }
          uint64_t v33 = sub_100221A60();
          if (__OFSUB__((int)v16, v33)) {
            goto LABEL_239;
          }
          v32 += (int)v16 - v33;
LABEL_31:
          a2 = v140;
          sub_100221A50();
          if (v23)
          {
            id v139 = v32;
            if (v23 == 1)
            {
              if (v17 >> 32 < (int)v17) {
                goto LABEL_250;
              }
              swift_retain();
              uint64_t v34 = (char *)sub_100221A30();
              if (v34)
              {
                uint64_t v35 = sub_100221A60();
                if (__OFSUB__((int)v17, v35)) {
                  goto LABEL_267;
                }
                v34 += (int)v17 - v35;
              }
              a2 = v140;
              uint64_t v36 = sub_100221A50();
              if (v36 >= (v17 >> 32) - (int)v17) {
                size_t v37 = (v17 >> 32) - (int)v17;
              }
              else {
                size_t v37 = v36;
              }
              if (!v139) {
                goto LABEL_275;
              }
              if (!v34) {
                goto LABEL_276;
              }
              int v38 = memcmp(v139, v34, v37);
              sub_100005A40(v17, v18);
            }
            else
            {
              uint64_t v70 = *(void *)(v17 + 16);
              uint64_t v71 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v72 = (char *)sub_100221A30();
              if (v72)
              {
                uint64_t v73 = sub_100221A60();
                if (__OFSUB__(v70, v73)) {
                  goto LABEL_266;
                }
                v72 += v70 - v73;
              }
              BOOL v22 = __OFSUB__(v71, v70);
              int64_t v74 = v71 - v70;
              if (v22) {
                goto LABEL_251;
              }
              uint64_t v75 = sub_100221A50();
              if (v75 >= v74) {
                size_t v76 = v74;
              }
              else {
                size_t v76 = v75;
              }
              if (!v139) {
                goto LABEL_286;
              }
              if (!v72) {
                goto LABEL_287;
              }
              int v38 = memcmp(v139, v72, v76);
              swift_release();
              swift_release();
            }
          }
          else
          {
            __s1[0] = v17;
            LOWORD(__s1[1]) = v18;
            BYTE2(__s1[1]) = BYTE2(v18);
            BYTE3(__s1[1]) = BYTE3(v18);
            BYTE4(__s1[1]) = BYTE4(v18);
            BYTE5(__s1[1]) = BYTE5(v18);
            if (!v32) {
              goto LABEL_285;
            }
            int v38 = memcmp(v32, __s1, BYTE6(v18));
          }
          sub_100005A40(v16, v15);
          if (v38) {
            goto LABEL_226;
          }
          goto LABEL_114;
        case 2uLL:
          uint64_t v39 = v15 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v40 = *(void *)(v16 + 16);
          swift_retain();
          swift_retain();
          uint64_t v41 = (char *)sub_100221A30();
          if (!v41) {
            goto LABEL_46;
          }
          uint64_t v42 = sub_100221A60();
          if (__OFSUB__(v40, v42)) {
            goto LABEL_238;
          }
          v41 += v40 - v42;
LABEL_46:
          a2 = v140;
          sub_100221A50();
          if (!v23)
          {
            __s1[0] = v17;
            LOWORD(__s1[1]) = v18;
            BYTE2(__s1[1]) = BYTE2(v18);
            BYTE3(__s1[1]) = BYTE3(v18);
            BYTE4(__s1[1]) = BYTE4(v18);
            BYTE5(__s1[1]) = BYTE5(v18);
            if (!v41) {
              goto LABEL_282;
            }
            int v47 = memcmp(v41, __s1, BYTE6(v18));
LABEL_88:
            swift_release();
            goto LABEL_99;
          }
          id v139 = v41;
          if (v23 == 1)
          {
            v138[1] = v39;
            if (v17 >> 32 < (int)v17) {
              goto LABEL_244;
            }
            swift_retain();
            uint64_t v43 = (char *)sub_100221A30();
            if (v43)
            {
              uint64_t v44 = sub_100221A60();
              if (__OFSUB__((int)v17, v44)) {
                goto LABEL_265;
              }
              v43 += (int)v17 - v44;
            }
            uint64_t v45 = sub_100221A50();
            if (v45 >= (v17 >> 32) - (int)v17) {
              size_t v46 = (v17 >> 32) - (int)v17;
            }
            else {
              size_t v46 = v45;
            }
            if (!v139) {
              goto LABEL_277;
            }
            if (!v43) {
              goto LABEL_278;
            }
            int v47 = memcmp(v139, v43, v46);
            sub_100005A40(v17, v18);
            goto LABEL_88;
          }
          uint64_t v63 = *(void *)(v17 + 16);
          uint64_t v64 = *(void *)(v17 + 24);
          swift_retain();
          swift_retain();
          uint64_t v65 = (char *)sub_100221A30();
          if (v65)
          {
            uint64_t v66 = sub_100221A60();
            if (__OFSUB__(v63, v66)) {
              goto LABEL_264;
            }
            v65 += v63 - v66;
          }
          BOOL v22 = __OFSUB__(v64, v63);
          int64_t v67 = v64 - v63;
          if (v22) {
            goto LABEL_249;
          }
          uint64_t v68 = sub_100221A50();
          if (v68 >= v67) {
            size_t v69 = v67;
          }
          else {
            size_t v69 = v68;
          }
          if (!v139) {
            goto LABEL_283;
          }
          if (!v65) {
            goto LABEL_284;
          }
          int v47 = memcmp(v139, v65, v69);
          swift_release();
          swift_release();
          swift_release();
LABEL_99:
          swift_release();
          if (v47) {
            goto LABEL_226;
          }
LABEL_114:
          uint64_t v78 = v11[2];
          unint64_t v77 = v11[3];
          uint64_t v79 = v7[2];
          unint64_t v80 = v7[3];
          uint64_t v81 = 0;
          switch(v77 >> 62)
          {
            case 1uLL:
              LODWORD(v81) = HIDWORD(v78) - v78;
              if (__OFSUB__(HIDWORD(v78), v78)) {
                goto LABEL_232;
              }
              uint64_t v81 = (int)v81;
LABEL_119:
              unint64_t v84 = v80 >> 62;
              switch(v80 >> 62)
              {
                case 1uLL:
                  LODWORD(v85) = HIDWORD(v79) - v79;
                  if (__OFSUB__(HIDWORD(v79), v79)) {
                    goto LABEL_234;
                  }
                  uint64_t v85 = (int)v85;
LABEL_124:
                  if (v81 != v85) {
                    goto LABEL_226;
                  }
                  if (v81 < 1) {
                    goto LABEL_223;
                  }
                  break;
                case 2uLL:
                  uint64_t v87 = *(void *)(v79 + 16);
                  uint64_t v86 = *(void *)(v79 + 24);
                  BOOL v22 = __OFSUB__(v86, v87);
                  uint64_t v85 = v86 - v87;
                  if (!v22) {
                    goto LABEL_124;
                  }
                  goto LABEL_235;
                case 3uLL:
                  if (v81) {
                    goto LABEL_226;
                  }
                  goto LABEL_223;
                default:
                  uint64_t v85 = BYTE6(v80);
                  goto LABEL_124;
              }
              break;
            case 2uLL:
              uint64_t v83 = *(void *)(v78 + 16);
              uint64_t v82 = *(void *)(v78 + 24);
              BOOL v22 = __OFSUB__(v82, v83);
              uint64_t v81 = v82 - v83;
              if (!v22) {
                goto LABEL_119;
              }
              goto LABEL_233;
            case 3uLL:
              goto LABEL_119;
            default:
              uint64_t v81 = BYTE6(v77);
              goto LABEL_119;
          }
          break;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v23) {
            goto LABEL_67;
          }
          if (v23 == 1)
          {
            uint64_t v27 = (v17 >> 32) - (int)v17;
            if (v17 >> 32 < (int)v17) {
              goto LABEL_243;
            }
            swift_retain();
            uint64_t v48 = sub_100221A30();
            if (!v48) {
              goto LABEL_279;
            }
            uint64_t v29 = v48;
            uint64_t v49 = sub_100221A60();
            uint64_t v31 = (int)v17 - v49;
            if (__OFSUB__((int)v17, v49)) {
              goto LABEL_248;
            }
            goto LABEL_63;
          }
          uint64_t v59 = *(void *)(v17 + 16);
          uint64_t v60 = *(void *)(v17 + 24);
          swift_retain();
          swift_retain();
          uint64_t v55 = (char *)sub_100221A30();
          if (v55)
          {
            uint64_t v61 = sub_100221A60();
            if (__OFSUB__(v59, v61)) {
              goto LABEL_263;
            }
            v55 += v59 - v61;
          }
          int64_t v57 = v60 - v59;
          if (__OFSUB__(v60, v59)) {
            goto LABEL_246;
          }
          uint64_t v58 = sub_100221A50();
          if (!v55) {
            goto LABEL_281;
          }
          goto LABEL_80;
        default:
          __s1[0] = v16;
          LOWORD(__s1[1]) = v15;
          BYTE2(__s1[1]) = BYTE2(v15);
          BYTE3(__s1[1]) = BYTE3(v15);
          BYTE4(__s1[1]) = BYTE4(v15);
          BYTE5(__s1[1]) = BYTE5(v15);
          if (v23)
          {
            if (v23 == 1)
            {
              uint64_t v27 = (v17 >> 32) - (int)v17;
              if (v17 >> 32 < (int)v17) {
                goto LABEL_242;
              }
              swift_retain();
              uint64_t v28 = sub_100221A30();
              if (!v28)
              {
                sub_100221A50();
                __break(1u);
LABEL_275:
                __break(1u);
LABEL_276:
                __break(1u);
LABEL_277:
                __break(1u);
LABEL_278:
                __break(1u);
LABEL_279:
                sub_100221A50();
                __break(1u);
LABEL_280:
                __break(1u);
LABEL_281:
                __break(1u);
LABEL_282:
                __break(1u);
LABEL_283:
                __break(1u);
LABEL_284:
                __break(1u);
LABEL_285:
                __break(1u);
LABEL_286:
                __break(1u);
LABEL_287:
                __break(1u);
LABEL_288:
                sub_100221A50();
                __break(1u);
LABEL_289:
                __break(1u);
LABEL_290:
                __break(1u);
LABEL_291:
                __break(1u);
LABEL_292:
                __break(1u);
LABEL_293:
                sub_100221A50();
                __break(1u);
LABEL_294:
                __break(1u);
LABEL_295:
                __break(1u);
LABEL_296:
                __break(1u);
LABEL_297:
                __break(1u);
LABEL_298:
                __break(1u);
LABEL_299:
                __break(1u);
LABEL_300:
                __break(1u);
LABEL_301:
                __break(1u);
                JUMPOUT(0x10003F7ACLL);
              }
              uint64_t v29 = v28;
              uint64_t v30 = sub_100221A60();
              uint64_t v31 = (int)v17 - v30;
              if (__OFSUB__((int)v17, v30)) {
                goto LABEL_247;
              }
LABEL_63:
              uint64_t v50 = sub_100221A50();
              if (v50 >= v27) {
                size_t v51 = v27;
              }
              else {
                size_t v51 = v50;
              }
              int v52 = memcmp(__s1, (const void *)(v29 + v31), v51);
              sub_100005A40(v17, v18);
            }
            else
            {
              uint64_t v53 = *(void *)(v17 + 16);
              uint64_t v54 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v55 = (char *)sub_100221A30();
              if (v55)
              {
                uint64_t v56 = sub_100221A60();
                if (__OFSUB__(v53, v56)) {
                  goto LABEL_262;
                }
                v55 += v53 - v56;
              }
              int64_t v57 = v54 - v53;
              if (__OFSUB__(v54, v53)) {
                goto LABEL_245;
              }
              uint64_t v58 = sub_100221A50();
              if (!v55) {
                goto LABEL_280;
              }
LABEL_80:
              if (v58 >= v57) {
                size_t v62 = v57;
              }
              else {
                size_t v62 = v58;
              }
              int v52 = memcmp(__s1, v55, v62);
              swift_release();
              swift_release();
            }
            a2 = v140;
            if (v52) {
              goto LABEL_226;
            }
          }
          else
          {
LABEL_67:
            uint64_t __s2 = v17;
            __int16 v147 = v18;
            char v148 = BYTE2(v18);
            char v149 = BYTE3(v18);
            char v150 = BYTE4(v18);
            char v151 = BYTE5(v18);
            if (memcmp(__s1, &__s2, BYTE6(v18))) {
              goto LABEL_226;
            }
          }
          goto LABEL_114;
      }
      switch(v77 >> 62)
      {
        case 1uLL:
          if ((int)v78 > v78 >> 32) {
            goto LABEL_237;
          }
          sub_1000059E8(v11[2], v11[3]);
          id v93 = (char *)sub_100221A30();
          if (!v93) {
            goto LABEL_140;
          }
          uint64_t v94 = sub_100221A60();
          if (__OFSUB__((int)v78, v94)) {
            goto LABEL_241;
          }
          v93 += (int)v78 - v94;
LABEL_140:
          a2 = v140;
          sub_100221A50();
          if (v84)
          {
            id v139 = v93;
            if (v84 == 1)
            {
              if (v79 >> 32 < (int)v79) {
                goto LABEL_260;
              }
              swift_retain();
              uint64_t v95 = (char *)sub_100221A30();
              if (v95)
              {
                uint64_t v96 = sub_100221A60();
                if (__OFSUB__((int)v79, v96)) {
                  goto LABEL_273;
                }
                v95 += (int)v79 - v96;
              }
              a2 = v140;
              uint64_t v97 = sub_100221A50();
              if (v97 >= (v79 >> 32) - (int)v79) {
                size_t v98 = (v79 >> 32) - (int)v79;
              }
              else {
                size_t v98 = v97;
              }
              if (!v139) {
                goto LABEL_289;
              }
              if (!v95) {
                goto LABEL_290;
              }
              int v99 = memcmp(v139, v95, v98);
              sub_100005A40(v79, v80);
            }
            else
            {
              uint64_t v130 = *(void *)(v79 + 16);
              uint64_t v131 = *(void *)(v79 + 24);
              swift_retain();
              swift_retain();
              id v132 = (char *)sub_100221A30();
              if (v132)
              {
                uint64_t v133 = sub_100221A60();
                if (__OFSUB__(v130, v133)) {
                  goto LABEL_272;
                }
                v132 += v130 - v133;
              }
              BOOL v22 = __OFSUB__(v131, v130);
              int64_t v134 = v131 - v130;
              if (v22) {
                goto LABEL_261;
              }
              uint64_t v135 = sub_100221A50();
              if (v135 >= v134) {
                size_t v136 = v134;
              }
              else {
                size_t v136 = v135;
              }
              if (!v139) {
                goto LABEL_300;
              }
              if (!v132) {
                goto LABEL_301;
              }
              int v99 = memcmp(v139, v132, v136);
              swift_release();
              swift_release();
            }
          }
          else
          {
            __s1[0] = v79;
            LOWORD(__s1[1]) = v80;
            BYTE2(__s1[1]) = BYTE2(v80);
            BYTE3(__s1[1]) = BYTE3(v80);
            BYTE4(__s1[1]) = BYTE4(v80);
            BYTE5(__s1[1]) = BYTE5(v80);
            if (!v93) {
              goto LABEL_299;
            }
            int v99 = memcmp(v93, __s1, BYTE6(v80));
          }
          sub_100005A40(v78, v77);
          if (v99) {
            goto LABEL_226;
          }
          goto LABEL_223;
        case 2uLL:
          uint64_t v100 = *(void *)(v78 + 16);
          swift_retain();
          swift_retain();
          id v101 = (char *)sub_100221A30();
          if (!v101) {
            goto LABEL_155;
          }
          uint64_t v102 = sub_100221A60();
          if (__OFSUB__(v100, v102)) {
            goto LABEL_240;
          }
          v101 += v100 - v102;
LABEL_155:
          a2 = v140;
          sub_100221A50();
          if (!v84)
          {
            __s1[0] = v79;
            LOWORD(__s1[1]) = v80;
            BYTE2(__s1[1]) = BYTE2(v80);
            BYTE3(__s1[1]) = BYTE3(v80);
            BYTE4(__s1[1]) = BYTE4(v80);
            BYTE5(__s1[1]) = BYTE5(v80);
            if (!v101) {
              goto LABEL_296;
            }
            int v107 = memcmp(v101, __s1, BYTE6(v80));
LABEL_197:
            swift_release();
            goto LABEL_208;
          }
          id v139 = v101;
          if (v84 == 1)
          {
            if (v79 >> 32 < (int)v79) {
              goto LABEL_254;
            }
            swift_retain();
            char v103 = (char *)sub_100221A30();
            if (v103)
            {
              uint64_t v104 = sub_100221A60();
              if (__OFSUB__((int)v79, v104)) {
                goto LABEL_271;
              }
              v103 += (int)v79 - v104;
            }
            a2 = v140;
            uint64_t v105 = sub_100221A50();
            if (v105 >= (v79 >> 32) - (int)v79) {
              size_t v106 = (v79 >> 32) - (int)v79;
            }
            else {
              size_t v106 = v105;
            }
            if (!v139) {
              goto LABEL_291;
            }
            if (!v103) {
              goto LABEL_292;
            }
            int v107 = memcmp(v139, v103, v106);
            sub_100005A40(v79, v80);
            goto LABEL_197;
          }
          uint64_t v123 = *(void *)(v79 + 16);
          uint64_t v124 = *(void *)(v79 + 24);
          swift_retain();
          swift_retain();
          NSString v125 = (char *)sub_100221A30();
          if (v125)
          {
            uint64_t v126 = sub_100221A60();
            if (__OFSUB__(v123, v126)) {
              goto LABEL_270;
            }
            v125 += v123 - v126;
          }
          BOOL v22 = __OFSUB__(v124, v123);
          int64_t v127 = v124 - v123;
          if (v22) {
            goto LABEL_259;
          }
          uint64_t v128 = sub_100221A50();
          if (v128 >= v127) {
            size_t v129 = v127;
          }
          else {
            size_t v129 = v128;
          }
          if (!v139) {
            goto LABEL_297;
          }
          if (!v125) {
            goto LABEL_298;
          }
          int v107 = memcmp(v139, v125, v129);
          swift_release();
          swift_release();
          swift_release();
LABEL_208:
          swift_release();
          if (v107) {
            goto LABEL_226;
          }
LABEL_223:
          sub_100221DF0();
          sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          if ((sub_100222250() & 1) == 0)
          {
LABEL_226:
            sub_1000401B8((uint64_t)v7, type metadata accessor for SignedVoucher);
            sub_1000401B8((uint64_t)v11, type metadata accessor for SignedVoucher);
            return 0;
          }
          sub_1000401B8((uint64_t)v7, type metadata accessor for SignedVoucher);
          sub_1000401B8((uint64_t)v11, type metadata accessor for SignedVoucher);
          a1 = v142;
          unint64_t v13 = v145 + v141;
          uint64_t v12 = v144 - 1;
          if (v144 == 1) {
            return 1;
          }
          break;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v84) {
            goto LABEL_176;
          }
          if (v84 == 1)
          {
            uint64_t v88 = (v79 >> 32) - (int)v79;
            if (v79 >> 32 < (int)v79) {
              goto LABEL_253;
            }
            swift_retain();
            uint64_t v108 = sub_100221A30();
            if (!v108) {
              goto LABEL_293;
            }
            uint64_t v90 = v108;
            uint64_t v109 = sub_100221A60();
            uint64_t v92 = (int)v79 - v109;
            if (__OFSUB__((int)v79, v109)) {
              goto LABEL_258;
            }
LABEL_172:
            uint64_t v110 = sub_100221A50();
            if (v110 >= v88) {
              size_t v111 = v88;
            }
            else {
              size_t v111 = v110;
            }
            int v112 = memcmp(__s1, (const void *)(v90 + v92), v111);
            sub_100005A40(v79, v80);
          }
          else
          {
            uint64_t v119 = *(void *)(v79 + 16);
            uint64_t v120 = *(void *)(v79 + 24);
            swift_retain();
            swift_retain();
            NSString v115 = (char *)sub_100221A30();
            if (v115)
            {
              uint64_t v121 = sub_100221A60();
              if (__OFSUB__(v119, v121)) {
                goto LABEL_269;
              }
              v115 += v119 - v121;
            }
            int64_t v117 = v120 - v119;
            if (__OFSUB__(v120, v119)) {
              goto LABEL_256;
            }
            uint64_t v118 = sub_100221A50();
            if (!v115) {
              goto LABEL_295;
            }
LABEL_189:
            if (v118 >= v117) {
              size_t v122 = v117;
            }
            else {
              size_t v122 = v118;
            }
            int v112 = memcmp(__s1, v115, v122);
            swift_release();
            swift_release();
          }
          a2 = v140;
          if (v112) {
            goto LABEL_226;
          }
          goto LABEL_223;
        default:
          __s1[0] = v11[2];
          LOWORD(__s1[1]) = v77;
          BYTE2(__s1[1]) = BYTE2(v77);
          BYTE3(__s1[1]) = BYTE3(v77);
          BYTE4(__s1[1]) = BYTE4(v77);
          BYTE5(__s1[1]) = BYTE5(v77);
          if (!v84)
          {
LABEL_176:
            uint64_t __s2 = v79;
            __int16 v147 = v80;
            char v148 = BYTE2(v80);
            char v149 = BYTE3(v80);
            char v150 = BYTE4(v80);
            char v151 = BYTE5(v80);
            if (memcmp(__s1, &__s2, BYTE6(v80))) {
              goto LABEL_226;
            }
            goto LABEL_223;
          }
          if (v84 == 1)
          {
            uint64_t v88 = (v79 >> 32) - (int)v79;
            if (v79 >> 32 < (int)v79) {
              goto LABEL_252;
            }
            swift_retain();
            uint64_t v89 = sub_100221A30();
            if (!v89) {
              goto LABEL_288;
            }
            uint64_t v90 = v89;
            uint64_t v91 = sub_100221A60();
            uint64_t v92 = (int)v79 - v91;
            if (__OFSUB__((int)v79, v91)) {
              goto LABEL_257;
            }
            goto LABEL_172;
          }
          uint64_t v113 = *(void *)(v79 + 16);
          uint64_t v114 = *(void *)(v79 + 24);
          swift_retain();
          swift_retain();
          NSString v115 = (char *)sub_100221A30();
          if (v115)
          {
            uint64_t v116 = sub_100221A60();
            if (__OFSUB__(v113, v116)) {
              goto LABEL_268;
            }
            v115 += v113 - v116;
          }
          int64_t v117 = v114 - v113;
          if (__OFSUB__(v114, v113)) {
            goto LABEL_255;
          }
          uint64_t v118 = sub_100221A50();
          if (!v115) {
            goto LABEL_294;
          }
          goto LABEL_189;
      }
    }
  }
  return 1;
}

uint64_t sub_10003F80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299660);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PeerDifference(0);
  uint64_t v19 = __chkstk_darwin(v17, v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v19, v22);
  uint64_t v26 = (char *)&v40 - v25;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  uint64_t v42 = v12;
  uint64_t v43 = v4;
  if (!v27 || a1 == a2)
  {
    char v36 = 1;
    return v36 & 1;
  }
  uint64_t v49 = v13;
  uint64_t v40 = v8;
  uint64_t v41 = (char *)&v40 - v25;
  unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v44 = *(void *)(v24 + 72);
  uint64_t v45 = a1;
  uint64_t v47 = v23;
  uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v29 = v27 - 1;
  uint64_t v46 = a2;
  uint64_t v30 = v43;
  while (1)
  {
    sub_100040280(a1 + v28, (uint64_t)v26, type metadata accessor for PeerDifference);
    sub_100040280(a2 + v28, (uint64_t)v21, type metadata accessor for PeerDifference);
    uint64_t v31 = (uint64_t)&v16[*(int *)(v49 + 48)];
    sub_10000D830((uint64_t)v26, (uint64_t)v16, &qword_100299658);
    sub_10000D830((uint64_t)v21, v31, &qword_100299658);
    uint64_t v32 = *v48;
    if ((*v48)(v16, 1, v30) != 1) {
      break;
    }
    if (v32((char *)v31, 1, v30) != 1) {
      goto LABEL_18;
    }
    sub_10004015C((uint64_t)v16, &qword_100299658);
LABEL_10:
    sub_100221DF0();
    sub_100040114(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v36 = sub_100222250();
    sub_1000401B8((uint64_t)v21, type metadata accessor for PeerDifference);
    sub_1000401B8((uint64_t)v26, type metadata accessor for PeerDifference);
    BOOL v38 = v29-- != 0;
    if (v36)
    {
      a1 = v45;
      v28 += v44;
      a2 = v46;
      if (v38) {
        continue;
      }
    }
    return v36 & 1;
  }
  uint64_t v33 = (uint64_t)v42;
  sub_10000D830((uint64_t)v16, (uint64_t)v42, &qword_100299658);
  if (v32((char *)v31, 1, v30) != 1)
  {
    uint64_t v34 = (uint64_t)v40;
    sub_100040218(v31, (uint64_t)v40, type metadata accessor for PeerDifference.OneOf_Operation);
    char v35 = _s18TrustedPeersHelper14PeerDifferenceV15OneOf_OperationO21__derived_enum_equalsySbAE_AEtFZ_0(v33, v34);
    sub_1000401B8(v34, type metadata accessor for PeerDifference.OneOf_Operation);
    uint64_t v30 = v43;
    sub_1000401B8(v33, type metadata accessor for PeerDifference.OneOf_Operation);
    sub_10004015C((uint64_t)v16, &qword_100299658);
    uint64_t v26 = v41;
    if ((v35 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_1000401B8(v33, type metadata accessor for PeerDifference.OneOf_Operation);
  uint64_t v26 = v41;
LABEL_18:
  sub_10004015C((uint64_t)v16, &qword_100299660);
LABEL_19:
  sub_1000401B8((uint64_t)v21, type metadata accessor for PeerDifference);
  sub_1000401B8((uint64_t)v26, type metadata accessor for PeerDifference);
LABEL_20:
  char v36 = 0;
  return v36 & 1;
}

uint64_t sub_10003FCEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_100187600((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_10003FDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_100221A30();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_100221A60();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_100221A50();
  sub_100187600(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_10003FE7C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1000400E4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1000059E8(a3, a4);
                  sub_1000059E8(a1, a2);
                  char v17 = sub_10003FDC4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100005A40(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1000059E8(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_10003FDC4(v21, v22, v20, a3, a4);
                  sub_100005A40(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1000059E8(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1000059E8(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_10003FCEC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100005A40(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100040114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004015C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000046DC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000401B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100040218(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100040280(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000402E8()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_100299678);
  sub_100003CC8(v0, (uint64_t)qword_100299678);
  return sub_100222080();
}

uint64_t sub_100040368(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, void, void, void, void))
{
  if (qword_100298BC0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100222090();
  sub_100003CC8(v12, (uint64_t)qword_100299678);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = sub_100222070();
  os_log_type_t v14 = sub_1002224E0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v18 = a7;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446210;
    if (a5)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v21._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v16 = 0x203A726F727265;
    }
    else
    {
      uint64_t v16 = 0x73736563637573;
    }
    sub_1001BEBDC(v16, 0xE700000000000000, &v20);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "preflightVouchWithBottle complete: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a7 = v18;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD000000000000029, 0x8000000100241040);
  return a7(a1, a2, a3, a4 & 1, a5);
}

void sub_1000405FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void *, void, void))
{
  uint64_t v5 = (void *)sub_1000408F0(a2);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  BOOL v11 = v10;

  id v12 = v11;
  a4(v7, v9, v11, 0, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1000408F0(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (v4)
  {
    uint64_t v5 = v4;
    sub_100222270();

    id v6 = [*(id *)(v37 + v3) egoPeerPermanentInfo];
    if (v6)
    {
      uint64_t v7 = v6;
      a1 = sub_100221BF0();
      unint64_t v9 = v8;

      id v10 = [*(id *)(v37 + v3) egoPeerPermanentInfoSig];
      if (v10)
      {
        BOOL v11 = v10;
        uint64_t v12 = sub_100221BF0();
        unint64_t v14 = v13;

        unint64_t v36 = v9;
        id v15 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
        sub_1000059E8(a1, v36);
        sub_1000059E8(v12, v14);
        NSString v16 = sub_100222260();
        swift_bridgeObjectRelease();
        Class isa = sub_100221BD0().super.isa;
        Class v18 = sub_100221BD0().super.isa;
        id v19 = [self permanentInfoWithPeerID:v16 data:isa sig:v18 keyFactory:v15];

        sub_100005A40(v12, v14);
        sub_100005A40(a1, v36);

        if (v19)
        {
          id v20 = [*(id *)(v37 + v3) bottles];
          if (v20)
          {
            Swift::String v21 = v20;
            type metadata accessor for BottleMO();
            sub_1000438F4(&qword_100299690, (void (*)(uint64_t))type metadata accessor for BottleMO);
            sub_100222430();
          }
          sub_100042D4C();
          swift_allocError();
          *(void *)uint64_t v27 = 26;
          *(void *)(v27 + 8) = 0;
          *(unsigned char *)(v27 + 16) = 13;
          swift_willThrow();

          sub_100005A40(v12, v14);
          uint64_t v28 = a1;
          unint64_t v29 = v36;
        }
        else
        {
          if (qword_100298BC0 != -1) {
            swift_once();
          }
          uint64_t v30 = sub_100222090();
          sub_100003CC8(v30, (uint64_t)qword_100299678);
          uint64_t v31 = sub_100222070();
          os_log_type_t v32 = sub_100222500();
          if (os_log_type_enabled(v31, v32))
          {
            uint64_t v33 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v33 = 0;
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "fetchCurrentPolicy failed to create TPPeerPermanentInfo", v33, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          swift_allocError();
          *(_OWORD *)uint64_t v34 = xmmword_1002297C0;
          *(unsigned char *)(v34 + 16) = 13;
          swift_willThrow();

          sub_100005A40(v12, v14);
          uint64_t v28 = a1;
          unint64_t v29 = v36;
        }
        sub_100005A40(v28, v29);
        return a1;
      }
      sub_100005A40(a1, v9);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_100298BC0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100222090();
  sub_100003CC8(v22, (uint64_t)qword_100299678);
  uint64_t v23 = sub_100222070();
  os_log_type_t v24 = sub_100222500();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "fetchCurrentPolicy failed to find ego peer information", v25, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  swift_allocError();
  *(_OWORD *)uint64_t v26 = xmmword_1002297D0;
  *(unsigned char *)(v26 + 16) = 13;
  swift_willThrow();
  return a1;
}

uint64_t sub_10004166C(uint64_t a1, uint64_t (*a2)(void, void, void, uint64_t, uint64_t), uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  if (a1)
  {
    if (qword_100298BC0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_100299678);
    swift_errorRetain();
    swift_errorRetain();
    id v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v13 = sub_1002222C0();
      sub_1001BEBDC(v13, v14, &v20);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "preflightVouchWithBottle unable to fetch current peers: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return a2(0, 0, 0, 1, a1);
  }
  else
  {
    __chkstk_darwin(0, a2);
    sub_1000046DC(&qword_100299698);
    uint64_t result = sub_1002225C0();
    if (v20)
    {
      swift_retain();
      id v19 = a4;
      swift_bridgeObjectRetain();
      sub_100198AC4(v20, v19, (uint64_t)a2, a3, v19, a5, a6);
      swift_bridgeObjectRelease();
      swift_release();

      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_10004194C(uint64_t a1@<X0>, void (*a2)(void, void, void, uint64_t, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v19 = 0;
  id v6 = [v5 allPolicyVersionsWithError:&v19];
  id v7 = v19;
  if (v6)
  {
    unint64_t v8 = v6;
    sub_1000438B4();
    sub_1000438F4((unint64_t *)&qword_10029EDE0, (void (*)(uint64_t))sub_1000438B4);
    uint64_t v9 = sub_100222440();
    id v10 = v7;
  }
  else
  {
    id v11 = v19;
    uint64_t v12 = sub_100221B40();

    swift_willThrow();
    if (qword_100298BC0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_100299678);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      NSString v16 = (uint8_t *)swift_slowAlloc();
      Class v18 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v16 = 138543362;
      swift_errorRetain();
      char v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v19 = v17;
      sub_100222690();
      *Class v18 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error fetching all policy versions: %{public}@", v16, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(0, 0, 0, 1, v12);
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v9 = 0;
  }
  *a3 = v9;
}

uint64_t sub_100041C38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, uint64_t, uint64_t), uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  return sub_1000434BC(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100041C54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, objc_class *a6, objc_class *a7, objc_class *a8, objc_class *a9)
{
  if (!a3)
  {
    id v11 = *(void **)((char *)a7 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    uint64_t v13 = swift_allocObject();
    v13[2].Class isa = a7;
    v13[3].Class isa = a8;
    v13[4].Class isa = a9;
    v13[5].Class isa = (Class)a5;
    v13[6].Class isa = a6;
    a5 = swift_allocObject();
    *(void *)(a5 + 16) = sub_1000437A8;
    *(void *)(a5 + 24) = v13;
    aBlock[4] = (uint64_t)sub_1000437D0;
    aBlock[5] = a5;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100281A10;
    uint64_t v20 = _Block_copy(aBlock);
    Swift::String v21 = a7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    [v11 performBlockAndWait:v20];
    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  id v11 = a3;
  if (qword_100298BC0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100222090();
  sub_100003CC8(v12, (uint64_t)qword_100299678);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = sub_100222070();
  os_log_type_t v14 = sub_1002224E0();
  if (!os_log_type_enabled(v13, v14))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)os_log_type_t v15 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v16 = sub_1002222C0();
  sub_1001BEBDC(v16, v17, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v13, v14, "preflightVouchWithBottle unable to fetch viable bottles: %{public}s", v15, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  return ((uint64_t (*)(void, void, void, uint64_t, void *))a5)(0, 0, 0, 1, v11);
}

void sub_100041FAC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void *, uint64_t, void))
{
  uint64_t v5 = (void *)sub_1000408F0(a2);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  id v11 = v10;

  id v12 = v11;
  a4(v7, v9, v11, 1, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_10004224C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  id v10 = *(void **)&v4[OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc];
  id v11 = (void *)swift_allocObject();
  void v11[2] = v4;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = sub_100043948;
  v11[6] = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10004399C;
  *(void *)(v12 + 24) = v11;
  v17[4] = sub_1000439DC;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100112F58;
  v17[3] = &unk_100281B00;
  uint64_t v13 = _Block_copy(v17);
  swift_retain();
  os_log_type_t v14 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  [v10 performBlockAndWait:v13];
  swift_release();
  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100042420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (a3) {
    os_log_type_t v8 = sub_100222500();
  }
  else {
    os_log_type_t v8 = sub_1002224E0();
  }
  os_log_type_t v9 = v8;
  if (qword_100298BC0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100222090();
  sub_100003CC8(v10, (uint64_t)qword_100299678);
  swift_errorRetain();
  swift_errorRetain();
  id v11 = sub_100222070();
  if (os_log_type_enabled(v11, v9))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    if (a3)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v16._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v16);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v13 = 0x203A726F727265;
    }
    else
    {
      uint64_t v13 = 0x73736563637573;
    }
    sub_1001BEBDC(v13, 0xE700000000000000, &v15);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v9, "octagonPeerID complete: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  return a4(a1, a2, a3);
}

void sub_100042680(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void, void, uint64_t))
{
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "bottles"));
  if (v7)
  {
    os_log_type_t v8 = v7;
    uint64_t v17 = 0;
    type metadata accessor for BottleMO();
    sub_1000438F4(&qword_100299690, (void (*)(uint64_t))type metadata accessor for BottleMO);
    sub_100222430();
  }
  sub_100042D4C();
  uint64_t v9 = swift_allocError();
  *(void *)uint64_t v10 = 26;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 13;
  swift_willThrow();
  if (qword_100298BC0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_100299678);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v12 = sub_100222070();
  os_log_type_t v13 = sub_100222500();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    sub_1001BEBDC(a2, a3, &v17);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2082;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    uint64_t v15 = sub_1002222C0();
    sub_1001BEBDC(v15, v16, &v17);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "octagonPeerID Error finding peer with bottleID %s, privacy: .public): %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  a4(0, 0, v9);
  swift_errorRelease();
  swift_errorRelease();
}

unint64_t sub_100042D4C()
{
  unint64_t result = qword_100299D50;
  if (!qword_100299D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100299D50);
  }
  return result;
}

void sub_100042DA0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a2;
  uint64_t v30 = 0;
  int64_t v7 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v8 = a3 + 56;
  uint64_t v9 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v8 - 24);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v9;
  uint64_t v31 = v8;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v15 = v14 | (v7 << 6);
LABEL_21:
    id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v15);
    id v20 = objc_msgSend(v19, "bottleID", v28);
    if (v20)
    {
      Swift::String v21 = v20;
      uint64_t v22 = sub_100222270();
      uint64_t v24 = v23;

      if (v22 == a4 && v24 == a5)
      {

        swift_bridgeObjectRelease();
LABEL_29:
        *(unint64_t *)((char *)a1 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        if (__OFADD__(v30++, 1))
        {
          __break(1u);
LABEL_32:
          swift_retain();
          sub_10018FDE0(a1, v28, v30, a3);
          return;
        }
      }
      else
      {
        char v26 = sub_100222A30();

        swift_bridgeObjectRelease();
        if (v26) {
          goto LABEL_29;
        }
      }
    }
    else
    {
    }
  }
  int64_t v16 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v16 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v16);
  ++v7;
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 1;
  if (v16 + 1 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v7);
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 2;
  if (v16 + 2 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v7);
  if (v17)
  {
LABEL_20:
    unint64_t v13 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_21;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v31 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v32) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v31 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_100042FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v12);
    bzero((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    sub_100042DA0((unint64_t *)((char *)&v18 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    uint64_t v14 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v10);
    swift_bridgeObjectRetain();
    sub_100042DA0((unint64_t *)v15, v9, a1, a2, a3);
    uint64_t v14 = v16;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v14;
}

Swift::Int sub_1000431C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_100042FE8(a1, a2, a3);
  }
  swift_bridgeObjectRetain();
  sub_100222700();
  if (sub_100222790())
  {
    type metadata accessor for BottleMO();
    do
    {
      swift_dynamicCast();
      id v5 = [v23 bottleID];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = sub_100222270();
        uint64_t v9 = v8;

        if (v7 == a2 && v9 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_14:
          unint64_t v12 = *((void *)&_swiftEmptySetSingleton + 2);
          if (*((void *)&_swiftEmptySetSingleton + 3) <= v12) {
            sub_10018E36C(v12 + 1);
          }
          Swift::Int result = sub_100222640(*((void *)&_swiftEmptySetSingleton + 5));
          uint64_t v14 = (char *)&_swiftEmptySetSingleton + 56;
          uint64_t v15 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
          unint64_t v16 = result & ~v15;
          unint64_t v17 = v16 >> 6;
          if (((-1 << v16) & ~*((void *)&_swiftEmptySetSingleton + (v16 >> 6) + 7)) != 0)
          {
            unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*((void *)&_swiftEmptySetSingleton + (v16 >> 6) + 7))) | v16 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v19 = 0;
            unint64_t v20 = (unint64_t)(63 - v15) >> 6;
            do
            {
              if (++v17 == v20 && (v19 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v21 = v17 == v20;
              if (v17 == v20) {
                unint64_t v17 = 0;
              }
              v19 |= v21;
              uint64_t v22 = *(void *)&v14[8 * v17];
            }
            while (v22 == -1);
            unint64_t v18 = __clz(__rbit64(~v22)) + (v17 << 6);
          }
          *(void *)&v14[(v18 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v18;
          *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v18) = v23;
          ++*((void *)&_swiftEmptySetSingleton + 2);
          continue;
        }
        char v11 = sub_100222A30();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_14;
        }
      }
    }
    while (sub_100222790());
  }
  swift_bridgeObjectRelease();
  swift_release();
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100043444()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10004348C(uint64_t a1)
{
  return sub_10004166C(a1, *(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48));
}

void sub_10004349C(uint64_t *a1@<X8>)
{
  sub_10004194C(*(void *)(v1 + 16), *(void (**)(void, void, void, uint64_t, uint64_t))(v1 + 24), a1);
}

uint64_t sub_1000434BC(uint64_t a1, uint64_t (*a2)(void, void, void, uint64_t, uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    if (qword_100298BC0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_100299678);
    swift_errorRetain();
    swift_errorRetain();
    size_t v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)unint64_t v12 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v13 = sub_1002222C0();
      sub_1001BEBDC(v13, v14, &v21);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "preflightVouchWithBottle unable to fetch policy documents: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return a2(0, 0, 0, 1, a1);
  }
  else
  {
    unint64_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = a2;
    v18[4] = a3;
    v18[5] = a4;
    v18[6] = a5;
    v18[7] = a6;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100043840;
    *(void *)(v19 + 24) = v18;
    swift_retain();
    a4;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100154FFC(0, 0, 0, 0, 0, (uint64_t)sub_1000438A8, v19);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1000437A8()
{
  return sub_1000439B4((uint64_t (*)(void, void, void, void, void))sub_100041FAC);
}

uint64_t sub_1000437C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000437D0()
{
  return sub_100112F30(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000437D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000437E8()
{
  return swift_release();
}

uint64_t sub_1000437F0()
{
  swift_errorRelease();
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100043840(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100041C54(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(objc_class **)(v3 + 32), *(objc_class **)(v3 + 40), *(objc_class **)(v3 + 48), *(objc_class **)(v3 + 56));
}

uint64_t sub_100043870()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000438A8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100154BAC(a1, a2, a3 & 1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
}

unint64_t sub_1000438B4()
{
  unint64_t result = qword_10029EDB0;
  if (!qword_10029EDB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10029EDB0);
  }
  return result;
}

uint64_t sub_1000438F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100043948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100042420(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
}

uint64_t sub_100043954()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10004399C()
{
  return sub_1000439B4((uint64_t (*)(void, void, void, void, void))sub_100042680);
}

uint64_t sub_1000439B4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1000439CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

char *sub_100043C0C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicEncryptionKey;
  *(void *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicEncryptionKey] = 0;
  uint64_t v8 = OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicSigningKey;
  *(void *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicSigningKey] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  uint64_t v25 = OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey;
  *(void *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey] = a3;
  uint64_t v24 = OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey;
  *(void *)&v4[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey] = a4;
  size_t v10 = v4;
  id v11 = a3;
  id v26 = a4;
  id v12 = [v26 publicKey];
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {

    uint64_t v13 = 0;
  }
  unint64_t v14 = *(void **)&v4[v7];
  *(void *)&v4[v7] = v13;

  id v15 = [v11 publicKey];
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {

    uint64_t v16 = 0;
  }
  unint64_t v17 = *(void **)&v4[v8];
  *(void *)&v4[v8] = v16;

  unint64_t v18 = *(void **)&v4[v7];
  if (v18 && (uint64_t v19 = *(void **)&v4[v8]) != 0)
  {
    *(void *)&v10[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionVerificationKey] = v18;
    *(void *)&v10[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingVerificationKey] = v19;
    id v20 = v18;
    id v21 = v19;

    v27.receiver = v10;
    v27.super_class = (Class)type metadata accessor for OctagonSelfPeerKeys();
    id v4 = (char *)objc_msgSendSuper2(&v27, "init");
  }
  else
  {
    sub_100044338();
    swift_allocError();
    swift_willThrow();

    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)&v4[v8];

    type metadata accessor for OctagonSelfPeerKeys();
    swift_deallocPartialClassInstance();
  }
  return v4;
}

unint64_t sub_100043E98()
{
  sub_100222840(25);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID + 8);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v1;
  v4._object = v2;
  sub_100222310(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 62;
  v5._object = (void *)0xE100000000000000;
  sub_100222310(v5);
  return 0xD000000000000016;
}

id sub_100043F74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OctagonSelfPeerKeys();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t TPPeerPermanentInfo.publicEncryptionKey.getter()
{
  return sub_1000440FC((SEL *)&selRef_encryptionPubKey);
}

id sub_10004406C(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = [v4 *a3];
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();

  if (!v6) {
    swift_unknownObjectRelease();
  }

  return v6;
}

uint64_t TPPeerPermanentInfo.publicSigningKey.getter()
{
  return sub_1000440FC((SEL *)&selRef_signingPubKey);
}

uint64_t sub_1000440FC(SEL *a1)
{
  id v2 = [v1 *a1];
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

uint64_t TPPeerPermanentInfo.matchesPeer(_:)(void *a1)
{
  id v3 = [v1 peerID];
  uint64_t v4 = sub_100222270();
  uint64_t v6 = v5;

  id v7 = [a1 peerID];
  uint64_t v8 = sub_100222270();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_100222A30();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t type metadata accessor for OctagonSelfPeerKeys()
{
  return self;
}

unint64_t sub_100044338()
{
  unint64_t result = qword_1002997D0;
  if (!qword_1002997D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002997D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OctagonSelfPeerKeysError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100044428);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OctagonSelfPeerKeysError()
{
  return &type metadata for OctagonSelfPeerKeysError;
}

unint64_t sub_100044464()
{
  unint64_t result = qword_1002997D8;
  if (!qword_1002997D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002997D8);
  }
  return result;
}

uint64_t sub_1000444B8(void *a1)
{
  id v1 = [a1 keyclass];
  uint64_t v2 = sub_100222270();
  uint64_t v4 = v3;

  if (sub_100222270() == v2 && v5 == v4) {
    goto LABEL_17;
  }
  char v7 = sub_100222A30();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    if (sub_100222270() != v2 || v8 != v4)
    {
      char v10 = sub_100222A30();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_6;
      }
      if (sub_100222270() != v2 || v11 != v4)
      {
        sub_100222A30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
LABEL_6:
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v12 = type metadata accessor for ViewKey(0);
  __chkstk_darwin(v12, v13);
  sub_100045B50();
  return sub_100221F70();
}

uint64_t sub_1000446BC(uint64_t a1, id a2, uint64_t a3, char a4)
{
  id v8 = [a2 uuid];
  uint64_t v9 = sub_100222270();
  uint64_t v11 = v10;

  swift_bridgeObjectRelease();
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  id v12 = [a2 parentKeyUUID];
  uint64_t v13 = sub_100222270();
  uint64_t v15 = v14;

  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = a3;
  *(unsigned char *)(a1 + 40) = a4 & 1;
  id v16 = [a2 wrappedkey];
  id v17 = [v16 base64WrappedKey];

  uint64_t v18 = sub_100222270();
  uint64_t v20 = v19;

  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v20;
  id v21 = SecCKKSHostOSVersion();
  uint64_t v22 = sub_100222270();
  uint64_t v24 = v23;

  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = v22;
  *(void *)(a1 + 72) = v24;
  return result;
}

uint64_t sub_100044808(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for ViewKey(0);
  __chkstk_darwin(v4 - 8, v5);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a2 tlk];
  id v9 = [v8 zoneID];

  id v10 = [v9 zoneName];
  uint64_t v11 = sub_100222270();
  uint64_t v13 = v12;

  uint64_t v14 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v15 = swift_retain();
    *(void *)(a1 + v14) = sub_100091A2C(v15);
    swift_release();
  }
  uint64_t v16 = *(void *)(a1 + v14);
  swift_beginAccess();
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v13;
  swift_bridgeObjectRelease();
  id v17 = [a2 tlk];
  sub_1000444B8(v17);

  ViewKeys.newTlk.setter((uint64_t)v7);
  id v18 = [a2 classA];
  sub_1000444B8(v18);

  ViewKeys.newClassA.setter((uint64_t)v7);
  id v19 = [a2 classC];
  sub_1000444B8(v19);

  return ViewKeys.newClassC.setter((uint64_t)v7);
}

uint64_t sub_100044A1C(uint64_t *a1, id a2)
{
  id v4 = [a2 zoneID];
  id v5 = [v4 zoneName];

  uint64_t v6 = sub_100222270();
  uint64_t v8 = v7;

  swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v8;
  a1[2] = (uint64_t)[a2 curve];
  a1[3] = (uint64_t)[a2 epoch];
  id v9 = [a2 tlkUUID];
  uint64_t v10 = sub_100222270();
  uint64_t v12 = v11;

  swift_bridgeObjectRelease();
  a1[4] = v10;
  a1[5] = v12;
  a1[6] = (uint64_t)[a2 poisoned];
  id v13 = [a2 receiverPeerID];
  uint64_t v14 = sub_100222270();
  uint64_t v16 = v15;

  swift_bridgeObjectRelease();
  a1[7] = v14;
  a1[8] = v16;
  id v17 = [a2 receiverPublicEncryptionKeySPKI];
  uint64_t v18 = sub_100221BF0();
  unint64_t v20 = v19;

  uint64_t v21 = sub_100221BE0(0);
  uint64_t v23 = v22;
  sub_100005A40(v18, v20);
  swift_bridgeObjectRelease();
  a1[9] = v21;
  a1[10] = v23;
  id v24 = [a2 senderPeerID];
  uint64_t v25 = sub_100222270();
  uint64_t v27 = v26;

  swift_bridgeObjectRelease();
  a1[11] = v25;
  a1[12] = v27;
  id v28 = [a2 signature];
  if (v28)
  {
    uint64_t v29 = sub_100221BF0();
    unint64_t v31 = v30;

    id v28 = (id)sub_100221BE0(0);
    unint64_t v33 = v32;
    sub_100005A40(v29, v31);
  }
  else
  {
    unint64_t v33 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  a1[13] = (uint64_t)v28;
  a1[14] = v33;
  uint64_t result = (uint64_t)[a2 version];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    a1[15] = result;
    id v35 = [a2 wrappedTLK];
    if (v35)
    {
      uint64_t v36 = sub_100221BF0();
      unint64_t v38 = v37;

      id v35 = (id)sub_100221BE0(0);
      unint64_t v40 = v39;
      sub_100005A40(v36, v38);
    }
    else
    {
      unint64_t v40 = 0xE000000000000000;
    }
    uint64_t result = swift_bridgeObjectRelease();
    a1[16] = (uint64_t)v35;
    a1[17] = v40;
  }
  return result;
}

void *sub_100044CEC()
{
  uint64_t v1 = sub_1000046DC(&qword_1002997E0);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v95 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v90 = (uint64_t)&v85 - v7;
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v85 - v9;
  uint64_t v11 = sub_100221D50();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v86 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  unint64_t v19 = (char *)&v85 - v18;
  uint64_t v21 = __chkstk_darwin(v17, v20);
  uint64_t v94 = (char *)&v85 - v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v89 = (char *)&v85 - v25;
  __chkstk_darwin(v24, v26);
  id v101 = (char *)&v85 - v27;
  uint64_t v28 = sub_1000046DC(&qword_100299648);
  uint64_t v30 = __chkstk_darwin(v28 - 8, v29);
  uint64_t v91 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30, v32);
  uint64_t v88 = (uint64_t)&v85 - v34;
  __chkstk_darwin(v33, v35);
  unint64_t v37 = (char *)&v85 - v36;
  unint64_t v38 = (int *)type metadata accessor for ViewKeysRecords(0);
  uint64_t v39 = *((void *)v38 - 1);
  uint64_t v41 = __chkstk_darwin(v38, v40);
  id v93 = (char *)&v85 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v46 = (char *)&v85 - v45;
  __chkstk_darwin(v44, v47);
  uint64_t v49 = (char *)&v85 - v48;
  sub_1000046DC(&qword_1002997E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100229910;
  uint64_t v50 = *(int *)(type metadata accessor for FetchRecoverableTLKSharesResponse.View(0) + 28);
  uint64_t v96 = v0;
  uint64_t v98 = v0 + v50;
  sub_10000D830(v0 + v50, (uint64_t)v37, &qword_100299648);
  int v99 = *(uint64_t (**)(char *, uint64_t, int *))(v39 + 48);
  uint64_t v100 = (void (*)(char *, char *, uint64_t))(v39 + 48);
  int v51 = v99(v37, 1, v38);
  uint64_t v87 = v19;
  if (v51 == 1)
  {
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    int v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v52(&v49[v38[5]], 1, 1, v11);
    v52(&v49[v38[6]], 1, 1, v11);
    v52(&v49[v38[7]], 1, 1, v11);
    sub_10004015C((uint64_t)v37, &qword_100299648);
  }
  else
  {
    sub_100045C08((uint64_t)v37, (uint64_t)v49, type metadata accessor for ViewKeysRecords);
  }
  sub_10000D830((uint64_t)&v49[v38[5]], (uint64_t)v10, &qword_1002997E0);
  uint64_t v97 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v53 = v97(v10, 1, v11);
  uint64_t v54 = (uint64_t)v93;
  if (v53 == 1)
  {
    sub_100221D40();
    sub_10004015C((uint64_t)v10, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v101, v10, v11);
  }
  unint64_t v55 = sub_100045AF0();
  sub_100045BA8((uint64_t)v49, type metadata accessor for ViewKeysRecords);
  id v101 = (char *)v55;
  uint64_t v56 = sub_100222620();
  uint64_t v57 = inited;
  *(void *)(inited + 32) = v56;
  uint64_t v58 = v88;
  sub_10000D830(v98, v88, &qword_100299648);
  if (v99((char *)v58, 1, v38) == 1)
  {
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v59(&v46[v38[5]], 1, 1, v11);
    v59(&v46[v38[6]], 1, 1, v11);
    v59(&v46[v38[7]], 1, 1, v11);
    sub_10004015C(v58, &qword_100299648);
  }
  else
  {
    sub_100045C08(v58, (uint64_t)v46, type metadata accessor for ViewKeysRecords);
  }
  uint64_t v60 = v90;
  uint64_t v61 = (uint64_t)v91;
  size_t v62 = v89;
  sub_10000D830((uint64_t)&v46[v38[6]], v90, &qword_1002997E0);
  if (v97((char *)v60, 1, v11) == 1)
  {
    sub_100221D40();
    sub_10004015C(v60, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v62, v60, v11);
  }
  sub_100045BA8((uint64_t)v46, type metadata accessor for ViewKeysRecords);
  *(void *)(v57 + 40) = sub_100222620();
  sub_10000D830(v98, v61, &qword_100299648);
  if (v99((char *)v61, 1, v38) == 1)
  {
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v63(v54 + v38[5], 1, 1, v11);
    v63(v54 + v38[6], 1, 1, v11);
    v63(v54 + v38[7], 1, 1, v11);
    sub_10004015C(v61, &qword_100299648);
  }
  else
  {
    sub_100045C08(v61, v54, type metadata accessor for ViewKeysRecords);
  }
  uint64_t v65 = v94;
  uint64_t v64 = v95;
  sub_10000D830(v54 + v38[7], v95, &qword_1002997E0);
  if (v97((char *)v64, 1, v11) == 1)
  {
    sub_100221D40();
    sub_10004015C(v64, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v65, v64, v11);
  }
  sub_100045BA8(v54, type metadata accessor for ViewKeysRecords);
  *(void *)(v57 + 48) = sub_100222620();
  uint64_t v102 = v57;
  sub_1002223E0();
  uint64_t v66 = v102;
  uint64_t v67 = *(void *)(v96 + 16);
  uint64_t v68 = *(void *)(v67 + 16);
  size_t v69 = _swiftEmptyArrayStorage;
  if (v68)
  {
    uint64_t v98 = v102;
    uint64_t v102 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1002228D0();
    uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v70 = v12 + 16;
    uint64_t v72 = *(unsigned __int8 *)(v70 + 64);
    uint64_t v97 = (uint64_t (*)(char *, uint64_t, uint64_t))v67;
    uint64_t v73 = (char *)(v67 + ((v72 + 32) & ~v72));
    int v99 = *(uint64_t (**)(char *, uint64_t, int *))(v70 + 56);
    uint64_t v100 = v71;
    uint64_t v74 = v70;
    uint64_t v75 = v86;
    size_t v76 = v87;
    do
    {
      unint64_t v77 = v100;
      v100(v76, v73, v11);
      v77(v75, v76, v11);
      sub_100222620();
      (*(void (**)(char *, uint64_t))(v74 - 8))(v76, v11);
      sub_1002228B0();
      sub_1002228E0();
      sub_1002228F0();
      sub_1002228C0();
      uint64_t v73 = (char *)v99 + (void)v73;
      --v68;
    }
    while (v68);
    uint64_t v78 = (void *)v102;
    swift_bridgeObjectRelease();
    size_t v69 = _swiftEmptyArrayStorage;
    uint64_t v66 = v98;
  }
  else
  {
    uint64_t v78 = _swiftEmptyArrayStorage;
  }
  uint64_t v102 = v66;
  sub_10011B0FC((uint64_t)v78);
  uint64_t v79 = v102;
  uint64_t v102 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v80 = *(void *)(v79 + 16);
  if (v80)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v80; ++i)
    {
      uint64_t v82 = *(void **)(v79 + 8 * i + 32);
      if (v82)
      {
        id v83 = v82;
        sub_1002223A0();
        if (*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1002223F0();
        }
        sub_100222410();
        sub_1002223E0();
      }
    }
    swift_bridgeObjectRelease();
    size_t v69 = (void *)v102;
  }
  swift_bridgeObjectRelease();
  return v69;
}

uint64_t sub_1000456F0()
{
  uint64_t v1 = sub_1000046DC(&qword_1002997E0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100221D50();
  uint64_t v34 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC(&qword_1002997F8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PCSService(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DirectPCSIdentity(0);
  sub_10000D830(v0 + *(int *)(v18 + 24), (uint64_t)v12, &qword_1002997F8);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  unint64_t v37 = v8;
  unint64_t v38 = v4;
  uint64_t v35 = v0;
  uint64_t v36 = v5;
  if (v19 == 1)
  {
    *(_DWORD *)uint64_t v17 = 0;
    *(_OWORD *)(v17 + 8) = xmmword_100229520;
    *((void *)v17 + 3) = 0;
    *((void *)v17 + 4) = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v12, &qword_1002997F8);
  }
  else
  {
    sub_100045C08((uint64_t)v12, (uint64_t)v17, type metadata accessor for PCSService);
  }
  Class isa = sub_100222AE0().super.super.isa;
  uint64_t v21 = *((void *)v17 + 1);
  unint64_t v22 = *((void *)v17 + 2);
  id v23 = objc_allocWithZone((Class)CuttlefishPCSServiceIdentifier);
  sub_1000059E8(v21, v22);
  swift_bridgeObjectRetain();
  Class v24 = sub_100221BD0().super.isa;
  NSString v25 = sub_100222260();
  swift_bridgeObjectRelease();
  id v26 = [v23 init:isa PCSPublicKey:v24 zoneID:v25];
  sub_100005A40(v21, v22);

  sub_100045BA8((uint64_t)v17, type metadata accessor for PCSService);
  uint64_t v27 = (uint64_t)v38;
  sub_10000D830(v35 + *(int *)(v18 + 20), (uint64_t)v38, &qword_1002997E0);
  uint64_t v28 = v34;
  uint64_t v29 = v36;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v27, 1, v36) == 1)
  {
    sub_100221D40();
    sub_10004015C(v27, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v37, v27, v29);
  }
  sub_100045AF0();
  uint64_t result = sub_100222620();
  if (result)
  {
    uint64_t v31 = (void *)result;
    id v32 = [objc_allocWithZone((Class)CuttlefishPCSIdentity) init:v26 item:result];

    return (uint64_t)v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100045AF0()
{
  unint64_t result = qword_10029ED50;
  if (!qword_10029ED50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10029ED50);
  }
  return result;
}

uint64_t sub_100045B30(uint64_t a1)
{
  return sub_1000446BC(a1, *(id *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

unint64_t sub_100045B50()
{
  unint64_t result = qword_1002997F0;
  if (!qword_1002997F0)
  {
    type metadata accessor for ViewKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002997F0);
  }
  return result;
}

uint64_t sub_100045BA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100045C08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100045C70()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_100299800);
  sub_100003CC8(v0, (uint64_t)qword_100299800);
  return sub_100222080();
}

uint64_t sub_100045CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, void, void, void), uint64_t a7)
{
  return sub_100047E8C(a1, a2, a3, a4, a5, a6, a7, "preflightRecoveryKey complete: %{public}s", 0xD000000000000036, 0x8000000100241360);
}

uint64_t sub_100045D34(uint64_t a1, uint64_t (*a2)(void, void, void, uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100222090();
    sub_100003CC8(v11, (uint64_t)qword_100299800);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = sub_100222070();
    os_log_type_t v13 = sub_1002224E0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v15 = sub_1002222C0();
      sub_1001BEBDC(v15, v16, &v24);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "preflightRecoveryKey unable to fetch current peers: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return a2(0, 0, 0, a1);
  }
  else
  {
    __chkstk_darwin(0, a2);
    sub_1000046DC(&qword_100299698);
    uint64_t result = sub_1002225C0();
    if (v24)
    {
      swift_retain();
      id v23 = a4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100199614(v24, v23, (uint64_t)a2, a3, v23, a5, a6, a7, a8);
      swift_bridgeObjectRelease();
      swift_release();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100046034(uint64_t a1, void *a2, uint64_t a3, objc_class *a4, objc_class *a5, objc_class *a6, objc_class *a7, objc_class *a8, objc_class *a9)
{
  return sub_10004BE00(a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_10004605C(uint64_t a1, void (*a2)(void, void, void, id), uint64_t a3, uint64_t a4, unint64_t a5, void *a6, unint64_t a7)
{
  uint64_t v13 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (!v14) {
    goto LABEL_15;
  }
  uint64_t v15 = v14;
  NSString v229 = a2;
  sub_100222270();
  id v16 = [*(id *)(a1 + v13) egoPeerPermanentInfo];
  if (!v16)
  {
    swift_bridgeObjectRelease();

LABEL_15:
    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_100222090();
    sub_100003CC8(v48, (uint64_t)qword_100299800);
    uint64_t v49 = sub_100222070();
    os_log_type_t v50 = sub_1002224E0();
    if (os_log_type_enabled(v49, v50))
    {
      int v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "preflightRecoveryKey: no ego peer ID", v51, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v52 = swift_allocError();
    *(_OWORD *)uint64_t v53 = xmmword_1002297D0;
    *(unsigned char *)(v53 + 16) = 13;
    a2(0, 0, 0, (id)v52);
    swift_errorRelease();
    return;
  }
  uint64_t v17 = v16;
  id v223 = a6;
  uint64_t v227 = v15;
  uint64_t v18 = sub_100221BF0();
  unint64_t v20 = v19;

  id v21 = [*(id *)(a1 + v13) egoPeerPermanentInfoSig];
  if (!v21)
  {

    uint64_t v44 = v18;
    unint64_t v45 = v20;
LABEL_14:
    sub_100005A40(v44, v45);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v22 = v21;
  uint64_t v225 = v18;
  unint64_t v226 = v20;
  uint64_t v23 = sub_100221BF0();
  unint64_t v25 = v24;

  id v26 = [*(id *)(a1 + v13) egoPeerStableInfo];
  if (!v26)
  {

    uint64_t v46 = v23;
    unint64_t v47 = v25;
LABEL_13:
    sub_100005A40(v46, v47);
    uint64_t v44 = v225;
    unint64_t v45 = v226;
    goto LABEL_14;
  }
  uint64_t v27 = v26;
  unint64_t v221 = v25;
  uint64_t v222 = v23;
  uint64_t v28 = sub_100221BF0();
  unint64_t v30 = v29;

  id v31 = [*(id *)(a1 + v13) egoPeerStableInfoSig];
  if (!v31)
  {

    sub_100005A40(v28, v30);
    unint64_t v47 = v221;
    uint64_t v46 = v222;
    goto LABEL_13;
  }
  id v32 = v31;
  unint64_t v209 = a5;
  unint64_t v211 = a7;
  uint64_t v213 = a4;
  uint64_t v218 = v28;
  unint64_t v219 = v30;
  uint64_t v217 = sub_100221BF0();
  unint64_t v220 = v33;

  id v34 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  sub_1000059E8(v225, v226);
  sub_1000059E8(v222, v221);
  NSString v35 = sub_100222260();
  swift_bridgeObjectRelease();
  Class isa = sub_100221BD0().super.isa;
  Class v37 = sub_100221BD0().super.isa;
  id v38 = [self permanentInfoWithPeerID:v35 data:isa sig:v37 keyFactory:v34];
  NSString v216 = v34;

  sub_100005A40(v222, v221);
  sub_100005A40(v225, v226);

  id v215 = v38;
  if (v38)
  {
    id v39 = objc_allocWithZone((Class)TPPeerStableInfo);
    sub_1000059E8(v218, v30);
    sub_1000059E8(v217, v220);
    Class v40 = sub_100221BD0().super.isa;
    Class v41 = sub_100221BD0().super.isa;
    id v42 = [v39 initWithData:v40 sig:v41];
    sub_100005A40(v217, v220);
    sub_100005A40(v218, v30);

    if (v42)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = (char *)sub_100006E20(v213, v209, (uint64_t)v223, v211);
      id v224 = v42;
      uint64_t v64 = v43;
      uint64_t v65 = OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys;
      uint64_t v66 = *(void **)(*(void *)&v43[OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys]
                     + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingVerificationKey);
      uint64_t v67 = v43;
      id v68 = [v66 keyData];
      uint64_t v69 = sub_100221BF0();
      unint64_t v71 = v70;

      uint64_t v207 = v65;
      id v72 = [*(id *)(*(void *)&v64[v65]+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionVerificationKey) keyData];
      uint64_t v208 = sub_100221BF0();
      unint64_t v210 = v73;

      if (qword_100298BC8 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_100222090();
      sub_100003CC8(v74, (uint64_t)qword_100299800);
      sub_1000059E8(v69, v71);
      sub_1000059E8(v69, v71);
      uint64_t v75 = sub_100222070();
      os_log_type_t v76 = sub_1002224E0();
      id v212 = v67;
      NSString v205 = v64;
      if (os_log_type_enabled(v75, v76))
      {
        unint64_t v77 = (uint8_t *)swift_slowAlloc();
        id v230 = (id)swift_slowAlloc();
        *(_DWORD *)unint64_t v77 = 136446210;
        uint64_t v78 = sub_100221BE0(0);
        sub_1001BEBDC(v78, v79, (uint64_t *)&v230);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_100005A40(v69, v71);
        sub_100005A40(v69, v71);
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "preflightVouchWithRecoveryKey signingPubKey: %{public}s", v77, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100005A40(v69, v71);
        sub_100005A40(v69, v71);
      }

      sub_1000059E8(v208, v210);
      sub_1000059E8(v208, v210);
      uint64_t v80 = sub_100222070();
      os_log_type_t v81 = sub_1002224E0();
      if (os_log_type_enabled(v80, v81))
      {
        uint64_t v82 = (uint8_t *)swift_slowAlloc();
        id v230 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v82 = 136446210;
        uint64_t v83 = sub_100221BE0(0);
        sub_1001BEBDC(v83, v84, (uint64_t *)&v230);
        sub_100222690();
        swift_bridgeObjectRelease();
        sub_100005A40(v208, v210);
        sub_100005A40(v208, v210);
        _os_log_impl((void *)&_mh_execute_header, v80, v81, "preflightVouchWithRecoveryKey encryptionPubKey: %{public}s", v82, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100005A40(v208, v210);
        sub_100005A40(v69, v71);
      }
      else
      {
        sub_100005A40(v69, v71);
        sub_100005A40(v208, v210);
        sub_100005A40(v208, v210);
        sub_100005A40(v208, v210);
      }
      uint64_t v85 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
      uint64_t v86 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
      id v230 = 0;
      unsigned int v87 = objc_msgSend(v86, "isRecoveryKeyEnrolledWithError:", &v230, v205);
      id v88 = v230;
      if (v230)
      {
        id v89 = v230;

        swift_willThrow();
        uint64_t v90 = v89;
        uint64_t v91 = sub_100222070();
        os_log_type_t v92 = sub_100222500();
        if (os_log_type_enabled(v91, v92))
        {
          id v93 = (uint8_t *)swift_slowAlloc();
          NSString v228 = (void *)swift_slowAlloc();
          *(_DWORD *)id v93 = 138543362;
          uint64_t v94 = v90;
          uint64_t v95 = (void *)_swift_stdlib_bridgeErrorToNSError();
          id v230 = v95;
          sub_100222690();
          *NSString v228 = v95;

          unint64_t v96 = v219;
          uint64_t v97 = v217;
          _os_log_impl((void *)&_mh_execute_header, v91, v92, "preflightRecoveryKey: error determine whether Recovery Key is enrolled: %{public}@", v93, 0xCu);
          sub_1000046DC(&qword_100298F90);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          uint64_t v98 = v229;
          int v99 = v216;
        }
        else
        {

          uint64_t v91 = v90;
          uint64_t v98 = v229;
          int v99 = v216;
          uint64_t v97 = v217;
          unint64_t v96 = v219;
        }

        uint64_t v131 = v90;
        v98(0, 0, 0, v88);

        sub_100005A40(v225, v226);
        sub_100005A40(v222, v221);
        sub_100005A40(v218, v96);

        uint64_t v132 = v97;
LABEL_49:
        sub_100005A40(v132, v220);

        return;
      }
      if (v87)
      {
        uint64_t v100 = *(void **)(*(void *)(v206 + v207) + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingKey);
        id v214 = *(id *)(a1 + v85);
        id v101 = [v100 publicKey];
        id v102 = [v101 keyData];

        uint64_t v103 = sub_100221BF0();
        unint64_t v105 = v104;

        id v106 = [*(id *)(*(void *)(v206 + v207)+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionKey) publicKey];
        id v107 = [v106 keyData];

        uint64_t v108 = sub_100221BF0();
        unint64_t v110 = v109;

        id v111 = objc_allocWithZone((Class)TPRecoveryKeyPair);
        Class v112 = sub_100221BD0().super.isa;
        Class v113 = sub_100221BD0().super.isa;
        id v114 = [v111 initWithSigningKeyData:v112 encryptionKeyData:v113];
        sub_100005A40(v108, v110);
        sub_100005A40(v103, v105);

        id v230 = 0;
        id v115 = [v214 peerIDThatTrustsRecoveryKeys:v114 canIntroducePeer:v215 stableInfo:v224 error:&v230];

        id v116 = v230;
        if (v230)
        {
          id v117 = v230;
          uint64_t v118 = v212;

          swift_willThrow();
          uint64_t v119 = v117;
          uint64_t v120 = sub_100222070();
          os_log_type_t v121 = sub_1002224E0();
          if (os_log_type_enabled(v120, v121))
          {
            size_t v122 = (uint8_t *)swift_slowAlloc();
            uint64_t v123 = (void *)swift_slowAlloc();
            *(_DWORD *)size_t v122 = 138543362;
            uint64_t v124 = v119;
            NSString v125 = (void *)_swift_stdlib_bridgeErrorToNSError();
            id v230 = v125;
            sub_100222690();
            *uint64_t v123 = v125;

            uint64_t v118 = v212;
            unint64_t v126 = v219;
            os_log_type_t v127 = v121;
            uint64_t v128 = v217;
            _os_log_impl((void *)&_mh_execute_header, v120, v127, "preflightRecoveryKey failed to get peer that trusts RK: %{public}@", v122, 0xCu);
            sub_1000046DC(&qword_100298F90);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            size_t v129 = v229;
            uint64_t v130 = v216;
          }
          else
          {

            uint64_t v120 = v119;
            size_t v129 = v229;
            uint64_t v130 = v216;
            uint64_t v128 = v217;
            unint64_t v126 = v219;
          }

          uint64_t v131 = v119;
          v129(0, 0, 0, v116);

          sub_100005A40(v225, v226);
          sub_100005A40(v222, v221);
          sub_100005A40(v218, v126);

          uint64_t v132 = v128;
          goto LABEL_49;
        }
        if (!v115)
        {

          Class v160 = sub_100222070();
          os_log_type_t v161 = sub_1002224E0();
          if (os_log_type_enabled(v160, v161))
          {
            NSString v162 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)NSString v162 = 0;
            _os_log_impl((void *)&_mh_execute_header, v160, v161, "preflightRecoveryKey Untrusted recovery key set", v162, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v163 = swift_allocError();
          *(_OWORD *)uint64_t v164 = xmmword_100229930;
          *(unsigned char *)(v164 + 16) = 13;
          v229(0, 0, 0, (id)v163);

          sub_100005A40(v225, v226);
          sub_100005A40(v222, v221);
          sub_100005A40(v218, v219);

          uint64_t v138 = v217;
          unint64_t v139 = v220;
          goto LABEL_54;
        }
        uint64_t v140 = sub_100222270();
        unint64_t v142 = v141;
        uint64_t v143 = *(void **)(a1 + v85);
        id v230 = 0;
        id v144 = v143;
        id v145 = [v144 peerWithID:v115 error:&v230];

        id v146 = v230;
        if (v230)
        {
          id v147 = v230;

          swift_willThrow();
          id v148 = v147;
          swift_bridgeObjectRetain();
          id v149 = v148;
          char v150 = sub_100222070();
          os_log_type_t v151 = sub_100222500();
          if (os_log_type_enabled(v150, v151))
          {
            uint64_t v152 = swift_slowAlloc();
            id v230 = (id)swift_slowAlloc();
            *(_DWORD *)uint64_t v152 = 136446466;
            swift_bridgeObjectRetain();
            sub_1001BEBDC(v140, v142, (uint64_t *)&v230);
            sub_100222690();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v152 + 12) = 2082;
            id v153 = v149;
            sub_1000046DC(&qword_100299D70);
            uint64_t v154 = sub_1002222C0();
            sub_1001BEBDC(v154, v155, (uint64_t *)&v230);
            sub_100222690();

            unint64_t v156 = v219;
            uint64_t v157 = v217;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v150, v151, "preflightRecoveryKey Error finding peer with ID %{public}s: %{public}s", (uint8_t *)v152, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            NSString v158 = v229;
            id v159 = v216;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            NSString v158 = v229;
            id v159 = v216;
            uint64_t v157 = v217;
            unint64_t v156 = v219;
          }
          uint64_t v131 = v149;
          v158(0, 0, 0, v146);

          sub_100005A40(v225, v226);
          sub_100005A40(v222, v221);
          sub_100005A40(v218, v156);

          uint64_t v132 = v157;
          goto LABEL_49;
        }
        if (v145)
        {
          id v165 = v145;
          swift_bridgeObjectRelease();
          id v166 = *(id *)(a1 + v85);
          id v167 = [v165 dynamicInfo];
          if (v167)
          {
            id v168 = v167;
            id v169 = [v167 includedPeerIDs];

            sub_100222440();
          }
          else
          {
            sub_1000046DC((uint64_t *)&unk_100299820);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_100229540;
            id v174 = [v165 peerID];
            uint64_t v175 = sub_100222270();
            uint64_t v177 = v176;

            *(void *)(inited + 32) = v175;
            *(void *)(inited + 40) = v177;
            sub_100199C04(inited);
            swift_setDeallocating();
            swift_arrayDestroy();
          }
          Class v178 = sub_100222420().super.isa;
          swift_bridgeObjectRelease();
          id v179 = [v165 stableInfo];
          id v230 = 0;
          id v180 = [v166 policyForPeerIDs:v178 candidatePeerID:v227 candidateStableInfo:v179 error:&v230];

          if (v180)
          {
            id v181 = v230;
            NSString v182 = [v215 modelID];
            if (!v182)
            {
              sub_100222270();
              NSString v182 = sub_100222260();
              swift_bridgeObjectRelease();
            }
            id v183 = v165;
            id v184 = [v165 stableInfo];
            if (v184)
            {
              NSString v185 = v184;
              id v186 = [v184 syncUserControllableViews];
            }
            else
            {
              id v186 = 0;
            }
            id v191 = [v224 isInheritedAccount];
            id v230 = 0;
            id v192 = [v180 syncingPolicyForModel:v182 syncUserControllableViews:v186 isInheritedAccount:v191 error:&v230];

            if (v192)
            {
              id v193 = *(void **)(v206 + v207);
              id v194 = v230;
              uint64_t v195 = v193;

              uint64_t v196 = *(void *)&v195[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID];
              uint64_t v197 = *(void *)&v195[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID + 8];
              swift_bridgeObjectRetain();

              id v198 = v192;
              v229(v196, v197, v192, 0);

              sub_100005A40(v225, v226);
              sub_100005A40(v222, v221);
              sub_100005A40(v218, v219);

              sub_100005A40(v217, v220);
              swift_bridgeObjectRelease();

              return;
            }
            id v199 = v230;

            uint64_t v188 = sub_100221B40();
            swift_willThrow();
          }
          else
          {
            id v183 = v165;
            id v187 = v230;

            uint64_t v188 = sub_100221B40();
            swift_willThrow();
          }
          swift_errorRetain();
          swift_errorRetain();
          NSString v200 = sub_100222070();
          os_log_type_t v201 = sub_100222500();
          if (os_log_type_enabled(v200, v201))
          {
            Class v202 = (uint8_t *)swift_slowAlloc();
            id v230 = (id)swift_slowAlloc();
            *(_DWORD *)Class v202 = 136446210;
            swift_errorRetain();
            sub_1000046DC(&qword_100299D70);
            uint64_t v203 = sub_1002222C0();
            sub_1001BEBDC(v203, v204, (uint64_t *)&v230);
            sub_100222690();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v200, v201, "preflightRecoveryKey: error fetching policy: %{public}s", v202, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
          }

          swift_errorRetain();
          v229(0, 0, 0, (id)v188);

          sub_100005A40(v225, v226);
          sub_100005A40(v222, v221);
          sub_100005A40(v218, v219);

          sub_100005A40(v217, v220);
          swift_errorRelease();
LABEL_35:
          swift_errorRelease();
          return;
        }

        swift_bridgeObjectRetain_n();
        NSString v170 = sub_100222070();
        os_log_type_t v171 = sub_1002224E0();
        if (os_log_type_enabled(v170, v171))
        {
          NSString v172 = (uint8_t *)swift_slowAlloc();
          id v230 = (id)swift_slowAlloc();
          *(_DWORD *)NSString v172 = 136446210;
          swift_bridgeObjectRetain();
          sub_1001BEBDC(v140, v142, (uint64_t *)&v230);
          sub_100222690();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v170, v171, "preflightRecoveryKey Failed to find peer with ID %{public}s", v172, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_100042D4C();
        uint64_t v189 = swift_allocError();
        *(void *)uint64_t v190 = v140;
        *(void *)(v190 + 8) = v142;
        *(unsigned char *)(v190 + 16) = 0;
        v229(0, 0, 0, (id)v189);

        sub_100005A40(v225, v226);
        sub_100005A40(v222, v221);
        sub_100005A40(v218, v219);

        uint64_t v138 = v217;
      }
      else
      {

        uint64_t v133 = sub_100222070();
        os_log_type_t v134 = sub_1002224E0();
        if (os_log_type_enabled(v133, v134))
        {
          uint64_t v135 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v135 = 0;
          _os_log_impl((void *)&_mh_execute_header, v133, v134, "preflightRecoveryKey: recovery Key is not enrolled", v135, 2u);
          swift_slowDealloc();
        }

        sub_100042D4C();
        uint64_t v136 = swift_allocError();
        *(_OWORD *)uint64_t v137 = xmmword_100229920;
        *(unsigned char *)(v137 + 16) = 13;
        v229(0, 0, 0, (id)v136);

        sub_100005A40(v225, v226);
        sub_100005A40(v222, v221);
        sub_100005A40(v218, v219);

        uint64_t v138 = v217;
      }
      unint64_t v139 = v220;
LABEL_54:
      sub_100005A40(v138, v139);

      goto LABEL_35;
    }

    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v58 = sub_100222090();
    sub_100003CC8(v58, (uint64_t)qword_100299800);
    uint64_t v59 = sub_100222070();
    os_log_type_t v60 = sub_1002224E0();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "cannot create TPPeerStableInfo", v61, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v62 = swift_allocError();
    *(_OWORD *)uint64_t v63 = xmmword_100229940;
    *(unsigned char *)(v63 + 16) = 13;
    v229(0, 0, 0, (id)v62);
    swift_errorRelease();

    sub_100005A40(v217, v220);
    sub_100005A40(v218, v30);
    uint64_t v56 = v222;
    unint64_t v57 = v221;
  }
  else
  {

    sub_100042D4C();
    uint64_t v54 = swift_allocError();
    *(_OWORD *)uint64_t v55 = xmmword_1002297C0;
    *(unsigned char *)(v55 + 16) = 13;
    v229(0, 0, 0, (id)v54);
    swift_errorRelease();

    sub_100005A40(v217, v220);
    sub_100005A40(v218, v30);
    uint64_t v56 = v222;
    unint64_t v57 = v221;
  }
  sub_100005A40(v56, v57);

  sub_100005A40(v225, v226);
}

uint64_t sub_100047E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, void, void, void), uint64_t a7)
{
  return sub_100047E8C(a1, a2, a3, a4, a5, a6, a7, "preflightCustodianRecoveryKey complete: %{public}s", 0xD000000000000032, 0x8000000100241320);
}

uint64_t sub_100047E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, void, void, void), uint64_t a7, const char *a8, uint64_t a9, unint64_t a10)
{
  if (qword_100298BC8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100222090();
  sub_100003CC8(v13, (uint64_t)qword_100299800);
  swift_errorRetain();
  swift_errorRetain();
  id v14 = sub_100222070();
  os_log_type_t v15 = sub_1002224E0();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v19 = a6;
    id v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)id v16 = 136446210;
    if (a4)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v24._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v24);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v17 = 0x203A726F727265;
    }
    else
    {
      uint64_t v17 = 0x73736563637573;
    }
    sub_1001BEBDC(v17, 0xE700000000000000, &v23);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, a8, v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a6 = v19;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(a9, a10);
  return a6(a1, a2, a3, a4);
}

void sub_100048104(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  if (a1)
  {
    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_100222090();
    sub_100003CC8(v8, (uint64_t)qword_100299800);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = sub_100222070();
    os_log_type_t v10 = sub_1002224E0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      swift_errorRetain();
      sub_1000046DC((uint64_t *)&unk_1002996A0);
      uint64_t v12 = sub_1002222C0();
      sub_1001BEBDC(v12, v13, &v18);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "preflightCustodianRecoveryKey unable to fetch current peers: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    ((void (*)(void, void, void, uint64_t))a2)(0, 0, 0, a1);
  }
  else
  {
    __chkstk_darwin(0, a2);
    sub_1000046DC(&qword_100299698);
    sub_1002225C0();
    if (v18)
    {
      swift_retain();
      id v16 = a4;
      id v17 = a5;
      sub_100199DA8(v18, v16, a2, a3, v16, v17);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

void sub_1000483D4(uint64_t a1@<X0>, void (*a2)(void, void, void, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v19 = 0;
  id v6 = [v5 allPolicyVersionsWithError:&v19];
  id v7 = v19;
  if (v6)
  {
    uint64_t v8 = v6;
    sub_1000438B4();
    sub_10004C55C();
    uint64_t v9 = sub_100222440();
    id v10 = v7;
  }
  else
  {
    id v11 = v19;
    uint64_t v12 = sub_100221B40();

    swift_willThrow();
    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100222090();
    sub_100003CC8(v13, (uint64_t)qword_100299800);
    swift_errorRetain();
    swift_errorRetain();
    id v14 = sub_100222070();
    os_log_type_t v15 = sub_100222500();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)id v16 = 138543362;
      swift_errorRetain();
      id v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v19 = v17;
      sub_100222690();
      *uint64_t v18 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error fetching all policy versions: %{public}@", v16, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a2(0, 0, 0, v12);
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v9 = 0;
  }
  *a3 = v9;
}

uint64_t sub_1000486A0(uint64_t a1, void *a2, uint64_t a3, objc_class *a4, objc_class *a5, objc_class *a6)
{
  return sub_10004C15C(a2, a3, a4, a5, a6);
}

uint64_t sub_1000486B8(uint64_t a1, void (*a2)(void, void, void, void), uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1000046DC(&qword_100299818);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)&v247 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100221D00();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  id v16 = (uint8_t *)&v247 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO;
  id v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                              + OBJC_IVAR____TtC18TrustedPeersHelper9Container_containerMO), "egoPeerID"));
  if (!v18) {
    goto LABEL_20;
  }
  id v19 = v18;
  NSString v266 = a2;
  uint64_t v267 = a3;
  NSString v265 = v16;
  sub_100222270();
  id v20 = [*(id *)(a1 + v17) egoPeerPermanentInfo];
  if (!v20)
  {
    swift_bridgeObjectRelease();

LABEL_19:
    a2 = v266;
LABEL_20:
    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v80 = sub_100222090();
    sub_100003CC8(v80, (uint64_t)qword_100299800);
    os_log_type_t v81 = sub_100222070();
    os_log_type_t v82 = sub_1002224E0();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "preflightCustodianRecoveryKey: no ego peer ID", v83, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v84 = swift_allocError();
    *(_OWORD *)uint64_t v85 = xmmword_1002297D0;
    *(unsigned char *)(v85 + 16) = 13;
    a2(0, 0, 0, v84);
    return swift_errorRelease();
  }
  id v21 = v20;
  uint64_t v261 = v12;
  uint64_t v262 = v13;
  uint64_t v22 = sub_100221BF0();
  unint64_t v24 = v23;

  id v25 = [*(id *)(a1 + v17) egoPeerPermanentInfoSig];
  if (!v25)
  {

    uint64_t v78 = v22;
    unint64_t v79 = v24;
LABEL_18:
    sub_100005A40(v78, v79);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  id v26 = v25;
  id v258 = a4;
  unint64_t v263 = v24;
  uint64_t v264 = v22;
  uint64_t v27 = sub_100221BF0();
  unint64_t v29 = v28;

  id v30 = [*(id *)(a1 + v17) egoPeerStableInfo];
  if (!v30)
  {

    sub_100005A40(v27, v29);
    uint64_t v78 = v264;
LABEL_17:
    unint64_t v79 = v263;
    goto LABEL_18;
  }
  id v31 = v30;
  uint64_t v259 = v27;
  unint64_t v260 = v29;
  uint64_t v32 = sub_100221BF0();
  unint64_t v34 = v33;

  id v35 = [*(id *)(a1 + v17) egoPeerStableInfoSig];
  uint64_t v36 = v264;
  if (!v35)
  {

    sub_100005A40(v32, v34);
    sub_100005A40(v259, v260);
    uint64_t v78 = v36;
    goto LABEL_17;
  }
  Class v37 = v35;
  id v252 = v19;
  uint64_t v256 = v32;
  unint64_t v254 = v34;
  uint64_t v257 = sub_100221BF0();
  unint64_t v255 = v38;

  id v39 = [objc_allocWithZone((Class)TPECPublicKeyFactory) init];
  unint64_t v40 = v263;
  sub_1000059E8(v36, v263);
  uint64_t v41 = v36;
  uint64_t v42 = v259;
  unint64_t v43 = v260;
  sub_1000059E8(v259, v260);
  NSString v44 = sub_100222260();
  id v251 = v44;
  swift_bridgeObjectRelease();
  Class isa = sub_100221BD0().super.isa;
  Class v46 = sub_100221BD0().super.isa;
  id v47 = [self permanentInfoWithPeerID:v44 data:isa sig:v46 keyFactory:v39];
  id v253 = v39;

  sub_100005A40(v42, v43);
  sub_100005A40(v41, v40);

  id v250 = v47;
  if (!v47)
  {

    sub_100042D4C();
    uint64_t v87 = swift_allocError();
    *(_OWORD *)uint64_t v88 = xmmword_1002297C0;
    *(unsigned char *)(v88 + 16) = 13;
    v266(0, 0, 0, v87);
    swift_errorRelease();

    sub_100005A40(v257, v255);
    sub_100005A40(v256, v254);
    sub_100005A40(v259, v260);
    uint64_t v89 = v264;
    unint64_t v90 = v40;
LABEL_29:
    return sub_100005A40(v89, v90);
  }
  id v48 = objc_allocWithZone((Class)TPPeerStableInfo);
  uint64_t v49 = v256;
  unint64_t v50 = v254;
  sub_1000059E8(v256, v254);
  uint64_t v51 = v257;
  unint64_t v52 = v255;
  sub_1000059E8(v257, v255);
  Class v53 = sub_100221BD0().super.isa;
  Class v54 = sub_100221BD0().super.isa;
  id v55 = [v48 initWithData:v53 sig:v54];
  sub_100005A40(v51, v52);
  sub_100005A40(v49, v50);

  id v56 = v55;
  id v57 = v252;
  if (!v55)
  {

    sub_100042D4C();
    uint64_t v91 = swift_allocError();
    *(_OWORD *)uint64_t v92 = xmmword_100229940;
    *(unsigned char *)(v92 + 16) = 13;
    v266(0, 0, 0, v91);
    swift_errorRelease();

    sub_100005A40(v257, v52);
    sub_100005A40(v49, v50);
    sub_100005A40(v259, v260);
    unint64_t v90 = v263;
    uint64_t v89 = v264;
    goto LABEL_29;
  }
  id v58 = [v258 uuid];
  sub_100222270();

  sub_100221CC0();
  swift_bridgeObjectRelease();
  uint64_t v60 = v261;
  uint64_t v59 = v262;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v262 + 48))(v11, 1, v261) == 1)
  {

    sub_10004C498((uint64_t)v11);
    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_100222090();
    sub_100003CC8(v61, (uint64_t)qword_100299800);
    id v62 = v258;
    uint64_t v63 = sub_100222070();
    os_log_type_t v64 = sub_1002224E0();
    BOOL v65 = os_log_type_enabled(v63, v64);
    id v66 = v253;
    if (v65)
    {
      id v251 = v56;
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      id v269 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136446210;
      NSString v265 = v67 + 4;
      id v68 = [v62 uuid];
      uint64_t v69 = sub_100222270();
      unint64_t v71 = v70;

      uint64_t v72 = v256;
      uint64_t v268 = sub_1001BEBDC(v69, v71, (uint64_t *)&v269);
      sub_100222690();

      id v56 = v251;
      id v66 = v253;
      unint64_t v73 = v255;
      unint64_t v74 = v260;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Unable to parse uuid %{public}s", v67, 0xCu);
      swift_arrayDestroy();
      uint64_t v75 = v264;
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v76 = v257;
      id v77 = v250;
    }
    else
    {

      uint64_t v76 = v257;
      id v77 = v250;
      uint64_t v75 = v264;
      unint64_t v74 = v260;
      uint64_t v72 = v256;
      unint64_t v73 = v255;
    }
    sub_100042D4C();
    uint64_t v113 = swift_allocError();
    *(_OWORD *)uint64_t v114 = xmmword_100229920;
    *(unsigned char *)(v114 + 16) = 13;
    v266(0, 0, 0, v113);
    swift_errorRelease();

    sub_100005A40(v76, v73);
    sub_100005A40(v72, v254);
    sub_100005A40(v259, v74);
    return sub_100005A40(v75, v263);
  }
  id v251 = v56;
  id v93 = v265;
  (*(void (**)(uint8_t *, char *, uint64_t))(v59 + 32))(v265, v11, v60);
  uint64_t v94 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  id v95 = *(id *)(a1 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  Class v96 = sub_100221CE0().super.isa;
  id v97 = [v95 findCustodianRecoveryKeyWithUUID:v96];

  id v98 = v250;
  if (!v97)
  {

    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v115 = sub_100222090();
    sub_100003CC8(v115, (uint64_t)qword_100299800);
    id v116 = v258;
    id v117 = sub_100222070();
    os_log_type_t v118 = sub_1002224E0();
    if (os_log_type_enabled(v117, v118))
    {
      uint64_t v119 = (uint8_t *)swift_slowAlloc();
      id v269 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v119 = 136446210;
      id v258 = v119 + 4;
      id v120 = [v116 uuid];
      uint64_t v121 = sub_100222270();
      unint64_t v123 = v122;

      id v93 = v265;
      uint64_t v268 = sub_1001BEBDC(v121, v123, (uint64_t *)&v269);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v117, v118, "Unable to find custodian recovery key %{public}s on model", v119, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v124 = v257;
    uint64_t v125 = v256;
    sub_100042D4C();
    uint64_t v126 = swift_allocError();
    *(_OWORD *)uint64_t v127 = xmmword_100229920;
    *(unsigned char *)(v127 + 16) = 13;
    v266(0, 0, 0, v126);

    swift_errorRelease();
    sub_100005A40(v124, v255);
    uint64_t v128 = v125;
    unint64_t v129 = v254;
    goto LABEL_50;
  }
  id v249 = v97;
  id v99 = v258;
  id v100 = [v258 recoveryString];
  if (!v100)
  {
LABEL_45:

    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v130 = sub_100222090();
    sub_100003CC8(v130, (uint64_t)qword_100299800);
    uint64_t v131 = sub_100222070();
    os_log_type_t v132 = sub_1002224E0();
    BOOL v133 = os_log_type_enabled(v131, v132);
    os_log_type_t v134 = v266;
    uint64_t v135 = v257;
    if (v133)
    {
      uint64_t v136 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v136 = 0;
      _os_log_impl((void *)&_mh_execute_header, v131, v132, "Bad format CRK: recovery string or salt not set", v136, 2u);
      swift_slowDealloc();
    }

    sub_100042D4C();
    uint64_t v137 = swift_allocError();
    *(_OWORD *)uint64_t v138 = xmmword_100229950;
    *(unsigned char *)(v138 + 16) = 13;
    v134(0, 0, 0, v137);

    swift_errorRelease();
    sub_100005A40(v135, v255);
    uint64_t v128 = v256;
    unint64_t v129 = v50;
LABEL_50:
    sub_100005A40(v128, v129);

    sub_100005A40(v259, v260);
    sub_100005A40(v264, v263);
    return (*(uint64_t (**)(uint8_t *, uint64_t))(v262 + 8))(v93, v261);
  }
  id v101 = v100;
  uint64_t v102 = sub_100222270();
  unint64_t v104 = v103;

  id v105 = [v99 salt];
  if (!v105)
  {
    swift_bridgeObjectRelease();
    unint64_t v50 = v254;
    goto LABEL_45;
  }
  id v106 = v105;
  uint64_t v107 = v94;
  uint64_t v108 = sub_100222270();
  unint64_t v110 = v109;

  type metadata accessor for CustodianRecoveryKey();
  swift_allocObject();
  id v111 = v249;
  uint64_t v112 = sub_10000603C(v111, v102, v104, v108, v110);
  id v258 = v111;
  unint64_t v139 = (void *)v112;
  uint64_t v140 = *(void **)(a1 + v107);
  id v269 = 0;
  swift_retain();
  unsigned int v141 = [v140 isCustodianRecoveryKeyTrusted:v111 error:&v269];
  id v249 = v139;
  if (v269)
  {
    id v248 = v269;
    id v142 = v269;
    swift_release();

    swift_willThrow();
    if (qword_100298BC8 != -1) {
      swift_once();
    }
    uint64_t v143 = sub_100222090();
    sub_100003CC8(v143, (uint64_t)qword_100299800);
    id v144 = v142;
    id v145 = sub_100222070();
    os_log_type_t v146 = sub_100222500();
    if (os_log_type_enabled(v145, v146))
    {
      id v147 = (uint8_t *)swift_slowAlloc();
      id v148 = (void *)swift_slowAlloc();
      *(_DWORD *)id v147 = 138543362;
      id v149 = v144;
      char v150 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v269 = v150;
      sub_100222690();
      *id v148 = v150;

      _os_log_impl((void *)&_mh_execute_header, v145, v146, "preflightCustodianRecoveryKey: error determining whether custodian recovery key is trusted: %{public}@", v147, 0xCu);
      sub_1000046DC(&qword_100298F90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v145 = v144;
    }
    id v165 = v265;
    id v166 = (void (*)(void, void, void, id))v266;
    uint64_t v167 = v256;

    id v168 = v144;
    v166(0, 0, 0, v248);

    sub_100005A40(v257, v255);
    sub_100005A40(v167, v254);

    sub_100005A40(v259, v260);
    sub_100005A40(v264, v263);
    swift_release();
    return (*(uint64_t (**)(uint8_t *, uint64_t))(v262 + 8))(v165, v261);
  }
  os_log_type_t v151 = v111;
  uint64_t v152 = v265;
  if (v141)
  {
    id v153 = *(void **)(a1 + v107);
    id v269 = 0;
    id v154 = [v153 peerIDThatTrustsCustodianRecoveryKeys:v111 canIntroducePeer:v98 stableInfo:v251 error:&v269];
    unint64_t v155 = v154;
    if (v269)
    {
      id v156 = v269;
      swift_release();

      swift_willThrow();
      if (qword_100298BC8 != -1) {
        swift_once();
      }
      uint64_t v157 = sub_100222090();
      sub_100003CC8(v157, (uint64_t)qword_100299800);
      NSString v158 = v156;
      id v159 = sub_100222070();
      os_log_type_t v160 = sub_100222500();
      if (os_log_type_enabled(v159, v160))
      {
        os_log_type_t v161 = (uint8_t *)swift_slowAlloc();
        NSString v162 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v161 = 138543362;
        uint64_t v163 = v158;
        uint64_t v164 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v269 = v164;
        sub_100222690();
        *NSString v162 = v164;

        _os_log_impl((void *)&_mh_execute_header, v159, v160, "preflightCustodianRecoveryKey error getting peer that trusts CRK: %{public}@", v161, 0xCu);
        sub_1000046DC(&qword_100298F90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v159 = v158;
      }

      sub_100042D4C();
      uint64_t v195 = swift_allocError();
      *(_OWORD *)uint64_t v196 = xmmword_100229930;
      *(unsigned char *)(v196 + 16) = 13;
      v266(0, 0, 0, v195);

      swift_errorRelease();
      goto LABEL_89;
    }
    if (v154)
    {
      uint64_t v178 = sub_100222270();
      unint64_t v180 = v179;
      id v181 = *(void **)(a1 + v107);
      id v269 = 0;
      id v182 = v181;
      id v183 = [v182 peerWithID:v155 error:&v269];

      if (v269)
      {
        id v184 = v269;
        id v185 = v269;
        swift_release();

        swift_willThrow();
        if (qword_100298BC8 != -1) {
          swift_once();
        }
        uint64_t v186 = sub_100222090();
        sub_100003CC8(v186, (uint64_t)qword_100299800);
        id v187 = v185;
        swift_bridgeObjectRetain();
        id v188 = v187;
        uint64_t v189 = sub_100222070();
        os_log_type_t v190 = sub_100222500();
        if (os_log_type_enabled(v189, v190))
        {
          uint64_t v191 = swift_slowAlloc();
          id v269 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v191 = 136446466;
          swift_bridgeObjectRetain();
          uint64_t v268 = sub_1001BEBDC(v178, v180, (uint64_t *)&v269);
          sub_100222690();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v191 + 12) = 2082;
          uint64_t v268 = (uint64_t)v188;
          id v192 = v188;
          sub_1000046DC(&qword_100299D70);
          uint64_t v193 = sub_1002222C0();
          uint64_t v268 = sub_1001BEBDC(v193, v194, (uint64_t *)&v269);
          sub_100222690();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v189, v190, "preflightCustodianRecoveryKey Error finding peer with ID %{public}s: %{public}s", (uint8_t *)v191, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        id v209 = v188;
        v266(0, 0, 0, v184);

        uint64_t v203 = &v270;
        goto LABEL_88;
      }
      if (v183)
      {
        id v204 = v183;
        swift_bridgeObjectRelease();
        id v205 = *(id *)(a1 + v107);
        id v248 = v204;
        id v206 = [v204 dynamicInfo];
        if (v206)
        {
          uint64_t v207 = v206;
          id v208 = [v206 includedPeerIDs];

          sub_100222440();
        }
        else
        {
          sub_1000046DC((uint64_t *)&unk_100299820);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_100229540;
          id v215 = [v248 peerID];
          uint64_t v216 = sub_100222270();
          uint64_t v218 = v217;

          *(void *)(inited + 32) = v216;
          *(void *)(inited + 40) = v218;
          sub_100199C04(inited);
          swift_setDeallocating();
          swift_arrayDestroy();
        }
        Class v219 = sub_100222420().super.isa;
        swift_bridgeObjectRelease();
        id v220 = [v248 stableInfo];
        id v269 = 0;
        id v221 = v252;
        id v222 = [v205 policyForPeerIDs:v219 candidatePeerID:v252 candidateStableInfo:v220 error:&v269];

        if (v222)
        {
          id v223 = v269;
          NSString v224 = [v250 modelID];
          if (!v224)
          {
            sub_100222270();
            NSString v224 = sub_100222260();
            swift_bridgeObjectRelease();
          }
          id v225 = [v248 stableInfo];
          if (v225)
          {
            unint64_t v226 = v225;
            id v227 = [v225 syncUserControllableViews];
          }
          else
          {
            id v227 = 0;
          }
          id v231 = [v251 isInheritedAccount];
          id v269 = 0;
          id v232 = [v222 syncingPolicyForModel:v224 syncUserControllableViews:v227 isInheritedAccount:v231 error:&v269];

          if (v232)
          {
            id v233 = (void *)*((void *)v249 + 2);
            id v234 = v269;
            NSString v235 = v233;
            swift_release();
            uint64_t v236 = *(void *)&v235[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID];
            uint64_t v237 = *(void *)&v235[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_peerID + 8];
            swift_bridgeObjectRetain();

            id v238 = v232;
            v266(v236, v237, v232, 0);

            swift_bridgeObjectRelease();
            id v239 = v248;

            sub_100005A40(v257, v255);
            sub_100005A40(v256, v254);

            sub_100005A40(v259, v260);
            sub_100005A40(v264, v263);
LABEL_114:
            swift_release();

            return (*(uint64_t (**)(uint8_t *, uint64_t))(v262 + 8))(v265, v261);
          }
          id v240 = v269;
          swift_release();
          uint64_t v229 = sub_100221B40();

          swift_willThrow();
        }
        else
        {
          id v228 = v269;
          swift_release();
          uint64_t v229 = sub_100221B40();

          swift_willThrow();
        }
        if (qword_100298BC8 != -1) {
          swift_once();
        }
        uint64_t v241 = sub_100222090();
        sub_100003CC8(v241, (uint64_t)qword_100299800);
        swift_errorRetain();
        swift_errorRetain();
        id v242 = sub_100222070();
        os_log_type_t v243 = sub_100222500();
        if (os_log_type_enabled(v242, v243))
        {
          NSString v244 = (uint8_t *)swift_slowAlloc();
          id v269 = (id)swift_slowAlloc();
          *(_DWORD *)NSString v244 = 136446210;
          uint64_t v268 = v229;
          swift_errorRetain();
          sub_1000046DC(&qword_100299D70);
          uint64_t v245 = sub_1002222C0();
          uint64_t v268 = sub_1001BEBDC(v245, v246, (uint64_t *)&v269);
          sub_100222690();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v242, v243, "preflightCustodianRecoveryKey: error fetching policy: %{public}s", v244, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        swift_errorRetain();
        v266(0, 0, 0, v229);
        id v239 = v248;

        swift_errorRelease();
        swift_errorRelease();

        sub_100005A40(v257, v255);
        sub_100005A40(v256, v254);

        sub_100005A40(v259, v260);
        sub_100005A40(v264, v263);
        goto LABEL_114;
      }
      swift_release();

      if (qword_100298BC8 != -1) {
        swift_once();
      }
      uint64_t v210 = sub_100222090();
      sub_100003CC8(v210, (uint64_t)qword_100299800);
      swift_bridgeObjectRetain_n();
      unint64_t v211 = sub_100222070();
      os_log_type_t v212 = sub_1002224E0();
      if (os_log_type_enabled(v211, v212))
      {
        uint64_t v213 = (uint8_t *)swift_slowAlloc();
        id v269 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v213 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v268 = sub_1001BEBDC(v178, v180, (uint64_t *)&v269);
        sub_100222690();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v211, v212, "preflightCustodianRecoveryKey Failed to find peer with ID %{public}s", v213, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_100042D4C();
      uint64_t v201 = swift_allocError();
      *(void *)uint64_t v230 = v178;
      *(void *)(v230 + 8) = v180;
      *(unsigned char *)(v230 + 16) = 0;
    }
    else
    {

      swift_release();
      if (qword_100298BC8 != -1) {
        swift_once();
      }
      uint64_t v197 = sub_100222090();
      sub_100003CC8(v197, (uint64_t)qword_100299800);
      id v198 = sub_100222070();
      os_log_type_t v199 = sub_1002224E0();
      if (os_log_type_enabled(v198, v199))
      {
        NSString v200 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v200 = 0;
        _os_log_impl((void *)&_mh_execute_header, v198, v199, "preflightCustodianRecoveryKey Untrusted custodian recovery key", v200, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v201 = swift_allocError();
      *(_OWORD *)uint64_t v202 = xmmword_100229930;
      *(unsigned char *)(v202 + 16) = 13;
    }
    v266(0, 0, 0, v201);

    swift_errorRelease();
    uint64_t v203 = &v271;
LABEL_88:

LABEL_89:
    sub_100005A40(v257, v255);
    sub_100005A40(v256, v254);

    sub_100005A40(v259, v260);
    sub_100005A40(v264, v263);
    swift_release();
    return (*(uint64_t (**)(uint8_t *, uint64_t))(v262 + 8))(v265, v261);
  }
  swift_release();

  unint64_t v169 = v263;
  if (qword_100298BC8 != -1) {
    swift_once();
  }
  uint64_t v170 = sub_100222090();
  sub_100003CC8(v170, (uint64_t)qword_100299800);
  os_log_type_t v171 = sub_100222070();
  os_log_type_t v172 = sub_1002224E0();
  BOOL v173 = os_log_type_enabled(v171, v172);
  uint64_t v174 = v257;
  if (v173)
  {
    uint64_t v175 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v175 = 0;
    _os_log_impl((void *)&_mh_execute_header, v171, v172, "preflightCustodianRecoveryKey: custodian recovery key is not trusted", v175, 2u);
    swift_slowDealloc();
  }

  sub_100042D4C();
  uint64_t v176 = swift_allocError();
  *(_OWORD *)uint64_t v177 = xmmword_100229930;
  *(unsigned char *)(v177 + 16) = 13;
  v266(0, 0, 0, v176);

  swift_errorRelease();
  sub_100005A40(v174, v255);
  sub_100005A40(v256, v254);

  sub_100005A40(v259, v260);
  sub_100005A40(v264, v169);
  swift_release();
  return (*(uint64_t (**)(uint8_t *, uint64_t))(v262 + 8))(v152, v261);
}

uint64_t sub_10004AB2C(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (qword_100298BC8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100222090();
  sub_100003CC8(v7, (uint64_t)qword_100299800);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = sub_100222070();
  os_log_type_t v9 = sub_1002224E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    if (a2)
    {
      swift_errorRetain();
      swift_errorRetain();
      sub_1000046DC(&qword_100299D70);
      v14._countAndFlagsBits = sub_1002222C0();
      sub_100222310(v14);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v11 = 0x203A726F727265;
    }
    else
    {
      uint64_t v11 = 0x73736563637573;
    }
    sub_1001BEBDC(v11, 0xE700000000000000, &v13);
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "preflightRecoverOctagonWithRecoveryKey complete: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100119E14(0xD00000000000003FLL, 0x80000001002412E0);
  return a4(a1 & 1, a2);
}

uint64_t sub_10004ADA0(void *a1, uint64_t a2, objc_class *a3, objc_class *a4, objc_class *a5, objc_class *a6, objc_class *a7, objc_class *a8)
{
  if (!a1)
  {
    uint64_t v10 = *(void **)((char *)a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    uint64_t v12 = swift_allocObject();
    v12[2].Class isa = a5;
    v12[3].Class isa = a6;
    v12[4].Class isa = a7;
    v12[5].Class isa = a8;
    v12[6].Class isa = (Class)a2;
    v12[7].Class isa = a3;
    v12[8].Class isa = a4;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_10004BDAC;
    *(void *)(a2 + 24) = v12;
    aBlock[4] = (uint64_t)sub_1000437D0;
    aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100281C08;
    uint64_t v22 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v23 = a4;
    swift_retain();
    swift_release();
    [v10 performBlockAndWait:v22];
    _Block_release(v22);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = a1;
  if (qword_100298BC8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_100299800);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = sub_100222070();
  os_log_type_t v13 = sub_100222500();
  if (!os_log_type_enabled(v12, v13))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  Swift::String v14 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)Swift::String v14 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v15 = sub_1002222C0();
  sub_1001BEBDC(v15, v16, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v12, v13, "preflightRecoverOctagonWithRecoveryKey unable to fetch changes: %{public}s", v14, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  return ((uint64_t (*)(void, void *))a2)(0, v10);
}

void sub_10004B0F4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void, uint64_t), uint64_t a6, uint64_t a7)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v13 = (char *)sub_100006E20(a1, a2, a3, a4);
  uint64_t v88 = a7;
  uint64_t v89 = a5;
  uint64_t v14 = OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys;
  uint64_t v15 = *(void **)(*(void *)&v13[OBJC_IVAR____TtC18TrustedPeersHelper11RecoveryKey_peerKeys]
                 + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_signingVerificationKey);
  unint64_t v90 = v13;
  id v16 = [v15 keyData];
  uint64_t v17 = sub_100221BF0();
  unint64_t v19 = v18;

  uint64_t v86 = v14;
  uint64_t v87 = v13;
  id v20 = [*(id *)(*(void *)&v13[v14]+ OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_encryptionVerificationKey) keyData];
  uint64_t v21 = sub_100221BF0();
  unint64_t v23 = v22;

  if (qword_100298BC8 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100222090();
  sub_100003CC8(v24, (uint64_t)qword_100299800);
  sub_1000059E8(v17, v19);
  sub_1000059E8(v17, v19);
  id v25 = sub_100222070();
  os_log_type_t v26 = sub_1002224E0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    id v91 = (id)swift_slowAlloc();
    unint64_t v85 = v21;
    *(_DWORD *)uint64_t v27 = 136446210;
    uint64_t v28 = sub_100221BE0(0);
    sub_1001BEBDC(v28, v29, (uint64_t *)&v91);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_100005A40(v17, v19);
    sub_100005A40(v17, v19);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "preflightRecoverOctagonWithRecoveryKey signingPubKey: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100005A40(v17, v19);
    sub_100005A40(v17, v19);
  }

  sub_1000059E8(v21, v23);
  sub_1000059E8(v21, v23);
  id v30 = sub_100222070();
  os_log_type_t v31 = sub_1002224E0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    id v91 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136446210;
    uint64_t v33 = sub_100221BE0(0);
    unint64_t v85 = v19;
    sub_1001BEBDC(v33, v34, (uint64_t *)&v91);
    sub_100222690();
    swift_bridgeObjectRelease();
    sub_100005A40(v21, v23);
    sub_100005A40(v21, v23);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "preflightRecoverOctagonWithRecoveryKey encryptionPubKey: %{public}s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100005A40(v21, v23);
    sub_100005A40(v17, v19);
  }
  else
  {
    sub_100005A40(v17, v19);
    sub_100005A40(v21, v23);
    sub_100005A40(v21, v23);
    sub_100005A40(v21, v23);
  }
  id v35 = v90;
  uint64_t v36 = OBJC_IVAR____TtC18TrustedPeersHelper9Container_model;
  Class v37 = *(void **)(v88 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_model);
  id v91 = 0;
  unsigned int v38 = objc_msgSend(v37, "isRecoveryKeyEnrolledWithError:", &v91, v85);
  id v39 = v89;
  if (!v91)
  {
    if (!v38)
    {

      id v58 = sub_100222070();
      os_log_type_t v59 = sub_1002224E0();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "preflightRecoverOctagonWithRecoveryKey: recovery Key is not enrolled", v60, 2u);
        swift_slowDealloc();
      }

      sub_100042D4C();
      uint64_t v61 = swift_allocError();
      *(_OWORD *)uint64_t v62 = xmmword_100229920;
      *(unsigned char *)(v62 + 16) = 13;
      uint64_t v63 = v61;
      goto LABEL_45;
    }
    id v48 = [*(id *)(v88 + v36) recoverySigningPublicKey];
    if (v48)
    {
      uint64_t v49 = v48;
      uint64_t v50 = sub_100221BF0();
      unint64_t v52 = v51;

      Class v53 = *(void **)(*(void *)&v87[v86] + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicSigningKey);
      if (!v53)
      {
        if (v52 >> 60 != 15)
        {
          uint64_t v54 = 0;
          unint64_t v55 = 0xF000000000000000;
LABEL_28:
          sub_100039FCC(v50, v52);
          sub_100039FCC(v54, v55);
LABEL_29:

LABEL_42:
          unint64_t v79 = sub_100222070();
          os_log_type_t v80 = sub_1002224E0();
          if (os_log_type_enabled(v79, v80))
          {
            os_log_type_t v81 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v81 = 0;
            _os_log_impl((void *)&_mh_execute_header, v79, v80, "preflightRecoverOctagonWithRecoveryKey: recovery Key is incorrect", v81, 2u);
            swift_slowDealloc();
          }

          sub_100042D4C();
          uint64_t v82 = swift_allocError();
          *(_OWORD *)uint64_t v83 = xmmword_100229960;
          *(unsigned char *)(v83 + 16) = 13;
          uint64_t v63 = v82;
LABEL_45:
          v89(0, v63);

          swift_errorRelease();
          return;
        }
LABEL_31:
        id v67 = [*(id *)(v88 + v36) recoveryEncryptionPublicKey];
        if (v67)
        {
          id v68 = v67;
          uint64_t v69 = sub_100221BF0();
          unint64_t v71 = v70;
        }
        else
        {
          uint64_t v69 = 0;
          unint64_t v71 = 0xF000000000000000;
        }
        uint64_t v72 = (char *)*(id *)&v87[v86];

        unint64_t v73 = *(void **)&v72[OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicEncryptionKey];
        id v74 = v73;

        if (v73)
        {
          id v75 = [v74 keyData];

          uint64_t v76 = sub_100221BF0();
          unint64_t v78 = v77;

          if (v71 >> 60 == 15)
          {
            if (v78 >> 60 == 15) {
              goto LABEL_47;
            }
LABEL_41:
            sub_100039FCC(v69, v71);
            sub_100039FCC(v76, v78);
            goto LABEL_42;
          }
          if (v78 >> 60 == 15) {
            goto LABEL_41;
          }
          sub_10004BDEC(v69, v71);
          char v84 = sub_10003FE7C(v69, v71, v76, v78);
          sub_100039FCC(v76, v78);
          sub_100039FCC(v69, v71);
          sub_100039FCC(v69, v71);
          if ((v84 & 1) == 0) {
            goto LABEL_42;
          }
        }
        else if (v71 >> 60 != 15)
        {
          uint64_t v76 = 0;
          unint64_t v78 = 0xF000000000000000;
          goto LABEL_41;
        }
LABEL_47:
        v89(1, 0);

        return;
      }
    }
    else
    {
      Class v53 = *(void **)(*(void *)&v87[v86] + OBJC_IVAR____TtC18TrustedPeersHelper19OctagonSelfPeerKeys_publicSigningKey);
      if (!v53) {
        goto LABEL_31;
      }
      uint64_t v50 = 0;
      unint64_t v52 = 0xF000000000000000;
    }
    id v64 = [v53 keyData];
    uint64_t v54 = sub_100221BF0();
    unint64_t v55 = v65;

    if (v52 >> 60 == 15)
    {
      if (v55 >> 60 != 15) {
        goto LABEL_28;
      }
    }
    else
    {
      if (v55 >> 60 == 15) {
        goto LABEL_28;
      }
      sub_10004BDEC(v50, v52);
      char v66 = sub_10003FE7C(v50, v52, v54, v55);
      sub_100039FCC(v54, v55);
      sub_100039FCC(v50, v52);
      sub_100039FCC(v50, v52);
      if ((v66 & 1) == 0) {
        goto LABEL_29;
      }
    }
    goto LABEL_31;
  }
  id v40 = v91;

  swift_willThrow();
  uint64_t v41 = v40;
  uint64_t v42 = sub_100222070();
  os_log_type_t v43 = sub_100222500();
  if (os_log_type_enabled(v42, v43))
  {
    NSString v44 = (uint8_t *)swift_slowAlloc();
    unint64_t v45 = (void *)swift_slowAlloc();
    *(_DWORD *)NSString v44 = 138543362;
    Class v46 = v41;
    id v47 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v91 = v47;
    sub_100222690();
    *unint64_t v45 = v47;
    id v39 = v89;

    id v35 = v90;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "preflightRecoverOctagonWithRecoveryKey: error determining whether Recovery Key is enrolled: %{public}@", v44, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v42 = v41;
  }

  sub_100042D4C();
  uint64_t v56 = swift_allocError();
  *(_OWORD *)uint64_t v57 = xmmword_100229920;
  *(unsigned char *)(v57 + 16) = 13;
  v39(0, v56);

  swift_errorRelease();
}

uint64_t sub_10004BD5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10004BDAC()
{
  return sub_10004C63C((uint64_t (*)(void, void, void, void, void, void, void))sub_10004B0F4);
}

uint64_t sub_10004BDC4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004BDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004BDE4()
{
  return swift_release();
}

uint64_t sub_10004BDEC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000059E8(a1, a2);
  }
  return a1;
}

uint64_t sub_10004BE00(void *a1, uint64_t a2, objc_class *a3, objc_class *a4, objc_class *a5, objc_class *a6, objc_class *a7, objc_class *a8)
{
  if (!a1)
  {
    uint64_t v10 = *(void **)((char *)a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    uint64_t v12 = swift_allocObject();
    v12[2].Class isa = a4;
    v12[3].Class isa = (Class)a2;
    v12[4].Class isa = a3;
    v12[5].Class isa = a5;
    v12[6].Class isa = a6;
    v12[7].Class isa = a7;
    v12[8].Class isa = a8;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_10004C624;
    *(void *)(a2 + 24) = v12;
    aBlock[4] = (uint64_t)sub_1000439DC;
    aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100281CF8;
    unint64_t v22 = _Block_copy(aBlock);
    unint64_t v23 = a4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v10 performBlockAndWait:v22];
    _Block_release(v22);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = a1;
  if (qword_100298BC8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100222090();
  sub_100003CC8(v11, (uint64_t)qword_100299800);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = sub_100222070();
  os_log_type_t v13 = sub_1002224E0();
  if (!os_log_type_enabled(v12, v13))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v14 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v14 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v15 = sub_1002222C0();
  sub_1001BEBDC(v15, v16, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v12, v13, "preflightRecoveryKey unable to fetch policy documents: %{public}s", v14, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  return ((uint64_t (*)(void, void, void, void *))a2)(0, 0, 0, v10);
}

uint64_t sub_10004C15C(void *a1, uint64_t a2, objc_class *a3, objc_class *a4, objc_class *a5)
{
  if (!a1)
  {
    uint64_t v7 = *(void **)((char *)a4 + OBJC_IVAR____TtC18TrustedPeersHelper9Container_moc);
    os_log_type_t v9 = swift_allocObject();
    v9[2].Class isa = a4;
    v9[3].Class isa = (Class)a2;
    v9[4].Class isa = a3;
    v9[5].Class isa = a5;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_10004C540;
    *(void *)(a2 + 24) = v9;
    aBlock[4] = (uint64_t)sub_1000439DC;
    aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100112F58;
    aBlock[3] = (uint64_t)&unk_100281C80;
    unint64_t v16 = _Block_copy(aBlock);
    uint64_t v17 = a4;
    swift_retain();
    unint64_t v18 = a5;
    swift_retain();
    swift_release();
    [v7 performBlockAndWait:v16];
    _Block_release(v16);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = a1;
  if (qword_100298BC8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100222090();
  sub_100003CC8(v8, (uint64_t)qword_100299800);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v9 = sub_100222070();
  os_log_type_t v10 = sub_1002224E0();
  if (!os_log_type_enabled(v9, v10))
  {
LABEL_8:
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_9;
  }
  uint64_t v11 = (uint8_t *)swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v11 = 136446210;
  swift_errorRetain();
  sub_1000046DC((uint64_t *)&unk_1002996A0);
  uint64_t v12 = sub_1002222C0();
  sub_1001BEBDC(v12, v13, aBlock);
  sub_100222690();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v9, v10, "preflightCustodianRecoveryKey unable to fetch policy documents: %{public}s", v11, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_9:

  return ((uint64_t (*)(void, void, void, void *))a2)(0, 0, 0, v7);
}

uint64_t sub_10004C498(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004C4F8()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10004C540()
{
  return sub_1000486B8(*(void *)(v0 + 16), *(void (**)(void, void, void, void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10004C54C()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10004C55C()
{
  unint64_t result = qword_10029EDE0;
  if (!qword_10029EDE0)
  {
    sub_1000438B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029EDE0);
  }
  return result;
}

void sub_10004C5B4(uint64_t *a1@<X8>)
{
  sub_1000483D4(*(void *)(v1 + 16), *(void (**)(void, void, void, uint64_t))(v1 + 24), a1);
}

uint64_t sub_10004C5D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10004C624()
{
  return sub_10004C63C((uint64_t (*)(void, void, void, void, void, void, void))sub_10004605C);
}

uint64_t sub_10004C63C(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_10004C658()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10004C678(uint64_t *a1@<X8>)
{
}

uint64_t sub_10004C690()
{
  uint64_t v0 = sub_100222090();
  sub_100003C64(v0, qword_100299830);
  sub_100003CC8(v0, (uint64_t)qword_100299830);
  return sub_100222080();
}

uint64_t sub_10004C710(uint64_t a1, uint64_t a2, char a3, BOOL a4)
{
  BOOL v4 = a4;
  if (!a4) {
    return v4;
  }
  BOOL v21 = a4;
  swift_errorRetain();
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  type metadata accessor for CKError(0);
  if (!swift_dynamicCast())
  {
LABEL_12:
    swift_errorRelease();
    swift_errorRelease();
    return 0;
  }
  id v8 = v20;
  uint64_t v9 = sub_1002221B0();
  if (!v9)
  {

    goto LABEL_12;
  }
  os_log_type_t v10 = (void *)v9;
  id v19 = v20;
  sub_100066394(&qword_1002990E0, type metadata accessor for CKError);
  sub_100221AF0();
  if ((void)v17 != a1
    || (id v19 = v10,
        type metadata accessor for CKUnderlyingError(0),
        sub_100066394(&qword_1002990A8, type metadata accessor for CKUnderlyingError),
        sub_100221AF0(),
        (void)v17 != a2))
  {

    goto LABEL_12;
  }
  if (a3)
  {
    *(void *)&long long v17 = v10;
    uint64_t v11 = sub_100221B10();
    uint64_t v12 = sub_100222270();
    if (*(void *)(v11 + 16) && (unint64_t v14 = sub_10000AB48(v12, v13), (v15 & 1) != 0))
    {
      sub_1000663DC(*(void *)(v11 + 56) + 32 * v14, (uint64_t)&v17);
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
    }

    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    BOOL v4 = *((void *)&v18 + 1) == 0;
    sub_10004015C((uint64_t)&v17, &qword_100299EA0);
    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    return 1;
  }
  return v4;
}

BOOL sub_10004C970(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  uint64_t v19 = a3;
  swift_errorRetain();
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    id v5 = v18;
    *(void *)&long long v15 = v18;
    sub_100066394(&qword_1002990E0, type metadata accessor for CKError);
    sub_100221AF0();
    if (*(void *)&v17[0] == a1)
    {
      *(void *)&long long v15 = v18;
      uint64_t v6 = sub_100221B10();
      uint64_t v7 = sub_100222270();
      if (*(void *)(v6 + 16) && (unint64_t v9 = sub_10000AB48(v7, v8), (v10 & 1) != 0))
      {
        sub_1000663DC(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v15);
      }
      else
      {
        long long v15 = 0u;
        long long v16 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v16 + 1))
      {
        sub_100005A98(&v15, v17);
        sub_1000663DC((uint64_t)v17, (uint64_t)&v15);
        sub_1000047D8(0, (unint64_t *)&qword_100299528);
        if (swift_dynamicCast())
        {
          id v13 = v14;
          BOOL v11 = sub_10004CBC8(a2, (uint64_t)v14);

          swift_errorRelease();
          sub_100004788((uint64_t)v17);
          swift_errorRelease();
          return v11;
        }

        swift_errorRelease();
        sub_100004788((uint64_t)v17);
      }
      else
      {
        swift_errorRelease();

        sub_10004015C((uint64_t)&v15, &qword_100299EA0);
      }
      goto LABEL_9;
    }
  }
  swift_errorRelease();
LABEL_9:
  swift_errorRelease();
  return 0;
}

BOOL sub_10004CBC8(id a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  swift_errorRetain();
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  sub_1000047D8(0, (unint64_t *)&qword_100299528);
  if (!swift_dynamicCast())
  {
    swift_errorRelease();
    goto LABEL_10;
  }
  id v3 = [v13 domain];
  uint64_t v4 = sub_100222270();
  uint64_t v6 = v5;

  if (v4 == sub_100222270() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v9 = sub_100222A30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_13:
    id v11 = [v13 code];
    swift_errorRelease();

    BOOL v10 = v11 == a1;
    swift_errorRelease();
    return v10;
  }
  swift_errorRelease();

LABEL_10:
  swift_errorRelease();
  return 0;
}

Swift::Bool __swiftcall RetryingCKCodeService.configuredFor(user:)(TPSpecificUser *user)
{
  sub_1000059A4((void *)(v1 + 16), *(void *)(v1 + 40));
  return sub_10006206C(user) & 1;
}

unint64_t sub_10004CD8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_100222360() != a1 || v9 != a2)
  {
    char v10 = sub_100222A30();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_1002222F0();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

id sub_10004CE7C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_1002829A0;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282A18;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_10004D7C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282A68;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282AE0;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_10004E10C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282F18;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = sub_100066378;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282F90;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_10004EA54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282E50;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282EC8;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_10004F39C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282D88;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282E00;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_10004FCE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282CC0;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282D38;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_10005062C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282BF8;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282C70;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_100050F74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282B30;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282BA8;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_1000518BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_1002828D8;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282950;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_100052204(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282810;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282888;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_100052B4C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282748;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_1002827C0;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_100053494(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282680;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_1002826F8;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_100053DDC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_1002825B8;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282630;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_100054724(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_1002824F0;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282568;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_10005506C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282428;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_1002824A0;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_1000559B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282360;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_1002823D8;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_1000562FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_100282298;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282310;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id sub_100056C44(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v114 = a8;
  uint64_t v124 = a4;
  uint64_t v125 = a6;
  unint64_t v120 = a5;
  uint64_t v111 = a1;
  uint64_t v18 = sub_1002220E0();
  uint64_t v117 = *(void *)(v18 - 8);
  uint64_t v118 = v18;
  __chkstk_darwin(v18, v19);
  BOOL v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100222120();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100221CB0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v27 = __chkstk_darwin(v113, v26);
  unint64_t v122 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v110 = v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v121 = (char *)&v99 - v31;
  uint64_t v115 = a11;
  uint64_t v32 = (void *)a11(v30);
  id result = [v32 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v34 = result;
  uint64_t v108 = a12;
  unint64_t v109 = v25;
  [result setIsCloudKitSupportOperation:1];

  id result = [v32 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v35 = result;
  id v106 = v21;
  unint64_t v103 = a10;
  NSString v36 = sub_100222260();
  [v35 setApplicationBundleIdentifierOverride:v36];

  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a2;
  *(void *)(v37 + 24) = a3;
  unsigned int v38 = a3;
  os_log_type_t v132 = sub_1000667A4;
  uint64_t v133 = v37;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_100058164;
  uint64_t v131 = &unk_1002821D0;
  id v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v40 = v32;
  swift_retain();
  swift_release();
  [v40 setRequestCompletedBlock:v39];
  _Block_release(v39);

  uint64_t v41 = a7;
  uint64_t v105 = v37;
  char v42 = 0;
  if (a7)
  {
    uint64_t v43 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v43 = v125 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v44 = v120;
    uint64_t v45 = a2;
    if (v43 && v120)
    {
      uint64_t v46 = HIBYTE(v120) & 0xF;
      if ((v120 & 0x2000000000000000) == 0) {
        uint64_t v46 = v124 & 0xFFFFFFFFFFFFLL;
      }
      char v42 = v46 != 0;
    }
  }
  else
  {
    uint64_t v44 = v120;
    uint64_t v45 = a2;
  }
  uint64_t v102 = a14;
  uint64_t v101 = a13;
  sub_1000059A4((void *)(v123 + 16), *(void *)(v123 + 40));
  id v119 = sub_100061F9C();
  uint64_t v48 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v45, (unint64_t)v38);
  uint64_t v107 = v22;
  id v104 = v40;
  uint64_t v100 = (uint64_t)v38;
  uint64_t v99 = v45;
  if (v49)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v129 = 0x80000001002413E0;
    v134._countAndFlagsBits = v45;
    v134._object = v38;
    sub_100222310(v134);
    uint64_t v57 = (uint64_t)aBlock;
    uint64_t v58 = v129;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100222370();
    unint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)0xD000000000000013;
    unint64_t v127 = 0x80000001002413E0;
    aBlock = (void **)v50;
    unint64_t v129 = v52;
    uint64_t v130 = v54;
    uint64_t v131 = v56;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v57 = (uint64_t)v126;
    uint64_t v58 = v127;
  }
  sub_100063A70();
  char v60 = v59;
  uint64_t v61 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v62 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v63 = v61;
  id v119 = sub_100062F10(0, (uint64_t)v119, v48, v125, v41, v124, v44, v57, v58, v60, v42, v63);
  uint64_t v64 = v112;
  unint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v112 + 16);
  uint64_t v66 = v113;
  v65(v121, v103, v113);
  v65(v122, v111, v66);
  uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  unint64_t v69 = (v110 + 7 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v70 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = (v67 + v70 + 8) & ~v67;
  unint64_t v72 = (v110 + 7 + v71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v41;
  unint64_t v103 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v114;
  *(void *)(v75 + 16) = v119;
  *(void *)(v75 + 24) = v76;
  uint64_t v77 = v75 + v68;
  unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
  v78(v77, v121, v66);
  unint64_t v79 = (void *)(v75 + v69);
  uint64_t v80 = v102;
  *unint64_t v79 = v101;
  v79[1] = v80;
  *(double *)(v75 + v70) = a9;
  v78(v75 + v71, v122, v66);
  os_log_type_t v81 = (uint64_t *)(v75 + v72);
  uint64_t v82 = v100;
  *os_log_type_t v81 = v99;
  v81[1] = v82;
  uint64_t v84 = v123;
  uint64_t v83 = v124;
  *(void *)(v75 + v103) = v123;
  unint64_t v85 = (uint64_t *)(v75 + v73);
  unint64_t v86 = v120;
  uint64_t *v85 = v83;
  v85[1] = v86;
  uint64_t v87 = (void *)(v75 + v74);
  uint64_t v88 = v111;
  *uint64_t v87 = v125;
  v87[1] = v88;
  uint64_t v89 = (void *)(v75 + v110);
  uint64_t v90 = v108;
  *uint64_t v89 = v115;
  v89[1] = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v91 = v119;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = v104;
  sub_100221D10();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v92;
  *(void *)(v93 + 24) = v84;
  os_log_type_t v132 = (void (*)(void *))sub_100066630;
  uint64_t v133 = v93;
  aBlock = _NSConcreteStackBlock;
  unint64_t v129 = 1107296256;
  uint64_t v130 = sub_10005A260;
  uint64_t v131 = &unk_100282248;
  uint64_t v94 = _Block_copy(&aBlock);
  id v95 = v92;
  swift_retain();
  Class v96 = v109;
  sub_100222100();
  uint64_t v126 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  id v97 = v106;
  uint64_t v98 = v118;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v94);

  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v107);
  return (id)swift_release();
}

id RetryingCKCodeService.invokeRetry<A, B>(deadline:minimumDelay:functionName:deviceSessionID:flowID:attemptNumber:startTime:operationCreator:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, unint64_t a10, uint64_t (*a11)(void), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v124 = a8;
  uint64_t v134 = a4;
  uint64_t v135 = a6;
  unint64_t v130 = a5;
  uint64_t v121 = a1;
  uint64_t v22 = sub_1002220E0();
  uint64_t v127 = *(void *)(v22 - 8);
  uint64_t v128 = v22;
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100222120();
  uint64_t v126 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100221CB0();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v31 = __chkstk_darwin(v123, v30);
  os_log_type_t v132 = (char *)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v120 = v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v131 = (char *)&v105 - v35;
  uint64_t v125 = a11;
  NSString v36 = (void *)a11(v34);
  id result = [v36 configuration];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  unsigned int v38 = result;
  uint64_t v118 = a12;
  id v119 = v29;
  [result setIsCloudKitSupportOperation:1];

  id result = [v36 configuration];
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  id v39 = result;
  uint64_t v116 = v25;
  unint64_t v113 = a10;
  NSString v40 = sub_100222260();
  [v39 setApplicationBundleIdentifierOverride:v40];

  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = a2;
  *(void *)(v41 + 24) = a3;
  char v42 = a3;
  id v142 = sub_100063A50;
  uint64_t v143 = v41;
  aBlock = _NSConcreteStackBlock;
  unint64_t v139 = 1107296256;
  uint64_t v140 = sub_100058164;
  unsigned int v141 = &unk_100281D48;
  uint64_t v43 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v44 = v36;
  swift_retain();
  swift_release();
  [v44 setRequestCompletedBlock:v43];
  _Block_release(v43);

  uint64_t v45 = a7;
  uint64_t v115 = v41;
  char v46 = 0;
  if (a7)
  {
    uint64_t v47 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v47 = v135 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v48 = v130;
    uint64_t v49 = a2;
    if (v47 && v130)
    {
      uint64_t v50 = HIBYTE(v130) & 0xF;
      if ((v130 & 0x2000000000000000) == 0) {
        uint64_t v50 = v134 & 0xFFFFFFFFFFFFLL;
      }
      char v46 = v50 != 0;
    }
  }
  else
  {
    uint64_t v48 = v130;
    uint64_t v49 = a2;
  }
  uint64_t v110 = a18;
  uint64_t v109 = a17;
  uint64_t v108 = a16;
  uint64_t v107 = a15;
  uint64_t v112 = a14;
  uint64_t v111 = a13;
  sub_1000059A4((void *)(v133 + 16), *(void *)(v133 + 40));
  id v129 = sub_100061F9C();
  uint64_t v52 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004CD8C(40, 0xE100000000000000, v49, (unint64_t)v42);
  uint64_t v117 = v26;
  id v114 = v44;
  uint64_t v106 = (uint64_t)v42;
  uint64_t v105 = v49;
  if (v53)
  {
    aBlock = (void **)0xD000000000000013;
    unint64_t v139 = 0x80000001002413E0;
    v144._countAndFlagsBits = v49;
    v144._object = v42;
    sub_100222310(v144);
    uint64_t v61 = (uint64_t)aBlock;
    uint64_t v62 = v139;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_100222370();
    unint64_t v56 = v55;
    uint64_t v58 = v57;
    char v60 = v59;
    swift_bridgeObjectRelease();
    uint64_t v136 = (void *)0xD000000000000013;
    unint64_t v137 = 0x80000001002413E0;
    aBlock = (void **)v54;
    unint64_t v139 = v56;
    uint64_t v140 = v58;
    unsigned int v141 = v60;
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
    uint64_t v61 = (uint64_t)v136;
    uint64_t v62 = v137;
  }
  sub_100063A70();
  char v64 = v63;
  unint64_t v65 = (void *)kSecurityRTCEventCategoryAccountDataAccessRecovery;
  id v66 = objc_allocWithZone((Class)AAFAnalyticsEventSecurity);
  id v67 = v65;
  id v129 = sub_100062F10(0, (uint64_t)v129, v52, v135, v45, v134, v48, v61, v62, v64, v46, v67);
  uint64_t v68 = v122;
  unint64_t v69 = *(void (**)(char *, unint64_t, uint64_t))(v122 + 16);
  uint64_t v70 = v123;
  v69(v131, v113, v123);
  v69(v132, v121, v70);
  uint64_t v71 = *(unsigned __int8 *)(v68 + 80);
  uint64_t v72 = (v71 + 64) & ~v71;
  unint64_t v73 = (v120 + 7 + v72) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = (v71 + v74 + 8) & ~v71;
  unint64_t v76 = (v120 + 7 + v75) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v121 = v45;
  unint64_t v113 = (v76 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v77 = (v113 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v78 = (v77 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v120 = (v78 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v79 = (char *)swift_allocObject();
  uint64_t v80 = v108;
  *((void *)v79 + 2) = v107;
  *((void *)v79 + 3) = v80;
  uint64_t v81 = v110;
  *((void *)v79 + 4) = v109;
  *((void *)v79 + 5) = v81;
  uint64_t v82 = v124;
  *((void *)v79 + 6) = v129;
  *((void *)v79 + 7) = v82;
  uint64_t v83 = &v79[v72];
  uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
  v84(v83, v131, v70);
  unint64_t v85 = &v79[v73];
  uint64_t v86 = v112;
  *(void *)unint64_t v85 = v111;
  *((void *)v85 + 1) = v86;
  *(double *)&v79[v74] = a9;
  v84(&v79[v75], v132, v70);
  uint64_t v87 = (uint64_t *)&v79[v76];
  uint64_t v88 = v106;
  *uint64_t v87 = v105;
  v87[1] = v88;
  uint64_t v90 = v133;
  uint64_t v89 = v134;
  *(void *)&v79[v113] = v133;
  id v91 = (uint64_t *)&v79[v77];
  unint64_t v92 = v130;
  *id v91 = v89;
  v91[1] = v92;
  uint64_t v93 = &v79[v78];
  uint64_t v94 = v121;
  *(void *)uint64_t v93 = v135;
  *((void *)v93 + 1) = v94;
  id v95 = &v79[v120];
  uint64_t v96 = v118;
  *(void *)id v95 = v125;
  *((void *)v95 + 1) = v96;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v97 = v129;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v98 = v114;
  sub_100221D10();
  uint64_t v99 = swift_allocObject();
  *(void *)(v99 + 16) = v98;
  *(void *)(v99 + 24) = v90;
  id v142 = (void (*)(void *))sub_100066630;
  uint64_t v143 = v99;
  aBlock = _NSConcreteStackBlock;
  unint64_t v139 = 1107296256;
  uint64_t v140 = sub_10005A260;
  unsigned int v141 = &unk_100281DC0;
  uint64_t v100 = _Block_copy(&aBlock);
  id v101 = v98;
  swift_retain();
  uint64_t v102 = v119;
  sub_100222100();
  uint64_t v136 = &_swiftEmptyArrayStorage;
  sub_100066394(&qword_100299848, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000046DC(&qword_100299850);
  sub_100065B7C(&qword_100299858, &qword_100299850);
  unint64_t v103 = v116;
  uint64_t v104 = v128;
  sub_1002226C0();
  sub_100222570();
  _Block_release(v100);

  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v103, v104);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v102, v117);
  return (id)swift_release();
}

void sub_100057F2C(void *a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    id v5 = [a1 requestUUID];
    uint64_t v6 = sub_100222270();
    unint64_t v8 = v7;

    if (qword_100298BD0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100222090();
    sub_100003CC8(v9, (uint64_t)qword_100299830);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char v10 = sub_100222070();
    os_log_type_t v11 = sub_1002224E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446466;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(a2, a3, &v13);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1001BEBDC(v6, v8, &v13);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ckoperation request finished: %{public}s %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_100058164(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_1000581D0(NSObject *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, char *a7, uint64_t a8, double a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t *a18, void (*a19)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t))
{
  uint64_t v111 = a7;
  uint64_t v116 = a6;
  uint64_t v117 = a4;
  unint64_t v113 = a5;
  id v115 = a2;
  uint64_t v114 = sub_100221CB0();
  uint64_t v118 = *(void *)(v114 - 8);
  uint64_t v24 = __chkstk_darwin(v114, v23);
  uint64_t v26 = (char *)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v109 = (char *)&v101 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v33 = (char *)&v101 - v32;
  uint64_t v35 = __chkstk_darwin(v31, v34);
  uint64_t v110 = (char *)&v101 - v36;
  __chkstk_darwin(v35, v37);
  id v39 = (char *)&v101 - v38;
  uint64_t v40 = sub_1000046DC(a18);
  uint64_t v42 = __chkstk_darwin(v40, v41);
  id v44 = (uint64_t *)((char *)&v101 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v42, v45);
  uint64_t v47 = (id *)((char *)&v101 - v46);
  uint64_t v112 = (uint64_t *)a1;
  sub_10000D830((uint64_t)a1, (uint64_t)&v101 - v46, a18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000046DC(&qword_10029EC10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100229380;
    uint64_t v120 = sub_100222270();
    uint64_t v121 = v76;
    sub_1002227F0();
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 72) = a3;
    uint64_t v120 = sub_100222270();
    uint64_t v121 = v77;
    sub_1002227F0();
    sub_100221CA0();
    sub_100221C10();
    uint64_t v79 = v78;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v39, v114);
    *(void *)(inited + 168) = &type metadata for Double;
    *(void *)(inited + 144) = v79;
    sub_1000095FC(inited);
    Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    id v81 = v115;
    [v115 addMetrics:isa];

    [self sendMetricWithEvent:v81 success:1 error:0];
    v113(v112);
    uint64_t v73 = (uint64_t)v47;
    unint64_t v74 = a18;
    goto LABEL_13;
  }
  uint64_t v112 = a18;
  uint64_t v105 = a8;
  uint64_t v106 = v26;
  uint64_t v108 = v33;
  id v48 = *v47;
  sub_1000046DC(&qword_10029EC10);
  uint64_t v49 = swift_initStackObject();
  *(_OWORD *)(v49 + 16) = xmmword_100229380;
  uint64_t v120 = sub_100222270();
  uint64_t v121 = v50;
  sub_1002227F0();
  *(void *)(v49 + 96) = &type metadata for Int;
  uint64_t v104 = a3;
  *(void *)(v49 + 72) = a3;
  uint64_t v120 = sub_100222270();
  uint64_t v121 = v51;
  sub_1002227F0();
  sub_100221CA0();
  sub_100221C10();
  uint64_t v53 = v52;
  uint64_t v54 = *(void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v55 = v114;
  uint64_t v107 = v118 + 8;
  v54(v39, v114);
  *(void *)(v49 + 168) = &type metadata for Double;
  *(void *)(v49 + 144) = v53;
  sub_1000095FC(v49);
  Class v56 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  id v57 = v115;
  [v115 addMetrics:v56];

  uint64_t v58 = self;
  char v59 = (void *)sub_100221B30();
  [(id)v58 sendMetricWithEvent:v57 success:0 error:v59];

  swift_errorRetain();
  LOBYTE(v58) = _s18TrustedPeersHelper21RetryingCKCodeServiceC14retryableError5errorSbs0H0_pSg_tFZ_0(v48);
  swift_errorRelease();
  if ((v58 & 1) == 0)
  {
LABEL_11:
    *id v44 = (uint64_t)v48;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v113(v44);
    swift_errorRelease();
    uint64_t v73 = (uint64_t)v44;
    unint64_t v74 = v112;
LABEL_13:
    sub_10004015C(v73, v74);
    return;
  }
  uint64_t v60 = v55;
  unint64_t v103 = v54;
  uint64_t v61 = v110;
  sub_100221CA0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v62 = (void *)sub_100221B30();
  [v62 cuttlefishRetryAfter];
  double v64 = v63;

  swift_errorRelease();
  swift_errorRelease();
  id v115 = v48;
  unint64_t v65 = (void *)sub_100221B30();
  CKRetryAfterSecondsForError();
  double v67 = v66;

  if (v64 < a9) {
    double v68 = a9;
  }
  else {
    double v68 = v64;
  }
  if (v68 > v67) {
    double v69 = v68;
  }
  else {
    double v69 = v67;
  }
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  v70(v39, v61, v55);
  uint64_t v71 = v108;
  sub_100221C00();
  if (sub_100221C90() == 1)
  {
    uint64_t v72 = v103;
    v103(v71, v55);
    v72(v61, v55);
    id v48 = v115;
    goto LABEL_11;
  }
  unint64_t v82 = a10;
  [self sleepForTimeInterval:v69];
  if (qword_100298BD0 != -1) {
    swift_once();
  }
  uint64_t v83 = sub_100222090();
  sub_100003CC8(v83, (uint64_t)qword_100299830);
  uint64_t v84 = v109;
  v70(v109, v61, v55);
  unint64_t v85 = v106;
  v70(v106, v111, v55);
  uint64_t v86 = (uint64_t)v115;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_100222070();
  os_log_type_t v88 = sub_1002224E0();
  int v89 = v88;
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v90 = swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    uint64_t v120 = v118;
    *(_DWORD *)uint64_t v90 = 136446978;
    uint64_t v112 = (uint64_t *)v87;
    swift_bridgeObjectRetain();
    uint64_t v119 = sub_1001BEBDC(v105, a10, &v120);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v90 + 12) = 2082;
    uint64_t v119 = v86;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    int v102 = v89;
    uint64_t v91 = sub_1002222C0();
    uint64_t v119 = sub_1001BEBDC(v91, v92, &v120);
    id v101 = &v120;
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v90 + 22) = 2082;
    sub_100066394(&qword_100299D78, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v93 = sub_100222A00();
    uint64_t v119 = sub_1001BEBDC(v93, v94, &v120);
    sub_100222690();
    swift_bridgeObjectRelease();
    id v95 = v84;
    uint64_t v96 = v103;
    v103(v95, v55);
    *(_WORD *)(v90 + 32) = 2082;
    id v97 = v106;
    uint64_t v98 = sub_100222A00();
    uint64_t v119 = sub_1001BEBDC(v98, v99, &v120);
    uint64_t v61 = v110;
    sub_100222690();
    swift_bridgeObjectRelease();
    unint64_t v82 = a10;
    v96(v97, v60);
    uint64_t v87 = v112;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v112, (os_log_type_t)v102, "%{public}s error: %{public}s (retrying, now=%{public}s, deadline=%{public}s", (uint8_t *)v90, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v100 = v84;
    uint64_t v96 = v103;
    v103(v100, v55);
    v96(v85, v55);
  }

  if (__OFADD__(v104, 1))
  {
    __break(1u);
  }
  else
  {
    a19((uint64_t)v111, v105, v82, a12, a13, a14, a15, v104 + 1, a9, v117, a16, a17, (void (*)(void))v113, v116);
    swift_errorRelease();
    v96(v108, v60);
    v96(v61, v60);
  }
}

void sub_100058C68(NSObject *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, char *a7, uint64_t a8, double a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t *a18, void (*a19)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t))
{
  uint64_t v111 = a7;
  uint64_t v116 = a6;
  uint64_t v117 = a4;
  unint64_t v113 = a5;
  id v115 = a2;
  uint64_t v114 = sub_100221CB0();
  uint64_t v118 = *(void *)(v114 - 8);
  uint64_t v24 = __chkstk_darwin(v114, v23);
  uint64_t v26 = (char *)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v109 = (char *)&v101 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v33 = (char *)&v101 - v32;
  uint64_t v35 = __chkstk_darwin(v31, v34);
  uint64_t v110 = (char *)&v101 - v36;
  __chkstk_darwin(v35, v37);
  id v39 = (char *)&v101 - v38;
  uint64_t v40 = sub_1000046DC(a18);
  uint64_t v42 = __chkstk_darwin(v40, v41);
  id v44 = (uint64_t *)((char *)&v101 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v42, v45);
  uint64_t v47 = (id *)((char *)&v101 - v46);
  uint64_t v112 = (uint64_t *)a1;
  sub_10000D830((uint64_t)a1, (uint64_t)&v101 - v46, a18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000046DC(&qword_10029EC10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100229380;
    uint64_t v120 = sub_100222270();
    uint64_t v121 = v76;
    sub_1002227F0();
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 72) = a3;
    uint64_t v120 = sub_100222270();
    uint64_t v121 = v77;
    sub_1002227F0();
    sub_100221CA0();
    sub_100221C10();
    uint64_t v79 = v78;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v39, v114);
    *(void *)(inited + 168) = &type metadata for Double;
    *(void *)(inited + 144) = v79;
    sub_1000095FC(inited);
    Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    id v81 = v115;
    [v115 addMetrics:isa];

    [self sendMetricWithEvent:v81 success:1 error:0];
    v113(v112);
    uint64_t v73 = (uint64_t)v47;
    unint64_t v74 = a18;
    goto LABEL_13;
  }
  uint64_t v112 = a18;
  uint64_t v105 = a8;
  uint64_t v106 = v26;
  uint64_t v108 = v33;
  id v48 = *v47;
  sub_1000046DC(&qword_10029EC10);
  uint64_t v49 = swift_initStackObject();
  *(_OWORD *)(v49 + 16) = xmmword_100229380;
  uint64_t v120 = sub_100222270();
  uint64_t v121 = v50;
  sub_1002227F0();
  *(void *)(v49 + 96) = &type metadata for Int;
  uint64_t v104 = a3;
  *(void *)(v49 + 72) = a3;
  uint64_t v120 = sub_100222270();
  uint64_t v121 = v51;
  sub_1002227F0();
  sub_100221CA0();
  sub_100221C10();
  uint64_t v53 = v52;
  uint64_t v54 = *(void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v55 = v114;
  uint64_t v107 = v118 + 8;
  v54(v39, v114);
  *(void *)(v49 + 168) = &type metadata for Double;
  *(void *)(v49 + 144) = v53;
  sub_1000095FC(v49);
  Class v56 = sub_1002221C0().super.isa;
  swift_bridgeObjectRelease();
  id v57 = v115;
  [v115 addMetrics:v56];

  uint64_t v58 = self;
  char v59 = (void *)sub_100221B30();
  [(id)v58 sendMetricWithEvent:v57 success:0 error:v59];

  swift_errorRetain();
  LOBYTE(v58) = _s18TrustedPeersHelper21RetryingCKCodeServiceC14retryableError5errorSbs0H0_pSg_tFZ_0(v48);
  swift_errorRelease();
  if ((v58 & 1) == 0)
  {
LABEL_11:
    *id v44 = (uint64_t)v48;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v113(v44);
    swift_errorRelease();
    uint64_t v73 = (uint64_t)v44;
    unint64_t v74 = v112;
LABEL_13:
    sub_10004015C(v73, v74);
    return;
  }
  uint64_t v60 = v55;
  unint64_t v103 = v54;
  uint64_t v61 = v110;
  sub_100221CA0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v62 = (void *)sub_100221B30();
  [v62 cuttlefishRetryAfter];
  double v64 = v63;

  swift_errorRelease();
  swift_errorRelease();
  id v115 = v48;
  unint64_t v65 = (void *)sub_100221B30();
  CKRetryAfterSecondsForError();
  double v67 = v66;

  if (v64 < a9) {
    double v68 = a9;
  }
  else {
    double v68 = v64;
  }
  if (v68 > v67) {
    double v69 = v68;
  }
  else {
    double v69 = v67;
  }
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  v70(v39, v61, v55);
  uint64_t v71 = v108;
  sub_100221C00();
  if (sub_100221C90() == 1)
  {
    uint64_t v72 = v103;
    v103(v71, v55);
    v72(v61, v55);
    id v48 = v115;
    goto LABEL_11;
  }
  unint64_t v82 = a10;
  [self sleepForTimeInterval:v69];
  if (qword_100298BD0 != -1) {
    swift_once();
  }
  uint64_t v83 = sub_100222090();
  sub_100003CC8(v83, (uint64_t)qword_100299830);
  uint64_t v84 = v109;
  v70(v109, v61, v55);
  unint64_t v85 = v106;
  v70(v106, v111, v55);
  uint64_t v86 = (uint64_t)v115;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_100222070();
  os_log_type_t v88 = sub_1002224E0();
  int v89 = v88;
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v90 = swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    uint64_t v120 = v118;
    *(_DWORD *)uint64_t v90 = 136446978;
    uint64_t v112 = (uint64_t *)v87;
    swift_bridgeObjectRetain();
    uint64_t v119 = sub_1001BEBDC(v105, a10, &v120);
    sub_100222690();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v90 + 12) = 2082;
    uint64_t v119 = v86;
    swift_errorRetain();
    sub_1000046DC(&qword_100299D70);
    int v102 = v89;
    uint64_t v91 = sub_1002222C0();
    uint64_t v119 = sub_1001BEBDC(v91, v92, &v120);
    id v101 = &v120;
    sub_100222690();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v90 + 22) = 2082;
    sub_100066394(&qword_100299D78, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v93 = sub_100222A00();
    uint64_t v119 = sub_1001BEBDC(v93, v94, &v120);
    sub_100222690();
    swift_bridgeObjectRelease();
    id v95 = v84;
    uint64_t v96 = v103;
    v103(v95, v55);
    *(_WORD *)(v90 + 32) = 2082;
    id v97 = v106;
    uint64_t v98 = sub_100222A00();
    uint64_t v119 = sub_1001BEBDC(v98, v99, &v120);
    uint64_t v61 = v110;
    sub_100222690();
    swift_bridgeObjectRelease();
    unint64_t v82 = a10;
    v96(v97, v60);
    uint64_t v87 = v112;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v112, (os_log_type_t)v102, "%{public}s error: %{public}s (retrying, now=%{public}s, deadline=%{public}s", (uint8_t *)v90, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v100 = v84;
    uint64_t v96 = v103;
    v103(v100, v55);
    v96(v85, v55);
  }

  if (__OFADD__(v104, 1))
  {
    __break(1u);
  }
  else
  {
    a19((uint64_t)v111, v105, v82, a12, a13, a14, a15, v104 + 1, a9, v117, a16, a17, (void (*)(void))v113, v116);
    swift_errorRelease();
    v96(v108, v60);
    v96(v61, v60);
  }
}

void sub_100059700(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, char *a7, uint64_t a8, double a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v114 = a8;
  uint64_t v121 = a6;
  uint64_t v122 = a5;
  uint64_t v123 = a4;
  id v120 = a2;
  uint64_t v25 = sub_100221CB0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v124 = v25;
  uint64_t v125 = v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  id v115 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v116 = (char *)&v108 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v117 = (char *)&v108 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v119 = (char *)&v108 - v38;
  __chkstk_darwin(v37, v39);
  uint64_t v41 = (char *)&v108 - v40;
  uint64_t v113 = sub_100004870(&qword_100299D70);
  uint64_t v42 = sub_100222B30();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v47 = (uint64_t *)((char *)&v108 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v45, v48);
  uint64_t v50 = (void **)((char *)&v108 - v49);
  uint64_t v51 = *(void (**)(char *, void *, uint64_t))(v43 + 16);
  uint64_t v118 = a1;
  v51((char *)&v108 - v49, a1, v42);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    os_log_t v111 = (os_log_t)v43;
    uint64_t v112 = a7;
    uint64_t v108 = a19;
    uint64_t v118 = *v50;
    sub_1000046DC(&qword_10029EC10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100229380;
    uint64_t v127 = sub_100222270();
    uint64_t v128 = v53;
    sub_1002227F0();
    *(void *)(inited + 96) = &type metadata for Int;
    uint64_t v109 = a3;
    *(void *)(inited + 72) = a3;
    uint64_t v127 = sub_100222270();
    uint64_t v128 = v54;
    sub_1002227F0();
    sub_100221CA0();
    sub_100221C10();
    uint64_t v56 = v55;
    uint64_t v57 = v124;
    uint64_t v110 = *(void (**)(char *, uint64_t))(v125 + 8);
    v110(v41, v124);
    *(void *)(inited + 168) = &type metadata for Double;
    *(void *)(inited + 144) = v56;
    sub_1000095FC(inited);
    Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    id v59 = v120;
    [v120 addMetrics:isa];

    uint64_t v60 = self;
    uint64_t v61 = v118;
    uint64_t v62 = (void *)sub_100221B30();
    [v60 sendMetricWithEvent:v59 success:0 error:v62];

    uint64_t v63 = (uint64_t)v61;
    swift_errorRetain();
    LOBYTE(v61) = _s18TrustedPeersHelper21RetryingCKCodeServiceC14retryableError5errorSbs0H0_pSg_tFZ_0(v61);
    swift_errorRelease();
    if ((v61 & 1) == 0)
    {
LABEL_11:
      uint64_t *v47 = v63;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      v122(v47);
      swift_errorRelease();
      ((void (*)(uint64_t *, uint64_t))v111[1].isa)(v47, v42);
      return;
    }
    uint64_t v64 = v57;
    unint64_t v65 = v119;
    sub_100221CA0();
    swift_errorRetain();
    swift_errorRetain();
    double v66 = (void *)sub_100221B30();
    [v66 cuttlefishRetryAfter];
    double v68 = v67;

    swift_errorRelease();
    swift_errorRelease();
    double v69 = (void *)sub_100221B30();
    CKRetryAfterSecondsForError();
    double v71 = v70;

    if (v68 < a9) {
      double v72 = a9;
    }
    else {
      double v72 = v68;
    }
    if (v72 > v71) {
      double v73 = v72;
    }
    else {
      double v73 = v71;
    }
    unint64_t v74 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
    v125 += 16;
    v74(v41, v65, v64);
    uint64_t v75 = v117;
    sub_100221C00();
    if (sub_100221C90() == 1)
    {
      uint64_t v76 = v110;
      v110(v75, v64);
      v76(v65, v64);
      goto LABEL_11;
    }
    [self sleepForTimeInterval:v73];
    if (qword_100298BD0 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_100222090();
    sub_100003CC8(v84, (uint64_t)qword_100299830);
    uint64_t v85 = v124;
    v74(v116, v119, v124);
    uint64_t v86 = v115;
    v74(v115, v112, v85);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_100222070();
    os_log_type_t v88 = sub_1002224E0();
    int v89 = v88;
    id v90 = a10;
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v91 = swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      uint64_t v127 = v125;
      *(_DWORD *)uint64_t v91 = 136446978;
      os_log_t v111 = v87;
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_1001BEBDC(v114, (unint64_t)a10, &v127);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v91 + 12) = 2082;
      uint64_t v126 = v63;
      swift_errorRetain();
      uint64_t v92 = sub_1002222C0();
      uint64_t v126 = sub_1001BEBDC(v92, v93, &v127);
      sub_100222690();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v91 + 22) = 2082;
      sub_100066394(&qword_100299D78, (void (*)(uint64_t))&type metadata accessor for Date);
      LODWORD(v113) = v89;
      id v120 = a10;
      unint64_t v94 = v116;
      uint64_t v95 = sub_100222A00();
      uint64_t v126 = sub_1001BEBDC(v95, v96, &v127);
      sub_100222690();
      swift_bridgeObjectRelease();
      id v97 = v94;
      uint64_t v98 = v110;
      v110(v97, v85);
      *(_WORD *)(v91 + 32) = 2082;
      unint64_t v99 = v115;
      uint64_t v100 = v119;
      uint64_t v101 = sub_100222A00();
      uint64_t v126 = sub_1001BEBDC(v101, v102, &v127);
      uint64_t v75 = v117;
      sub_100222690();
      swift_bridgeObjectRelease();
      unint64_t v103 = v99;
      uint64_t v104 = v100;
      id v90 = v120;
      v98(v103, v85);
      os_log_t v105 = v111;
      _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v113, "%{public}s error: %{public}s (retrying, now=%{public}s, deadline=%{public}s", (uint8_t *)v91, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v106 = v109;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v98 = v110;
      v110(v116, v85);
      v98(v86, v85);

      uint64_t v106 = v109;
      uint64_t v104 = v119;
    }
    if (__OFADD__(v106, 1))
    {
      __break(1u);
    }
    else
    {
      RetryingCKCodeService.invokeRetry<A, B>(deadline:minimumDelay:functionName:deviceSessionID:flowID:attemptNumber:startTime:operationCreator:completion:)(v112, v114, v90, a12, a13, a14, a15, v106 + 1, a9, v123, a16, a17, v122, v121, a18, v108, a20, a21);
      swift_errorRelease();
      uint64_t v107 = v124;
      v98(v75, v124);
      v98(v104, v107);
    }
  }
  else
  {
    sub_1000046DC(&qword_10029EC10);
    uint64_t v77 = swift_initStackObject();
    *(_OWORD *)(v77 + 16) = xmmword_100229380;
    uint64_t v127 = sub_100222270();
    uint64_t v128 = v78;
    sub_1002227F0();
    *(void *)(v77 + 96) = &type metadata for Int;
    *(void *)(v77 + 72) = a3;
    uint64_t v127 = sub_100222270();
    uint64_t v128 = v79;
    sub_1002227F0();
    sub_100221CA0();
    sub_100221C10();
    uint64_t v81 = v80;
    (*(void (**)(char *, uint64_t))(v125 + 8))(v41, v124);
    *(void *)(v77 + 168) = &type metadata for Double;
    *(void *)(v77 + 144) = v81;
    sub_1000095FC(v77);
    Class v82 = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    id v83 = v120;
    [v120 addMetrics:v82];

    [self sendMetricWithEvent:v83 success:1 error:0];
    v122((uint64_t *)v118);
    (*(void (**)(void **, uint64_t))(v43 + 8))(v50, v42);
  }
}

uint64_t sub_10005A208(void *a1, uint64_t a2)
{
  return sub_1002224D0();
}

uint64_t sub_10005A260(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t RetryingCKCodeService.retry<A, B>(functionName:deviceSessionID:flowID:operationCreator:completion:)(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t (*a7)(void), uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12)
{
  unint64_t v36 = a6;
  uint64_t v34 = a8;
  uint64_t v35 = a5;
  uint64_t v32 = a7;
  unint64_t v33 = a4;
  long long v30 = a10;
  long long v31 = a9;
  uint64_t v15 = sub_100221CB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v18, v21);
  uint64_t v24 = (char *)&v30 - v23;
  __chkstk_darwin(v22, v25);
  uint64_t v27 = (char *)&v30 - v26;
  sub_100221CA0();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v27, v15);
  sub_100221C00();
  sub_100221CA0();
  RetryingCKCodeService.invokeRetry<A, B>(deadline:minimumDelay:functionName:deviceSessionID:flowID:attemptNumber:startTime:operationCreator:completion:)((uint64_t)v24, a1, a2, a3, v33, v35, v36, 1, 5.0, (unint64_t)v20, v32, v34, v31, *((uint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), a11, a12);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v16 + 8);
  v28(v20, v15);
  v28(v24, v15);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v15);
}

uint64_t RetryingCKCodeService.reset(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  unint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t v14 = type metadata accessor for ResetRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v51 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 52);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for ResetRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for ResetRequest);
  uint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_10004E10C(v46, 0xD000000000000014, (void *)0x8000000100241400, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100063F38, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A9D8(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E90);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for ResetRequest);
  uint64_t v10 = type metadata accessor for ResetRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.ResetOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E90);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E90);
  return v11;
}

uint64_t RetryingCKCodeService.establish(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v58 = a2;
  uint64_t v61 = sub_100221CB0();
  uint64_t v4 = *(void *)(v61 - 8);
  uint64_t v6 = __chkstk_darwin(v61, v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v60 = (char *)&v51 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v59 = (char *)&v51 - v13;
  uint64_t v14 = type metadata accessor for EstablishRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v53 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v54 = v17;
  uint64_t v55 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v51 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v51 - v33);
  uint64_t v35 = *(int *)(v15 + 28);
  uint64_t v56 = a1;
  uint64_t v36 = *(void *)(a1 + v35);
  uint64_t v37 = v36
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v37, (uint64_t)v25, &qword_10029F000);
  unint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v38(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v39 = v34[3];
  uint64_t v52 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  uint64_t v40 = v36
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v40, (uint64_t)v22, &qword_10029F000);
  if (v38(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v41 = *v31;
  unint64_t v42 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v43 = v55;
  sub_10006570C(v56, v55, type metadata accessor for EstablishRequest);
  unint64_t v44 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v45 = swift_allocObject();
  sub_100065978(v43, v45 + v44, type metadata accessor for EstablishRequest);
  uint64_t v46 = v59;
  sub_100221CA0();
  uint64_t v47 = v61;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v46, v61);
  uint64_t v48 = (uint64_t)v60;
  sub_100221C00();
  sub_100221CA0();
  sub_10004EA54(v48, 0xD000000000000018, (void *)0x8000000100241420, v52, v39, v41, v42, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100063F7C, v45, v58, v57);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v8, v47);
  v49((char *)v48, v47);
  v49(v46, v47);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005B09C(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E80);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for EstablishRequest);
  uint64_t v10 = type metadata accessor for EstablishRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.EstablishOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E80);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E80);
  return v11;
}

uint64_t RetryingCKCodeService.joinWithVoucher(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v58 = a2;
  uint64_t v61 = sub_100221CB0();
  uint64_t v4 = *(void *)(v61 - 8);
  uint64_t v6 = __chkstk_darwin(v61, v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v60 = (char *)&v51 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v59 = (char *)&v51 - v13;
  uint64_t v14 = type metadata accessor for JoinWithVoucherRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v53 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v54 = v17;
  uint64_t v55 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v51 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v51 - v33);
  uint64_t v35 = *(int *)(v15 + 28);
  uint64_t v56 = a1;
  uint64_t v36 = *(void *)(a1 + v35);
  uint64_t v37 = v36
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v37, (uint64_t)v25, &qword_10029F000);
  unint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v38(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v39 = v34[3];
  uint64_t v52 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  uint64_t v40 = v36
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v40, (uint64_t)v22, &qword_10029F000);
  if (v38(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v41 = *v31;
  unint64_t v42 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v43 = v55;
  sub_10006570C(v56, v55, type metadata accessor for JoinWithVoucherRequest);
  unint64_t v44 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v45 = swift_allocObject();
  sub_100065978(v43, v45 + v44, type metadata accessor for JoinWithVoucherRequest);
  uint64_t v46 = v59;
  sub_100221CA0();
  uint64_t v47 = v61;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v46, v61);
  uint64_t v48 = (uint64_t)v60;
  sub_100221C00();
  sub_100221CA0();
  sub_10004F39C(v48, 0xD00000000000001ELL, (void *)0x8000000100241440, v52, v39, v41, v42, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100063FC0, v45, v58, v57);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v8, v47);
  v49((char *)v48, v47);
  v49(v46, v47);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005B768(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E70);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for JoinWithVoucherRequest);
  uint64_t v10 = type metadata accessor for JoinWithVoucherRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.JoinWithVoucherOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E70);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E70);
  return v11;
}

uint64_t RetryingCKCodeService.updateTrust(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  uint64_t v15 = updated - 8;
  uint64_t v51 = *(void *)(updated - 8);
  __chkstk_darwin(updated, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 56);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for UpdateTrustRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for UpdateTrustRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_10004FCE4(v46, 0xD00000000000001ALL, (void *)0x8000000100241460, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_1000643BC, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005BDFC(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E60);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for UpdateTrustRequest);
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v9, 0, 1, updated);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.UpdateTrustOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E60);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E60);
  return v11;
}

uint64_t RetryingCKCodeService.setRecoveryKey(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t v14 = type metadata accessor for SetRecoveryKeyRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v51 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 56);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for SetRecoveryKeyRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for SetRecoveryKeyRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_10005062C(v46, 0xD00000000000001DLL, (void *)0x8000000100241480, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100064670, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005C48C(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E50);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for SetRecoveryKeyRequest);
  uint64_t v10 = type metadata accessor for SetRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.SetRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E50);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E50);
  return v11;
}

uint64_t RetryingCKCodeService.fetchChanges(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t ChangesRequest = type metadata accessor for FetchChangesRequest(0);
  uint64_t v15 = ChangesRequest - 8;
  uint64_t v51 = *(void *)(ChangesRequest - 8);
  __chkstk_darwin(ChangesRequest, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for FetchChangesRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for FetchChangesRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_100050F74(v46, 0xD00000000000001BLL, (void *)0x80000001002414A0, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_1000646B4, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005CB20(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E40);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchChangesRequest);
  uint64_t ChangesRequest = type metadata accessor for FetchChangesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ChangesRequest - 8) + 56))(v9, 0, 1, ChangesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchChangesOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E40);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E40);
  return v11;
}

uint64_t RetryingCKCodeService.fetchViableBottles(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t ViableBottlesRequest = type metadata accessor for FetchViableBottlesRequest(0);
  uint64_t v15 = ViableBottlesRequest - 8;
  uint64_t v51 = *(void *)(ViableBottlesRequest - 8);
  __chkstk_darwin(ViableBottlesRequest, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for FetchViableBottlesRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for FetchViableBottlesRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_10004D7C4(v46, 0xD000000000000021, (void *)0x80000001002414C0, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_1000646F8, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D1B0(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E30);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchViableBottlesRequest);
  uint64_t ViableBottlesRequest = type metadata accessor for FetchViableBottlesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(ViableBottlesRequest - 8) + 56))(v9, 0, 1, ViableBottlesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchViableBottlesOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E30);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E30);
  return v11;
}

uint64_t RetryingCKCodeService.fetchPolicyDocuments(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t PolicyDocumentsRequest = type metadata accessor for FetchPolicyDocumentsRequest(0);
  uint64_t v15 = PolicyDocumentsRequest - 8;
  uint64_t v51 = *(void *)(PolicyDocumentsRequest - 8);
  __chkstk_darwin(PolicyDocumentsRequest, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for FetchPolicyDocumentsRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for FetchPolicyDocumentsRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_10004CE7C(v46, 0xD000000000000023, (void *)0x80000001002414F0, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_10006473C, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005D83C(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E20);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchPolicyDocumentsRequest);
  uint64_t PolicyDocumentsRequest = type metadata accessor for FetchPolicyDocumentsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(PolicyDocumentsRequest - 8) + 56))(v9, 0, 1, PolicyDocumentsRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchPolicyDocumentsOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E20);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E20);
  return v11;
}

uint64_t RetryingCKCodeService.getRepairAction(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t RepairActionRequest = type metadata accessor for GetRepairActionRequest(0);
  uint64_t v15 = RepairActionRequest - 8;
  uint64_t v51 = *(void *)(RepairActionRequest - 8);
  __chkstk_darwin(RepairActionRequest, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 44);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for GetRepairActionRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for GetRepairActionRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_1000518BC(v46, 0xD00000000000001ELL, (void *)0x8000000100241520, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_10006495C, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005DEC8(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299E10);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for GetRepairActionRequest);
  uint64_t RepairActionRequest = type metadata accessor for GetRepairActionRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(RepairActionRequest - 8) + 56))(v9, 0, 1, RepairActionRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.GetRepairActionOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299E10);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299E10);
  return v11;
}

uint64_t RetryingCKCodeService.getSupportAppInfo(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t SupportAppInfoRequest = type metadata accessor for GetSupportAppInfoRequest(0);
  uint64_t v15 = SupportAppInfoRequest - 8;
  uint64_t v51 = *(void *)(SupportAppInfoRequest - 8);
  __chkstk_darwin(SupportAppInfoRequest, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for GetSupportAppInfoRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for GetSupportAppInfoRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_100052204(v46, 0xD000000000000020, (void *)0x8000000100241540, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_1000649A0, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005E55C(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299E00);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for GetSupportAppInfoRequest);
  uint64_t SupportAppInfoRequest = type metadata accessor for GetSupportAppInfoRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(SupportAppInfoRequest - 8) + 56))(v9, 0, 1, SupportAppInfoRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.GetSupportAppInfoOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299E00);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299E00);
  return v11;
}

uint64_t RetryingCKCodeService.resetAccountCdpcontents(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t v14 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v51 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 52);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for ResetAccountCDPContentsRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for ResetAccountCDPContentsRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_100052B4C(v46, 0xD000000000000026, (void *)0x8000000100241570, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100064BE0, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005EBE8(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299DF0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for ResetAccountCDPContentsRequest);
  uint64_t v10 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.ResetAccountCdpcontentsOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299DF0);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299DF0);
  return v11;
}

uint64_t RetryingCKCodeService.addCustodianRecoveryKey(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v58 = a2;
  uint64_t v61 = sub_100221CB0();
  uint64_t v4 = *(void *)(v61 - 8);
  uint64_t v6 = __chkstk_darwin(v61, v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v60 = (char *)&v51 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v59 = (char *)&v51 - v13;
  uint64_t v14 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v53 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v54 = v17;
  uint64_t v55 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v51 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v51 - v33);
  uint64_t v35 = *(int *)(v15 + 28);
  uint64_t v56 = a1;
  uint64_t v36 = *(void *)(a1 + v35);
  uint64_t v37 = v36
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v37, (uint64_t)v25, &qword_10029F000);
  unint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v38(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v39 = v34[3];
  uint64_t v52 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  uint64_t v40 = v36
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v40, (uint64_t)v22, &qword_10029F000);
  if (v38(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v41 = *v31;
  unint64_t v42 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v43 = v55;
  sub_10006570C(v56, v55, type metadata accessor for AddCustodianRecoveryKeyRequest);
  unint64_t v44 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v45 = swift_allocObject();
  sub_100065978(v43, v45 + v44, type metadata accessor for AddCustodianRecoveryKeyRequest);
  uint64_t v46 = v59;
  sub_100221CA0();
  uint64_t v47 = v61;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v46, v61);
  uint64_t v48 = (uint64_t)v60;
  sub_100221C00();
  sub_100221CA0();
  sub_100053494(v48, 0xD000000000000026, (void *)0x80000001002415A0, v52, v39, v41, v42, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100064D1C, v45, v58, v57);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v8, v47);
  v49((char *)v48, v47);
  v49(v46, v47);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005F2B4(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DE0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for AddCustodianRecoveryKeyRequest);
  uint64_t v10 = type metadata accessor for AddCustodianRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.AddCustodianRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DE0);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DE0);
  return v11;
}

uint64_t RetryingCKCodeService.fetchRecoverableTlkshares(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t RecoverableTLKSharesRequest = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  uint64_t v15 = RecoverableTLKSharesRequest - 8;
  uint64_t v51 = *(void *)(RecoverableTLKSharesRequest - 8);
  __chkstk_darwin(RecoverableTLKSharesRequest, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for FetchRecoverableTLKSharesRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for FetchRecoverableTLKSharesRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_100053DDC(v46, 0xD000000000000028, (void *)0x80000001002415D0, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100064F54, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005F940(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DD0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for FetchRecoverableTLKSharesRequest);
  uint64_t RecoverableTLKSharesRequest = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(RecoverableTLKSharesRequest - 8) + 56))(v9, 0, 1, RecoverableTLKSharesRequest);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchRecoverableTlksharesOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DD0);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DD0);
  return v11;
}

uint64_t RetryingCKCodeService.removeRecoveryKey(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t v14 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v51 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 44);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for RemoveRecoveryKeyRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for RemoveRecoveryKeyRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_100054724(v46, 0xD000000000000020, (void *)0x8000000100241600, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_10006525C, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005FFCC(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DC0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for RemoveRecoveryKeyRequest);
  uint64_t v10 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.RemoveRecoveryKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DC0);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DC0);
  return v11;
}

uint64_t RetryingCKCodeService.performAtoprvactions(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t v14 = type metadata accessor for PerformATOPRVActionsRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v51 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 28);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for PerformATOPRVActionsRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for PerformATOPRVActionsRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_10005506C(v46, 0xD000000000000023, (void *)0x8000000100241630, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_100065464, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100060658(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299DB0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for PerformATOPRVActionsRequest);
  uint64_t v10 = type metadata accessor for PerformATOPRVActionsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.PerformAtoprvactionsOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299DB0);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299DB0);
  return v11;
}

uint64_t RetryingCKCodeService.fetchCurrentItem(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  uint64_t v15 = Request - 8;
  uint64_t v51 = *(void *)(Request - 8);
  __chkstk_darwin(Request, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for CurrentItemFetchRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for CurrentItemFetchRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_1000559B4(v46, 0xD00000000000001FLL, (void *)0x8000000100241660, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_1000654A8, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100060CE4(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_100299DA0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for CurrentItemFetchRequest);
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(Request - 8) + 56))(v9, 0, 1, Request);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchCurrentItemOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_100299DA0);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, (uint64_t *)&unk_100299DA0);
  return v11;
}

uint64_t RetryingCKCodeService.fetchPcsidentityByPublicKey(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  uint64_t v15 = Request - 8;
  uint64_t v51 = *(void *)(Request - 8);
  __chkstk_darwin(Request, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for DirectPCSIdentityFetchRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for DirectPCSIdentityFetchRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_1000562FC(v46, 0xD00000000000002ALL, (void *)0x8000000100241680, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_1000656E0, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100061370(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299D90);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for DirectPCSIdentityFetchRequest);
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(Request - 8) + 56))(v9, 0, 1, Request);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.FetchPcsidentityByPublicKeyOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299D90);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299D90);
  return v11;
}

uint64_t RetryingCKCodeService.performCkserverUnreadableDataRemoval(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = sub_100221CB0();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v58 = (char *)&v49 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v57 = (char *)&v49 - v13;
  uint64_t v14 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  uint64_t v15 = v14 - 8;
  uint64_t v51 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v52 = v17;
  uint64_t v53 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (uint64_t *)((char *)&v49 - v33);
  uint64_t v35 = *(int *)(v15 + 32);
  uint64_t v54 = a1;
  uint64_t v36 = a1 + v35;
  sub_10000D830(a1 + v35, (uint64_t)v25, &qword_10029F000);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v37(v25, 1, v26) == 1)
  {
    *uint64_t v34 = 0;
    v34[1] = 0xE000000000000000;
    void v34[2] = 0;
    v34[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v25, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v25, (uint64_t)v34, type metadata accessor for Metrics);
  }
  unint64_t v38 = v34[3];
  uint64_t v50 = v34[2];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v34);
  sub_10000D830(v36, (uint64_t)v22, &qword_10029F000);
  if (v37(v22, 1, v26) == 1)
  {
    *long long v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = 0;
    v31[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v22, &qword_10029F000);
  }
  else
  {
    sub_100065978((uint64_t)v22, (uint64_t)v31, type metadata accessor for Metrics);
  }
  uint64_t v39 = *v31;
  unint64_t v40 = v31[1];
  swift_bridgeObjectRetain();
  sub_100063EC4((uint64_t)v31);
  uint64_t v41 = v53;
  sub_10006570C(v54, v53, type metadata accessor for RemoveUnreadableCKServerDataRequest);
  unint64_t v42 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v43 = swift_allocObject();
  sub_100065978(v41, v43 + v42, type metadata accessor for RemoveUnreadableCKServerDataRequest);
  unint64_t v44 = v57;
  sub_100221CA0();
  uint64_t v45 = v59;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v44, v59);
  uint64_t v46 = (uint64_t)v58;
  sub_100221C00();
  sub_100221CA0();
  sub_100056C44(v46, 0xD000000000000033, (void *)0x80000001002416B0, v50, v38, v39, v40, 1, 5.0, (unint64_t)v8, (uint64_t (*)(void))sub_1000659E0, v43, v56, v55);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
  v47(v8, v45);
  v47((char *)v46, v45);
  v47(v44, v45);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000619FC(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299D80);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10006570C(a1, (uint64_t)&v13 - v8, type metadata accessor for RemoveUnreadableCKServerDataRequest);
  uint64_t v10 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  objc_allocWithZone((Class)type metadata accessor for CuttlefishAPI.PerformCkserverUnreadableDataRemovalOperation(0));
  sub_10000D830((uint64_t)v9, (uint64_t)v6, &qword_100299D80);
  uint64_t v11 = sub_100221D30();
  sub_10004015C((uint64_t)v9, &qword_100299D80);
  return v11;
}

uint64_t RetryingCKCodeService.deinit()
{
  sub_100004788(v0 + 16);

  return v0;
}

uint64_t RetryingCKCodeService.__deallocating_deinit()
{
  sub_100004788(v0 + 16);

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t sub_100061BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.reset(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.establish(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.joinWithVoucher(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.updateTrust(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.setRecoveryKey(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.addCustodianRecoveryKey(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.fetchChanges(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.fetchViableBottles(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.fetchRecoverableTlkshares(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.fetchPolicyDocuments(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.getRepairAction(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.getSupportAppInfo(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.resetAccountCdpcontents(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.removeRecoveryKey(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.performAtoprvactions(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.fetchPcsidentityByPublicKey(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.fetchCurrentItem(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RetryingCKCodeService.performCkserverUnreadableDataRemoval(_:completion:)(a1, a2, a3);
}

uint64_t sub_100061E3C(void *a1)
{
  sub_1000059A4((void *)(*(void *)v1 + 16), *(void *)(*(void *)v1 + 40));
  return sub_10006206C(a1) & 1;
}

uint64_t sub_100061E7C(void *a1)
{
  *(void *)(v1 + 24) = a1;
  id v2 = a1;
  id v3 = [v2 options];
  NSString v4 = sub_100222260();
  [v3 setApplicationBundleIdentifierOverride:v4];

  uint64_t v5 = *(void **)(v1 + 24);
  id v6 = [v5 privateCloudDatabase];
  id v7 = v5;
  NSString v8 = sub_100222260();
  id v9 = objc_msgSend(v7, "codeServiceWithName:databaseScope:", v8, objc_msgSend(v6, "databaseScope"));

  *(void *)(v1 + 16) = v9;
  return v1;
}

id sub_100061F9C()
{
  id v1 = [*(id *)(v0 + 24) options];
  id v2 = [v1 accountOverrideInfo];

  if (v2)
  {
    id v3 = [v2 altDSID];

    if (v3)
    {
      id v2 = (id)sub_100222270();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_100062048()
{
  return sub_1002224D0();
}

uint64_t sub_10006206C(void *a1)
{
  id v3 = [*(id *)(v1 + 24) options];
  id v4 = [v3 accountOverrideInfo];

  if (v4)
  {
    id v5 = [v4 altDSID];

    if (v5)
    {
      uint64_t v6 = sub_100222270();
      unint64_t v8 = v7;

      id v9 = [a1 altDSID];
      uint64_t v10 = sub_100222270();
      uint64_t v12 = v11;

      if (v10 == v6 && v12 == v8)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v14 = sub_100222A30();
      swift_bridgeObjectRelease();
      if (v14)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      if (qword_100298BD0 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_100222090();
      sub_100003CC8(v23, (uint64_t)qword_100299830);
      id v24 = a1;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_100222070();
      os_log_type_t v25 = sub_1002224E0();
      if (!os_log_type_enabled(v18, v25))
      {

        swift_bridgeObjectRelease_n();
        return 0;
      }
      uint64_t v26 = swift_slowAlloc();
      id v32 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1001BEBDC(v6, v8, (uint64_t *)&v32);
      sub_100222690();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2082;
      id v27 = objc_msgSend(v24, "altDSID", v31, v32);
      uint64_t v28 = sub_100222270();
      unint64_t v30 = v29;

      sub_1001BEBDC(v28, v30, (uint64_t *)&v32);
      sub_100222690();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v25, "Mismatch between configured CKContainer (altDSID %{public}s and requested user %{public}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      goto LABEL_21;
    }
  }
  if ([a1 isPrimaryAccount]) {
    return 1;
  }
  if (qword_100298BD0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100222090();
  sub_100003CC8(v16, (uint64_t)qword_100299830);
  id v17 = a1;
  uint64_t v18 = sub_100222070();
  os_log_type_t v19 = sub_1002224E0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138543362;
    id v32 = v17;
    id v22 = v17;
    sub_100222690();
    void *v21 = v17;

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Mismatch between primary CKContainer and requested user %{public}@", v20, 0xCu);
    sub_1000046DC(&qword_100298F90);
    swift_arrayDestroy();
LABEL_21:
    swift_slowDealloc();
    swift_slowDealloc();

    return 0;
  }

  return 0;
}

uint64_t sub_1000624DC()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

void sub_1000624EC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  id v82 = a6;
  uint64_t v75 = a7;
  uint64_t v13 = sub_100221B80();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  id v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = (uint64_t)(a1 + 11);
  swift_beginAccess();
  uint64_t v76 = a1;
  uint64_t v18 = a1[11];
  if (*(void *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_10000A9D4(a2, a3, a4, (uint64_t)a5);
    if (v20)
    {
      uint64_t v21 = (char *)*(id *)(*(void *)(v18 + 56) + 8 * v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 24];
      uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish + 32];
      sub_1000059A4(&v21[OBJC_IVAR____TtC18TrustedPeersHelper9Container_cuttlefish], v22);
      uint64_t v24 = *(void *)(v23 + 8);
      id v25 = v82;
      if ((*(uint64_t (**)(id, uint64_t))(v24 + 8))(v82, v22))
      {
        uint64_t v26 = (void *)v76[9];
        id v27 = [v25 personaUniqueString];
        [v26 prepareThreadForKeychainAPIUseForPersonaIdentifier:v27];

        *uint64_t v75 = (uint64_t)v21;
      }
      else
      {
        sub_100042D4C();
        swift_allocError();
        *(void *)uint64_t v60 = v25;
        *(void *)(v60 + 8) = 0;
        *(unsigned char *)(v60 + 16) = 9;
        id v61 = v25;
        swift_willThrow();
      }
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContainerMap();
  uint64_t v28 = v17;
  sub_100062BA4(a2, a3, a4, a5, (uint64_t)v17);
  if (!v7)
  {
    unint64_t v29 = (void *)a2;
    uint64_t v72 = v14;
    uint64_t v73 = v13;
    id v30 = objc_allocWithZone((Class)NSPersistentStoreDescription);
    double v71 = v28;
    sub_100221B60(&var18);
    id v32 = v31;
    id v70 = [v30 initWithURL:v31];

    id v33 = [v82 makeCKContainer];
    uint64_t v34 = type metadata accessor for CuttlefishCKCodeOperationRunner();
    uint64_t v35 = swift_allocObject();
    sub_100061E7C(v33);
    v81[3] = v34;
    v81[4] = &off_100282178;
    v81[0] = v35;
    sub_100065B18((uint64_t)v81, (uint64_t)v78);
    uint64_t v36 = sub_100002F80((uint64_t)v78, v79);
    uint64_t v68 = (uint64_t)&v68;
    __chkstk_darwin(v36, v36);
    unint64_t v38 = (uint64_t *)((char *)&v68 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v39 + 16))(v38);
    uint64_t v40 = *v38;
    v77[3] = v34;
    v77[4] = &off_100282178;
    v77[0] = v40;
    uint64_t v41 = type metadata accessor for RetryingCKCodeService();
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = sub_100002F80((uint64_t)v77, v34);
    uint64_t v69 = 0;
    unint64_t v44 = v29;
    __chkstk_darwin(v43, v43);
    uint64_t v46 = (uint64_t *)((char *)&v68 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v47 + 16))(v46);
    uint64_t v48 = sub_10006309C(*v46, v42);
    sub_100004788((uint64_t)v77);
    uint64_t v49 = a4;
    sub_100004788((uint64_t)v78);
    uint64_t v50 = v76;
    uint64_t v51 = v76[8];
    uint64_t v52 = v76[10];
    uint64_t v79 = v41;
    uint64_t v80 = &off_1002820B8;
    v78[0] = v48;
    id v53 = objc_allocWithZone((Class)type metadata accessor for Container());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v54 = v70;
    swift_unknownObjectRetain();
    swift_retain();
    id v70 = v44;
    uint64_t v55 = (uint64_t)v44;
    uint64_t v56 = v54;
    uint64_t v57 = v54;
    uint64_t v58 = v69;
    uint64_t v59 = sub_10011EC18(v55, a3, v49, (uint64_t)a5, v57, v51, v52, (uint64_t)v78);
    if (v58)
    {

      swift_release();
      sub_100004788((uint64_t)v81);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
    }
    else
    {
      uint64_t v62 = (void *)v59;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v63 = v62;
      uint64_t v74 = v48;
      uint64_t v64 = (uint64_t)v63;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v77[0] = v50[11];
      v50[11] = 0x8000000000000000;
      sub_10018AD18(v64, (uint64_t)v70, a3, v49, (uint64_t)a5, isUniquelyReferenced_nonNull_native);
      v50[11] = v77[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      double v66 = (void *)v50[9];
      id v67 = objc_msgSend(v82, "personaUniqueString", v68);
      [v66 prepareThreadForKeychainAPIUseForPersonaIdentifier:v67];

      swift_release();
      sub_100004788((uint64_t)v81);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
      *uint64_t v75 = v64;
    }
  }
}

uint64_t sub_100062BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000046DC(&qword_100299D58);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)v28 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)v28 - v20;
  v28[0] = a1;
  v28[1] = a2;
  swift_bridgeObjectRetain();
  v29._countAndFlagsBits = 45;
  v29._object = (void *)0xE100000000000000;
  sub_100222310(v29);
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = a3;
  v30._object = a4;
  sub_100222310(v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v31._object = (void *)0x80000001002418A0;
  v31._countAndFlagsBits = 0xD000000000000016;
  sub_100222310(v31);
  swift_bridgeObjectRelease();
  NSString v22 = sub_100222260();
  swift_bridgeObjectRelease();
  CFURLRef v23 = SecCopyURLForFileInUserScopedKeychainDirectory((uint64_t)v22);

  if (v23)
  {
    sub_100221B70();

    uint64_t v24 = sub_100221B80();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
  }
  else
  {
    uint64_t v24 = sub_100221B80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 1, 1, v24);
  }
  sub_100065BCC((uint64_t)v18, (uint64_t)v21);
  sub_10000D830((uint64_t)v21, (uint64_t)v14, &qword_100299D58);
  sub_100221B80();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v14, 1, v24) == 1)
  {
    sub_10004015C((uint64_t)v14, &qword_100299D58);
    sub_100042D4C();
    swift_allocError();
    *(_OWORD *)uint64_t v26 = xmmword_100229990;
    *(unsigned char *)(v26 + 16) = 13;
    swift_willThrow();
    return sub_10004015C((uint64_t)v21, &qword_100299D58);
  }
  else
  {
    sub_10004015C((uint64_t)v21, &qword_100299D58);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(a5, v14, v24);
  }
}

uint64_t sub_100062EB8()
{
  sub_100004788(v0 + 24);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 96, 7);
}

id sub_100062F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, void *a12)
{
  if (a1)
  {
    v15.super.Class isa = sub_1002221C0().super.isa;
    swift_bridgeObjectRelease();
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    NSString v16 = 0;
    if (a5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  v15.super.Class isa = 0;
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  NSString v16 = sub_100222260();
  swift_bridgeObjectRelease();
  if (a5)
  {
LABEL_4:
    NSString v17 = sub_100222260();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  NSString v17 = 0;
LABEL_8:
  if (a7)
  {
    NSString v18 = sub_100222260();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  NSString v19 = sub_100222260();
  swift_bridgeObjectRelease();
  LOBYTE(v22) = a11 & 1;
  id v20 = [v23 initWithKeychainCircleMetrics:v15.super.isa altDSID:v16 flowID:v17 deviceSessionID:v18 eventName:v19 testsAreEnabled:a10 & 1 canSendMetrics:v22 category:a12];

  return v20;
}

uint64_t sub_10006309C(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = sub_100222550();
  uint64_t v4 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100222530();
  __chkstk_darwin(v8, v9);
  uint64_t v10 = sub_100222120();
  __chkstk_darwin(v10 - 8, v11);
  v17[3] = type metadata accessor for CuttlefishCKCodeOperationRunner();
  v17[4] = &off_100282178;
  v17[0] = a1;
  sub_100065B18((uint64_t)v17, a2 + 16);
  sub_1000047D8(0, &qword_100298FF8);
  sub_100222110();
  NSString v16 = _swiftEmptyArrayStorage;
  sub_100066394(&qword_100299000, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000046DC(&qword_100299008);
  sub_100065B7C((unint64_t *)&qword_100299010, &qword_100299008);
  sub_1002226C0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v15);
  uint64_t v12 = sub_100222580();
  sub_100004788((uint64_t)v17);
  *(void *)(a2 + 56) = v12;
  return a2;
}

unint64_t _s18TrustedPeersHelper21RetryingCKCodeServiceC19functionNameToEvent0gH0S2S_tF_0(uint64_t a1, void *a2)
{
  sub_10004CD8C(40, 0xE100000000000000, a1, (unint64_t)a2);
  if (v4)
  {
    v6._countAndFlagsBits = a1;
    v6._object = a2;
    sub_100222310(v6);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100222370();
    swift_bridgeObjectRelease();
    sub_100063E70();
    sub_100222300();
    swift_bridgeObjectRelease();
  }
  return 0xD000000000000013;
}

uint64_t _s18TrustedPeersHelper21RetryingCKCodeServiceC14retryableError5errorSbs0H0_pSg_tFZ_0(void *a1)
{
  uint64_t v1 = a1;
  if (!a1) {
    goto LABEL_37;
  }
  swift_errorRetain();
  swift_errorRetain();
  sub_1000046DC(&qword_100299D70);
  sub_1000047D8(0, (unint64_t *)&qword_100299528);
  if (!swift_dynamicCast())
  {
    swift_errorRelease();
    goto LABEL_10;
  }
  id v2 = [v24 domain];
  uint64_t v3 = sub_100222270();
  uint64_t v5 = v4;

  if (v3 == sub_100222270() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_100222A30();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      swift_errorRelease();

LABEL_10:
      swift_errorRelease();
      goto LABEL_13;
    }
  }
  id v9 = [v24 code];
  swift_errorRelease();

  swift_errorRelease();
  if (v9 == (id)-1001) {
    return 1;
  }
LABEL_13:
  swift_errorRetain();
  swift_errorRetain();
  if (!swift_dynamicCast())
  {
    swift_errorRelease();
LABEL_18:
    swift_errorRelease();
    goto LABEL_21;
  }
  id v10 = [v24 domain];
  uint64_t v11 = sub_100222270();
  uint64_t v13 = v12;

  if (v11 == sub_100222270() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  char v15 = sub_100222A30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    swift_errorRelease();

    goto LABEL_18;
  }
LABEL_20:
  id v16 = [v24 code];
  swift_errorRelease();

  swift_errorRelease();
  if (v16 == (id)-1009) {
    return 1;
  }
LABEL_21:
  swift_errorRetain();
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    sub_100066394(&qword_1002990E0, type metadata accessor for CKError);
    sub_100221AF0();

    swift_errorRelease();
    if (v23 == 4) {
      return 1;
    }
  }
  else
  {
    swift_errorRelease();
  }
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    sub_100066394(&qword_1002990E0, type metadata accessor for CKError);
    sub_100221AF0();

    swift_errorRelease();
    if (v23 == 6) {
      return 1;
    }
  }
  else
  {
    swift_errorRelease();
  }
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    sub_100066394(&qword_1002990E0, type metadata accessor for CKError);
    sub_100221AF0();

    swift_errorRelease();
    if (v23 == 7) {
      return 1;
    }
  }
  else
  {
    swift_errorRelease();
  }
  swift_errorRetain();
  if (!swift_dynamicCast())
  {
    swift_errorRelease();
    goto LABEL_37;
  }
  sub_100066394(&qword_1002990E0, type metadata accessor for CKError);
  sub_100221AF0();

  swift_errorRelease();
  if (v23 == 23) {
    return 1;
  }
LABEL_37:
  if (sub_10004C970(3, (void *)0xFFFFFFFFFFFFFC13, (uint64_t)v1)) {
    return 1;
  }
  uint64_t v17 = 1;
  if ((sub_10004C710(15, 2000, 0, (BOOL)v1) & 1) == 0 && (sub_10004C710(15, 6000, 1, (BOOL)v1) & 1) == 0)
  {
    if (v1)
    {
      swift_errorRetain();
      NSString v19 = (void *)sub_100221B30();
      unsigned __int8 v20 = [v19 isCuttlefishError:1021];

      swift_errorRelease();
      if (v20) {
        return 1;
      }
      swift_errorRetain();
      uint64_t v21 = (void *)sub_100221B30();
      unsigned __int8 v22 = [v21 isCuttlefishError:1019];

      swift_errorRelease();
      if (v22) {
        return 1;
      }
      uint64_t v1 = (void *)sub_100221B30();
    }
    uint64_t v17 = CKCanRetryForError();
  }
  return v17;
}

uint64_t sub_100063A18()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100063A50(void *a1)
{
  sub_100057F2C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100063A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063A68()
{
  return swift_release();
}

void sub_100063A70()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void (*)(void))off_1002A1C80;
  uint64_t v7 = off_1002A1C80;
  if (!off_1002A1C80)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100066438;
    v3[3] = &unk_100282FC0;
    v3[4] = &v4;
    sub_100066438(v3);
    uint64_t v0 = (void (*)(void))v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (v0)
  {
    v0();
  }
  else
  {
    uint64_t v1 = +[NSAssertionHandler currentHandler];
    uint64_t v2 = +[NSString stringWithUTF8String:"_Bool soft_MetricsOverrideTestsAreEnabled(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"TrustedPeersHelper-Bridging-Header.h", 90, @"%s", dlerror());

    __break(1u);
  }
}

void sub_100063B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100063BA4()
{
  uint64_t v1 = sub_100221CB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v11 = v3 | 7;
  uint64_t v5 = *(void *)(v2 + 64) + 7;
  unint64_t v6 = (v3 + ((((v5 + v4) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v3;
  unint64_t v10 = ((((((((((v5 + v6) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;

  unint64_t v7 = v0 + v4;
  char v8 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v8(v7, v1);
  swift_release();
  v8(v0 + v6, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v10, v11);
}

void sub_100063D34(void *a1)
{
  long long v16 = *(_OWORD *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(sub_100221CB0() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 64) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64) + 7;
  unint64_t v9 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (v6 + v10 + 8) & ~v6;
  unint64_t v12 = (v8 + v11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_100059700(a1, *(void **)(v1 + 48), *(void *)(v1 + 56), v1 + v7, *(void (**)(uint64_t *))(v1 + v9), *(void *)(v1 + v9 + 8), (char *)(v1 + v11), *(void *)(v1 + v12), *(double *)(v1 + v10), *(void **)(v1 + v12 + 8), *(void *)(v1 + v13), *(void *)(v1 + v14), *(void *)(v1 + v14 + 8), *(void *)(v1 + v15), *(void *)(v1 + v15 + 8), *(void *)(v1 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), v16, *((uint64_t *)&v16 + 1),
    v3,
    v4);
}

unint64_t sub_100063E70()
{
  unint64_t result = qword_100299860;
  if (!qword_100299860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100299860);
  }
  return result;
}

uint64_t sub_100063EC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100063F20()
{
  return sub_1000649E4(type metadata accessor for ResetRequest);
}

uint64_t sub_100063F38()
{
  return sub_100065A0C(type metadata accessor for ResetRequest, sub_10005A9D8);
}

uint64_t sub_100063F64()
{
  return sub_100064C24(type metadata accessor for EstablishRequest);
}

uint64_t sub_100063F7C()
{
  return sub_100065A0C(type metadata accessor for EstablishRequest, sub_10005B09C);
}

uint64_t sub_100063FA8()
{
  return sub_100064C24(type metadata accessor for JoinWithVoucherRequest);
}

uint64_t sub_100063FC0()
{
  return sub_100065A0C(type metadata accessor for JoinWithVoucherRequest, sub_10005B768);
}

uint64_t sub_100063FEC()
{
  uint64_t updated = (int *)type metadata accessor for UpdateTrustRequest(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)updated - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v22 = *(void *)(*((void *)updated - 1) + 64);
  uint64_t v23 = v0;
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + updated[8];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + v3 + updated[9];
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v4 + updated[10];
  uint64_t v11 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
    sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
    v7(v10 + *(int *)(v11 + 24), v6);
  }
  uint64_t v12 = v4 + updated[11];
  uint64_t v13 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    v7(v12 + *(int *)(v13 + 20), v6);
    uint64_t v14 = v12 + *(int *)(v13 + 24);
    uint64_t v15 = sub_100221DC0();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
  }
  uint64_t v17 = v4 + updated[12];
  uint64_t v18 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v17 + *(int *)(v18 + 24), v6);
  }
  uint64_t v19 = v4 + updated[13];
  uint64_t v20 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20)) {
    v7(v19 + *(int *)(v20 + 20), v6);
  }

  return _swift_deallocObject(v23, v3 + v22, v2 | 7);
}

uint64_t sub_1000643BC()
{
  return sub_100065A0C(type metadata accessor for UpdateTrustRequest, sub_10005BDFC);
}

uint64_t sub_1000643E8()
{
  uint64_t v1 = (int *)type metadata accessor for SetRecoveryKeyRequest(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v15 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100005A40(*(void *)(v4 + 32), *(void *)(v4 + 40));
  sub_100005A40(*(void *)(v4 + 48), *(void *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[10];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + v3 + v1[11];
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v4 + v1[12];
  uint64_t v11 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v10 + *(int *)(v11 + 24), v6);
  }
  uint64_t v12 = v4 + v1[13];
  uint64_t v13 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13)) {
    v7(v12 + *(int *)(v13 + 20), v6);
  }

  return _swift_deallocObject(v0, v3 + v15, v2 | 7);
}

uint64_t sub_100064670()
{
  return sub_100065A0C(type metadata accessor for SetRecoveryKeyRequest, sub_10005C48C);
}

uint64_t sub_10006469C()
{
  return sub_100064D60(type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1000646B4()
{
  return sub_100065A0C(type metadata accessor for FetchChangesRequest, sub_10005CB20);
}

uint64_t sub_1000646E0()
{
  return sub_10006578C(type metadata accessor for FetchViableBottlesRequest);
}

uint64_t sub_1000646F8()
{
  return sub_100065A0C(type metadata accessor for FetchViableBottlesRequest, sub_10005D1B0);
}

uint64_t sub_100064724()
{
  return sub_1000654EC(type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t sub_10006473C()
{
  return sub_100065A0C(type metadata accessor for FetchPolicyDocumentsRequest, sub_10005D83C);
}

uint64_t sub_100064768()
{
  uint64_t RepairActionRequest = (int *)type metadata accessor for GetRepairActionRequest(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)RepairActionRequest - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = *(void *)(*((void *)RepairActionRequest - 1) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3 + RepairActionRequest[8];
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v0 + v3 + RepairActionRequest[9];
  uint64_t v8 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 24), v5);
  }
  uint64_t v9 = v0 + v3 + RepairActionRequest[10];
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
    v6(v9 + *(int *)(v10 + 20), v5);
  }

  return _swift_deallocObject(v0, v3 + v12, v2 | 7);
}

uint64_t sub_10006495C()
{
  return sub_100065A0C(type metadata accessor for GetRepairActionRequest, sub_10005DEC8);
}

uint64_t sub_100064988()
{
  return sub_10006578C(type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t sub_1000649A0()
{
  return sub_100065A0C(type metadata accessor for GetSupportAppInfoRequest, sub_10005E55C);
}

uint64_t sub_1000649CC()
{
  return sub_1000649E4(type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1000649E4(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v13 = *(void *)(*((void *)v2 - 1) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v1 + v4 + v2[9];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v1 + v4 + v2[10];
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)) {
    v7(v8 + *(int *)(v9 + 20), v6);
  }
  uint64_t v10 = v1 + v4 + v2[11];
  uint64_t v11 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v10 + *(int *)(v11 + 24), v6);
  }

  return _swift_deallocObject(v1, v4 + v13, v3 | 7);
}

uint64_t sub_100064BE0()
{
  return sub_100065A0C(type metadata accessor for ResetAccountCDPContentsRequest, sub_10005EBE8);
}

uint64_t sub_100064C0C()
{
  return sub_100064C24(type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t sub_100064C24(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v1 + v4;
  uint64_t v8 = sub_100221DF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  return _swift_deallocObject(v1, v5, v6);
}

uint64_t sub_100064D1C()
{
  return sub_100065A0C(type metadata accessor for AddCustodianRecoveryKeyRequest, sub_10005F2B4);
}

uint64_t sub_100064D48()
{
  return sub_100064D60(type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_100064D60(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v13 = *(void *)(*((void *)v2 - 1) + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v1 + v4 + v2[5];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v1 + v4 + v2[6];
  uint64_t v9 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v1 + v4 + v2[7];
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
    v7(v10 + *(int *)(v11 + 20), v6);
  }

  return _swift_deallocObject(v1, v4 + v13, v3 | 7);
}

uint64_t sub_100064F54()
{
  return sub_100065A0C(type metadata accessor for FetchRecoverableTLKSharesRequest, sub_10005F940);
}

uint64_t sub_100064F80()
{
  uint64_t v1 = (int *)type metadata accessor for RemoveRecoveryKeyRequest(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[6];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + v3 + v1[7];
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_100005A40(*(void *)v8, *(void *)(v8 + 8));
    sub_100005A40(*(void *)(v8 + 16), *(void *)(v8 + 24));
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v4 + v1[8];
  uint64_t v11 = type metadata accessor for SignedPeerDynamicInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_100005A40(*(void *)v10, *(void *)(v10 + 8));
    sub_100005A40(*(void *)(v10 + 16), *(void *)(v10 + 24));
    v7(v10 + *(int *)(v11 + 24), v6);
  }
  uint64_t v12 = v4 + v1[9];
  uint64_t v13 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v12 + *(int *)(v13 + 24), v6);
  }
  uint64_t v14 = v4 + v1[10];
  uint64_t v15 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15)) {
    v7(v14 + *(int *)(v15 + 20), v6);
  }

  return _swift_deallocObject(v0, v3 + v17, v2 | 7);
}

uint64_t sub_10006525C()
{
  return sub_100065A0C(type metadata accessor for RemoveRecoveryKeyRequest, sub_10005FFCC);
}

uint64_t sub_100065288()
{
  uint64_t v1 = type metadata accessor for PerformATOPRVActionsRequest(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v11 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v0 + v3, v4);
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v7 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 24), v4);
  }
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)) {
    v5(v8 + *(int *)(v9 + 20), v4);
  }

  return _swift_deallocObject(v0, v3 + v11, v2 | 7);
}

uint64_t sub_100065464()
{
  return sub_100065A0C(type metadata accessor for PerformATOPRVActionsRequest, sub_100060658);
}

uint64_t sub_100065490()
{
  return sub_1000654EC(type metadata accessor for CurrentItemFetchRequest);
}

uint64_t sub_1000654A8()
{
  return sub_100065A0C(type metadata accessor for CurrentItemFetchRequest, sub_100060CE4);
}

uint64_t sub_1000654D4()
{
  return sub_1000654EC(type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t sub_1000654EC(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v13 = *(void *)(*((void *)v2 - 1) + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v1 + v4 + v2[5];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v1 + v4 + v2[6];
  uint64_t v9 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v1 + v4 + v2[7];
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
    v7(v10 + *(int *)(v11 + 20), v6);
  }

  return _swift_deallocObject(v1, v4 + v13, v3 | 7);
}

uint64_t sub_1000656E0()
{
  return sub_100065A0C(type metadata accessor for DirectPCSIdentityFetchRequest, sub_100061370);
}

uint64_t sub_10006570C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100065774()
{
  return sub_10006578C(type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_10006578C(uint64_t (*a1)(void))
{
  uint64_t v2 = (int *)a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v13 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v5 = v1 + v4 + v2[5];
  uint64_t v6 = sub_100221DF0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v1 + v4 + v2[6];
  uint64_t v9 = type metadata accessor for Metrics(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v8 + *(int *)(v9 + 24), v6);
  }
  uint64_t v10 = v1 + v4 + v2[7];
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
    v7(v10 + *(int *)(v11 + 20), v6);
  }

  return _swift_deallocObject(v1, v4 + v13, v3 | 7);
}

uint64_t sub_100065978(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000659E0()
{
  return sub_100065A0C(type metadata accessor for RemoveUnreadableCKServerDataRequest, sub_1000619FC);
}

uint64_t sub_100065A0C(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t type metadata accessor for RetryingCKCodeService()
{
  return self;
}

uint64_t type metadata accessor for CuttlefishCKCodeOperationRunner()
{
  return self;
}

uint64_t type metadata accessor for CuttlefishCKOperationRunnerCreator()
{
  return self;
}

uint64_t type metadata accessor for ContainerMap()
{
  return self;
}

uint64_t sub_100065B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100065B7C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004870(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100065BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000046DC(&qword_100299D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100065C38(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299D60, (uint64_t)sub_100056C44, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065C74(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299D88, (uint64_t)sub_1000562FC, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065CB0(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299D98, (uint64_t)sub_1000559B4, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065CEC(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_10029EC70, (uint64_t)sub_10005506C, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065D28(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299DB8, (uint64_t)sub_100054724, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065D64(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299DC8, (uint64_t)sub_100053DDC, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065DA0(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299DD8, (uint64_t)sub_100053494, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065DDC(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299DE8, (uint64_t)sub_100052B4C, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065E18(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_10029ECF0, (uint64_t)sub_100052204, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065E54(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299E08, (uint64_t)sub_1000518BC, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065E90(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_10029EDC0, (uint64_t)sub_10004CE7C, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1000581D0);
}

uint64_t sub_100065ECC(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299E28, (uint64_t)sub_10004D7C4, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1000581D0);
}

uint64_t sub_100065F08(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299E38, (uint64_t)sub_100050F74, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065F44(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299E48, (uint64_t)sub_10005062C, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065F80(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_10029ED10, (uint64_t)sub_10004FCE4, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065FBC(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_10029EE20, (uint64_t)sub_10004F39C, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100065FF8(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_10029EEB0, (uint64_t)sub_10004EA54, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_100066034()
{
  uint64_t v1 = sub_100221CB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v11 = v3 | 7;
  uint64_t v5 = *(void *)(v2 + 64) + 7;
  unint64_t v6 = (v3 + ((((v5 + v4) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v3;
  unint64_t v10 = ((((((((((v5 + v6) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;

  unint64_t v7 = v0 + v4;
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v8(v7, v1);
  swift_release();
  v8(v0 + v6, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000661C4(uint64_t a1)
{
  return sub_1000661F8(a1, (uint64_t)&unk_100299E88, (uint64_t)sub_10004E10C, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_100058C68);
}

uint64_t sub_1000661F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, uint64_t, void, void, uint64_t, void, double, void, void, void, void, void, void, void, void, uint64_t, uint64_t))
{
  uint64_t v9 = *(void *)(sub_100221CB0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v10 + 32) & ~v10;
  uint64_t v12 = *(void *)(v9 + 64) + 7;
  unint64_t v13 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = (v10 + v14 + 8) & ~v10;
  unint64_t v16 = (v12 + v15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  return a4(a1, *(void *)(v4 + 16), *(void *)(v4 + 24), v4 + v11, *(void *)(v4 + v13), *(void *)(v4 + v13 + 8), v4 + v15, *(void *)(v4 + v16), *(double *)(v4 + v14), *(void *)(v4 + v16 + 8), *(void *)(v4 + v17), *(void *)(v4 + v18), *(void *)(v4 + v18 + 8), *(void *)(v4 + v19), *(void *)(v4 + v19 + 8), *(void *)(v4 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), a2, a3);
}

uint64_t sub_100066338()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100066378()
{
  return sub_10005A208(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100066394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000663DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_100066438(void *a1)
{
  v5[0] = 0;
  if (!qword_1002A1C88)
  {
    v5[1] = _NSConcreteStackBlock;
    _OWORD v5[2] = (void *)3221225472;
    v5[3] = sub_1000665BC;
    v5[4] = &unk_100282FF8;
    v5[5] = v5;
    long long v6 = off_100282FE0;
    uint64_t v7 = 0;
    qword_1002A1C88 = _sl_dlopen();
  }
  uint64_t v2 = (void *)qword_1002A1C88;
  if (!qword_1002A1C88)
  {
    a1 = +[NSAssertionHandler currentHandler];
    uint64_t v2 = +[NSString stringWithUTF8String:"void *KeychainCircleLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"TrustedPeersHelper-Bridging-Header.h", 87, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "MetricsOverrideTestsAreEnabled");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  off_1002A1C80 = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t sub_1000665BC()
{
  uint64_t result = _sl_dlopen();
  qword_1002A1C88 = result;
  return result;
}

BOOL sub_1000667A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t static FetchPolicyDocumentsRequest.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1000C9D8C(a1, a2, (uint64_t)sub_10003D348, type metadata accessor for FetchPolicyDocumentsRequest) & 1;
}

uint64_t static FetchPolicyDocumentsResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000C5D50(a1, a2, sub_10003CA7C, type metadata accessor for FetchPolicyDocumentsResponse) & 1;
}

uint64_t static FetchChangesResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000CCA24(a1, a2, type metadata accessor for FetchChangesResponse) & 1;
}

uint64_t static EscrowPair.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for EscrowPair, (uint64_t (*)(uint64_t, uint64_t))sub_1000961F4) & 1;
}

uint64_t static SetRecoveryKeyResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for SetRecoveryKeyResponse) & 1;
}

uint64_t static UpdateTrustResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for UpdateTrustResponse) & 1;
}

uint64_t static JoinWithVoucherRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for JoinWithVoucherRequest, (uint64_t (*)(uint64_t, uint64_t))sub_10009EF6C) & 1;
}

uint64_t static JoinWithVoucherResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for JoinWithVoucherResponse) & 1;
}

uint64_t static EstablishRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for EstablishRequest, (uint64_t (*)(uint64_t, uint64_t))sub_10009B3B8) & 1;
}

uint64_t static EstablishResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for EstablishResponse) & 1;
}

uint64_t static SignedPeerDynamicInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D3AF4(a1, a2, type metadata accessor for SignedPeerDynamicInfo) & 1;
}

uint64_t static SignedRecoveryVoucher.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D3AF4(a1, a2, type metadata accessor for SignedRecoveryVoucher) & 1;
}

uint64_t static SignedVoucher.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D3AF4(a1, a2, type metadata accessor for SignedVoucher) & 1;
}

uint64_t static SignedPeerStableInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D3AF4(a1, a2, type metadata accessor for SignedPeerStableInfo) & 1;
}

uint64_t static SignedPeerPermanentInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D3AF4(a1, a2, type metadata accessor for SignedPeerPermanentInfo) & 1;
}

uint64_t static ViewKeys.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for ViewKeys, (uint64_t (*)(uint64_t, uint64_t))sub_100092CD4) & 1;
}

uint64_t ViewKeys.view.setter(uint64_t a1, uint64_t a2)
{
  return sub_10006E568(a1, a2, type metadata accessor for ViewKeys, (void (*)(void))type metadata accessor for ViewKeys._StorageClass, sub_100091A2C);
}

uint64_t ViewKeys.newTlk.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100091A2C(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for ViewKey);
  uint64_t v14 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299EE0);
  uint64_t v15 = v13 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299EE0);
  swift_endAccess();
  return swift_release();
}

uint64_t ViewKeys.newClassA.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100091A2C(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for ViewKey);
  uint64_t v14 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299EE0);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299EE0);
  swift_endAccess();
  return swift_release();
}

uint64_t ViewKeys.newClassC.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100091A2C(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for ViewKey);
  uint64_t v14 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299EE0);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299EE0);
  swift_endAccess();
  return swift_release();
}

uint64_t FetchRecoverableTLKSharesResponse.View.keys.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_100299648);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecoverableTLKShares = type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
  sub_10000D830(v1 + *(int *)(RecoverableTLKShares + 28), (uint64_t)v6, &qword_100299648);
  uint64_t v8 = (int *)type metadata accessor for ViewKeysRecords(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, a1, type metadata accessor for ViewKeysRecords);
  }
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v9 = a1 + v8[5];
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  v11(a1 + v8[6], 1, 1, v10);
  v11(a1 + v8[7], 1, 1, v10);
  return sub_10004015C((uint64_t)v6, &qword_100299648);
}

uint64_t ViewKeysRecords.tlk.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000673B0(type metadata accessor for ViewKeysRecords, a1);
}

uint64_t ViewKeysRecords.classA.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000693AC(&qword_1002997E0, type metadata accessor for ViewKeysRecords, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport, (void (*)(void))&Ckcode_RecordTransport.init(), a1);
}

uint64_t ViewKeysRecords.classC.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000817A0(&qword_1002997E0, type metadata accessor for ViewKeysRecords, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport, (void (*)(void))&Ckcode_RecordTransport.init(), a1);
}

uint64_t CurrentCKKSItem.itemSpecifier.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98((uint64_t *)&unk_10029EF50, type metadata accessor for CurrentCKKSItem, type metadata accessor for CurrentCKKSItemSpecifier, type metadata accessor for CurrentCKKSItemSpecifier, a1);
}

uint64_t CurrentCKKSItem.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000673B0(type metadata accessor for CurrentCKKSItem, a1);
}

uint64_t sub_1000673B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_1002997E0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 20), (uint64_t)v8, &qword_1002997E0);
  uint64_t v10 = sub_100221D50();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, v10);
  }
  sub_100221D40();
  return sub_10004015C((uint64_t)v8, &qword_1002997E0);
}

uint64_t DirectPCSIdentity.pcsService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_1002997F8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DirectPCSIdentity(0);
  sub_10000D830(v1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_1002997F8);
  uint64_t v8 = type metadata accessor for PCSService(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, a1, type metadata accessor for PCSService);
  }
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = xmmword_100229520;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v6, &qword_1002997F8);
}

uint64_t DirectPCSIdentity.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000673B0(type metadata accessor for DirectPCSIdentity, a1);
}

uint64_t ResetRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067948(type metadata accessor for ResetRequest, a1);
}

uint64_t EstablishRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067AA0(type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, a1);
}

uint64_t JoinWithVoucherRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067AA0(type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, a1);
}

uint64_t UpdateTrustRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_1000676C0(type metadata accessor for UpdateTrustRequest, a1);
}

uint64_t SetRecoveryKeyRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_1000676C0(type metadata accessor for SetRecoveryKeyRequest, a1);
}

uint64_t sub_1000676C0@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 48), (uint64_t)v8, &qword_10029F000);
  uint64_t v10 = type metadata accessor for Metrics(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, (uint64_t)a2, type metadata accessor for Metrics);
  }
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, &qword_10029F000);
}

uint64_t FetchChangesRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for FetchChangesRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t FetchViableBottlesRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for FetchViableBottlesRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t FetchPolicyDocumentsRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for FetchPolicyDocumentsRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t GetRepairActionRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067C60(type metadata accessor for GetRepairActionRequest, a1);
}

uint64_t GetSupportAppInfoRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for GetSupportAppInfoRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t ResetAccountCDPContentsRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067948(type metadata accessor for ResetAccountCDPContentsRequest, a1);
}

uint64_t sub_100067948@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 44), (uint64_t)v8, &qword_10029F000);
  uint64_t v10 = type metadata accessor for Metrics(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, (uint64_t)a2, type metadata accessor for Metrics);
  }
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, &qword_10029F000);
}

uint64_t AddCustodianRecoveryKeyRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067AA0(type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, a1);
}

uint64_t sub_100067AA0@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_10000D830(v11, (uint64_t)v10, &qword_10029F000);
  uint64_t v12 = type metadata accessor for Metrics(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1) {
    return sub_1000D736C((uint64_t)v10, (uint64_t)a3, type metadata accessor for Metrics);
  }
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  a3[2] = 0;
  a3[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v10, &qword_10029F000);
}

uint64_t FetchRecoverableTLKSharesRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for FetchRecoverableTLKSharesRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t RemoveRecoveryKeyRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067C60(type metadata accessor for RemoveRecoveryKeyRequest, a1);
}

uint64_t sub_100067C60@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 36), (uint64_t)v8, &qword_10029F000);
  uint64_t v10 = type metadata accessor for Metrics(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, (uint64_t)a2, type metadata accessor for Metrics);
  }
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, &qword_10029F000);
}

uint64_t PerformATOPRVActionsRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PerformATOPRVActionsRequest(0);
  sub_10000D830(v1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_10029F000);
  uint64_t v8 = type metadata accessor for Metrics(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for Metrics);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v6, &qword_10029F000);
}

uint64_t CurrentItemFetchRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for CurrentItemFetchRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t DirectPCSIdentityFetchRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for DirectPCSIdentityFetchRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t RemoveUnreadableCKServerDataRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  return sub_100067F98(&qword_10029F000, type metadata accessor for RemoveUnreadableCKServerDataRequest, type metadata accessor for Metrics, type metadata accessor for Metrics, a1);
}

uint64_t sub_100067F98@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, void *a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 24), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) != 1) {
    return sub_1000D736C((uint64_t)v14, (uint64_t)a5, a4);
  }
  *a5 = 0;
  a5[1] = 0xE000000000000000;
  a5[2] = 0;
  a5[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v14, a1);
}

void sub_1000680C8()
{
  static ViewKeyClass.allCases = (uint64_t)&off_1002812E0;
}

uint64_t *ViewKeyClass.allCases.unsafeMutableAddressor()
{
  if (qword_100298BD8 != -1) {
    swift_once();
  }
  return &static ViewKeyClass.allCases;
}

uint64_t static ViewKeyClass.allCases.getter()
{
  return sub_100068B24(&qword_100298BD8);
}

uint64_t sub_10006814C@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298BD8, &static ViewKeyClass.allCases, a1);
}

uint64_t sub_100068174(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000D8CEC();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t ResetReason.init(rawValue:)(uint64_t a1)
{
  return sub_100068610(a1, (uint64_t (*)(void))sub_1000D7C38);
}

void sub_1000681DC()
{
  static ResetReason.allCases = (uint64_t)&off_100281330;
}

uint64_t *ResetReason.allCases.unsafeMutableAddressor()
{
  if (qword_100298BE0 != -1) {
    swift_once();
  }
  return &static ResetReason.allCases;
}

uint64_t static ResetReason.allCases.getter()
{
  return sub_100068B24(&qword_100298BE0);
}

void sub_100068260(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_100068270@<X0>(uint64_t a1@<X8>)
{
  return sub_1000686D4((uint64_t (*)(void))sub_1000D7C38, a1);
}

uint64_t GetSupportAppInfoRequest.page.getter()
{
  return *(void *)v0;
}

uint64_t sub_100068290@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298BE0, &static ResetReason.allCases, a1);
}

uint64_t sub_1000682B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068748(a1, (uint64_t (*)(void))sub_1000D7C38, a2);
}

uint64_t sub_1000682CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000D8D40();

  return Enum.hash(into:)(a1, a2, v4);
}

BOOL sub_100068318(uint64_t a1, uint64_t *a2)
{
  return sub_1000667A8(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

uint64_t AccountFlags.init(rawValue:)(uint64_t a1)
{
  return sub_100068610(a1, (uint64_t (*)(void))sub_1000D7C4C);
}

uint64_t AccountFlags.rawValue.getter(uint64_t result, char a2)
{
  if (a2) {
    return qword_100230FA0[result];
  }
  return result;
}

void sub_100068360()
{
  static AccountFlags.allCases = (uint64_t)&off_1002813D0;
}

uint64_t *AccountFlags.allCases.unsafeMutableAddressor()
{
  if (qword_100298BE8 != -1) {
    swift_once();
  }
  return &static AccountFlags.allCases;
}

uint64_t static AccountFlags.allCases.getter()
{
  return sub_100068B24(&qword_100298BE8);
}

uint64_t sub_1000683E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000686D4((uint64_t (*)(void))sub_1000D7C4C, a1);
}

uint64_t sub_1000683FC()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_100230FA0[result];
  }
  return result;
}

uint64_t sub_10006841C@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298BE8, &static AccountFlags.allCases, a1);
}

uint64_t sub_100068440@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068748(a1, sub_1000D7C4C, a2);
}

void sub_100068458(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8) == 1) {
    uint64_t v2 = qword_100230FA0[v2];
  }
  *a1 = v2;
}

uint64_t sub_10006847C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100112330();

  return Enum.hash(into:)(a1, a2, v4);
}

BOOL sub_1000684C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8) == 1) {
    uint64_t v2 = qword_100230FA0[v2];
  }
  uint64_t v3 = *a2;
  if (*((unsigned char *)a2 + 8)) {
    uint64_t v3 = qword_100230FA0[v3];
  }
  return v2 == v3;
}

void sub_100068500()
{
  static FilteringRequest.allCases = (uint64_t)&off_100281450;
}

uint64_t *FilteringRequest.allCases.unsafeMutableAddressor()
{
  if (qword_100298BF0 != -1) {
    swift_once();
  }
  return &static FilteringRequest.allCases;
}

uint64_t static FilteringRequest.allCases.getter()
{
  return sub_100068B24(&qword_100298BF0);
}

uint64_t sub_100068584@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298BF0, &static FilteringRequest.allCases, a1);
}

uint64_t sub_1000685A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000D8DB4();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t RepairAction.init(rawValue:)(uint64_t a1)
{
  return sub_100068610(a1, (uint64_t (*)(void))sub_1000D7CFC);
}

uint64_t sub_100068610(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100068638()
{
  static RepairAction.allCases = (uint64_t)&off_100281490;
}

uint64_t *RepairAction.allCases.unsafeMutableAddressor()
{
  if (qword_100298BF8 != -1) {
    swift_once();
  }
  return &static RepairAction.allCases;
}

uint64_t static RepairAction.allCases.getter()
{
  return sub_100068B24(&qword_100298BF8);
}

uint64_t sub_1000686BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000686D4((uint64_t (*)(void))sub_1000D7CFC, a1);
}

uint64_t sub_1000686D4@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 9) = v5 & 1;
  return result;
}

uint64_t sub_10006870C@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298BF8, &static RepairAction.allCases, a1);
}

uint64_t sub_100068730@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068748(a1, (uint64_t (*)(void))sub_1000D7CFC, a2);
}

uint64_t sub_100068748@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t result = a2(*a1);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 9) = v6 & 1;
  return result;
}

uint64_t sub_100068784(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1001122DC();

  return Enum.hash(into:)(a1, a2, v4);
}

void sub_1000687D0()
{
  static SupportAppDeviceStatus.allCases = (uint64_t)&off_100281510;
}

uint64_t *SupportAppDeviceStatus.allCases.unsafeMutableAddressor()
{
  if (qword_100298C00 != -1) {
    swift_once();
  }
  return &static SupportAppDeviceStatus.allCases;
}

uint64_t static SupportAppDeviceStatus.allCases.getter()
{
  return sub_100068B24(&qword_100298C00);
}

uint64_t sub_100068854@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298C00, &static SupportAppDeviceStatus.allCases, a1);
}

uint64_t sub_100068878(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000D8E08();

  return Enum.hash(into:)(a1, a2, v4);
}

BOOL RecordStatus.rawValue.getter(BOOL result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

void sub_1000688EC()
{
  static RecordStatus.allCases = (uint64_t)&off_100281550;
}

uint64_t *RecordStatus.allCases.unsafeMutableAddressor()
{
  if (qword_100298C08 != -1) {
    swift_once();
  }
  return &static RecordStatus.allCases;
}

uint64_t static RecordStatus.allCases.getter()
{
  return sub_100068B24(&qword_100298C08);
}

unint64_t sub_100068970@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_100068988()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

uint64_t sub_1000689A4@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298C08, &static RecordStatus.allCases, a1);
}

void *sub_1000689C8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 2uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_1000689E4(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8)) {
    uint64_t v2 = *v1 != 0;
  }
  *a1 = v2;
}

uint64_t sub_100068A04(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000D8E7C();

  return Enum.hash(into:)(a1, a2, v4);
}

BOOL sub_100068A50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8)) {
    uint64_t v2 = *a1 != 0;
  }
  uint64_t v3 = *a2 != 0;
  if (!*((unsigned char *)a2 + 8)) {
    uint64_t v3 = *a2;
  }
  return v2 == v3;
}

void sub_100068AA0()
{
  static SOSViability.allCases = (uint64_t)&off_100281590;
}

uint64_t *SOSViability.allCases.unsafeMutableAddressor()
{
  if (qword_100298C10 != -1) {
    swift_once();
  }
  return &static SOSViability.allCases;
}

uint64_t static SOSViability.allCases.getter()
{
  return sub_100068B24(&qword_100298C10);
}

uint64_t sub_100068B24(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

unint64_t sub_100068B70@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_100068B88@<X0>(void *a1@<X8>)
{
  return sub_100068BAC(&qword_100298C10, &static SOSViability.allCases, a1);
}

uint64_t sub_100068BAC@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_bridgeObjectRetain();
}

void *sub_100068C04@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 3uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

Swift::Int sub_100068C20()
{
  return sub_100222B20();
}

uint64_t sub_100068C8C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000D8ED0();

  return Enum.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100068CD8()
{
  return sub_100222B20();
}

uint64_t (*ViewKeys.unknownFields.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t (*TLKShare.curve.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t SignedPeerPermanentInfo.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for SignedPeerPermanentInfo, a1);
}

uint64_t SignedPeerPermanentInfo.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t (*SignedPeerPermanentInfo.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SignedPeerPermanentInfo.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_100068F9C((void (*)(void))type metadata accessor for SignedPeerPermanentInfo, a1);
}

uint64_t SignedPeerStableInfo.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t sub_100068E28@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  uint64_t v5 = sub_100221DF0();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t SignedPeerStableInfo.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_100068EC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 24);
  uint64_t v5 = sub_100221DF0();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*SignedPeerStableInfo.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SignedPeerStableInfo.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_100068F9C((void (*)(void))type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t sub_100068F9C@<X0>(void (*a1)(void)@<X0>, _OWORD *a2@<X8>)
{
  *a2 = xmmword_100229520;
  a2[1] = xmmword_100229520;
  a1(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t SignedPeerDynamicInfo.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for SignedPeerDynamicInfo, a1);
}

uint64_t SignedPeerDynamicInfo.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t (*SignedPeerDynamicInfo.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SignedPeerDynamicInfo.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_100068F9C((void (*)(void))type metadata accessor for SignedPeerDynamicInfo, a1);
}

uint64_t SignedVoucher.voucher.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1000059E8(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t SignedVoucher.voucher.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100005A40(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t SignedVoucher.sig.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1000059E8(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t SignedVoucher.sig.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100005A40(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t SignedVoucher.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for SignedVoucher, a1);
}

uint64_t SignedVoucher.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for SignedVoucher);
}

uint64_t (*SignedVoucher.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SignedVoucher.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_100068F9C((void (*)(void))type metadata accessor for SignedVoucher, a1);
}

uint64_t SignedRecoveryVoucher.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for SignedRecoveryVoucher, a1);
}

uint64_t SignedRecoveryVoucher.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for SignedRecoveryVoucher);
}

uint64_t (*SignedRecoveryVoucher.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SignedRecoveryVoucher.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_100068F9C((void (*)(void))type metadata accessor for SignedRecoveryVoucher, a1);
}

uint64_t SignedCustodianRecoveryKey.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for SignedCustodianRecoveryKey, a1);
}

uint64_t SignedCustodianRecoveryKey.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t (*SignedCustodianRecoveryKey.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SignedCustodianRecoveryKey.init()@<X0>(_OWORD *a1@<X8>)
{
  return sub_100068F9C((void (*)(void))type metadata accessor for SignedCustodianRecoveryKey, a1);
}

uint64_t IdmsTrustedDevicesVersion.idmsTrustedDevicesVersionString.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdmsTrustedDevicesVersion.idmsTrustedDevicesVersionString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t IdmsTrustedDevicesVersion.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000693AC((uint64_t *)&unk_10029ED30, type metadata accessor for IdmsTrustedDevicesVersion, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp, (void (*)(void))&Google_Protobuf_Timestamp.init(), a1);
}

uint64_t sub_1000693AC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 24), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a5, v14, v16);
  }
  a4();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t IdmsTrustedDevicesVersion.timestamp.setter(uint64_t a1)
{
  return sub_10006DAB4(a1, type metadata accessor for IdmsTrustedDevicesVersion, (uint64_t *)&unk_10029ED30, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

void (*IdmsTrustedDevicesVersion.timestamp.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  *char v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221DC0();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for IdmsTrustedDevicesVersion(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221DB0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_1000696B4;
}

void sub_1000696B4(uint64_t a1, char a2)
{
}

BOOL IdmsTrustedDevicesVersion.hasTimestamp.getter()
{
  return sub_10006DD58((uint64_t *)&unk_10029ED30, type metadata accessor for IdmsTrustedDevicesVersion, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

Swift::Void __swiftcall IdmsTrustedDevicesVersion.clearTimestamp()()
{
}

uint64_t IdmsTrustedDevicesVersion.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for IdmsTrustedDevicesVersion, a1);
}

uint64_t IdmsTrustedDevicesVersion.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for IdmsTrustedDevicesVersion);
}

uint64_t (*IdmsTrustedDevicesVersion.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t IdmsTrustedDevicesVersion.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  uint64_t v2 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  char v3 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t v4 = sub_100221DC0();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t Peer.permanentInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000783A0(&qword_10029EF80, type metadata accessor for Peer, type metadata accessor for SignedPeerPermanentInfo, type metadata accessor for SignedPeerPermanentInfo, a1);
}

uint64_t Peer.permanentInfoAndSig.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for Peer, &qword_10029EF80, type metadata accessor for SignedPeerPermanentInfo, type metadata accessor for SignedPeerPermanentInfo);
}

void (*Peer.permanentInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  *char v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029EF80);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerPermanentInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Peer(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029EF80);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029EF80);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerPermanentInfo);
  }
  return sub_100069A60;
}

void sub_100069A60(uint64_t a1, char a2)
{
}

BOOL Peer.hasPermanentInfoAndSig.getter()
{
  return sub_10006E114(&qword_10029EF80, type metadata accessor for Peer, type metadata accessor for SignedPeerPermanentInfo);
}

Swift::Void __swiftcall Peer.clearPermanentInfoAndSig()()
{
}

uint64_t Peer.stableInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_100078764(&qword_100299F18, type metadata accessor for Peer, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t Peer.stableInfoAndSig.setter(uint64_t a1)
{
  return sub_10007F4FC(a1, type metadata accessor for Peer, &qword_100299F18, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo);
}

void (*Peer.stableInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  *char v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F18);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerStableInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Peer(0) + 32);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F18);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F18);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerStableInfo);
  }
  return sub_100069D3C;
}

void sub_100069D3C(uint64_t a1, char a2)
{
}

BOOL Peer.hasStableInfoAndSig.getter()
{
  return sub_100078AAC(&qword_100299F18, type metadata accessor for Peer, type metadata accessor for SignedPeerStableInfo);
}

Swift::Void __swiftcall Peer.clearStableInfoAndSig()()
{
}

uint64_t Peer.dynamicInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000757BC(&qword_10029ECA0, type metadata accessor for Peer, type metadata accessor for SignedPeerDynamicInfo, type metadata accessor for SignedPeerDynamicInfo, a1);
}

uint64_t Peer.dynamicInfoAndSig.setter(uint64_t a1)
{
  return sub_10007EC04(a1, type metadata accessor for Peer, &qword_10029ECA0, type metadata accessor for SignedPeerDynamicInfo, type metadata accessor for SignedPeerDynamicInfo);
}

void (*Peer.dynamicInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  *char v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerDynamicInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Peer(0) + 36);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029ECA0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029ECA0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerDynamicInfo);
  }
  return sub_10006A018;
}

void sub_10006A018(uint64_t a1, char a2)
{
}

BOOL Peer.hasDynamicInfoAndSig.getter()
{
  return sub_100075B04(&qword_10029ECA0, type metadata accessor for Peer, type metadata accessor for SignedPeerDynamicInfo);
}

Swift::Void __swiftcall Peer.clearDynamicInfoAndSig()()
{
}

uint64_t Peer.recoveryVoucher.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_100075D14(&qword_100299F20, type metadata accessor for Peer, type metadata accessor for SignedRecoveryVoucher, type metadata accessor for SignedRecoveryVoucher, a1);
}

uint64_t Peer.recoveryVoucher.setter(uint64_t a1)
{
  return sub_100082B78(a1, type metadata accessor for Peer, &qword_100299F20, type metadata accessor for SignedRecoveryVoucher, type metadata accessor for SignedRecoveryVoucher);
}

void (*Peer.recoveryVoucher.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  *char v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F20);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedRecoveryVoucher(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Peer(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F20);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F20);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedRecoveryVoucher);
  }
  return sub_10006A2F4;
}

void sub_10006A2F4(uint64_t a1, char a2)
{
}

BOOL Peer.hasRecoveryVoucher.getter()
{
  return sub_10007050C(&qword_100299F20, type metadata accessor for Peer, type metadata accessor for SignedRecoveryVoucher);
}

Swift::Void __swiftcall Peer.clearRecoveryVoucher()()
{
}

uint64_t Peer.custodianRecoveryKeyAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_100077028(&qword_100299F28, type metadata accessor for Peer, type metadata accessor for SignedCustodianRecoveryKey, type metadata accessor for SignedCustodianRecoveryKey, a1);
}

uint64_t Peer.custodianRecoveryKeyAndSig.setter(uint64_t a1)
{
  return sub_100082E78(a1, type metadata accessor for Peer, &qword_100299F28, type metadata accessor for SignedCustodianRecoveryKey, type metadata accessor for SignedCustodianRecoveryKey);
}

void (*Peer.custodianRecoveryKeyAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x38uLL);
  *a1 = v3;
  *char v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F28);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedCustodianRecoveryKey(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Peer(0) + 44);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F28);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F28);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedCustodianRecoveryKey);
  }
  return sub_10006A5D0;
}

void sub_10006A5D0(uint64_t a1, char a2)
{
}

BOOL Peer.hasCustodianRecoveryKeyAndSig.getter()
{
  return sub_100070934(&qword_100299F28, type metadata accessor for Peer, type metadata accessor for SignedCustodianRecoveryKey);
}

Swift::Void __swiftcall Peer.clearCustodianRecoveryKeyAndSig()()
{
}

uint64_t Peer.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for Peer, a1);
}

uint64_t Peer.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for Peer);
}

uint64_t (*Peer.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t Peer.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = &_swiftEmptyArrayStorage;
  uint64_t v2 = (int *)type metadata accessor for Peer(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  char v3 = (char *)a1 + v2[7];
  uint64_t v4 = type metadata accessor for SignedPeerPermanentInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = (char *)a1 + v2[8];
  uint64_t v6 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (char *)a1 + v2[9];
  uint64_t v8 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  size_t v9 = (char *)a1 + v2[10];
  uint64_t v10 = type metadata accessor for SignedRecoveryVoucher(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (char *)a1 + v2[11];
  uint64_t v12 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);

  return v13(v11, 1, 1, v12);
}

uint64_t PeerDifference.operation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D830(v1, a1, &qword_100299658);
}

uint64_t PeerDifference.operation.setter(uint64_t a1)
{
  return sub_1000D8C00(a1, v1, &qword_100299658);
}

uint64_t PeerDifference.add.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D830(v2, (uint64_t)v7, &qword_100299658);
  uint64_t v8 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_10004015C((uint64_t)v7, &qword_100299658);
LABEL_5:
    *a1 = 0;
    a1[1] = 0xE000000000000000;
    a1[2] = &_swiftEmptyArrayStorage;
    size_t v9 = (int *)type metadata accessor for Peer(0);
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v10 = (char *)a1 + v9[7];
    uint64_t v11 = type metadata accessor for SignedPeerPermanentInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    uint64_t v12 = (char *)a1 + v9[8];
    uint64_t v13 = type metadata accessor for SignedPeerStableInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = (char *)a1 + v9[9];
    uint64_t v15 = type metadata accessor for SignedPeerDynamicInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = (char *)a1 + v9[10];
    uint64_t v17 = type metadata accessor for SignedRecoveryVoucher(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = (char *)a1 + v9[11];
    uint64_t v19 = type metadata accessor for SignedCustodianRecoveryKey(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1000D7E78((uint64_t)v7, type metadata accessor for PeerDifference.OneOf_Operation);
    goto LABEL_5;
  }
  return sub_1000D736C((uint64_t)v7, (uint64_t)a1, type metadata accessor for Peer);
}

uint64_t PeerDifference.add.setter(uint64_t a1)
{
  return sub_10006B81C(a1);
}

void (*PeerDifference.add.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  *uint64_t v4 = v1;
  uint64_t v5 = sub_1000046DC(&qword_100299658);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Peer(0);
  size_t v8 = *(void *)(*((void *)v7 - 1) + 64);
  v4[2] = malloc(v8);
  size_t v9 = malloc(v8);
  v4[3] = v9;
  sub_10000D830(v2, (uint64_t)v6, &qword_100299658);
  uint64_t v10 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v6, &qword_100299658);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1000D736C((uint64_t)v6, (uint64_t)v9, type metadata accessor for Peer);
      return sub_10006AF1C;
    }
    sub_1000D7E78((uint64_t)v6, type metadata accessor for PeerDifference.OneOf_Operation);
  }
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  v9[2] = &_swiftEmptyArrayStorage;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v12 = (char *)v9 + v7[7];
  uint64_t v13 = type metadata accessor for SignedPeerPermanentInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (char *)v9 + v7[8];
  uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = (char *)v9 + v7[9];
  uint64_t v17 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = (char *)v9 + v7[10];
  uint64_t v19 = type metadata accessor for SignedRecoveryVoucher(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (char *)v9 + v7[11];
  uint64_t v21 = type metadata accessor for SignedCustodianRecoveryKey(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  return sub_10006AF1C;
}

void sub_10006AF1C(uint64_t **a1, char a2)
{
}

uint64_t PeerDifference.remove.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D830(v2, (uint64_t)v7, &qword_100299658);
  uint64_t v8 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_10004015C((uint64_t)v7, &qword_100299658);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_1000D736C((uint64_t)v7, (uint64_t)a1, type metadata accessor for Peer);
    }
    sub_1000D7E78((uint64_t)v7, type metadata accessor for PeerDifference.OneOf_Operation);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = &_swiftEmptyArrayStorage;
  uint64_t v10 = (int *)type metadata accessor for Peer(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v11 = (char *)a1 + v10[7];
  uint64_t v12 = type metadata accessor for SignedPeerPermanentInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (char *)a1 + v10[8];
  uint64_t v14 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (char *)a1 + v10[9];
  uint64_t v16 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = (char *)a1 + v10[10];
  uint64_t v18 = type metadata accessor for SignedRecoveryVoucher(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (char *)a1 + v10[11];
  uint64_t v20 = type metadata accessor for SignedCustodianRecoveryKey(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
}

uint64_t PeerDifference.remove.setter(uint64_t a1)
{
  return sub_10006B81C(a1);
}

void (*PeerDifference.remove.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  *uint64_t v4 = v1;
  uint64_t v5 = sub_1000046DC(&qword_100299658);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Peer(0);
  size_t v8 = *(void *)(*((void *)v7 - 1) + 64);
  v4[2] = malloc(v8);
  size_t v9 = malloc(v8);
  v4[3] = v9;
  sub_10000D830(v2, (uint64_t)v6, &qword_100299658);
  uint64_t v10 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v6, &qword_100299658);
LABEL_6:
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = &_swiftEmptyArrayStorage;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = (char *)v9 + v7[7];
    uint64_t v13 = type metadata accessor for SignedPeerPermanentInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = (char *)v9 + v7[8];
    uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = (char *)v9 + v7[9];
    uint64_t v17 = type metadata accessor for SignedPeerDynamicInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = (char *)v9 + v7[10];
    uint64_t v19 = type metadata accessor for SignedRecoveryVoucher(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    uint64_t v20 = (char *)v9 + v7[11];
    uint64_t v21 = type metadata accessor for SignedCustodianRecoveryKey(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    return sub_10006B53C;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000D7E78((uint64_t)v6, type metadata accessor for PeerDifference.OneOf_Operation);
    goto LABEL_6;
  }
  sub_1000D736C((uint64_t)v6, (uint64_t)v9, type metadata accessor for Peer);
  return sub_10006B53C;
}

void sub_10006B53C(uint64_t **a1, char a2)
{
}

uint64_t PeerDifference.update.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D830(v2, (uint64_t)v7, &qword_100299658);
  uint64_t v8 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_10004015C((uint64_t)v7, &qword_100299658);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return sub_1000D736C((uint64_t)v7, (uint64_t)a1, type metadata accessor for Peer);
    }
    sub_1000D7E78((uint64_t)v7, type metadata accessor for PeerDifference.OneOf_Operation);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = &_swiftEmptyArrayStorage;
  uint64_t v10 = (int *)type metadata accessor for Peer(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v11 = (char *)a1 + v10[7];
  uint64_t v12 = type metadata accessor for SignedPeerPermanentInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (char *)a1 + v10[8];
  uint64_t v14 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (char *)a1 + v10[9];
  uint64_t v16 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = (char *)a1 + v10[10];
  uint64_t v18 = type metadata accessor for SignedRecoveryVoucher(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (char *)a1 + v10[11];
  uint64_t v20 = type metadata accessor for SignedCustodianRecoveryKey(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
}

uint64_t PeerDifference.update.setter(uint64_t a1)
{
  return sub_10006B81C(a1);
}

uint64_t sub_10006B81C(uint64_t a1)
{
  sub_10004015C(v1, &qword_100299658);
  sub_1000D736C(a1, v1, type metadata accessor for Peer);
  uint64_t v3 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(v1, 0, 1, v3);
}

void (*PeerDifference.update.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  *uint64_t v4 = v1;
  uint64_t v5 = sub_1000046DC(&qword_100299658);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Peer(0);
  size_t v8 = *(void *)(*((void *)v7 - 1) + 64);
  v4[2] = malloc(v8);
  size_t v9 = malloc(v8);
  v4[3] = v9;
  sub_10000D830(v2, (uint64_t)v6, &qword_100299658);
  uint64_t v10 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  v4[4] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[5] = v11;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v6, &qword_100299658);
LABEL_6:
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = &_swiftEmptyArrayStorage;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = (char *)v9 + v7[7];
    uint64_t v13 = type metadata accessor for SignedPeerPermanentInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = (char *)v9 + v7[8];
    uint64_t v15 = type metadata accessor for SignedPeerStableInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = (char *)v9 + v7[9];
    uint64_t v17 = type metadata accessor for SignedPeerDynamicInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = (char *)v9 + v7[10];
    uint64_t v19 = type metadata accessor for SignedRecoveryVoucher(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    uint64_t v20 = (char *)v9 + v7[11];
    uint64_t v21 = type metadata accessor for SignedCustodianRecoveryKey(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    return sub_10006BC18;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1000D7E78((uint64_t)v6, type metadata accessor for PeerDifference.OneOf_Operation);
    goto LABEL_6;
  }
  sub_1000D736C((uint64_t)v6, (uint64_t)v9, type metadata accessor for Peer);
  return sub_10006BC18;
}

void sub_10006BC18(uint64_t **a1, char a2)
{
}

void sub_10006BC20(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  uint64_t v5 = (void *)(*a1)[2];
  uint64_t v6 = (void *)(*a1)[3];
  uint64_t v8 = **a1;
  uint64_t v7 = (void *)(*a1)[1];
  if (a2)
  {
    sub_1000D7E10((*a1)[3], (uint64_t)v5, type metadata accessor for Peer);
    sub_10004015C(v8, &qword_100299658);
    sub_1000D736C((uint64_t)v5, v8, type metadata accessor for Peer);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    sub_1000D7E78((uint64_t)v6, type metadata accessor for Peer);
  }
  else
  {
    sub_10004015C(**a1, &qword_100299658);
    sub_1000D736C((uint64_t)v6, v8, type metadata accessor for Peer);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  }
  free(v6);
  free(v5);
  free(v7);

  free(v2);
}

uint64_t PeerDifference.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for PeerDifference, a1);
}

uint64_t sub_10006BDB0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t PeerDifference.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for PeerDifference);
}

uint64_t sub_10006BE48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*PeerDifference.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t PeerDifference.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  type metadata accessor for PeerDifference(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*TLKShare.epoch.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t (*TLKShare.keyUuid.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t (*TLKShare.poisoned.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t (*TLKShare.receiver.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t (*TLKShare.receiverPublicEncryptionKey.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t (*TLKShare.sender.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t (*TLKShare.signature.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t TLKShare.version.getter()
{
  return *(void *)(v0 + 120);
}

uint64_t TLKShare.version.setter(uint64_t result)
{
  *(void *)(v1 + 120) = result;
  return result;
}

uint64_t (*TLKShare.version.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t TLKShare.wrappedkey.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TLKShare.wrappedkey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

uint64_t (*TLKShare.wrappedkey.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t TLKShare.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100086B70(type metadata accessor for TLKShare, a1);
}

uint64_t TLKShare.unknownFields.setter(uint64_t a1)
{
  return sub_100086C08(a1, type metadata accessor for TLKShare);
}

uint64_t (*TLKShare.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t TLKShare.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0xE000000000000000;
  a1[9] = 0;
  a1[10] = 0xE000000000000000;
  a1[11] = 0;
  a1[12] = 0xE000000000000000;
  a1[13] = 0;
  a1[14] = 0xE000000000000000;
  a1[15] = 0;
  a1[16] = 0;
  a1[17] = 0xE000000000000000;
  type metadata accessor for TLKShare(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*ViewKey.uploadOsVersion.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t ViewKey.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F8EC(type metadata accessor for ViewKey, a1);
}

uint64_t ViewKey.unknownFields.setter(uint64_t a1)
{
  return sub_10006F984(a1, type metadata accessor for ViewKey);
}

uint64_t (*ViewKey.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t ViewKey.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  type metadata accessor for ViewKey(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t ViewKeys.view.getter()
{
  return sub_10006E4C4(type metadata accessor for ViewKeys);
}

void (*ViewKeys.view.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_10006C388;
}

void sub_10006C388(uint64_t *a1, char a2)
{
}

uint64_t ViewKeys.newTlk.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CFF8(&OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk, a1);
}

void (*ViewKeys.newTlk.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for ViewKey(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  size_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for ViewKeys(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299EE0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    void v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    v9[6] = 0;
    v9[7] = 0xE000000000000000;
    v9[8] = 0;
    v9[9] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299EE0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for ViewKey);
  }
  return sub_10006C588;
}

void sub_10006C588(uint64_t a1, char a2)
{
}

BOOL ViewKeys.hasNewTlk.getter()
{
  return sub_10006C9B8(&qword_100299EE0, type metadata accessor for ViewKeys, &OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk, type metadata accessor for ViewKey);
}

Swift::Void __swiftcall ViewKeys.clearNewTlk()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100091A2C(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299EE0);
  swift_endAccess();
  swift_release();
}

uint64_t ViewKeys.newClassA.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CFF8(&OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA, a1);
}

void (*ViewKeys.newClassA.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for ViewKey(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for ViewKeys(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299EE0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    void v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    v9[6] = 0;
    v9[7] = 0xE000000000000000;
    v9[8] = 0;
    v9[9] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299EE0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for ViewKey);
  }
  return sub_10006C93C;
}

void sub_10006C93C(uint64_t a1, char a2)
{
}

BOOL ViewKeys.hasNewClassA.getter()
{
  return sub_10006C9B8(&qword_100299EE0, type metadata accessor for ViewKeys, &OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA, type metadata accessor for ViewKey);
}

BOOL sub_10006C9B8(uint64_t *a1, uint64_t (*a2)(void), void *a3, uint64_t (*a4)(void))
{
  uint64_t v9 = sub_1000046DC(a1);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v4 + *(int *)(a2(0) + 20)) + *a3;
  swift_beginAccess();
  sub_10000D830(v13, (uint64_t)v12, a1);
  uint64_t v14 = a4(0);
  BOOL v15 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v12, 1, v14) != 1;
  sub_10004015C((uint64_t)v12, a1);
  return v15;
}

Swift::Void __swiftcall ViewKeys.clearNewClassA()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100091A2C(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299EE0);
  swift_endAccess();
  swift_release();
}

uint64_t ViewKeys.newClassC.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CFF8(&OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC, a1);
}

void (*ViewKeys.newClassC.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for ViewKey(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for ViewKeys(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299EE0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    void v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    v9[6] = 0;
    v9[7] = 0xE000000000000000;
    v9[8] = 0;
    v9[9] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299EE0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for ViewKey);
  }
  return sub_10006CE0C;
}

void sub_10006CE0C(uint64_t a1, char a2)
{
}

BOOL ViewKeys.hasNewClassC.getter()
{
  return sub_10006C9B8(&qword_100299EE0, type metadata accessor for ViewKeys, &OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC, type metadata accessor for ViewKey);
}

Swift::Void __swiftcall ViewKeys.clearNewClassC()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100091A2C(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299EE0);
  swift_endAccess();
  swift_release();
}

uint64_t ViewKeys.oldTlk.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CFF8(&OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk, a1);
}

uint64_t sub_10006CFF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + *(int *)(type metadata accessor for ViewKeys(0) + 20)) + *a1;
  swift_beginAccess();
  sub_10000D830(v9, (uint64_t)v8, &qword_100299EE0);
  uint64_t v10 = type metadata accessor for ViewKey(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, a2, type metadata accessor for ViewKey);
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0xE000000000000000;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, &qword_100299EE0);
}

uint64_t ViewKeys.oldTlk.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100091A2C(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for ViewKey);
  uint64_t v14 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299EE0);
  uint64_t v15 = v13 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299EE0);
  swift_endAccess();
  return swift_release();
}

void (*ViewKeys.oldTlk.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299EE0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for ViewKey(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for ViewKeys(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299EE0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    void v9[4] = 0;
    *((unsigned char *)v9 + 40) = 1;
    v9[6] = 0;
    v9[7] = 0xE000000000000000;
    v9[8] = 0;
    v9[9] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299EE0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for ViewKey);
  }
  return sub_10006D4F0;
}

void sub_10006D4F0(uint64_t a1, char a2)
{
}

BOOL ViewKeys.hasOldTlk.getter()
{
  return sub_10006C9B8(&qword_100299EE0, type metadata accessor for ViewKeys, &OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk, type metadata accessor for ViewKey);
}

Swift::Void __swiftcall ViewKeys.clearOldTlk()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for ViewKeys(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ViewKeys._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100091A2C(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for ViewKey(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299EE0);
  swift_endAccess();
  swift_release();
}

uint64_t ViewKeys.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F744(type metadata accessor for ViewKeys, &qword_100298CB8, &qword_100299EA8, a1);
}

uint64_t ViewKeysRecords.tlk.setter(uint64_t a1)
{
  return sub_1000874B8(a1, type metadata accessor for ViewKeysRecords);
}

void (*ViewKeysRecords.tlk.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_1002997E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221D50();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ViewKeysRecords(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_1002997E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221D40();
    sub_10004015C((uint64_t)v5, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_10006D8B4;
}

void sub_10006D8B4(uint64_t a1, char a2)
{
}

void sub_10006D8C0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(int *)(*(void *)a1 + 48);
  uint64_t v6 = *(void **)(*(void *)a1 + 32);
  uint64_t v7 = *(void **)(*(void *)a1 + 40);
  uint64_t v8 = *(void *)(*(void *)a1 + 16);
  uint64_t v9 = *(void *)(*(void *)a1 + 24);
  uint64_t v10 = *(void **)(*(void *)a1 + 8);
  uint64_t v11 = **(void **)a1 + v5;
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v9 + 16))(*(void *)(*(void *)a1 + 32), v7, v8);
    sub_10004015C(v11, a3);
    (*(void (**)(uint64_t, void *, uint64_t))(v9 + 32))(v11, v6, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    sub_10004015C(**(void **)a1 + v5, a3);
    (*(void (**)(uint64_t, void *, uint64_t))(v9 + 32))(v11, v7, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  free(v7);
  free(v6);
  free(v10);

  free(v4);
}

BOOL ViewKeysRecords.hasTlk.getter()
{
  return sub_100070E50(&qword_1002997E0, type metadata accessor for ViewKeysRecords, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport);
}

Swift::Void __swiftcall ViewKeysRecords.clearTlk()()
{
}

uint64_t ViewKeysRecords.classA.setter(uint64_t a1)
{
  return sub_10006DAB4(a1, type metadata accessor for ViewKeysRecords, &qword_1002997E0, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport);
}

uint64_t sub_10006DAB4(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = v4 + *(int *)(a2(0) + 24);
  sub_10004015C(v8, a3);
  uint64_t v9 = a4(0);
  uint64_t v12 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v8, a1, v9);
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56);

  return v10(v8, 0, 1, v9);
}

void (*ViewKeysRecords.classA.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_1002997E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221D50();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ViewKeysRecords(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_1002997E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221D40();
    sub_10004015C((uint64_t)v5, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_10006D8B4;
}

BOOL ViewKeysRecords.hasClassA.getter()
{
  return sub_10006DD58(&qword_1002997E0, type metadata accessor for ViewKeysRecords, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport);
}

BOOL sub_10006DD58(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 24), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall ViewKeysRecords.clearClassA()()
{
}

uint64_t sub_10006DE80(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 24);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t ViewKeysRecords.classC.setter(uint64_t a1)
{
  return sub_10008191C(a1, type metadata accessor for ViewKeysRecords, &qword_1002997E0, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport);
}

void (*ViewKeysRecords.classC.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_1002997E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221D50();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ViewKeysRecords(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_1002997E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221D40();
    sub_10004015C((uint64_t)v5, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_10006D8B4;
}

BOOL ViewKeysRecords.hasClassC.getter()
{
  return sub_10006E114(&qword_1002997E0, type metadata accessor for ViewKeysRecords, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport);
}

BOOL sub_10006E114(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 28), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall ViewKeysRecords.clearClassC()()
{
}

uint64_t sub_10006E23C(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 28);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t ViewKeysRecords.init()@<X0>(uint64_t a1@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v2 = (int *)type metadata accessor for ViewKeysRecords(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = sub_100221D50();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v7)((void *)(v4 - 8), v3, 1, 1, v4);
  v7(a1 + v2[6], 1, 1, v4);
  uint64_t v5 = a1 + v2[7];

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v4);
}

uint64_t (*Bottle.bottleID.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t Bottle.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100077DA4(type metadata accessor for Bottle, a1);
}

uint64_t Bottle.unknownFields.setter(uint64_t a1)
{
  return sub_100077E3C(a1, type metadata accessor for Bottle);
}

uint64_t (*Bottle.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t Bottle.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_100229520;
  *(_OWORD *)(a1 + 16) = xmmword_100229520;
  *(_OWORD *)(a1 + 32) = xmmword_100229520;
  *(_OWORD *)(a1 + 48) = xmmword_100229520;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  type metadata accessor for Bottle(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t EscrowPair.escrowRecordID.getter()
{
  return sub_10006E4C4(type metadata accessor for EscrowPair);
}

uint64_t sub_10006E4C4(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t EscrowPair.escrowRecordID.setter(uint64_t a1, uint64_t a2)
{
  return sub_10006E568(a1, a2, type metadata accessor for EscrowPair, (void (*)(void))type metadata accessor for EscrowPair._StorageClass, sub_100095504);
}

uint64_t sub_10006E568(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), uint64_t (*a5)(uint64_t))
{
  uint64_t v10 = *(int *)(a3(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a5(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v5 + v10);
  swift_beginAccess();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*EscrowPair.escrowRecordID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowPair(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_10006E6CC;
}

void sub_10006E6CC(uint64_t *a1, char a2)
{
}

void sub_10006E6F8(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 72);
  uint64_t v8 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + v9) = a4(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v6 + 96);
      uint64_t v14 = *(void *)(v6 + 88);
      a3(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = a4(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v6 + 88) + *(int *)(v6 + 96));
    swift_beginAccess();
    *(void *)(v16 + 16) = v7;
    *(void *)(v16 + 24) = v8;
  }
  swift_bridgeObjectRelease();

  free((void *)v6);
}

uint64_t EscrowPair.bottle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007384C(type metadata accessor for EscrowPair, &OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, a1);
}

uint64_t EscrowPair.bottle.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F38);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowPair(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowPair._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100095504(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Bottle);
  uint64_t v14 = type metadata accessor for Bottle(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F38);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F38);
  swift_endAccess();
  return swift_release();
}

void (*EscrowPair.bottle.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F38);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Bottle(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowPair(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F38);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _OWORD *v9 = xmmword_100229520;
    v9[1] = xmmword_100229520;
    v9[2] = xmmword_100229520;
    v9[3] = xmmword_100229520;
    *((void *)v9 + 8) = 0;
    *((void *)v9 + 9) = 0xE000000000000000;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 11) = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F38);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Bottle);
  }
  return sub_10006EC28;
}

void sub_10006EC28(uint64_t a1, char a2)
{
}

BOOL EscrowPair.hasBottle.getter()
{
  return sub_10006C9B8(&qword_100299F38, type metadata accessor for EscrowPair, &OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, type metadata accessor for Bottle);
}

Swift::Void __swiftcall EscrowPair.clearBottle()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EscrowPair(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowPair._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100095504(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Bottle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7 + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F38);
  swift_endAccess();
  swift_release();
}

uint64_t EscrowPair.record.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029F060);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowPair(0) + 20))
     + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  sub_10000D830(v7, (uint64_t)v6, (uint64_t *)&unk_10029F060);
  uint64_t v8 = type metadata accessor for EscrowInformation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, a1, type metadata accessor for EscrowInformation);
  }
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v9 = a1 + *(int *)(v8 + 48);
  uint64_t v10 = sub_100221DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = a1 + *(int *)(v8 + 52);
  uint64_t v12 = type metadata accessor for EscrowInformation.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  return sub_10004015C((uint64_t)v6, (uint64_t *)&unk_10029F060);
}

uint64_t EscrowInformation.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  uint64_t v2 = type metadata accessor for EscrowInformation(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(v2 + 48);
  uint64_t v4 = sub_100221DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + *(int *)(v2 + 52);
  uint64_t v6 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, 1, 1, v6);
}

uint64_t EscrowPair.record.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029F060);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowPair(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowPair._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100095504(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for EscrowInformation);
  uint64_t v14 = type metadata accessor for EscrowInformation(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_10029F060);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, (uint64_t *)&unk_10029F060);
  swift_endAccess();
  return swift_release();
}

void (*EscrowPair.record.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029F060);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for EscrowInformation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowPair(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, (uint64_t *)&unk_10029F060);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0;
    v9[3] = 0;
    void v9[4] = 0;
    v9[2] = 0xE000000000000000;
    *((unsigned char *)v9 + 40) = 1;
    v9[6] = 0;
    *((unsigned char *)v9 + 56) = 1;
    v9[8] = 0;
    v9[9] = 0xE000000000000000;
    v9[10] = 0;
    v9[11] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 48);
    uint64_t v12 = sub_100221DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = (char *)v9 + *(int *)(v6 + 52);
    uint64_t v14 = type metadata accessor for EscrowInformation.Metadata(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029F060);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for EscrowInformation);
  }
  return sub_10006F52C;
}

void sub_10006F52C(uint64_t a1, char a2)
{
}

BOOL EscrowPair.hasRecord.getter()
{
  return sub_10006C9B8((uint64_t *)&unk_10029F060, type metadata accessor for EscrowPair, &OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record, type metadata accessor for EscrowInformation);
}

Swift::Void __swiftcall EscrowPair.clearRecord()()
{
  uint64_t v1 = sub_1000046DC((uint64_t *)&unk_10029F060);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EscrowPair(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowPair._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100095504(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for EscrowInformation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7 + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, (uint64_t *)&unk_10029F060);
  swift_endAccess();
  swift_release();
}

uint64_t EscrowPair.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F744(type metadata accessor for EscrowPair, &qword_100298CD8, &qword_100299EB0, a1);
}

uint64_t sub_10006F744@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v8 = *(int *)(a1(0) + 20);
  if (*a2 != -1) {
    swift_once();
  }
  *(void *)(a4 + v8) = *a3;

  return swift_retain();
}

uint64_t Changes.recoverySigningPubKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1000059E8(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t Changes.recoverySigningPubKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100005A40(*(void *)(v2 + 24), *(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t Changes.recoveryEncryptionPubKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1000059E8(v1, *(void *)(v0 + 48));
  return v1;
}

uint64_t Changes.recoveryEncryptionPubKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100005A40(*(void *)(v2 + 40), *(void *)(v2 + 48));
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Changes.recoveryEncryptionPubKey.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t Changes.more.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Changes.more.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t Changes.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F8EC(type metadata accessor for Changes, a1);
}

uint64_t sub_10006F8EC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 36);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t Changes.unknownFields.setter(uint64_t a1)
{
  return sub_10006F984(a1, type metadata accessor for Changes);
}

uint64_t sub_10006F984(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 36);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*Changes.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t Changes.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = &_swiftEmptyArrayStorage;
  *(_OWORD *)(a1 + 24) = xmmword_100229520;
  *(_OWORD *)(a1 + 40) = xmmword_100229520;
  *(unsigned char *)(a1 + 56) = 0;
  type metadata accessor for Changes(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t GetSupportAppInfoRequest.page.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*DirectPCSIdentityFetchResponse.synckeys.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t PolicyDocumentKey.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for PolicyDocumentKey, a1);
}

uint64_t PolicyDocumentKey.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for PolicyDocumentKey);
}

uint64_t (*PolicyDocumentKey.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t PolicyDocumentKey.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for PolicyDocumentKey(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PolicyDocumentMapEntry.key.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_100299668);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PolicyDocumentMapEntry(0);
  sub_10000D830(v1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_100299668);
  uint64_t v8 = type metadata accessor for PolicyDocumentKey(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for PolicyDocumentKey);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v6, &qword_100299668);
}

uint64_t PolicyDocumentMapEntry.key.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for PolicyDocumentMapEntry, &qword_100299668, type metadata accessor for PolicyDocumentKey, type metadata accessor for PolicyDocumentKey);
}

void (*PolicyDocumentMapEntry.key.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299668);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for PolicyDocumentKey(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for PolicyDocumentMapEntry(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299668);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0;
    v10[2] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299668);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for PolicyDocumentKey);
  }
  return sub_10006FE90;
}

void sub_10006FE90(uint64_t a1, char a2)
{
}

BOOL PolicyDocumentMapEntry.hasKey.getter()
{
  return sub_10006DD58(&qword_100299668, type metadata accessor for PolicyDocumentMapEntry, type metadata accessor for PolicyDocumentKey);
}

Swift::Void __swiftcall PolicyDocumentMapEntry.clearKey()()
{
}

uint64_t PolicyDocumentMapEntry.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for PolicyDocumentMapEntry, a1);
}

uint64_t PolicyDocumentMapEntry.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for PolicyDocumentMapEntry);
}

uint64_t (*PolicyDocumentMapEntry.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t PolicyDocumentMapEntry.init()@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_100229520;
  uint64_t v2 = type metadata accessor for PolicyDocumentMapEntry(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t AccountInfo.flags.getter()
{
  return *v0;
}

uint64_t AccountInfo.flags.setter(uint64_t result)
{
  _DWORD *v1 = result;
  return result;
}

uint64_t AccountInfo.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for AccountInfo, a1);
}

uint64_t AccountInfo.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for AccountInfo);
}

uint64_t (*AccountInfo.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t AccountInfo.init()@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for AccountInfo(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t Metrics.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for Metrics, a1);
}

uint64_t Metrics.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for Metrics);
}

uint64_t (*Metrics.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t Metrics.init()@<X0>(void *a1@<X8>)
{
  return sub_100087C7C((void (*)(void))type metadata accessor for Metrics, a1);
}

uint64_t ResetRequest.resetReason.getter()
{
  return *(void *)v0;
}

uint64_t ResetRequest.resetReason.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t ResetRequest.idmsTargetContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResetRequest.idmsTargetContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t ResetRequest.idmsCuttlefishPassword.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResetRequest.idmsCuttlefishPassword.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t ResetRequest.testingNotifyIdms.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ResetRequest.testingNotifyIdms.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t ResetRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100082A00(type metadata accessor for ResetRequest, a1);
}

uint64_t ResetRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100082B78(a1, type metadata accessor for ResetRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*ResetRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ResetRequest(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

void sub_100070490(uint64_t a1, char a2)
{
}

BOOL ResetRequest.hasAccountInfo.getter()
{
  return sub_10007050C(&qword_100299F50, type metadata accessor for ResetRequest, type metadata accessor for AccountInfo);
}

BOOL sub_10007050C(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 40), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall ResetRequest.clearAccountInfo()()
{
}

uint64_t sub_100070634(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 40);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t ResetRequest.metrics.setter(uint64_t a1)
{
  return sub_100082E78(a1, type metadata accessor for ResetRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*ResetRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ResetRequest(0) + 44);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

void sub_1000708B8(uint64_t a1, char a2)
{
}

BOOL ResetRequest.hasMetrics.getter()
{
  return sub_100070934(&qword_10029F000, type metadata accessor for ResetRequest, type metadata accessor for Metrics);
}

BOOL sub_100070934(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 44), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall ResetRequest.clearMetrics()()
{
}

uint64_t sub_100070A5C(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 44);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t ResetRequest.isGuitarfish.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ResetRequest.isGuitarfish.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*ResetAccountCDPContentsRequest.isGuitarfish.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t ResetRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F8EC(type metadata accessor for ResetRequest, a1);
}

uint64_t ResetRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006F984(a1, type metadata accessor for ResetRequest);
}

uint64_t (*ResetRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t ResetRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1000831C8(type metadata accessor for ResetRequest, a1);
}

uint64_t ResetResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007CEF0(type metadata accessor for ResetResponse, a1);
}

uint64_t ResetResponse.changes.setter(uint64_t a1)
{
  return sub_10007D08C(a1, type metadata accessor for ResetResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

void (*ResetResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ResetResponse(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

void sub_100070DD4(uint64_t a1, char a2)
{
}

BOOL ResetResponse.hasChanges.getter()
{
  return sub_100070E50((uint64_t *)&unk_10029EC90, type metadata accessor for ResetResponse, type metadata accessor for Changes);
}

BOOL sub_100070E50(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 20), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall ResetResponse.clearChanges()()
{
}

uint64_t sub_100070F78(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t ResetResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1000795A4(type metadata accessor for ResetResponse, a1);
}

uint64_t EstablishRequest.peer.getter@<X0>(void *a1@<X8>)
{
  return sub_10007A064(type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, a1);
}

uint64_t EstablishRequest.peer.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F58);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100099D34(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Peer);
  uint64_t v14 = type metadata accessor for Peer(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F58);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F58);
  swift_endAccess();
  return swift_release();
}

void (*EstablishRequest.peer.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F58);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Peer(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EstablishRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F58);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = &_swiftEmptyArrayStorage;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v11 = (char *)v9 + v6[7];
    uint64_t v12 = type metadata accessor for SignedPeerPermanentInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = (char *)v9 + v6[8];
    uint64_t v14 = type metadata accessor for SignedPeerStableInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    uint64_t v15 = (char *)v9 + v6[9];
    uint64_t v16 = type metadata accessor for SignedPeerDynamicInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    uint64_t v17 = (char *)v9 + v6[10];
    uint64_t v18 = type metadata accessor for SignedRecoveryVoucher(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = (char *)v9 + v6[11];
    uint64_t v20 = type metadata accessor for SignedCustodianRecoveryKey(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    sub_10004015C((uint64_t)v5, &qword_100299F58);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Peer);
  }
  return sub_100071538;
}

void sub_100071538(uint64_t a1, char a2)
{
}

BOOL EstablishRequest.hasPeer.getter()
{
  return sub_10006C9B8(&qword_100299F58, type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, type metadata accessor for Peer);
}

Swift::Void __swiftcall EstablishRequest.clearPeer()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100099D34(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Peer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F58);
  swift_endAccess();
  swift_release();
}

uint64_t EstablishRequest.bottle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007384C(type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, a1);
}

uint64_t EstablishRequest.bottle.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F38);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100099D34(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Bottle);
  uint64_t v14 = type metadata accessor for Bottle(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F38);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F38);
  swift_endAccess();
  return swift_release();
}

void (*EstablishRequest.bottle.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F38);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Bottle(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EstablishRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F38);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _OWORD *v9 = xmmword_100229520;
    v9[1] = xmmword_100229520;
    v9[2] = xmmword_100229520;
    v9[3] = xmmword_100229520;
    *((void *)v9 + 8) = 0;
    *((void *)v9 + 9) = 0xE000000000000000;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 11) = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F38);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Bottle);
  }
  return sub_100071AC0;
}

void sub_100071AC0(uint64_t a1, char a2)
{
}

BOOL EstablishRequest.hasBottle.getter()
{
  return sub_10006C9B8(&qword_100299F38, type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, type metadata accessor for Bottle);
}

Swift::Void __swiftcall EstablishRequest.clearBottle()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100099D34(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Bottle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F38);
  swift_endAccess();
  swift_release();
}

uint64_t EstablishRequest.viewKeys.getter()
{
  return sub_100071DF8((void (*)(void))type metadata accessor for EstablishRequest);
}

uint64_t EstablishRequest.viewKeys.setter(uint64_t a1)
{
  return sub_100071EA4(a1, type metadata accessor for EstablishRequest, (void (*)(void))type metadata accessor for EstablishRequest._StorageClass, sub_100099D34, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
}

void (*EstablishRequest.viewKeys.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_100071DA4;
}

void sub_100071DA4(uint64_t *a1, char a2)
{
}

uint64_t EstablishRequest.tlkShares.getter()
{
  return sub_100071DF8((void (*)(void))type metadata accessor for EstablishRequest);
}

uint64_t sub_100071DF8(void (*a1)(void))
{
  return swift_bridgeObjectRetain();
}

uint64_t EstablishRequest.tlkShares.setter(uint64_t a1)
{
  return sub_100071EA4(a1, type metadata accessor for EstablishRequest, (void (*)(void))type metadata accessor for EstablishRequest._StorageClass, sub_100099D34, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
}

uint64_t sub_100071EA4(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v5 + v10) = a4(v11);
    swift_release();
  }
  uint64_t v12 = (void *)(*(void *)(v5 + v10) + *a5);
  swift_beginAccess();
  *uint64_t v12 = a1;
  return swift_bridgeObjectRelease();
}

void (*EstablishRequest.tlkShares.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_10007201C;
}

void sub_10007201C(uint64_t *a1, char a2)
{
}

void sub_100072050(uint64_t *a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = *(int *)(v8 + 88);
      uint64_t v11 = *(void *)(v8 + 80);
      a3(0);
      swift_allocObject();
      uint64_t v12 = swift_retain();
      *(void *)(v11 + v10) = a4(v12);
      swift_release();
    }
    uint64_t v13 = (void *)(*(void *)(*(void *)(v8 + 80) + *(int *)(v8 + 88)) + *a5);
    swift_beginAccess();
    *uint64_t v13 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v14 = *(int *)(v8 + 88);
      uint64_t v15 = *(void *)(v8 + 80);
      a3(0);
      swift_allocObject();
      uint64_t v16 = swift_retain();
      *(void *)(v15 + v14) = a4(v16);
      swift_release();
    }
    uint64_t v17 = (void *)(*(void *)(*(void *)(v8 + 80) + *(int *)(v8 + 88)) + *a5);
    swift_beginAccess();
    *uint64_t v17 = v9;
  }
  swift_bridgeObjectRelease();

  free((void *)v8);
}

uint64_t EstablishRequest.metrics.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100099D34(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Metrics);
  uint64_t v14 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_10029F000);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_10029F000);
  swift_endAccess();
  return swift_release();
}

void (*EstablishRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EstablishRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Metrics);
  }
  return sub_100072564;
}

void sub_100072564(uint64_t a1, char a2)
{
}

BOOL EstablishRequest.hasMetrics.getter()
{
  return sub_10006C9B8(&qword_10029F000, type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, type metadata accessor for Metrics);
}

Swift::Void __swiftcall EstablishRequest.clearMetrics()()
{
  uint64_t v1 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100099D34(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_10029F000);
  swift_endAccess();
  swift_release();
}

uint64_t EstablishRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_10007BD24(type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, a1);
}

uint64_t EstablishRequest.accountInfo.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_100099D34(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for AccountInfo);
  uint64_t v14 = type metadata accessor for AccountInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F50);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F50);
  swift_endAccess();
  return swift_release();
}

void (*EstablishRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EstablishRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _DWORD *v9 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for AccountInfo);
  }
  return sub_100072AD4;
}

void sub_100072AD4(uint64_t a1, char a2)
{
}

BOOL EstablishRequest.hasAccountInfo.getter()
{
  return sub_10006C9B8(&qword_100299F50, type metadata accessor for EstablishRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall EstablishRequest.clearAccountInfo()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EstablishRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EstablishRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_100099D34(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F50);
  swift_endAccess();
  swift_release();
}

uint64_t EstablishRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F744(type metadata accessor for EstablishRequest, &qword_100298D20, &qword_100299EB8, a1);
}

uint64_t EstablishResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007C554(type metadata accessor for EstablishResponse, a1);
}

uint64_t EstablishResponse.changes.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for EstablishResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

void (*EstablishResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for EstablishResponse(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

BOOL EstablishResponse.hasChanges.getter()
{
  return sub_10006DD58((uint64_t *)&unk_10029EC90, type metadata accessor for EstablishResponse, type metadata accessor for Changes);
}

Swift::Void __swiftcall EstablishResponse.clearChanges()()
{
}

uint64_t EstablishResponse.zoneKeyHierarchyRecords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EstablishResponse.zoneKeyHierarchyRecords.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t EstablishResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for EstablishResponse, a1);
}

uint64_t EstablishResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for EstablishResponse);
}

uint64_t (*EstablishResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t EstablishResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_1000756D4(type metadata accessor for EstablishResponse, a1);
}

uint64_t JoinWithVoucherRequest.changeToken.getter()
{
  return sub_10006E4C4(type metadata accessor for JoinWithVoucherRequest);
}

uint64_t JoinWithVoucherRequest.changeToken.setter(uint64_t a1, uint64_t a2)
{
  return sub_10006E568(a1, a2, type metadata accessor for JoinWithVoucherRequest, (void (*)(void))type metadata accessor for JoinWithVoucherRequest._StorageClass, sub_10009D384);
}

void (*JoinWithVoucherRequest.changeToken.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_100073118;
}

void sub_100073118(uint64_t *a1, char a2)
{
}

uint64_t JoinWithVoucherRequest.peer.getter@<X0>(void *a1@<X8>)
{
  return sub_10007A064(type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, a1);
}

uint64_t JoinWithVoucherRequest.peer.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F58);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_10009D384(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Peer);
  uint64_t v14 = type metadata accessor for Peer(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F58);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F58);
  swift_endAccess();
  return swift_release();
}

void (*JoinWithVoucherRequest.peer.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F58);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Peer(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F58);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = &_swiftEmptyArrayStorage;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v11 = (char *)v9 + v6[7];
    uint64_t v12 = type metadata accessor for SignedPeerPermanentInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = (char *)v9 + v6[8];
    uint64_t v14 = type metadata accessor for SignedPeerStableInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    uint64_t v15 = (char *)v9 + v6[9];
    uint64_t v16 = type metadata accessor for SignedPeerDynamicInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    uint64_t v17 = (char *)v9 + v6[10];
    uint64_t v18 = type metadata accessor for SignedRecoveryVoucher(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = (char *)v9 + v6[11];
    uint64_t v20 = type metadata accessor for SignedCustodianRecoveryKey(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    sub_10004015C((uint64_t)v5, &qword_100299F58);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Peer);
  }
  return sub_10007364C;
}

void sub_10007364C(uint64_t a1, char a2)
{
}

BOOL JoinWithVoucherRequest.hasPeer.getter()
{
  return sub_10006C9B8(&qword_100299F58, type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, type metadata accessor for Peer);
}

Swift::Void __swiftcall JoinWithVoucherRequest.clearPeer()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_10009D384(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Peer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F58);
  swift_endAccess();
  swift_release();
}

uint64_t JoinWithVoucherRequest.bottle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007384C(type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, a1);
}

uint64_t sub_10007384C@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_10000D830(v11, (uint64_t)v10, &qword_100299F38);
  uint64_t v12 = type metadata accessor for Bottle(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1) {
    return sub_1000D736C((uint64_t)v10, a3, type metadata accessor for Bottle);
  }
  *(_OWORD *)a3 = xmmword_100229520;
  *(_OWORD *)(a3 + 16) = xmmword_100229520;
  *(_OWORD *)(a3 + 32) = xmmword_100229520;
  *(_OWORD *)(a3 + 48) = xmmword_100229520;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0xE000000000000000;
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v10, &qword_100299F38);
}

uint64_t JoinWithVoucherRequest.bottle.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F38);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_10009D384(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Bottle);
  uint64_t v14 = type metadata accessor for Bottle(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F38);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F38);
  swift_endAccess();
  return swift_release();
}

void (*JoinWithVoucherRequest.bottle.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F38);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Bottle(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F38);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _OWORD *v9 = xmmword_100229520;
    v9[1] = xmmword_100229520;
    v9[2] = xmmword_100229520;
    v9[3] = xmmword_100229520;
    *((void *)v9 + 8) = 0;
    *((void *)v9 + 9) = 0xE000000000000000;
    *((void *)v9 + 10) = 0;
    *((void *)v9 + 11) = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F38);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Bottle);
  }
  return sub_100073D44;
}

void sub_100073D44(uint64_t a1, char a2)
{
}

BOOL JoinWithVoucherRequest.hasBottle.getter()
{
  return sub_10006C9B8(&qword_100299F38, type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, type metadata accessor for Bottle);
}

Swift::Void __swiftcall JoinWithVoucherRequest.clearBottle()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_10009D384(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Bottle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F38);
  swift_endAccess();
  swift_release();
}

uint64_t JoinWithVoucherRequest.tlkShares.getter()
{
  return sub_100071DF8((void (*)(void))type metadata accessor for JoinWithVoucherRequest);
}

uint64_t JoinWithVoucherRequest.tlkShares.setter(uint64_t a1)
{
  return sub_100071EA4(a1, type metadata accessor for JoinWithVoucherRequest, (void (*)(void))type metadata accessor for JoinWithVoucherRequest._StorageClass, sub_10009D384, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
}

void (*JoinWithVoucherRequest.tlkShares.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_100074028;
}

void sub_100074028(uint64_t *a1, char a2)
{
}

uint64_t JoinWithVoucherRequest.viewKeys.getter()
{
  return sub_100071DF8((void (*)(void))type metadata accessor for JoinWithVoucherRequest);
}

uint64_t JoinWithVoucherRequest.viewKeys.setter(uint64_t a1)
{
  return sub_100071EA4(a1, type metadata accessor for JoinWithVoucherRequest, (void (*)(void))type metadata accessor for JoinWithVoucherRequest._StorageClass, sub_10009D384, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
}

void (*JoinWithVoucherRequest.viewKeys.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_100074160;
}

void sub_100074160(uint64_t *a1, char a2)
{
}

uint64_t JoinWithVoucherRequest.trustedDevicesVersion.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20))
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  swift_beginAccess();
  sub_10000D830(v7, (uint64_t)v6, &qword_10029ED20);
  uint64_t v8 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for IdmsTrustedDevicesVersion);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v9 = (char *)a1 + *(int *)(v8 + 24);
  uint64_t v10 = sub_100221DC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return sub_10004015C((uint64_t)v6, &qword_10029ED20);
}

uint64_t JoinWithVoucherRequest.trustedDevicesVersion.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_10029ED20);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_10009D384(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for IdmsTrustedDevicesVersion);
  uint64_t v14 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_10029ED20);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_10029ED20);
  swift_endAccess();
  return swift_release();
}

void (*JoinWithVoucherRequest.trustedDevicesVersion.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029ED20);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_10029ED20);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 24);
    uint64_t v12 = sub_100221DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_10004015C((uint64_t)v5, &qword_10029ED20);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for IdmsTrustedDevicesVersion);
  }
  return sub_1000746E4;
}

void sub_1000746E4(uint64_t a1, char a2)
{
}

BOOL JoinWithVoucherRequest.hasTrustedDevicesVersion.getter()
{
  return sub_10006C9B8(&qword_10029ED20, type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion, type metadata accessor for IdmsTrustedDevicesVersion);
}

Swift::Void __swiftcall JoinWithVoucherRequest.clearTrustedDevicesVersion()()
{
  uint64_t v1 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_10009D384(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_10029ED20);
  swift_endAccess();
  swift_release();
}

uint64_t JoinWithVoucherRequest.metrics.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_10009D384(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Metrics);
  uint64_t v14 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_10029F000);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_10029F000);
  swift_endAccess();
  return swift_release();
}

void (*JoinWithVoucherRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Metrics);
  }
  return sub_100074C3C;
}

void sub_100074C3C(uint64_t a1, char a2)
{
}

BOOL JoinWithVoucherRequest.hasMetrics.getter()
{
  return sub_10006C9B8(&qword_10029F000, type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, type metadata accessor for Metrics);
}

Swift::Void __swiftcall JoinWithVoucherRequest.clearMetrics()()
{
  uint64_t v1 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_10009D384(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_10029F000);
  swift_endAccess();
  swift_release();
}

uint64_t JoinWithVoucherRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_10007BD24(type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, a1);
}

uint64_t JoinWithVoucherRequest.accountInfo.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_10009D384(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for AccountInfo);
  uint64_t v14 = type metadata accessor for AccountInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F50);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F50);
  swift_endAccess();
  return swift_release();
}

void (*JoinWithVoucherRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _DWORD *v9 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for AccountInfo);
  }
  return sub_1000751AC;
}

void sub_1000751AC(uint64_t a1, char a2)
{
}

BOOL JoinWithVoucherRequest.hasAccountInfo.getter()
{
  return sub_10006C9B8(&qword_100299F50, type metadata accessor for JoinWithVoucherRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall JoinWithVoucherRequest.clearAccountInfo()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for JoinWithVoucherRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_10009D384(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F50);
  swift_endAccess();
  swift_release();
}

uint64_t JoinWithVoucherRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F744(type metadata accessor for JoinWithVoucherRequest, &qword_100298D38, &qword_100299EC0, a1);
}

uint64_t JoinWithVoucherResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007C554(type metadata accessor for JoinWithVoucherResponse, a1);
}

uint64_t JoinWithVoucherResponse.changes.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for JoinWithVoucherResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

void (*JoinWithVoucherResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for JoinWithVoucherResponse(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

BOOL JoinWithVoucherResponse.hasChanges.getter()
{
  return sub_10006DD58((uint64_t *)&unk_10029EC90, type metadata accessor for JoinWithVoucherResponse, type metadata accessor for Changes);
}

Swift::Void __swiftcall JoinWithVoucherResponse.clearChanges()()
{
}

uint64_t JoinWithVoucherResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for JoinWithVoucherResponse, a1);
}

uint64_t JoinWithVoucherResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for JoinWithVoucherResponse);
}

uint64_t (*JoinWithVoucherResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t JoinWithVoucherResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_1000756D4(type metadata accessor for JoinWithVoucherResponse, a1);
}

uint64_t sub_1000756D4@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  uint64_t v3 = a1(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(v3 + 24);
  uint64_t v5 = type metadata accessor for Changes(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t UpdateTrustRequest.stableInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000757BC(&qword_100299F18, type metadata accessor for UpdateTrustRequest, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t sub_1000757BC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 36), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) != 1) {
    return sub_1000D736C((uint64_t)v14, (uint64_t)a5, a4);
  }
  *a5 = xmmword_100229520;
  a5[1] = xmmword_100229520;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t UpdateTrustRequest.stableInfoAndSig.setter(uint64_t a1)
{
  return sub_10007EC04(a1, type metadata accessor for UpdateTrustRequest, &qword_100299F18, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo);
}

void (*UpdateTrustRequest.stableInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F18);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerStableInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for UpdateTrustRequest(0) + 36);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F18);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F18);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerStableInfo);
  }
  return sub_100069D3C;
}

BOOL UpdateTrustRequest.hasStableInfoAndSig.getter()
{
  return sub_100075B04(&qword_100299F18, type metadata accessor for UpdateTrustRequest, type metadata accessor for SignedPeerStableInfo);
}

BOOL sub_100075B04(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 36), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall UpdateTrustRequest.clearStableInfoAndSig()()
{
}

uint64_t sub_100075C2C(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 36);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t UpdateTrustRequest.dynamicInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_100075D14(&qword_10029ECA0, type metadata accessor for UpdateTrustRequest, type metadata accessor for SignedPeerDynamicInfo, type metadata accessor for SignedPeerDynamicInfo, a1);
}

uint64_t sub_100075D14@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 40), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) != 1) {
    return sub_1000D736C((uint64_t)v14, (uint64_t)a5, a4);
  }
  *a5 = xmmword_100229520;
  a5[1] = xmmword_100229520;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t UpdateTrustRequest.dynamicInfoAndSig.setter(uint64_t a1)
{
  return sub_100082B78(a1, type metadata accessor for UpdateTrustRequest, &qword_10029ECA0, type metadata accessor for SignedPeerDynamicInfo, type metadata accessor for SignedPeerDynamicInfo);
}

void (*UpdateTrustRequest.dynamicInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerDynamicInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for UpdateTrustRequest(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029ECA0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029ECA0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerDynamicInfo);
  }
  return sub_10006A018;
}

BOOL UpdateTrustRequest.hasDynamicInfoAndSig.getter()
{
  return sub_10007050C(&qword_10029ECA0, type metadata accessor for UpdateTrustRequest, type metadata accessor for SignedPeerDynamicInfo);
}

Swift::Void __swiftcall UpdateTrustRequest.clearDynamicInfoAndSig()()
{
}

uint64_t UpdateTrustRequest.tlkShares.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UpdateTrustRequest.tlkShares.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t UpdateTrustRequest.viewKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UpdateTrustRequest.viewKeys.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t UpdateTrustRequest.trustedDevicesVersion.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  sub_10000D830(v1 + *(int *)(updated + 44), (uint64_t)v6, &qword_10029ED20);
  uint64_t v8 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for IdmsTrustedDevicesVersion);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  size_t v9 = (char *)a1 + *(int *)(v8 + 24);
  uint64_t v10 = sub_100221DC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return sub_10004015C((uint64_t)v6, &qword_10029ED20);
}

uint64_t UpdateTrustRequest.trustedDevicesVersion.setter(uint64_t a1)
{
  return sub_100082E78(a1, type metadata accessor for UpdateTrustRequest, &qword_10029ED20, type metadata accessor for IdmsTrustedDevicesVersion, type metadata accessor for IdmsTrustedDevicesVersion);
}

void (*UpdateTrustRequest.trustedDevicesVersion.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029ED20);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for UpdateTrustRequest(0) + 44);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029ED20);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = (char *)v10 + *(int *)(v6 + 24);
    uint64_t v13 = sub_100221DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    sub_10004015C((uint64_t)v5, &qword_10029ED20);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for IdmsTrustedDevicesVersion);
  }
  return sub_10007648C;
}

void sub_10007648C(uint64_t a1, char a2)
{
}

BOOL UpdateTrustRequest.hasTrustedDevicesVersion.getter()
{
  return sub_100070934(&qword_10029ED20, type metadata accessor for UpdateTrustRequest, type metadata accessor for IdmsTrustedDevicesVersion);
}

Swift::Void __swiftcall UpdateTrustRequest.clearTrustedDevicesVersion()()
{
}

uint64_t UpdateTrustRequest.metrics.setter(uint64_t a1)
{
  return sub_1000773F0(a1, type metadata accessor for UpdateTrustRequest);
}

void (*UpdateTrustRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for UpdateTrustRequest(0) + 48);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL UpdateTrustRequest.hasMetrics.getter()
{
  return sub_100077670(&qword_10029F000, type metadata accessor for UpdateTrustRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall UpdateTrustRequest.clearMetrics()()
{
}

uint64_t UpdateTrustRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100077850(type metadata accessor for UpdateTrustRequest, a1);
}

uint64_t UpdateTrustRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100083974(a1, type metadata accessor for UpdateTrustRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*UpdateTrustRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for UpdateTrustRequest(0) + 52);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL UpdateTrustRequest.hasAccountInfo.getter()
{
  return sub_100077B90(&qword_100299F50, type metadata accessor for UpdateTrustRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall UpdateTrustRequest.clearAccountInfo()()
{
}

uint64_t UpdateTrustRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007F138(type metadata accessor for UpdateTrustRequest, a1);
}

uint64_t UpdateTrustRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10007F1D0(a1, type metadata accessor for UpdateTrustRequest);
}

uint64_t (*UpdateTrustRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t UpdateTrustRequest.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = &_swiftEmptyArrayStorage;
  a1[5] = &_swiftEmptyArrayStorage;
  uint64_t updated = (int *)type metadata accessor for UpdateTrustRequest(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + updated[9];
  uint64_t v4 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = (char *)a1 + updated[10];
  uint64_t v6 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (char *)a1 + updated[11];
  uint64_t v8 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  size_t v9 = (char *)a1 + updated[12];
  uint64_t v10 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (char *)a1 + updated[13];
  uint64_t v12 = type metadata accessor for AccountInfo(0);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);

  return v13(v11, 1, 1, v12);
}

uint64_t UpdateTrustResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007C554(type metadata accessor for UpdateTrustResponse, a1);
}

uint64_t UpdateTrustResponse.changes.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for UpdateTrustResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

void (*UpdateTrustResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for UpdateTrustResponse(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

BOOL UpdateTrustResponse.hasChanges.getter()
{
  return sub_10006DD58((uint64_t *)&unk_10029EC90, type metadata accessor for UpdateTrustResponse, type metadata accessor for Changes);
}

Swift::Void __swiftcall UpdateTrustResponse.clearChanges()()
{
}

uint64_t UpdateTrustResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for UpdateTrustResponse, a1);
}

uint64_t UpdateTrustResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for UpdateTrustResponse);
}

uint64_t (*UpdateTrustResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t UpdateTrustResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_1000756D4(type metadata accessor for UpdateTrustResponse, a1);
}

uint64_t SetRecoveryKeyRequest.recoverySigningPubKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1000059E8(v1, *(void *)(v0 + 40));
  return v1;
}

uint64_t SetRecoveryKeyRequest.recoverySigningPubKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100005A40(*(void *)(v2 + 32), *(void *)(v2 + 40));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t SetRecoveryKeyRequest.recoveryEncryptionPubKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1000059E8(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t SetRecoveryKeyRequest.recoveryEncryptionPubKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100005A40(*(void *)(v2 + 48), *(void *)(v2 + 56));
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t SetRecoveryKeyRequest.stableInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_100077028(&qword_100299F18, type metadata accessor for SetRecoveryKeyRequest, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t sub_100077028@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 44), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) != 1) {
    return sub_1000D736C((uint64_t)v14, (uint64_t)a5, a4);
  }
  *a5 = xmmword_100229520;
  a5[1] = xmmword_100229520;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t SetRecoveryKeyRequest.stableInfoAndSig.setter(uint64_t a1)
{
  return sub_100082E78(a1, type metadata accessor for SetRecoveryKeyRequest, &qword_100299F18, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo);
}

void (*SetRecoveryKeyRequest.stableInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F18);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerStableInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SetRecoveryKeyRequest(0) + 44);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F18);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F18);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerStableInfo);
  }
  return sub_100069D3C;
}

BOOL SetRecoveryKeyRequest.hasStableInfoAndSig.getter()
{
  return sub_100070934(&qword_100299F18, type metadata accessor for SetRecoveryKeyRequest, type metadata accessor for SignedPeerStableInfo);
}

Swift::Void __swiftcall SetRecoveryKeyRequest.clearStableInfoAndSig()()
{
}

uint64_t SetRecoveryKeyRequest.tlkShares.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetRecoveryKeyRequest.tlkShares.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t SetRecoveryKeyRequest.metrics.setter(uint64_t a1)
{
  return sub_1000773F0(a1, type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t sub_1000773F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 48);
  sub_10004015C(v4, &qword_10029F000);
  sub_1000D736C(a1, v4, type metadata accessor for Metrics);
  uint64_t v5 = type metadata accessor for Metrics(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 0, 1, v5);
}

void (*SetRecoveryKeyRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SetRecoveryKeyRequest(0) + 48);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL SetRecoveryKeyRequest.hasMetrics.getter()
{
  return sub_100077670(&qword_10029F000, type metadata accessor for SetRecoveryKeyRequest, type metadata accessor for Metrics);
}

BOOL sub_100077670(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 48), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall SetRecoveryKeyRequest.clearMetrics()()
{
}

uint64_t sub_100077798(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 48);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t SetRecoveryKeyRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100077850(type metadata accessor for SetRecoveryKeyRequest, a1);
}

uint64_t sub_100077850@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 52), (uint64_t)v8, &qword_100299F50);
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, (uint64_t)a2, type metadata accessor for AccountInfo);
  }
  *a2 = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, &qword_100299F50);
}

uint64_t SetRecoveryKeyRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100083974(a1, type metadata accessor for SetRecoveryKeyRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*SetRecoveryKeyRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SetRecoveryKeyRequest(0) + 52);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL SetRecoveryKeyRequest.hasAccountInfo.getter()
{
  return sub_100077B90(&qword_100299F50, type metadata accessor for SetRecoveryKeyRequest, type metadata accessor for AccountInfo);
}

BOOL sub_100077B90(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 52), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall SetRecoveryKeyRequest.clearAccountInfo()()
{
}

uint64_t sub_100077CB8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 52);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t SetRecoveryKeyRequest.viewKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetRecoveryKeyRequest.viewKeys.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t SetRecoveryKeyRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100077DA4(type metadata accessor for SetRecoveryKeyRequest, a1);
}

uint64_t sub_100077DA4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 40);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t SetRecoveryKeyRequest.unknownFields.setter(uint64_t a1)
{
  return sub_100077E3C(a1, type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t sub_100077E3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 40);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*SetRecoveryKeyRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SetRecoveryKeyRequest.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(_OWORD *)(a1 + 32) = xmmword_100229520;
  *(_OWORD *)(a1 + 48) = xmmword_100229520;
  *(void *)(a1 + 64) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 72) = &_swiftEmptyArrayStorage;
  uint64_t v2 = (int *)type metadata accessor for SetRecoveryKeyRequest(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + v2[11];
  uint64_t v4 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + v2[12];
  uint64_t v6 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = a1 + v2[13];
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(v7, 1, 1, v8);
}

uint64_t SetRecoveryKeyResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007C554(type metadata accessor for SetRecoveryKeyResponse, a1);
}

uint64_t SetRecoveryKeyResponse.changes.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for SetRecoveryKeyResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

void (*SetRecoveryKeyResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SetRecoveryKeyResponse(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

BOOL SetRecoveryKeyResponse.hasChanges.getter()
{
  return sub_10006DD58((uint64_t *)&unk_10029EC90, type metadata accessor for SetRecoveryKeyResponse, type metadata accessor for Changes);
}

Swift::Void __swiftcall SetRecoveryKeyResponse.clearChanges()()
{
}

uint64_t SetRecoveryKeyResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for SetRecoveryKeyResponse, a1);
}

uint64_t SetRecoveryKeyResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t (*SetRecoveryKeyResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SetRecoveryKeyResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_1000756D4(type metadata accessor for SetRecoveryKeyResponse, a1);
}

uint64_t RemoveRecoveryKeyRequest.stableInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000783A0(&qword_100299F18, type metadata accessor for RemoveRecoveryKeyRequest, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t sub_1000783A0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 28), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) != 1) {
    return sub_1000D736C((uint64_t)v14, (uint64_t)a5, a4);
  }
  *a5 = xmmword_100229520;
  a5[1] = xmmword_100229520;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t RemoveRecoveryKeyRequest.stableInfoAndSig.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for RemoveRecoveryKeyRequest, &qword_100299F18, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo);
}

void (*RemoveRecoveryKeyRequest.stableInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F18);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerStableInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F18);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F18);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerStableInfo);
  }
  return sub_100069D3C;
}

BOOL RemoveRecoveryKeyRequest.hasStableInfoAndSig.getter()
{
  return sub_10006E114(&qword_100299F18, type metadata accessor for RemoveRecoveryKeyRequest, type metadata accessor for SignedPeerStableInfo);
}

Swift::Void __swiftcall RemoveRecoveryKeyRequest.clearStableInfoAndSig()()
{
}

uint64_t RemoveRecoveryKeyRequest.dynamicInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_100078764(&qword_10029ECA0, type metadata accessor for RemoveRecoveryKeyRequest, type metadata accessor for SignedPeerDynamicInfo, type metadata accessor for SignedPeerDynamicInfo, a1);
}

uint64_t sub_100078764@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 32), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) != 1) {
    return sub_1000D736C((uint64_t)v14, (uint64_t)a5, a4);
  }
  *a5 = xmmword_100229520;
  a5[1] = xmmword_100229520;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t RemoveRecoveryKeyRequest.dynamicInfoAndSig.setter(uint64_t a1)
{
  return sub_10007F4FC(a1, type metadata accessor for RemoveRecoveryKeyRequest, &qword_10029ECA0, type metadata accessor for SignedPeerDynamicInfo, type metadata accessor for SignedPeerDynamicInfo);
}

void (*RemoveRecoveryKeyRequest.dynamicInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerDynamicInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 32);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029ECA0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = xmmword_100229520;
    v10[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029ECA0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for SignedPeerDynamicInfo);
  }
  return sub_10006A018;
}

BOOL RemoveRecoveryKeyRequest.hasDynamicInfoAndSig.getter()
{
  return sub_100078AAC(&qword_10029ECA0, type metadata accessor for RemoveRecoveryKeyRequest, type metadata accessor for SignedPeerDynamicInfo);
}

BOOL sub_100078AAC(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1000046DC(a1);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2(0);
  sub_10000D830(v3 + *(int *)(v11 + 32), (uint64_t)v10, a1);
  uint64_t v12 = a3(0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_10004015C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall RemoveRecoveryKeyRequest.clearDynamicInfoAndSig()()
{
}

uint64_t sub_100078BD4(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 32);
  sub_10004015C(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t RemoveRecoveryKeyRequest.metrics.setter(uint64_t a1)
{
  return sub_10007EC04(a1, type metadata accessor for RemoveRecoveryKeyRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*RemoveRecoveryKeyRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 36);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL RemoveRecoveryKeyRequest.hasMetrics.getter()
{
  return sub_100075B04(&qword_10029F000, type metadata accessor for RemoveRecoveryKeyRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall RemoveRecoveryKeyRequest.clearMetrics()()
{
}

uint64_t RemoveRecoveryKeyRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100082A00(type metadata accessor for RemoveRecoveryKeyRequest, a1);
}

uint64_t RemoveRecoveryKeyRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100082B78(a1, type metadata accessor for RemoveRecoveryKeyRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*RemoveRecoveryKeyRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for RemoveRecoveryKeyRequest(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL RemoveRecoveryKeyRequest.hasAccountInfo.getter()
{
  return sub_10007050C(&qword_100299F50, type metadata accessor for RemoveRecoveryKeyRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall RemoveRecoveryKeyRequest.clearAccountInfo()()
{
}

uint64_t RemoveRecoveryKeyRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for RemoveRecoveryKeyRequest, a1);
}

uint64_t RemoveRecoveryKeyRequest.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for RemoveRecoveryKeyRequest);
}

uint64_t (*RemoveRecoveryKeyRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t RemoveRecoveryKeyRequest.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  uint64_t v2 = (int *)type metadata accessor for RemoveRecoveryKeyRequest(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + v2[7];
  uint64_t v4 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = (char *)a1 + v2[8];
  uint64_t v6 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (char *)a1 + v2[9];
  uint64_t v8 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  size_t v9 = (char *)a1 + v2[10];
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);

  return v11(v9, 1, 1, v10);
}

uint64_t RemoveRecoveryKeyResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007CEF0(type metadata accessor for RemoveRecoveryKeyResponse, a1);
}

uint64_t RemoveRecoveryKeyResponse.changes.setter(uint64_t a1)
{
  return sub_10007D08C(a1, type metadata accessor for RemoveRecoveryKeyResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

void (*RemoveRecoveryKeyResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for RemoveRecoveryKeyResponse(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

BOOL RemoveRecoveryKeyResponse.hasChanges.getter()
{
  return sub_100070E50((uint64_t *)&unk_10029EC90, type metadata accessor for RemoveRecoveryKeyResponse, type metadata accessor for Changes);
}

Swift::Void __swiftcall RemoveRecoveryKeyResponse.clearChanges()()
{
}

uint64_t RemoveRecoveryKeyResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1000795A4(type metadata accessor for RemoveRecoveryKeyResponse, a1);
}

uint64_t sub_1000795A4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1(0) + 20);
  uint64_t v5 = type metadata accessor for Changes(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t PerformATOPRVActionsRequest.metrics.setter(uint64_t a1)
{
  return sub_10007D08C(a1, type metadata accessor for PerformATOPRVActionsRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*PerformATOPRVActionsRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for PerformATOPRVActionsRequest(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL PerformATOPRVActionsRequest.hasMetrics.getter()
{
  return sub_100070E50(&qword_10029F000, type metadata accessor for PerformATOPRVActionsRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall PerformATOPRVActionsRequest.clearMetrics()()
{
}

uint64_t PerformATOPRVActionsRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PerformATOPRVActionsRequest(0);
  sub_10000D830(v1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_100299F50);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for AccountInfo);
  }
  *a1 = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v6, &qword_100299F50);
}

uint64_t PerformATOPRVActionsRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for PerformATOPRVActionsRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*PerformATOPRVActionsRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for PerformATOPRVActionsRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL PerformATOPRVActionsRequest.hasAccountInfo.getter()
{
  return sub_10006DD58(&qword_100299F50, type metadata accessor for PerformATOPRVActionsRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall PerformATOPRVActionsRequest.clearAccountInfo()()
{
}

uint64_t PerformATOPRVActionsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_100087A68(type metadata accessor for PerformATOPRVActionsRequest, type metadata accessor for Metrics, type metadata accessor for AccountInfo, a1);
}

uint64_t AddCustodianRecoveryKeyRequest.changeToken.getter()
{
  return sub_10006E4C4(type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t AddCustodianRecoveryKeyRequest.changeToken.setter(uint64_t a1, uint64_t a2)
{
  return sub_10006E568(a1, a2, type metadata accessor for AddCustodianRecoveryKeyRequest, (void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass, (uint64_t (*)(uint64_t))sub_1000A7424);
}

void (*AddCustodianRecoveryKeyRequest.changeToken.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_100079D04;
}

void sub_100079D04(uint64_t *a1, char a2)
{
}

uint64_t AddCustodianRecoveryKeyRequest.peerID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AddCustodianRecoveryKeyRequest.peerID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    *(void *)(v2 + v5) = sub_1000A7424(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*AddCustodianRecoveryKeyRequest.peerID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 40);
  v3[9] = *(void *)(v5 + 32);
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_100079ED4;
}

void sub_100079ED4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = (void *)swift_retain();
      *(void *)(v6 + v5) = sub_1000A7424(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 96);
      uint64_t v10 = *(void *)(v2 + 88);
      type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
      swift_allocObject();
      uint64_t v11 = (void *)swift_retain();
      *(void *)(v10 + v9) = sub_1000A7424(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    *(void *)(v12 + 32) = v3;
    *(void *)(v12 + 40) = v4;
  }
  swift_bridgeObjectRelease();

  free((void *)v2);
}

uint64_t AddCustodianRecoveryKeyRequest.peer.getter@<X0>(void *a1@<X8>)
{
  return sub_10007A064(type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, a1);
}

uint64_t sub_10007A064@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_10000D830(v11, (uint64_t)v10, &qword_100299F58);
  uint64_t v12 = (int *)type metadata accessor for Peer(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v12 - 1) + 48))(v10, 1, v12) != 1) {
    return sub_1000D736C((uint64_t)v10, (uint64_t)a3, type metadata accessor for Peer);
  }
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  a3[2] = &_swiftEmptyArrayStorage;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  BOOL v13 = (char *)a3 + v12[7];
  uint64_t v14 = type metadata accessor for SignedPeerPermanentInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (char *)a3 + v12[8];
  uint64_t v16 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = (char *)a3 + v12[9];
  uint64_t v18 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (char *)a3 + v12[10];
  uint64_t v20 = type metadata accessor for SignedRecoveryVoucher(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = (char *)a3 + v12[11];
  uint64_t v22 = type metadata accessor for SignedCustodianRecoveryKey(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  return sub_10004015C((uint64_t)v10, &qword_100299F58);
}

uint64_t AddCustodianRecoveryKeyRequest.peer.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F58);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = (void *)swift_retain();
    *(void *)(v1 + v11) = sub_1000A7424(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Peer);
  uint64_t v14 = type metadata accessor for Peer(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F58);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F58);
  swift_endAccess();
  return swift_release();
}

void (*AddCustodianRecoveryKeyRequest.peer.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F58);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Peer(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F58);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = &_swiftEmptyArrayStorage;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v11 = (char *)v9 + v6[7];
    uint64_t v12 = type metadata accessor for SignedPeerPermanentInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = (char *)v9 + v6[8];
    uint64_t v14 = type metadata accessor for SignedPeerStableInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    uint64_t v15 = (char *)v9 + v6[9];
    uint64_t v16 = type metadata accessor for SignedPeerDynamicInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    uint64_t v17 = (char *)v9 + v6[10];
    uint64_t v18 = type metadata accessor for SignedRecoveryVoucher(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = (char *)v9 + v6[11];
    uint64_t v20 = type metadata accessor for SignedCustodianRecoveryKey(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    sub_10004015C((uint64_t)v5, &qword_100299F58);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Peer);
  }
  return sub_10007A81C;
}

void sub_10007A81C(uint64_t a1, char a2)
{
}

BOOL AddCustodianRecoveryKeyRequest.hasPeer.getter()
{
  return sub_10006C9B8(&qword_100299F58, type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, type metadata accessor for Peer);
}

Swift::Void __swiftcall AddCustodianRecoveryKeyRequest.clearPeer()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    *(void *)(v0 + v5) = sub_1000A7424(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Peer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F58);
  swift_endAccess();
  swift_release();
}

uint64_t AddCustodianRecoveryKeyRequest.stableInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_10007B104(&qword_100299F18, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig, type metadata accessor for SignedPeerStableInfo, type metadata accessor for SignedPeerStableInfo, a1);
}

uint64_t AddCustodianRecoveryKeyRequest.stableInfoAndSig.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F18);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = (void *)swift_retain();
    *(void *)(v1 + v11) = sub_1000A7424(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for SignedPeerStableInfo);
  uint64_t v14 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F18);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F18);
  swift_endAccess();
  return swift_release();
}

void (*AddCustodianRecoveryKeyRequest.stableInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F18);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F18);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _OWORD *v9 = xmmword_100229520;
    v9[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F18);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for SignedPeerStableInfo);
  }
  return sub_10007ADB0;
}

void sub_10007ADB0(uint64_t a1, char a2)
{
}

BOOL AddCustodianRecoveryKeyRequest.hasStableInfoAndSig.getter()
{
  return sub_10006C9B8(&qword_100299F18, type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig, type metadata accessor for SignedPeerStableInfo);
}

Swift::Void __swiftcall AddCustodianRecoveryKeyRequest.clearStableInfoAndSig()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    *(void *)(v0 + v5) = sub_1000A7424(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F18);
  swift_endAccess();
  swift_release();
}

uint64_t AddCustodianRecoveryKeyRequest.tlkShares.getter()
{
  return sub_100071DF8((void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t AddCustodianRecoveryKeyRequest.tlkShares.setter(uint64_t a1)
{
  return sub_100071EA4(a1, type metadata accessor for AddCustodianRecoveryKeyRequest, (void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass, (uint64_t (*)(uint64_t))sub_1000A7424, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
}

void (*AddCustodianRecoveryKeyRequest.tlkShares.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_10007B094;
}

void sub_10007B094(uint64_t *a1, char a2)
{
}

uint64_t AddCustodianRecoveryKeyRequest.dynamicInfoAndSig.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_10007B104(&qword_10029ECA0, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig, type metadata accessor for SignedPeerDynamicInfo, type metadata accessor for SignedPeerDynamicInfo, a1);
}

uint64_t sub_10007B104@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v5 + *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20)) + *a2;
  swift_beginAccess();
  sub_10000D830(v15, (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16) != 1) {
    return sub_1000D736C((uint64_t)v14, (uint64_t)a5, a4);
  }
  *a5 = xmmword_100229520;
  a5[1] = xmmword_100229520;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t AddCustodianRecoveryKeyRequest.dynamicInfoAndSig.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = (void *)swift_retain();
    *(void *)(v1 + v11) = sub_1000A7424(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for SignedPeerDynamicInfo);
  uint64_t v14 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_10029ECA0);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_10029ECA0);
  swift_endAccess();
  return swift_release();
}

void (*AddCustodianRecoveryKeyRequest.dynamicInfoAndSig.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_10029ECA0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _OWORD *v9 = xmmword_100229520;
    v9[1] = xmmword_100229520;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029ECA0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for SignedPeerDynamicInfo);
  }
  return sub_10007B5CC;
}

void sub_10007B5CC(uint64_t a1, char a2)
{
}

BOOL AddCustodianRecoveryKeyRequest.hasDynamicInfoAndSig.getter()
{
  return sub_10006C9B8(&qword_10029ECA0, type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig, type metadata accessor for SignedPeerDynamicInfo);
}

Swift::Void __swiftcall AddCustodianRecoveryKeyRequest.clearDynamicInfoAndSig()()
{
  uint64_t v1 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    *(void *)(v0 + v5) = sub_1000A7424(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_10029ECA0);
  swift_endAccess();
  swift_release();
}

uint64_t AddCustodianRecoveryKeyRequest.metrics.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = (void *)swift_retain();
    *(void *)(v1 + v11) = sub_1000A7424(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for Metrics);
  uint64_t v14 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_10029F000);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_10029F000);
  swift_endAccess();
  return swift_release();
}

void (*AddCustodianRecoveryKeyRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Metrics);
  }
  return sub_10007BB24;
}

void sub_10007BB24(uint64_t a1, char a2)
{
}

BOOL AddCustodianRecoveryKeyRequest.hasMetrics.getter()
{
  return sub_10006C9B8(&qword_10029F000, type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, type metadata accessor for Metrics);
}

Swift::Void __swiftcall AddCustodianRecoveryKeyRequest.clearMetrics()()
{
  uint64_t v1 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    *(void *)(v0 + v5) = sub_1000A7424(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_10029F000);
  swift_endAccess();
  swift_release();
}

uint64_t AddCustodianRecoveryKeyRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_10007BD24(type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, a1);
}

uint64_t sub_10007BD24@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  sub_10000D830(v11, (uint64_t)v10, &qword_100299F50);
  uint64_t v12 = type metadata accessor for AccountInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1) {
    return sub_1000D736C((uint64_t)v10, (uint64_t)a3, type metadata accessor for AccountInfo);
  }
  *a3 = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v10, &qword_100299F50);
}

uint64_t AddCustodianRecoveryKeyRequest.accountInfo.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = (void *)swift_retain();
    *(void *)(v1 + v11) = sub_1000A7424(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for AccountInfo);
  uint64_t v14 = type metadata accessor for AccountInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_100299F50);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_100299F50);
  swift_endAccess();
  return swift_release();
}

void (*AddCustodianRecoveryKeyRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _DWORD *v9 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for AccountInfo);
  }
  return sub_10007C1EC;
}

void sub_10007C1EC(uint64_t a1, char a2)
{
}

BOOL AddCustodianRecoveryKeyRequest.hasAccountInfo.getter()
{
  return sub_10006C9B8(&qword_100299F50, type metadata accessor for AddCustodianRecoveryKeyRequest, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall AddCustodianRecoveryKeyRequest.clearAccountInfo()()
{
  uint64_t v1 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = (void *)swift_retain();
    *(void *)(v0 + v5) = sub_1000A7424(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_100299F50);
  swift_endAccess();
  swift_release();
}

uint64_t AddCustodianRecoveryKeyRequest.viewKeys.getter()
{
  return sub_100071DF8((void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t AddCustodianRecoveryKeyRequest.viewKeys.setter(uint64_t a1)
{
  return sub_100071EA4(a1, type metadata accessor for AddCustodianRecoveryKeyRequest, (void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass, (uint64_t (*)(uint64_t))sub_1000A7424, &OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
}

void (*AddCustodianRecoveryKeyRequest.viewKeys.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyRequest(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  v3[9] = *v5;
  swift_bridgeObjectRetain();
  return sub_10007C4D0;
}

void sub_10007C4D0(uint64_t *a1, char a2)
{
}

uint64_t AddCustodianRecoveryKeyRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F744(type metadata accessor for AddCustodianRecoveryKeyRequest, &qword_100298D90, &qword_100299EC8, a1);
}

uint64_t AddCustodianRecoveryKeyResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007C554(type metadata accessor for AddCustodianRecoveryKeyResponse, a1);
}

uint64_t sub_10007C554@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 24), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  uint64_t v10 = type metadata accessor for Changes(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, a2, type metadata accessor for Changes);
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(void *)(a2 + 16) = &_swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 24) = xmmword_100229520;
  *(_OWORD *)(a2 + 40) = xmmword_100229520;
  *(unsigned char *)(a2 + 56) = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
}

uint64_t AddCustodianRecoveryKeyResponse.changes.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for AddCustodianRecoveryKeyResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

void (*AddCustodianRecoveryKeyResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for AddCustodianRecoveryKeyResponse(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

BOOL AddCustodianRecoveryKeyResponse.hasChanges.getter()
{
  return sub_10006DD58((uint64_t *)&unk_10029EC90, type metadata accessor for AddCustodianRecoveryKeyResponse, type metadata accessor for Changes);
}

Swift::Void __swiftcall AddCustodianRecoveryKeyResponse.clearChanges()()
{
}

uint64_t AddCustodianRecoveryKeyResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for AddCustodianRecoveryKeyResponse, a1);
}

uint64_t AddCustodianRecoveryKeyResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for AddCustodianRecoveryKeyResponse);
}

uint64_t (*AddCustodianRecoveryKeyResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t AddCustodianRecoveryKeyResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_1000756D4(type metadata accessor for AddCustodianRecoveryKeyResponse, a1);
}

uint64_t FetchChangesRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for FetchChangesRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*FetchChangesRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchChangesRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL FetchChangesRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for FetchChangesRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall FetchChangesRequest.clearMetrics()()
{
}

uint64_t FetchChangesRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for FetchChangesRequest, a1);
}

uint64_t FetchChangesRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for FetchChangesRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*FetchChangesRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchChangesRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL FetchChangesRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for FetchChangesRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall FetchChangesRequest.clearAccountInfo()()
{
}

uint64_t FetchChangesRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for FetchChangesRequest, a1);
}

uint64_t FetchChangesRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for FetchChangesRequest);
}

uint64_t (*FetchChangesRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchChangesRequest.init()@<X0>(void *a1@<X8>)
{
  return sub_10007DFEC(type metadata accessor for FetchChangesRequest, a1);
}

uint64_t FetchChangesResponse.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007CEF0(type metadata accessor for FetchChangesResponse, a1);
}

uint64_t sub_10007CEF0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 20), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  uint64_t v10 = type metadata accessor for Changes(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, a2, type metadata accessor for Changes);
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(void *)(a2 + 16) = &_swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 24) = xmmword_100229520;
  *(_OWORD *)(a2 + 40) = xmmword_100229520;
  *(unsigned char *)(a2 + 56) = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
}

uint64_t FetchChangesResponse.changes.setter(uint64_t a1)
{
  return sub_10007D08C(a1, type metadata accessor for FetchChangesResponse, (uint64_t *)&unk_10029EC90, type metadata accessor for Changes, type metadata accessor for Changes);
}

uint64_t sub_10007D08C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 20);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*FetchChangesResponse.changes.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Changes(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchChangesResponse(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0xE000000000000000;
    *((void *)v10 + 2) = &_swiftEmptyArrayStorage;
    *(_OWORD *)(v10 + 24) = xmmword_100229520;
    *(_OWORD *)(v10 + 40) = xmmword_100229520;
    v10[56] = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EC90);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Changes);
  }
  return sub_100070DD4;
}

BOOL FetchChangesResponse.hasChanges.getter()
{
  return sub_100070E50((uint64_t *)&unk_10029EC90, type metadata accessor for FetchChangesResponse, type metadata accessor for Changes);
}

Swift::Void __swiftcall FetchChangesResponse.clearChanges()()
{
}

uint64_t FetchChangesResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1000795A4(type metadata accessor for FetchChangesResponse, a1);
}

uint64_t FetchViableBottlesRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for FetchViableBottlesRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*FetchViableBottlesRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchViableBottlesRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL FetchViableBottlesRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for FetchViableBottlesRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall FetchViableBottlesRequest.clearMetrics()()
{
}

uint64_t FetchViableBottlesRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for FetchViableBottlesRequest, a1);
}

uint64_t FetchViableBottlesRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for FetchViableBottlesRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*FetchViableBottlesRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchViableBottlesRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL FetchViableBottlesRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for FetchViableBottlesRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall FetchViableBottlesRequest.clearAccountInfo()()
{
}

uint64_t FetchViableBottlesRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for FetchViableBottlesRequest, a1);
}

uint64_t FetchViableBottlesRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for FetchViableBottlesRequest);
}

uint64_t (*FetchViableBottlesRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchViableBottlesRequest.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t ViableBottlesRequest = type metadata accessor for FetchViableBottlesRequest(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(ViableBottlesRequest + 24);
  uint64_t v4 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + *(int *)(ViableBottlesRequest + 28);
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, 1, 1, v6);
}

uint64_t FetchViableBottlesResponse.legacyRecords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchViableBottlesResponse.legacyRecords.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t FetchViableBottlesResponse.totalEscrowRecordsFullyViable.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FetchViableBottlesResponse.totalEscrowRecordsFullyViable.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t FetchViableBottlesResponse.totalEscrowRecordsPartiallyViable.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FetchViableBottlesResponse.totalEscrowRecordsPartiallyViable.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t FetchViableBottlesResponse.totalEscrowRecordsLegacy.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t FetchViableBottlesResponse.totalEscrowRecordsLegacy.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t FetchViableBottlesResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000820E0(type metadata accessor for FetchViableBottlesResponse, a1);
}

uint64_t FetchViableBottlesResponse.unknownFields.setter(uint64_t a1)
{
  return sub_100082178(a1, type metadata accessor for FetchViableBottlesResponse);
}

uint64_t (*FetchViableBottlesResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchViableBottlesResponse.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 8) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 16) = &_swiftEmptyArrayStorage;
  type metadata accessor for FetchViableBottlesResponse(0);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t FetchRecoverableTLKSharesRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for FetchRecoverableTLKSharesRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*FetchRecoverableTLKSharesRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchRecoverableTLKSharesRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL FetchRecoverableTLKSharesRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for FetchRecoverableTLKSharesRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall FetchRecoverableTLKSharesRequest.clearMetrics()()
{
}

uint64_t FetchRecoverableTLKSharesRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for FetchRecoverableTLKSharesRequest, a1);
}

uint64_t FetchRecoverableTLKSharesRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for FetchRecoverableTLKSharesRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*FetchRecoverableTLKSharesRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchRecoverableTLKSharesRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL FetchRecoverableTLKSharesRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for FetchRecoverableTLKSharesRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall FetchRecoverableTLKSharesRequest.clearAccountInfo()()
{
}

uint64_t FetchRecoverableTLKSharesRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for FetchRecoverableTLKSharesRequest, a1);
}

uint64_t FetchRecoverableTLKSharesRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t (*FetchRecoverableTLKSharesRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchRecoverableTLKSharesRequest.init()@<X0>(void *a1@<X8>)
{
  return sub_10007DFEC(type metadata accessor for FetchRecoverableTLKSharesRequest, a1);
}

uint64_t sub_10007DFEC@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  uint64_t v3 = a1(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(v3 + 24);
  uint64_t v5 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + *(int *)(v3 + 28);
  uint64_t v7 = type metadata accessor for AccountInfo(0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t FetchRecoverableTLKSharesResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for FetchRecoverableTLKSharesResponse, a1);
}

uint64_t FetchRecoverableTLKSharesResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for FetchRecoverableTLKSharesResponse);
}

uint64_t (*FetchRecoverableTLKSharesResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchRecoverableTLKSharesResponse.View.keys.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for FetchRecoverableTLKSharesResponse.View, &qword_100299648, type metadata accessor for ViewKeysRecords, type metadata accessor for ViewKeysRecords);
}

void (*FetchRecoverableTLKSharesResponse.View.keys.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299648);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for ViewKeysRecords(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchRecoverableTLKSharesResponse.View(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299648);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = &v10[v6[5]];
    uint64_t v13 = sub_100221D50();
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    v14(v12, 1, 1, v13);
    v14(&v10[v6[6]], 1, 1, v13);
    v14(&v10[v6[7]], 1, 1, v13);
    sub_10004015C((uint64_t)v5, &qword_100299648);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for ViewKeysRecords);
  }
  return sub_10007E3B0;
}

void sub_10007E3B0(uint64_t a1, char a2)
{
}

BOOL FetchRecoverableTLKSharesResponse.View.hasKeys.getter()
{
  return sub_10006E114(&qword_100299648, type metadata accessor for FetchRecoverableTLKSharesResponse.View, type metadata accessor for ViewKeysRecords);
}

Swift::Void __swiftcall FetchRecoverableTLKSharesResponse.View.clearKeys()()
{
}

uint64_t FetchRecoverableTLKSharesResponse.View.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for FetchRecoverableTLKSharesResponse.View, a1);
}

uint64_t FetchRecoverableTLKSharesResponse.View.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for FetchRecoverableTLKSharesResponse.View);
}

uint64_t (*FetchRecoverableTLKSharesResponse.View.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchRecoverableTLKSharesResponse.View.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = &_swiftEmptyArrayStorage;
  uint64_t RecoverableTLKShares = type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(RecoverableTLKShares + 28);
  uint64_t v4 = type metadata accessor for ViewKeysRecords(0);
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t FetchRecoverableTLKSharesResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_10007EB70((uint64_t)&_swiftEmptyArrayStorage, (void (*)(void))type metadata accessor for FetchRecoverableTLKSharesResponse, a1);
}

uint64_t FetchPolicyDocumentsRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for FetchPolicyDocumentsRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*FetchPolicyDocumentsRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchPolicyDocumentsRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL FetchPolicyDocumentsRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for FetchPolicyDocumentsRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall FetchPolicyDocumentsRequest.clearMetrics()()
{
}

uint64_t FetchPolicyDocumentsRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for FetchPolicyDocumentsRequest, a1);
}

uint64_t FetchPolicyDocumentsRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for FetchPolicyDocumentsRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*FetchPolicyDocumentsRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for FetchPolicyDocumentsRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL FetchPolicyDocumentsRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for FetchPolicyDocumentsRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall FetchPolicyDocumentsRequest.clearAccountInfo()()
{
}

uint64_t FetchPolicyDocumentsRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for FetchPolicyDocumentsRequest, a1);
}

uint64_t FetchPolicyDocumentsRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t (*FetchPolicyDocumentsRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchPolicyDocumentsRequest.init()@<X0>(void *a1@<X8>)
{
  return sub_10008282C((uint64_t)&_swiftEmptyArrayStorage, type metadata accessor for FetchPolicyDocumentsRequest, a1);
}

uint64_t FetchPolicyDocumentsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for FetchPolicyDocumentsResponse, a1);
}

uint64_t FetchPolicyDocumentsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for FetchPolicyDocumentsResponse);
}

uint64_t (*FetchPolicyDocumentsResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t FetchPolicyDocumentsResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_10007EB70((uint64_t)&_swiftEmptyArrayStorage, (void (*)(void))type metadata accessor for FetchPolicyDocumentsResponse, a1);
}

uint64_t sub_10007EB70@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a2(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t GetRepairActionRequest.performCleanup.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t GetRepairActionRequest.performCleanup.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t GetRepairActionRequest.metrics.setter(uint64_t a1)
{
  return sub_10007EC04(a1, type metadata accessor for GetRepairActionRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

uint64_t sub_10007EC04(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 36);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*GetRepairActionRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for GetRepairActionRequest(0) + 36);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL GetRepairActionRequest.hasMetrics.getter()
{
  return sub_100075B04(&qword_10029F000, type metadata accessor for GetRepairActionRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall GetRepairActionRequest.clearMetrics()()
{
}

uint64_t GetRepairActionRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100082A00(type metadata accessor for GetRepairActionRequest, a1);
}

uint64_t GetRepairActionRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100082B78(a1, type metadata accessor for GetRepairActionRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*GetRepairActionRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for GetRepairActionRequest(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL GetRepairActionRequest.hasAccountInfo.getter()
{
  return sub_10007050C(&qword_100299F50, type metadata accessor for GetRepairActionRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall GetRepairActionRequest.clearAccountInfo()()
{
}

uint64_t GetRepairActionRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10007F138(type metadata accessor for GetRepairActionRequest, a1);
}

uint64_t sub_10007F138@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 32);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t GetRepairActionRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10007F1D0(a1, type metadata accessor for GetRepairActionRequest);
}

uint64_t sub_10007F1D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 32);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*GetRepairActionRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t GetRepairActionRequest.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 32) = 0;
  uint64_t RepairActionRequest = type metadata accessor for GetRepairActionRequest(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(RepairActionRequest + 36);
  uint64_t v4 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + *(int *)(RepairActionRequest + 40);
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, 1, 1, v6);
}

uint64_t EscrowProxyFederationMoveRecordRequest.metrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  sub_10000D830(v1 + *(int *)(v7 + 32), (uint64_t)v6, &qword_10029F000);
  uint64_t v8 = type metadata accessor for Metrics(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for Metrics);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v6, &qword_10029F000);
}

uint64_t EscrowProxyFederationMoveRecordRequest.metrics.setter(uint64_t a1)
{
  return sub_10007F4FC(a1, type metadata accessor for EscrowProxyFederationMoveRecordRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

uint64_t sub_10007F4FC(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 32);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*EscrowProxyFederationMoveRecordRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowProxyFederationMoveRecordRequest(0) + 32);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL EscrowProxyFederationMoveRecordRequest.hasMetrics.getter()
{
  return sub_100078AAC(&qword_10029F000, type metadata accessor for EscrowProxyFederationMoveRecordRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall EscrowProxyFederationMoveRecordRequest.clearMetrics()()
{
}

uint64_t EscrowProxyFederationMoveRecordRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100086DB8(type metadata accessor for EscrowProxyFederationMoveRecordRequest, a1);
}

uint64_t EscrowProxyFederationMoveRecordRequest.unknownFields.setter(uint64_t a1)
{
  return sub_100086E50(a1, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

uint64_t (*EscrowProxyFederationMoveRecordRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t EscrowProxyFederationMoveRecordRequest.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  uint64_t v2 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 32);
  uint64_t v4 = type metadata accessor for Metrics(0);
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t GetRepairActionResponse.repairAction.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20));
  swift_beginAccess();
  return *(void *)(v1 + 16);
}

uint64_t GetRepairActionResponse.repairAction.setter(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1000D8278(v7);
    swift_release();
    *(void *)(v3 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = *(void *)(v3 + v6);
  uint64_t result = swift_beginAccess();
  *(void *)(v9 + 16) = a1;
  *(unsigned char *)(v9 + 24) = a2 & 1;
  return result;
}

void (*GetRepairActionResponse.repairAction.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 24);
  v3[9] = *(void *)(v5 + 16);
  *((unsigned char *)v3 + 80) = v6;
  return sub_10007FA6C;
}

void sub_10007FA6C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char v5 = *(unsigned char *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 88);
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_1000D8278(v9);
    swift_release();
    *(void *)(v8 + v7) = v10;
    swift_release();
  }
LABEL_4:
  uint64_t v11 = *(void *)(*(void *)(v3 + 88) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(void *)(v11 + 16) = v4;
  *(unsigned char *)(v11 + 24) = v5;

  free((void *)v3);
}

uint64_t GetRepairActionResponse.escrowRecordMoveRequest.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  __chkstk_darwin(v3 - 8, v4);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20))
     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  sub_10000D830(v7, (uint64_t)v6, (uint64_t *)&unk_10029EFF0);
  uint64_t v8 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  }
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v9 = (char *)a1 + *(int *)(v8 + 32);
  uint64_t v10 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return sub_10004015C((uint64_t)v6, (uint64_t *)&unk_10029EFF0);
}

uint64_t GetRepairActionResponse.escrowRecordMoveRequest.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    uint64_t v14 = sub_1000D8278(v13);
    swift_release();
    *(void *)(v2 + v12) = v14;
    swift_release();
  }
  uint64_t v15 = *(void *)(v2 + v12);
  sub_1000D736C(a1, (uint64_t)v11, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  uint64_t v16 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
  sub_1000D8B9C((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_10029EFF0);
  uint64_t v17 = v15
      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v8, v17, (uint64_t *)&unk_10029EFF0);
  swift_endAccess();
  return swift_release();
}

void (*GetRepairActionResponse.escrowRecordMoveRequest.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20))
      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, (uint64_t *)&unk_10029EFF0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    v9[1] = 0xE000000000000000;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    void v9[4] = 0;
    v9[5] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 32);
    uint64_t v12 = type metadata accessor for Metrics(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EFF0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  }
  return sub_1000800C4;
}

void sub_1000800C4(uint64_t a1, char a2)
{
}

BOOL GetRepairActionResponse.hasEscrowRecordMoveRequest.getter()
{
  return sub_10006C9B8((uint64_t *)&unk_10029EFF0, type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

Swift::Void __swiftcall GetRepairActionResponse.clearEscrowRecordMoveRequest()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1000D8278(v7);
    swift_release();
    *(void *)(v1 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = v9
      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v5, v11, (uint64_t *)&unk_10029EFF0);
  swift_endAccess();
  swift_release();
}

uint64_t GetRepairActionResponse.totalEscrowRecords.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
}

uint64_t GetRepairActionResponse.totalEscrowRecords.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
}

void (*GetRepairActionResponse.totalEscrowRecords.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080368;
}

void sub_100080368(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.collectableEscrowRecords.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
}

uint64_t sub_100080394(uint64_t (*a1)(void), void *a2)
{
  uint64_t v3 = *(void *)(v2 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  return *(void *)v3;
}

uint64_t GetRepairActionResponse.collectableEscrowRecords.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
}

uint64_t sub_100080400(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1000D8278(v7);
    swift_release();
    *(void *)(v4 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = (void *)(*(void *)(v4 + v6) + *a2);
  uint64_t result = swift_beginAccess();
  void *v9 = a1;
  return result;
}

void (*GetRepairActionResponse.collectableEscrowRecords.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080550;
}

void sub_100080550(uint64_t *a1, char a2)
{
}

void sub_10008055C(uint64_t *a1, char a2, void *a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v8 = *(int *)(v5 + 88);
    uint64_t v9 = *(void *)(v5 + 80);
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_1000D8278(v10);
    swift_release();
    *(void *)(v9 + v8) = v11;
    swift_release();
  }
LABEL_4:
  uint64_t v12 = (void *)(*(void *)(*(void *)(v5 + 80) + *(int *)(v5 + 88)) + *a3);
  swift_beginAccess();
  *uint64_t v12 = v6;

  free((void *)v5);
}

uint64_t GetRepairActionResponse.collectedEscrowRecords.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
}

uint64_t GetRepairActionResponse.collectedEscrowRecords.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
}

void (*GetRepairActionResponse.collectedEscrowRecords.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080714;
}

void sub_100080714(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.escrowRecordGarbageCollectionEnabled.getter()
{
  return sub_100080A48(&OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
}

uint64_t GetRepairActionResponse.escrowRecordGarbageCollectionEnabled.setter(char a1)
{
  return sub_100080AAC(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
}

void (*GetRepairActionResponse.escrowRecordGarbageCollectionEnabled.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_1000807CC;
}

void sub_1000807CC(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.totalTlkShares.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
}

uint64_t GetRepairActionResponse.totalTlkShares.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
}

void (*GetRepairActionResponse.totalTlkShares.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080898;
}

void sub_100080898(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.collectableTlkShares.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
}

uint64_t GetRepairActionResponse.collectableTlkShares.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
}

void (*GetRepairActionResponse.collectableTlkShares.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080964;
}

void sub_100080964(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.collectedTlkShares.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
}

uint64_t GetRepairActionResponse.collectedTlkShares.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
}

void (*GetRepairActionResponse.collectedTlkShares.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080A30;
}

void sub_100080A30(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.tlkShareGarbageCollectionEnabled.getter()
{
  return sub_100080A48(&OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
}

uint64_t sub_100080A48(void *a1)
{
  uint64_t v2 = (unsigned __int8 *)(*(void *)(v1 + *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20)) + *a1);
  swift_beginAccess();
  return *v2;
}

uint64_t GetRepairActionResponse.tlkShareGarbageCollectionEnabled.setter(char a1)
{
  return sub_100080AAC(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
}

uint64_t sub_100080AAC(char a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1000D8278(v7);
    swift_release();
    *(void *)(v4 + v6) = v8;
    swift_release();
  }
  uint64_t v9 = (unsigned char *)(*(void *)(v4 + v6) + *a2);
  uint64_t result = swift_beginAccess();
  unsigned char *v9 = a1 & 1;
  return result;
}

void (*GetRepairActionResponse.tlkShareGarbageCollectionEnabled.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_100080C00;
}

void sub_100080C00(uint64_t *a1, char a2)
{
}

void sub_100080C0C(uint64_t *a1, char a2, void *a3)
{
  uint64_t v5 = *a1;
  char v6 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v8 = *(int *)(v5 + 80);
    uint64_t v9 = *(void *)(v5 + 72);
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_1000D8278(v10);
    swift_release();
    *(void *)(v9 + v8) = v11;
    swift_release();
  }
LABEL_4:
  uint64_t v12 = (unsigned char *)(*(void *)(*(void *)(v5 + 72) + *(int *)(v5 + 80)) + *a3);
  swift_beginAccess();
  *uint64_t v12 = v6;

  free((void *)v5);
}

uint64_t GetRepairActionResponse.totalPeers.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
}

uint64_t GetRepairActionResponse.totalPeers.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
}

void (*GetRepairActionResponse.totalPeers.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080DC0;
}

void sub_100080DC0(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.trustedPeers.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
}

uint64_t GetRepairActionResponse.trustedPeers.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
}

void (*GetRepairActionResponse.trustedPeers.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080E8C;
}

void sub_100080E8C(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.superfluousPeers.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
}

uint64_t GetRepairActionResponse.superfluousPeers.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
}

void (*GetRepairActionResponse.superfluousPeers.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100080F58;
}

void sub_100080F58(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.peersCleanedup.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
}

uint64_t GetRepairActionResponse.peersCleanedup.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
}

void (*GetRepairActionResponse.peersCleanedup.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100081024;
}

void sub_100081024(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.superfluousPeersCleanupEnabled.getter()
{
  return sub_100080A48(&OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
}

uint64_t GetRepairActionResponse.superfluousPeersCleanupEnabled.setter(char a1)
{
  return sub_100080AAC(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
}

void (*GetRepairActionResponse.superfluousPeersCleanupEnabled.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_1000810DC;
}

void sub_1000810DC(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.duplicateEscrowRecords.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
}

uint64_t GetRepairActionResponse.duplicateEscrowRecords.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
}

void (*GetRepairActionResponse.duplicateEscrowRecords.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_1000811A8;
}

void sub_1000811A8(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.unsetHmacpeers.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
}

uint64_t GetRepairActionResponse.unsetHmacpeers.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
}

void (*GetRepairActionResponse.unsetHmacpeers.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100081274;
}

void sub_100081274(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.updatedHmacpeers.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
}

uint64_t GetRepairActionResponse.updatedHmacpeers.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
}

void (*GetRepairActionResponse.updatedHmacpeers.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100081340;
}

void sub_100081340(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.totalDeviceStateRecords.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
}

uint64_t GetRepairActionResponse.totalDeviceStateRecords.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
}

void (*GetRepairActionResponse.totalDeviceStateRecords.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_10008140C;
}

void sub_10008140C(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.collectableDeviceStateRecords.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
}

uint64_t GetRepairActionResponse.collectableDeviceStateRecords.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
}

void (*GetRepairActionResponse.collectableDeviceStateRecords.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_1000814D8;
}

void sub_1000814D8(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.collectedDeviceStateRecords.getter()
{
  return sub_100080394(type metadata accessor for GetRepairActionResponse, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
}

uint64_t GetRepairActionResponse.collectedDeviceStateRecords.setter(uint64_t a1)
{
  return sub_100080400(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
}

void (*GetRepairActionResponse.collectedDeviceStateRecords.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_1000815A4;
}

void sub_1000815A4(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.tlkShareDeletionFailed.getter()
{
  return sub_100080A48(&OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
}

uint64_t GetRepairActionResponse.tlkShareDeletionFailed.setter(char a1)
{
  return sub_100080AAC(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
}

void (*GetRepairActionResponse.tlkShareDeletionFailed.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_10008165C;
}

void sub_10008165C(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.deviceStateRecordDeletionFailed.getter()
{
  return sub_100080A48(&OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
}

uint64_t GetRepairActionResponse.deviceStateRecordDeletionFailed.setter(char a1)
{
  return sub_100080AAC(a1, &OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
}

void (*GetRepairActionResponse.deviceStateRecordDeletionFailed.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5;
  return sub_100081714;
}

void sub_100081714(uint64_t *a1, char a2)
{
}

uint64_t GetRepairActionResponse.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F744(type metadata accessor for GetRepairActionResponse, &qword_100298E00, &qword_100299ED0, a1);
}

uint64_t SupportAppView.lastReport.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000817A0((uint64_t *)&unk_10029ED30, type metadata accessor for SupportAppView, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp, (void (*)(void))&Google_Protobuf_Timestamp.init(), a1);
}

uint64_t sub_1000817A0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_1000046DC(a1);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_10000D830(v5 + *(int *)(v15 + 28), (uint64_t)v14, a1);
  uint64_t v16 = a3(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a5, v14, v16);
  }
  a4();
  return sub_10004015C((uint64_t)v14, a1);
}

uint64_t SupportAppView.lastReport.setter(uint64_t a1)
{
  return sub_10008191C(a1, type metadata accessor for SupportAppView, (uint64_t *)&unk_10029ED30, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

uint64_t sub_10008191C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v8 = v4 + *(int *)(a2(0) + 28);
  sub_10004015C(v8, a3);
  uint64_t v9 = a4(0);
  uint64_t v12 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v8, a1, v9);
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56);

  return v10(v8, 0, 1, v9);
}

void (*SupportAppView.lastReport.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221DC0();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SupportAppView(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221DB0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_1000696B4;
}

BOOL SupportAppView.hasLastReport.getter()
{
  return sub_10006E114((uint64_t *)&unk_10029ED30, type metadata accessor for SupportAppView, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

Swift::Void __swiftcall SupportAppView.clearLastReport()()
{
}

uint64_t SupportAppView.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SupportAppView.enabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t SupportAppView.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for SupportAppView, a1);
}

uint64_t SupportAppView.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for SupportAppView);
}

uint64_t (*SupportAppView.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SupportAppView.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v2 = type metadata accessor for SupportAppView(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  uint64_t v4 = sub_100221DC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t RemoveUnreadableCKServerDataRequest.isGuitarfish.getter()
{
  return *v0;
}

uint64_t RemoveUnreadableCKServerDataRequest.isGuitarfish.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t SupportAppDevice.octagon.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t SupportAppDevice.octagon.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*SupportAppDevice.octagon.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t SupportAppDevice.escrow.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t SupportAppDevice.escrow.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*SupportAppDevice.escrow.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t SupportAppDevice.serialNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SupportAppDevice.serialNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t SupportAppDevice.views.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SupportAppDevice.views.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t SupportAppDevice.lastHealthReport.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100083374(type metadata accessor for SupportAppDevice, a1);
}

uint64_t SupportAppDevice.lastHealthReport.setter(uint64_t a1)
{
  return sub_1000834C8(a1, type metadata accessor for SupportAppDevice);
}

void (*SupportAppDevice.lastHealthReport.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221DC0();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for SupportAppDevice(0) + 48);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221DB0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_1000696B4;
}

BOOL SupportAppDevice.hasLastHealthReport.getter()
{
  return sub_100077670((uint64_t *)&unk_10029ED30, type metadata accessor for SupportAppDevice, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

Swift::Void __swiftcall SupportAppDevice.clearLastHealthReport()()
{
}

uint64_t SupportAppDevice.status.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t SupportAppDevice.status.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t SupportAppDevice.modelID.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SupportAppDevice.modelID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t SupportAppDevice.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000820E0(type metadata accessor for SupportAppDevice, a1);
}

uint64_t sub_1000820E0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 44);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t SupportAppDevice.unknownFields.setter(uint64_t a1)
{
  return sub_100082178(a1, type metadata accessor for SupportAppDevice);
}

uint64_t sub_100082178(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 44);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*SupportAppDevice.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t SupportAppDevice.init()@<X0>(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v2 = type metadata accessor for SupportAppDevice(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(v2 + 48);
  uint64_t v4 = sub_100221DC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t GetSupportAppInfoRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for GetSupportAppInfoRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*GetSupportAppInfoRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for GetSupportAppInfoRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL GetSupportAppInfoRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for GetSupportAppInfoRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall GetSupportAppInfoRequest.clearMetrics()()
{
}

uint64_t GetSupportAppInfoRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for GetSupportAppInfoRequest, a1);
}

uint64_t GetSupportAppInfoRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for GetSupportAppInfoRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*GetSupportAppInfoRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for GetSupportAppInfoRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL GetSupportAppInfoRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for GetSupportAppInfoRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall GetSupportAppInfoRequest.clearAccountInfo()()
{
}

uint64_t GetSupportAppInfoRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for GetSupportAppInfoRequest, a1);
}

uint64_t GetSupportAppInfoRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t (*GetSupportAppInfoRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t GetSupportAppInfoRequest.init()@<X0>(void *a1@<X8>)
{
  return sub_10008282C(0, type metadata accessor for GetSupportAppInfoRequest, a1);
}

uint64_t sub_10008282C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = a2(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v5 = (char *)a3 + *(int *)(v4 + 24);
  uint64_t v6 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (char *)a3 + *(int *)(v4 + 28);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  size_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(v7, 1, 1, v8);
}

uint64_t GetSupportAppInfoResponse.more.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t GetSupportAppInfoResponse.more.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t GetSupportAppInfoResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F8EC(type metadata accessor for GetSupportAppInfoResponse, a1);
}

uint64_t GetSupportAppInfoResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10006F984(a1, type metadata accessor for GetSupportAppInfoResponse);
}

uint64_t (*GetSupportAppInfoResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t GetSupportAppInfoResponse.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(unsigned char *)(a1 + 40) = 0;
  type metadata accessor for GetSupportAppInfoResponse(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t ResetAccountCDPContentsRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100082A00(type metadata accessor for ResetAccountCDPContentsRequest, a1);
}

uint64_t sub_100082A00@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 40), (uint64_t)v8, &qword_100299F50);
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, (uint64_t)a2, type metadata accessor for AccountInfo);
  }
  *a2 = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, &qword_100299F50);
}

uint64_t ResetAccountCDPContentsRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100082B78(a1, type metadata accessor for ResetAccountCDPContentsRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

uint64_t sub_100082B78(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 40);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*ResetAccountCDPContentsRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ResetAccountCDPContentsRequest(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL ResetAccountCDPContentsRequest.hasAccountInfo.getter()
{
  return sub_10007050C(&qword_100299F50, type metadata accessor for ResetAccountCDPContentsRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall ResetAccountCDPContentsRequest.clearAccountInfo()()
{
}

uint64_t ResetAccountCDPContentsRequest.metrics.setter(uint64_t a1)
{
  return sub_100082E78(a1, type metadata accessor for ResetAccountCDPContentsRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

uint64_t sub_100082E78(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 44);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*ResetAccountCDPContentsRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ResetAccountCDPContentsRequest(0) + 44);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL ResetAccountCDPContentsRequest.hasMetrics.getter()
{
  return sub_100070934(&qword_10029F000, type metadata accessor for ResetAccountCDPContentsRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall ResetAccountCDPContentsRequest.clearMetrics()()
{
}

uint64_t ResetAccountCDPContentsRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F8EC(type metadata accessor for ResetAccountCDPContentsRequest, a1);
}

uint64_t ResetAccountCDPContentsRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006F984(a1, type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t (*ResetAccountCDPContentsRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t ResetAccountCDPContentsRequest.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1000831C8(type metadata accessor for ResetAccountCDPContentsRequest, a1);
}

uint64_t sub_1000831C8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0xE000000000000000;
  *(_WORD *)(a2 + 48) = 0;
  uint64_t v3 = a1(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(v3 + 40);
  uint64_t v5 = type metadata accessor for AccountInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(v3 + 44);
  uint64_t v7 = type metadata accessor for Metrics(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t PasscodeGeneration.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for PasscodeGeneration, a1);
}

uint64_t PasscodeGeneration.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for PasscodeGeneration);
}

uint64_t (*PasscodeGeneration.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t PasscodeGeneration.init()@<X0>(void *a1@<X8>)
{
  return sub_10007EB70(0, (void (*)(void))type metadata accessor for PasscodeGeneration, a1);
}

uint64_t EscrowInformation.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100083374(type metadata accessor for EscrowInformation, a1);
}

uint64_t sub_100083374@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 48), (uint64_t)v8, (uint64_t *)&unk_10029ED30);
  uint64_t v10 = sub_100221DC0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, v10);
  }
  sub_100221DB0();
  return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029ED30);
}

uint64_t EscrowInformation.creationDate.setter(uint64_t a1)
{
  return sub_1000834C8(a1, type metadata accessor for EscrowInformation);
}

uint64_t sub_1000834C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 48);
  sub_10004015C(v4, (uint64_t *)&unk_10029ED30);
  uint64_t v5 = sub_100221DC0();
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v4, a1, v5);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(v4, 0, 1, v5);
}

void (*EscrowInformation.creationDate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221DC0();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowInformation(0) + 48);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221DB0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_1000696B4;
}

BOOL EscrowInformation.hasCreationDate.getter()
{
  return sub_100077670((uint64_t *)&unk_10029ED30, type metadata accessor for EscrowInformation, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

Swift::Void __swiftcall EscrowInformation.clearCreationDate()()
{
}

uint64_t EscrowInformation.escrowInformationMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_10029A098);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EscrowInformation(0);
  sub_10000D830(v1 + *(int *)(v7 + 52), (uint64_t)v6, &qword_10029A098);
  uint64_t v8 = type metadata accessor for EscrowInformation.Metadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, a1, type metadata accessor for EscrowInformation.Metadata);
  }
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v9 = *(int *)(v8 + 20);
  if (qword_100298E50 != -1) {
    swift_once();
  }
  *(void *)(a1 + v9) = qword_100299ED8;
  swift_retain();
  return sub_10004015C((uint64_t)v6, &qword_10029A098);
}

uint64_t EscrowInformation.Metadata.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_10006F744(type metadata accessor for EscrowInformation.Metadata, &qword_100298E50, &qword_100299ED8, a1);
}

uint64_t EscrowInformation.escrowInformationMetadata.setter(uint64_t a1)
{
  return sub_100083974(a1, type metadata accessor for EscrowInformation, &qword_10029A098, type metadata accessor for EscrowInformation.Metadata, type metadata accessor for EscrowInformation.Metadata);
}

uint64_t sub_100083974(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 52);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*EscrowInformation.escrowInformationMetadata.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029A098);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for EscrowInformation.Metadata(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowInformation(0) + 52);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029A098);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v12 = *(int *)(v6 + 20);
    if (qword_100298E50 != -1) {
      swift_once();
    }
    *(void *)&v10[v12] = qword_100299ED8;
    swift_retain();
    sub_10004015C((uint64_t)v5, &qword_10029A098);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for EscrowInformation.Metadata);
  }
  return sub_100083C00;
}

void sub_100083C00(uint64_t a1, char a2)
{
}

BOOL EscrowInformation.hasEscrowInformationMetadata.getter()
{
  return sub_100077B90(&qword_10029A098, type metadata accessor for EscrowInformation, type metadata accessor for EscrowInformation.Metadata);
}

Swift::Void __swiftcall EscrowInformation.clearEscrowInformationMetadata()()
{
}

uint64_t EscrowInformation.silentAttemptAllowed.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t EscrowInformation.silentAttemptAllowed.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t EscrowInformation.viabilityStatus.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t EscrowInformation.viabilityStatus.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t EscrowInformation.federationID.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.federationID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t EscrowInformation.expectedFederationID.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.expectedFederationID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t EscrowInformation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000820E0(type metadata accessor for EscrowInformation, a1);
}

uint64_t EscrowInformation.unknownFields.setter(uint64_t a1)
{
  return sub_100082178(a1, type metadata accessor for EscrowInformation);
}

uint64_t (*EscrowInformation.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t EscrowInformation.Metadata.backupKeybagDigest.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20));
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1000059E8(v2, *(void *)(v1 + 24));
  return v2;
}

uint64_t EscrowInformation.Metadata.backupKeybagDigest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v5) = sub_1000BA090(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v5);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return sub_100005A40(v8, v9);
}

void (*EscrowInformation.Metadata.backupKeybagDigest.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  v3[9] = v6;
  v3[10] = v7;
  sub_1000059E8(v6, v7);
  return sub_100083FC8;
}

void sub_100083FC8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  unint64_t v4 = *(void *)(*a1 + 80);
  if (a2)
  {
    sub_1000059E8(*(void *)(*a1 + 72), v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(int *)(v2 + 96);
      uint64_t v6 = *(void *)(v2 + 88);
      type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
      swift_allocObject();
      uint64_t v7 = swift_retain();
      *(void *)(v6 + v5) = sub_1000BA090(v7);
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    uint64_t v9 = *(void *)(v8 + 16);
    unint64_t v10 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    sub_100005A40(v9, v10);
    uint64_t v11 = *(void *)(v2 + 72);
    unint64_t v12 = *(void *)(v2 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = *(int *)(v2 + 96);
      uint64_t v14 = *(void *)(v2 + 88);
      type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      *(void *)(v14 + v13) = sub_1000BA090(v15);
      swift_release();
    }
    uint64_t v16 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess();
    uint64_t v11 = *(void *)(v16 + 16);
    unint64_t v12 = *(void *)(v16 + 24);
    *(void *)(v16 + 16) = v3;
    *(void *)(v16 + 24) = v4;
  }
  sub_100005A40(v11, v12);

  free((void *)v2);
}

uint64_t EscrowInformation.Metadata.clientMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_10029A0A0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20))
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  sub_10000D830(v7, (uint64_t)v6, &qword_10029A0A0);
  uint64_t v8 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, a1, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0xE000000000000000;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0xE000000000000000;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0xE000000000000000;
  *(void *)(a1 + 136) = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v9 = a1 + *(int *)(v8 + 64);
  uint64_t v10 = sub_100221DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return sub_10004015C((uint64_t)v6, &qword_10029A0A0);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0xE000000000000000;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0xE000000000000000;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0xE000000000000000;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0xE000000000000000;
  *(void *)(a1 + 136) = 0;
  uint64_t v2 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = a1 + *(int *)(v2 + 64);
  uint64_t v4 = sub_100221DC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t EscrowInformation.Metadata.clientMetadata.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_10029A0A0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_1000BA090(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  uint64_t v14 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_10029A0A0);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_10029A0A0);
  swift_endAccess();
  return swift_release();
}

void (*EscrowInformation.Metadata.clientMetadata.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029A0A0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20))
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_10029A0A0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    _OWORD *v9 = 0u;
    v9[1] = 0u;
    *((void *)v9 + 4) = 0xE000000000000000;
    *((void *)v9 + 5) = 0;
    *((void *)v9 + 6) = 0xE000000000000000;
    *((void *)v9 + 7) = 0;
    *((void *)v9 + 8) = 0xE000000000000000;
    *((void *)v9 + 9) = 0;
    *((void *)v9 + 10) = 0xE000000000000000;
    *((void *)v9 + 11) = 0;
    *((void *)v9 + 12) = 0xE000000000000000;
    *((void *)v9 + 13) = 0;
    *((void *)v9 + 14) = 0xE000000000000000;
    *((void *)v9 + 15) = 0;
    *((void *)v9 + 16) = 0xE000000000000000;
    *((void *)v9 + 17) = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 64);
    uint64_t v12 = sub_100221DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_10004015C((uint64_t)v5, &qword_10029A0A0);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  }
  return sub_100084780;
}

void sub_100084780(uint64_t a1, char a2)
{
}

BOOL EscrowInformation.Metadata.hasClientMetadata.getter()
{
  return sub_10006C9B8(&qword_10029A0A0, type metadata accessor for EscrowInformation.Metadata, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

Swift::Void __swiftcall EscrowInformation.Metadata.clearClientMetadata()()
{
  uint64_t v1 = sub_1000046DC(&qword_10029A0A0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_1000BA090(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_10029A0A0);
  swift_endAccess();
  swift_release();
}

uint64_t EscrowInformation.Metadata.secureBackupUsesMultipleIcscs.getter()
{
  return sub_100080394(type metadata accessor for EscrowInformation.Metadata, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
}

uint64_t EscrowInformation.Metadata.secureBackupUsesMultipleIcscs.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(v1 + v3) = sub_1000BA090(v4);
    swift_release();
  }
  uint64_t v5 = (void *)(*(void *)(v1 + v3)
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  uint64_t result = swift_beginAccess();
  *uint64_t v5 = a1;
  return result;
}

void (*EscrowInformation.Metadata.secureBackupUsesMultipleIcscs.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  swift_beginAccess();
  v3[9] = *v5;
  return sub_100084ACC;
}

void sub_100084ACC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = sub_1000BA090(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (void *)(*(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88))
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  swift_beginAccess();
  void *v9 = v4;

  free((void *)v3);
}

uint64_t EscrowInformation.Metadata.bottleID.getter()
{
  return sub_100085820(&OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
}

uint64_t EscrowInformation.Metadata.bottleID.setter(uint64_t a1, uint64_t a2)
{
  return sub_100085894(a1, a2, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
}

void (*EscrowInformation.Metadata.bottleID.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_100084C74;
}

void sub_100084C74(uint64_t *a1, char a2)
{
}

uint64_t EscrowInformation.Metadata.secureBackupTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20))
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  sub_10000D830(v7, (uint64_t)v6, (uint64_t *)&unk_10029ED30);
  uint64_t v8 = sub_100221DC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  }
  sub_100221DB0();
  return sub_10004015C((uint64_t)v6, (uint64_t *)&unk_10029ED30);
}

uint64_t EscrowInformation.Metadata.secureBackupTimestamp.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_1000BA090(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  uint64_t v14 = sub_100221DC0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v10, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_10029ED30);
  uint64_t v16 = v13
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v16, (uint64_t *)&unk_10029ED30);
  swift_endAccess();
  return swift_release();
}

void (*EscrowInformation.Metadata.secureBackupTimestamp.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = sub_100221DC0();
  void v3[5] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[6] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[7] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[8] = v10;
  uint64_t v11 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20))
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  sub_10000D830(v11, (uint64_t)v5, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221DB0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_100085170;
}

void sub_100085170(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  uint64_t v4 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v7 = (void *)v2[4];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 56), v4, v5);
    EscrowInformation.Metadata.secureBackupTimestamp.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v7 = (void *)v2[4];
    EscrowInformation.Metadata.secureBackupTimestamp.setter(*(void *)(*(void *)a1 + 64));
  }
  free(v4);
  free(v3);
  free(v7);

  free(v2);
}

BOOL EscrowInformation.Metadata.hasSecureBackupTimestamp.getter()
{
  return sub_10006C9B8((uint64_t *)&unk_10029ED30, type metadata accessor for EscrowInformation.Metadata, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

Swift::Void __swiftcall EscrowInformation.Metadata.clearSecureBackupTimestamp()()
{
  uint64_t v1 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_1000BA090(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = sub_100221DC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, (uint64_t *)&unk_10029ED30);
  swift_endAccess();
  swift_release();
}

uint64_t EscrowInformation.Metadata.escrowedSpki.getter()
{
  return sub_10008549C(&OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
}

uint64_t EscrowInformation.Metadata.escrowedSpki.setter(uint64_t a1, uint64_t a2)
{
  return sub_100085514(a1, a2, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
}

void (*EscrowInformation.Metadata.escrowedSpki.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_1000059E8(v6, v7);
  return sub_100085484;
}

void sub_100085484(uint64_t *a1, char a2)
{
}

uint64_t EscrowInformation.Metadata.peerInfo.getter()
{
  return sub_10008549C(&OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
}

uint64_t sub_10008549C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20)) + *a1;
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  sub_1000059E8(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

uint64_t EscrowInformation.Metadata.peerInfo.setter(uint64_t a1, uint64_t a2)
{
  return sub_100085514(a1, a2, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
}

uint64_t sub_100085514(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v3 + v7) = sub_1000BA090(v8);
    swift_release();
  }
  uint64_t v9 = (uint64_t *)(*(void *)(v3 + v7) + *a3);
  swift_beginAccess();
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  uint64_t *v9 = a1;
  v9[1] = a2;
  return sub_100005A40(v10, v11);
}

void (*EscrowInformation.Metadata.peerInfo.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (uint64_t *)(*(void *)(v1 + v4)
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  v3[9] = *v5;
  v3[10] = v7;
  sub_1000059E8(v6, v7);
  return sub_100085678;
}

void sub_100085678(uint64_t *a1, char a2)
{
}

void sub_100085684(uint64_t *a1, char a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 72);
  unint64_t v6 = *(void *)(*a1 + 80);
  if (a2)
  {
    sub_1000059E8(*(void *)(*a1 + 72), v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = *(int *)(v4 + 96);
      uint64_t v8 = *(void *)(v4 + 88);
      type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + v7) = sub_1000BA090(v9);
      swift_release();
    }
    uint64_t v10 = (uint64_t *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    *uint64_t v10 = v5;
    v10[1] = v6;
    sub_100005A40(v11, v12);
    uint64_t v13 = *(void *)(v4 + 72);
    unint64_t v14 = *(void *)(v4 + 80);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v15 = *(int *)(v4 + 96);
      uint64_t v16 = *(void *)(v4 + 88);
      type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
      swift_allocObject();
      uint64_t v17 = swift_retain();
      *(void *)(v16 + v15) = sub_1000BA090(v17);
      swift_release();
    }
    uint64_t v18 = (uint64_t *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    uint64_t v13 = *v18;
    unint64_t v14 = v18[1];
    *uint64_t v18 = v5;
    v18[1] = v6;
  }
  sub_100005A40(v13, v14);

  free((void *)v4);
}

uint64_t EscrowInformation.Metadata.serial.getter()
{
  return sub_100085820(&OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
}

uint64_t sub_100085820(void *a1)
{
  uint64_t v2 = (uint64_t *)(*(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20)) + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t EscrowInformation.Metadata.serial.setter(uint64_t a1, uint64_t a2)
{
  return sub_100085894(a1, a2, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
}

uint64_t sub_100085894(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v3 + v7) = sub_1000BA090(v8);
    swift_release();
  }
  uint64_t v9 = (void *)(*(void *)(v3 + v7) + *a3);
  swift_beginAccess();
  void *v9 = a1;
  v9[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*EscrowInformation.Metadata.serial.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1000859FC;
}

void sub_1000859FC(uint64_t *a1, char a2)
{
}

void sub_100085A08(uint64_t *a1, char a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 72);
  uint64_t v6 = *(void *)(*a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = *(int *)(v4 + 96);
      uint64_t v8 = *(void *)(v4 + 88);
      type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + v7) = sub_1000BA090(v9);
      swift_release();
    }
    uint64_t v10 = (void *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *uint64_t v10 = v5;
    v10[1] = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v11 = *(int *)(v4 + 96);
      uint64_t v12 = *(void *)(v4 + 88);
      type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + v11) = sub_1000BA090(v13);
      swift_release();
    }
    unint64_t v14 = (void *)(*(void *)(*(void *)(v4 + 88) + *(int *)(v4 + 96)) + *a3);
    swift_beginAccess();
    *unint64_t v14 = v5;
    v14[1] = v6;
  }
  swift_bridgeObjectRelease();

  free((void *)v4);
}

uint64_t EscrowInformation.Metadata.build.getter()
{
  return sub_100085820(&OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
}

uint64_t EscrowInformation.Metadata.build.setter(uint64_t a1, uint64_t a2)
{
  return sub_100085894(a1, a2, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
}

void (*EscrowInformation.Metadata.build.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = (void *)(*(void *)(v1 + v4)
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[9] = *v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_100085C48;
}

void sub_100085C48(uint64_t *a1, char a2)
{
}

uint64_t EscrowInformation.Metadata.passcodeGeneration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1000046DC(&qword_10029A0E8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20))
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  sub_10000D830(v7, (uint64_t)v6, &qword_10029A0E8);
  uint64_t v8 = type metadata accessor for PasscodeGeneration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_1000D736C((uint64_t)v6, (uint64_t)a1, type metadata accessor for PasscodeGeneration);
  }
  *a1 = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v6, &qword_10029A0E8);
}

uint64_t EscrowInformation.Metadata.passcodeGeneration.setter(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_10029A0E8);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v1 + v11) = sub_1000BA090(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v11);
  sub_1000D736C(a1, (uint64_t)v10, type metadata accessor for PasscodeGeneration);
  uint64_t v14 = type metadata accessor for PasscodeGeneration(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1000D8B9C((uint64_t)v10, (uint64_t)v7, &qword_10029A0E8);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v7, v15, &qword_10029A0E8);
  swift_endAccess();
  return swift_release();
}

void (*EscrowInformation.Metadata.passcodeGeneration.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029A0E8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for PasscodeGeneration(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  void v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20))
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  sub_10000D830(v10, (uint64_t)v5, &qword_10029A0E8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    void *v9 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029A0E8);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for PasscodeGeneration);
  }
  return sub_10008610C;
}

void sub_10008610C(uint64_t a1, char a2)
{
}

void sub_10008614C(uint64_t a1, char a2, void (*a3)(void *), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(*(void *)a1 + 40);
  size_t v8 = *(void **)(*(void *)a1 + 48);
  uint64_t v9 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    sub_1000D7E10(*(void *)(*(void *)a1 + 48), (uint64_t)v7, a4);
    a3(v7);
    sub_1000D7E78((uint64_t)v8, a5);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 48));
  }
  free(v8);
  free(v7);
  free(v9);

  free(v6);
}

BOOL EscrowInformation.Metadata.hasPasscodeGeneration.getter()
{
  return sub_10006C9B8(&qword_10029A0E8, type metadata accessor for EscrowInformation.Metadata, &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration, type metadata accessor for PasscodeGeneration);
}

Swift::Void __swiftcall EscrowInformation.Metadata.clearPasscodeGeneration()()
{
  uint64_t v1 = sub_1000046DC(&qword_10029A0E8);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for EscrowInformation.Metadata(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for EscrowInformation.Metadata._StorageClass(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v0 + v5) = sub_1000BA090(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v5);
  uint64_t v8 = type metadata accessor for PasscodeGeneration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  swift_retain();
  sub_1000D8C00((uint64_t)v4, v9, &qword_10029A0E8);
  swift_endAccess();
  swift_release();
}

uint64_t EscrowInformation.Metadata.ClientMetadata.secureBackupMetadataTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  sub_10000D830(v1 + *(int *)(v7 + 64), (uint64_t)v6, (uint64_t *)&unk_10029ED30);
  uint64_t v8 = sub_100221DC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  }
  sub_100221DB0();
  return sub_10004015C((uint64_t)v6, (uint64_t *)&unk_10029ED30);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.secureBackupMetadataTimestamp.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0) + 64);
  sub_10004015C(v3, (uint64_t *)&unk_10029ED30);
  uint64_t v4 = sub_100221DC0();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(v3, 0, 1, v4);
}

void (*EscrowInformation.Metadata.ClientMetadata.secureBackupMetadataTimestamp.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221DC0();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0) + 64);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221DB0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029ED30);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_1000696B4;
}

BOOL EscrowInformation.Metadata.ClientMetadata.hasSecureBackupMetadataTimestamp.getter()
{
  uint64_t v1 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  sub_10000D830(v0 + *(int *)(v5 + 64), (uint64_t)v4, (uint64_t *)&unk_10029ED30);
  uint64_t v6 = sub_100221DC0();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_10004015C((uint64_t)v4, (uint64_t *)&unk_10029ED30);
  return v7;
}

Swift::Void __swiftcall EscrowInformation.Metadata.ClientMetadata.clearSecureBackupMetadataTimestamp()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0) + 64);
  sub_10004015C(v1, (uint64_t *)&unk_10029ED30);
  uint64_t v2 = sub_100221DC0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  v3(v1, 1, 1, v2);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.secureBackupUsesComplexPassphrase.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.secureBackupUsesComplexPassphrase.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.secureBackupUsesNumericPassphrase.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.secureBackupUsesNumericPassphrase.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceEnclosureColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceEnclosureColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceMid.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceMid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceModelClass.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceModelClass.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceModelVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceModelVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceName.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.deviceName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.devicePlatform.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.devicePlatform.setter(uint64_t result)
{
  *(void *)(v1 + 136) = result;
  return result;
}

uint64_t (*EscrowInformation.Metadata.ClientMetadata.devicePlatform.modify())()
{
  return ResetReason.rawValue.getter;
}

uint64_t EscrowInformation.Metadata.ClientMetadata.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100086B70(type metadata accessor for EscrowInformation.Metadata.ClientMetadata, a1);
}

uint64_t sub_100086B70@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 60);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.unknownFields.setter(uint64_t a1)
{
  return sub_100086C08(a1, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

uint64_t sub_100086C08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 60);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*EscrowInformation.Metadata.ClientMetadata.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t PCSService.publicKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1000059E8(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t PCSService.publicKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100005A40(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t PCSService.zone.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PCSService.zone.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t PCSService.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100086DB8(type metadata accessor for PCSService, a1);
}

uint64_t sub_100086DB8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 28);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t PCSService.unknownFields.setter(uint64_t a1)
{
  return sub_100086E50(a1, type metadata accessor for PCSService);
}

uint64_t sub_100086E50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 28);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*PCSService.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t PCSService.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = xmmword_100229520;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  type metadata accessor for PCSService(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t DirectPCSIdentityFetchRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for DirectPCSIdentityFetchRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*DirectPCSIdentityFetchRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for DirectPCSIdentityFetchRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL DirectPCSIdentityFetchRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for DirectPCSIdentityFetchRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall DirectPCSIdentityFetchRequest.clearMetrics()()
{
}

uint64_t DirectPCSIdentityFetchRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for DirectPCSIdentityFetchRequest, a1);
}

uint64_t DirectPCSIdentityFetchRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for DirectPCSIdentityFetchRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*DirectPCSIdentityFetchRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for DirectPCSIdentityFetchRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL DirectPCSIdentityFetchRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for DirectPCSIdentityFetchRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall DirectPCSIdentityFetchRequest.clearAccountInfo()()
{
}

uint64_t DirectPCSIdentityFetchRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for DirectPCSIdentityFetchRequest, a1);
}

uint64_t DirectPCSIdentityFetchRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t (*DirectPCSIdentityFetchRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t DirectPCSIdentityFetchRequest.init()@<X0>(void *a1@<X8>)
{
  return sub_10008282C((uint64_t)&_swiftEmptyArrayStorage, type metadata accessor for DirectPCSIdentityFetchRequest, a1);
}

uint64_t DirectPCSIdentity.item.setter(uint64_t a1)
{
  return sub_1000874B8(a1, type metadata accessor for DirectPCSIdentity);
}

uint64_t sub_1000874B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  sub_10004015C(v4, &qword_1002997E0);
  uint64_t v5 = sub_100221D50();
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v4, a1, v5);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(v4, 0, 1, v5);
}

void (*DirectPCSIdentity.item.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_1002997E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221D50();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for DirectPCSIdentity(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_1002997E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221D40();
    sub_10004015C((uint64_t)v5, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_10006D8B4;
}

BOOL DirectPCSIdentity.hasItem.getter()
{
  return sub_100070E50(&qword_1002997E0, type metadata accessor for DirectPCSIdentity, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport);
}

Swift::Void __swiftcall DirectPCSIdentity.clearItem()()
{
}

uint64_t DirectPCSIdentity.pcsService.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for DirectPCSIdentity, &qword_1002997F8, type metadata accessor for PCSService, type metadata accessor for PCSService);
}

void (*DirectPCSIdentity.pcsService.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_1002997F8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for PCSService(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for DirectPCSIdentity(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_1002997F8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *(_DWORD *)uint64_t v10 = 0;
    *(_OWORD *)(v10 + 8) = xmmword_100229520;
    *((void *)v10 + 3) = 0;
    *((void *)v10 + 4) = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_1002997F8);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for PCSService);
  }
  return sub_100087978;
}

void sub_100087978(uint64_t a1, char a2)
{
}

BOOL DirectPCSIdentity.hasPcsService.getter()
{
  return sub_10006DD58(&qword_1002997F8, type metadata accessor for DirectPCSIdentity, type metadata accessor for PCSService);
}

Swift::Void __swiftcall DirectPCSIdentity.clearPcsService()()
{
}

uint64_t DirectPCSIdentity.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_100087A68(type metadata accessor for DirectPCSIdentity, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport, type metadata accessor for PCSService, a1);
}

uint64_t sub_100087A68@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v8 = a1(0);
  uint64_t v9 = a4 + *(int *)(v8 + 20);
  uint64_t v10 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = a4 + *(int *)(v8 + 24);
  uint64_t v12 = a3(0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);

  return v13(v11, 1, 1, v12);
}

uint64_t DirectPCSIdentityFetchResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for DirectPCSIdentityFetchResponse, a1);
}

uint64_t DirectPCSIdentityFetchResponse.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for DirectPCSIdentityFetchResponse);
}

uint64_t (*DirectPCSIdentityFetchResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t DirectPCSIdentityFetchResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_1000887A8((void (*)(void))type metadata accessor for DirectPCSIdentityFetchResponse, a1);
}

uint64_t CurrentCKKSItemSpecifier.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for CurrentCKKSItemSpecifier, a1);
}

uint64_t CurrentCKKSItemSpecifier.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for CurrentCKKSItemSpecifier);
}

uint64_t (*CurrentCKKSItemSpecifier.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t CurrentCKKSItemSpecifier.init()@<X0>(void *a1@<X8>)
{
  return sub_100087C7C((void (*)(void))type metadata accessor for CurrentCKKSItemSpecifier, a1);
}

uint64_t sub_100087C7C@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a1(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t CurrentItemFetchRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for CurrentItemFetchRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

void (*CurrentItemFetchRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for CurrentItemFetchRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL CurrentItemFetchRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for CurrentItemFetchRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall CurrentItemFetchRequest.clearMetrics()()
{
}

uint64_t CurrentItemFetchRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for CurrentItemFetchRequest, a1);
}

uint64_t CurrentItemFetchRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for CurrentItemFetchRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

void (*CurrentItemFetchRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for CurrentItemFetchRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

BOOL CurrentItemFetchRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for CurrentItemFetchRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall CurrentItemFetchRequest.clearAccountInfo()()
{
}

uint64_t CurrentItemFetchRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for CurrentItemFetchRequest, a1);
}

uint64_t CurrentItemFetchRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for CurrentItemFetchRequest);
}

uint64_t (*CurrentItemFetchRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t CurrentItemFetchRequest.init()@<X0>(void *a1@<X8>)
{
  return sub_10008282C((uint64_t)&_swiftEmptyArrayStorage, type metadata accessor for CurrentItemFetchRequest, a1);
}

uint64_t CurrentCKKSItem.item.setter(uint64_t a1)
{
  return sub_1000874B8(a1, type metadata accessor for CurrentCKKSItem);
}

void (*CurrentCKKSItem.item.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_1002997E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_100221D50();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for CurrentCKKSItem(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_1002997E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_100221D40();
    sub_10004015C((uint64_t)v5, &qword_1002997E0);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_10006D8B4;
}

BOOL CurrentCKKSItem.hasItem.getter()
{
  return sub_100070E50(&qword_1002997E0, type metadata accessor for CurrentCKKSItem, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport);
}

Swift::Void __swiftcall CurrentCKKSItem.clearItem()()
{
}

uint64_t CurrentCKKSItem.itemSpecifier.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for CurrentCKKSItem, (uint64_t *)&unk_10029EF50, type metadata accessor for CurrentCKKSItemSpecifier, type metadata accessor for CurrentCKKSItemSpecifier);
}

void (*CurrentCKKSItem.itemSpecifier.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC((uint64_t *)&unk_10029EF50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for CurrentCKKSItem(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, (uint64_t *)&unk_10029EF50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, (uint64_t *)&unk_10029EF50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for CurrentCKKSItemSpecifier);
  }
  return sub_1000885F4;
}

void sub_1000885F4(uint64_t a1, char a2)
{
}

BOOL CurrentCKKSItem.hasItemSpecifier.getter()
{
  return sub_10006DD58((uint64_t *)&unk_10029EF50, type metadata accessor for CurrentCKKSItem, type metadata accessor for CurrentCKKSItemSpecifier);
}

Swift::Void __swiftcall CurrentCKKSItem.clearItemSpecifier()()
{
}

uint64_t CurrentCKKSItem.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_100087A68(type metadata accessor for CurrentCKKSItem, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport, type metadata accessor for CurrentCKKSItemSpecifier, a1);
}

uint64_t CurrentItemFetchResponse.synckeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CurrentItemFetchResponse.synckeys.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t CurrentItemFetchResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100068E28(type metadata accessor for CurrentItemFetchResponse, a1);
}

uint64_t CurrentItemFetchResponse.unknownFields.setter(uint64_t a1)
{
  return sub_100068EC0(a1, type metadata accessor for CurrentItemFetchResponse);
}

uint64_t (*CurrentItemFetchResponse.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t CurrentItemFetchResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_1000887A8((void (*)(void))type metadata accessor for CurrentItemFetchResponse, a1);
}

uint64_t sub_1000887A8@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  a2[1] = &_swiftEmptyArrayStorage;
  a1(0);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t RemoveUnreadableCKServerDataRequest.metrics.setter(uint64_t a1)
{
  return sub_100088838(a1, type metadata accessor for RemoveUnreadableCKServerDataRequest, &qword_10029F000, type metadata accessor for Metrics, type metadata accessor for Metrics);
}

uint64_t sub_100088838(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 24);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*RemoveUnreadableCKServerDataRequest.metrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029F000);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Metrics(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for RemoveUnreadableCKServerDataRequest(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_10029F000);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0xE000000000000000;
    v10[2] = 0;
    v10[3] = 0xE000000000000000;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_10029F000);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Metrics);
  }
  return sub_1000708B8;
}

BOOL RemoveUnreadableCKServerDataRequest.hasMetrics.getter()
{
  return sub_10006DD58(&qword_10029F000, type metadata accessor for RemoveUnreadableCKServerDataRequest, type metadata accessor for Metrics);
}

Swift::Void __swiftcall RemoveUnreadableCKServerDataRequest.clearMetrics()()
{
}

uint64_t RemoveUnreadableCKServerDataRequest.accountInfo.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_100088B10(type metadata accessor for RemoveUnreadableCKServerDataRequest, a1);
}

uint64_t sub_100088B10@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1(0);
  sub_10000D830(v2 + *(int *)(v9 + 28), (uint64_t)v8, &qword_100299F50);
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) != 1) {
    return sub_1000D736C((uint64_t)v8, (uint64_t)a2, type metadata accessor for AccountInfo);
  }
  *a2 = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_10004015C((uint64_t)v8, &qword_100299F50);
}

uint64_t RemoveUnreadableCKServerDataRequest.accountInfo.setter(uint64_t a1)
{
  return sub_100088C88(a1, type metadata accessor for RemoveUnreadableCKServerDataRequest, &qword_100299F50, type metadata accessor for AccountInfo, type metadata accessor for AccountInfo);
}

uint64_t sub_100088C88(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 28);
  sub_10004015C(v10, a3);
  sub_1000D736C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*RemoveUnreadableCKServerDataRequest.accountInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for RemoveUnreadableCKServerDataRequest(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_10000D830(v1 + v11, (uint64_t)v5, &qword_100299F50);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_10004015C((uint64_t)v5, &qword_100299F50);
  }
  else
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v10, type metadata accessor for AccountInfo);
  }
  return sub_100070490;
}

void sub_100088ED8(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(int *)(*(void *)a1 + 48);
  uint64_t v10 = *(void **)(*(void *)a1 + 32);
  uint64_t v11 = *(void **)(*(void *)a1 + 40);
  uint64_t v12 = *(void *)(*(void *)a1 + 16);
  uint64_t v13 = *(void *)(*(void *)a1 + 24);
  uint64_t v14 = *(void **)(*(void *)a1 + 8);
  uint64_t v15 = **(void **)a1 + v9;
  if (a2)
  {
    sub_1000D7E10(*(void *)(*(void *)a1 + 40), (uint64_t)v10, a5);
    sub_10004015C(v15, a3);
    sub_1000D736C((uint64_t)v10, v15, a4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
    sub_1000D7E78((uint64_t)v11, a6);
  }
  else
  {
    sub_10004015C(**(void **)a1 + v9, a3);
    sub_1000D736C((uint64_t)v11, v15, a4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
  }
  free(v11);
  free(v10);
  free(v14);

  free(v8);
}

BOOL RemoveUnreadableCKServerDataRequest.hasAccountInfo.getter()
{
  return sub_10006E114(&qword_100299F50, type metadata accessor for RemoveUnreadableCKServerDataRequest, type metadata accessor for AccountInfo);
}

Swift::Void __swiftcall RemoveUnreadableCKServerDataRequest.clearAccountInfo()()
{
}

uint64_t RemoveUnreadableCKServerDataRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006BDB0(type metadata accessor for RemoveUnreadableCKServerDataRequest, a1);
}

uint64_t RemoveUnreadableCKServerDataRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10006BE48(a1, type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t (*RemoveUnreadableCKServerDataRequest.unknownFields.modify())(void)
{
  return ResetReason.rawValue.getter;
}

uint64_t RemoveUnreadableCKServerDataRequest.init()@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = &a1[*(int *)(v2 + 24)];
  uint64_t v4 = type metadata accessor for Metrics(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &a1[*(int *)(v2 + 28)];
  uint64_t v6 = type metadata accessor for AccountInfo(0);
  uint64_t v7 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, 1, 1, v6);
}

uint64_t _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100221DF0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvs_0(uint64_t a1)
{
  uint64_t v3 = sub_100221DF0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t sub_100089290()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static ViewKeyClass._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static ViewKeyClass._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "VIEW_KEY_CLASS_TLK";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "VIEW_KEY_CLASS_CLASS_A";
  *((void *)v10 + 1) = 22;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 2;
  *(void *)uint64_t v11 = "VIEW_KEY_CLASS_CLASS_C";
  *(void *)(v11 + 8) = 22;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t ViewKeyClass._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C18, (uint64_t)static ViewKeyClass._protobuf_nameMap);
}

uint64_t static ViewKeyClass._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C18, (uint64_t)static ViewKeyClass._protobuf_nameMap, a1);
}

uint64_t sub_1000894D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C18, (uint64_t)static ViewKeyClass._protobuf_nameMap, a1);
}

uint64_t sub_1000894F8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static ResetReason._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static ResetReason._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229530;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "RESET_REASON_UNKNOWN";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "RESET_REASON_USER_INITIATED_RESET";
  *(void *)(v10 + 8) = 33;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 2;
  *(void *)uint64_t v12 = "RESET_REASON_HEALTH_CHECK";
  *((void *)v12 + 1) = 25;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "RESET_REASON_NO_BOTTLE_DURING_ESCROW_RECOVERY";
  *((void *)v14 + 1) = 45;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "RESET_REASON_LEGACY_JOIN_CIRCLE";
  *((void *)v16 + 1) = 31;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "RESET_REASON_RECOVERY_KEY";
  *((void *)v18 + 1) = 25;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 6;
  *(void *)uint64_t v20 = "RESET_REASON_TEST_GENERATED";
  *((void *)v20 + 1) = 27;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  void *v21 = 7;
  *(void *)uint64_t v22 = "RESET_REASON_SUPPORT_APP_INITIATED_RESET";
  *((void *)v22 + 1) = 40;
  v22[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t ResetReason._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C20, (uint64_t)static ResetReason._protobuf_nameMap);
}

uint64_t static ResetReason._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C20, (uint64_t)static ResetReason._protobuf_nameMap, a1);
}

uint64_t sub_10008987C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C20, (uint64_t)static ResetReason._protobuf_nameMap, a1);
}

uint64_t sub_1000898A0()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static AccountFlags._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static AccountFlags._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229B70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "ACCOUNT_FLAGS_UNKNOWN";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "ACCOUNT_FLAGS_INTERNAL";
  *(void *)(v10 + 8) = 22;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 2;
  *(void *)uint64_t v12 = "ACCOUNT_FLAGS_DEMO";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "ACCOUNT_FLAGS_DBR";
  *((void *)v14 + 1) = 17;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 8;
  *(void *)uint64_t v16 = "ACCOUNT_FLAGS_SA_OR_2FAFA";
  *((void *)v16 + 1) = 25;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 16;
  *(void *)uint64_t v18 = "ACCOUNT_FLAGS_CDP";
  *((void *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t AccountFlags._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C28, (uint64_t)static AccountFlags._protobuf_nameMap);
}

uint64_t static AccountFlags._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C28, (uint64_t)static AccountFlags._protobuf_nameMap, a1);
}

uint64_t sub_100089BA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C28, (uint64_t)static AccountFlags._protobuf_nameMap, a1);
}

uint64_t sub_100089BC4()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static FilteringRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static FilteringRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "FILTERING_REQUEST_UNKNOWN";
  *(void *)(v6 + 8) = 25;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "FILTERING_REQUEST_BY_OCTAGON_ONLY";
  *((void *)v10 + 1) = 33;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t FilteringRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C30, (uint64_t)static FilteringRequest._protobuf_nameMap);
}

uint64_t static FilteringRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C30, (uint64_t)static FilteringRequest._protobuf_nameMap, a1);
}

uint64_t sub_100089DC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C30, (uint64_t)static FilteringRequest._protobuf_nameMap, a1);
}

uint64_t sub_100089DE8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static RepairAction._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static RepairAction._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229B70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "REPAIR_ACTION_NO_ACTION";
  *(void *)(v6 + 8) = 23;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "REPAIR_ACTION_POST_REPAIR_ACCOUNT";
  *(void *)(v10 + 8) = 33;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 2;
  *(void *)uint64_t v12 = "REPAIR_ACTION_POST_REPAIR_ESCROW";
  *((void *)v12 + 1) = 32;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "REPAIR_ACTION_RESET_OCTAGON";
  *((void *)v14 + 1) = 27;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "REPAIR_ACTION_LEAVE_TRUST";
  *((void *)v16 + 1) = 25;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "REPAIR_ACTION_REROLL";
  *((void *)v18 + 1) = 20;
  v18[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t RepairAction._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C38, (uint64_t)static RepairAction._protobuf_nameMap);
}

uint64_t static RepairAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C38, (uint64_t)static RepairAction._protobuf_nameMap, a1);
}

uint64_t sub_10008A0E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C38, (uint64_t)static RepairAction._protobuf_nameMap, a1);
}

uint64_t sub_10008A10C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SupportAppDeviceStatus._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SupportAppDeviceStatus._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "SUPPORT_APP_DEVICE_STATUS_HEALTHY";
  *(void *)(v6 + 8) = 33;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "SUPPORT_APP_DEVICE_STATUS_BROKEN";
  *((void *)v10 + 1) = 32;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SupportAppDeviceStatus._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C40, (uint64_t)static SupportAppDeviceStatus._protobuf_nameMap);
}

uint64_t static SupportAppDeviceStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C40, (uint64_t)static SupportAppDeviceStatus._protobuf_nameMap, a1);
}

uint64_t sub_10008A30C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C40, (uint64_t)static SupportAppDeviceStatus._protobuf_nameMap, a1);
}

uint64_t sub_10008A330()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static RecordStatus._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static RecordStatus._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "RECORD_STATUS_VALID";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "RECORD_STATUS_INVALID";
  *((void *)v10 + 1) = 21;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t RecordStatus._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C48, (uint64_t)static RecordStatus._protobuf_nameMap);
}

uint64_t static RecordStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C48, (uint64_t)static RecordStatus._protobuf_nameMap, a1);
}

uint64_t sub_10008A530@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C48, (uint64_t)static RecordStatus._protobuf_nameMap, a1);
}

uint64_t sub_10008A554()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SOSViability._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SOSViability._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 0;
  *(void *)unint64_t v6 = "SOS_VIABLE_UNKNOWN";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "SOS_VIABLE";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 2;
  *(void *)uint64_t v11 = "SOS_NOT_VIABLE";
  *(void *)(v11 + 8) = 14;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t SOSViability._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C50, (uint64_t)static SOSViability._protobuf_nameMap);
}

uint64_t static SOSViability._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C50, (uint64_t)static SOSViability._protobuf_nameMap, a1);
}

uint64_t sub_10008A79C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C50, (uint64_t)static SOSViability._protobuf_nameMap, a1);
}

void *SignedPeerPermanentInfo.protoMessageName.unsafeMutableAddressor()
{
  return &static SignedPeerPermanentInfo.protoMessageName;
}

unint64_t static SignedPeerPermanentInfo.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_10008A7E8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SignedPeerPermanentInfo._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SignedPeerPermanentInfo._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "peer_permanent_info";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "sig";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SignedPeerPermanentInfo._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C58, (uint64_t)static SignedPeerPermanentInfo._protobuf_nameMap);
}

uint64_t static SignedPeerPermanentInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C58, (uint64_t)static SignedPeerPermanentInfo._protobuf_nameMap, a1);
}

uint64_t SignedCustodianRecoveryKey.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C01C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularBytesField(value:));
}

uint64_t SignedPeerPermanentInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008AEE4(a1, a2, a3, (void (*)(void))type metadata accessor for SignedPeerPermanentInfo);
}

Swift::Int SignedPeerPermanentInfo.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SignedPeerPermanentInfo, &qword_10029A0F8, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t (*sub_10008AA9C())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_10008AAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SignedCustodianRecoveryKey.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10008AAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SignedPeerPermanentInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008AAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E3C8, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008AB74@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C58, (uint64_t)static SignedPeerPermanentInfo._protobuf_nameMap, a1);
}

uint64_t sub_10008AB98(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A500, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008AC08()
{
  sub_1000D8CA4(&qword_10029A500, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);

  return sub_100221F60();
}

void *SignedPeerStableInfo.protoMessageName.unsafeMutableAddressor()
{
  return &static SignedPeerStableInfo.protoMessageName;
}

unint64_t static SignedPeerStableInfo.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_10008ACB0()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SignedPeerStableInfo._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SignedPeerStableInfo._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "peer_stable_info";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "sig";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SignedPeerStableInfo._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C60, (uint64_t)static SignedPeerStableInfo._protobuf_nameMap);
}

uint64_t static SignedPeerStableInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C60, (uint64_t)static SignedPeerStableInfo._protobuf_nameMap, a1);
}

uint64_t SignedPeerStableInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008AEE4(a1, a2, a3, (void (*)(void))type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_10008AEE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = *v4;
  unint64_t v7 = v4[1];
  switch(v7 >> 62)
  {
    case 1uLL:
      if ((int)v6 != v6 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v7 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_100221FA0();
      if (!v5)
      {
LABEL_8:
        uint64_t v10 = v4[2];
        unint64_t v11 = v4[3];
        switch(v11 >> 62)
        {
          case 1uLL:
            if ((int)v10 != v10 >> 32) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 2uLL:
            if (*(void *)(v10 + 16) != *(void *)(v10 + 24)) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            if ((v11 & 0xFF000000000000) == 0) {
              goto LABEL_15;
            }
LABEL_14:
            uint64_t result = sub_100221FA0();
            if (!v5)
            {
LABEL_15:
              a4(0);
              uint64_t result = sub_100221DD0();
            }
            break;
        }
      }
      return result;
  }
}

Swift::Int SignedPeerStableInfo.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SignedPeerStableInfo, &qword_10029A100, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_10008B0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SignedPeerStableInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008B0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E3C0, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008B148@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C60, (uint64_t)static SignedPeerStableInfo._protobuf_nameMap, a1);
}

uint64_t sub_10008B16C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008B1D8()
{
  sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);

  return sub_100221F60();
}

void *SignedPeerDynamicInfo.protoMessageName.unsafeMutableAddressor()
{
  return &static SignedPeerDynamicInfo.protoMessageName;
}

unint64_t static SignedPeerDynamicInfo.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_10008B27C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SignedPeerDynamicInfo._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SignedPeerDynamicInfo._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "peer_dynamic_info";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "sig";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SignedPeerDynamicInfo._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C68, (uint64_t)static SignedPeerDynamicInfo._protobuf_nameMap);
}

uint64_t static SignedPeerDynamicInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C68, (uint64_t)static SignedPeerDynamicInfo._protobuf_nameMap, a1);
}

uint64_t SignedPeerDynamicInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008AEE4(a1, a2, a3, (void (*)(void))type metadata accessor for SignedPeerDynamicInfo);
}

Swift::Int SignedPeerDynamicInfo.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SignedPeerDynamicInfo, &qword_10029A108, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_10008B4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SignedPeerDynamicInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008B510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E3B8, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008B590@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C68, (uint64_t)static SignedPeerDynamicInfo._protobuf_nameMap, a1);
}

uint64_t sub_10008B5B4(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A530, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008B620()
{
  sub_1000D8CA4(&qword_10029A530, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);

  return sub_100221F60();
}

const char *SignedVoucher.protoMessageName.unsafeMutableAddressor()
{
  return "SignedVoucher";
}

uint64_t static SignedVoucher.protoMessageName.getter()
{
  return 0x6F5664656E676953;
}

uint64_t sub_10008B6CC()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SignedVoucher._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SignedVoucher._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "voucher";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "sig";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SignedVoucher._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C70, (uint64_t)static SignedVoucher._protobuf_nameMap);
}

uint64_t static SignedVoucher._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C70, (uint64_t)static SignedVoucher._protobuf_nameMap, a1);
}

uint64_t SignedVoucher.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008AEE4(a1, a2, a3, (void (*)(void))type metadata accessor for SignedVoucher);
}

Swift::Int SignedVoucher.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SignedVoucher, &qword_10029A110, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
}

uint64_t sub_10008B940@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_100229520;
  a1[1] = xmmword_100229520;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10008B96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SignedVoucher.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008B984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E3B0, (void (*)(uint64_t))type metadata accessor for SignedVoucher);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008BA04@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C70, (uint64_t)static SignedVoucher._protobuf_nameMap, a1);
}

uint64_t sub_10008BA28(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029F010, (void (*)(uint64_t))type metadata accessor for SignedVoucher);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008BA94()
{
  sub_1000D8CA4(&qword_10029F010, (void (*)(uint64_t))type metadata accessor for SignedVoucher);

  return sub_100221F60();
}

void *SignedRecoveryVoucher.protoMessageName.unsafeMutableAddressor()
{
  return &static SignedRecoveryVoucher.protoMessageName;
}

unint64_t static SignedRecoveryVoucher.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_10008BB38()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SignedRecoveryVoucher._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SignedRecoveryVoucher._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "recovery_voucher";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "sig";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SignedRecoveryVoucher._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C78, (uint64_t)static SignedRecoveryVoucher._protobuf_nameMap);
}

uint64_t static SignedRecoveryVoucher._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C78, (uint64_t)static SignedRecoveryVoucher._protobuf_nameMap, a1);
}

uint64_t SignedRecoveryVoucher.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008AEE4(a1, a2, a3, (void (*)(void))type metadata accessor for SignedRecoveryVoucher);
}

Swift::Int SignedRecoveryVoucher.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SignedRecoveryVoucher, &qword_10029A118, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);
}

uint64_t sub_10008BDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SignedRecoveryVoucher.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008BDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E3A8, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008BE4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C78, (uint64_t)static SignedRecoveryVoucher._protobuf_nameMap, a1);
}

uint64_t sub_10008BE70(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A558, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008BEDC()
{
  sub_1000D8CA4(&qword_10029A558, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);

  return sub_100221F60();
}

void *SignedCustodianRecoveryKey.protoMessageName.unsafeMutableAddressor()
{
  return &static SignedCustodianRecoveryKey.protoMessageName;
}

unint64_t static SignedCustodianRecoveryKey.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_10008BF80()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SignedCustodianRecoveryKey._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SignedCustodianRecoveryKey._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "custodian_recovery_key";
  *(void *)(v6 + 8) = 22;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "sig";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SignedCustodianRecoveryKey._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C80, (uint64_t)static SignedCustodianRecoveryKey._protobuf_nameMap);
}

uint64_t static SignedCustodianRecoveryKey._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C80, (uint64_t)static SignedCustodianRecoveryKey._protobuf_nameMap, a1);
}

uint64_t SignedCustodianRecoveryKey.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008AEE4(a1, a2, a3, (void (*)(void))type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t static SignedCustodianRecoveryKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D3AF4(a1, a2, type metadata accessor for SignedCustodianRecoveryKey) & 1;
}

Swift::Int SignedCustodianRecoveryKey.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SignedCustodianRecoveryKey, &qword_10029A120, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);
}

uint64_t sub_10008C22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SignedCustodianRecoveryKey.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008C244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E3A0, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008C2C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C80, (uint64_t)static SignedCustodianRecoveryKey._protobuf_nameMap, a1);
}

uint64_t sub_10008C2E8(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A570, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008C354()
{
  sub_1000D8CA4(&qword_10029A570, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);

  return sub_100221F60();
}

void *IdmsTrustedDevicesVersion.protoMessageName.unsafeMutableAddressor()
{
  return &static IdmsTrustedDevicesVersion.protoMessageName;
}

unint64_t static IdmsTrustedDevicesVersion.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_10008C3F8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static IdmsTrustedDevicesVersion._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static IdmsTrustedDevicesVersion._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "IdmsTrustedDevicesVersionString";
  *(void *)(v6 + 8) = 31;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "timestamp";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t IdmsTrustedDevicesVersion._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C88, (uint64_t)static IdmsTrustedDevicesVersion._protobuf_nameMap);
}

uint64_t static IdmsTrustedDevicesVersion._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C88, (uint64_t)static IdmsTrustedDevicesVersion._protobuf_nameMap, a1);
}

uint64_t IdmsTrustedDevicesVersion.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_10008C688();
    }
    else if (result == 1)
    {
      sub_100221ED0();
    }
  }
  return result;
}

uint64_t sub_10008C688()
{
  return sub_100221F10();
}

uint64_t IdmsTrustedDevicesVersion.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_100221FE0(), !v4))
  {
    uint64_t result = sub_10008C7FC((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for IdmsTrustedDevicesVersion(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_10008C7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100221DC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029ED30);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1000D8CA4(&qword_10029E418, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

Swift::Int IdmsTrustedDevicesVersion.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for IdmsTrustedDevicesVersion, &qword_10029A128, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
}

uint64_t sub_10008CA4C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_100221DC0();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t (*sub_10008CAE0())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_10008CB04()
{
  return IdmsTrustedDevicesVersion.decodeMessage<A>(decoder:)();
}

uint64_t sub_10008CB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return IdmsTrustedDevicesVersion.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008CB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E398, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008CBB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C88, (uint64_t)static IdmsTrustedDevicesVersion._protobuf_nameMap, a1);
}

uint64_t sub_10008CBD4(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008CC40()
{
  sub_1000D8CA4(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);

  return sub_100221F60();
}

const char *Peer.protoMessageName.unsafeMutableAddressor()
{
  return "Peer";
}

uint64_t static Peer.protoMessageName.getter()
{
  return 1919247696;
}

uint64_t sub_10008CCD8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static Peer._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static Peer._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229B80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "peer_id";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "permanent_info_and_sig";
  *(void *)(v10 + 8) = 22;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "stable_info_and_sig";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "dynamic_info_and_sig";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "vouchers";
  *((void *)v16 + 1) = 8;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "recovery_voucher";
  *((void *)v18 + 1) = 16;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 7;
  *(void *)uint64_t v20 = "custodian_recovery_key_and_sig";
  *((void *)v20 + 1) = 30;
  v20[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t Peer._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C90, (uint64_t)static Peer._protobuf_nameMap);
}

uint64_t static Peer._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C90, (uint64_t)static Peer._protobuf_nameMap, a1);
}

uint64_t Peer.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100221ED0();
          break;
        case 2:
          sub_10008D224();
          break;
        case 3:
          sub_10008D2D4();
          break;
        case 4:
          sub_10008D384();
          break;
        case 5:
          type metadata accessor for SignedVoucher(0);
          sub_1000D8CA4(&qword_10029F010, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
          sub_100221F00();
          break;
        case 6:
          sub_10008D434();
          break;
        case 7:
          sub_10008D4E4();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_10008D224()
{
  return sub_100221F10();
}

uint64_t sub_10008D2D4()
{
  return sub_100221F10();
}

uint64_t sub_10008D384()
{
  return sub_100221F10();
}

uint64_t sub_10008D434()
{
  return sub_100221F10();
}

uint64_t sub_10008D4E4()
{
  return sub_100221F10();
}

uint64_t Peer.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_100221FE0(), !v4))
  {
    uint64_t result = sub_10008D75C((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_10008D960((uint64_t)v3, a1, a2, a3);
      sub_10008DB64((uint64_t)v3, a1, a2, a3);
      if (*(void *)(v3[2] + 16))
      {
        type metadata accessor for SignedVoucher(0);
        sub_1000D8CA4(&qword_10029F010, (void (*)(uint64_t))type metadata accessor for SignedVoucher);
        sub_100222010();
      }
      sub_10008DD68((uint64_t)v3, a1, a2, a3);
      sub_10008DF6C((uint64_t)v3, a1, a2, a3);
      type metadata accessor for Peer(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_10008D75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029EF80);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerPermanentInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Peer(0);
  sub_10000D830(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_10029EF80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029EF80);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerPermanentInfo);
  sub_1000D8CA4(&qword_10029A500, (void (*)(uint64_t))type metadata accessor for SignedPeerPermanentInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerPermanentInfo);
}

uint64_t sub_10008D960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Peer(0);
  sub_10000D830(a1 + *(int *)(v14 + 32), (uint64_t)v8, &qword_100299F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F18);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
  sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_10008DB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Peer(0);
  sub_10000D830(a1 + *(int *)(v14 + 36), (uint64_t)v8, &qword_10029ECA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029ECA0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
  sub_1000D8CA4(&qword_10029A530, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_10008DD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F20);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedRecoveryVoucher(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Peer(0);
  sub_10000D830(a1 + *(int *)(v14 + 40), (uint64_t)v8, &qword_100299F20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F20);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedRecoveryVoucher);
  sub_1000D8CA4(&qword_10029A558, (void (*)(uint64_t))type metadata accessor for SignedRecoveryVoucher);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedRecoveryVoucher);
}

uint64_t sub_10008DF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F28);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Peer(0);
  sub_10000D830(a1 + *(int *)(v14 + 44), (uint64_t)v8, &qword_100299F28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F28);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedCustodianRecoveryKey);
  sub_1000D8CA4(&qword_10029A570, (void (*)(uint64_t))type metadata accessor for SignedCustodianRecoveryKey);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedCustodianRecoveryKey);
}

Swift::Int Peer.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for Peer, &qword_10029A130, (void (*)(uint64_t))type metadata accessor for Peer);
}

uint64_t sub_10008E1B8@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = &_swiftEmptyArrayStorage;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + a1[7];
  uint64_t v5 = type metadata accessor for SignedPeerPermanentInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + a1[8];
  uint64_t v7 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  unint64_t v8 = (char *)a2 + a1[9];
  uint64_t v9 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (char *)a2 + a1[10];
  uint64_t v11 = type metadata accessor for SignedRecoveryVoucher(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (char *)a2 + a1[11];
  uint64_t v13 = type metadata accessor for SignedCustodianRecoveryKey(0);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);

  return v14(v12, 1, 1, v13);
}

uint64_t sub_10008E378()
{
  return Peer.decodeMessage<A>(decoder:)();
}

uint64_t sub_10008E390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Peer.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10008E3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E390, (void (*)(uint64_t))type metadata accessor for Peer);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10008E424@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C90, (uint64_t)static Peer._protobuf_nameMap, a1);
}

uint64_t sub_10008E448(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10008E4B4()
{
  sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);

  return sub_100221F60();
}

const char *PeerDifference.protoMessageName.unsafeMutableAddressor()
{
  return "PeerDifference";
}

uint64_t static PeerDifference.protoMessageName.getter()
{
  return 0x6666694472656550;
}

uint64_t sub_10008E564()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static PeerDifference._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static PeerDifference._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "add";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "remove";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "update";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t PeerDifference._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298C98, (uint64_t)static PeerDifference._protobuf_nameMap);
}

uint64_t static PeerDifference._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298C98, (uint64_t)static PeerDifference._protobuf_nameMap, a1);
}

uint64_t PeerDifference.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_10008F34C(v5, a1, a2, a3);
        break;
      case 2:
        sub_10008EDD8(v5, a1, a2, a3);
        break;
      case 1:
        sub_10008E864(v5, a1, a2, a3);
        break;
    }
  }
  return result;
}

uint64_t sub_10008E864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Peer(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_1000046DC(&qword_100299F58);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  Swift::String v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  id v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10000D830(a1, (uint64_t)v15, &qword_100299658);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_10004015C((uint64_t)v15, &qword_100299658);
    uint64_t v36 = v16;
    uint64_t v37 = v53;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v38 = (uint64_t)v51;
    sub_1000D736C((uint64_t)v15, (uint64_t)v24, type metadata accessor for PeerDifference.OneOf_Operation);
    sub_1000D736C((uint64_t)v24, (uint64_t)v21, type metadata accessor for PeerDifference.OneOf_Operation);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1000D7E78((uint64_t)v21, type metadata accessor for PeerDifference.OneOf_Operation);
      uint64_t v37 = v53;
    }
    else
    {
      sub_10004015C((uint64_t)v31, &qword_100299F58);
      sub_1000D736C((uint64_t)v21, v38, type metadata accessor for Peer);
      sub_1000D736C(v38, (uint64_t)v31, type metadata accessor for Peer);
      uint64_t v37 = v53;
      v45(v31, 0, 1, v53);
    }
  }
  uint64_t v39 = v52;
  sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  sub_100221F10();
  if (v39) {
    return sub_10004015C((uint64_t)v31, &qword_100299F58);
  }
  uint64_t v41 = v49;
  sub_10000D830((uint64_t)v31, v49, &qword_100299F58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v37) == 1)
  {
    sub_10004015C((uint64_t)v31, &qword_100299F58);
    return sub_10004015C(v41, &qword_100299F58);
  }
  else
  {
    uint64_t v42 = v48;
    sub_1000D736C(v41, v48, type metadata accessor for Peer);
    if (v35 != 1) {
      sub_100221E60();
    }
    sub_10004015C((uint64_t)v31, &qword_100299F58);
    uint64_t v43 = v47;
    sub_10004015C(v47, &qword_100299658);
    sub_1000D736C(v42, v43, type metadata accessor for Peer);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_10008EDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Peer(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_1000046DC(&qword_100299F58);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  Swift::String v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  id v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10000D830(a1, (uint64_t)v15, &qword_100299658);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_10004015C((uint64_t)v15, &qword_100299658);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_1000D736C((uint64_t)v15, (uint64_t)v24, type metadata accessor for PeerDifference.OneOf_Operation);
    sub_1000D736C((uint64_t)v24, (uint64_t)v21, type metadata accessor for PeerDifference.OneOf_Operation);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10004015C((uint64_t)v31, &qword_100299F58);
      sub_1000D736C((uint64_t)v21, v37, type metadata accessor for Peer);
      sub_1000D736C(v37, (uint64_t)v31, type metadata accessor for Peer);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_1000D7E78((uint64_t)v21, type metadata accessor for PeerDifference.OneOf_Operation);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  sub_100221F10();
  if (v39) {
    return sub_10004015C((uint64_t)v31, &qword_100299F58);
  }
  uint64_t v41 = v49;
  sub_10000D830((uint64_t)v31, v49, &qword_100299F58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_10004015C((uint64_t)v31, &qword_100299F58);
    return sub_10004015C(v41, &qword_100299F58);
  }
  else
  {
    uint64_t v42 = v48;
    sub_1000D736C(v41, v48, type metadata accessor for Peer);
    if (v35 != 1) {
      sub_100221E60();
    }
    sub_10004015C((uint64_t)v31, &qword_100299F58);
    uint64_t v43 = v47;
    sub_10004015C(v47, &qword_100299658);
    sub_1000D736C(v42, v43, type metadata accessor for Peer);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t sub_10008F34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v5 = type metadata accessor for Peer(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v51 = (char *)&v44 - v11;
  uint64_t v12 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_1000046DC(&qword_100299F58);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v49 = (uint64_t)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  Swift::String v31 = (char *)&v44 - v30;
  uint64_t v50 = v6;
  id v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v53 = v5;
  uint64_t v33 = v5;
  uint64_t v34 = v32;
  v32((char *)&v44 - v30, 1, 1, v33);
  uint64_t v47 = a1;
  sub_10000D830(a1, (uint64_t)v15, &qword_100299658);
  uint64_t v46 = v17;
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v35 == 1)
  {
    sub_10004015C((uint64_t)v15, &qword_100299658);
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v45 = v34;
    uint64_t v37 = (uint64_t)v51;
    sub_1000D736C((uint64_t)v15, (uint64_t)v24, type metadata accessor for PeerDifference.OneOf_Operation);
    sub_1000D736C((uint64_t)v24, (uint64_t)v21, type metadata accessor for PeerDifference.OneOf_Operation);
    uint64_t v36 = v16;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_10004015C((uint64_t)v31, &qword_100299F58);
      sub_1000D736C((uint64_t)v21, v37, type metadata accessor for Peer);
      sub_1000D736C(v37, (uint64_t)v31, type metadata accessor for Peer);
      uint64_t v38 = v53;
      v45(v31, 0, 1, v53);
      goto LABEL_7;
    }
    sub_1000D7E78((uint64_t)v21, type metadata accessor for PeerDifference.OneOf_Operation);
  }
  uint64_t v38 = v53;
LABEL_7:
  uint64_t v39 = v52;
  sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  sub_100221F10();
  if (v39) {
    return sub_10004015C((uint64_t)v31, &qword_100299F58);
  }
  uint64_t v41 = v49;
  sub_10000D830((uint64_t)v31, v49, &qword_100299F58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v41, 1, v38) == 1)
  {
    sub_10004015C((uint64_t)v31, &qword_100299F58);
    return sub_10004015C(v41, &qword_100299F58);
  }
  else
  {
    uint64_t v42 = v48;
    sub_1000D736C(v41, v48, type metadata accessor for Peer);
    if (v35 != 1) {
      sub_100221E60();
    }
    sub_10004015C((uint64_t)v31, &qword_100299F58);
    uint64_t v43 = v47;
    sub_10004015C(v47, &qword_100299658);
    sub_1000D736C(v42, v43, type metadata accessor for Peer);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v36);
  }
}

uint64_t PeerDifference.traverse<A>(visitor:)()
{
  uint64_t v2 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D830(v0, (uint64_t)v5, &qword_100299658);
  uint64_t v6 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1) {
    goto LABEL_8;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_10008FC88(v0);
    }
    else {
      sub_10008FEAC(v0);
    }
  }
  else
  {
    sub_10008FA68(v0);
  }
  uint64_t result = sub_1000D7E78((uint64_t)v5, type metadata accessor for PeerDifference.OneOf_Operation);
  if (!v1)
  {
LABEL_8:
    type metadata accessor for PeerDifference(0);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_10008FA68(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Peer(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D830(a1, (uint64_t)v5, &qword_100299658);
  uint64_t v10 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v5, &qword_100299658);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Peer);
    sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
    sub_100222020();
    return sub_1000D7E78((uint64_t)v9, type metadata accessor for Peer);
  }
  uint64_t result = sub_1000D7E78((uint64_t)v5, type metadata accessor for PeerDifference.OneOf_Operation);
  __break(1u);
  return result;
}

uint64_t sub_10008FC88(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Peer(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D830(a1, (uint64_t)v5, &qword_100299658);
  uint64_t v10 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v5, &qword_100299658);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Peer);
    sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
    sub_100222020();
    return sub_1000D7E78((uint64_t)v9, type metadata accessor for Peer);
  }
  uint64_t result = sub_1000D7E78((uint64_t)v5, type metadata accessor for PeerDifference.OneOf_Operation);
  __break(1u);
  return result;
}

uint64_t sub_10008FEAC(uint64_t a1)
{
  uint64_t v2 = sub_1000046DC(&qword_100299658);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Peer(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D830(a1, (uint64_t)v5, &qword_100299658);
  uint64_t v10 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_10004015C((uint64_t)v5, &qword_100299658);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1000D736C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Peer);
    sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
    sub_100222020();
    return sub_1000D7E78((uint64_t)v9, type metadata accessor for Peer);
  }
  uint64_t result = sub_1000D7E78((uint64_t)v5, type metadata accessor for PeerDifference.OneOf_Operation);
  __break(1u);
  return result;
}

Swift::Int PeerDifference.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for PeerDifference, &qword_10029A138, (void (*)(uint64_t))type metadata accessor for PeerDifference);
}

uint64_t sub_100090118@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PeerDifference.OneOf_Operation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_100090188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PeerDifference.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000901A0()
{
  return PeerDifference.traverse<A>(visitor:)();
}

uint64_t sub_1000901B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E388, (void (*)(uint64_t))type metadata accessor for PeerDifference);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100090234@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298C98, (uint64_t)static PeerDifference._protobuf_nameMap, a1);
}

uint64_t sub_100090258(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A178, (void (*)(uint64_t))type metadata accessor for PeerDifference);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000902C4()
{
  sub_1000D8CA4(&qword_10029A178, (void (*)(uint64_t))type metadata accessor for PeerDifference);

  return sub_100221F60();
}

const char *TLKShare.protoMessageName.unsafeMutableAddressor()
{
  return "TLKShare";
}

uint64_t static TLKShare.protoMessageName.getter()
{
  return 0x65726168534B4C54;
}

uint64_t sub_100090364()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static TLKShare._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static TLKShare._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100229B90;
  unint64_t v4 = v28 + v3;
  unint64_t v5 = v28 + v3 + v1[14];
  *(void *)(v28 + v3) = 1;
  *(void *)unint64_t v5 = "view";
  *(void *)(v5 + 8) = 4;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v28 + v3 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "curve";
  *(void *)(v9 + 8) = 5;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v28 + v3 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "epoch";
  *((void *)v11 + 1) = 5;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v28 + v3 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "key_uuid";
  *((void *)v13 + 1) = 8;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v28 + v3 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "poisoned";
  *((void *)v15 + 1) = 8;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v28 + v3 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "receiver";
  *((void *)v17 + 1) = 8;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v28 + v3 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "receiver_public_encryption_key";
  *((void *)v19 + 1) = 30;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v28 + v3 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "sender";
  *((void *)v21 + 1) = 6;
  v21[16] = 2;
  v8();
  uint64_t v22 = v28 + v3 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "signature";
  *(void *)(v22 + 8) = 9;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  uint64_t v23 = (void *)(v28 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)uint64_t v24 = "version";
  *((void *)v24 + 1) = 7;
  v24[16] = 2;
  v8();
  uint64_t v25 = (void *)(v28 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  *uint64_t v25 = 11;
  *(void *)uint64_t v26 = "wrappedkey";
  *((void *)v26 + 1) = 10;
  v26[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t TLKShare._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CA0, (uint64_t)static TLKShare._protobuf_nameMap);
}

uint64_t static TLKShare._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CA0, (uint64_t)static TLKShare._protobuf_nameMap, a1);
}

uint64_t TLKShare.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 4:
        case 6:
        case 7:
        case 8:
        case 9:
        case 11:
          sub_100221ED0();
          break;
        case 2:
        case 3:
        case 5:
        case 10:
          sub_100221EB0();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t TLKShare.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_100221FE0(), !v1))
  {
    if (!v0[2] || (uint64_t result = sub_100221FC0(), !v1))
    {
      if (!v0[3] || (uint64_t result = sub_100221FC0(), !v1))
      {
        unint64_t v5 = v0[5];
        uint64_t v6 = HIBYTE(v5) & 0xF;
        if ((v5 & 0x2000000000000000) == 0) {
          uint64_t v6 = v0[4] & 0xFFFFFFFFFFFFLL;
        }
        if (!v6 || (uint64_t result = sub_100221FE0(), !v1))
        {
          if (!v0[6] || (uint64_t result = sub_100221FC0(), !v1))
          {
            unint64_t v7 = v0[8];
            uint64_t v8 = HIBYTE(v7) & 0xF;
            if ((v7 & 0x2000000000000000) == 0) {
              uint64_t v8 = v0[7] & 0xFFFFFFFFFFFFLL;
            }
            if (!v8 || (uint64_t result = sub_100221FE0(), !v1))
            {
              unint64_t v9 = v0[10];
              uint64_t v10 = HIBYTE(v9) & 0xF;
              if ((v9 & 0x2000000000000000) == 0) {
                uint64_t v10 = v0[9] & 0xFFFFFFFFFFFFLL;
              }
              if (!v10 || (uint64_t result = sub_100221FE0(), !v1))
              {
                unint64_t v11 = v0[12];
                uint64_t v12 = HIBYTE(v11) & 0xF;
                if ((v11 & 0x2000000000000000) == 0) {
                  uint64_t v12 = v0[11] & 0xFFFFFFFFFFFFLL;
                }
                if (!v12 || (uint64_t result = sub_100221FE0(), !v1))
                {
                  unint64_t v13 = v0[14];
                  uint64_t v14 = HIBYTE(v13) & 0xF;
                  if ((v13 & 0x2000000000000000) == 0) {
                    uint64_t v14 = v0[13] & 0xFFFFFFFFFFFFLL;
                  }
                  if (!v14 || (uint64_t result = sub_100221FE0(), !v1))
                  {
                    if (!v0[15] || (uint64_t result = sub_100221FC0(), !v1))
                    {
                      unint64_t v15 = v0[17];
                      uint64_t v16 = HIBYTE(v15) & 0xF;
                      if ((v15 & 0x2000000000000000) == 0) {
                        uint64_t v16 = v0[16] & 0xFFFFFFFFFFFFLL;
                      }
                      if (!v16 || (uint64_t result = sub_100221FE0(), !v1))
                      {
                        type metadata accessor for TLKShare(0);
                        return sub_100221DD0();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

Swift::Int TLKShare.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for TLKShare, &qword_10029A140, (void (*)(uint64_t))type metadata accessor for TLKShare);
}

uint64_t sub_100090BCC@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0xE000000000000000;
  a1[9] = 0;
  a1[10] = 0xE000000000000000;
  a1[11] = 0;
  a1[12] = 0xE000000000000000;
  a1[13] = 0;
  a1[14] = 0xE000000000000000;
  a1[15] = 0;
  a1[16] = 0;
  a1[17] = 0xE000000000000000;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*sub_100090C20())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_100090C44()
{
  return TLKShare.decodeMessage<A>(decoder:)();
}

uint64_t sub_100090C5C()
{
  return TLKShare.traverse<A>(visitor:)();
}

uint64_t sub_100090C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E380, (void (*)(uint64_t))type metadata accessor for TLKShare);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100090CF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CA0, (uint64_t)static TLKShare._protobuf_nameMap, a1);
}

uint64_t sub_100090D14(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100090D80()
{
  sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);

  return sub_100221F60();
}

const char *ViewKey.protoMessageName.unsafeMutableAddressor()
{
  return "ViewKey";
}

uint64_t static ViewKey.protoMessageName.getter()
{
  return 0x79654B77656956;
}

uint64_t sub_100090E24()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static ViewKey._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static ViewKey._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100229BA0;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 1;
  *(void *)unint64_t v5 = "uuid";
  *(void *)(v5 + 8) = 4;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "parentkey_uuid";
  *(void *)(v9 + 8) = 14;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  unint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)unint64_t v11 = "keyclass";
  *((void *)v11 + 1) = 8;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  unint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)unint64_t v13 = "wrappedkey_base64";
  *((void *)v13 + 1) = 17;
  v13[16] = 2;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 5;
  *(void *)uint64_t v14 = "upload_os_version";
  *(void *)(v14 + 8) = 17;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return sub_100222040();
}

uint64_t ViewKey._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CA8, (uint64_t)static ViewKey._protobuf_nameMap);
}

uint64_t static ViewKey._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CA8, (uint64_t)static ViewKey._protobuf_nameMap, a1);
}

uint64_t ViewKey.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
        case 5:
          sub_100221ED0();
          break;
        case 3:
          sub_1000D8CEC();
          sub_100221E80();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t ViewKey.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_100221FE0(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = sub_100221FE0(), !v1))
    {
      if (!v0[4] || (sub_1000D8CEC(), uint64_t result = sub_100221F90(), !v1))
      {
        unint64_t v7 = v0[7];
        uint64_t v8 = HIBYTE(v7) & 0xF;
        if ((v7 & 0x2000000000000000) == 0) {
          uint64_t v8 = v0[6] & 0xFFFFFFFFFFFFLL;
        }
        if (!v8 || (uint64_t result = sub_100221FE0(), !v1))
        {
          unint64_t v9 = v0[9];
          uint64_t v10 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000) == 0) {
            uint64_t v10 = v0[8] & 0xFFFFFFFFFFFFLL;
          }
          if (!v10 || (uint64_t result = sub_100221FE0(), !v1))
          {
            type metadata accessor for ViewKey(0);
            return sub_100221DD0();
          }
        }
      }
    }
  }
  return result;
}

Swift::Int ViewKey.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for ViewKey, &qword_10029A150, (void (*)(uint64_t))type metadata accessor for ViewKey);
}

uint64_t sub_100091400@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*sub_100091448())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_10009146C()
{
  return ViewKey.decodeMessage<A>(decoder:)();
}

uint64_t sub_100091484()
{
  return ViewKey.traverse<A>(visitor:)();
}

uint64_t sub_10009149C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E378, (void (*)(uint64_t))type metadata accessor for ViewKey);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100091518@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CA8, (uint64_t)static ViewKey._protobuf_nameMap, a1);
}

uint64_t sub_10009153C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&qword_1002997F0, (void (*)(uint64_t))type metadata accessor for ViewKey);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000915A8()
{
  sub_1000D8CA4((unint64_t *)&qword_1002997F0, (void (*)(uint64_t))type metadata accessor for ViewKey);

  return sub_100221F60();
}

const char *ViewKeys.protoMessageName.unsafeMutableAddressor()
{
  return "ViewKeys";
}

uint64_t static ViewKeys.protoMessageName.getter()
{
  return 0x7379654B77656956;
}

uint64_t sub_10009164C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static ViewKeys._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static ViewKeys._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100229BA0;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 1;
  *(void *)unint64_t v5 = "view";
  *(void *)(v5 + 8) = 4;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "new_tlk";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  unint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)unint64_t v11 = "new_class_a";
  *((void *)v11 + 1) = 11;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  unint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)unint64_t v13 = "new_class_c";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 5;
  *(void *)uint64_t v14 = "old_tlk";
  *(void *)(v14 + 8) = 7;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return sub_100222040();
}

uint64_t ViewKeys._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CB0, (uint64_t)static ViewKeys._protobuf_nameMap);
}

uint64_t static ViewKeys._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CB0, (uint64_t)static ViewKeys._protobuf_nameMap, a1);
}

uint64_t sub_10009191C()
{
  type metadata accessor for ViewKeys._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
  uint64_t v2 = type metadata accessor for ViewKey(0);
  unint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC, 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk, 1, 1, v2);
  qword_100299EA8 = v0;
  return result;
}

uint64_t sub_100091A2C(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v7 = v1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
  uint64_t v8 = type metadata accessor for ViewKey(0);
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA, 1, 1, v8);
  uint64_t v11 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC, 1, 1, v8);
  uint64_t v21 = v1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
  v9();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v12;
  *(void *)(v1 + 24) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v6, &qword_100299EE0);
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v6, v7, &qword_100299EE0);
  swift_endAccess();
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
  swift_beginAccess();
  sub_10000D830(v15, (uint64_t)v6, &qword_100299EE0);
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v6, v10, &qword_100299EE0);
  swift_endAccess();
  uint64_t v16 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
  swift_beginAccess();
  sub_10000D830(v16, (uint64_t)v6, &qword_100299EE0);
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v6, v11, &qword_100299EE0);
  swift_endAccess();
  uint64_t v17 = a1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
  swift_beginAccess();
  sub_10000D830(v17, (uint64_t)v6, &qword_100299EE0);
  swift_release();
  uint64_t v18 = v21;
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v6, v18, &qword_100299EE0);
  swift_endAccess();
  return v1;
}

uint64_t sub_100091D6C()
{
  swift_bridgeObjectRelease();
  sub_10004015C(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk, &qword_100299EE0);
  sub_10004015C(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA, &qword_100299EE0);
  sub_10004015C(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC, &qword_100299EE0);
  sub_10004015C(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk, &qword_100299EE0);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t ViewKeys.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095894(a1, a2, a3, type metadata accessor for ViewKeys, (void (*)(void))type metadata accessor for ViewKeys._StorageClass, sub_100091A2C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100091E90);
}

uint64_t sub_100091E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v4 || (v10 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_1000BAAE8(a2, a1, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularStringField(value:));
        break;
      case 2:
        sub_100091FBC();
        break;
      case 3:
        sub_10009208C();
        break;
      case 4:
        sub_10009215C();
        break;
      case 5:
        sub_10009222C();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_100091FBC()
{
  return swift_endAccess();
}

uint64_t sub_10009208C()
{
  return swift_endAccess();
}

uint64_t sub_10009215C()
{
  return swift_endAccess();
}

uint64_t sub_10009222C()
{
  return swift_endAccess();
}

uint64_t ViewKeys.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095C34(a1, a2, a3, (void (*)(void))type metadata accessor for ViewKeys, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10009233C);
}

uint64_t sub_10009233C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (swift_bridgeObjectRetain(), sub_100221FE0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t result = sub_100092464(a1, a2, a3, a4);
    if (!v4)
    {
      sub_100092680(a1, a2, a3, a4);
      sub_10009289C(a1, a2, a3, a4);
      return sub_100092AB8(a1, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_100092464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewKey(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299EE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299EE0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for ViewKey);
  sub_1000D8CA4((unint64_t *)&qword_1002997F0, (void (*)(uint64_t))type metadata accessor for ViewKey);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for ViewKey);
}

uint64_t sub_100092680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewKey(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299EE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299EE0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for ViewKey);
  sub_1000D8CA4((unint64_t *)&qword_1002997F0, (void (*)(uint64_t))type metadata accessor for ViewKey);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for ViewKey);
}

uint64_t sub_10009289C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewKey(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299EE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299EE0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for ViewKey);
  sub_1000D8CA4((unint64_t *)&qword_1002997F0, (void (*)(uint64_t))type metadata accessor for ViewKey);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for ViewKey);
}

uint64_t sub_100092AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299EE0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewKey(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299EE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299EE0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for ViewKey);
  sub_1000D8CA4((unint64_t *)&qword_1002997F0, (void (*)(uint64_t))type metadata accessor for ViewKey);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for ViewKey);
}

BOOL sub_100092CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v104 = type metadata accessor for ViewKey(0);
  uint64_t v4 = *(void *)(v104 - 8);
  __chkstk_darwin(v104, v5);
  uint64_t v103 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000046DC(&qword_10029E460);
  uint64_t v8 = __chkstk_darwin(v105, v7);
  uint64_t v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v8, v11);
  unint64_t v99 = (char *)&v93 - v13;
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v102 = (uint64_t)&v93 - v16;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v93 - v18;
  uint64_t v20 = sub_1000046DC(&qword_100299EE0);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  unint64_t v96 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v100 = (char *)&v93 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  id v97 = (char *)&v93 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v98 = (uint64_t)&v93 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v101 = (char *)&v93 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v39 = (char *)&v93 - v38;
  uint64_t v41 = __chkstk_darwin(v37, v40);
  uint64_t v43 = (char *)&v93 - v42;
  __chkstk_darwin(v41, v44);
  uint64_t v46 = (char *)&v93 - v45;
  swift_beginAccess();
  uint64_t v48 = *(void *)(a1 + 16);
  uint64_t v47 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v48 == *(void *)(a2 + 16) && v47 == *(void *)(a2 + 24)
    || (v49 = sub_100222A30(), BOOL result = 0, (v49 & 1) != 0))
  {
    unint64_t v94 = v10;
    uint64_t v51 = a1 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
    swift_beginAccess();
    sub_10000D830(v51, (uint64_t)v46, &qword_100299EE0);
    uint64_t v52 = a2 + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newTlk;
    swift_beginAccess();
    uint64_t v53 = (uint64_t)&v19[*(int *)(v105 + 48)];
    sub_10000D830((uint64_t)v46, (uint64_t)v19, &qword_100299EE0);
    sub_10000D830(v52, v53, &qword_100299EE0);
    uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v54 = v4 + 48;
    uint64_t v55 = v56;
    uint64_t v57 = v104;
    if (v56((uint64_t)v19, 1, v104) == 1)
    {
      swift_retain();
      swift_retain();
      sub_10004015C((uint64_t)v46, &qword_100299EE0);
      if (v55(v53, 1, v57) != 1)
      {
LABEL_10:
        uint64_t v59 = (uint64_t)v19;
LABEL_18:
        sub_10004015C(v59, &qword_10029E460);
        goto LABEL_19;
      }
      uint64_t v95 = v55;
      sub_10004015C((uint64_t)v19, &qword_100299EE0);
    }
    else
    {
      sub_10000D830((uint64_t)v19, (uint64_t)v43, &qword_100299EE0);
      if (v55(v53, 1, v57) == 1)
      {
        swift_retain();
        swift_retain();
        sub_10004015C((uint64_t)v46, &qword_100299EE0);
        uint64_t v58 = (uint64_t)v43;
LABEL_9:
        sub_1000D7E78(v58, type metadata accessor for ViewKey);
        goto LABEL_10;
      }
      uint64_t v95 = v55;
      uint64_t v60 = v53;
      uint64_t v61 = v103;
      sub_1000D736C(v60, v103, type metadata accessor for ViewKey);
      swift_retain();
      swift_retain();
      char v62 = _s18TrustedPeersHelper7ViewKeyV2eeoiySbAC_ACtFZ_0(v43, v61);
      sub_1000D7E78(v61, type metadata accessor for ViewKey);
      sub_10004015C((uint64_t)v46, &qword_100299EE0);
      sub_1000D7E78((uint64_t)v43, type metadata accessor for ViewKey);
      sub_10004015C((uint64_t)v19, &qword_100299EE0);
      if ((v62 & 1) == 0)
      {
LABEL_19:
        swift_release();
        swift_release();
        return 0;
      }
    }
    uint64_t v63 = a1
        + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
    swift_beginAccess();
    sub_10000D830(v63, (uint64_t)v39, &qword_100299EE0);
    uint64_t v64 = a2
        + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassA;
    swift_beginAccess();
    uint64_t v65 = v102;
    uint64_t v66 = v102 + *(int *)(v105 + 48);
    sub_10000D830((uint64_t)v39, v102, &qword_100299EE0);
    sub_10000D830(v64, v66, &qword_100299EE0);
    uint64_t v67 = v104;
    uint64_t v68 = v95;
    if (v95(v65, 1, v104) == 1)
    {
      sub_10004015C((uint64_t)v39, &qword_100299EE0);
      if (v68(v66, 1, v67) == 1)
      {
        uint64_t v95 = v68;
        sub_10004015C(v65, &qword_100299EE0);
LABEL_23:
        uint64_t v72 = a1
            + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
        swift_beginAccess();
        uint64_t v73 = v98;
        sub_10000D830(v72, v98, &qword_100299EE0);
        uint64_t v74 = a2
            + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__newClassC;
        swift_beginAccess();
        uint64_t v19 = v99;
        uint64_t v75 = (uint64_t)&v99[*(int *)(v105 + 48)];
        sub_10000D830(v73, (uint64_t)v99, &qword_100299EE0);
        sub_10000D830(v74, v75, &qword_100299EE0);
        uint64_t v76 = v54;
        uint64_t v77 = v95;
        if (v95((uint64_t)v19, 1, v67) == 1)
        {
          sub_10004015C(v73, &qword_100299EE0);
          unsigned int v78 = v77(v75, 1, v67);
          uint64_t v79 = (uint64_t)v94;
          uint64_t v80 = (uint64_t)v100;
          if (v78 == 1)
          {
            uint64_t v95 = v77;
            uint64_t v104 = v76;
            sub_10004015C((uint64_t)v19, &qword_100299EE0);
LABEL_29:
            uint64_t v86 = a1
                + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
            swift_beginAccess();
            sub_10000D830(v86, v80, &qword_100299EE0);
            uint64_t v87 = a2
                + OBJC_IVAR____TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__oldTlk;
            swift_beginAccess();
            uint64_t v88 = v79 + *(int *)(v105 + 48);
            sub_10000D830(v80, v79, &qword_100299EE0);
            sub_10000D830(v87, v88, &qword_100299EE0);
            int v89 = v95;
            if (v95(v79, 1, v67) == 1)
            {
              swift_release();
              swift_release();
              sub_10004015C(v80, &qword_100299EE0);
              if (v89(v88, 1, v67) == 1)
              {
                sub_10004015C(v79, &qword_100299EE0);
                return 1;
              }
            }
            else
            {
              id v90 = v96;
              sub_10000D830(v79, (uint64_t)v96, &qword_100299EE0);
              if (v89(v88, 1, v67) != 1)
              {
                uint64_t v91 = v103;
                sub_1000D736C(v88, v103, type metadata accessor for ViewKey);
                char v92 = _s18TrustedPeersHelper7ViewKeyV2eeoiySbAC_ACtFZ_0(v90, v91);
                swift_release();
                swift_release();
                sub_1000D7E78(v91, type metadata accessor for ViewKey);
                sub_10004015C(v80, &qword_100299EE0);
                sub_1000D7E78((uint64_t)v90, type metadata accessor for ViewKey);
                sub_10004015C(v79, &qword_100299EE0);
                return (v92 & 1) != 0;
              }
              swift_release();
              swift_release();
              sub_10004015C(v80, &qword_100299EE0);
              sub_1000D7E78((uint64_t)v90, type metadata accessor for ViewKey);
            }
            sub_10004015C(v79, &qword_10029E460);
            return 0;
          }
          goto LABEL_10;
        }
        uint64_t v81 = v97;
        sub_10000D830((uint64_t)v19, (uint64_t)v97, &qword_100299EE0);
        unsigned int v82 = v77(v75, 1, v67);
        id v83 = v100;
        if (v82 == 1)
        {
          sub_10004015C(v73, &qword_100299EE0);
          uint64_t v58 = (uint64_t)v81;
          goto LABEL_9;
        }
        uint64_t v95 = v77;
        uint64_t v104 = v76;
        uint64_t v84 = v103;
        sub_1000D736C(v75, v103, type metadata accessor for ViewKey);
        char v85 = _s18TrustedPeersHelper7ViewKeyV2eeoiySbAC_ACtFZ_0(v81, v84);
        sub_1000D7E78(v84, type metadata accessor for ViewKey);
        sub_10004015C(v73, &qword_100299EE0);
        sub_1000D7E78((uint64_t)v81, type metadata accessor for ViewKey);
        sub_10004015C((uint64_t)v19, &qword_100299EE0);
        uint64_t v80 = (uint64_t)v83;
        uint64_t v79 = (uint64_t)v94;
        if (v85) {
          goto LABEL_29;
        }
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v69 = v101;
      sub_10000D830(v65, (uint64_t)v101, &qword_100299EE0);
      if (v68(v66, 1, v67) != 1)
      {
        uint64_t v95 = v68;
        uint64_t v70 = v103;
        sub_1000D736C(v66, v103, type metadata accessor for ViewKey);
        char v71 = _s18TrustedPeersHelper7ViewKeyV2eeoiySbAC_ACtFZ_0(v69, v70);
        sub_1000D7E78(v70, type metadata accessor for ViewKey);
        sub_10004015C((uint64_t)v39, &qword_100299EE0);
        sub_1000D7E78((uint64_t)v69, type metadata accessor for ViewKey);
        uint64_t v67 = v104;
        sub_10004015C(v65, &qword_100299EE0);
        if ((v71 & 1) == 0) {
          goto LABEL_19;
        }
        goto LABEL_23;
      }
      sub_10004015C((uint64_t)v39, &qword_100299EE0);
      sub_1000D7E78((uint64_t)v69, type metadata accessor for ViewKey);
    }
    uint64_t v59 = v65;
    goto LABEL_18;
  }
  return result;
}

Swift::Int ViewKeys.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for ViewKeys, &qword_10029A158, (void (*)(uint64_t))type metadata accessor for ViewKeys);
}

uint64_t sub_10009392C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BC920(a1, &qword_100298CB8, &qword_100299EA8, a2);
}

uint64_t sub_100093950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ViewKeys.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_100093968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ViewKeys.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100093980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E370, (void (*)(uint64_t))type metadata accessor for ViewKeys);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000939FC(uint64_t a1)
{
  return sub_1000D70D0(v1, a1, type metadata accessor for ViewKeys, (uint64_t (*)(uint64_t, uint64_t))sub_100092CD4) & 1;
}

uint64_t sub_100093A48@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CB0, (uint64_t)static ViewKeys._protobuf_nameMap, a1);
}

uint64_t sub_100093A6C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100093AD8()
{
  sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);

  return sub_100221F60();
}

void *ViewKeysRecords.protoMessageName.unsafeMutableAddressor()
{
  return &static ViewKeysRecords.protoMessageName;
}

uint64_t static ViewKeysRecords.protoMessageName.getter()
{
  return 0x7379654B77656956;
}

uint64_t sub_100093B84()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static ViewKeysRecords._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static ViewKeysRecords._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "tlk";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "class_a";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "class_c";
  *(void *)(v11 + 8) = 7;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t ViewKeysRecords._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CC0, (uint64_t)static ViewKeysRecords._protobuf_nameMap);
}

uint64_t static ViewKeysRecords._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CC0, (uint64_t)static ViewKeysRecords._protobuf_nameMap, a1);
}

uint64_t ViewKeysRecords.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_100093FF0();
        break;
      case 2:
        sub_100093F40();
        break;
      case 1:
        sub_100093E90();
        break;
    }
  }
  return result;
}

uint64_t sub_100093E90()
{
  return sub_100221F10();
}

uint64_t sub_100093F40()
{
  return sub_100221F10();
}

uint64_t sub_100093FF0()
{
  return sub_100221F10();
}

uint64_t ViewKeysRecords.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1000C1510(v3, a1, a2, a3, type metadata accessor for ViewKeysRecords);
  if (!v4)
  {
    sub_10009413C(v3, a1, a2, a3);
    sub_100094340(v3, a1, a2, a3);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_10009413C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_1002997E0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100221D50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ViewKeysRecords(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_1002997E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_1002997E0);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100094340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_1002997E0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100221D50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ViewKeysRecords(0);
  sub_10000D830(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_1002997E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_1002997E0);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

Swift::Int ViewKeysRecords.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for ViewKeysRecords, &qword_10029A160, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);
}

uint64_t sub_100094590@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + a1[5];
  uint64_t v5 = sub_100221D50();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  v8(a2 + a1[6], 1, 1, v5);
  uint64_t v6 = a2 + a1[7];

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v6, 1, 1, v5);
}

uint64_t sub_100094670()
{
  return ViewKeysRecords.decodeMessage<A>(decoder:)();
}

uint64_t sub_100094688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ViewKeysRecords.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000946A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E368, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10009471C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CC0, (uint64_t)static ViewKeysRecords._protobuf_nameMap, a1);
}

uint64_t sub_100094740(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A5F0, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000947AC()
{
  sub_1000D8CA4(&qword_10029A5F0, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);

  return sub_100221F60();
}

const char *Bottle.protoMessageName.unsafeMutableAddressor()
{
  return "Bottle";
}

uint64_t static Bottle.protoMessageName.getter()
{
  return 0x656C74746F42;
}

uint64_t sub_100094848()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static Bottle._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static Bottle._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100229B70;
  unint64_t v4 = v19 + v3;
  unint64_t v5 = v19 + v3 + v1[14];
  *(void *)(v19 + v3) = 2;
  *(void *)unint64_t v5 = "contents";
  *(void *)(v5 + 8) = 8;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 3;
  *(void *)unint64_t v9 = "escrowed_signing_spki";
  *(void *)(v9 + 8) = 21;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 4;
  *(void *)uint64_t v11 = "signature_using_escrow_key";
  *((void *)v11 + 1) = 26;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 5;
  *(void *)uint64_t v13 = "signature_using_peer_key";
  *((void *)v13 + 1) = 24;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 6;
  *(void *)uint64_t v15 = "peer_id";
  *((void *)v15 + 1) = 7;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 7;
  *(void *)uint64_t v17 = "bottle_id";
  *((void *)v17 + 1) = 9;
  v17[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t Bottle._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CC8, (uint64_t)static Bottle._protobuf_nameMap);
}

uint64_t static Bottle._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CC8, (uint64_t)static Bottle._protobuf_nameMap, a1);
}

uint64_t Bottle.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 2:
        case 3:
        case 4:
        case 5:
          sub_100221E90();
          break;
        case 6:
        case 7:
          sub_100221ED0();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t Bottle.traverse<A>(visitor:)()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_100221FA0();
      if (!v1)
      {
LABEL_8:
        uint64_t v5 = v0[2];
        unint64_t v6 = v0[3];
        switch(v6 >> 62)
        {
          case 1uLL:
            if ((int)v5 != v5 >> 32) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 2uLL:
            if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            if ((v6 & 0xFF000000000000) == 0) {
              goto LABEL_15;
            }
LABEL_14:
            uint64_t result = sub_100221FA0();
            if (!v1)
            {
LABEL_15:
              uint64_t v7 = v0[4];
              unint64_t v8 = v0[5];
              switch(v8 >> 62)
              {
                case 1uLL:
                  if ((int)v7 != v7 >> 32) {
                    goto LABEL_21;
                  }
                  goto LABEL_22;
                case 2uLL:
                  if (*(void *)(v7 + 16) != *(void *)(v7 + 24)) {
                    goto LABEL_21;
                  }
                  goto LABEL_22;
                case 3uLL:
                  goto LABEL_22;
                default:
                  if ((v8 & 0xFF000000000000) == 0) {
                    goto LABEL_22;
                  }
LABEL_21:
                  uint64_t result = sub_100221FA0();
                  if (!v1)
                  {
LABEL_22:
                    uint64_t v9 = v0[6];
                    unint64_t v10 = v0[7];
                    switch(v10 >> 62)
                    {
                      case 1uLL:
                        if ((int)v9 != v9 >> 32) {
                          goto LABEL_28;
                        }
                        goto LABEL_29;
                      case 2uLL:
                        if (*(void *)(v9 + 16) != *(void *)(v9 + 24)) {
                          goto LABEL_28;
                        }
                        goto LABEL_29;
                      case 3uLL:
                        goto LABEL_29;
                      default:
                        if ((v10 & 0xFF000000000000) == 0) {
                          goto LABEL_29;
                        }
LABEL_28:
                        uint64_t result = sub_100221FA0();
                        if (!v1)
                        {
LABEL_29:
                          unint64_t v11 = v0[9];
                          uint64_t v12 = HIBYTE(v11) & 0xF;
                          if ((v11 & 0x2000000000000000) == 0) {
                            uint64_t v12 = v0[8] & 0xFFFFFFFFFFFFLL;
                          }
                          if (!v12 || (uint64_t result = sub_100221FE0(), !v1))
                          {
                            unint64_t v13 = v0[11];
                            uint64_t v14 = HIBYTE(v13) & 0xF;
                            if ((v13 & 0x2000000000000000) == 0) {
                              uint64_t v14 = v0[10] & 0xFFFFFFFFFFFFLL;
                            }
                            if (!v14 || (uint64_t result = sub_100221FE0(), !v1))
                            {
                              type metadata accessor for Bottle(0);
                              uint64_t result = sub_100221DD0();
                            }
                          }
                        }
                        break;
                    }
                  }
                  break;
              }
            }
            break;
        }
      }
      return result;
  }
}

Swift::Int Bottle.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for Bottle, &qword_10029A168, (void (*)(uint64_t))type metadata accessor for Bottle);
}

uint64_t sub_100094F88@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_100229520;
  *(_OWORD *)(a1 + 16) = xmmword_100229520;
  *(_OWORD *)(a1 + 32) = xmmword_100229520;
  *(_OWORD *)(a1 + 48) = xmmword_100229520;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xE000000000000000;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*sub_100094FCC())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_100094FF0()
{
  return Bottle.decodeMessage<A>(decoder:)();
}

uint64_t sub_100095008()
{
  return Bottle.traverse<A>(visitor:)();
}

uint64_t sub_100095020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E360, (void (*)(uint64_t))type metadata accessor for Bottle);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10009509C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CC8, (uint64_t)static Bottle._protobuf_nameMap, a1);
}

uint64_t sub_1000950C0(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10009512C()
{
  sub_1000D8CA4((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);

  return sub_100221F60();
}

const char *EscrowPair.protoMessageName.unsafeMutableAddressor()
{
  return "EscrowPair";
}

uint64_t static EscrowPair.protoMessageName.getter()
{
  return 0x6150776F72637345;
}

uint64_t sub_1000951D4()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static EscrowPair._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static EscrowPair._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "escrow_record_id";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "bottle";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "record";
  *(void *)(v11 + 8) = 6;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t EscrowPair._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CD0, (uint64_t)static EscrowPair._protobuf_nameMap);
}

uint64_t static EscrowPair._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CD0, (uint64_t)static EscrowPair._protobuf_nameMap, a1);
}

uint64_t sub_100095428()
{
  type metadata accessor for EscrowPair._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0 + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  uint64_t v2 = type metadata accessor for Bottle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  uint64_t v4 = type metadata accessor for EscrowInformation(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  qword_100299EB0 = v0;
  return result;
}

uint64_t sub_100095504(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC((uint64_t *)&unk_10029F060);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v7 - 8, v8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v11 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  uint64_t v12 = type metadata accessor for Bottle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  uint64_t v14 = type metadata accessor for EscrowInformation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v15;
  *(void *)(v1 + 24) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v17, (uint64_t)v10, &qword_100299F38);
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v10, v11, &qword_100299F38);
  swift_endAccess();
  uint64_t v18 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  sub_10000D830(v18, (uint64_t)v6, (uint64_t *)&unk_10029F060);
  swift_release();
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v6, v13, (uint64_t *)&unk_10029F060);
  swift_endAccess();
  return v1;
}

uint64_t sub_1000957A0()
{
  swift_bridgeObjectRelease();
  sub_10004015C(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, &qword_100299F38);
  sub_10004015C(v0 + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record, (uint64_t *)&unk_10029F060);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t EscrowPair.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095894(a1, a2, a3, type metadata accessor for EscrowPair, (void (*)(void))type metadata accessor for EscrowPair._StorageClass, sub_100095504, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100095988);
}

uint64_t sub_100095894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(v7 + v13) = a6(v14);
    swift_release();
  }
  uint64_t v15 = swift_retain();
  a7(v15, a1, a2, a3);
  return swift_release();
}

uint64_t sub_100095988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 4:
        sub_100095B24();
        break;
      case 2:
        sub_100095A54();
        break;
      case 1:
        sub_1000BAAE8(a2, a1, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularStringField(value:));
        break;
    }
  }
  return result;
}

uint64_t sub_100095A54()
{
  return swift_endAccess();
}

uint64_t sub_100095B24()
{
  return swift_endAccess();
}

uint64_t EscrowPair.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095C34(a1, a2, a3, (void (*)(void))type metadata accessor for EscrowPair, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100095CD4);
}

uint64_t sub_100095C34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  a4(0);
  uint64_t v10 = swift_retain();
  a5(v10, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v5) {
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_100095CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (swift_bridgeObjectRetain(), sub_100221FE0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t result = sub_100095DBC(a1, a2, a3, a4);
    if (!v4) {
      return sub_100095FD8(a1, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_100095DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Bottle(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F38);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Bottle);
  sub_1000D8CA4((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Bottle);
}

uint64_t sub_100095FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029F060);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EscrowInformation(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, (uint64_t *)&unk_10029F060);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029F060);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for EscrowInformation);
  sub_1000D8CA4(&qword_10029A268, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for EscrowInformation);
}

BOOL sub_1000961F4(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = type metadata accessor for EscrowInformation(0);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v4);
  uint64_t v51 = (void **)((char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_1000046DC(&qword_10029E498);
  __chkstk_darwin(v54, v6);
  uint64_t v58 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000046DC((uint64_t *)&unk_10029F060);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v52 = (void **)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v12);
  uint64_t v55 = (uint64_t)&v51 - v13;
  uint64_t v14 = type metadata accessor for Bottle(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v53 = (uint64_t *)((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1000046DC(&qword_10029E488);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000046DC(&qword_100299F38);
  uint64_t v24 = __chkstk_darwin(v22 - 8, v23);
  uint64_t v26 = (uint64_t *)((char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v51 - v28;
  swift_beginAccess();
  uint64_t v30 = *(void *)(a1 + 16);
  uint64_t v31 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v30 == *(void *)(a2 + 16) && v31 == *(void *)(a2 + 24)
    || (v32 = sub_100222A30(), BOOL result = 0, (v32 & 1) != 0))
  {
    uint64_t v59 = a2;
    uint64_t v34 = a1
        + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
    swift_beginAccess();
    sub_10000D830(v34, (uint64_t)v29, &qword_100299F38);
    uint64_t v35 = v59
        + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
    swift_beginAccess();
    uint64_t v36 = (uint64_t)&v21[*(int *)(v18 + 48)];
    sub_10000D830((uint64_t)v29, (uint64_t)v21, &qword_100299F38);
    sub_10000D830(v35, v36, &qword_100299F38);
    uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v37((uint64_t)v21, 1, v14) == 1)
    {
      swift_retain();
      swift_retain();
      sub_10004015C((uint64_t)v29, &qword_100299F38);
      if (v37(v36, 1, v14) == 1)
      {
        sub_10004015C((uint64_t)v21, &qword_100299F38);
LABEL_12:
        uint64_t v40 = a1
            + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
        swift_beginAccess();
        uint64_t v41 = v55;
        sub_10000D830(v40, v55, (uint64_t *)&unk_10029F060);
        uint64_t v42 = v59
            + OBJC_IVAR____TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__record;
        swift_beginAccess();
        uint64_t v43 = v58;
        uint64_t v44 = v58 + *(int *)(v54 + 48);
        sub_10000D830(v41, v58, (uint64_t *)&unk_10029F060);
        sub_10000D830(v42, v44, (uint64_t *)&unk_10029F060);
        uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
        uint64_t v46 = v57;
        if (v45(v43, 1, v57) == 1)
        {
          swift_release();
          swift_release();
          sub_10004015C(v41, (uint64_t *)&unk_10029F060);
          if (v45(v44, 1, v46) == 1)
          {
            sub_10004015C(v43, (uint64_t *)&unk_10029F060);
            return 1;
          }
        }
        else
        {
          uint64_t v47 = v52;
          sub_10000D830(v43, (uint64_t)v52, (uint64_t *)&unk_10029F060);
          if (v45(v44, 1, v46) != 1)
          {
            uint64_t v48 = v44;
            char v49 = v51;
            sub_1000D736C(v48, (uint64_t)v51, type metadata accessor for EscrowInformation);
            char v50 = _s18TrustedPeersHelper17EscrowInformationV2eeoiySbAC_ACtFZ_0(v47, v49);
            swift_release();
            swift_release();
            sub_1000D7E78((uint64_t)v49, type metadata accessor for EscrowInformation);
            sub_10004015C(v41, (uint64_t *)&unk_10029F060);
            sub_1000D7E78((uint64_t)v47, type metadata accessor for EscrowInformation);
            sub_10004015C(v43, (uint64_t *)&unk_10029F060);
            return (v50 & 1) != 0;
          }
          swift_release();
          swift_release();
          sub_10004015C(v41, (uint64_t *)&unk_10029F060);
          sub_1000D7E78((uint64_t)v47, type metadata accessor for EscrowInformation);
        }
        sub_10004015C(v43, &qword_10029E498);
        return 0;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v21, (uint64_t)v26, &qword_100299F38);
      if (v37(v36, 1, v14) != 1)
      {
        uint64_t v38 = v53;
        sub_1000D736C(v36, (uint64_t)v53, type metadata accessor for Bottle);
        swift_retain();
        swift_retain();
        char v39 = _s18TrustedPeersHelper6BottleV2eeoiySbAC_ACtFZ_0(v26, v38);
        sub_1000D7E78((uint64_t)v38, type metadata accessor for Bottle);
        sub_10004015C((uint64_t)v29, &qword_100299F38);
        sub_1000D7E78((uint64_t)v26, type metadata accessor for Bottle);
        sub_10004015C((uint64_t)v21, &qword_100299F38);
        if (v39) {
          goto LABEL_12;
        }
LABEL_10:
        swift_release();
        swift_release();
        return 0;
      }
      swift_retain();
      swift_retain();
      sub_10004015C((uint64_t)v29, &qword_100299F38);
      sub_1000D7E78((uint64_t)v26, type metadata accessor for Bottle);
    }
    sub_10004015C((uint64_t)v21, &qword_10029E488);
    goto LABEL_10;
  }
  return result;
}

Swift::Int EscrowPair.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for EscrowPair, &qword_10029A170, (void (*)(uint64_t))type metadata accessor for EscrowPair);
}

uint64_t sub_1000969DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BC920(a1, &qword_100298CD8, &qword_100299EB0, a2);
}

uint64_t sub_100096A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowPair.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_100096A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowPair.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100096A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E358, (void (*)(uint64_t))type metadata accessor for EscrowPair);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100096AAC(uint64_t a1)
{
  return sub_1000D70D0(v1, a1, type metadata accessor for EscrowPair, (uint64_t (*)(uint64_t, uint64_t))sub_1000961F4) & 1;
}

uint64_t sub_100096AF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CD0, (uint64_t)static EscrowPair._protobuf_nameMap, a1);
}

uint64_t sub_100096B1C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A260, (void (*)(uint64_t))type metadata accessor for EscrowPair);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100096B88()
{
  sub_1000D8CA4(&qword_10029A260, (void (*)(uint64_t))type metadata accessor for EscrowPair);

  return sub_100221F60();
}

const char *Changes.protoMessageName.unsafeMutableAddressor()
{
  return "Changes";
}

uint64_t static Changes.protoMessageName.getter()
{
  return 0x7365676E616843;
}

uint64_t sub_100096C28()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static Changes._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static Changes._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100229BA0;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 1;
  *(void *)unint64_t v5 = "change_token";
  *(void *)(v5 + 8) = 12;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "differences";
  *(void *)(v9 + 8) = 11;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "recovery_signing_pub_key";
  *((void *)v11 + 1) = 24;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "recovery_encryption_pub_key";
  *((void *)v13 + 1) = 27;
  v13[16] = 2;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 5;
  *(void *)uint64_t v14 = "more";
  *(void *)(v14 + 8) = 4;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return sub_100222040();
}

uint64_t Changes._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CE0, (uint64_t)static Changes._protobuf_nameMap);
}

uint64_t static Changes._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CE0, (uint64_t)static Changes._protobuf_nameMap, a1);
}

uint64_t Changes.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v4 = v3;
          sub_100221ED0();
          goto LABEL_5;
        case 2:
          type metadata accessor for PeerDifference(0);
          sub_1000D8CA4(&qword_10029A178, (void (*)(uint64_t))type metadata accessor for PeerDifference);
          uint64_t v4 = v3;
          sub_100221F00();
          goto LABEL_5;
        case 3:
        case 4:
          uint64_t v4 = v3;
          sub_100221E90();
          goto LABEL_5;
        case 5:
          uint64_t v4 = v3;
          sub_100221E70();
LABEL_5:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t Changes.traverse<A>(visitor:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_100221FE0(), !v1))
  {
    if (!*(void *)(*(void *)(v0 + 16) + 16)
      || (type metadata accessor for PeerDifference(0),
          sub_1000D8CA4(&qword_10029A178, (void (*)(uint64_t))type metadata accessor for PeerDifference),
          uint64_t result = sub_100222010(),
          !v1))
    {
      uint64_t v5 = *(void *)(v0 + 24);
      unint64_t v6 = *(void *)(v0 + 32);
      switch(v6 >> 62)
      {
        case 1uLL:
          if ((int)v5 != v5 >> 32) {
            goto LABEL_13;
          }
          goto LABEL_14;
        case 2uLL:
          if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
            goto LABEL_13;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_14;
        default:
          if ((v6 & 0xFF000000000000) == 0) {
            goto LABEL_14;
          }
LABEL_13:
          uint64_t result = sub_100221FA0();
          if (!v1)
          {
LABEL_14:
            uint64_t v7 = *(void *)(v0 + 40);
            unint64_t v8 = *(void *)(v0 + 48);
            switch(v8 >> 62)
            {
              case 1uLL:
                if ((int)v7 != v7 >> 32) {
                  goto LABEL_20;
                }
                goto LABEL_21;
              case 2uLL:
                if (*(void *)(v7 + 16) != *(void *)(v7 + 24)) {
                  goto LABEL_20;
                }
                goto LABEL_21;
              case 3uLL:
                goto LABEL_21;
              default:
                if ((v8 & 0xFF000000000000) == 0) {
                  goto LABEL_21;
                }
LABEL_20:
                uint64_t result = sub_100221FA0();
                if (!v1)
                {
LABEL_21:
                  if (*(unsigned char *)(v0 + 56) != 1 || (uint64_t result = sub_100221F80(), !v1))
                  {
                    type metadata accessor for Changes(0);
                    uint64_t result = sub_100221DD0();
                  }
                }
                break;
            }
          }
          break;
      }
    }
  }
  return result;
}

Swift::Int Changes.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for Changes, &qword_10029A180, (void (*)(uint64_t))type metadata accessor for Changes);
}

uint64_t sub_100097318@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = &_swiftEmptyArrayStorage;
  *(_OWORD *)(a1 + 24) = xmmword_100229520;
  *(_OWORD *)(a1 + 40) = xmmword_100229520;
  *(unsigned char *)(a1 + 56) = 0;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_100097360()
{
  return Changes.decodeMessage<A>(decoder:)();
}

uint64_t sub_100097378()
{
  return Changes.traverse<A>(visitor:)();
}

uint64_t sub_100097390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E350, (void (*)(uint64_t))type metadata accessor for Changes);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100097410@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CE0, (uint64_t)static Changes._protobuf_nameMap, a1);
}

uint64_t sub_100097434(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000974A0()
{
  sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);

  return sub_100221F60();
}

void *PolicyDocumentKey.protoMessageName.unsafeMutableAddressor()
{
  return &static PolicyDocumentKey.protoMessageName;
}

unint64_t static PolicyDocumentKey.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_100097548()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static PolicyDocumentKey._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static PolicyDocumentKey._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "version";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "hash";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t PolicyDocumentKey._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CE8, (uint64_t)static PolicyDocumentKey._protobuf_nameMap);
}

uint64_t static PolicyDocumentKey._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CE8, (uint64_t)static PolicyDocumentKey._protobuf_nameMap, a1);
}

uint64_t PolicyDocumentKey.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_100221ED0();
      }
      else if (result == 1)
      {
        sub_100221EF0();
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t PolicyDocumentKey.traverse<A>(visitor:)()
{
  if (!*v0 || (uint64_t result = sub_100222000(), !v1))
  {
    unint64_t v3 = v0[2];
    uint64_t v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v4 = v0[1] & 0xFFFFFFFFFFFFLL;
    }
    if (!v4 || (uint64_t result = sub_100221FE0(), !v1))
    {
      type metadata accessor for PolicyDocumentKey(0);
      return sub_100221DD0();
    }
  }
  return result;
}

Swift::Int PolicyDocumentKey.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for PolicyDocumentKey, &qword_10029A188, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
}

uint64_t sub_100097900@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10009792C()
{
  return PolicyDocumentKey.decodeMessage<A>(decoder:)();
}

uint64_t sub_100097944()
{
  return PolicyDocumentKey.traverse<A>(visitor:)();
}

uint64_t sub_10009795C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E348, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000979DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CE8, (uint64_t)static PolicyDocumentKey._protobuf_nameMap, a1);
}

uint64_t sub_100097A00(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A298, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100097A6C()
{
  sub_1000D8CA4(&qword_10029A298, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);

  return sub_100221F60();
}

void *PolicyDocumentMapEntry.protoMessageName.unsafeMutableAddressor()
{
  return &static PolicyDocumentMapEntry.protoMessageName;
}

unint64_t static PolicyDocumentMapEntry.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_100097B10()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static PolicyDocumentMapEntry._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static PolicyDocumentMapEntry._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "key";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "value";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t PolicyDocumentMapEntry._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CF0, (uint64_t)static PolicyDocumentMapEntry._protobuf_nameMap);
}

uint64_t static PolicyDocumentMapEntry._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CF0, (uint64_t)static PolicyDocumentMapEntry._protobuf_nameMap, a1);
}

uint64_t PolicyDocumentMapEntry.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_100221E90();
    }
    else if (result == 1)
    {
      sub_100097DA0();
    }
  }
  return result;
}

uint64_t sub_100097DA0()
{
  return sub_100221F10();
}

uint64_t PolicyDocumentMapEntry.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100097F58((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    uint64_t v6 = *v3;
    unint64_t v7 = v3[1];
    switch(v7 >> 62)
    {
      case 1uLL:
        if ((int)v6 != v6 >> 32) {
          goto LABEL_8;
        }
        break;
      case 2uLL:
        if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
          goto LABEL_8;
        }
        break;
      case 3uLL:
        break;
      default:
        if ((v7 & 0xFF000000000000) != 0) {
LABEL_8:
        }
          sub_100221FA0();
        break;
    }
    type metadata accessor for PolicyDocumentMapEntry(0);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_100097F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299668);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PolicyDocumentMapEntry(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_100299668);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299668);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for PolicyDocumentKey);
  sub_1000D8CA4(&qword_10029A298, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for PolicyDocumentKey);
}

Swift::Int PolicyDocumentMapEntry.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for PolicyDocumentMapEntry, &qword_10029A190, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);
}

uint64_t sub_1000981A4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = xmmword_100229520;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for PolicyDocumentKey(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_100098234()
{
  return PolicyDocumentMapEntry.decodeMessage<A>(decoder:)();
}

uint64_t sub_10009824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PolicyDocumentMapEntry.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100098264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E340, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000982E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CF0, (uint64_t)static PolicyDocumentMapEntry._protobuf_nameMap, a1);
}

uint64_t sub_100098304(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A2A8, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100098370()
{
  sub_1000D8CA4(&qword_10029A2A8, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);

  return sub_100221F60();
}

const char *AccountInfo.protoMessageName.unsafeMutableAddressor()
{
  return "AccountInfo";
}

uint64_t static AccountInfo.protoMessageName.getter()
{
  return 0x49746E756F636341;
}

uint64_t sub_100098418(uint64_t a1)
{
  return sub_1000B84CC(a1, static AccountInfo._protobuf_nameMap, (uint64_t)"flags", 5);
}

uint64_t AccountInfo._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298CF8, (uint64_t)static AccountInfo._protobuf_nameMap);
}

uint64_t static AccountInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298CF8, (uint64_t)static AccountInfo._protobuf_nameMap, a1);
}

uint64_t AccountInfo.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_100221EE0();
    }
  }
  return result;
}

uint64_t AccountInfo.traverse<A>(visitor:)()
{
  if (!*v0 || (uint64_t result = sub_100221FF0(), !v1))
  {
    type metadata accessor for AccountInfo(0);
    return sub_100221DD0();
  }
  return result;
}

Swift::Int AccountInfo.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for AccountInfo, &qword_10029A198, (void (*)(uint64_t))type metadata accessor for AccountInfo);
}

uint64_t sub_1000985C8@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000985EC()
{
  return AccountInfo.decodeMessage<A>(decoder:)();
}

uint64_t sub_100098604()
{
  return AccountInfo.traverse<A>(visitor:)();
}

uint64_t sub_10009861C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E338, (void (*)(uint64_t))type metadata accessor for AccountInfo);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100098698@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298CF8, (uint64_t)static AccountInfo._protobuf_nameMap, a1);
}

uint64_t sub_1000986BC(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100098728()
{
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);

  return sub_100221F60();
}

const char *Metrics.protoMessageName.unsafeMutableAddressor()
{
  return "Metrics";
}

uint64_t static Metrics.protoMessageName.getter()
{
  return 0x7363697274654DLL;
}

uint64_t sub_1000987C8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static Metrics._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static Metrics._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "flow_id";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "device_session_id";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t Metrics._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D00, (uint64_t)static Metrics._protobuf_nameMap);
}

uint64_t static Metrics._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D00, (uint64_t)static Metrics._protobuf_nameMap, a1);
}

uint64_t Metrics.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C01C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularStringField(value:));
}

uint64_t Metrics.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C0288(a1, a2, a3, (void (*)(void))type metadata accessor for Metrics);
}

uint64_t static Metrics.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000CCF3C(a1, a2, type metadata accessor for Metrics) & 1;
}

Swift::Int Metrics.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for Metrics, &qword_10029A1A0, (void (*)(uint64_t))type metadata accessor for Metrics);
}

uint64_t sub_100098A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Metrics.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_100098AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Metrics.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100098ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E330, (void (*)(uint64_t))type metadata accessor for Metrics);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100098B48@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D00, (uint64_t)static Metrics._protobuf_nameMap, a1);
}

uint64_t sub_100098B6C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100098BD8()
{
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);

  return sub_100221F60();
}

const char *ResetRequest.protoMessageName.unsafeMutableAddressor()
{
  return "ResetRequest";
}

uint64_t static ResetRequest.protoMessageName.getter()
{
  return 0x7165527465736552;
}

uint64_t sub_100098C84(uint64_t a1)
{
  return sub_1000B71B8(a1, static ResetRequest._protobuf_nameMap);
}

uint64_t ResetRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D08, (uint64_t)static ResetRequest._protobuf_nameMap);
}

uint64_t static ResetRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D08, (uint64_t)static ResetRequest._protobuf_nameMap, a1);
}

uint64_t ResetRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B7534(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100098D18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100098DC8);
}

uint64_t sub_100098D18()
{
  return sub_100221F10();
}

uint64_t sub_100098DC8()
{
  return sub_100221F10();
}

uint64_t ResetRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B7888(a1, a2, a3, sub_100098ECC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000990D0, (void (*)(void))type metadata accessor for ResetRequest);
}

uint64_t sub_100098ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ResetRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 40), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

uint64_t sub_1000990D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ResetRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 44), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

Swift::Int ResetRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for ResetRequest, &qword_10029A1B0, (void (*)(uint64_t))type metadata accessor for ResetRequest);
}

uint64_t sub_100099320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResetRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_100099338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResetRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100099350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E328, (void (*)(uint64_t))type metadata accessor for ResetRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000993CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D08, (uint64_t)static ResetRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000993F0(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029F080, (void (*)(uint64_t))type metadata accessor for ResetRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10009945C()
{
  sub_1000D8CA4((unint64_t *)&unk_10029F080, (void (*)(uint64_t))type metadata accessor for ResetRequest);

  return sub_100221F60();
}

const char *ResetResponse.protoMessageName.unsafeMutableAddressor()
{
  return "ResetResponse";
}

uint64_t static ResetResponse.protoMessageName.getter()
{
  return 0x7365527465736552;
}

uint64_t sub_100099508(uint64_t a1)
{
  return sub_1000B84CC(a1, static ResetResponse._protobuf_nameMap, (uint64_t)"changes", 7);
}

uint64_t ResetResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D10, (uint64_t)static ResetResponse._protobuf_nameMap);
}

uint64_t static ResetResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D10, (uint64_t)static ResetResponse._protobuf_nameMap, a1);
}

uint64_t ResetResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000ABEC8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100099594);
}

uint64_t sub_100099594()
{
  return sub_100221F10();
}

uint64_t ResetResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A5E14(a1, a2, a3, type metadata accessor for ResetResponse);
}

Swift::Int ResetResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for ResetResponse, &qword_10029A1B8, (void (*)(uint64_t))type metadata accessor for ResetResponse);
}

uint64_t sub_1000996BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResetResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000996D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResetResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000996EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E320, (void (*)(uint64_t))type metadata accessor for ResetResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100099768@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D10, (uint64_t)static ResetResponse._protobuf_nameMap, a1);
}

uint64_t sub_10009978C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A690, (void (*)(uint64_t))type metadata accessor for ResetResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000997F8()
{
  sub_1000D8CA4(&qword_10029A690, (void (*)(uint64_t))type metadata accessor for ResetResponse);

  return sub_100221F60();
}

void *EstablishRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static EstablishRequest.protoMessageName;
}

unint64_t static EstablishRequest.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_10009989C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static EstablishRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static EstablishRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100229B70;
  unint64_t v4 = v19 + v3;
  unint64_t v5 = v19 + v3 + v1[14];
  *(void *)(v19 + v3) = 1;
  *(void *)unint64_t v5 = "peer";
  *(void *)(v5 + 8) = 4;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "bottle";
  *(void *)(v9 + 8) = 6;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "view_keys";
  *((void *)v11 + 1) = 9;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "tlk_shares";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "metrics";
  *((void *)v15 + 1) = 7;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "accountInfo";
  *((void *)v17 + 1) = 11;
  v17[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t EstablishRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D18, (uint64_t)static EstablishRequest._protobuf_nameMap);
}

uint64_t static EstablishRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D18, (uint64_t)static EstablishRequest._protobuf_nameMap, a1);
}

uint64_t sub_100099BA8()
{
  type metadata accessor for EstablishRequest._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  uint64_t v2 = type metadata accessor for Peer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  uint64_t v4 = type metadata accessor for Bottle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys) = &_swiftEmptyArrayStorage;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares) = &_swiftEmptyArrayStorage;
  uint64_t v5 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v6 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  qword_100299EB8 = v0;
  return result;
}

uint64_t sub_100099D34(uint64_t a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v41 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  uint64_t v18 = type metadata accessor for Peer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  uint64_t v20 = type metadata accessor for Bottle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys) = &_swiftEmptyArrayStorage;
  uint64_t v22 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  *(void *)(v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares) = &_swiftEmptyArrayStorage;
  uint64_t v23 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v24 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v40 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v26 = type metadata accessor for AccountInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v27 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v27, (uint64_t)v16, &qword_100299F58);
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v16, v17, &qword_100299F58);
  swift_endAccess();
  uint64_t v28 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v28, (uint64_t)v12, &qword_100299F38);
  swift_beginAccess();
  sub_1000D8C00((uint64_t)v12, v19, &qword_100299F38);
  swift_endAccess();
  uint64_t v29 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  uint64_t v30 = *v29;
  swift_beginAccess();
  void *v21 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  uint64_t v32 = *v31;
  swift_beginAccess();
  *uint64_t v22 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  uint64_t v34 = v41;
  sub_10000D830(v33, v41, &qword_10029F000);
  swift_beginAccess();
  sub_1000D8C00(v34, v23, &qword_10029F000);
  swift_endAccess();
  uint64_t v35 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  uint64_t v36 = v42;
  sub_10000D830(v35, v42, &qword_100299F50);
  swift_release();
  uint64_t v37 = v40;
  swift_beginAccess();
  sub_1000D8C00(v36, v37, &qword_100299F50);
  swift_endAccess();
  return v1;
}

uint64_t sub_10009A260()
{
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, &qword_100299F58);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, &qword_100299F38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, &qword_10029F000);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, &qword_100299F50);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t EstablishRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095894(a1, a2, a3, type metadata accessor for EstablishRequest, (void (*)(void))type metadata accessor for EstablishRequest._StorageClass, sub_100099D34, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10009A39C);
}

uint64_t sub_10009A39C()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_10009A4F4();
          break;
        case 2:
          sub_10009A5C4();
          break;
        case 3:
          sub_1000A8380();
          break;
        case 4:
          sub_10009A694();
          break;
        case 5:
          sub_10009A764();
          break;
        case 6:
          sub_10009A834();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_10009A4F4()
{
  return swift_endAccess();
}

uint64_t sub_10009A5C4()
{
  return swift_endAccess();
}

uint64_t sub_10009A694()
{
  return swift_endAccess();
}

uint64_t sub_10009A764()
{
  return swift_endAccess();
}

uint64_t sub_10009A834()
{
  return swift_endAccess();
}

uint64_t EstablishRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095C34(a1, a2, a3, (void (*)(void))type metadata accessor for EstablishRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10009A944);
}

uint64_t sub_10009A944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_10009AB48(a1, a2, a3, a4);
  if (!v4)
  {
    sub_10009AD64(a1, a2, a3, a4);
    uint64_t v10 = a1
        + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys;
    swift_beginAccess();
    if (*(void *)(*(void *)v10 + 16))
    {
      type metadata accessor for ViewKeys(0);
      sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
      swift_bridgeObjectRetain();
      sub_100222010();
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = a1
        + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares;
    swift_beginAccess();
    if (*(void *)(*(void *)v11 + 16))
    {
      type metadata accessor for TLKShare(0);
      sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
      swift_bridgeObjectRetain();
      sub_100222010();
      swift_bridgeObjectRelease();
    }
    sub_10009AF80(a1, a2, a3, a4);
    return sub_10009B19C(a1, a2, a3, a4);
  }
  return result;
}

uint64_t sub_10009AB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Peer(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F58);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Peer);
  sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Peer);
}

uint64_t sub_10009AD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Bottle(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F38);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Bottle);
  sub_1000D8CA4((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Bottle);
}

uint64_t sub_10009AF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_10009B19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

BOOL sub_10009B3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v134 = a2;
  uint64_t v118 = type metadata accessor for AccountInfo(0);
  uint64_t v115 = *(void *)(v118 - 8);
  __chkstk_darwin(v118, v3);
  os_log_t v111 = (_DWORD *)((char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v114, v5);
  uint64_t v117 = (uint64_t)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000046DC(&qword_100299F50);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v112 = (_DWORD *)((char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v11);
  uint64_t v116 = (uint64_t)&v110 - v12;
  uint64_t v123 = type metadata accessor for Metrics(0);
  uint64_t v121 = *(void *)(v123 - 8);
  __chkstk_darwin(v123, v13);
  uint64_t v113 = (uint64_t *)((char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v120 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v120, v15);
  uint64_t v122 = (uint64_t)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000046DC(&qword_10029F000);
  uint64_t v19 = __chkstk_darwin(v17 - 8, v18);
  uint64_t v119 = (uint64_t *)((char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19, v21);
  uint64_t v131 = (uint64_t)&v110 - v22;
  uint64_t v23 = type metadata accessor for Bottle(0);
  uint64_t v128 = *(void *)(v23 - 8);
  uint64_t v129 = v23;
  __chkstk_darwin(v23, v24);
  uint64_t v124 = (uint64_t *)((char *)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = sub_1000046DC(&qword_10029E488);
  __chkstk_darwin(v127, v26);
  uint64_t v130 = (uint64_t)&v110 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000046DC(&qword_100299F38);
  uint64_t v30 = __chkstk_darwin(v28 - 8, v29);
  uint64_t v125 = (uint64_t *)((char *)&v110 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30, v32);
  uint64_t v133 = (uint64_t)&v110 - v33;
  uint64_t v34 = type metadata accessor for Peer(0);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v36);
  uint64_t v126 = (uint64_t *)((char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = sub_1000046DC(&qword_10029E458);
  uint64_t v39 = v38 - 8;
  __chkstk_darwin(v38, v40);
  uint64_t v42 = (char *)&v110 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000046DC(&qword_100299F58);
  uint64_t v45 = __chkstk_darwin(v43 - 8, v44);
  os_log_type_t v132 = (uint64_t *)((char *)&v110 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v45, v47);
  char v49 = (char *)&v110 - v48;
  uint64_t v50 = a1;
  uint64_t v51 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v51, (uint64_t)v49, &qword_100299F58);
  uint64_t v52 = v134;
  uint64_t v53 = v134
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  uint64_t v54 = (uint64_t)&v42[*(int *)(v39 + 56)];
  sub_10000D830((uint64_t)v49, (uint64_t)v42, &qword_100299F58);
  sub_10000D830(v53, v54, &qword_100299F58);
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v55((uint64_t)v42, 1, v34) == 1)
  {
    swift_retain();
    swift_retain();
    sub_10004015C((uint64_t)v49, &qword_100299F58);
    int v56 = v55(v54, 1, v34);
    uint64_t v57 = v52;
    uint64_t v58 = v50;
    if (v56 == 1)
    {
      sub_10004015C((uint64_t)v42, &qword_100299F58);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v60 = &qword_10029E458;
    uint64_t v61 = (uint64_t)v42;
LABEL_14:
    sub_10004015C(v61, v60);
    goto LABEL_15;
  }
  uint64_t v58 = v50;
  uint64_t v59 = v132;
  sub_10000D830((uint64_t)v42, (uint64_t)v132, &qword_100299F58);
  if (v55(v54, 1, v34) == 1)
  {
    swift_retain();
    swift_retain();
    sub_10004015C((uint64_t)v49, &qword_100299F58);
    sub_1000D7E78((uint64_t)v59, type metadata accessor for Peer);
    goto LABEL_6;
  }
  char v62 = v126;
  sub_1000D736C(v54, (uint64_t)v126, type metadata accessor for Peer);
  swift_retain();
  uint64_t v57 = v52;
  swift_retain();
  char v63 = _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(v59, v62);
  sub_1000D7E78((uint64_t)v62, type metadata accessor for Peer);
  sub_10004015C((uint64_t)v49, &qword_100299F58);
  sub_1000D7E78((uint64_t)v59, type metadata accessor for Peer);
  sub_10004015C((uint64_t)v42, &qword_100299F58);
  if ((v63 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v64 = v58
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  uint64_t v65 = v133;
  sub_10000D830(v64, v133, &qword_100299F38);
  uint64_t v66 = v57
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  uint64_t v67 = v130;
  uint64_t v68 = v130 + *(int *)(v127 + 48);
  sub_10000D830(v65, v130, &qword_100299F38);
  uint64_t v69 = v67;
  sub_10000D830(v66, v68, &qword_100299F38);
  uint64_t v70 = v129;
  char v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
  if (v71(v69, 1, v129) == 1)
  {
    sub_10004015C(v65, &qword_100299F38);
    int v72 = v71(v68, 1, v70);
    uint64_t v73 = v131;
    if (v72 == 1)
    {
      sub_10004015C(v69, &qword_100299F38);
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  uint64_t v74 = v125;
  sub_10000D830(v69, (uint64_t)v125, &qword_100299F38);
  int v75 = v71(v68, 1, v70);
  uint64_t v73 = v131;
  if (v75 == 1)
  {
    sub_10004015C(v133, &qword_100299F38);
    sub_1000D7E78((uint64_t)v74, type metadata accessor for Bottle);
LABEL_13:
    uint64_t v60 = &qword_10029E488;
    uint64_t v61 = v69;
    goto LABEL_14;
  }
  uint64_t v77 = v124;
  sub_1000D736C(v68, (uint64_t)v124, type metadata accessor for Bottle);
  char v78 = _s18TrustedPeersHelper6BottleV2eeoiySbAC_ACtFZ_0(v74, v77);
  sub_1000D7E78((uint64_t)v77, type metadata accessor for Bottle);
  sub_10004015C(v133, &qword_100299F38);
  sub_1000D7E78((uint64_t)v74, type metadata accessor for Bottle);
  sub_10004015C(v69, &qword_100299F38);
  if ((v78 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_19:
  uint64_t v79 = (uint64_t *)(v58
                  + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  uint64_t v80 = *v79;
  uint64_t v81 = (uint64_t *)(v57
                  + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  uint64_t v82 = *v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v83 = sub_10003DE24(v80, v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v83 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v84 = (uint64_t *)(v58
                  + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  uint64_t v85 = *v84;
  uint64_t v86 = (uint64_t *)(v57
                  + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  uint64_t v87 = *v86;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v88 = sub_10003DDD0(v85, v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v88 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v89 = v58
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v89, v73, &qword_10029F000);
  uint64_t v90 = v57
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  uint64_t v91 = v122;
  uint64_t v92 = v122 + *(int *)(v120 + 48);
  sub_10000D830(v73, v122, &qword_10029F000);
  sub_10000D830(v90, v92, &qword_10029F000);
  uint64_t v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
  uint64_t v94 = v123;
  if (v93(v91, 1, v123) != 1)
  {
    uint64_t v95 = v119;
    sub_10000D830(v91, (uint64_t)v119, &qword_10029F000);
    if (v93(v92, 1, v94) == 1)
    {
      sub_10004015C(v131, &qword_10029F000);
      sub_1000D7E78((uint64_t)v95, type metadata accessor for Metrics);
      goto LABEL_26;
    }
    unint64_t v96 = v113;
    sub_1000D736C(v92, (uint64_t)v113, type metadata accessor for Metrics);
    if ((*v95 != *v96 || v95[1] != v96[1]) && (sub_100222A30() & 1) == 0
      || (v95[2] != v96[2] || v95[3] != v96[3]) && (sub_100222A30() & 1) == 0)
    {
      sub_1000D7E78((uint64_t)v96, type metadata accessor for Metrics);
      sub_10004015C(v131, &qword_10029F000);
      sub_1000D7E78((uint64_t)v95, type metadata accessor for Metrics);
      uint64_t v61 = v91;
      uint64_t v60 = &qword_10029F000;
      goto LABEL_14;
    }
    sub_100221DF0();
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v97 = sub_100222250();
    sub_1000D7E78((uint64_t)v96, type metadata accessor for Metrics);
    sub_10004015C(v131, &qword_10029F000);
    sub_1000D7E78((uint64_t)v95, type metadata accessor for Metrics);
    sub_10004015C(v91, &qword_10029F000);
    if (v97) {
      goto LABEL_34;
    }
LABEL_15:
    swift_release();
    swift_release();
    return 0;
  }
  sub_10004015C(v73, &qword_10029F000);
  if (v93(v92, 1, v94) != 1)
  {
LABEL_26:
    uint64_t v60 = &qword_10029E3E8;
    uint64_t v61 = v91;
    goto LABEL_14;
  }
  sub_10004015C(v91, &qword_10029F000);
LABEL_34:
  uint64_t v98 = v58
      + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  uint64_t v99 = v116;
  sub_10000D830(v98, v116, &qword_100299F50);
  uint64_t v100 = v57
       + OBJC_IVAR____TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  uint64_t v101 = v117;
  uint64_t v102 = v117 + *(int *)(v114 + 48);
  sub_10000D830(v99, v117, &qword_100299F50);
  sub_10000D830(v100, v102, &qword_100299F50);
  uint64_t v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
  uint64_t v104 = v118;
  if (v103(v101, 1, v118) == 1)
  {
    swift_release();
    swift_release();
    sub_10004015C(v99, &qword_100299F50);
    if (v103(v102, 1, v104) == 1)
    {
      sub_10004015C(v101, &qword_100299F50);
      return 1;
    }
    goto LABEL_40;
  }
  uint64_t v105 = v112;
  sub_10000D830(v101, (uint64_t)v112, &qword_100299F50);
  if (v103(v102, 1, v104) == 1)
  {
    swift_release();
    swift_release();
    sub_10004015C(v99, &qword_100299F50);
    sub_1000D7E78((uint64_t)v105, type metadata accessor for AccountInfo);
LABEL_40:
    uint64_t v106 = &qword_10029E3E0;
    uint64_t v107 = v101;
LABEL_41:
    sub_10004015C(v107, v106);
    return 0;
  }
  uint64_t v108 = v111;
  sub_1000D736C(v102, (uint64_t)v111, type metadata accessor for AccountInfo);
  if (*v105 != *v108)
  {
    swift_release();
    swift_release();
    sub_1000D7E78((uint64_t)v108, type metadata accessor for AccountInfo);
    sub_10004015C(v99, &qword_100299F50);
    sub_1000D7E78((uint64_t)v105, type metadata accessor for AccountInfo);
    uint64_t v107 = v101;
    uint64_t v106 = &qword_100299F50;
    goto LABEL_41;
  }
  sub_100221DF0();
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v109 = sub_100222250();
  swift_release();
  swift_release();
  sub_1000D7E78((uint64_t)v108, type metadata accessor for AccountInfo);
  sub_10004015C(v99, &qword_100299F50);
  sub_1000D7E78((uint64_t)v105, type metadata accessor for AccountInfo);
  sub_10004015C(v101, &qword_100299F50);
  return (v109 & 1) != 0;
}

Swift::Int EstablishRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for EstablishRequest, &qword_10029A1C0, (void (*)(uint64_t))type metadata accessor for EstablishRequest);
}

uint64_t sub_10009C43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BC920(a1, &qword_100298D20, &qword_100299EB8, a2);
}

uint64_t sub_10009C460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EstablishRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10009C478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EstablishRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10009C490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E318, (void (*)(uint64_t))type metadata accessor for EstablishRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10009C50C(uint64_t a1)
{
  return sub_1000D70D0(v1, a1, type metadata accessor for EstablishRequest, (uint64_t (*)(uint64_t, uint64_t))sub_10009B3B8) & 1;
}

uint64_t sub_10009C558@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D18, (uint64_t)static EstablishRequest._protobuf_nameMap, a1);
}

uint64_t sub_10009C57C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A6A8, (void (*)(uint64_t))type metadata accessor for EstablishRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10009C5E8()
{
  sub_1000D8CA4(&qword_10029A6A8, (void (*)(uint64_t))type metadata accessor for EstablishRequest);

  return sub_100221F60();
}

void *EstablishResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static EstablishResponse.protoMessageName;
}

unint64_t static EstablishResponse.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_10009C68C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static EstablishResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static EstablishResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "changes";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "zone_key_hierarchy_records";
  *((void *)v10 + 1) = 26;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t EstablishResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D28, (uint64_t)static EstablishResponse._protobuf_nameMap);
}

uint64_t static EstablishResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D28, (uint64_t)static EstablishResponse._protobuf_nameMap, a1);
}

uint64_t EstablishResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAC30(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10009C8C0);
}

uint64_t sub_10009C8C0()
{
  return sub_100221F10();
}

uint64_t EstablishResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAE44(a1, a2, a3, sub_10009C9B0, (void (*)(void))type metadata accessor for EstablishResponse);
}

uint64_t sub_10009C9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Changes(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EstablishResponse(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Changes);
  sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Changes);
}

Swift::Int EstablishResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for EstablishResponse, &qword_10029A1D0, (void (*)(uint64_t))type metadata accessor for EstablishResponse);
}

uint64_t sub_10009CC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EstablishResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10009CC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EstablishResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10009CC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E310, (void (*)(uint64_t))type metadata accessor for EstablishResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10009CCAC(uint64_t *a1)
{
  return sub_1000CF4BC(v1, a1, (uint64_t *)type metadata accessor for EstablishResponse) & 1;
}

uint64_t sub_10009CCE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D28, (uint64_t)static EstablishResponse._protobuf_nameMap, a1);
}

uint64_t sub_10009CD08(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A6C0, (void (*)(uint64_t))type metadata accessor for EstablishResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10009CD74()
{
  sub_1000D8CA4(&qword_10029A6C0, (void (*)(uint64_t))type metadata accessor for EstablishResponse);

  return sub_100221F60();
}

void *JoinWithVoucherRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static JoinWithVoucherRequest.protoMessageName;
}

unint64_t static JoinWithVoucherRequest.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_10009CE18()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static JoinWithVoucherRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static JoinWithVoucherRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100229530;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "change_token";
  *(void *)(v5 + 8) = 12;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "peer";
  *(void *)(v9 + 8) = 4;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "bottle";
  *((void *)v11 + 1) = 6;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "tlk_shares";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "view_keys";
  *((void *)v15 + 1) = 9;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "trusted_devices_version";
  *((void *)v17 + 1) = 23;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "metrics";
  *((void *)v19 + 1) = 7;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "accountInfo";
  *((void *)v21 + 1) = 11;
  v21[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t JoinWithVoucherRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D30, (uint64_t)static JoinWithVoucherRequest._protobuf_nameMap);
}

uint64_t static JoinWithVoucherRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D30, (uint64_t)static JoinWithVoucherRequest._protobuf_nameMap, a1);
}

uint64_t sub_10009D1A4()
{
  type metadata accessor for JoinWithVoucherRequest._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  uint64_t v2 = type metadata accessor for Peer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  uint64_t v4 = type metadata accessor for Bottle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares) = &_swiftEmptyArrayStorage;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys) = &_swiftEmptyArrayStorage;
  uint64_t v5 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  uint64_t v6 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v8 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  qword_100299EC0 = v0;
  return result;
}

uint64_t sub_10009D384(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v60 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v59 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v58 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v54 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v52 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v19 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  uint64_t v20 = type metadata accessor for Peer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  uint64_t v53 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  uint64_t v22 = type metadata accessor for Bottle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  *uint64_t v23 = &_swiftEmptyArrayStorage;
  uint64_t v24 = (void *)(v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  void *v24 = &_swiftEmptyArrayStorage;
  uint64_t v25 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  uint64_t v55 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  uint64_t v26 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v27 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v56 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v28 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  uint64_t v29 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v57 = v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v30 = type metadata accessor for AccountInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  swift_beginAccess();
  uint64_t v32 = *(void *)(a1 + 16);
  uint64_t v31 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v32;
  *(void *)(v1 + 24) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  uint64_t v34 = v52;
  sub_10000D830(v33, v52, &qword_100299F58);
  swift_beginAccess();
  sub_1000D8C00(v34, v19, &qword_100299F58);
  swift_endAccess();
  uint64_t v35 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  uint64_t v36 = v54;
  sub_10000D830(v35, v54, &qword_100299F38);
  uint64_t v37 = v53;
  swift_beginAccess();
  sub_1000D8C00(v36, v37, &qword_100299F38);
  swift_endAccess();
  uint64_t v38 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  uint64_t v39 = *v38;
  swift_beginAccess();
  *uint64_t v23 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  uint64_t v41 = *v40;
  swift_beginAccess();
  void *v24 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  swift_beginAccess();
  uint64_t v43 = v58;
  sub_10000D830(v42, v58, &qword_10029ED20);
  uint64_t v44 = v55;
  swift_beginAccess();
  sub_1000D8C00(v43, v44, &qword_10029ED20);
  swift_endAccess();
  uint64_t v45 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  uint64_t v46 = v59;
  sub_10000D830(v45, v59, &qword_10029F000);
  uint64_t v47 = v56;
  swift_beginAccess();
  sub_1000D8C00(v46, v47, &qword_10029F000);
  swift_endAccess();
  uint64_t v48 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  uint64_t v49 = v60;
  sub_10000D830(v48, v60, &qword_100299F50);
  swift_release();
  uint64_t v50 = v57;
  swift_beginAccess();
  sub_1000D8C00(v49, v50, &qword_100299F50);
  swift_endAccess();
  return v2;
}

uint64_t sub_10009DA1C()
{
  swift_bridgeObjectRelease();
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, &qword_100299F58);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle, &qword_100299F38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion, &qword_10029ED20);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, &qword_10029F000);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, &qword_100299F50);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t JoinWithVoucherRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095894(a1, a2, a3, type metadata accessor for JoinWithVoucherRequest, (void (*)(void))type metadata accessor for JoinWithVoucherRequest._StorageClass, sub_10009D384, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10009DB78);
}

uint64_t sub_10009DB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_100221E50();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1000BAAE8(a2, a1, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularStringField(value:));
          break;
        case 2:
          sub_10009DD24();
          break;
        case 3:
          sub_10009DDF4();
          break;
        case 4:
          sub_10009DEC4();
          break;
        case 5:
          sub_1000A8380();
          break;
        case 6:
          sub_10009DF94();
          break;
        case 7:
          sub_10009E064();
          break;
        case 8:
          sub_10009E134();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_10009DD24()
{
  return swift_endAccess();
}

uint64_t sub_10009DDF4()
{
  return swift_endAccess();
}

uint64_t sub_10009DEC4()
{
  return swift_endAccess();
}

uint64_t sub_10009DF94()
{
  return swift_endAccess();
}

uint64_t sub_10009E064()
{
  return swift_endAccess();
}

uint64_t sub_10009E134()
{
  return swift_endAccess();
}

uint64_t JoinWithVoucherRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095C34(a1, a2, a3, (void (*)(void))type metadata accessor for JoinWithVoucherRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10009E244);
}

uint64_t sub_10009E244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (swift_bridgeObjectRetain(), sub_100221FE0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t result = sub_10009E4E0(a1, a2, a3, a4);
    if (!v4)
    {
      sub_10009E6FC(a1, a2, a3, a4);
      uint64_t v12 = a1
          + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares;
      swift_beginAccess();
      if (*(void *)(*(void *)v12 + 16))
      {
        type metadata accessor for TLKShare(0);
        sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
        swift_bridgeObjectRetain();
        sub_100222010();
        swift_bridgeObjectRelease();
      }
      uint64_t v13 = a1
          + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys;
      swift_beginAccess();
      if (*(void *)(*(void *)v13 + 16))
      {
        type metadata accessor for ViewKeys(0);
        sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
        swift_bridgeObjectRetain();
        sub_100222010();
        swift_bridgeObjectRelease();
      }
      sub_10009E918(a1, a2, a3, a4);
      sub_10009EB34(a1, a2, a3, a4);
      return sub_10009ED50(a1, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_10009E4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Peer(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F58);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Peer);
  sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Peer);
}

uint64_t sub_10009E6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F38);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Bottle(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F38);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Bottle);
  sub_1000D8CA4((unint64_t *)&unk_10029EEA0, (void (*)(uint64_t))type metadata accessor for Bottle);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Bottle);
}

uint64_t sub_10009E918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_10029ED20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029ED20);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for IdmsTrustedDevicesVersion);
  sub_1000D8CA4(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for IdmsTrustedDevicesVersion);
}

uint64_t sub_10009EB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_10009ED50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

BOOL sub_10009EF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountInfo(0);
  uint64_t v159 = *(void *)(v4 - 8);
  uint64_t v160 = v4;
  __chkstk_darwin(v4, v5);
  unint64_t v155 = (_DWORD *)((char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v158 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v158, v7);
  uint64_t v9 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000046DC(&qword_100299F50);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  id v156 = (_DWORD *)((char *)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v14);
  uint64_t v171 = (uint64_t)&v153 - v15;
  uint64_t v166 = type metadata accessor for Metrics(0);
  uint64_t v164 = *(void *)(v166 - 8);
  __chkstk_darwin(v166, v16);
  uint64_t v157 = (uint64_t *)((char *)&v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v163 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v163, v18);
  uint64_t v165 = (uint64_t)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000046DC(&qword_10029F000);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  os_log_type_t v161 = (uint64_t *)((char *)&v153 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22, v24);
  id v182 = (char *)&v153 - v25;
  uint64_t v169 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v181 = *(void *)(v169 - 8);
  __chkstk_darwin(v169, v26);
  NSString v162 = (char *)&v153 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_1000046DC(&qword_10029E490);
  __chkstk_darwin(v168, v28);
  uint64_t v170 = (uint64_t)&v153 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000046DC(&qword_10029ED20);
  uint64_t v32 = __chkstk_darwin(v30 - 8, v31);
  uint64_t v167 = (char *)&v153 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v34);
  uint64_t v172 = (uint64_t)&v153 - v35;
  uint64_t v36 = type metadata accessor for Bottle(0);
  uint64_t v178 = *(void *)(v36 - 8);
  uint64_t v179 = v36;
  __chkstk_darwin(v36, v37);
  BOOL v173 = (uint64_t *)((char *)&v153 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v176 = sub_1000046DC(&qword_10029E488);
  __chkstk_darwin(v176, v39);
  uint64_t v180 = (uint64_t)&v153 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000046DC(&qword_100299F38);
  uint64_t v43 = __chkstk_darwin(v41 - 8, v42);
  uint64_t v174 = (uint64_t)&v153 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43, v45);
  uint64_t v177 = (uint64_t)&v153 - v46;
  uint64_t v47 = type metadata accessor for Peer(0);
  uint64_t v48 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v49);
  uint64_t v175 = (uint64_t *)((char *)&v153 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = sub_1000046DC(&qword_10029E458);
  __chkstk_darwin(v51, v52);
  uint64_t v54 = (char *)&v153 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000046DC(&qword_100299F58);
  uint64_t v57 = __chkstk_darwin(v55 - 8, v56);
  uint64_t v183 = (uint64_t)&v153 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57, v59);
  uint64_t v61 = (char *)&v153 - v60;
  swift_beginAccess();
  uint64_t v185 = a1;
  uint64_t v62 = *(void *)(a1 + 16);
  uint64_t v63 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v62 == *(void *)(a2 + 16) && v63 == *(void *)(a2 + 24)
    || (v64 = sub_100222A30(), BOOL result = 0, (v64 & 1) != 0))
  {
    id v154 = v9;
    uint64_t v184 = a2;
    uint64_t v66 = v185;
    uint64_t v67 = v185
        + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
    swift_beginAccess();
    sub_10000D830(v67, (uint64_t)v61, &qword_100299F58);
    uint64_t v68 = v184;
    uint64_t v69 = v184
        + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
    swift_beginAccess();
    uint64_t v70 = (uint64_t)&v54[*(int *)(v51 + 48)];
    sub_10000D830((uint64_t)v61, (uint64_t)v54, &qword_100299F58);
    sub_10000D830(v69, v70, &qword_100299F58);
    char v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
    if (v71((uint64_t)v54, 1, v47) == 1)
    {
      swift_retain();
      swift_retain();
      sub_10004015C((uint64_t)v61, &qword_100299F58);
      uint64_t v72 = v66;
      if (v71(v70, 1, v47) == 1)
      {
        sub_10004015C((uint64_t)v54, &qword_100299F58);
        uint64_t v73 = v68;
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v74 = v183;
      sub_10000D830((uint64_t)v54, v183, &qword_100299F58);
      if (v71(v70, 1, v47) != 1)
      {
        uint64_t v75 = v70;
        uint64_t v76 = (void *)v74;
        uint64_t v77 = v175;
        sub_1000D736C(v75, (uint64_t)v175, type metadata accessor for Peer);
        uint64_t v72 = v185;
        swift_retain();
        swift_retain();
        char v78 = _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(v76, v77);
        sub_1000D7E78((uint64_t)v77, type metadata accessor for Peer);
        uint64_t v73 = v68;
        sub_10004015C((uint64_t)v61, &qword_100299F58);
        sub_1000D7E78((uint64_t)v76, type metadata accessor for Peer);
        sub_10004015C((uint64_t)v54, &qword_100299F58);
        if ((v78 & 1) == 0) {
          goto LABEL_27;
        }
LABEL_11:
        uint64_t v79 = v72
            + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
        swift_beginAccess();
        uint64_t v80 = v177;
        sub_10000D830(v79, v177, &qword_100299F38);
        uint64_t v81 = v73
            + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottle;
        swift_beginAccess();
        uint64_t v82 = v180;
        uint64_t v83 = v180 + *(int *)(v176 + 48);
        sub_10000D830(v80, v180, &qword_100299F38);
        uint64_t v84 = v81;
        uint64_t v85 = v82;
        sub_10000D830(v84, v83, &qword_100299F38);
        uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v178 + 48);
        uint64_t v87 = v82;
        uint64_t v88 = v179;
        if (v86(v87, 1, v179) == 1)
        {
          sub_10004015C(v80, &qword_100299F38);
          int v89 = v86(v83, 1, v88);
          uint64_t v90 = v181;
          uint64_t v91 = (uint64_t)v182;
          if (v89 == 1)
          {
            sub_10004015C(v85, &qword_100299F38);
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v92 = v174;
          sub_10000D830(v85, v174, &qword_100299F38);
          int v93 = v86(v83, 1, v88);
          uint64_t v94 = v181;
          uint64_t v91 = (uint64_t)v182;
          if (v93 != 1)
          {
            uint64_t v97 = v80;
            uint64_t v98 = (uint64_t *)v92;
            uint64_t v99 = v173;
            sub_1000D736C(v83, (uint64_t)v173, type metadata accessor for Bottle);
            char v100 = _s18TrustedPeersHelper6BottleV2eeoiySbAC_ACtFZ_0(v98, v99);
            sub_1000D7E78((uint64_t)v99, type metadata accessor for Bottle);
            uint64_t v101 = v97;
            uint64_t v90 = v94;
            sub_10004015C(v101, &qword_100299F38);
            sub_1000D7E78((uint64_t)v98, type metadata accessor for Bottle);
            sub_10004015C(v85, &qword_100299F38);
            uint64_t v72 = v185;
            if ((v100 & 1) == 0) {
              goto LABEL_27;
            }
LABEL_22:
            uint64_t v102 = (uint64_t *)(v72
                             + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
            swift_beginAccess();
            uint64_t v103 = *v102;
            uint64_t v104 = v184;
            uint64_t v105 = (uint64_t *)(v184
                             + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
            swift_beginAccess();
            uint64_t v106 = *v105;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v107 = sub_10003DDD0(v103, v106);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v107 & 1) == 0) {
              goto LABEL_27;
            }
            uint64_t v108 = (uint64_t *)(v72
                             + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
            swift_beginAccess();
            uint64_t v109 = *v108;
            uint64_t v110 = (uint64_t *)(v104
                             + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
            swift_beginAccess();
            uint64_t v111 = *v110;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v112 = sub_10003DE24(v109, v111);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v112 & 1) == 0) {
              goto LABEL_27;
            }
            uint64_t v113 = v72
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
            swift_beginAccess();
            uint64_t v114 = v172;
            sub_10000D830(v113, v172, &qword_10029ED20);
            uint64_t v115 = v104
                 + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedDevicesVersion;
            swift_beginAccess();
            uint64_t v116 = v170;
            uint64_t v117 = v170 + *(int *)(v168 + 48);
            sub_10000D830(v114, v170, &qword_10029ED20);
            sub_10000D830(v115, v117, &qword_10029ED20);
            uint64_t v118 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
            uint64_t v119 = v169;
            if (v118(v116, 1, v169) == 1)
            {
              sub_10004015C(v114, &qword_10029ED20);
              int v120 = v118(v117, 1, v119);
              uint64_t v121 = v171;
              if (v120 == 1)
              {
                sub_10004015C(v116, &qword_10029ED20);
LABEL_35:
                uint64_t v126 = v72
                     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
                swift_beginAccess();
                sub_10000D830(v126, v91, &qword_10029F000);
                uint64_t v127 = v184
                     + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
                swift_beginAccess();
                uint64_t v128 = v165;
                uint64_t v129 = v165 + *(int *)(v163 + 48);
                sub_10000D830(v91, v165, &qword_10029F000);
                uint64_t v130 = v127;
                uint64_t v85 = v128;
                sub_10000D830(v130, v129, &qword_10029F000);
                uint64_t v131 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
                uint64_t v132 = v128;
                uint64_t v133 = v166;
                if (v131(v132, 1, v166) == 1)
                {
                  sub_10004015C(v91, &qword_10029F000);
                  if (v131(v129, 1, v133) == 1)
                  {
                    sub_10004015C(v85, &qword_10029F000);
                    goto LABEL_48;
                  }
                }
                else
                {
                  uint64_t v134 = v121;
                  uint64_t v135 = v133;
                  uint64_t v136 = v161;
                  sub_10000D830(v85, (uint64_t)v161, &qword_10029F000);
                  if (v131(v129, 1, v135) != 1)
                  {
                    unint64_t v137 = v157;
                    sub_1000D736C(v129, (uint64_t)v157, type metadata accessor for Metrics);
                    if (*v136 == *v137 && v136[1] == v137[1] || (sub_100222A30())
                      && (v136[2] == v137[2] && v136[3] == v137[3] || (sub_100222A30() & 1) != 0))
                    {
                      sub_100221DF0();
                      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                      char v138 = sub_100222250();
                      sub_1000D7E78((uint64_t)v137, type metadata accessor for Metrics);
                      sub_10004015C(v91, &qword_10029F000);
                      sub_1000D7E78((uint64_t)v136, type metadata accessor for Metrics);
                      sub_10004015C(v85, &qword_10029F000);
                      uint64_t v121 = v134;
                      if (v138)
                      {
LABEL_48:
                        uint64_t v139 = v72
                             + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
                        swift_beginAccess();
                        sub_10000D830(v139, v121, &qword_100299F50);
                        uint64_t v140 = v184
                             + OBJC_IVAR____TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
                        swift_beginAccess();
                        uint64_t v141 = (uint64_t)v154;
                        uint64_t v142 = (uint64_t)&v154[*(int *)(v158 + 48)];
                        sub_10000D830(v121, (uint64_t)v154, &qword_100299F50);
                        sub_10000D830(v140, v142, &qword_100299F50);
                        uint64_t v143 = v160;
                        Swift::String v144 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48);
                        if (v144(v141, 1, v160) == 1)
                        {
                          swift_release();
                          swift_release();
                          sub_10004015C(v121, &qword_100299F50);
                          uint64_t v145 = v141;
                          if (v144(v142, 1, v143) == 1)
                          {
                            sub_10004015C(v141, &qword_100299F50);
                            return 1;
                          }
                        }
                        else
                        {
                          uint64_t v146 = v143;
                          id v147 = v156;
                          sub_10000D830(v141, (uint64_t)v156, &qword_100299F50);
                          unsigned int v148 = v144(v142, 1, v146);
                          uint64_t v145 = v141;
                          if (v148 != 1)
                          {
                            os_log_type_t v151 = v155;
                            sub_1000D736C(v142, (uint64_t)v155, type metadata accessor for AccountInfo);
                            if (*v147 == *v151)
                            {
                              sub_100221DF0();
                              sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                              char v152 = sub_100222250();
                              swift_release();
                              swift_release();
                              sub_1000D7E78((uint64_t)v151, type metadata accessor for AccountInfo);
                              sub_10004015C(v171, &qword_100299F50);
                              sub_1000D7E78((uint64_t)v147, type metadata accessor for AccountInfo);
                              sub_10004015C(v141, &qword_100299F50);
                              return (v152 & 1) != 0;
                            }
                            swift_release();
                            swift_release();
                            sub_1000D7E78((uint64_t)v151, type metadata accessor for AccountInfo);
                            sub_10004015C(v171, &qword_100299F50);
                            sub_1000D7E78((uint64_t)v147, type metadata accessor for AccountInfo);
                            uint64_t v150 = v141;
                            id v149 = &qword_100299F50;
                            goto LABEL_55;
                          }
                          swift_release();
                          swift_release();
                          sub_10004015C(v171, &qword_100299F50);
                          sub_1000D7E78((uint64_t)v147, type metadata accessor for AccountInfo);
                        }
                        id v149 = &qword_10029E3E0;
                        uint64_t v150 = v145;
LABEL_55:
                        sub_10004015C(v150, v149);
                        return 0;
                      }
                      goto LABEL_27;
                    }
                    sub_1000D7E78((uint64_t)v137, type metadata accessor for Metrics);
                    sub_10004015C(v91, &qword_10029F000);
                    sub_1000D7E78((uint64_t)v136, type metadata accessor for Metrics);
                    uint64_t v96 = v85;
                    uint64_t v95 = &qword_10029F000;
                    goto LABEL_18;
                  }
                  sub_10004015C(v91, &qword_10029F000);
                  sub_1000D7E78((uint64_t)v136, type metadata accessor for Metrics);
                }
                uint64_t v95 = &qword_10029E3E8;
                goto LABEL_17;
              }
            }
            else
            {
              uint64_t v122 = v167;
              sub_10000D830(v116, (uint64_t)v167, &qword_10029ED20);
              int v123 = v118(v117, 1, v119);
              uint64_t v121 = v171;
              if (v123 != 1)
              {
                uint64_t v124 = v162;
                sub_1000D736C(v117, (uint64_t)v162, type metadata accessor for IdmsTrustedDevicesVersion);
                char v125 = _s18TrustedPeersHelper04IdmsA14DevicesVersionV2eeoiySbAC_ACtFZ_0(v122, v124);
                sub_1000D7E78((uint64_t)v124, type metadata accessor for IdmsTrustedDevicesVersion);
                sub_10004015C(v172, &qword_10029ED20);
                sub_1000D7E78((uint64_t)v122, type metadata accessor for IdmsTrustedDevicesVersion);
                sub_10004015C(v116, &qword_10029ED20);
                if ((v125 & 1) == 0) {
                  goto LABEL_27;
                }
                goto LABEL_35;
              }
              sub_10004015C(v172, &qword_10029ED20);
              sub_1000D7E78((uint64_t)v122, type metadata accessor for IdmsTrustedDevicesVersion);
            }
            uint64_t v95 = &qword_10029E490;
            uint64_t v96 = v116;
            goto LABEL_18;
          }
          sub_10004015C(v80, &qword_100299F38);
          sub_1000D7E78(v92, type metadata accessor for Bottle);
        }
        uint64_t v95 = &qword_10029E488;
LABEL_17:
        uint64_t v96 = v85;
LABEL_18:
        sub_10004015C(v96, v95);
LABEL_27:
        swift_release();
        goto LABEL_28;
      }
      swift_retain();
      swift_retain();
      sub_10004015C((uint64_t)v61, &qword_100299F58);
      sub_1000D7E78(v74, type metadata accessor for Peer);
    }
    sub_10004015C((uint64_t)v54, &qword_10029E458);
    swift_release();
LABEL_28:
    swift_release();
    return 0;
  }
  return result;
}

Swift::Int JoinWithVoucherRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for JoinWithVoucherRequest, &qword_10029A1D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);
}

uint64_t sub_1000A03F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BC920(a1, &qword_100298D38, &qword_100299EC0, a2);
}

uint64_t sub_1000A0414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return JoinWithVoucherRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A042C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return JoinWithVoucherRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A0444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E308, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A04C0(uint64_t a1)
{
  return sub_1000D70D0(v1, a1, type metadata accessor for JoinWithVoucherRequest, (uint64_t (*)(uint64_t, uint64_t))sub_10009EF6C) & 1;
}

uint64_t sub_1000A050C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D30, (uint64_t)static JoinWithVoucherRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000A0530(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A6D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A059C()
{
  sub_1000D8CA4(&qword_10029A6D8, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherRequest);

  return sub_100221F60();
}

void *JoinWithVoucherResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static JoinWithVoucherResponse.protoMessageName;
}

unint64_t static JoinWithVoucherResponse.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1000A0640()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static JoinWithVoucherResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static JoinWithVoucherResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "changes";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "zone_key_hierarchy_records";
  *((void *)v10 + 1) = 26;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t JoinWithVoucherResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D40, (uint64_t)static JoinWithVoucherResponse._protobuf_nameMap);
}

uint64_t static JoinWithVoucherResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D40, (uint64_t)static JoinWithVoucherResponse._protobuf_nameMap, a1);
}

uint64_t JoinWithVoucherResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAC30(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A0874);
}

uint64_t sub_1000A0874()
{
  return sub_100221F10();
}

uint64_t JoinWithVoucherResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAE44(a1, a2, a3, sub_1000A0964, (void (*)(void))type metadata accessor for JoinWithVoucherResponse);
}

uint64_t sub_1000A0964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Changes(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for JoinWithVoucherResponse(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Changes);
  sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Changes);
}

Swift::Int JoinWithVoucherResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for JoinWithVoucherResponse, &qword_10029A1E0, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);
}

uint64_t sub_1000A0BB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Changes(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_1000A0C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return JoinWithVoucherResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A0C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return JoinWithVoucherResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A0C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E300, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A0CEC(uint64_t *a1)
{
  return sub_1000CF4BC(v1, a1, (uint64_t *)type metadata accessor for JoinWithVoucherResponse) & 1;
}

uint64_t sub_1000A0D24@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D40, (uint64_t)static JoinWithVoucherResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000A0D48(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A6F0, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A0DB4()
{
  sub_1000D8CA4(&qword_10029A6F0, (void (*)(uint64_t))type metadata accessor for JoinWithVoucherResponse);

  return sub_100221F60();
}

void *UpdateTrustRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static UpdateTrustRequest.protoMessageName;
}

unint64_t static UpdateTrustRequest.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1000A0E58()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static UpdateTrustRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static UpdateTrustRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100229BB0;
  unint64_t v4 = v24 + v3;
  unint64_t v5 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 1;
  *(void *)unint64_t v5 = "change_token";
  *(void *)(v5 + 8) = 12;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "peer_id";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "stable_info_and_sig";
  *((void *)v11 + 1) = 19;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "dynamic_info_and_sig";
  *((void *)v13 + 1) = 20;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "tlk_shares";
  *((void *)v15 + 1) = 10;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "view_keys";
  *((void *)v17 + 1) = 9;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "trusted_devices_version";
  *((void *)v19 + 1) = 23;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "metrics";
  *((void *)v21 + 1) = 7;
  v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "accountInfo";
  *(void *)(v22 + 8) = 11;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  return sub_100222040();
}

uint64_t UpdateTrustRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D48, (uint64_t)static UpdateTrustRequest._protobuf_nameMap);
}

uint64_t static UpdateTrustRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D48, (uint64_t)static UpdateTrustRequest._protobuf_nameMap, a1);
}

uint64_t UpdateTrustRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_100221E50();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_100221ED0();
          break;
        case 3:
          sub_1000A14B8();
          break;
        case 4:
          sub_1000A1568();
          break;
        case 5:
          type metadata accessor for TLKShare(0);
          sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
          goto LABEL_10;
        case 6:
          type metadata accessor for ViewKeys(0);
          sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
LABEL_10:
          sub_100221F00();
          break;
        case 7:
          sub_1000A1618();
          break;
        case 8:
          sub_1000A31E4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for UpdateTrustRequest);
          break;
        case 9:
          sub_1000A3298(a1, v5, a2, a3, (void (*)(void))type metadata accessor for UpdateTrustRequest);
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000A14B8()
{
  return sub_100221F10();
}

uint64_t sub_1000A1568()
{
  return sub_100221F10();
}

uint64_t sub_1000A1618()
{
  return sub_100221F10();
}

uint64_t UpdateTrustRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v9 = v5[1];
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (uint64_t result = sub_100221FE0(), !v4))
  {
    unint64_t v12 = v5[3];
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v5[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v13 || (uint64_t result = sub_100221FE0(), !v4))
    {
      uint64_t result = sub_1000A1964((uint64_t)v5, a1, a2, a3);
      if (!v4)
      {
        sub_1000A1B68((uint64_t)v5, a1, a2, a3);
        if (*(void *)(v5[4] + 16))
        {
          type metadata accessor for TLKShare(0);
          sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
          sub_100222010();
        }
        if (*(void *)(v5[5] + 16))
        {
          type metadata accessor for ViewKeys(0);
          sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
          sub_100222010();
        }
        sub_1000A1D6C((uint64_t)v5, a1, a2, a3);
        sub_1000A38AC((uint64_t)v5, a1, a2, a3, type metadata accessor for UpdateTrustRequest, 8);
        sub_1000A3ABC((uint64_t)v5, a1, a2, a3, type metadata accessor for UpdateTrustRequest, 9);
        type metadata accessor for UpdateTrustRequest(0);
        return sub_100221DD0();
      }
    }
  }
  return result;
}

uint64_t sub_1000A1964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  sub_10000D830(a1 + *(int *)(updated + 36), (uint64_t)v8, &qword_100299F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F18);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
  sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000A1B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  sub_10000D830(a1 + *(int *)(updated + 40), (uint64_t)v8, &qword_10029ECA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029ECA0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
  sub_1000D8CA4(&qword_10029A530, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_1000A1D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029ED20);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for UpdateTrustRequest(0);
  sub_10000D830(a1 + *(int *)(updated + 44), (uint64_t)v8, &qword_10029ED20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029ED20);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for IdmsTrustedDevicesVersion);
  sub_1000D8CA4(&qword_10029A588, (void (*)(uint64_t))type metadata accessor for IdmsTrustedDevicesVersion);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for IdmsTrustedDevicesVersion);
}

Swift::Int UpdateTrustRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for UpdateTrustRequest, &qword_10029A1F0, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);
}

uint64_t sub_1000A1FB8@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = &_swiftEmptyArrayStorage;
  a2[5] = &_swiftEmptyArrayStorage;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + a1[9];
  uint64_t v5 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + a1[10];
  uint64_t v7 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (char *)a2 + a1[11];
  uint64_t v9 = type metadata accessor for IdmsTrustedDevicesVersion(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (char *)a2 + a1[12];
  uint64_t v11 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (char *)a2 + a1[13];
  uint64_t v13 = type metadata accessor for AccountInfo(0);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);

  return v14(v12, 1, 1, v13);
}

uint64_t (*sub_1000A2184())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_1000A21A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UpdateTrustRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A21C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UpdateTrustRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A21D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2F8, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A2254@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D48, (uint64_t)static UpdateTrustRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000A2278(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A22E4()
{
  sub_1000D8CA4(&qword_10029A708, (void (*)(uint64_t))type metadata accessor for UpdateTrustRequest);

  return sub_100221F60();
}

void *UpdateTrustResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static UpdateTrustResponse.protoMessageName;
}

unint64_t static UpdateTrustResponse.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1000A2388()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static UpdateTrustResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static UpdateTrustResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "changes";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "zone_key_hierarchy_records";
  *((void *)v10 + 1) = 26;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t UpdateTrustResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D50, (uint64_t)static UpdateTrustResponse._protobuf_nameMap);
}

uint64_t static UpdateTrustResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D50, (uint64_t)static UpdateTrustResponse._protobuf_nameMap, a1);
}

uint64_t UpdateTrustResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAC30(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A25BC);
}

uint64_t sub_1000A25BC()
{
  return sub_100221F10();
}

uint64_t UpdateTrustResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAE44(a1, a2, a3, sub_1000A26AC, (void (*)(void))type metadata accessor for UpdateTrustResponse);
}

uint64_t sub_1000A26AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Changes(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for UpdateTrustResponse(0);
  sub_10000D830(a1 + *(int *)(updated + 24), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Changes);
  sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Changes);
}

Swift::Int UpdateTrustResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for UpdateTrustResponse, &qword_10029A1F8, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);
}

uint64_t sub_1000A28F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UpdateTrustResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A2910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UpdateTrustResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A2928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2F0, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A29A4(uint64_t *a1)
{
  return sub_1000CF4BC(v1, a1, (uint64_t *)type metadata accessor for UpdateTrustResponse) & 1;
}

uint64_t sub_1000A29DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D50, (uint64_t)static UpdateTrustResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000A2A00(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A720, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A2A6C()
{
  sub_1000D8CA4(&qword_10029A720, (void (*)(uint64_t))type metadata accessor for UpdateTrustResponse);

  return sub_100221F60();
}

void *SetRecoveryKeyRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static SetRecoveryKeyRequest.protoMessageName;
}

unint64_t static SetRecoveryKeyRequest.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1000A2B10()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SetRecoveryKeyRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SetRecoveryKeyRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100229BB0;
  unint64_t v4 = v24 + v3;
  unint64_t v5 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 1;
  *(void *)unint64_t v5 = "change_token";
  *(void *)(v5 + 8) = 12;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "peer_id";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "recovery_signing_pub_key";
  *((void *)v11 + 1) = 24;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "recovery_encryption_pub_key";
  *((void *)v13 + 1) = 27;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "stable_info_and_sig";
  *((void *)v15 + 1) = 19;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "tlk_shares";
  *((void *)v17 + 1) = 10;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "metrics";
  *((void *)v19 + 1) = 7;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "accountInfo";
  *((void *)v21 + 1) = 11;
  v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "view_keys";
  *(void *)(v22 + 8) = 9;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  return sub_100222040();
}

uint64_t SetRecoveryKeyRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D58, (uint64_t)static SetRecoveryKeyRequest._protobuf_nameMap);
}

uint64_t static SetRecoveryKeyRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D58, (uint64_t)static SetRecoveryKeyRequest._protobuf_nameMap, a1);
}

uint64_t SetRecoveryKeyRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_100221E50();
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          uint64_t v12 = v11;
          sub_100221ED0();
          goto LABEL_13;
        case 3:
        case 4:
          uint64_t v12 = v11;
          sub_100221E90();
          goto LABEL_13;
        case 5:
          uint64_t v12 = v11;
          sub_1000A3134();
          goto LABEL_13;
        case 6:
          type metadata accessor for TLKShare(0);
          sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
          goto LABEL_12;
        case 7:
          uint64_t v12 = v11;
          sub_1000A31E4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for SetRecoveryKeyRequest);
          goto LABEL_13;
        case 8:
          uint64_t v12 = v11;
          sub_1000A3298(a1, v5, a2, a3, (void (*)(void))type metadata accessor for SetRecoveryKeyRequest);
          goto LABEL_13;
        case 9:
          type metadata accessor for ViewKeys(0);
          sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
LABEL_12:
          uint64_t v12 = v11;
          sub_100221F00();
LABEL_13:
          uint64_t v11 = v12;
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000A3134()
{
  return sub_100221F10();
}

uint64_t sub_1000A31E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_100221F10();
}

uint64_t sub_1000A3298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_100221F10();
}

uint64_t SetRecoveryKeyRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v9 = v5[1];
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (uint64_t result = sub_100221FE0(), !v4))
  {
    unint64_t v12 = v5[3];
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v5[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v13 || (uint64_t result = sub_100221FE0(), !v4))
    {
      uint64_t v14 = v5[4];
      unint64_t v15 = v5[5];
      switch(v15 >> 62)
      {
        case 1uLL:
          if ((int)v14 != v14 >> 32) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2uLL:
          if (*(void *)(v14 + 16) != *(void *)(v14 + 24)) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 3uLL:
          goto LABEL_16;
        default:
          if ((v15 & 0xFF000000000000) == 0) {
            goto LABEL_16;
          }
LABEL_15:
          uint64_t result = sub_100221FA0();
          if (!v4)
          {
LABEL_16:
            uint64_t v16 = v5[6];
            unint64_t v17 = v5[7];
            switch(v17 >> 62)
            {
              case 1uLL:
                if ((int)v16 != v16 >> 32) {
                  goto LABEL_22;
                }
                goto LABEL_23;
              case 2uLL:
                if (*(void *)(v16 + 16) != *(void *)(v16 + 24)) {
                  goto LABEL_22;
                }
                goto LABEL_23;
              case 3uLL:
                goto LABEL_23;
              default:
                if ((v17 & 0xFF000000000000) == 0) {
                  goto LABEL_23;
                }
LABEL_22:
                uint64_t result = sub_100221FA0();
                if (!v4)
                {
LABEL_23:
                  uint64_t result = sub_1000A36A8((uint64_t)v5, a1, a2, a3);
                  if (!v4)
                  {
                    if (*(void *)(v5[8] + 16))
                    {
                      type metadata accessor for TLKShare(0);
                      sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
                      sub_100222010();
                    }
                    sub_1000A38AC((uint64_t)v5, a1, a2, a3, type metadata accessor for SetRecoveryKeyRequest, 7);
                    sub_1000A3ABC((uint64_t)v5, a1, a2, a3, type metadata accessor for SetRecoveryKeyRequest, 8);
                    if (*(void *)(v5[9] + 16))
                    {
                      type metadata accessor for ViewKeys(0);
                      sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
                      sub_100222010();
                    }
                    type metadata accessor for SetRecoveryKeyRequest(0);
                    uint64_t result = sub_100221DD0();
                  }
                }
                break;
            }
          }
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1000A36A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SetRecoveryKeyRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 44), (uint64_t)v8, &qword_100299F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F18);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
  sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000A38AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  v19[0] = a6;
  v19[1] = a3;
  v19[3] = a4;
  uint64_t v8 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Metrics(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a5(0);
  sub_10000D830(a1 + *(int *)(v17 + 48), (uint64_t)v11, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_10004015C((uint64_t)v11, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v11, (uint64_t)v16, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v16, type metadata accessor for Metrics);
}

uint64_t sub_1000A3ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  v19[0] = a6;
  v19[1] = a3;
  v19[3] = a4;
  uint64_t v8 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AccountInfo(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a5(0);
  sub_10000D830(a1 + *(int *)(v17 + 52), (uint64_t)v11, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_10004015C((uint64_t)v11, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v11, (uint64_t)v16, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v16, type metadata accessor for AccountInfo);
}

Swift::Int SetRecoveryKeyRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SetRecoveryKeyRequest, &qword_10029A200, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);
}

uint64_t sub_1000A3D14@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  *(_OWORD *)(a2 + 32) = xmmword_100229520;
  *(_OWORD *)(a2 + 48) = xmmword_100229520;
  *(void *)(a2 + 64) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 72) = &_swiftEmptyArrayStorage;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + a1[11];
  uint64_t v5 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + a1[12];
  uint64_t v7 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = a2 + a1[13];
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);

  return v10(v8, 1, 1, v9);
}

uint64_t sub_1000A3E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000A3EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000A3F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SetRecoveryKeyRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A3F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SetRecoveryKeyRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A3F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2E8, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A3FE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D58, (uint64_t)static SetRecoveryKeyRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000A4004(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029ED40, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A4070()
{
  sub_1000D8CA4((unint64_t *)&unk_10029ED40, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyRequest);

  return sub_100221F60();
}

void *SetRecoveryKeyResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static SetRecoveryKeyResponse.protoMessageName;
}

unint64_t static SetRecoveryKeyResponse.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1000A4114()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SetRecoveryKeyResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SetRecoveryKeyResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "changes";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "zone_key_hierarchy_records";
  *((void *)v10 + 1) = 26;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t SetRecoveryKeyResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D60, (uint64_t)static SetRecoveryKeyResponse._protobuf_nameMap);
}

uint64_t static SetRecoveryKeyResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D60, (uint64_t)static SetRecoveryKeyResponse._protobuf_nameMap, a1);
}

uint64_t SetRecoveryKeyResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAC30(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A4348);
}

uint64_t sub_1000A4348()
{
  return sub_100221F10();
}

uint64_t SetRecoveryKeyResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAE44(a1, a2, a3, sub_1000A4438, (void (*)(void))type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t sub_1000A4438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Changes(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SetRecoveryKeyResponse(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Changes);
  sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Changes);
}

Swift::Int SetRecoveryKeyResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SetRecoveryKeyResponse, &qword_10029A208, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);
}

uint64_t sub_1000A4684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SetRecoveryKeyResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A469C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SetRecoveryKeyResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A46B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2E0, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A4730(uint64_t *a1)
{
  return sub_1000CF4BC(v1, a1, (uint64_t *)type metadata accessor for SetRecoveryKeyResponse) & 1;
}

uint64_t sub_1000A4768@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D60, (uint64_t)static SetRecoveryKeyResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000A478C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A748, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A47F8()
{
  sub_1000D8CA4(&qword_10029A748, (void (*)(uint64_t))type metadata accessor for SetRecoveryKeyResponse);

  return sub_100221F60();
}

void *RemoveRecoveryKeyRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static RemoveRecoveryKeyRequest.protoMessageName;
}

unint64_t static RemoveRecoveryKeyRequest.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1000A489C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static RemoveRecoveryKeyRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static RemoveRecoveryKeyRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229B70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "change_token";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "peer_id";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "stable_info_and_sig";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "dynamic_info_and_sig";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "metrics";
  *((void *)v16 + 1) = 7;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "accountInfo";
  *((void *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t RemoveRecoveryKeyRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D68, (uint64_t)static RemoveRecoveryKeyRequest._protobuf_nameMap);
}

uint64_t static RemoveRecoveryKeyRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D68, (uint64_t)static RemoveRecoveryKeyRequest._protobuf_nameMap, a1);
}

uint64_t RemoveRecoveryKeyRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_100221ED0();
          break;
        case 3:
          sub_1000A4CE4();
          break;
        case 4:
          sub_1000A4D94();
          break;
        case 5:
          sub_1000A4E44();
          break;
        case 6:
          sub_1000A4EF4();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000A4CE4()
{
  return sub_100221F10();
}

uint64_t sub_1000A4D94()
{
  return sub_100221F10();
}

uint64_t sub_1000A4E44()
{
  return sub_100221F10();
}

uint64_t sub_1000A4EF4()
{
  return sub_100221F10();
}

uint64_t RemoveRecoveryKeyRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_100221FE0(), !v4))
  {
    unint64_t v11 = v3[3];
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v3[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v12 || (uint64_t result = sub_100221FE0(), !v4))
    {
      uint64_t result = sub_1000A5100((uint64_t)v3, a1, a2, a3);
      if (!v4)
      {
        sub_1000A5304((uint64_t)v3, a1, a2, a3);
        sub_1000A5508((uint64_t)v3, a1, a2, a3);
        sub_1000A570C((uint64_t)v3, a1, a2, a3);
        type metadata accessor for RemoveRecoveryKeyRequest(0);
        return sub_100221DD0();
      }
    }
  }
  return result;
}

uint64_t sub_1000A5100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_100299F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F18);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
  sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000A5304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 32), (uint64_t)v8, &qword_10029ECA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029ECA0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
  sub_1000D8CA4(&qword_10029A530, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_1000A5508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 36), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000A570C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemoveRecoveryKeyRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 40), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int RemoveRecoveryKeyRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for RemoveRecoveryKeyRequest, &qword_10029A210, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);
}

uint64_t sub_1000A595C@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + a1[7];
  uint64_t v5 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + a1[8];
  uint64_t v7 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  unint64_t v8 = (char *)a2 + a1[9];
  uint64_t v9 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (char *)a2 + a1[10];
  uint64_t v11 = type metadata accessor for AccountInfo(0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 1, 1, v11);
}

uint64_t sub_1000A5ACC()
{
  return RemoveRecoveryKeyRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000A5AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RemoveRecoveryKeyRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A5AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2D8, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A5B78@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D68, (uint64_t)static RemoveRecoveryKeyRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000A5B9C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029EC80, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A5C08()
{
  sub_1000D8CA4((unint64_t *)&unk_10029EC80, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyRequest);

  return sub_100221F60();
}

void *RemoveRecoveryKeyResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static RemoveRecoveryKeyResponse.protoMessageName;
}

unint64_t static RemoveRecoveryKeyResponse.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1000A5CAC(uint64_t a1)
{
  return sub_1000B84CC(a1, static RemoveRecoveryKeyResponse._protobuf_nameMap, (uint64_t)"changes", 7);
}

uint64_t RemoveRecoveryKeyResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D70, (uint64_t)static RemoveRecoveryKeyResponse._protobuf_nameMap);
}

uint64_t static RemoveRecoveryKeyResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D70, (uint64_t)static RemoveRecoveryKeyResponse._protobuf_nameMap, a1);
}

uint64_t RemoveRecoveryKeyResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000ABEC8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A5D38);
}

uint64_t sub_1000A5D38()
{
  return sub_100221F10();
}

uint64_t RemoveRecoveryKeyResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A5E14(a1, a2, a3, type metadata accessor for RemoveRecoveryKeyResponse);
}

uint64_t sub_1000A5E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = sub_1000AC028(v4, a1, a2, a3, a4);
  if (!v5) {
    return sub_100221DD0();
  }
  return result;
}

uint64_t static RemoveRecoveryKeyResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000CCA24(a1, a2, type metadata accessor for RemoveRecoveryKeyResponse) & 1;
}

Swift::Int RemoveRecoveryKeyResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for RemoveRecoveryKeyResponse, &qword_10029A218, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);
}

uint64_t sub_1000A5EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for Changes(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_1000A5F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RemoveRecoveryKeyResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A5F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RemoveRecoveryKeyResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A5F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2D0, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A6010@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D70, (uint64_t)static RemoveRecoveryKeyResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000A6034(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A770, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A60A0()
{
  sub_1000D8CA4(&qword_10029A770, (void (*)(uint64_t))type metadata accessor for RemoveRecoveryKeyResponse);

  return sub_100221F60();
}

void *PerformATOPRVActionsRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static PerformATOPRVActionsRequest.protoMessageName;
}

unint64_t static PerformATOPRVActionsRequest.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1000A6144()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static PerformATOPRVActionsRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static PerformATOPRVActionsRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "metrics";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "accountInfo";
  *((void *)v10 + 1) = 11;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t PerformATOPRVActionsRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D78, (uint64_t)static PerformATOPRVActionsRequest._protobuf_nameMap);
}

uint64_t static PerformATOPRVActionsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D78, (uint64_t)static PerformATOPRVActionsRequest._protobuf_nameMap, a1);
}

uint64_t PerformATOPRVActionsRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C12C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A6384, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A6434);
}

uint64_t sub_1000A6384()
{
  return sub_100221F10();
}

uint64_t sub_1000A6434()
{
  return sub_100221F10();
}

uint64_t PerformATOPRVActionsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1000A6554(v3, a1, a2, a3);
  if (!v4)
  {
    sub_1000A6758(v3, a1, a2, a3);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_1000A6554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PerformATOPRVActionsRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 20), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000A6758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PerformATOPRVActionsRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int PerformATOPRVActionsRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for PerformATOPRVActionsRequest, &qword_10029A220, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);
}

uint64_t sub_1000A69A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BF6C8(a1, type metadata accessor for Metrics, type metadata accessor for AccountInfo, a2);
}

uint64_t sub_1000A69D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PerformATOPRVActionsRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000A69EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PerformATOPRVActionsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000A6A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2C8, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A6A80@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D78, (uint64_t)static PerformATOPRVActionsRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000A6AA4(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A788, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A6B10()
{
  sub_1000D8CA4(&qword_10029A788, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsRequest);

  return sub_100221F60();
}

void *PerformATOPRVActionsResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static PerformATOPRVActionsResponse.protoMessageName;
}

unint64_t static PerformATOPRVActionsResponse.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1000A6BB4(uint64_t a1)
{
  return sub_1000C3144(a1, static PerformATOPRVActionsResponse._protobuf_nameMap);
}

uint64_t PerformATOPRVActionsResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D80, (uint64_t)static PerformATOPRVActionsResponse._protobuf_nameMap);
}

uint64_t static PerformATOPRVActionsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D80, (uint64_t)static PerformATOPRVActionsResponse._protobuf_nameMap, a1);
}

uint64_t RemoveUnreadableCKServerDataResponse.decodeMessage<A>(decoder:)()
{
  return sub_1000C32C0();
}

uint64_t PerformATOPRVActionsResponse.traverse<A>(visitor:)()
{
  return sub_100221DD0();
}

Swift::Int PerformATOPRVActionsResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for PerformATOPRVActionsResponse, &qword_10029A228, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);
}

uint64_t sub_1000A6C84()
{
  return RemoveUnreadableCKServerDataResponse.decodeMessage<A>(decoder:)();
}

uint64_t RemoveUnreadableCKServerDataResponse.traverse<A>(visitor:)()
{
  return PerformATOPRVActionsResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000A6CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2C0, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000A6D30@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D80, (uint64_t)static PerformATOPRVActionsResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000A6D54(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A7A0, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000A6DC0()
{
  sub_1000D8CA4(&qword_10029A7A0, (void (*)(uint64_t))type metadata accessor for PerformATOPRVActionsResponse);

  return sub_100221F60();
}

void *AddCustodianRecoveryKeyRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static AddCustodianRecoveryKeyRequest.protoMessageName;
}

unint64_t static AddCustodianRecoveryKeyRequest.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1000A6E64()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static AddCustodianRecoveryKeyRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static AddCustodianRecoveryKeyRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100229BB0;
  unint64_t v4 = v24 + v3;
  unint64_t v5 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 1;
  *(void *)unint64_t v5 = "change_token";
  *(void *)(v5 + 8) = 12;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "peer_id";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "peer";
  *((void *)v11 + 1) = 4;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "stable_info_and_sig";
  *((void *)v13 + 1) = 19;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "tlk_shares";
  *((void *)v15 + 1) = 10;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "dynamic_info_and_sig";
  *((void *)v17 + 1) = 20;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "metrics";
  *((void *)v19 + 1) = 7;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "accountInfo";
  *((void *)v21 + 1) = 11;
  v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "view_keys";
  *(void *)(v22 + 8) = 9;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  return sub_100222040();
}

uint64_t AddCustodianRecoveryKeyRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D88, (uint64_t)static AddCustodianRecoveryKeyRequest._protobuf_nameMap);
}

uint64_t static AddCustodianRecoveryKeyRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D88, (uint64_t)static AddCustodianRecoveryKeyRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000A7238()
{
  type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass(0);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  uint64_t v2 = type metadata accessor for Peer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v3 = (char *)v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  uint64_t v4 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)((char *)v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares) = &_swiftEmptyArrayStorage;
  unint64_t v5 = (char *)v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  uint64_t v6 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (char *)v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v8 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  unint64_t v9 = (char *)v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v10 = type metadata accessor for AccountInfo(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)((char *)v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys) = &_swiftEmptyArrayStorage;
  qword_100299EC8 = (uint64_t)v0;
  return result;
}

void *sub_1000A7424(void *a1)
{
  uint64_t v3 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v62 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v61 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v60 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v57 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v54 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  uint64_t v18 = (uint64_t)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  uint64_t v19 = type metadata accessor for Peer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  uint64_t v53 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  uint64_t v21 = type metadata accessor for SignedPeerStableInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = (void *)((char *)v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  *(void *)((char *)v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares) = &_swiftEmptyArrayStorage;
  uint64_t v23 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  uint64_t v55 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  uint64_t v24 = type metadata accessor for SignedPeerDynamicInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v56 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  uint64_t v26 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v27 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v58 = (char *)v1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  uint64_t v28 = type metadata accessor for AccountInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  uint64_t v59 = (void *)((char *)v1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  *(void *)((char *)v1
            + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys) = &_swiftEmptyArrayStorage;
  swift_beginAccess();
  uint64_t v29 = a1[2];
  uint64_t v30 = a1[3];
  swift_beginAccess();
  v1[2] = v29;
  v1[3] = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v32 = a1[4];
  uint64_t v31 = a1[5];
  swift_beginAccess();
  v1[4] = v32;
  v1[5] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t)a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  uint64_t v34 = v54;
  sub_10000D830(v33, v54, &qword_100299F58);
  swift_beginAccess();
  sub_1000D8C00(v34, v18, &qword_100299F58);
  swift_endAccess();
  uint64_t v35 = (uint64_t)a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  swift_beginAccess();
  uint64_t v36 = v57;
  sub_10000D830(v35, v57, &qword_100299F18);
  uint64_t v37 = (uint64_t)v53;
  swift_beginAccess();
  sub_1000D8C00(v36, v37, &qword_100299F18);
  swift_endAccess();
  uint64_t v38 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
  swift_beginAccess();
  uint64_t v39 = *v38;
  swift_beginAccess();
  *uint64_t v22 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t)a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  swift_beginAccess();
  uint64_t v41 = v60;
  sub_10000D830(v40, v60, &qword_10029ECA0);
  uint64_t v42 = (uint64_t)v55;
  swift_beginAccess();
  sub_1000D8C00(v41, v42, &qword_10029ECA0);
  swift_endAccess();
  uint64_t v43 = (uint64_t)a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  uint64_t v44 = v61;
  sub_10000D830(v43, v61, &qword_10029F000);
  uint64_t v45 = (uint64_t)v56;
  swift_beginAccess();
  sub_1000D8C00(v44, v45, &qword_10029F000);
  swift_endAccess();
  uint64_t v46 = (uint64_t)a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  uint64_t v47 = v62;
  sub_10000D830(v46, v62, &qword_100299F50);
  uint64_t v48 = (uint64_t)v58;
  swift_beginAccess();
  sub_1000D8C00(v47, v48, &qword_100299F50);
  swift_endAccess();
  uint64_t v49 = (void *)((char *)a1
                 + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
  swift_beginAccess();
  uint64_t v50 = *v49;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v51 = v59;
  swift_beginAccess();
  *uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000A7B14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer, &qword_100299F58);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig, &qword_100299F18);
  swift_bridgeObjectRelease();
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig, &qword_10029ECA0);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics, &qword_10029F000);
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo, &qword_100299F50);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000A7BD4()
{
  return sub_1000BA7B0(sub_1000A7B14);
}

uint64_t AddCustodianRecoveryKeyRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095894(a1, a2, a3, type metadata accessor for AddCustodianRecoveryKeyRequest, (void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest._StorageClass, (uint64_t (*)(uint64_t))sub_1000A7424, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A7C54);
}

uint64_t sub_1000A7C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_100221E50();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1000BAAE8(a2, a1, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularStringField(value:));
          break;
        case 2:
          sub_1000A7E20();
          break;
        case 3:
          sub_1000A7EA0();
          break;
        case 4:
          sub_1000A7F70();
          break;
        case 5:
          sub_1000A8040();
          break;
        case 6:
          sub_1000A8110();
          break;
        case 7:
          sub_1000A81E0();
          break;
        case 8:
          sub_1000A82B0();
          break;
        case 9:
          sub_1000A8380();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000A7E20()
{
  return swift_endAccess();
}

uint64_t sub_1000A7EA0()
{
  return swift_endAccess();
}

uint64_t sub_1000A7F70()
{
  return swift_endAccess();
}

uint64_t sub_1000A8040()
{
  return swift_endAccess();
}

uint64_t sub_1000A8110()
{
  return swift_endAccess();
}

uint64_t sub_1000A81E0()
{
  return swift_endAccess();
}

uint64_t sub_1000A82B0()
{
  return swift_endAccess();
}

uint64_t sub_1000A8380()
{
  return swift_endAccess();
}

uint64_t AddCustodianRecoveryKeyRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095C34(a1, a2, a3, (void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000A848C);
}

uint64_t sub_1000A848C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  unint64_t v9 = a1[3];
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (swift_bridgeObjectRetain(), sub_100221FE0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    swift_beginAccess();
    unint64_t v12 = a1[5];
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = a1[4] & 0xFFFFFFFFFFFFLL;
    }
    if (!v13 || (swift_bridgeObjectRetain(), sub_100221FE0(), uint64_t result = swift_bridgeObjectRelease(), !v4))
    {
      uint64_t result = sub_1000A8788((uint64_t)a1, a2, a3, a4);
      if (!v4)
      {
        sub_1000A89A4((uint64_t)a1, a2, a3, a4);
        uint64_t v14 = (char *)a1
            + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares;
        swift_beginAccess();
        if (*(void *)(*(void *)v14 + 16))
        {
          type metadata accessor for TLKShare(0);
          sub_1000D8CA4(&qword_10029ED60, (void (*)(uint64_t))type metadata accessor for TLKShare);
          swift_bridgeObjectRetain();
          sub_100222010();
          swift_bridgeObjectRelease();
        }
        sub_1000A8BC0((uint64_t)a1, a2, a3, a4);
        sub_1000A8DDC((uint64_t)a1, a2, a3, a4);
        sub_1000A8FF8((uint64_t)a1, a2, a3, a4);
        uint64_t v15 = (char *)a1
            + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys;
        uint64_t result = swift_beginAccess();
        if (*(void *)(*(void *)v15 + 16))
        {
          type metadata accessor for ViewKeys(0);
          sub_1000D8CA4(&qword_10029A1E8, (void (*)(uint64_t))type metadata accessor for ViewKeys);
          swift_bridgeObjectRetain();
          sub_100222010();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000A8788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F58);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Peer(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F58);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Peer);
  sub_1000D8CA4((unint64_t *)&unk_10029EE10, (void (*)(uint64_t))type metadata accessor for Peer);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Peer);
}

uint64_t sub_1000A89A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F18);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F18);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
  sub_1000D8CA4(&qword_10029A518, (void (*)(uint64_t))type metadata accessor for SignedPeerStableInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerStableInfo);
}

uint64_t sub_1000A8BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029ECA0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_10029ECA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029ECA0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
  sub_1000D8CA4(&qword_10029A530, (void (*)(uint64_t))type metadata accessor for SignedPeerDynamicInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for SignedPeerDynamicInfo);
}

uint64_t sub_1000A8DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000A8FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

uint64_t static AddCustodianRecoveryKeyRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for AddCustodianRecoveryKeyRequest, (uint64_t (*)(uint64_t, uint64_t))sub_1000A9258) & 1;
}

uint64_t sub_1000A9258(uint64_t a1, void *a2)
{
  uint64_t v147 = type metadata accessor for AccountInfo(0);
  uint64_t v151 = *(void *)(v147 - 8);
  __chkstk_darwin(v147, v4);
  uint64_t v142 = (_DWORD *)((char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v145 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v145, v6);
  uint64_t v146 = (uint64_t)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000046DC(&qword_100299F50);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v143 = (uint64_t)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v148 = (uint64_t)&v141 - v13;
  uint64_t v155 = type metadata accessor for Metrics(0);
  uint64_t v153 = *(void *)(v155 - 8);
  __chkstk_darwin(v155, v14);
  Swift::String v144 = (uint64_t *)((char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v152, v16);
  id v154 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_10029F000);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  id v149 = (uint64_t *)((char *)&v141 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20, v22);
  uint64_t v156 = (uint64_t)&v141 - v23;
  uint64_t v161 = type metadata accessor for SignedPeerDynamicInfo(0);
  uint64_t v159 = *(void *)(v161 - 8);
  __chkstk_darwin(v161, v24);
  uint64_t v150 = (uint64_t)&v141 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_1000046DC(&qword_10029E448);
  __chkstk_darwin(v158, v26);
  uint64_t v160 = (uint64_t)&v141 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000046DC(&qword_10029ECA0);
  uint64_t v30 = __chkstk_darwin(v28 - 8, v29);
  uint64_t v157 = (uint64_t)&v141 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  uint64_t v169 = (uint64_t)&v141 - v33;
  uint64_t v34 = type metadata accessor for SignedPeerStableInfo(0);
  uint64_t v166 = *(void *)(v34 - 8);
  uint64_t v167 = v34;
  __chkstk_darwin(v34, v35);
  uint64_t v162 = (uint64_t)&v141 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_1000046DC(&qword_10029E450);
  __chkstk_darwin(v165, v37);
  uint64_t v168 = (uint64_t)&v141 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000046DC(&qword_100299F18);
  uint64_t v41 = __chkstk_darwin(v39 - 8, v40);
  uint64_t v163 = (uint64_t)&v141 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41, v43);
  uint64_t v172 = (uint64_t)&v141 - v44;
  uint64_t v173 = type metadata accessor for Peer(0);
  uint64_t v45 = *(void *)(v173 - 8);
  __chkstk_darwin(v173, v46);
  uint64_t v164 = (uint64_t *)((char *)&v141 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_1000046DC(&qword_10029E458);
  __chkstk_darwin(v48, v49);
  uint64_t v51 = (char *)&v141 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000046DC(&qword_100299F58);
  uint64_t v54 = __chkstk_darwin(v52 - 8, v53);
  uint64_t v171 = (uint64_t *)((char *)&v141 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v54, v56);
  uint64_t v58 = (char *)&v141 - v57;
  swift_beginAccess();
  uint64_t v59 = a1;
  uint64_t v60 = *(void *)(a1 + 16);
  uint64_t v61 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v60 == a2[2] && v61 == a2[3] || (char v62 = 0, (sub_100222A30() & 1) != 0))
  {
    if ((swift_beginAccess(),
          uint64_t v63 = *(void *)(v59 + 32),
          uint64_t v64 = *(void *)(v59 + 40),
          swift_beginAccess(),
          v63 == a2[4])
      && v64 == a2[5]
      || (char v62 = 0, (sub_100222A30() & 1) != 0))
    {
      uint64_t v170 = a2;
      uint64_t v65 = v59;
      uint64_t v66 = v59
          + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
      swift_beginAccess();
      sub_10000D830(v66, (uint64_t)v58, &qword_100299F58);
      uint64_t v67 = v170;
      uint64_t v68 = (uint64_t)v170
          + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peer;
      swift_beginAccess();
      uint64_t v69 = (uint64_t)&v51[*(int *)(v48 + 48)];
      sub_10000D830((uint64_t)v58, (uint64_t)v51, &qword_100299F58);
      sub_10000D830(v68, v69, &qword_100299F58);
      uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
      uint64_t v71 = v173;
      if (v70((uint64_t)v51, 1, v173) == 1)
      {
        swift_retain();
        swift_retain();
        sub_10004015C((uint64_t)v58, &qword_100299F58);
        if (v70(v69, 1, v71) == 1)
        {
          sub_10004015C((uint64_t)v51, &qword_100299F58);
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v72 = v171;
        sub_10000D830((uint64_t)v51, (uint64_t)v171, &qword_100299F58);
        if (v70(v69, 1, v71) != 1)
        {
          uint64_t v75 = v164;
          sub_1000D736C(v69, (uint64_t)v164, type metadata accessor for Peer);
          swift_retain();
          swift_retain();
          char v76 = _s18TrustedPeersHelper4PeerV2eeoiySbAC_ACtFZ_0(v72, v75);
          sub_1000D7E78((uint64_t)v75, type metadata accessor for Peer);
          sub_10004015C((uint64_t)v58, &qword_100299F58);
          uint64_t v77 = (uint64_t)v72;
          uint64_t v65 = v59;
          sub_1000D7E78(v77, type metadata accessor for Peer);
          uint64_t v67 = v170;
          sub_10004015C((uint64_t)v51, &qword_100299F58);
          if ((v76 & 1) == 0) {
            goto LABEL_39;
          }
LABEL_15:
          uint64_t v78 = v65
              + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
          swift_beginAccess();
          uint64_t v79 = v172;
          sub_10000D830(v78, v172, &qword_100299F18);
          uint64_t v80 = (uint64_t)v67
              + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__stableInfoAndSig;
          swift_beginAccess();
          uint64_t v81 = v168;
          uint64_t v82 = v168 + *(int *)(v165 + 48);
          sub_10000D830(v79, v168, &qword_100299F18);
          uint64_t v83 = v80;
          uint64_t v84 = v81;
          sub_10000D830(v83, v82, &qword_100299F18);
          uint64_t v85 = v167;
          uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v166 + 48);
          if (v86(v81, 1, v167) == 1)
          {
            sub_10004015C(v79, &qword_100299F18);
            int v87 = v86(v82, 1, v85);
            uint64_t v88 = v169;
            if (v87 == 1)
            {
              sub_10004015C(v81, &qword_100299F18);
              goto LABEL_18;
            }
          }
          else
          {
            uint64_t v108 = v81;
            uint64_t v109 = v163;
            sub_10000D830(v108, v163, &qword_100299F18);
            int v110 = v86(v82, 1, v85);
            uint64_t v88 = v169;
            if (v110 != 1)
            {
              uint64_t v111 = v162;
              sub_1000D736C(v82, v162, type metadata accessor for SignedPeerStableInfo);
              if ((sub_10003FE7C(*(void *)v109, *(void *)(v109 + 8), *(void *)v111, *(void *)(v111 + 8)) & 1) == 0
                || (sub_10003FE7C(*(void *)(v109 + 16), *(void *)(v109 + 24), *(void *)(v111 + 16), *(void *)(v111 + 24)) & 1) == 0)
              {
                uint64_t v113 = type metadata accessor for SignedPeerStableInfo;
                sub_1000D7E78(v111, type metadata accessor for SignedPeerStableInfo);
                uint64_t v114 = &qword_100299F18;
                uint64_t v115 = v172;
LABEL_33:
                sub_10004015C(v115, v114);
                sub_1000D7E78(v109, v113);
                uint64_t v74 = v84;
LABEL_34:
                uint64_t v73 = v114;
                goto LABEL_38;
              }
              sub_100221DF0();
              sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
              char v112 = sub_100222250();
              sub_1000D7E78(v111, type metadata accessor for SignedPeerStableInfo);
              sub_10004015C(v172, &qword_100299F18);
              sub_1000D7E78(v163, type metadata accessor for SignedPeerStableInfo);
              sub_10004015C(v168, &qword_100299F18);
              if ((v112 & 1) == 0) {
                goto LABEL_39;
              }
LABEL_18:
              int v89 = (uint64_t *)(v65
                              + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
              swift_beginAccess();
              uint64_t v90 = *v89;
              uint64_t v91 = (void *)((char *)v67
                             + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShares);
              swift_beginAccess();
              uint64_t v92 = *v91;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v93 = sub_10003DDD0(v90, v92);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v93 & 1) == 0) {
                goto LABEL_39;
              }
              uint64_t v94 = v65
                  + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
              swift_beginAccess();
              sub_10000D830(v94, v88, &qword_10029ECA0);
              uint64_t v95 = (uint64_t)v67
                  + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__dynamicInfoAndSig;
              swift_beginAccess();
              uint64_t v96 = v160;
              uint64_t v97 = v160 + *(int *)(v158 + 48);
              sub_10000D830(v88, v160, &qword_10029ECA0);
              sub_10000D830(v95, v97, &qword_10029ECA0);
              uint64_t v98 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48);
              uint64_t v99 = v161;
              if (v98(v96, 1, v161) == 1)
              {
                sub_10004015C(v88, &qword_10029ECA0);
                if (v98(v97, 1, v99) == 1)
                {
                  sub_10004015C(v96, &qword_10029ECA0);
LABEL_22:
                  uint64_t v100 = v65
                       + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
                  swift_beginAccess();
                  uint64_t v101 = v156;
                  sub_10000D830(v100, v156, &qword_10029F000);
                  uint64_t v102 = (uint64_t)v67
                       + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__metrics;
                  swift_beginAccess();
                  uint64_t v51 = v154;
                  uint64_t v103 = (uint64_t)&v154[*(int *)(v152 + 48)];
                  sub_10000D830(v101, (uint64_t)v154, &qword_10029F000);
                  sub_10000D830(v102, v103, &qword_10029F000);
                  uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 48);
                  uint64_t v105 = v155;
                  if (v104((uint64_t)v51, 1, v155) == 1)
                  {
                    sub_10004015C(v101, &qword_10029F000);
                    int v106 = v104(v103, 1, v105);
                    uint64_t v107 = v151;
                    if (v106 == 1)
                    {
                      sub_10004015C((uint64_t)v51, &qword_10029F000);
LABEL_57:
                      uint64_t v125 = v65
                           + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
                      swift_beginAccess();
                      uint64_t v126 = v148;
                      sub_10000D830(v125, v148, &qword_100299F50);
                      uint64_t v127 = (uint64_t)v67
                           + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__accountInfo;
                      swift_beginAccess();
                      uint64_t v128 = v146;
                      uint64_t v129 = v146 + *(int *)(v145 + 48);
                      sub_10000D830(v126, v146, &qword_100299F50);
                      uint64_t v130 = v127;
                      uint64_t v84 = v128;
                      sub_10000D830(v130, v129, &qword_100299F50);
                      uint64_t v131 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
                      uint64_t v132 = v128;
                      uint64_t v133 = v147;
                      if (v131(v132, 1, v147) == 1)
                      {
                        sub_10004015C(v126, &qword_100299F50);
                        if (v131(v129, 1, v133) == 1)
                        {
                          sub_10004015C(v84, &qword_100299F50);
LABEL_60:
                          uint64_t v134 = (uint64_t *)(v65
                                           + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
                          swift_beginAccess();
                          uint64_t v135 = *v134;
                          uint64_t v136 = (void *)((char *)v67
                                          + OBJC_IVAR____TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__viewKeys);
                          swift_beginAccess();
                          uint64_t v137 = *v136;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          char v62 = sub_10003DE24(v135, v137);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          goto LABEL_40;
                        }
                        goto LABEL_63;
                      }
                      uint64_t v138 = v133;
                      uint64_t v109 = v143;
                      sub_10000D830(v84, v143, &qword_100299F50);
                      if (v131(v129, 1, v138) == 1)
                      {
                        sub_10004015C(v148, &qword_100299F50);
                        sub_1000D7E78(v109, type metadata accessor for AccountInfo);
LABEL_63:
                        uint64_t v73 = &qword_10029E3E0;
                        uint64_t v74 = v84;
                        goto LABEL_38;
                      }
                      uint64_t v139 = v142;
                      sub_1000D736C(v129, (uint64_t)v142, type metadata accessor for AccountInfo);
                      if (*(_DWORD *)v109 == *v139)
                      {
                        sub_100221DF0();
                        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                        char v140 = sub_100222250();
                        sub_1000D7E78((uint64_t)v139, type metadata accessor for AccountInfo);
                        sub_10004015C(v148, &qword_100299F50);
                        sub_1000D7E78(v109, type metadata accessor for AccountInfo);
                        sub_10004015C(v84, &qword_100299F50);
                        if (v140) {
                          goto LABEL_60;
                        }
LABEL_39:
                        char v62 = 0;
LABEL_40:
                        swift_release();
                        swift_release();
                        return v62 & 1;
                      }
                      uint64_t v113 = type metadata accessor for AccountInfo;
                      sub_1000D7E78((uint64_t)v139, type metadata accessor for AccountInfo);
                      uint64_t v114 = &qword_100299F50;
                      uint64_t v115 = v148;
                      goto LABEL_33;
                    }
                  }
                  else
                  {
                    uint64_t v120 = v105;
                    uint64_t v121 = v149;
                    sub_10000D830((uint64_t)v51, (uint64_t)v149, &qword_10029F000);
                    int v122 = v104(v103, 1, v120);
                    uint64_t v107 = v151;
                    if (v122 != 1)
                    {
                      int v123 = v144;
                      sub_1000D736C(v103, (uint64_t)v144, type metadata accessor for Metrics);
                      if ((*v121 != *v123 || v121[1] != v123[1]) && (sub_100222A30() & 1) == 0
                        || (v121[2] != v123[2] || v121[3] != v123[3]) && (sub_100222A30() & 1) == 0)
                      {
                        sub_1000D7E78((uint64_t)v123, type metadata accessor for Metrics);
                        uint64_t v114 = &qword_10029F000;
                        sub_10004015C(v156, &qword_10029F000);
                        sub_1000D7E78((uint64_t)v121, type metadata accessor for Metrics);
                        uint64_t v74 = (uint64_t)v51;
                        goto LABEL_34;
                      }
                      sub_100221DF0();
                      sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                      char v124 = sub_100222250();
                      sub_1000D7E78((uint64_t)v123, type metadata accessor for Metrics);
                      sub_10004015C(v156, &qword_10029F000);
                      sub_1000D7E78((uint64_t)v121, type metadata accessor for Metrics);
                      sub_10004015C((uint64_t)v51, &qword_10029F000);
                      if ((v124 & 1) == 0) {
                        goto LABEL_39;
                      }
                      goto LABEL_57;
                    }
                    sub_10004015C(v156, &qword_10029F000);
                    sub_1000D7E78((uint64_t)v121, type metadata accessor for Metrics);
                  }
                  uint64_t v73 = &qword_10029E3E8;
                  goto LABEL_13;
                }
              }
              else
              {
                uint64_t v116 = v157;
                sub_10000D830(v96, v157, &qword_10029ECA0);
                if (v98(v97, 1, v99) != 1)
                {
                  uint64_t v118 = v150;
                  sub_1000D736C(v97, v150, type metadata accessor for SignedPeerDynamicInfo);
                  if ((sub_10003FE7C(*(void *)v116, *(void *)(v116 + 8), *(void *)v118, *(void *)(v118 + 8)) & 1) == 0
                    || (sub_10003FE7C(*(void *)(v116 + 16), *(void *)(v116 + 24), *(void *)(v118 + 16), *(void *)(v118 + 24)) & 1) == 0)
                  {
                    sub_1000D7E78(v118, type metadata accessor for SignedPeerDynamicInfo);
                    uint64_t v114 = &qword_10029ECA0;
                    sub_10004015C(v169, &qword_10029ECA0);
                    sub_1000D7E78(v116, type metadata accessor for SignedPeerDynamicInfo);
                    uint64_t v74 = v96;
                    goto LABEL_34;
                  }
                  sub_100221DF0();
                  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                  char v119 = sub_100222250();
                  sub_1000D7E78(v118, type metadata accessor for SignedPeerDynamicInfo);
                  sub_10004015C(v169, &qword_10029ECA0);
                  sub_1000D7E78(v116, type metadata accessor for SignedPeerDynamicInfo);
                  sub_10004015C(v96, &qword_10029ECA0);
                  if ((v119 & 1) == 0) {
                    goto LABEL_39;
                  }
                  goto LABEL_22;
                }
                sub_10004015C(v169, &qword_10029ECA0);
                sub_1000D7E78(v116, type metadata accessor for SignedPeerDynamicInfo);
              }
              uint64_t v73 = &qword_10029E448;
              uint64_t v74 = v96;
              goto LABEL_38;
            }
            sub_10004015C(v172, &qword_100299F18);
            sub_1000D7E78(v109, type metadata accessor for SignedPeerStableInfo);
          }
          uint64_t v73 = &qword_10029E450;
          uint64_t v74 = v84;
          goto LABEL_38;
        }
        swift_retain();
        swift_retain();
        sub_10004015C((uint64_t)v58, &qword_100299F58);
        sub_1000D7E78((uint64_t)v72, type metadata accessor for Peer);
      }
      uint64_t v73 = &qword_10029E458;
LABEL_13:
      uint64_t v74 = (uint64_t)v51;
LABEL_38:
      sub_10004015C(v74, v73);
      goto LABEL_39;
    }
  }
  return v62 & 1;
}

Swift::Int AddCustodianRecoveryKeyRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for AddCustodianRecoveryKeyRequest, &qword_10029A230, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);
}

uint64_t sub_1000AA7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BC920(a1, &qword_100298D90, &qword_100299EC8, a2);
}

uint64_t sub_1000AA81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AddCustodianRecoveryKeyRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000AA834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AddCustodianRecoveryKeyRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000AA84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2B8, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000AA8C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D88, (uint64_t)static AddCustodianRecoveryKeyRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000AA8EC(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029F070, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AA958()
{
  sub_1000D8CA4((unint64_t *)&unk_10029F070, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyRequest);

  return sub_100221F60();
}

void *AddCustodianRecoveryKeyResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static AddCustodianRecoveryKeyResponse.protoMessageName;
}

unint64_t static AddCustodianRecoveryKeyResponse.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1000AA9FC()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static AddCustodianRecoveryKeyResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static AddCustodianRecoveryKeyResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "changes";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "zone_key_hierarchy_records";
  *((void *)v10 + 1) = 26;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t AddCustodianRecoveryKeyResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298D98, (uint64_t)static AddCustodianRecoveryKeyResponse._protobuf_nameMap);
}

uint64_t static AddCustodianRecoveryKeyResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298D98, (uint64_t)static AddCustodianRecoveryKeyResponse._protobuf_nameMap, a1);
}

uint64_t AddCustodianRecoveryKeyResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAC30(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000AAD54);
}

uint64_t sub_1000AAC30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v4;
  uint64_t result = sub_100221E50();
  if (!v5)
  {
    while ((v12 & 1) == 0)
    {
      if (result == 2)
      {
        sub_100221D50();
        sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
        sub_100221F00();
      }
      else if (result == 1)
      {
        a4(a1, v7, a2, a3);
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000AAD54()
{
  return sub_100221F10();
}

uint64_t AddCustodianRecoveryKeyResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AAE44(a1, a2, a3, sub_1000AAF60, (void (*)(void))type metadata accessor for AddCustodianRecoveryKeyResponse);
}

uint64_t sub_1000AAE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(void))
{
  uint64_t result = a4(v5, a1, a2, a3);
  if (!v6)
  {
    if (*(void *)(*(void *)v5 + 16))
    {
      sub_100221D50();
      sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
      sub_100222010();
    }
    a5(0);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_1000AAF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Changes(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AddCustodianRecoveryKeyResponse(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EC90);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Changes);
  sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Changes);
}

uint64_t static AddCustodianRecoveryKeyResponse.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CF4BC(a1, a2, (uint64_t *)type metadata accessor for AddCustodianRecoveryKeyResponse) & 1;
}

Swift::Int AddCustodianRecoveryKeyResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for AddCustodianRecoveryKeyResponse, &qword_10029A238, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);
}

uint64_t sub_1000AB1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AddCustodianRecoveryKeyResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000AB1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AddCustodianRecoveryKeyResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000AB20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2B0, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000AB288@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298D98, (uint64_t)static AddCustodianRecoveryKeyResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000AB2AC(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A7C8, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AB318()
{
  sub_1000D8CA4(&qword_10029A7C8, (void (*)(uint64_t))type metadata accessor for AddCustodianRecoveryKeyResponse);

  return sub_100221F60();
}

void *FetchChangesRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchChangesRequest.protoMessageName;
}

unint64_t static FetchChangesRequest.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1000AB3BC()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static FetchChangesRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static FetchChangesRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "change_token";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "metrics";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "accountInfo";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t FetchChangesRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DA0, (uint64_t)static FetchChangesRequest._protobuf_nameMap);
}

uint64_t static FetchChangesRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DA0, (uint64_t)static FetchChangesRequest._protobuf_nameMap, a1);
}

uint64_t FetchChangesRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000ADE44(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000AB654, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000AB704);
}

uint64_t sub_1000AB654()
{
  return sub_100221F10();
}

uint64_t sub_1000AB704()
{
  return sub_100221F10();
}

uint64_t FetchChangesRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AE0C4(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_1000AB808, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_1000ABA0C, (void (*)(void))type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1000AB808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ChangesRequest = type metadata accessor for FetchChangesRequest(0);
  sub_10000D830(a1 + *(int *)(ChangesRequest + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000ABA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ChangesRequest = type metadata accessor for FetchChangesRequest(0);
  sub_10000D830(a1 + *(int *)(ChangesRequest + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int FetchChangesRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchChangesRequest, &qword_10029A240, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);
}

uint64_t sub_1000ABC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchChangesRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000ABC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchChangesRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000ABC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2A8, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000ABD08@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DA0, (uint64_t)static FetchChangesRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000ABD2C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029EFB0, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ABD98()
{
  sub_1000D8CA4((unint64_t *)&unk_10029EFB0, (void (*)(uint64_t))type metadata accessor for FetchChangesRequest);

  return sub_100221F60();
}

void *FetchChangesResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchChangesResponse.protoMessageName;
}

unint64_t static FetchChangesResponse.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1000ABE3C(uint64_t a1)
{
  return sub_1000B84CC(a1, static FetchChangesResponse._protobuf_nameMap, (uint64_t)"changes", 7);
}

uint64_t FetchChangesResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DA8, (uint64_t)static FetchChangesResponse._protobuf_nameMap);
}

uint64_t static FetchChangesResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DA8, (uint64_t)static FetchChangesResponse._protobuf_nameMap, a1);
}

uint64_t FetchChangesResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000ABEC8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000ABF4C);
}

uint64_t sub_1000ABEC8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v4;
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v5 || (v12 & 1) != 0) {
      break;
    }
    if (result == 1) {
      a4(a1, v7, a2, a3);
    }
  }
  return result;
}

uint64_t sub_1000ABF4C()
{
  return sub_100221F10();
}

uint64_t FetchChangesResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A5E14(a1, a2, a3, type metadata accessor for FetchChangesResponse);
}

uint64_t sub_1000AC028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  v18[3] = a4;
  v18[1] = a3;
  uint64_t v7 = sub_1000046DC((uint64_t *)&unk_10029EC90);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Changes(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a5(0);
  sub_10000D830(a1 + *(int *)(v16 + 20), (uint64_t)v10, (uint64_t *)&unk_10029EC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10004015C((uint64_t)v10, (uint64_t *)&unk_10029EC90);
  }
  sub_1000D736C((uint64_t)v10, (uint64_t)v15, type metadata accessor for Changes);
  sub_1000D8CA4(&qword_10029A628, (void (*)(uint64_t))type metadata accessor for Changes);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v15, type metadata accessor for Changes);
}

Swift::Int FetchChangesResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchChangesResponse, &qword_10029A248, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);
}

uint64_t sub_1000AC280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchChangesResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000AC298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchChangesResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000AC2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E2A0, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000AC32C(uint64_t a1)
{
  return sub_1000CCA24(v1, a1, type metadata accessor for FetchChangesResponse) & 1;
}

uint64_t sub_1000AC364@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DA8, (uint64_t)static FetchChangesResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000AC388(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A7F0, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AC3F4()
{
  sub_1000D8CA4(&qword_10029A7F0, (void (*)(uint64_t))type metadata accessor for FetchChangesResponse);

  return sub_100221F60();
}

void *FetchViableBottlesRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchViableBottlesRequest.protoMessageName;
}

unint64_t static FetchViableBottlesRequest.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1000AC498()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static FetchViableBottlesRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static FetchViableBottlesRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "filter_request";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "metrics";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "accountInfo";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t FetchViableBottlesRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DB0, (uint64_t)static FetchViableBottlesRequest._protobuf_nameMap);
}

uint64_t static FetchViableBottlesRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DB0, (uint64_t)static FetchViableBottlesRequest._protobuf_nameMap, a1);
}

uint64_t FetchViableBottlesRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        sub_1000AC7E4();
        goto LABEL_5;
      }
      if (result == 1)
      {
        sub_1000D8DB4();
        uint64_t v4 = v3;
        sub_100221E80();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_100221E50();
    }
    uint64_t v4 = v3;
    sub_1000AC894();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1000AC7E4()
{
  return sub_100221F10();
}

uint64_t sub_1000AC894()
{
  return sub_100221F10();
}

uint64_t FetchViableBottlesRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*v3 || (sub_1000D8DB4(), uint64_t result = sub_100221F90(), !v4))
  {
    uint64_t result = sub_1000ACA40((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_1000ACC44((uint64_t)v3, a1, a2, a3);
      type metadata accessor for FetchViableBottlesRequest(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000ACA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViableBottlesRequest = type metadata accessor for FetchViableBottlesRequest(0);
  sub_10000D830(a1 + *(int *)(ViableBottlesRequest + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000ACC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ViableBottlesRequest = type metadata accessor for FetchViableBottlesRequest(0);
  sub_10000D830(a1 + *(int *)(ViableBottlesRequest + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int FetchViableBottlesRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchViableBottlesRequest, &qword_10029A258, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);
}

uint64_t sub_1000ACE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 28);
  uint64_t v7 = type metadata accessor for AccountInfo(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1000ACF70()
{
  return FetchViableBottlesRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000ACF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchViableBottlesRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000ACFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E298, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000AD01C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DB0, (uint64_t)static FetchViableBottlesRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000AD040(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029F020, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AD0AC()
{
  sub_1000D8CA4((unint64_t *)&unk_10029F020, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesRequest);

  return sub_100221F60();
}

void *FetchViableBottlesResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchViableBottlesResponse.protoMessageName;
}

unint64_t static FetchViableBottlesResponse.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1000AD150()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static FetchViableBottlesResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static FetchViableBottlesResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229B80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "viable_bottles";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "partial_bottles";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "legacy_records";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "total_escrow_records";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "total_escrow_records_fully_viable";
  *((void *)v16 + 1) = 33;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "total_escrow_records_partially_viable";
  *((void *)v18 + 1) = 37;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 7;
  *(void *)uint64_t v20 = "total_escrow_records_legacy";
  *((void *)v20 + 1) = 27;
  v20[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t FetchViableBottlesResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DB8, (uint64_t)static FetchViableBottlesResponse._protobuf_nameMap);
}

uint64_t static FetchViableBottlesResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DB8, (uint64_t)static FetchViableBottlesResponse._protobuf_nameMap, a1);
}

uint64_t FetchViableBottlesResponse.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          type metadata accessor for EscrowPair(0);
          sub_1000D8CA4(&qword_10029A260, (void (*)(uint64_t))type metadata accessor for EscrowPair);
          goto LABEL_7;
        case 3:
          type metadata accessor for EscrowInformation(0);
          sub_1000D8CA4(&qword_10029A268, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
LABEL_7:
          sub_100221F00();
          break;
        case 4:
        case 5:
        case 6:
        case 7:
          sub_100221EF0();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t FetchViableBottlesResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*v0 + 16)
    || (type metadata accessor for EscrowPair(0),
        sub_1000D8CA4(&qword_10029A260, (void (*)(uint64_t))type metadata accessor for EscrowPair),
        uint64_t result = sub_100222010(),
        !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (type metadata accessor for EscrowPair(0),
          sub_1000D8CA4(&qword_10029A260, (void (*)(uint64_t))type metadata accessor for EscrowPair),
          uint64_t result = sub_100222010(),
          !v1))
    {
      if (!*(void *)(v0[2] + 16)
        || (type metadata accessor for EscrowInformation(0),
            sub_1000D8CA4(&qword_10029A268, (void (*)(uint64_t))type metadata accessor for EscrowInformation),
            uint64_t result = sub_100222010(),
            !v1))
      {
        if (!v0[3] || (uint64_t result = sub_100222000(), !v1))
        {
          if (!v0[4] || (uint64_t result = sub_100222000(), !v1))
          {
            if (!v0[5] || (uint64_t result = sub_100222000(), !v1))
            {
              if (!v0[6] || (uint64_t result = sub_100222000(), !v1))
              {
                type metadata accessor for FetchViableBottlesResponse(0);
                return sub_100221DD0();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

Swift::Int FetchViableBottlesResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchViableBottlesResponse, &qword_10029A270, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);
}

uint64_t sub_1000AD964@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 8) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 16) = &_swiftEmptyArrayStorage;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*sub_1000AD9A8())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_1000AD9CC()
{
  return FetchViableBottlesResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000AD9E4()
{
  return FetchViableBottlesResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000AD9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E290, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000ADA78@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DB8, (uint64_t)static FetchViableBottlesResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000ADA9C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A818, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ADB08()
{
  sub_1000D8CA4(&qword_10029A818, (void (*)(uint64_t))type metadata accessor for FetchViableBottlesResponse);

  return sub_100221F60();
}

void *FetchRecoverableTLKSharesRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchRecoverableTLKSharesRequest.protoMessageName;
}

unint64_t static FetchRecoverableTLKSharesRequest.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_1000ADBAC()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static FetchRecoverableTLKSharesRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static FetchRecoverableTLKSharesRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "peer_id";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "metrics";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "accountInfo";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t FetchRecoverableTLKSharesRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DC0, (uint64_t)static FetchRecoverableTLKSharesRequest._protobuf_nameMap);
}

uint64_t static FetchRecoverableTLKSharesRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DC0, (uint64_t)static FetchRecoverableTLKSharesRequest._protobuf_nameMap, a1);
}

uint64_t FetchRecoverableTLKSharesRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000ADE44(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000ADF10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000ADFC0);
}

uint64_t sub_1000ADE44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = v5;
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v6 || (v14 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        a5(a1, v9, a2, a3);
        break;
      case 2:
        a4(a1, v9, a2, a3);
        break;
      case 1:
        sub_100221ED0();
        break;
    }
  }
  return result;
}

uint64_t sub_1000ADF10()
{
  return sub_100221F10();
}

uint64_t sub_1000ADFC0()
{
  return sub_100221F10();
}

uint64_t FetchRecoverableTLKSharesRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AE0C4(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_1000AE1D0, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_1000AE3D4, (void (*)(void))type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1000AE0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t, uint64_t), void (*a5)(void *, uint64_t, uint64_t, uint64_t), void (*a6)(void))
{
  unint64_t v14 = v6[1];
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = *v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15 || (uint64_t result = sub_100221FE0(), !v7))
  {
    uint64_t result = a4(v6, a1, a2, a3);
    if (!v7)
    {
      a5(v6, a1, a2, a3);
      a6(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000AE1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecoverableTLKSharesRequest = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  sub_10000D830(a1 + *(int *)(RecoverableTLKSharesRequest + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000AE3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecoverableTLKSharesRequest = type metadata accessor for FetchRecoverableTLKSharesRequest(0);
  sub_10000D830(a1 + *(int *)(RecoverableTLKSharesRequest + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int FetchRecoverableTLKSharesRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchRecoverableTLKSharesRequest, &qword_10029A278, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);
}

uint64_t sub_1000AE624@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v7 = type metadata accessor for AccountInfo(0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1000AE700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchRecoverableTLKSharesRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000AE718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchRecoverableTLKSharesRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000AE730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E288, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000AE7AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DC0, (uint64_t)static FetchRecoverableTLKSharesRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000AE7D0(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A830, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AE83C()
{
  sub_1000D8CA4(&qword_10029A830, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesRequest);

  return sub_100221F60();
}

void *FetchRecoverableTLKSharesResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchRecoverableTLKSharesResponse.protoMessageName;
}

unint64_t static FetchRecoverableTLKSharesResponse.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1000AE8E0(uint64_t a1)
{
  return sub_1000B84CC(a1, static FetchRecoverableTLKSharesResponse._protobuf_nameMap, (uint64_t)"views", 5);
}

uint64_t FetchRecoverableTLKSharesResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DC8, (uint64_t)static FetchRecoverableTLKSharesResponse._protobuf_nameMap);
}

uint64_t static FetchRecoverableTLKSharesResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DC8, (uint64_t)static FetchRecoverableTLKSharesResponse._protobuf_nameMap, a1);
}

uint64_t FetchRecoverableTLKSharesResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B0488(a1, a2, a3, (void (*)(void))type metadata accessor for FetchRecoverableTLKSharesResponse.View, &qword_10029A280, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);
}

uint64_t FetchRecoverableTLKSharesResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for FetchRecoverableTLKSharesResponse.View(0),
        sub_1000D8CA4(&qword_10029A280, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View), uint64_t result = sub_100222010(), !v1))
  {
    type metadata accessor for FetchRecoverableTLKSharesResponse(0);
    return sub_100221DD0();
  }
  return result;
}

uint64_t static FetchRecoverableTLKSharesResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000C5D50(a1, a2, sub_10003B65C, type metadata accessor for FetchRecoverableTLKSharesResponse) & 1;
}

Swift::Int FetchRecoverableTLKSharesResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchRecoverableTLKSharesResponse, &qword_10029A288, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);
}

uint64_t sub_1000AEB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchRecoverableTLKSharesResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000AEB2C()
{
  return FetchRecoverableTLKSharesResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000AEB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E280, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000AEBC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DC8, (uint64_t)static FetchRecoverableTLKSharesResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000AEBE4(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A848, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AEC50()
{
  sub_1000D8CA4(&qword_10029A848, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse);

  return sub_100221F60();
}

void *FetchRecoverableTLKSharesResponse.View.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchRecoverableTLKSharesResponse.View.protoMessageName;
}

unint64_t static FetchRecoverableTLKSharesResponse.View.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1000AECF4()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static FetchRecoverableTLKSharesResponse.View._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static FetchRecoverableTLKSharesResponse.View._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "view";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "keys";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "tlk_shares";
  *(void *)(v11 + 8) = 10;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t FetchRecoverableTLKSharesResponse.View._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DD0, (uint64_t)static FetchRecoverableTLKSharesResponse.View._protobuf_nameMap);
}

uint64_t static FetchRecoverableTLKSharesResponse.View._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DD0, (uint64_t)static FetchRecoverableTLKSharesResponse.View._protobuf_nameMap, a1);
}

uint64_t FetchRecoverableTLKSharesResponse.View.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        sub_1000AF07C();
        goto LABEL_5;
      }
      if (result == 1)
      {
        uint64_t v4 = v3;
        sub_100221ED0();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_100221E50();
    }
    sub_100221D50();
    sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
    uint64_t v4 = v3;
    sub_100221F00();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1000AF07C()
{
  return sub_100221F10();
}

uint64_t FetchRecoverableTLKSharesResponse.View.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_100221FE0(), !v4))
  {
    uint64_t result = sub_1000AF270((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      if (*(void *)(v3[2] + 16))
      {
        sub_100221D50();
        sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
        sub_100222010();
      }
      type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000AF270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299648);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewKeysRecords(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecoverableTLKShares = type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
  sub_10000D830(a1 + *(int *)(RecoverableTLKShares + 28), (uint64_t)v8, &qword_100299648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299648);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for ViewKeysRecords);
  sub_1000D8CA4(&qword_10029A5F0, (void (*)(uint64_t))type metadata accessor for ViewKeysRecords);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for ViewKeysRecords);
}

Swift::Int FetchRecoverableTLKSharesResponse.View.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchRecoverableTLKSharesResponse.View, &qword_10029A290, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);
}

uint64_t sub_1000AF4C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = &_swiftEmptyArrayStorage;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for ViewKeysRecords(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_1000AF558()
{
  return FetchRecoverableTLKSharesResponse.View.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000AF570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchRecoverableTLKSharesResponse.View.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000AF588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E278, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000AF604@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DD0, (uint64_t)static FetchRecoverableTLKSharesResponse.View._protobuf_nameMap, a1);
}

uint64_t sub_1000AF628(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A280, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AF694()
{
  sub_1000D8CA4(&qword_10029A280, (void (*)(uint64_t))type metadata accessor for FetchRecoverableTLKSharesResponse.View);

  return sub_100221F60();
}

void *FetchPolicyDocumentsRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchPolicyDocumentsRequest.protoMessageName;
}

unint64_t static FetchPolicyDocumentsRequest.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1000AF738()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static FetchPolicyDocumentsRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static FetchPolicyDocumentsRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "keys";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "metrics";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "accountInfo";
  *(void *)(v11 + 8) = 11;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t FetchPolicyDocumentsRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DD8, (uint64_t)static FetchPolicyDocumentsRequest._protobuf_nameMap);
}

uint64_t static FetchPolicyDocumentsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DD8, (uint64_t)static FetchPolicyDocumentsRequest._protobuf_nameMap, a1);
}

uint64_t FetchPolicyDocumentsRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        sub_1000AFAB8();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for PolicyDocumentKey(0);
        sub_1000D8CA4(&qword_10029A298, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey);
        uint64_t v4 = v3;
        sub_100221F00();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_100221E50();
    }
    uint64_t v4 = v3;
    sub_1000AFB68();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1000AFAB8()
{
  return sub_100221F10();
}

uint64_t sub_1000AFB68()
{
  return sub_100221F10();
}

uint64_t FetchPolicyDocumentsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for PolicyDocumentKey(0),
        sub_1000D8CA4(&qword_10029A298, (void (*)(uint64_t))type metadata accessor for PolicyDocumentKey),
        uint64_t result = sub_100222010(),
        !v4))
  {
    uint64_t result = sub_1000AFD44(v3, a1, a2, a3);
    if (!v4)
    {
      sub_1000AFF48(v3, a1, a2, a3);
      type metadata accessor for FetchPolicyDocumentsRequest(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000AFD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t PolicyDocumentsRequest = type metadata accessor for FetchPolicyDocumentsRequest(0);
  sub_10000D830(a1 + *(int *)(PolicyDocumentsRequest + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000AFF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t PolicyDocumentsRequest = type metadata accessor for FetchPolicyDocumentsRequest(0);
  sub_10000D830(a1 + *(int *)(PolicyDocumentsRequest + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int FetchPolicyDocumentsRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchPolicyDocumentsRequest, &qword_10029A2A0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);
}

uint64_t sub_1000B0194@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000B66A4(a1, (uint64_t)&_swiftEmptyArrayStorage, a2);
}

uint64_t sub_1000B01A0()
{
  return FetchPolicyDocumentsRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B01B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchPolicyDocumentsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B01D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E270, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B024C(void *a1)
{
  return sub_1000C9D8C(v1, a1, (uint64_t)sub_10003D348, type metadata accessor for FetchPolicyDocumentsRequest) & 1;
}

uint64_t sub_1000B0298@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DD8, (uint64_t)static FetchPolicyDocumentsRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000B02BC(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B0328()
{
  sub_1000D8CA4(&qword_10029EDA0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsRequest);

  return sub_100221F60();
}

void *FetchPolicyDocumentsResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static FetchPolicyDocumentsResponse.protoMessageName;
}

unint64_t static FetchPolicyDocumentsResponse.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1000B03CC(uint64_t a1)
{
  return sub_1000B84CC(a1, static FetchPolicyDocumentsResponse._protobuf_nameMap, (uint64_t)"entries", 7);
}

uint64_t FetchPolicyDocumentsResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DE0, (uint64_t)static FetchPolicyDocumentsResponse._protobuf_nameMap);
}

uint64_t static FetchPolicyDocumentsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DE0, (uint64_t)static FetchPolicyDocumentsResponse._protobuf_nameMap, a1);
}

uint64_t FetchPolicyDocumentsResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B0488(a1, a2, a3, (void (*)(void))type metadata accessor for PolicyDocumentMapEntry, &qword_10029A2A8, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry);
}

uint64_t sub_1000B0488(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t result = sub_100221E50();
  if (!v6)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 1)
      {
        a4(0);
        sub_1000D8CA4(a5, a6);
        sub_100221F00();
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t FetchPolicyDocumentsResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for PolicyDocumentMapEntry(0),
        sub_1000D8CA4(&qword_10029A2A8, (void (*)(uint64_t))type metadata accessor for PolicyDocumentMapEntry),
        uint64_t result = sub_100222010(),
        !v1))
  {
    type metadata accessor for FetchPolicyDocumentsResponse(0);
    return sub_100221DD0();
  }
  return result;
}

Swift::Int FetchPolicyDocumentsResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for FetchPolicyDocumentsResponse, &qword_10029A2B0, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);
}

uint64_t sub_1000B06C8@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000B06F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FetchPolicyDocumentsResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000B070C()
{
  return FetchPolicyDocumentsResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000B0724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E268, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B07A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DE0, (uint64_t)static FetchPolicyDocumentsResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000B07C8(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A880, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B0834()
{
  sub_1000D8CA4(&qword_10029A880, (void (*)(uint64_t))type metadata accessor for FetchPolicyDocumentsResponse);

  return sub_100221F60();
}

void *GetRepairActionRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static GetRepairActionRequest.protoMessageName;
}

unint64_t static GetRepairActionRequest.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1000B08D8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static GetRepairActionRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static GetRepairActionRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229B70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "peer_id";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "requires_escrow_check";
  *(void *)(v10 + 8) = 21;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "known_federations";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  unint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)unint64_t v14 = "perform_cleanup";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)uint64_t v16 = "metrics";
  *((void *)v16 + 1) = 7;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "accountInfo";
  *((void *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t GetRepairActionRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DE8, (uint64_t)static GetRepairActionRequest._protobuf_nameMap);
}

uint64_t static GetRepairActionRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DE8, (uint64_t)static GetRepairActionRequest._protobuf_nameMap, a1);
}

uint64_t GetRepairActionRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100221ED0();
          break;
        case 2:
        case 4:
          sub_100221E70();
          break;
        case 3:
          sub_100221EC0();
          break;
        case 5:
          sub_1000B0D28();
          break;
        case 6:
          sub_1000B0DD8();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000B0D28()
{
  return sub_100221F10();
}

uint64_t sub_1000B0DD8()
{
  return sub_100221F10();
}

uint64_t GetRepairActionRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v9 = *(void *)(v5 + 8);
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *(void *)v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (uint64_t result = sub_100221FE0(), !v4))
  {
    if (*(unsigned char *)(v5 + 16) != 1 || (uint64_t result = sub_100221F80(), !v4))
    {
      if (!*(void *)(*(void *)(v5 + 24) + 16) || (uint64_t result = sub_100221FD0(), !v4))
      {
        if (*(unsigned char *)(v5 + 32) != 1 || (uint64_t result = sub_100221F80(), !v4))
        {
          uint64_t result = sub_1000B0FEC(v5, a1, a2, a3);
          if (!v4)
          {
            sub_1000B11F0(v5, a1, a2, a3);
            type metadata accessor for GetRepairActionRequest(0);
            return sub_100221DD0();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000B0FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RepairActionRequest = type metadata accessor for GetRepairActionRequest(0);
  sub_10000D830(a1 + *(int *)(RepairActionRequest + 36), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000B11F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RepairActionRequest = type metadata accessor for GetRepairActionRequest(0);
  sub_10000D830(a1 + *(int *)(RepairActionRequest + 40), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int GetRepairActionRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for GetRepairActionRequest, &qword_10029A2B8, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);
}

uint64_t sub_1000B1440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 32) = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 36);
  uint64_t v5 = type metadata accessor for Metrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 40);
  uint64_t v7 = type metadata accessor for AccountInfo(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1000B1530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000B15A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000B1610()
{
  return GetRepairActionRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B1628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return GetRepairActionRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B1640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E260, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B16BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DE8, (uint64_t)static GetRepairActionRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000B16E0(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A898, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B174C()
{
  sub_1000D8CA4(&qword_10029A898, (void (*)(uint64_t))type metadata accessor for GetRepairActionRequest);

  return sub_100221F60();
}

void *EscrowProxyFederationMoveRecordRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static EscrowProxyFederationMoveRecordRequest.protoMessageName;
}

unint64_t static EscrowProxyFederationMoveRecordRequest.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1000B17F0()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static EscrowProxyFederationMoveRecordRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static EscrowProxyFederationMoveRecordRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229BC0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "escrow_record_label";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "current_federation";
  *(void *)(v10 + 8) = 18;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "intended_federation";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  unint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)unint64_t v14 = "metrics";
  *((void *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t EscrowProxyFederationMoveRecordRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DF0, (uint64_t)static EscrowProxyFederationMoveRecordRequest._protobuf_nameMap);
}

uint64_t static EscrowProxyFederationMoveRecordRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DF0, (uint64_t)static EscrowProxyFederationMoveRecordRequest._protobuf_nameMap, a1);
}

uint64_t EscrowProxyFederationMoveRecordRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          sub_100221ED0();
          break;
        case 4:
          sub_1000B1B60();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000B1B60()
{
  return sub_100221F10();
}

uint64_t EscrowProxyFederationMoveRecordRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = v3;
  unint64_t v9 = v5[1];
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = *v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10 || (uint64_t result = sub_100221FE0(), !v4))
  {
    unint64_t v12 = v5[3];
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v5[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v13 || (uint64_t result = sub_100221FE0(), !v4))
    {
      unint64_t v14 = v5[5];
      uint64_t v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0) {
        uint64_t v15 = v5[4] & 0xFFFFFFFFFFFFLL;
      }
      if (!v15 || (uint64_t result = sub_100221FE0(), !v4))
      {
        uint64_t result = sub_1000B1D3C((uint64_t)v5, a1, a2, a3);
        if (!v4)
        {
          type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
          return sub_100221DD0();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000B1D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 32), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

Swift::Int EscrowProxyFederationMoveRecordRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for EscrowProxyFederationMoveRecordRequest, &qword_10029A2C0, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

uint64_t sub_1000B1F8C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for Metrics(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t (*sub_1000B2028())()
{
  return ResetReason.rawValue.getter;
}

uint64_t sub_1000B204C()
{
  return EscrowProxyFederationMoveRecordRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B2064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowProxyFederationMoveRecordRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B207C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E258, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B20F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DF0, (uint64_t)static EscrowProxyFederationMoveRecordRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000B211C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A8B0, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B2188()
{
  sub_1000D8CA4(&qword_10029A8B0, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);

  return sub_100221F60();
}

void *GetRepairActionResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static GetRepairActionResponse.protoMessageName;
}

unint64_t static GetRepairActionResponse.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1000B2230()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static GetRepairActionResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static GetRepairActionResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_100229BD0;
  unint64_t v4 = v51 + v3;
  unint64_t v5 = v51 + v3 + v1[14];
  *(void *)(v51 + v3) = 1;
  *(void *)unint64_t v5 = "repair_action";
  *(void *)(v5 + 8) = 13;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v51 + v3 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "escrow_record_move_request";
  *(void *)(v9 + 8) = 26;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v51 + v3 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "total_escrow_records";
  *((void *)v11 + 1) = 20;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v51 + v3 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "collectable_escrow_records";
  *((void *)v13 + 1) = 26;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v51 + v3 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "collected_escrow_records";
  *((void *)v15 + 1) = 24;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v51 + v3 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "escrow_record_garbage_collection_enabled";
  *((void *)v17 + 1) = 40;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v51 + v3 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "total_tlk_shares";
  *((void *)v19 + 1) = 16;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v51 + v3 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "collectable_tlk_shares";
  *((void *)v21 + 1) = 22;
  v21[16] = 2;
  v8();
  uint64_t v22 = v51 + v3 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "collected_tlk_shares";
  *(void *)(v22 + 8) = 20;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  uint64_t v23 = (void *)(v51 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)uint64_t v24 = "tlk_share_garbage_collection_enabled";
  *((void *)v24 + 1) = 36;
  v24[16] = 2;
  v8();
  uint64_t v25 = (void *)(v51 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  *uint64_t v25 = 11;
  *(void *)uint64_t v26 = "total_peers";
  *((void *)v26 + 1) = 11;
  v26[16] = 2;
  v8();
  uint64_t v27 = (void *)(v51 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 12;
  *(void *)uint64_t v28 = "trusted_peers";
  *((void *)v28 + 1) = 13;
  v28[16] = 2;
  v8();
  uint64_t v29 = (void *)(v51 + v3 + 12 * v2);
  uint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 13;
  *(void *)uint64_t v30 = "superfluous_peers";
  *((void *)v30 + 1) = 17;
  v30[16] = 2;
  v8();
  uint64_t v31 = (void *)(v51 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  *uint64_t v31 = 14;
  *(void *)uint64_t v32 = "peers_cleanedup";
  *((void *)v32 + 1) = 15;
  v32[16] = 2;
  v8();
  uint64_t v33 = (void *)(v51 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  void *v33 = 15;
  *(void *)uint64_t v34 = "superfluous_peers_cleanup_enabled";
  *((void *)v34 + 1) = 33;
  v34[16] = 2;
  v8();
  uint64_t v35 = (void *)(v51 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  void *v35 = 16;
  *(void *)uint64_t v36 = "duplicate_escrow_records";
  *((void *)v36 + 1) = 24;
  v36[16] = 2;
  v8();
  uint64_t v37 = v51 + v3 + 16 * v2 + v1[14];
  *(void *)(v4 + 16 * v2) = 17;
  *(void *)uint64_t v37 = "unsetHMACpeers";
  *(void *)(v37 + 8) = 14;
  *(unsigned char *)(v37 + 16) = 2;
  v8();
  uint64_t v38 = (void *)(v51 + v3 + 17 * v2);
  uint64_t v39 = (char *)v38 + v1[14];
  *uint64_t v38 = 18;
  *(void *)uint64_t v39 = "updatedHMACpeers";
  *((void *)v39 + 1) = 16;
  v39[16] = 2;
  v8();
  uint64_t v40 = (void *)(v51 + v3 + 18 * v2);
  uint64_t v41 = (char *)v40 + v1[14];
  *uint64_t v40 = 19;
  *(void *)uint64_t v41 = "total_device_state_records";
  *((void *)v41 + 1) = 26;
  v41[16] = 2;
  v8();
  uint64_t v42 = (void *)(v51 + v3 + 19 * v2);
  uint64_t v43 = (char *)v42 + v1[14];
  *uint64_t v42 = 20;
  *(void *)uint64_t v43 = "collectable_device_state_records";
  *((void *)v43 + 1) = 32;
  v43[16] = 2;
  v8();
  uint64_t v44 = (void *)(v51 + v3 + 20 * v2);
  uint64_t v45 = (char *)v44 + v1[14];
  *uint64_t v44 = 21;
  *(void *)uint64_t v45 = "collected_device_state_records";
  *((void *)v45 + 1) = 30;
  v45[16] = 2;
  v8();
  uint64_t v46 = (void *)(v51 + v3 + 21 * v2);
  uint64_t v47 = (char *)v46 + v1[14];
  *uint64_t v46 = 22;
  *(void *)uint64_t v47 = "tlk_share_deletion_failed";
  *((void *)v47 + 1) = 25;
  v47[16] = 2;
  v8();
  uint64_t v48 = (void *)(v51 + v3 + 22 * v2);
  uint64_t v49 = (char *)v48 + v1[14];
  *uint64_t v48 = 23;
  *(void *)uint64_t v49 = "device_state_record_deletion_failed";
  *((void *)v49 + 1) = 35;
  v49[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t GetRepairActionResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298DF8, (uint64_t)static GetRepairActionResponse._protobuf_nameMap);
}

uint64_t static GetRepairActionResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298DF8, (uint64_t)static GetRepairActionResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000B294C(uint64_t a1)
{
  return sub_1000B9EBC(a1, (void (*)(void))type metadata accessor for GetRepairActionResponse._StorageClass, sub_1000B2980, &qword_100299ED0);
}

uint64_t sub_1000B2980()
{
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  uint64_t v2 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed) = 0;
  return v0;
}

uint64_t sub_1000B2AF4()
{
  sub_10004015C(v0+ OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest, (uint64_t *)&unk_10029EFF0);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t GetRepairActionResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for GetRepairActionResponse(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for GetRepairActionResponse._StorageClass(0);
    swift_allocObject();
    uint64_t v3 = swift_retain();
    uint64_t v4 = sub_1000D8278(v3);
    swift_release();
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  swift_retain();
  sub_1000B2C30();
  return swift_release();
}

uint64_t sub_1000B2C30()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1000B2FD0();
          break;
        case 2:
          sub_1000B3060();
          break;
        case 3:
        case 4:
        case 5:
        case 7:
        case 8:
        case 9:
        case 11:
        case 12:
        case 13:
        case 14:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
          sub_1000BAC40();
          break;
        case 6:
        case 10:
        case 15:
        case 22:
        case 23:
          sub_1000B3130();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000B2FD0()
{
  return swift_endAccess();
}

uint64_t sub_1000B3060()
{
  return swift_endAccess();
}

uint64_t sub_1000B3130()
{
  return swift_endAccess();
}

uint64_t GetRepairActionResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095C34(a1, a2, a3, (void (*)(void))type metadata accessor for GetRepairActionResponse, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000B31F4);
}

uint64_t sub_1000B31F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  if (!*(void *)(a1 + 16) || (sub_1001122DC(), uint64_t result = sub_100221F90(), !v4))
  {
    uint64_t result = sub_1000B387C(a1, a2, a3, a4);
    if (!v4)
    {
      uint64_t v10 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
      swift_beginAccess();
      if (*v10) {
        sub_100222000();
      }
      uint64_t v11 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
      swift_beginAccess();
      if (*v11) {
        sub_100222000();
      }
      uint64_t v12 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
      swift_beginAccess();
      if (*v12) {
        sub_100222000();
      }
      uint64_t v13 = (unsigned char *)(a1
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
      swift_beginAccess();
      if (*v13 == 1) {
        sub_100221F80();
      }
      uint64_t v14 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
      swift_beginAccess();
      if (*v14) {
        sub_100222000();
      }
      uint64_t v15 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
      swift_beginAccess();
      if (*v15) {
        sub_100222000();
      }
      uint64_t v16 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
      swift_beginAccess();
      if (*v16) {
        sub_100222000();
      }
      uint64_t v17 = (unsigned char *)(a1
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
      swift_beginAccess();
      if (*v17 == 1) {
        sub_100221F80();
      }
      uint64_t v18 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
      swift_beginAccess();
      if (*v18) {
        sub_100222000();
      }
      uint64_t v19 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
      swift_beginAccess();
      if (*v19) {
        sub_100222000();
      }
      uint64_t v20 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
      swift_beginAccess();
      if (*v20) {
        sub_100222000();
      }
      uint64_t v21 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
      swift_beginAccess();
      if (*v21) {
        sub_100222000();
      }
      uint64_t v22 = (unsigned char *)(a1
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
      swift_beginAccess();
      if (*v22 == 1) {
        sub_100221F80();
      }
      uint64_t v23 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
      swift_beginAccess();
      if (*v23) {
        sub_100222000();
      }
      uint64_t v24 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
      swift_beginAccess();
      if (*v24) {
        sub_100222000();
      }
      uint64_t v25 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
      swift_beginAccess();
      if (*v25) {
        sub_100222000();
      }
      uint64_t v26 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
      swift_beginAccess();
      if (*v26) {
        sub_100222000();
      }
      uint64_t v27 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
      swift_beginAccess();
      if (*v27) {
        sub_100222000();
      }
      uint64_t v28 = (void *)(a1
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
      swift_beginAccess();
      if (*v28) {
        sub_100222000();
      }
      uint64_t v29 = (unsigned char *)(a1
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
      swift_beginAccess();
      if (*v29 == 1) {
        sub_100221F80();
      }
      uint64_t v30 = (unsigned char *)(a1
                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
      uint64_t result = swift_beginAccess();
      if (*v30 == 1) {
        return sub_100221F80();
      }
    }
  }
  return result;
}

uint64_t sub_1000B387C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, (uint64_t *)&unk_10029EFF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EFF0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  sub_1000D8CA4(&qword_10029A8B0, (void (*)(uint64_t))type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
}

uint64_t static GetRepairActionResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for GetRepairActionResponse, sub_1000B3ADC) & 1;
}

uint64_t sub_1000B3ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EscrowProxyFederationMoveRecordRequest(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC(&qword_10029E438);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000046DC((uint64_t *)&unk_10029EFF0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v99 = (void **)((char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v97 - v18;
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v21 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a2 + 24) == 1)
  {
    switch(v21)
    {
      case 1:
        if (v20 != 1) {
          goto LABEL_34;
        }
        goto LABEL_6;
      case 2:
        if (v20 != 2) {
          goto LABEL_34;
        }
        goto LABEL_6;
      case 3:
        if (v20 != 3) {
          goto LABEL_34;
        }
        goto LABEL_6;
      case 4:
        if (v20 != 4) {
          goto LABEL_34;
        }
        goto LABEL_6;
      case 5:
        if (v20 != 5) {
          goto LABEL_34;
        }
        goto LABEL_6;
      default:
        if (!v20) {
          goto LABEL_6;
        }
        goto LABEL_34;
    }
  }
  if (v20 != v21) {
    goto LABEL_34;
  }
LABEL_6:
  uint64_t v97 = v8;
  uint64_t v98 = a2;
  uint64_t v22 = a1;
  uint64_t v23 = a1
      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  sub_10000D830(v23, (uint64_t)v19, (uint64_t *)&unk_10029EFF0);
  uint64_t v24 = v98;
  uint64_t v25 = v98
      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordMoveRequest;
  swift_beginAccess();
  uint64_t v26 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_10000D830((uint64_t)v19, (uint64_t)v12, (uint64_t *)&unk_10029EFF0);
  sub_10000D830(v25, v26, (uint64_t *)&unk_10029EFF0);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v27((uint64_t)v12, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    sub_10004015C((uint64_t)v19, (uint64_t *)&unk_10029EFF0);
    if (v27(v26, 1, v4) == 1)
    {
      sub_10004015C((uint64_t)v12, (uint64_t *)&unk_10029EFF0);
LABEL_13:
      uint64_t v31 = (uint64_t *)(v22
                      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
      swift_beginAccess();
      uint64_t v32 = *v31;
      uint64_t v33 = (void *)(v24
                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalEscrowRecords);
      swift_beginAccess();
      if (v32 == *v33)
      {
        uint64_t v34 = (uint64_t *)(v22
                        + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
        swift_beginAccess();
        uint64_t v35 = *v34;
        uint64_t v36 = (void *)(v24
                       + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableEscrowRecords);
        swift_beginAccess();
        if (v35 == *v36)
        {
          uint64_t v37 = (uint64_t *)(v22
                          + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
          swift_beginAccess();
          uint64_t v38 = *v37;
          uint64_t v39 = (void *)(v24
                         + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedEscrowRecords);
          swift_beginAccess();
          if (v38 == *v39)
          {
            uint64_t v40 = (unsigned __int8 *)(v22
                                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
            swift_beginAccess();
            int v41 = *v40;
            uint64_t v42 = (unsigned __int8 *)(v24
                                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowRecordGarbageCollectionEnabled);
            swift_beginAccess();
            if (v41 == *v42)
            {
              uint64_t v43 = (uint64_t *)(v22
                              + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
              swift_beginAccess();
              uint64_t v44 = *v43;
              uint64_t v45 = (void *)(v24
                             + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalTlkShares);
              swift_beginAccess();
              if (v44 == *v45)
              {
                uint64_t v46 = (uint64_t *)(v22
                                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
                swift_beginAccess();
                uint64_t v47 = *v46;
                uint64_t v48 = (void *)(v24
                               + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableTlkShares);
                swift_beginAccess();
                if (v47 == *v48)
                {
                  uint64_t v49 = (uint64_t *)(v22
                                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
                  swift_beginAccess();
                  uint64_t v50 = *v49;
                  uint64_t v51 = (void *)(v24
                                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedTlkShares);
                  swift_beginAccess();
                  if (v50 == *v51)
                  {
                    uint64_t v52 = (unsigned __int8 *)(v22
                                            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
                    swift_beginAccess();
                    int v53 = *v52;
                    uint64_t v54 = (unsigned __int8 *)(v24
                                            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareGarbageCollectionEnabled);
                    swift_beginAccess();
                    if (v53 == *v54)
                    {
                      uint64_t v55 = (uint64_t *)(v22
                                      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
                      swift_beginAccess();
                      uint64_t v56 = *v55;
                      uint64_t v57 = (void *)(v24
                                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalPeers);
                      swift_beginAccess();
                      if (v56 == *v57)
                      {
                        uint64_t v58 = (uint64_t *)(v22
                                        + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
                        swift_beginAccess();
                        uint64_t v59 = *v58;
                        uint64_t v60 = (void *)(v24
                                       + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__trustedPeers);
                        swift_beginAccess();
                        if (v59 == *v60)
                        {
                          uint64_t v61 = (uint64_t *)(v22
                                          + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
                          swift_beginAccess();
                          uint64_t v62 = *v61;
                          uint64_t v63 = (void *)(v24
                                         + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeers);
                          swift_beginAccess();
                          if (v62 == *v63)
                          {
                            uint64_t v64 = (uint64_t *)(v22
                                            + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
                            swift_beginAccess();
                            uint64_t v65 = *v64;
                            uint64_t v66 = (void *)(v24
                                           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peersCleanedup);
                            swift_beginAccess();
                            if (v65 == *v66)
                            {
                              uint64_t v67 = (unsigned __int8 *)(v22
                                                      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
                              swift_beginAccess();
                              int v68 = *v67;
                              uint64_t v69 = (unsigned __int8 *)(v24
                                                      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__superfluousPeersCleanupEnabled);
                              swift_beginAccess();
                              if (v68 == *v69)
                              {
                                uint64_t v70 = (uint64_t *)(v22
                                                + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
                                swift_beginAccess();
                                uint64_t v71 = *v70;
                                uint64_t v72 = (void *)(v98
                                               + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__duplicateEscrowRecords);
                                swift_beginAccess();
                                if (v71 == *v72)
                                {
                                  uint64_t v73 = (uint64_t *)(v22
                                                  + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
                                  swift_beginAccess();
                                  uint64_t v74 = *v73;
                                  uint64_t v75 = (void *)(v98
                                                 + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__unsetHmacpeers);
                                  swift_beginAccess();
                                  if (v74 == *v75)
                                  {
                                    char v76 = (uint64_t *)(v22
                                                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
                                    swift_beginAccess();
                                    uint64_t v77 = *v76;
                                    uint64_t v78 = (void *)(v98
                                                   + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__updatedHmacpeers);
                                    swift_beginAccess();
                                    if (v77 == *v78)
                                    {
                                      uint64_t v79 = (uint64_t *)(v22
                                                      + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
                                      swift_beginAccess();
                                      uint64_t v80 = *v79;
                                      uint64_t v81 = (void *)(v98
                                                     + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__totalDeviceStateRecords);
                                      swift_beginAccess();
                                      if (v80 == *v81)
                                      {
                                        uint64_t v82 = (uint64_t *)(v22
                                                        + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
                                        swift_beginAccess();
                                        uint64_t v83 = *v82;
                                        uint64_t v84 = (void *)(v98
                                                       + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectableDeviceStateRecords);
                                        swift_beginAccess();
                                        if (v83 == *v84)
                                        {
                                          uint64_t v85 = (uint64_t *)(v22
                                                          + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
                                          swift_beginAccess();
                                          uint64_t v86 = *v85;
                                          int v87 = (void *)(v98
                                                         + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__collectedDeviceStateRecords);
                                          swift_beginAccess();
                                          if (v86 == *v87)
                                          {
                                            uint64_t v88 = (unsigned __int8 *)(v22
                                                                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
                                            swift_beginAccess();
                                            int v89 = *v88;
                                            uint64_t v90 = (unsigned __int8 *)(v98
                                                                    + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__tlkShareDeletionFailed);
                                            swift_beginAccess();
                                            if (v89 == *v90)
                                            {
                                              char v93 = (char *)(v22
                                                           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
                                              swift_beginAccess();
                                              char v94 = *v93;
                                              swift_release();
                                              uint64_t v95 = (char *)(v98
                                                           + OBJC_IVAR____TtCV18TrustedPeersHelper23GetRepairActionResponseP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__deviceStateRecordDeletionFailed);
                                              swift_beginAccess();
                                              char v96 = *v95;
                                              swift_release();
                                              char v91 = v94 ^ v96 ^ 1;
                                              return v91 & 1;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      goto LABEL_33;
    }
    goto LABEL_11;
  }
  uint64_t v28 = v99;
  sub_10000D830((uint64_t)v12, (uint64_t)v99, (uint64_t *)&unk_10029EFF0);
  if (v27(v26, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    sub_10004015C((uint64_t)v19, (uint64_t *)&unk_10029EFF0);
    sub_1000D7E78((uint64_t)v28, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
LABEL_11:
    sub_10004015C((uint64_t)v12, &qword_10029E438);
    goto LABEL_33;
  }
  uint64_t v29 = v97;
  sub_1000D736C(v26, (uint64_t)v97, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  swift_retain();
  swift_retain();
  char v30 = _s18TrustedPeersHelper38EscrowProxyFederationMoveRecordRequestV2eeoiySbAC_ACtFZ_0(v28, v29);
  sub_1000D7E78((uint64_t)v29, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  sub_10004015C((uint64_t)v19, (uint64_t *)&unk_10029EFF0);
  sub_1000D7E78((uint64_t)v28, type metadata accessor for EscrowProxyFederationMoveRecordRequest);
  uint64_t v24 = v98;
  sub_10004015C((uint64_t)v12, (uint64_t *)&unk_10029EFF0);
  if (v30) {
    goto LABEL_13;
  }
LABEL_33:
  swift_release();
  swift_release();
LABEL_34:
  char v91 = 0;
  return v91 & 1;
}

Swift::Int GetRepairActionResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for GetRepairActionResponse, &qword_10029A2C8, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);
}

uint64_t sub_1000B4624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BC920(a1, &qword_100298E00, &qword_100299ED0, a2);
}

uint64_t sub_1000B4648()
{
  return GetRepairActionResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B4660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return GetRepairActionResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B4678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E250, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B46F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298DF8, (uint64_t)static GetRepairActionResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000B4718(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A8C8, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B4784()
{
  sub_1000D8CA4(&qword_10029A8C8, (void (*)(uint64_t))type metadata accessor for GetRepairActionResponse);

  return sub_100221F60();
}

const char *SupportAppView.protoMessageName.unsafeMutableAddressor()
{
  return "SupportAppView";
}

uint64_t static SupportAppView.protoMessageName.getter()
{
  return 0x4174726F70707553;
}

uint64_t sub_1000B4830()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SupportAppView._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SupportAppView._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "name";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "last_report";
  *((void *)v10 + 1) = 11;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "enabled";
  *(void *)(v11 + 8) = 7;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t SupportAppView._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E08, (uint64_t)static SupportAppView._protobuf_nameMap);
}

uint64_t static SupportAppView._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E08, (uint64_t)static SupportAppView._protobuf_nameMap, a1);
}

uint64_t SupportAppView.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_100221E70();
          break;
        case 2:
          sub_1000B4B4C();
          break;
        case 1:
          sub_100221ED0();
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000B4B4C()
{
  return sub_100221F10();
}

uint64_t SupportAppView.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = sub_100221FE0(), !v4))
  {
    uint64_t result = sub_1000B4CF0(v3, a1, a2, a3);
    if (!v4)
    {
      if (*(unsigned char *)(v3 + 16) == 1) {
        sub_100221F80();
      }
      type metadata accessor for SupportAppView(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000B4CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100221DC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SupportAppView(0);
  sub_10000D830(a1 + *(int *)(v14 + 28), (uint64_t)v8, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029ED30);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1000D8CA4(&qword_10029E418, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

Swift::Int SupportAppView.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SupportAppView, &qword_10029A2D0, (void (*)(uint64_t))type metadata accessor for SupportAppView);
}

uint64_t sub_1000B4F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0xE000000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_100221DC0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_1000B4FD0()
{
  return SupportAppView.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B4FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SupportAppView.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B5000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E248, (void (*)(uint64_t))type metadata accessor for SupportAppView);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B507C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E08, (uint64_t)static SupportAppView._protobuf_nameMap, a1);
}

uint64_t sub_1000B50A0(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A2D8, (void (*)(uint64_t))type metadata accessor for SupportAppView);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B510C()
{
  sub_1000D8CA4(&qword_10029A2D8, (void (*)(uint64_t))type metadata accessor for SupportAppView);

  return sub_100221F60();
}

void *SupportAppDevice.protoMessageName.unsafeMutableAddressor()
{
  return &static SupportAppDevice.protoMessageName;
}

unint64_t static SupportAppDevice.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_1000B51B0()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static SupportAppDevice._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static SupportAppDevice._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100229530;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "sos";
  *(void *)(v5 + 8) = 3;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = sub_100222030();
  unint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "octagon";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "escrow";
  *((void *)v11 + 1) = 6;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "serial_number";
  *((void *)v13 + 1) = 13;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "views";
  *((void *)v15 + 1) = 5;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "last_health_report";
  *((void *)v17 + 1) = 18;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "status";
  *((void *)v19 + 1) = 6;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "model_id";
  *((void *)v21 + 1) = 8;
  v21[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t SupportAppDevice._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E10, (uint64_t)static SupportAppDevice._protobuf_nameMap);
}

uint64_t static SupportAppDevice._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E10, (uint64_t)static SupportAppDevice._protobuf_nameMap, a1);
}

uint64_t SupportAppDevice.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_100221E50();
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          uint64_t v12 = v11;
          sub_100221E70();
          goto LABEL_10;
        case 4:
        case 8:
          uint64_t v12 = v11;
          sub_100221ED0();
          goto LABEL_10;
        case 5:
          type metadata accessor for SupportAppView(0);
          sub_1000D8CA4(&qword_10029A2D8, (void (*)(uint64_t))type metadata accessor for SupportAppView);
          uint64_t v12 = v11;
          sub_100221F00();
          goto LABEL_10;
        case 6:
          uint64_t v12 = v11;
          sub_1000B5730(a1, v5, a2, a3, (void (*)(void))type metadata accessor for SupportAppDevice);
          goto LABEL_10;
        case 7:
          sub_1000D8E08();
          uint64_t v12 = v11;
          sub_100221E80();
LABEL_10:
          uint64_t v11 = v12;
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000B5730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_100221F10();
}

uint64_t SupportAppDevice.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  if (*(unsigned char *)v5 != 1 || (uint64_t result = sub_100221F80(), !v4))
  {
    if (*(unsigned char *)(v5 + 1) != 1 || (uint64_t result = sub_100221F80(), !v4))
    {
      if (*(unsigned char *)(v5 + 2) != 1 || (uint64_t result = sub_100221F80(), !v4))
      {
        unint64_t v10 = *(void *)(v5 + 16);
        uint64_t v11 = HIBYTE(v10) & 0xF;
        if ((v10 & 0x2000000000000000) == 0) {
          uint64_t v11 = *(void *)(v5 + 8) & 0xFFFFFFFFFFFFLL;
        }
        if (!v11 || (uint64_t result = sub_100221FE0(), !v4))
        {
          if (!*(void *)(*(void *)(v5 + 24) + 16)
            || (type metadata accessor for SupportAppView(0),
                sub_1000D8CA4(&qword_10029A2D8, (void (*)(uint64_t))type metadata accessor for SupportAppView),
                uint64_t result = sub_100222010(),
                !v4))
          {
            uint64_t result = sub_1000B926C(v5, a1, a2, a3, type metadata accessor for SupportAppDevice, 6);
            if (!v4)
            {
              if (*(void *)(v5 + 32))
              {
                sub_1000D8E08();
                sub_100221F90();
              }
              unint64_t v12 = *(void *)(v5 + 56);
              uint64_t v13 = HIBYTE(v12) & 0xF;
              if ((v12 & 0x2000000000000000) == 0) {
                uint64_t v13 = *(void *)(v5 + 48) & 0xFFFFFFFFFFFFLL;
              }
              if (v13) {
                sub_100221FE0();
              }
              type metadata accessor for SupportAppDevice(0);
              return sub_100221DD0();
            }
          }
        }
      }
    }
  }
  return result;
}

Swift::Int SupportAppDevice.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for SupportAppDevice, &qword_10029A2E8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);
}

uint64_t sub_1000B5A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = 0;
  *(unsigned char *)(a2 + 2) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0xE000000000000000;
  *(void *)(a2 + 24) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_100221DC0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_1000B5B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SupportAppDevice.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000B5B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SupportAppDevice.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B5B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E240, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B5BE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E10, (uint64_t)static SupportAppDevice._protobuf_nameMap, a1);
}

uint64_t sub_1000B5C0C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A2F8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B5C78()
{
  sub_1000D8CA4(&qword_10029A2F8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);

  return sub_100221F60();
}

void *GetSupportAppInfoRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static GetSupportAppInfoRequest.protoMessageName;
}

unint64_t static GetSupportAppInfoRequest.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1000B5D1C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static GetSupportAppInfoRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static GetSupportAppInfoRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "metrics";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "accountInfo";
  *((void *)v10 + 1) = 11;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "page";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t GetSupportAppInfoRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E18, (uint64_t)static GetSupportAppInfoRequest._protobuf_nameMap);
}

uint64_t static GetSupportAppInfoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E18, (uint64_t)static GetSupportAppInfoRequest._protobuf_nameMap, a1);
}

uint64_t GetSupportAppInfoRequest.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_100221EF0();
        break;
      case 2:
        sub_1000B60CC();
        break;
      case 1:
        sub_1000B601C();
        break;
    }
  }
  return result;
}

uint64_t sub_1000B601C()
{
  return sub_100221F10();
}

uint64_t sub_1000B60CC()
{
  return sub_100221F10();
}

uint64_t GetSupportAppInfoRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1000B6248((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    sub_1000B644C((uint64_t)v3, a1, a2, a3);
    if (*v3) {
      sub_100222000();
    }
    type metadata accessor for GetSupportAppInfoRequest(0);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_1000B6248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SupportAppInfoRequest = type metadata accessor for GetSupportAppInfoRequest(0);
  sub_10000D830(a1 + *(int *)(SupportAppInfoRequest + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000B644C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SupportAppInfoRequest = type metadata accessor for GetSupportAppInfoRequest(0);
  sub_10000D830(a1 + *(int *)(SupportAppInfoRequest + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int GetSupportAppInfoRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for GetSupportAppInfoRequest, &qword_10029A2F0, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);
}

uint64_t sub_1000B669C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000B66A4(a1, 0, a2);
}

uint64_t sub_1000B66A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  *a3 = a2;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v5 = (char *)a3 + *(int *)(a1 + 24);
  uint64_t v6 = type metadata accessor for Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (char *)a3 + *(int *)(a1 + 28);
  uint64_t v8 = type metadata accessor for AccountInfo(0);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(v7, 1, 1, v8);
}

uint64_t sub_1000B677C()
{
  return GetSupportAppInfoRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B6794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return GetSupportAppInfoRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B67AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E238, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B6828@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E18, (uint64_t)static GetSupportAppInfoRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000B684C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A900, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B68B8()
{
  sub_1000D8CA4(&qword_10029A900, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoRequest);

  return sub_100221F60();
}

void *GetSupportAppInfoResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static GetSupportAppInfoResponse.protoMessageName;
}

unint64_t static GetSupportAppInfoResponse.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1000B695C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static GetSupportAppInfoResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static GetSupportAppInfoResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229BA0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "devices";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "passwordKeychainItemCount";
  *(void *)(v10 + 8) = 25;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "totalDevices";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "paginationToken";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "more";
  *(void *)(v15 + 8) = 4;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t GetSupportAppInfoResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E20, (uint64_t)static GetSupportAppInfoResponse._protobuf_nameMap);
}

uint64_t static GetSupportAppInfoResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E20, (uint64_t)static GetSupportAppInfoResponse._protobuf_nameMap, a1);
}

uint64_t GetSupportAppInfoResponse.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for SupportAppDevice(0);
          sub_1000D8CA4(&qword_10029A2F8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice);
          uint64_t v4 = v3;
          sub_100221F00();
          goto LABEL_5;
        case 2:
        case 3:
          uint64_t v4 = v3;
          sub_100221EF0();
          goto LABEL_5;
        case 4:
          uint64_t v4 = v3;
          sub_100221ED0();
          goto LABEL_5;
        case 5:
          uint64_t v4 = v3;
          sub_100221E70();
LABEL_5:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t GetSupportAppInfoResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for SupportAppDevice(0),
        sub_1000D8CA4(&qword_10029A2F8, (void (*)(uint64_t))type metadata accessor for SupportAppDevice),
        uint64_t result = sub_100222010(),
        !v1))
  {
    if (!*(void *)(v0 + 8) || (uint64_t result = sub_100222000(), !v1))
    {
      if (!*(void *)(v0 + 16) || (uint64_t result = sub_100222000(), !v1))
      {
        unint64_t v3 = *(void *)(v0 + 32);
        uint64_t v4 = HIBYTE(v3) & 0xF;
        if ((v3 & 0x2000000000000000) == 0) {
          uint64_t v4 = *(void *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
        }
        if (!v4 || (uint64_t result = sub_100221FE0(), !v1))
        {
          if (*(unsigned char *)(v0 + 40) != 1 || (uint64_t result = sub_100221F80(), !v1))
          {
            type metadata accessor for GetSupportAppInfoResponse(0);
            return sub_100221DD0();
          }
        }
      }
    }
  }
  return result;
}

Swift::Int GetSupportAppInfoResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for GetSupportAppInfoResponse, &qword_10029A300, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);
}

uint64_t sub_1000B6F90@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  *(unsigned char *)(a1 + 40) = 0;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000B6FCC()
{
  return GetSupportAppInfoResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B6FE4()
{
  return GetSupportAppInfoResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000B6FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E230, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B7078@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E20, (uint64_t)static GetSupportAppInfoResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000B709C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A918, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B7108()
{
  sub_1000D8CA4(&qword_10029A918, (void (*)(uint64_t))type metadata accessor for GetSupportAppInfoResponse);

  return sub_100221F60();
}

void *ResetAccountCDPContentsRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static ResetAccountCDPContentsRequest.protoMessageName;
}

unint64_t static ResetAccountCDPContentsRequest.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1000B71AC(uint64_t a1)
{
  return sub_1000B71B8(a1, static ResetAccountCDPContentsRequest._protobuf_nameMap);
}

uint64_t sub_1000B71B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100222060();
  sub_100003C64(v3, a2);
  sub_100003CC8(v3, (uint64_t)a2);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v4 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v5 = *(void *)(*(void *)v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100229B80;
  unint64_t v7 = v24 + v6;
  unint64_t v8 = v24 + v6 + v4[14];
  *(void *)(v24 + v6) = 1;
  *(void *)unint64_t v8 = "reset_reason";
  *(void *)(v8 + 8) = 12;
  *(unsigned char *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v10 = sub_100222030();
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  unint64_t v12 = v7 + v5 + v4[14];
  *(void *)(v7 + v5) = 2;
  *(void *)unint64_t v12 = "idmsTargetContext";
  *(void *)(v12 + 8) = 17;
  *(unsigned char *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v7 + 2 * v5);
  uint64_t v14 = (char *)v13 + v4[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "idmsCuttlefishPassword";
  *((void *)v14 + 1) = 22;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v7 + 3 * v5);
  uint64_t v16 = (char *)v15 + v4[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "testingNotifyIdms";
  *((void *)v16 + 1) = 17;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v7 + 4 * v5);
  uint64_t v18 = (char *)v17 + v4[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "accountInfo";
  *((void *)v18 + 1) = 11;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v7 + 5 * v5);
  uint64_t v20 = (char *)v19 + v4[14];
  *uint64_t v19 = 6;
  *(void *)uint64_t v20 = "metrics";
  *((void *)v20 + 1) = 7;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v7 + 6 * v5);
  uint64_t v22 = (char *)v21 + v4[14];
  void *v21 = 7;
  *(void *)uint64_t v22 = "isGuitarfish";
  *((void *)v22 + 1) = 12;
  v22[16] = 2;
  v11();
  return sub_100222040();
}

uint64_t ResetAccountCDPContentsRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E28, (uint64_t)static ResetAccountCDPContentsRequest._protobuf_nameMap);
}

uint64_t static ResetAccountCDPContentsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E28, (uint64_t)static ResetAccountCDPContentsRequest._protobuf_nameMap, a1);
}

uint64_t ResetAccountCDPContentsRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B7534(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000B76D4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000B7784);
}

uint64_t sub_1000B7534(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = v5;
  uint64_t result = sub_100221E50();
  uint64_t v15 = v6;
  if (!v6)
  {
    while ((v14 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1000D8D40();
          uint64_t v16 = v15;
          sub_100221E80();
          goto LABEL_10;
        case 2:
        case 3:
          uint64_t v16 = v15;
          sub_100221ED0();
          goto LABEL_10;
        case 4:
        case 7:
          uint64_t v16 = v15;
          sub_100221E70();
          goto LABEL_10;
        case 5:
          uint64_t v16 = v15;
          a4(a1, v9, a2, a3);
          goto LABEL_10;
        case 6:
          uint64_t v16 = v15;
          a5(a1, v9, a2, a3);
LABEL_10:
          uint64_t v15 = v16;
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000B76D4()
{
  return sub_100221F10();
}

uint64_t sub_1000B7784()
{
  return sub_100221F10();
}

uint64_t ResetAccountCDPContentsRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B7888(a1, a2, a3, sub_1000B7A64, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000B7C68, (void (*)(void))type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1000B7888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a6)(void))
{
  uint64_t v11 = v6;
  if (!*(void *)v11 || (sub_1000D8D40(), uint64_t result = sub_100221F90(), !v7))
  {
    unint64_t v16 = *(void *)(v11 + 24);
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = *(void *)(v11 + 16) & 0xFFFFFFFFFFFFLL;
    }
    if (!v17 || (uint64_t result = sub_100221FE0(), !v7))
    {
      unint64_t v18 = *(void *)(v11 + 40);
      uint64_t v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0) {
        uint64_t v19 = *(void *)(v11 + 32) & 0xFFFFFFFFFFFFLL;
      }
      if (!v19 || (uint64_t result = sub_100221FE0(), !v7))
      {
        if (*(unsigned char *)(v11 + 48) != 1 || (uint64_t result = sub_100221F80(), !v7))
        {
          uint64_t result = a4(v11, a1, a2, a3);
          if (!v7)
          {
            a5(v11, a1, a2, a3);
            if (*(unsigned char *)(v11 + 49) == 1) {
              sub_100221F80();
            }
            a6(0);
            return sub_100221DD0();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000B7A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 40), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

uint64_t sub_1000B7C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ResetAccountCDPContentsRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 44), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

Swift::Int ResetAccountCDPContentsRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for ResetAccountCDPContentsRequest, &qword_10029A308, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);
}

uint64_t sub_1000B7EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0xE000000000000000;
  *(_WORD *)(a2 + 48) = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for AccountInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 44);
  uint64_t v7 = type metadata accessor for Metrics(0);
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1000B7FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000B8018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000B8088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResetAccountCDPContentsRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000B80A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ResetAccountCDPContentsRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B80B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E228, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B8134@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E28, (uint64_t)static ResetAccountCDPContentsRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000B8158(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A930, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B81C4()
{
  sub_1000D8CA4(&qword_10029A930, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsRequest);

  return sub_100221F60();
}

void *ResetAccountCDPContentsResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static ResetAccountCDPContentsResponse.protoMessageName;
}

unint64_t static ResetAccountCDPContentsResponse.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1000B8268(uint64_t a1)
{
  return sub_1000C3144(a1, static ResetAccountCDPContentsResponse._protobuf_nameMap);
}

uint64_t ResetAccountCDPContentsResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E30, (uint64_t)static ResetAccountCDPContentsResponse._protobuf_nameMap);
}

uint64_t static ResetAccountCDPContentsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E30, (uint64_t)static ResetAccountCDPContentsResponse._protobuf_nameMap, a1);
}

Swift::Int ResetAccountCDPContentsResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for ResetAccountCDPContentsResponse, &qword_10029A310, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);
}

uint64_t sub_1000B8304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E220, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B8380@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E30, (uint64_t)static ResetAccountCDPContentsResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000B83A4(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A948, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B8410()
{
  sub_1000D8CA4(&qword_10029A948, (void (*)(uint64_t))type metadata accessor for ResetAccountCDPContentsResponse);

  return sub_100221F60();
}

void *PasscodeGeneration.protoMessageName.unsafeMutableAddressor()
{
  return &static PasscodeGeneration.protoMessageName;
}

unint64_t static PasscodeGeneration.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1000B84B4(uint64_t a1)
{
  return sub_1000B84CC(a1, static PasscodeGeneration._protobuf_nameMap, (uint64_t)"value", 5);
}

uint64_t sub_1000B84CC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100222060();
  sub_100003C64(v7, a2);
  sub_100003CC8(v7, (uint64_t)a2);
  sub_1000046DC(&qword_10029E3F0);
  unint64_t v8 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100229540;
  unint64_t v11 = v10 + v9 + v8[14];
  *(void *)(v10 + v9) = 1;
  *(void *)unint64_t v11 = a3;
  *(void *)(v11 + 8) = a4;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v13 = sub_100222030();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  return sub_100222040();
}

uint64_t PasscodeGeneration._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E38, (uint64_t)static PasscodeGeneration._protobuf_nameMap);
}

uint64_t static PasscodeGeneration._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E38, (uint64_t)static PasscodeGeneration._protobuf_nameMap, a1);
}

uint64_t PasscodeGeneration.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_100221EF0();
    }
  }
  return result;
}

uint64_t PasscodeGeneration.traverse<A>(visitor:)()
{
  if (!*v0 || (uint64_t result = sub_100222000(), !v1))
  {
    type metadata accessor for PasscodeGeneration(0);
    return sub_100221DD0();
  }
  return result;
}

Swift::Int PasscodeGeneration.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for PasscodeGeneration, &qword_10029A318, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);
}

uint64_t sub_1000B87C0@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000B87E4()
{
  return PasscodeGeneration.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000B87FC()
{
  return PasscodeGeneration.traverse<A>(visitor:)();
}

uint64_t sub_1000B8814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E218, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B8890@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E38, (uint64_t)static PasscodeGeneration._protobuf_nameMap, a1);
}

uint64_t sub_1000B88B4(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A960, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B8920()
{
  sub_1000D8CA4(&qword_10029A960, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);

  return sub_100221F60();
}

void *EscrowInformation.protoMessageName.unsafeMutableAddressor()
{
  return &static EscrowInformation.protoMessageName;
}

unint64_t static EscrowInformation.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_1000B89C4()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static EscrowInformation._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static EscrowInformation._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100229BB0;
  unint64_t v4 = v24 + v3;
  unint64_t v5 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 1;
  *(void *)unint64_t v5 = "creation_date";
  *(void *)(v5 + 8) = 13;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  unint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "remaining_attempts";
  *(void *)(v9 + 8) = 18;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  unint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)unint64_t v11 = "escrow_information_metadata";
  *((void *)v11 + 1) = 27;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "label";
  *((void *)v13 + 1) = 5;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 9;
  *(void *)uint64_t v15 = "silent_attempt_allowed";
  *((void *)v15 + 1) = 22;
  v15[16] = 2;
  v8();
  unint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 10;
  *(void *)uint64_t v17 = "record_status";
  *((void *)v17 + 1) = 13;
  v17[16] = 2;
  v8();
  unint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *unint64_t v18 = 11;
  *(void *)uint64_t v19 = "viability_status";
  *((void *)v19 + 1) = 16;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 12;
  *(void *)uint64_t v21 = "federation_id";
  *((void *)v21 + 1) = 13;
  v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 13;
  *(void *)uint64_t v22 = "expected_federation_id";
  *(void *)(v22 + 8) = 22;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  return sub_100222040();
}

uint64_t EscrowInformation._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E40, (uint64_t)static EscrowInformation._protobuf_nameMap);
}

uint64_t static EscrowInformation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E40, (uint64_t)static EscrowInformation._protobuf_nameMap, a1);
}

uint64_t EscrowInformation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_100221E50();
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v12 = v11;
          sub_1000B5730(a1, v5, a2, a3, (void (*)(void))type metadata accessor for EscrowInformation);
          goto LABEL_12;
        case 2:
        case 9:
          uint64_t v12 = v11;
          sub_100221EF0();
          goto LABEL_12;
        case 3:
          uint64_t v12 = v11;
          sub_1000B8F6C();
          goto LABEL_12;
        case 4:
        case 12:
        case 13:
          uint64_t v12 = v11;
          sub_100221ED0();
          goto LABEL_12;
        case 10:
          sub_1000D8E7C();
          goto LABEL_10;
        case 11:
          sub_1000D8ED0();
LABEL_10:
          uint64_t v12 = v11;
          sub_100221E80();
LABEL_12:
          uint64_t v11 = v12;
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000B8F6C()
{
  return sub_100221F10();
}

uint64_t EscrowInformation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1000B926C((uint64_t)v3, a1, a2, a3, type metadata accessor for EscrowInformation, 1);
  if (!v4)
  {
    if (*v3) {
      sub_100222000();
    }
    sub_1000B9478((uint64_t)v3, a1, a2, a3);
    unint64_t v9 = v3[2];
    uint64_t v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v10 = v3[1] & 0xFFFFFFFFFFFFLL;
    }
    if (v10) {
      sub_100221FE0();
    }
    if (v3[3]) {
      sub_100222000();
    }
    if (v3[4])
    {
      sub_1000D8E7C();
      sub_100221F90();
    }
    if (v3[6])
    {
      sub_1000D8ED0();
      sub_100221F90();
    }
    unint64_t v11 = v3[9];
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v3[8] & 0xFFFFFFFFFFFFLL;
    }
    if (v12) {
      sub_100221FE0();
    }
    unint64_t v13 = v3[11];
    uint64_t v14 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0) {
      uint64_t v14 = v3[10] & 0xFFFFFFFFFFFFLL;
    }
    if (v14) {
      sub_100221FE0();
    }
    type metadata accessor for EscrowInformation(0);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_1000B926C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  v19[0] = a6;
  v19[1] = a3;
  v19[3] = a4;
  uint64_t v8 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100221DC0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  unint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a5(0);
  sub_10000D830(a1 + *(int *)(v17 + 48), (uint64_t)v11, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_10004015C((uint64_t)v11, (uint64_t *)&unk_10029ED30);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  sub_1000D8CA4(&qword_10029E418, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1000B9478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029A098);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EscrowInformation(0);
  sub_10000D830(a1 + *(int *)(v14 + 52), (uint64_t)v8, &qword_10029A098);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029A098);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for EscrowInformation.Metadata);
  sub_1000D8CA4(&qword_10029A988, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for EscrowInformation.Metadata);
}

Swift::Int EscrowInformation.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for EscrowInformation, &qword_10029A330, (void (*)(uint64_t))type metadata accessor for EscrowInformation);
}

uint64_t sub_1000B96C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = 0xE000000000000000;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0xE000000000000000;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0xE000000000000000;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_100221DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 52);
  uint64_t v7 = type metadata accessor for EscrowInformation.Metadata(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1000B97C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000B9834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 44);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000B98A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowInformation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000B98BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowInformation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000B98D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E210, (void (*)(uint64_t))type metadata accessor for EscrowInformation);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000B9950@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E40, (uint64_t)static EscrowInformation._protobuf_nameMap, a1);
}

uint64_t sub_1000B9974(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A268, (void (*)(uint64_t))type metadata accessor for EscrowInformation);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B99E0()
{
  sub_1000D8CA4(&qword_10029A268, (void (*)(uint64_t))type metadata accessor for EscrowInformation);

  return sub_100221F60();
}

void *EscrowInformation.Metadata.protoMessageName.unsafeMutableAddressor()
{
  return &static EscrowInformation.Metadata.protoMessageName;
}

unint64_t static EscrowInformation.Metadata.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1000B9A84()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static EscrowInformation.Metadata._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static EscrowInformation.Metadata._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100229BE0;
  unint64_t v4 = v26 + v3;
  unint64_t v5 = v26 + v3 + v1[14];
  *(void *)(v26 + v3) = 1;
  *(void *)unint64_t v5 = "backup_keybag_digest";
  *(void *)(v5 + 8) = 20;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v26 + v3 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "client_metadata";
  *(void *)(v9 + 8) = 15;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v26 + v3 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "secure_backup_uses_multiple_icscs";
  *((void *)v11 + 1) = 33;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v26 + v3 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "bottle_id";
  *((void *)v13 + 1) = 9;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v26 + v3 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "secure_backup_timestamp";
  *((void *)v15 + 1) = 23;
  v15[16] = 2;
  v8();
  unint64_t v16 = (void *)(v26 + v3 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "escrowed_spki";
  *((void *)v17 + 1) = 13;
  v17[16] = 2;
  v8();
  unint64_t v18 = (void *)(v26 + v3 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *unint64_t v18 = 7;
  *(void *)uint64_t v19 = "peer_info";
  *((void *)v19 + 1) = 9;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v26 + v3 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "serial";
  *((void *)v21 + 1) = 6;
  v21[16] = 2;
  v8();
  uint64_t v22 = v26 + v3 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "build";
  *(void *)(v22 + 8) = 5;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  uint64_t v23 = (void *)(v26 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)uint64_t v24 = "passcodeGeneration";
  *((void *)v24 + 1) = 18;
  v24[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t EscrowInformation.Metadata._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E48, (uint64_t)static EscrowInformation.Metadata._protobuf_nameMap);
}

uint64_t static EscrowInformation.Metadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E48, (uint64_t)static EscrowInformation.Metadata._protobuf_nameMap, a1);
}

uint64_t sub_1000B9E88(uint64_t a1)
{
  return sub_1000B9EBC(a1, (void (*)(void))type metadata accessor for EscrowInformation.Metadata._StorageClass, sub_1000B9F10, &qword_100299ED8);
}

uint64_t sub_1000B9EBC(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_1000B9F10()
{
  *(_OWORD *)(v0 + 16) = xmmword_100229520;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  uint64_t v2 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0
            + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs) = 0;
  unint64_t v3 = (void *)(v0
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
  *unint64_t v3 = 0;
  v3[1] = 0xE000000000000000;
  uint64_t v4 = v0
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  uint64_t v5 = sub_100221DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_OWORD *)(v0
            + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki) = xmmword_100229520;
  *(_OWORD *)(v0
            + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo) = xmmword_100229520;
  uint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
  *uint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  uint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  uint64_t v8 = v0
     + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  uint64_t v9 = type metadata accessor for PasscodeGeneration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return v0;
}

uint64_t sub_1000BA090(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000046DC(&qword_10029A0E8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v73 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v69 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000046DC(&qword_10029A0A0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v65 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v72 = xmmword_100229520;
  *(_OWORD *)(v1 + 16) = xmmword_100229520;
  uint64_t v13 = (uint64_t *)(v1 + 16);
  uint64_t v14 = v2
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  uint64_t v64 = v2
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  uint64_t v15 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v66 = (void *)(v2
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  *(void *)(v2
            + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs) = 0;
  unint64_t v16 = (void *)(v2
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
  void *v16 = 0;
  v16[1] = 0xE000000000000000;
  uint64_t v17 = v2
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  uint64_t v67 = v2
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  uint64_t v18 = sub_100221DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (uint64_t *)(v2
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
  long long v20 = v72;
  *(_OWORD *)(v2
            + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki) = v72;
  int v68 = (uint64_t *)(v2
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
  *(_OWORD *)(v2
            + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo) = v20;
  uint64_t v21 = (void *)(v2
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
  uint64_t v70 = (void *)(v2
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
  void *v21 = 0;
  v21[1] = 0xE000000000000000;
  uint64_t v22 = (void *)(v2
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
  uint64_t v71 = (void *)(v2
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
  *uint64_t v22 = 0;
  v22[1] = 0xE000000000000000;
  uint64_t v23 = v2
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  *(void *)&long long v72 = v2
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  uint64_t v24 = type metadata accessor for PasscodeGeneration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  swift_beginAccess();
  uint64_t v25 = *(void *)(a1 + 16);
  unint64_t v26 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v27 = *v13;
  unint64_t v28 = *(void *)(v2 + 24);
  *uint64_t v13 = v25;
  *(void *)(v2 + 24) = v26;
  sub_1000059E8(v25, v26);
  sub_100005A40(v27, v28);
  uint64_t v29 = a1
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v30 = v65;
  sub_10000D830(v29, v65, &qword_10029A0A0);
  uint64_t v31 = v64;
  swift_beginAccess();
  sub_1000D8C00(v30, v31, &qword_10029A0A0);
  swift_endAccess();
  uint64_t v32 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  swift_beginAccess();
  uint64_t v33 = *v32;
  uint64_t v34 = v66;
  swift_beginAccess();
  *uint64_t v34 = v33;
  uint64_t v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
  swift_beginAccess();
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  swift_beginAccess();
  void *v16 = v37;
  v16[1] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a1
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  uint64_t v39 = v69;
  sub_10000D830(v38, v69, (uint64_t *)&unk_10029ED30);
  uint64_t v40 = v67;
  swift_beginAccess();
  sub_1000D8C00(v39, v40, (uint64_t *)&unk_10029ED30);
  swift_endAccess();
  int v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
  swift_beginAccess();
  uint64_t v43 = *v41;
  unint64_t v42 = v41[1];
  swift_beginAccess();
  uint64_t v44 = *v19;
  unint64_t v45 = v19[1];
  *uint64_t v19 = v43;
  v19[1] = v42;
  sub_1000059E8(v43, v42);
  sub_100005A40(v44, v45);
  uint64_t v46 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
  swift_beginAccess();
  uint64_t v48 = *v46;
  unint64_t v47 = v46[1];
  uint64_t v49 = v68;
  swift_beginAccess();
  uint64_t v50 = *v49;
  unint64_t v51 = v49[1];
  *uint64_t v49 = v48;
  v49[1] = v47;
  sub_1000059E8(v48, v47);
  sub_100005A40(v50, v51);
  uint64_t v52 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
  swift_beginAccess();
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  uint64_t v55 = v70;
  swift_beginAccess();
  *uint64_t v55 = v54;
  v55[1] = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
  swift_beginAccess();
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  uint64_t v59 = v71;
  swift_beginAccess();
  *uint64_t v59 = v58;
  v59[1] = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = a1
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  uint64_t v61 = v73;
  sub_10000D830(v60, v73, &qword_10029A0E8);
  swift_release();
  uint64_t v62 = v72;
  swift_beginAccess();
  sub_1000D8C00(v61, v62, &qword_10029A0E8);
  swift_endAccess();
  return v2;
}

uint64_t sub_1000BA6CC()
{
  sub_100005A40(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_10004015C(v0+ OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata, &qword_10029A0A0);
  swift_bridgeObjectRelease();
  sub_10004015C(v0+ OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp, (uint64_t *)&unk_10029ED30);
  sub_100005A40(*(void *)(v0+ OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki), *(void *)(v0+ OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki+ 8));
  sub_100005A40(*(void *)(v0+ OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo), *(void *)(v0+ OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo+ 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004015C(v0+ OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration, &qword_10029A0E8);
  return v0;
}

uint64_t sub_1000BA798()
{
  return sub_1000BA7B0(sub_1000BA6CC);
}

uint64_t sub_1000BA7B0(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  uint64_t v2 = *(unsigned int *)(*(void *)v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v1 + 52);

  return _swift_deallocClassInstance(v1, v2, v3);
}

uint64_t EscrowInformation.Metadata.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095894(a1, a2, a3, type metadata accessor for EscrowInformation.Metadata, (void (*)(void))type metadata accessor for EscrowInformation.Metadata._StorageClass, sub_1000BA090, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000BA870);
}

uint64_t sub_1000BA870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_100221E50();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1000BAAE8(a2, a1, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularBytesField(value:));
          break;
        case 2:
          sub_1000BAB70();
          break;
        case 3:
          sub_1000BAC40();
          break;
        case 4:
          uint64_t v11 = &dispatch thunk of Decoder.decodeSingularStringField(value:);
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          unint64_t v16 = &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID;
          goto LABEL_5;
        case 5:
          sub_1000BACC4();
          break;
        case 6:
          uint64_t v11 = &dispatch thunk of Decoder.decodeSingularBytesField(value:);
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          unint64_t v16 = &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki;
          goto LABEL_5;
        case 7:
          uint64_t v11 = &dispatch thunk of Decoder.decodeSingularBytesField(value:);
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          unint64_t v16 = &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo;
          goto LABEL_5;
        case 8:
          uint64_t v11 = &dispatch thunk of Decoder.decodeSingularStringField(value:);
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          unint64_t v16 = &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial;
          goto LABEL_5;
        case 9:
          uint64_t v11 = &dispatch thunk of Decoder.decodeSingularStringField(value:);
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          unint64_t v16 = &OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build;
LABEL_5:
          sub_1000BAD94(v12, v13, v14, v15, v16, (void (*)(uint64_t, uint64_t, uint64_t))v11);
          break;
        case 10:
          sub_1000BAE20();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000BAAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a2 + 16;
  swift_beginAccess();
  a5(v8, a3, a4);
  return swift_endAccess();
}

uint64_t sub_1000BAB70()
{
  return swift_endAccess();
}

uint64_t sub_1000BAC40()
{
  return swift_endAccess();
}

uint64_t sub_1000BACC4()
{
  return swift_endAccess();
}

uint64_t sub_1000BAD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = a2 + *a5;
  swift_beginAccess();
  a6(v9, a3, a4);
  return swift_endAccess();
}

uint64_t sub_1000BAE20()
{
  return swift_endAccess();
}

uint64_t EscrowInformation.Metadata.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100095C34(a1, a2, a3, (void (*)(void))type metadata accessor for EscrowInformation.Metadata, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000BAF30);
}

uint64_t sub_1000BAF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  switch(v10 >> 62)
  {
    case 1uLL:
      if ((int)v9 != v9 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v9 + 16) != *(void *)(v9 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v10 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      sub_1000059E8(*(void *)(a1 + 16), *(void *)(a1 + 24));
      sub_100221FA0();
      uint64_t result = sub_100005A40(v9, v10);
      if (!v4)
      {
LABEL_8:
        uint64_t result = sub_1000BB390(a1, a2, a3, a4);
        if (!v4)
        {
          uint64_t v12 = (void *)(a1
                         + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
          swift_beginAccess();
          if (*v12) {
            sub_100222000();
          }
          uint64_t v13 = (uint64_t *)(a1
                          + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
          swift_beginAccess();
          uint64_t v14 = *v13;
          unint64_t v15 = v13[1];
          uint64_t v16 = HIBYTE(v15) & 0xF;
          if ((v15 & 0x2000000000000000) == 0) {
            uint64_t v16 = v14 & 0xFFFFFFFFFFFFLL;
          }
          if (v16)
          {
            swift_bridgeObjectRetain();
            sub_100221FE0();
            swift_bridgeObjectRelease();
          }
          sub_1000BB5AC(a1, a2, a3, a4);
          uint64_t v17 = (uint64_t *)(a1
                          + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
          swift_beginAccess();
          uint64_t v18 = *v17;
          unint64_t v19 = v17[1];
          switch(v19 >> 62)
          {
            case 1uLL:
              uint64_t v20 = (int)v18;
              uint64_t v21 = v18 >> 32;
              goto LABEL_21;
            case 2uLL:
              uint64_t v20 = *(void *)(v18 + 16);
              uint64_t v21 = *(void *)(v18 + 24);
LABEL_21:
              if (v20 != v21) {
                goto LABEL_22;
              }
              goto LABEL_23;
            case 3uLL:
              goto LABEL_23;
            default:
              if ((v19 & 0xFF000000000000) == 0) {
                goto LABEL_23;
              }
LABEL_22:
              sub_1000059E8(v18, v19);
              sub_100221FA0();
              sub_100005A40(v18, v19);
LABEL_23:
              uint64_t v22 = (uint64_t *)(a1
                              + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
              swift_beginAccess();
              uint64_t v23 = *v22;
              unint64_t v24 = v22[1];
              switch(v24 >> 62)
              {
                case 1uLL:
                  uint64_t v25 = (int)v23;
                  uint64_t v26 = v23 >> 32;
                  goto LABEL_28;
                case 2uLL:
                  uint64_t v25 = *(void *)(v23 + 16);
                  uint64_t v26 = *(void *)(v23 + 24);
LABEL_28:
                  if (v25 != v26) {
                    goto LABEL_29;
                  }
                  goto LABEL_30;
                case 3uLL:
                  goto LABEL_30;
                default:
                  if ((v24 & 0xFF000000000000) == 0) {
                    goto LABEL_30;
                  }
LABEL_29:
                  sub_1000059E8(v23, v24);
                  sub_100221FA0();
                  sub_100005A40(v23, v24);
LABEL_30:
                  uint64_t v27 = (uint64_t *)(a1
                                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
                  swift_beginAccess();
                  uint64_t v28 = *v27;
                  unint64_t v29 = v27[1];
                  uint64_t v30 = HIBYTE(v29) & 0xF;
                  if ((v29 & 0x2000000000000000) == 0) {
                    uint64_t v30 = v28 & 0xFFFFFFFFFFFFLL;
                  }
                  if (v30)
                  {
                    swift_bridgeObjectRetain();
                    sub_100221FE0();
                    swift_bridgeObjectRelease();
                  }
                  uint64_t v31 = (uint64_t *)(a1
                                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
                  swift_beginAccess();
                  uint64_t v32 = *v31;
                  unint64_t v33 = v31[1];
                  uint64_t v34 = HIBYTE(v33) & 0xF;
                  if ((v33 & 0x2000000000000000) == 0) {
                    uint64_t v34 = v32 & 0xFFFFFFFFFFFFLL;
                  }
                  if (v34)
                  {
                    swift_bridgeObjectRetain();
                    sub_100221FE0();
                    swift_bridgeObjectRelease();
                  }
                  uint64_t result = sub_1000BB7C8(a1, a2, a3, a4);
                  break;
              }
              break;
          }
        }
      }
      return result;
  }
}

uint64_t sub_1000BB390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029A0A0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_10029A0A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029A0A0);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  sub_1000D8CA4(&qword_10029A9A0, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

uint64_t sub_1000BB5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100221DC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029ED30);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1000D8CA4(&qword_10029E418, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1000BB7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[5] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029A0E8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PasscodeGeneration(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  sub_10000D830(v14, (uint64_t)v8, &qword_10029A0E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029A0E8);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for PasscodeGeneration);
  sub_1000D8CA4(&qword_10029A960, (void (*)(uint64_t))type metadata accessor for PasscodeGeneration);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for PasscodeGeneration);
}

uint64_t static EscrowInformation.Metadata.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for EscrowInformation.Metadata, (uint64_t (*)(uint64_t, uint64_t))sub_1000BBA28) & 1;
}

BOOL sub_1000BBA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PasscodeGeneration(0);
  uint64_t v116 = *(void *)(v4 - 8);
  uint64_t v117 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v113 = (void **)((char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = sub_1000046DC(&qword_10029E420);
  __chkstk_darwin(v115, v7);
  uint64_t v118 = (uint64_t)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000046DC(&qword_10029A0E8);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v114 = (void **)((char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11, v13);
  uint64_t v119 = (uint64_t)&v113 - v14;
  uint64_t v123 = sub_100221DC0();
  uint64_t v125 = *(void *)(v123 - 8);
  __chkstk_darwin(v123, v15);
  uint64_t v120 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000046DC(&qword_100299638);
  __chkstk_darwin(v122, v17);
  uint64_t v126 = (uint64_t)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v121 = (uint64_t)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v124 = (uint64_t)&v113 - v24;
  uint64_t v25 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  uint64_t v130 = *(void *)(v25 - 8);
  uint64_t v131 = v25;
  __chkstk_darwin(v25, v26);
  uint64_t v127 = (void **)((char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v129 = sub_1000046DC(&qword_10029E428);
  __chkstk_darwin(v129, v28);
  uint64_t v30 = (char *)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_10029A0A0);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v128 = (void **)((char *)&v113 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v33, v35);
  uint64_t v37 = (char *)&v113 - v36;
  swift_beginAccess();
  uint64_t v39 = *(void *)(a1 + 16);
  unint64_t v38 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v40 = *(void *)(a2 + 16);
  unint64_t v41 = *(void *)(a2 + 24);
  swift_retain();
  uint64_t v42 = a2;
  swift_retain();
  sub_1000059E8(v39, v38);
  sub_1000059E8(v40, v41);
  LOBYTE(a2) = sub_10003FE7C(v39, v38, v40, v41);
  sub_100005A40(v40, v41);
  sub_100005A40(v39, v38);
  if ((a2 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v43 = a1
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  sub_10000D830(v43, (uint64_t)v37, &qword_10029A0A0);
  uint64_t v44 = v42;
  uint64_t v45 = v42
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__clientMetadata;
  swift_beginAccess();
  uint64_t v46 = (uint64_t)&v30[*(int *)(v129 + 48)];
  sub_10000D830((uint64_t)v37, (uint64_t)v30, &qword_10029A0A0);
  sub_10000D830(v45, v46, &qword_10029A0A0);
  uint64_t v47 = v131;
  uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
  uint64_t v49 = a1;
  if (v48((uint64_t)v30, 1, v131) == 1)
  {
    sub_10004015C((uint64_t)v37, &qword_10029A0A0);
    if (v48(v46, 1, v47) == 1)
    {
      sub_10004015C((uint64_t)v30, &qword_10029A0A0);
      goto LABEL_11;
    }
LABEL_8:
    uint64_t v53 = &qword_10029E428;
    uint64_t v54 = (uint64_t)v30;
LABEL_9:
    sub_10004015C(v54, v53);
    goto LABEL_34;
  }
  uint64_t v50 = v44;
  uint64_t v51 = (uint64_t)v37;
  uint64_t v52 = v128;
  sub_10000D830((uint64_t)v30, (uint64_t)v128, &qword_10029A0A0);
  if (v48(v46, 1, v47) == 1)
  {
    sub_10004015C(v51, &qword_10029A0A0);
    sub_1000D7E78((uint64_t)v52, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
    goto LABEL_8;
  }
  uint64_t v55 = v127;
  sub_1000D736C(v46, (uint64_t)v127, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  uint64_t v56 = (uint64_t)v52;
  char v57 = _s18TrustedPeersHelper17EscrowInformationV8MetadataV06ClientF0V2eeoiySbAG_AGtFZ_0(v52, v55);
  sub_1000D7E78((uint64_t)v55, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  sub_10004015C(v51, &qword_10029A0A0);
  sub_1000D7E78(v56, type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
  sub_10004015C((uint64_t)v30, &qword_10029A0A0);
  uint64_t v44 = v50;
  uint64_t v49 = a1;
  if ((v57 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_11:
  uint64_t v58 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  swift_beginAccess();
  uint64_t v59 = *v58;
  uint64_t v60 = (void *)(v44
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupUsesMultipleIcscs);
  swift_beginAccess();
  if (v59 != *v60) {
    goto LABEL_34;
  }
  uint64_t v61 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
  swift_beginAccess();
  uint64_t v62 = *v61;
  uint64_t v63 = v61[1];
  uint64_t v64 = (void *)(v44
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__bottleID);
  swift_beginAccess();
  if ((v62 != *v64 || v63 != v64[1]) && (sub_100222A30() & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v65 = v49
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  uint64_t v66 = v124;
  sub_10000D830(v65, v124, (uint64_t *)&unk_10029ED30);
  uint64_t v67 = v44
      + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__secureBackupTimestamp;
  swift_beginAccess();
  uint64_t v68 = v126;
  uint64_t v69 = v126 + *(int *)(v122 + 48);
  sub_10000D830(v66, v126, (uint64_t *)&unk_10029ED30);
  sub_10000D830(v67, v69, (uint64_t *)&unk_10029ED30);
  uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  uint64_t v71 = v123;
  if (v70(v68, 1, v123) != 1)
  {
    uint64_t v72 = v121;
    sub_10000D830(v68, v121, (uint64_t *)&unk_10029ED30);
    if (v70(v69, 1, v71) != 1)
    {
      uint64_t v73 = v72;
      uint64_t v74 = v125;
      uint64_t v75 = v120;
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 32))(v120, v69, v71);
      sub_1000D8CA4(&qword_100299640, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
      char v76 = sub_100222250();
      uint64_t v77 = *(void (**)(char *, uint64_t))(v74 + 8);
      v77(v75, v71);
      sub_10004015C(v124, (uint64_t *)&unk_10029ED30);
      v77((char *)v73, v71);
      sub_10004015C(v68, (uint64_t *)&unk_10029ED30);
      if (v76) {
        goto LABEL_22;
      }
LABEL_34:
      swift_release();
      swift_release();
      return 0;
    }
    sub_10004015C(v66, (uint64_t *)&unk_10029ED30);
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v72, v71);
    goto LABEL_20;
  }
  sub_10004015C(v66, (uint64_t *)&unk_10029ED30);
  if (v70(v69, 1, v71) != 1)
  {
LABEL_20:
    uint64_t v53 = &qword_100299638;
    uint64_t v54 = v126;
    goto LABEL_9;
  }
  sub_10004015C(v126, (uint64_t *)&unk_10029ED30);
LABEL_22:
  uint64_t v78 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
  swift_beginAccess();
  uint64_t v80 = *v78;
  unint64_t v79 = v78[1];
  uint64_t v81 = (uint64_t *)(v44
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__escrowedSpki);
  swift_beginAccess();
  uint64_t v83 = *v81;
  unint64_t v82 = v81[1];
  sub_1000059E8(v80, v79);
  sub_1000059E8(v83, v82);
  char v84 = sub_10003FE7C(v80, v79, v83, v82);
  sub_100005A40(v83, v82);
  sub_100005A40(v80, v79);
  if ((v84 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v85 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
  swift_beginAccess();
  uint64_t v87 = *v85;
  unint64_t v86 = v85[1];
  uint64_t v88 = (uint64_t *)(v44
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__peerInfo);
  swift_beginAccess();
  uint64_t v90 = *v88;
  unint64_t v89 = v88[1];
  sub_1000059E8(v87, v86);
  sub_1000059E8(v90, v89);
  char v91 = sub_10003FE7C(v87, v86, v90, v89);
  sub_100005A40(v90, v89);
  sub_100005A40(v87, v86);
  if ((v91 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v92 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
  swift_beginAccess();
  uint64_t v93 = *v92;
  uint64_t v94 = v92[1];
  uint64_t v95 = (void *)(v44
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__serial);
  swift_beginAccess();
  if ((v93 != *v95 || v94 != v95[1]) && (sub_100222A30() & 1) == 0) {
    goto LABEL_34;
  }
  char v96 = (uint64_t *)(v49
                  + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
  swift_beginAccess();
  uint64_t v97 = *v96;
  uint64_t v98 = v96[1];
  uint64_t v99 = (void *)(v44
                 + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__build);
  swift_beginAccess();
  if ((v97 != *v99 || v98 != v99[1]) && (sub_100222A30() & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v100 = v49
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  uint64_t v101 = v119;
  sub_10000D830(v100, v119, &qword_10029A0E8);
  uint64_t v102 = v44
       + OBJC_IVAR____TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass__passcodeGeneration;
  swift_beginAccess();
  uint64_t v103 = v118;
  uint64_t v104 = v118 + *(int *)(v115 + 48);
  sub_10000D830(v101, v118, &qword_10029A0E8);
  sub_10000D830(v102, v104, &qword_10029A0E8);
  uint64_t v105 = v117;
  int v106 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
  if (v106(v103, 1, v117) == 1)
  {
    swift_release();
    swift_release();
    sub_10004015C(v101, &qword_10029A0E8);
    if (v106(v104, 1, v105) == 1)
    {
      sub_10004015C(v103, &qword_10029A0E8);
      return 1;
    }
    goto LABEL_38;
  }
  uint64_t v108 = v114;
  sub_10000D830(v103, (uint64_t)v114, &qword_10029A0E8);
  if (v106(v104, 1, v105) == 1)
  {
    swift_release();
    swift_release();
    sub_10004015C(v119, &qword_10029A0E8);
    sub_1000D7E78((uint64_t)v108, type metadata accessor for PasscodeGeneration);
LABEL_38:
    uint64_t v109 = &qword_10029E420;
    uint64_t v110 = v103;
LABEL_39:
    sub_10004015C(v110, v109);
    return 0;
  }
  uint64_t v111 = v113;
  sub_1000D736C(v104, (uint64_t)v113, type metadata accessor for PasscodeGeneration);
  if (*v108 != *v111)
  {
    swift_release();
    swift_release();
    sub_1000D7E78((uint64_t)v111, type metadata accessor for PasscodeGeneration);
    sub_10004015C(v119, &qword_10029A0E8);
    sub_1000D7E78((uint64_t)v108, type metadata accessor for PasscodeGeneration);
    uint64_t v110 = v103;
    uint64_t v109 = &qword_10029A0E8;
    goto LABEL_39;
  }
  sub_100221DF0();
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v112 = sub_100222250();
  swift_release();
  swift_release();
  sub_1000D7E78((uint64_t)v111, type metadata accessor for PasscodeGeneration);
  sub_10004015C(v119, &qword_10029A0E8);
  sub_1000D7E78((uint64_t)v108, type metadata accessor for PasscodeGeneration);
  sub_10004015C(v103, &qword_10029A0E8);
  return (v112 & 1) != 0;
}

Swift::Int EscrowInformation.Metadata.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for EscrowInformation.Metadata, &qword_10029A338, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);
}

uint64_t sub_1000BC8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BC920(a1, &qword_100298E50, &qword_100299ED8, a2);
}

uint64_t sub_1000BC920@<X0>(uint64_t a1@<X0>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v8 = *(int *)(a1 + 20);
  if (*a2 != -1) {
    swift_once();
  }
  *(void *)(a4 + v8) = *a3;

  return swift_retain();
}

uint64_t sub_1000BC99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowInformation.Metadata.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000BC9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowInformation.Metadata.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000BC9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E208, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000BCA48@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E48, (uint64_t)static EscrowInformation.Metadata._protobuf_nameMap, a1);
}

uint64_t sub_1000BCA6C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A988, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BCAD8()
{
  sub_1000D8CA4(&qword_10029A988, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata);

  return sub_100221F60();
}

void sub_1000BCB54()
{
  v0._countAndFlagsBits = 0x4D746E65696C432ELL;
  v0._object = (void *)0xEF61746164617465;
  sub_100222310(v0);
  static EscrowInformation.Metadata.ClientMetadata.protoMessageName = 0xD00000000000001ALL;
  unk_1002A08D0 = 0x8000000100241B00;
}

uint64_t *EscrowInformation.Metadata.ClientMetadata.protoMessageName.unsafeMutableAddressor()
{
  if (qword_100298E58 != -1) {
    swift_once();
  }
  return &static EscrowInformation.Metadata.ClientMetadata.protoMessageName;
}

uint64_t static EscrowInformation.Metadata.ClientMetadata.protoMessageName.getter()
{
  if (qword_100298E58 != -1) {
    swift_once();
  }
  uint64_t v0 = static EscrowInformation.Metadata.ClientMetadata.protoMessageName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1000BCC80()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static EscrowInformation.Metadata.ClientMetadata._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static EscrowInformation.Metadata.ClientMetadata._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100229BF0;
  unint64_t v4 = v30 + v3;
  unint64_t v5 = v30 + v3 + v1[14];
  *(void *)(v30 + v3) = 1;
  *(void *)unint64_t v5 = "secure_backup_metadata_timestamp";
  *(void *)(v5 + 8) = 32;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = sub_100222030();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "secure_backup_numeric_passphrase_length";
  *(void *)(v9 + 8) = 39;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "secure_backup_uses_complex_passphrase";
  *((void *)v11 + 1) = 37;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "secure_backup_uses_numeric_passphrase";
  *((void *)v13 + 1) = 37;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "device_color";
  *((void *)v15 + 1) = 12;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "device_enclosure_color";
  *((void *)v17 + 1) = 22;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "device_mid";
  *((void *)v19 + 1) = 10;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "device_model";
  *((void *)v21 + 1) = 12;
  v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "device_model_class";
  *(void *)(v22 + 8) = 18;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  uint64_t v23 = (void *)(v4 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)uint64_t v24 = "device_model_version";
  *((void *)v24 + 1) = 20;
  v24[16] = 2;
  v8();
  uint64_t v25 = (void *)(v4 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  *uint64_t v25 = 11;
  *(void *)uint64_t v26 = "device_name";
  *((void *)v26 + 1) = 11;
  v26[16] = 2;
  v8();
  uint64_t v27 = (void *)(v4 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  void *v27 = 12;
  *(void *)uint64_t v28 = "device_platform";
  *((void *)v28 + 1) = 15;
  v28[16] = 2;
  v8();
  return sub_100222040();
}

uint64_t EscrowInformation.Metadata.ClientMetadata._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E60, (uint64_t)static EscrowInformation.Metadata.ClientMetadata._protobuf_nameMap);
}

uint64_t static EscrowInformation.Metadata.ClientMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E60, (uint64_t)static EscrowInformation.Metadata.ClientMetadata._protobuf_nameMap, a1);
}

uint64_t EscrowInformation.Metadata.ClientMetadata.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1000BD284();
          break;
        case 2:
        case 3:
        case 4:
        case 12:
          sub_100221EF0();
          break;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
          sub_100221ED0();
          break;
        default:
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t sub_1000BD284()
{
  return sub_100221F10();
}

uint64_t EscrowInformation.Metadata.ClientMetadata.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1000BD5E4((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3) {
      sub_100222000();
    }
    if (v3[1]) {
      sub_100222000();
    }
    if (v3[2]) {
      sub_100222000();
    }
    unint64_t v6 = v3[4];
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v3[3] & 0xFFFFFFFFFFFFLL;
    }
    if (v7) {
      sub_100221FE0();
    }
    unint64_t v8 = v3[6];
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = v3[5] & 0xFFFFFFFFFFFFLL;
    }
    if (v9) {
      sub_100221FE0();
    }
    unint64_t v10 = v3[8];
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v3[7] & 0xFFFFFFFFFFFFLL;
    }
    if (v11) {
      sub_100221FE0();
    }
    unint64_t v12 = v3[10];
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v3[9] & 0xFFFFFFFFFFFFLL;
    }
    if (v13) {
      sub_100221FE0();
    }
    unint64_t v14 = v3[12];
    uint64_t v15 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      uint64_t v15 = v3[11] & 0xFFFFFFFFFFFFLL;
    }
    if (v15) {
      sub_100221FE0();
    }
    unint64_t v16 = v3[14];
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = v3[13] & 0xFFFFFFFFFFFFLL;
    }
    if (v17) {
      sub_100221FE0();
    }
    unint64_t v18 = v3[16];
    uint64_t v19 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v19 = v3[15] & 0xFFFFFFFFFFFFLL;
    }
    if (v19) {
      sub_100221FE0();
    }
    if (v3[17]) {
      sub_100222000();
    }
    type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_1000BD5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029ED30);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100221DC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EscrowInformation.Metadata.ClientMetadata(0);
  sub_10000D830(a1 + *(int *)(v14 + 64), (uint64_t)v8, (uint64_t *)&unk_10029ED30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029ED30);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1000D8CA4(&qword_10029E418, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

Swift::Int EscrowInformation.Metadata.ClientMetadata.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for EscrowInformation.Metadata.ClientMetadata, &qword_10029A340, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);
}

uint64_t sub_1000BD834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0xE000000000000000;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0xE000000000000000;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0xE000000000000000;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0xE000000000000000;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0xE000000000000000;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0xE000000000000000;
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = 0xE000000000000000;
  *(void *)(a2 + 136) = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = a2 + *(int *)(a1 + 64);
  uint64_t v5 = sub_100221DC0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_1000BD8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 60);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000BD950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 60);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000BD9C0()
{
  return EscrowInformation.Metadata.ClientMetadata.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000BD9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EscrowInformation.Metadata.ClientMetadata.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000BD9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E200, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000BDA6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E60, (uint64_t)static EscrowInformation.Metadata.ClientMetadata._protobuf_nameMap, a1);
}

uint64_t sub_1000BDA90(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A9A0, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BDAFC()
{
  sub_1000D8CA4(&qword_10029A9A0, (void (*)(uint64_t))type metadata accessor for EscrowInformation.Metadata.ClientMetadata);

  return sub_100221F60();
}

const char *PCSService.protoMessageName.unsafeMutableAddressor()
{
  return "PCSService";
}

uint64_t static PCSService.protoMessageName.getter()
{
  return 0x6976726553534350;
}

uint64_t sub_1000BDBA0()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static PCSService._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static PCSService._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "service_identifier";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "public_key";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "zone";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t PCSService._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E68, (uint64_t)static PCSService._protobuf_nameMap);
}

uint64_t static PCSService._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E68, (uint64_t)static PCSService._protobuf_nameMap, a1);
}

uint64_t PCSService.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_100221ED0();
          break;
        case 2:
          sub_100221E90();
          break;
        case 1:
          sub_100221EA0();
          break;
      }
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t PCSService.traverse<A>(visitor:)()
{
  if (!*(_DWORD *)v0 || (uint64_t result = sub_100221FB0(), !v1))
  {
    uint64_t v3 = *(void *)(v0 + 8);
    unint64_t v4 = *(void *)(v0 + 16);
    switch(v4 >> 62)
    {
      case 1uLL:
        if ((int)v3 != v3 >> 32) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 2uLL:
        if (*(void *)(v3 + 16) != *(void *)(v3 + 24)) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 3uLL:
        goto LABEL_10;
      default:
        if ((v4 & 0xFF000000000000) == 0) {
          goto LABEL_10;
        }
LABEL_9:
        uint64_t result = sub_100221FA0();
        if (!v1)
        {
LABEL_10:
          unint64_t v5 = *(void *)(v0 + 32);
          uint64_t v6 = HIBYTE(v5) & 0xF;
          if ((v5 & 0x2000000000000000) == 0) {
            uint64_t v6 = *(void *)(v0 + 24) & 0xFFFFFFFFFFFFLL;
          }
          if (!v6 || (uint64_t result = sub_100221FE0(), !v1))
          {
            type metadata accessor for PCSService(0);
            uint64_t result = sub_100221DD0();
          }
        }
        break;
    }
  }
  return result;
}

Swift::Int PCSService.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for PCSService, &qword_10029A348, (void (*)(uint64_t))type metadata accessor for PCSService);
}

uint64_t sub_1000BE058@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = xmmword_100229520;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xE000000000000000;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000BE090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000BE100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000BE170()
{
  return PCSService.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000BE188()
{
  return PCSService.traverse<A>(visitor:)();
}

uint64_t sub_1000BE1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1F8, (void (*)(uint64_t))type metadata accessor for PCSService);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000BE21C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E68, (uint64_t)static PCSService._protobuf_nameMap, a1);
}

uint64_t sub_1000BE240(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BE2AC()
{
  sub_1000D8CA4(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService);

  return sub_100221F60();
}

void *DirectPCSIdentityFetchRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static DirectPCSIdentityFetchRequest.protoMessageName;
}

unint64_t static DirectPCSIdentityFetchRequest.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1000BE350(uint64_t a1)
{
  return sub_1000BE368(a1, static DirectPCSIdentityFetchRequest._protobuf_nameMap, (uint64_t)"pcs_services", 12);
}

uint64_t sub_1000BE368(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100222060();
  sub_100003C64(v7, a2);
  sub_100003CC8(v7, (uint64_t)a2);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v8 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v9 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100229910;
  uint64_t v12 = (void *)(v11 + v10);
  unint64_t v13 = v11 + v10 + v8[14];
  *uint64_t v12 = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = a4;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v15 = sub_100222030();
  unint64_t v16 = *(void (**)(void))(*(void *)(v15 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v13, v14, v15);
  uint64_t v17 = (char *)v12 + v9 + v8[14];
  *(void *)((char *)v12 + v9) = 2;
  *(void *)uint64_t v17 = "metrics";
  *((void *)v17 + 1) = 7;
  v17[16] = 2;
  v16();
  uint64_t v18 = (uint64_t)v12 + 2 * v9 + v8[14];
  *(void *)((char *)v12 + 2 * v9) = 3;
  *(void *)uint64_t v18 = "account_info";
  *(void *)(v18 + 8) = 12;
  *(unsigned char *)(v18 + 16) = 2;
  v16();
  return sub_100222040();
}

uint64_t DirectPCSIdentityFetchRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E70, (uint64_t)static DirectPCSIdentityFetchRequest._protobuf_nameMap);
}

uint64_t static DirectPCSIdentityFetchRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E70, (uint64_t)static DirectPCSIdentityFetchRequest._protobuf_nameMap, a1);
}

uint64_t DirectPCSIdentityFetchRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        sub_1000BE6E8();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for PCSService(0);
        sub_1000D8CA4(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService);
        uint64_t v4 = v3;
        sub_100221F00();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_100221E50();
    }
    uint64_t v4 = v3;
    sub_1000BE798();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1000BE6E8()
{
  return sub_100221F10();
}

uint64_t sub_1000BE798()
{
  return sub_100221F10();
}

uint64_t DirectPCSIdentityFetchRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for PCSService(0),
        sub_1000D8CA4(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService),
        uint64_t result = sub_100222010(),
        !v4))
  {
    uint64_t result = sub_1000BE974(v3, a1, a2, a3);
    if (!v4)
    {
      sub_1000BEB78(v3, a1, a2, a3);
      type metadata accessor for DirectPCSIdentityFetchRequest(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000BE974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  sub_10000D830(a1 + *(int *)(Request + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000BEB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for DirectPCSIdentityFetchRequest(0);
  sub_10000D830(a1 + *(int *)(Request + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

uint64_t static DirectPCSIdentityFetchRequest.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1000C9D8C(a1, a2, (uint64_t)sub_10003C004, type metadata accessor for DirectPCSIdentityFetchRequest) & 1;
}

Swift::Int DirectPCSIdentityFetchRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for DirectPCSIdentityFetchRequest, &qword_10029A358, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);
}

uint64_t sub_1000BEE08()
{
  return DirectPCSIdentityFetchRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000BEE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DirectPCSIdentityFetchRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000BEE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1F0, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000BEEB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E70, (uint64_t)static DirectPCSIdentityFetchRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000BEED8(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029EF20, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BEF44()
{
  sub_1000D8CA4((unint64_t *)&unk_10029EF20, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchRequest);

  return sub_100221F60();
}

void *DirectPCSIdentity.protoMessageName.unsafeMutableAddressor()
{
  return &static DirectPCSIdentity.protoMessageName;
}

unint64_t static DirectPCSIdentity.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_1000BEFE8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static DirectPCSIdentity._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static DirectPCSIdentity._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "item";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "pcs_service";
  *((void *)v10 + 1) = 11;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t DirectPCSIdentity._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E78, (uint64_t)static DirectPCSIdentity._protobuf_nameMap);
}

uint64_t static DirectPCSIdentity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E78, (uint64_t)static DirectPCSIdentity._protobuf_nameMap, a1);
}

uint64_t DirectPCSIdentity.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C12C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000BF230, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000BF2E0);
}

uint64_t sub_1000BF230()
{
  return sub_100221F10();
}

uint64_t sub_1000BF2E0()
{
  return sub_100221F10();
}

uint64_t DirectPCSIdentity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000BF3D0(a1, a2, a3, type metadata accessor for DirectPCSIdentity, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000BF44C);
}

uint64_t sub_1000BF3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result = sub_1000C1510(v5, a1, a2, a3, a4);
  if (!v6)
  {
    a5(v5, a1, a2, a3);
    return sub_100221DD0();
  }
  return result;
}

uint64_t sub_1000BF44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_1002997F8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PCSService(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DirectPCSIdentity(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_1002997F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_1002997F8);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for PCSService);
  sub_1000D8CA4(&qword_10029A350, (void (*)(uint64_t))type metadata accessor for PCSService);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for PCSService);
}

Swift::Int DirectPCSIdentity.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for DirectPCSIdentity, &qword_10029A360, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);
}

uint64_t sub_1000BF69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BF6C8(a1, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport, type metadata accessor for PCSService, a2);
}

uint64_t sub_1000BF6C8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X8>)
{
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v8 = a4 + *(int *)(a1 + 20);
  uint64_t v9 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a4 + *(int *)(a1 + 24);
  uint64_t v11 = a3(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 1, 1, v11);
}

uint64_t sub_1000BF7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DirectPCSIdentity.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000BF7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DirectPCSIdentity.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000BF7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1E8, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000BF858@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E78, (uint64_t)static DirectPCSIdentity._protobuf_nameMap, a1);
}

uint64_t sub_1000BF87C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A368, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BF8E8()
{
  sub_1000D8CA4(&qword_10029A368, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);

  return sub_100221F60();
}

void *DirectPCSIdentityFetchResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static DirectPCSIdentityFetchResponse.protoMessageName;
}

unint64_t static DirectPCSIdentityFetchResponse.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1000BF98C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static DirectPCSIdentityFetchResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static DirectPCSIdentityFetchResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "items";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "synckeys";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t DirectPCSIdentityFetchResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E80, (uint64_t)static DirectPCSIdentityFetchResponse._protobuf_nameMap);
}

uint64_t static DirectPCSIdentityFetchResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E80, (uint64_t)static DirectPCSIdentityFetchResponse._protobuf_nameMap, a1);
}

uint64_t DirectPCSIdentityFetchResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C1DD8(a1, a2, a3, (void (*)(void))type metadata accessor for DirectPCSIdentity, &qword_10029A368, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity);
}

uint64_t DirectPCSIdentityFetchResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*v0 + 16)
    || (type metadata accessor for DirectPCSIdentity(0),
        sub_1000D8CA4(&qword_10029A368, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentity),
        uint64_t result = sub_100222010(),
        !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (sub_100221D50(),
          sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport), uint64_t result = sub_100222010(), !v1))
    {
      type metadata accessor for DirectPCSIdentityFetchResponse(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t static DirectPCSIdentityFetchResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000C951C(a1, a2, sub_10003BFB0, type metadata accessor for DirectPCSIdentityFetchResponse) & 1;
}

Swift::Int DirectPCSIdentityFetchResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for DirectPCSIdentityFetchResponse, &qword_10029A370, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);
}

uint64_t sub_1000BFDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DirectPCSIdentityFetchResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000BFDF0()
{
  return DirectPCSIdentityFetchResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000BFE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1E0, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000BFE84@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E80, (uint64_t)static DirectPCSIdentityFetchResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000BFEA8(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A9E8, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BFF14()
{
  sub_1000D8CA4(&qword_10029A9E8, (void (*)(uint64_t))type metadata accessor for DirectPCSIdentityFetchResponse);

  return sub_100221F60();
}

void *CurrentCKKSItemSpecifier.protoMessageName.unsafeMutableAddressor()
{
  return &static CurrentCKKSItemSpecifier.protoMessageName;
}

unint64_t static CurrentCKKSItemSpecifier.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1000BFFB8()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static CurrentCKKSItemSpecifier._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static CurrentCKKSItemSpecifier._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "zone";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "item_pointer_name";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t CurrentCKKSItemSpecifier._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E88, (uint64_t)static CurrentCKKSItemSpecifier._protobuf_nameMap);
}

uint64_t static CurrentCKKSItemSpecifier._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E88, (uint64_t)static CurrentCKKSItemSpecifier._protobuf_nameMap, a1);
}

uint64_t sub_1000C01C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = sub_100221E50();
  if (!v5)
  {
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        uint64_t v11 = v4;
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_100221E50();
    }
    uint64_t v11 = v4 + 16;
LABEL_5:
    a4(v11, a2, a3);
    goto LABEL_6;
  }
  return result;
}

uint64_t CurrentCKKSItemSpecifier.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C0288(a1, a2, a3, (void (*)(void))type metadata accessor for CurrentCKKSItemSpecifier);
}

uint64_t sub_1000C0288(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  unint64_t v7 = v4[1];
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = *v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8 || (uint64_t result = sub_100221FE0(), !v5))
  {
    unint64_t v10 = v4[3];
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v4[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v11 || (uint64_t result = sub_100221FE0(), !v5))
    {
      a4(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t static CurrentCKKSItemSpecifier.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000CCF3C(a1, a2, type metadata accessor for CurrentCKKSItemSpecifier) & 1;
}

Swift::Int CurrentCKKSItemSpecifier.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for CurrentCKKSItemSpecifier, &qword_10029A378, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
}

uint64_t sub_1000C03EC@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000C0418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CurrentCKKSItemSpecifier.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000C0430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1D8, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000C04AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E88, (uint64_t)static CurrentCKKSItemSpecifier._protobuf_nameMap, a1);
}

uint64_t sub_1000C04D0(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C053C()
{
  sub_1000D8CA4(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);

  return sub_100221F60();
}

void *CurrentItemFetchRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static CurrentItemFetchRequest.protoMessageName;
}

unint64_t static CurrentItemFetchRequest.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1000C05E0(uint64_t a1)
{
  return sub_1000BE368(a1, static CurrentItemFetchRequest._protobuf_nameMap, (uint64_t)"current_items", 13);
}

uint64_t CurrentItemFetchRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E90, (uint64_t)static CurrentItemFetchRequest._protobuf_nameMap);
}

uint64_t static CurrentItemFetchRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E90, (uint64_t)static CurrentItemFetchRequest._protobuf_nameMap, a1);
}

uint64_t CurrentItemFetchRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_100221E50();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        sub_1000C0774();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for CurrentCKKSItemSpecifier(0);
        sub_1000D8CA4(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
        uint64_t v4 = v3;
        sub_100221F00();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_100221E50();
    }
    uint64_t v4 = v3;
    sub_1000C0824();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1000C0774()
{
  return sub_100221F10();
}

uint64_t sub_1000C0824()
{
  return sub_100221F10();
}

uint64_t CurrentItemFetchRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for CurrentCKKSItemSpecifier(0),
        sub_1000D8CA4(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier), uint64_t result = sub_100222010(), !v4))
  {
    uint64_t result = sub_1000C0A00(v3, a1, a2, a3);
    if (!v4)
    {
      sub_1000C0C04(v3, a1, a2, a3);
      type metadata accessor for CurrentItemFetchRequest(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000C0A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  sub_10000D830(a1 + *(int *)(Request + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000C0C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Request = type metadata accessor for CurrentItemFetchRequest(0);
  sub_10000D830(a1 + *(int *)(Request + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

uint64_t static CurrentItemFetchRequest.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1000C9D8C(a1, a2, (uint64_t)sub_10003DA90, type metadata accessor for CurrentItemFetchRequest) & 1;
}

Swift::Int CurrentItemFetchRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for CurrentItemFetchRequest, &qword_10029A388, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);
}

uint64_t sub_1000C0E94()
{
  return CurrentItemFetchRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000C0EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CurrentItemFetchRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000C0EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1D0, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000C0F40@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E90, (uint64_t)static CurrentItemFetchRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000C0F64(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4((unint64_t *)&unk_10029EF40, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C0FD0()
{
  sub_1000D8CA4((unint64_t *)&unk_10029EF40, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchRequest);

  return sub_100221F60();
}

void *CurrentCKKSItem.protoMessageName.unsafeMutableAddressor()
{
  return &static CurrentCKKSItem.protoMessageName;
}

uint64_t static CurrentCKKSItem.protoMessageName.getter()
{
  return 0x43746E6572727543;
}

uint64_t sub_1000C107C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static CurrentCKKSItem._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static CurrentCKKSItem._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "item";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "item_specifier";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t CurrentCKKSItem._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298E98, (uint64_t)static CurrentCKKSItem._protobuf_nameMap);
}

uint64_t static CurrentCKKSItem._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298E98, (uint64_t)static CurrentCKKSItem._protobuf_nameMap, a1);
}

uint64_t CurrentCKKSItem.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C12C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000C1370, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000C1420);
}

uint64_t sub_1000C12C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = v5;
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v6 || (v14 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      a5(a1, v9, a2, a3);
    }
    else if (result == 1)
    {
      a4(a1, v9, a2, a3);
    }
  }
  return result;
}

uint64_t sub_1000C1370()
{
  return sub_100221F10();
}

uint64_t sub_1000C1420()
{
  return sub_100221F10();
}

uint64_t CurrentCKKSItem.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000BF3D0(a1, a2, a3, type metadata accessor for CurrentCKKSItem, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000C1720);
}

uint64_t sub_1000C1510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  v18[3] = a4;
  v18[1] = a3;
  uint64_t v7 = sub_1000046DC(&qword_1002997E0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100221D50();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a5(0);
  sub_10000D830(a1 + *(int *)(v16 + 20), (uint64_t)v10, &qword_1002997E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10004015C((uint64_t)v10, &qword_1002997E0);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
  sub_100222020();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_1000C1720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC((uint64_t *)&unk_10029EF50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CurrentCKKSItemSpecifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CurrentCKKSItem(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_10029EF50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, (uint64_t *)&unk_10029EF50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for CurrentCKKSItemSpecifier);
  sub_1000D8CA4(&qword_10029A380, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItemSpecifier);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for CurrentCKKSItemSpecifier);
}

Swift::Int CurrentCKKSItem.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for CurrentCKKSItem, &qword_10029A390, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);
}

uint64_t sub_1000C1970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BF6C8(a1, (uint64_t (*)(void))&type metadata accessor for Ckcode_RecordTransport, type metadata accessor for CurrentCKKSItemSpecifier, a2);
}

uint64_t sub_1000C199C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CurrentCKKSItem.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000C19B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CurrentCKKSItem.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000C19CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1C8, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000C1A48@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298E98, (uint64_t)static CurrentCKKSItem._protobuf_nameMap, a1);
}

uint64_t sub_1000C1A6C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029A398, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C1AD8()
{
  sub_1000D8CA4(&qword_10029A398, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);

  return sub_100221F60();
}

void *CurrentItemFetchResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static CurrentItemFetchResponse.protoMessageName;
}

unint64_t static CurrentItemFetchResponse.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1000C1B7C()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static CurrentItemFetchResponse._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static CurrentItemFetchResponse._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229380;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "items";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "synckeys";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_100222040();
}

uint64_t CurrentItemFetchResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298EA0, (uint64_t)static CurrentItemFetchResponse._protobuf_nameMap);
}

uint64_t static CurrentItemFetchResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298EA0, (uint64_t)static CurrentItemFetchResponse._protobuf_nameMap, a1);
}

uint64_t CurrentItemFetchResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C1DD8(a1, a2, a3, (void (*)(void))type metadata accessor for CurrentCKKSItem, &qword_10029A398, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem);
}

uint64_t sub_1000C1DD8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t result = sub_100221E50();
  if (!v6)
  {
    while (1)
    {
      if (v11) {
        return result;
      }
      if (result == 2)
      {
        sub_100221D50();
        sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
      }
      else
      {
        if (result != 1) {
          goto LABEL_4;
        }
        a4(0);
        sub_1000D8CA4(a5, a6);
      }
      sub_100221F00();
LABEL_4:
      uint64_t result = sub_100221E50();
    }
  }
  return result;
}

uint64_t CurrentItemFetchResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*v0 + 16)
    || (type metadata accessor for CurrentCKKSItem(0),
        sub_1000D8CA4(&qword_10029A398, (void (*)(uint64_t))type metadata accessor for CurrentCKKSItem),
        uint64_t result = sub_100222010(),
        !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (sub_100221D50(),
          sub_1000D8CA4(&qword_10029A1C8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport), uint64_t result = sub_100222010(), !v1))
    {
      type metadata accessor for CurrentItemFetchResponse(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t static CurrentItemFetchResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_1000C951C(a1, a2, sub_10003DA3C, type metadata accessor for CurrentItemFetchResponse) & 1;
}

Swift::Int CurrentItemFetchResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for CurrentItemFetchResponse, &qword_10029A3A0, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);
}

uint64_t sub_1000C211C@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  a1[1] = &_swiftEmptyArrayStorage;
  return _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_1000C2148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000C21B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000C2228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CurrentItemFetchResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1000C2240()
{
  return CurrentItemFetchResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000C2258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1C0, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000C22D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298EA0, (uint64_t)static CurrentItemFetchResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000C22F8(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029AA30, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C2364()
{
  sub_1000D8CA4(&qword_10029AA30, (void (*)(uint64_t))type metadata accessor for CurrentItemFetchResponse);

  return sub_100221F60();
}

void *RemoveUnreadableCKServerDataRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static RemoveUnreadableCKServerDataRequest.protoMessageName;
}

unint64_t static RemoveUnreadableCKServerDataRequest.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1000C2408()
{
  uint64_t v0 = sub_100222060();
  sub_100003C64(v0, static RemoveUnreadableCKServerDataRequest._protobuf_nameMap);
  sub_100003CC8(v0, (uint64_t)static RemoveUnreadableCKServerDataRequest._protobuf_nameMap);
  sub_1000046DC(&qword_10029E3F0);
  uint64_t v1 = (int *)(sub_1000046DC(&qword_10029E3F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100229910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "isGuitarfish";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_100222030();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "metrics";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "account_info";
  *(void *)(v11 + 8) = 12;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_100222040();
}

uint64_t RemoveUnreadableCKServerDataRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298EA8, (uint64_t)static RemoveUnreadableCKServerDataRequest._protobuf_nameMap);
}

uint64_t static RemoveUnreadableCKServerDataRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298EA8, (uint64_t)static RemoveUnreadableCKServerDataRequest._protobuf_nameMap, a1);
}

uint64_t RemoveUnreadableCKServerDataRequest.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_100221E50();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_1000C27C0();
        break;
      case 2:
        sub_1000C2710();
        break;
      case 1:
        sub_100221E70();
        break;
    }
  }
  return result;
}

uint64_t sub_1000C2710()
{
  return sub_100221F10();
}

uint64_t sub_1000C27C0()
{
  return sub_100221F10();
}

uint64_t RemoveUnreadableCKServerDataRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*v3 != 1 || (uint64_t result = sub_100221F80(), !v4))
  {
    uint64_t result = sub_1000C294C((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_1000C2B50((uint64_t)v3, a1, a2, a3);
      type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
      return sub_100221DD0();
    }
  }
  return result;
}

uint64_t sub_1000C294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_10029F000);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Metrics(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_10029F000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_10029F000);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Metrics);
  sub_1000D8CA4((unint64_t *)&unk_10029EFE0, (void (*)(uint64_t))type metadata accessor for Metrics);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for Metrics);
}

uint64_t sub_1000C2B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1000046DC(&qword_100299F50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccountInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  sub_10000D830(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_100299F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10004015C((uint64_t)v8, &qword_100299F50);
  }
  sub_1000D736C((uint64_t)v8, (uint64_t)v13, type metadata accessor for AccountInfo);
  sub_1000D8CA4((unint64_t *)&unk_10029ECE0, (void (*)(uint64_t))type metadata accessor for AccountInfo);
  sub_100222020();
  return sub_1000D7E78((uint64_t)v13, type metadata accessor for AccountInfo);
}

Swift::Int RemoveUnreadableCKServerDataRequest.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for RemoveUnreadableCKServerDataRequest, &qword_10029A3A8, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);
}

uint64_t sub_1000C2DA0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 0;
  _s18TrustedPeersHelper8ViewKeysV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = &a2[*(int *)(a1 + 24)];
  uint64_t v5 = type metadata accessor for Metrics(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = &a2[*(int *)(a1 + 28)];
  uint64_t v7 = type metadata accessor for AccountInfo(0);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1000C2E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000C2EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100221DF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_1000C2F58()
{
  return RemoveUnreadableCKServerDataRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000C2F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return RemoveUnreadableCKServerDataRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1000C2F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1B8, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000C3004@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298EA8, (uint64_t)static RemoveUnreadableCKServerDataRequest._protobuf_nameMap, a1);
}

uint64_t sub_1000C3028(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029AA48, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C3094()
{
  sub_1000D8CA4(&qword_10029AA48, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataRequest);

  return sub_100221F60();
}

void *RemoveUnreadableCKServerDataResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static RemoveUnreadableCKServerDataResponse.protoMessageName;
}

unint64_t static RemoveUnreadableCKServerDataResponse.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1000C3138(uint64_t a1)
{
  return sub_1000C3144(a1, static RemoveUnreadableCKServerDataResponse._protobuf_nameMap);
}

uint64_t sub_1000C3144(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100222060();
  sub_100003C64(v3, a2);
  sub_100003CC8(v3, (uint64_t)a2);
  return sub_100222050();
}

uint64_t RemoveUnreadableCKServerDataResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_1000C31B0(&qword_100298EB0, (uint64_t)static RemoveUnreadableCKServerDataResponse._protobuf_nameMap);
}

uint64_t sub_1000C31B0(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_100222060();

  return sub_100003CC8(v3, a2);
}

uint64_t static RemoveUnreadableCKServerDataResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3228(&qword_100298EB0, (uint64_t)static RemoveUnreadableCKServerDataResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000C3228@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222060();
  uint64_t v6 = sub_100003CC8(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1000C32C0()
{
  do
    uint64_t result = sub_100221E50();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t _s18TrustedPeersHelper36RemoveUnreadableCKServerDataResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13((char *)&v16 - v11, a1, v4);
  v13(v9, a2, v4);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  LOBYTE(a2) = sub_100222250();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v9, v4);
  v14(v12, v4);
  return a2 & 1;
}

Swift::Int RemoveUnreadableCKServerDataResponse.hashValue.getter()
{
  return sub_1000C34D8((void (*)(void))type metadata accessor for RemoveUnreadableCKServerDataResponse, &qword_10029A3B0, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);
}

Swift::Int sub_1000C34D8(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_100222B20();
}

uint64_t sub_1000C3560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000D8CA4(&qword_10029E1B0, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1000C35DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3600(&qword_100298EB0, (uint64_t)static RemoveUnreadableCKServerDataResponse._protobuf_nameMap, a1);
}

uint64_t sub_1000C3600@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100222060();
  uint64_t v6 = sub_100003CC8(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1000C369C(uint64_t a1)
{
  uint64_t v2 = sub_1000D8CA4(&qword_10029AA60, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);

  return Message.debugDescription.getter(a1, v2);
}

Swift::Int sub_1000C3708()
{
  return sub_100222B20();
}

uint64_t sub_1000C3760()
{
  sub_1000D8CA4(&qword_10029AA60, (void (*)(uint64_t))type metadata accessor for RemoveUnreadableCKServerDataResponse);

  return sub_100221F60();
}

Swift::Int sub_1000C37DC()
{
  return sub_100222B20();
}

uint64_t sub_1000C3830(uint64_t a1, uint64_t a2)
{
  return sub_1000D70D0(a1, a2, type metadata accessor for ViewKeys, (uint64_t (*)(uint64_t, uint64_t))sub_100092CD4);
}

uint64_t _s18TrustedPeersHelper35RemoveUnreadableCKServerDataRequestV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v96 = sub_100221DF0();
  uint64_t v92 = *(void *)(v96 - 8);
  uint64_t v5 = __chkstk_darwin(v96, v4);
  char v91 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v90 = (char *)&v81 - v8;
  uint64_t v93 = type metadata accessor for AccountInfo(0);
  uint64_t v95 = *(void *)(v93 - 8);
  __chkstk_darwin(v93, v9);
  unint64_t v89 = (_DWORD *)((char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v94 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v94, v11);
  uint64_t v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v22 = (char *)&v81 - v21;
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v81 - v24;
  uint64_t v26 = type metadata accessor for Metrics(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v97 = v26;
  uint64_t v98 = (unsigned __int8 *)v27;
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000046DC(&qword_10029F000);
  uint64_t v37 = __chkstk_darwin(v35 - 8, v36);
  uint64_t v39 = __chkstk_darwin(v37, v38);
  __chkstk_darwin(v39, v40);
  uint64_t v44 = (char *)&v81 - v43;
  if (*a1 != *a2) {
    goto LABEL_27;
  }
  uint64_t v83 = v30;
  char v84 = v25;
  uint64_t v87 = v22;
  uint64_t v88 = (void *)v41;
  unint64_t v82 = v18;
  uint64_t v85 = v13;
  uint64_t v45 = v42;
  uint64_t v46 = type metadata accessor for RemoveUnreadableCKServerDataRequest(0);
  sub_10000D830((uint64_t)&a1[*(int *)(v46 + 24)], (uint64_t)v44, &qword_10029F000);
  uint64_t v86 = v46;
  sub_10000D830((uint64_t)&a2[*(int *)(v46 + 24)], v45, &qword_10029F000);
  uint64_t v47 = (uint64_t)&v34[*(int *)(v31 + 48)];
  sub_10000D830((uint64_t)v44, (uint64_t)v34, &qword_10029F000);
  sub_10000D830(v45, v47, &qword_10029F000);
  uint64_t v48 = v97;
  uint64_t v49 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v98 + 6);
  uint64_t v50 = a1;
  uint64_t v51 = (uint64_t)v44;
  if (v49((uint64_t)v34, 1, v97) == 1)
  {
    sub_10004015C(v45, &qword_10029F000);
    sub_10004015C((uint64_t)v44, &qword_10029F000);
    if (v49(v47, 1, v48) == 1)
    {
      sub_10004015C((uint64_t)v34, &qword_10029F000);
      uint64_t v52 = v96;
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v55 = &qword_10029E3E8;
    uint64_t v56 = (uint64_t)v34;
LABEL_26:
    sub_10004015C(v56, v55);
    goto LABEL_27;
  }
  uint64_t v53 = v45;
  uint64_t v54 = v88;
  sub_10000D830((uint64_t)v34, (uint64_t)v88, &qword_10029F000);
  if (v49(v47, 1, v48) == 1)
  {
    sub_10004015C(v53, &qword_10029F000);
    sub_10004015C(v51, &qword_10029F000);
    sub_1000D7E78((uint64_t)v54, type metadata accessor for Metrics);
    goto LABEL_7;
  }
  uint64_t v81 = v51;
  uint64_t v98 = (unsigned __int8 *)v34;
  char v57 = v83;
  sub_1000D736C(v47, (uint64_t)v83, type metadata accessor for Metrics);
  if ((*v54 != *v57 || v54[1] != v57[1]) && (sub_100222A30() & 1) == 0
    || (v54[2] != v57[2] || v54[3] != v57[3]) && (sub_100222A30() & 1) == 0)
  {
    sub_1000D7E78((uint64_t)v57, type metadata accessor for Metrics);
    sub_10004015C(v53, &qword_10029F000);
    sub_10004015C(v81, &qword_10029F000);
    sub_1000D7E78((uint64_t)v54, type metadata accessor for Metrics);
    uint64_t v56 = (uint64_t)v98;
    uint64_t v55 = &qword_10029F000;
    goto LABEL_26;
  }
  uint64_t v58 = (uint64_t)v54;
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  uint64_t v52 = v96;
  char v59 = sub_100222250();
  sub_1000D7E78((uint64_t)v57, type metadata accessor for Metrics);
  sub_10004015C(v53, &qword_10029F000);
  sub_10004015C(v81, &qword_10029F000);
  sub_1000D7E78(v58, type metadata accessor for Metrics);
  sub_10004015C((uint64_t)v98, &qword_10029F000);
  if ((v59 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_15:
  uint64_t v60 = v86;
  uint64_t v61 = (uint64_t)v84;
  sub_10000D830((uint64_t)&v50[*(int *)(v86 + 28)], (uint64_t)v84, &qword_100299F50);
  uint64_t v62 = *(int *)(v60 + 28);
  uint64_t v98 = a2;
  uint64_t v63 = (uint64_t)v87;
  sub_10000D830((uint64_t)&a2[v62], (uint64_t)v87, &qword_100299F50);
  uint64_t v64 = (uint64_t)v85;
  uint64_t v65 = (uint64_t)&v85[*(int *)(v94 + 48)];
  sub_10000D830(v61, (uint64_t)v85, &qword_100299F50);
  sub_10000D830(v63, v65, &qword_100299F50);
  uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
  uint64_t v67 = v93;
  if (v66(v64, 1, v93) != 1)
  {
    uint64_t v68 = v82;
    sub_10000D830(v64, (uint64_t)v82, &qword_100299F50);
    if (v66(v65, 1, v67) == 1)
    {
      sub_10004015C((uint64_t)v87, &qword_100299F50);
      sub_10004015C(v61, &qword_100299F50);
      sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
      goto LABEL_20;
    }
    uint64_t v69 = v89;
    sub_1000D736C(v65, (uint64_t)v89, type metadata accessor for AccountInfo);
    if (*v68 != *v69)
    {
      sub_1000D7E78((uint64_t)v69, type metadata accessor for AccountInfo);
      sub_10004015C((uint64_t)v87, &qword_100299F50);
      sub_10004015C(v61, &qword_100299F50);
      sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
      uint64_t v56 = v64;
      uint64_t v55 = &qword_100299F50;
      goto LABEL_26;
    }
    sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v70 = sub_100222250();
    sub_1000D7E78((uint64_t)v69, type metadata accessor for AccountInfo);
    sub_10004015C((uint64_t)v87, &qword_100299F50);
    sub_10004015C(v61, &qword_100299F50);
    sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
    sub_10004015C(v64, &qword_100299F50);
    if (v70) {
      goto LABEL_24;
    }
LABEL_27:
    char v78 = 0;
    return v78 & 1;
  }
  sub_10004015C(v63, &qword_100299F50);
  sub_10004015C(v61, &qword_100299F50);
  if (v66(v65, 1, v67) != 1)
  {
LABEL_20:
    uint64_t v55 = &qword_10029E3E0;
    uint64_t v56 = v64;
    goto LABEL_26;
  }
  sub_10004015C(v64, &qword_100299F50);
LABEL_24:
  uint64_t v71 = v86;
  uint64_t v72 = &v50[*(int *)(v86 + 20)];
  uint64_t v73 = v92;
  uint64_t v74 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v92 + 16);
  uint64_t v75 = v90;
  v74(v90, v72, v52);
  char v76 = &v98[*(int *)(v71 + 20)];
  uint64_t v77 = v91;
  v74(v91, v76, v52);
  sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v78 = sub_100222250();
  unint64_t v79 = *(void (**)(char *, uint64_t))(v73 + 8);
  v79(v77, v52);
  v79(v75, v52);
  return v78 & 1;
}

uint64_t _s18TrustedPeersHelper33FetchRecoverableTLKSharesResponseV4ViewV2eeoiySbAE_AEtFZ_0(char *a1, void *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v51 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v50 = (char *)&v48 - v9;
  uint64_t v10 = type metadata accessor for ViewKeysRecords(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v53 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299650);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000046DC(&qword_100299648);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v48 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v29 = (char *)&v48 - v28;
  uint64_t v30 = *(void *)a1;
  uint64_t v31 = *((void *)a1 + 1);
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  if (v30 == *a2 && v31 == a2[1] || (char v32 = 0, (sub_100222A30() & 1) != 0))
  {
    uint64_t v49 = v4;
    uint64_t RecoverableTLKShares = type metadata accessor for FetchRecoverableTLKSharesResponse.View(0);
    sub_10000D830((uint64_t)&v54[*(int *)(RecoverableTLKShares + 28)], (uint64_t)v29, &qword_100299648);
    sub_10000D830((uint64_t)v55 + *(int *)(RecoverableTLKShares + 28), (uint64_t)v26, &qword_100299648);
    uint64_t v34 = (uint64_t)&v17[*(int *)(v14 + 48)];
    sub_10000D830((uint64_t)v29, (uint64_t)v17, &qword_100299648);
    sub_10000D830((uint64_t)v26, v34, &qword_100299648);
    uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (v35((uint64_t)v17, 1, v10) == 1)
    {
      sub_10004015C((uint64_t)v26, &qword_100299648);
      sub_10004015C((uint64_t)v29, &qword_100299648);
      if (v35(v34, 1, v10) == 1)
      {
        sub_10004015C((uint64_t)v17, &qword_100299648);
LABEL_11:
        uint64_t v38 = v54;
        uint64_t v39 = v55;
        if (sub_10003BD90(*((void *)v54 + 2), v55[2]))
        {
          uint64_t v40 = v52;
          uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
          uint64_t v42 = v49;
          uint64_t v43 = v50;
          v41(v50, &v38[*(int *)(RecoverableTLKShares + 24)], v49);
          uint64_t v44 = (char *)v39 + *(int *)(RecoverableTLKShares + 24);
          uint64_t v45 = v51;
          v41(v51, v44, v42);
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v32 = sub_100222250();
          uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
          v46(v45, v42);
          v46(v43, v42);
          return v32 & 1;
        }
LABEL_13:
        char v32 = 0;
        return v32 & 1;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v17, (uint64_t)v22, &qword_100299648);
      if (v35(v34, 1, v10) != 1)
      {
        uint64_t v36 = v53;
        sub_1000D736C(v34, v53, type metadata accessor for ViewKeysRecords);
        char v37 = _s18TrustedPeersHelper15ViewKeysRecordsV2eeoiySbAC_ACtFZ_0((uint64_t)v22, v36);
        sub_1000D7E78(v36, type metadata accessor for ViewKeysRecords);
        sub_10004015C((uint64_t)v26, &qword_100299648);
        sub_10004015C((uint64_t)v29, &qword_100299648);
        sub_1000D7E78((uint64_t)v22, type metadata accessor for ViewKeysRecords);
        sub_10004015C((uint64_t)v17, &qword_100299648);
        if ((v37 & 1) == 0) {
          goto LABEL_13;
        }
        goto LABEL_11;
      }
      sub_10004015C((uint64_t)v26, &qword_100299648);
      sub_10004015C((uint64_t)v29, &qword_100299648);
      sub_1000D7E78((uint64_t)v22, type metadata accessor for ViewKeysRecords);
    }
    sub_10004015C((uint64_t)v17, &qword_100299650);
    goto LABEL_13;
  }
  return v32 & 1;
}

uint64_t _s18TrustedPeersHelper32FetchRecoverableTLKSharesRequestV2eeoiySbAC_ACtFZ_0(char *a1, void *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  char v76 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v75 = (char *)&v72 - v9;
  uint64_t v84 = type metadata accessor for AccountInfo(0);
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v10);
  uint64_t v74 = (_DWORD *)((char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v80, v12);
  uint64_t v85 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_100299F50);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  char v78 = (_DWORD *)((char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v81 = (uint64_t)&v72 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v83 = (uint64_t)&v72 - v22;
  uint64_t v23 = type metadata accessor for Metrics(0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  unint64_t v79 = (uint64_t *)((char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_10029F000);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v35 = (uint64_t *)((char *)&v72 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = __chkstk_darwin(v33, v36);
  uint64_t v39 = (char *)&v72 - v38;
  __chkstk_darwin(v37, v40);
  uint64_t v42 = (char *)&v72 - v41;
  uint64_t v43 = *(void *)a1;
  uint64_t v44 = *((void *)a1 + 1);
  uint64_t v86 = a1;
  uint64_t v87 = a2;
  if (v43 == *a2 && v44 == a2[1] || (char v45 = 0, (sub_100222A30() & 1) != 0))
  {
    uint64_t v73 = v4;
    uint64_t RecoverableTLKSharesRequest = (int *)type metadata accessor for FetchRecoverableTLKSharesRequest(0);
    sub_10000D830((uint64_t)&v86[RecoverableTLKSharesRequest[6]], (uint64_t)v42, &qword_10029F000);
    sub_10000D830((uint64_t)v87 + RecoverableTLKSharesRequest[6], (uint64_t)v39, &qword_10029F000);
    uint64_t v47 = (uint64_t)&v30[*(int *)(v27 + 48)];
    sub_10000D830((uint64_t)v42, (uint64_t)v30, &qword_10029F000);
    sub_10000D830((uint64_t)v39, v47, &qword_10029F000);
    uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (v48((uint64_t)v30, 1, v23) == 1)
    {
      sub_10004015C((uint64_t)v39, &qword_10029F000);
      sub_10004015C((uint64_t)v42, &qword_10029F000);
      if (v48(v47, 1, v23) == 1)
      {
        sub_10004015C((uint64_t)v30, &qword_10029F000);
        goto LABEL_17;
      }
    }
    else
    {
      sub_10000D830((uint64_t)v30, (uint64_t)v35, &qword_10029F000);
      if (v48(v47, 1, v23) != 1)
      {
        uint64_t v51 = v79;
        sub_1000D736C(v47, (uint64_t)v79, type metadata accessor for Metrics);
        if ((*v35 != *v51 || v35[1] != v51[1]) && (sub_100222A30() & 1) == 0
          || (v35[2] != v51[2] || v35[3] != v51[3]) && (sub_100222A30() & 1) == 0)
        {
          sub_1000D7E78((uint64_t)v51, type metadata accessor for Metrics);
          uint64_t v53 = &qword_10029F000;
          sub_10004015C((uint64_t)v39, &qword_10029F000);
          sub_10004015C((uint64_t)v42, &qword_10029F000);
          sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
          uint64_t v50 = (uint64_t)v30;
          goto LABEL_29;
        }
        sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v52 = sub_100222250();
        sub_1000D7E78((uint64_t)v51, type metadata accessor for Metrics);
        sub_10004015C((uint64_t)v39, &qword_10029F000);
        sub_10004015C((uint64_t)v42, &qword_10029F000);
        sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
        sub_10004015C((uint64_t)v30, &qword_10029F000);
        if ((v52 & 1) == 0) {
          goto LABEL_31;
        }
LABEL_17:
        uint64_t v53 = &qword_100299F50;
        uint64_t v54 = v83;
        sub_10000D830((uint64_t)&v86[RecoverableTLKSharesRequest[7]], v83, &qword_100299F50);
        uint64_t v55 = v81;
        sub_10000D830((uint64_t)v87 + RecoverableTLKSharesRequest[7], v81, &qword_100299F50);
        uint64_t v56 = v85;
        uint64_t v57 = v85 + *(int *)(v80 + 48);
        sub_10000D830(v54, v85, &qword_100299F50);
        sub_10000D830(v55, v57, &qword_100299F50);
        uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
        uint64_t v59 = v84;
        if (v58(v56, 1, v84) == 1)
        {
          sub_10004015C(v55, &qword_100299F50);
          sub_10004015C(v54, &qword_100299F50);
          if (v58(v57, 1, v59) == 1)
          {
            sub_10004015C(v56, &qword_100299F50);
LABEL_20:
            uint64_t v60 = v77;
            uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
            uint64_t v62 = v75;
            uint64_t v63 = v73;
            v61(v75, &v86[RecoverableTLKSharesRequest[5]], v73);
            uint64_t v64 = (char *)v87 + RecoverableTLKSharesRequest[5];
            uint64_t v65 = v76;
            v61(v76, v64, v63);
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v45 = sub_100222250();
            uint64_t v66 = *(void (**)(char *, uint64_t))(v60 + 8);
            v66(v65, v63);
            v66(v62, v63);
            return v45 & 1;
          }
          goto LABEL_23;
        }
        uint64_t v67 = RecoverableTLKSharesRequest;
        uint64_t v68 = v78;
        sub_10000D830(v56, (uint64_t)v78, &qword_100299F50);
        if (v58(v57, 1, v59) == 1)
        {
          sub_10004015C(v55, &qword_100299F50);
          sub_10004015C(v54, &qword_100299F50);
          sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
LABEL_23:
          uint64_t v49 = &qword_10029E3E0;
          uint64_t v50 = v56;
          goto LABEL_30;
        }
        uint64_t v69 = v74;
        sub_1000D736C(v57, (uint64_t)v74, type metadata accessor for AccountInfo);
        if (*v68 == *v69)
        {
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v70 = sub_100222250();
          sub_1000D7E78((uint64_t)v69, type metadata accessor for AccountInfo);
          sub_10004015C(v55, &qword_100299F50);
          sub_10004015C(v54, &qword_100299F50);
          sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
          sub_10004015C(v56, &qword_100299F50);
          uint64_t RecoverableTLKSharesRequest = v67;
          if (v70) {
            goto LABEL_20;
          }
LABEL_31:
          char v45 = 0;
          return v45 & 1;
        }
        sub_1000D7E78((uint64_t)v69, type metadata accessor for AccountInfo);
        sub_10004015C(v55, &qword_100299F50);
        sub_10004015C(v54, &qword_100299F50);
        sub_1000D7E78((uint64_t)v68, type metadata accessor for AccountInfo);
        uint64_t v50 = v56;
LABEL_29:
        uint64_t v49 = v53;
        goto LABEL_30;
      }
      sub_10004015C((uint64_t)v39, &qword_10029F000);
      sub_10004015C((uint64_t)v42, &qword_10029F000);
      sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
    }
    uint64_t v49 = &qword_10029E3E8;
    uint64_t v50 = (uint64_t)v30;
LABEL_30:
    sub_10004015C(v50, v49);
    goto LABEL_31;
  }
  return v45 & 1;
}

uint64_t _s18TrustedPeersHelper30ResetAccountCDPContentsRequestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_100221DF0();
  uint64_t v80 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  unint64_t v79 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  char v78 = (char *)&v74 - v9;
  uint64_t v87 = type metadata accessor for Metrics(0);
  uint64_t v84 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v10);
  uint64_t v81 = (uint64_t *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = sub_1000046DC(&qword_10029E3E8);
  __chkstk_darwin(v83, v12);
  uint64_t v88 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000046DC(&qword_10029F000);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v82 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v85 = (char *)&v74 - v20;
  __chkstk_darwin(v19, v21);
  uint64_t v86 = (char *)&v74 - v22;
  uint64_t v23 = type metadata accessor for AccountInfo(0);
  uint64_t v89 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (_DWORD *)((char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_1000046DC(&qword_10029E3E0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000046DC(&qword_100299F50);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v35 = (char *)&v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v33, v36);
  uint64_t v39 = (char *)&v74 - v38;
  __chkstk_darwin(v37, v40);
  uint64_t v42 = (char *)&v74 - v41;
  uint64_t v43 = *a1;
  uint64_t v44 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    switch(v44)
    {
      case 1:
        if (v43 != 1) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 2:
        if (v43 != 2) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 3:
        if (v43 != 3) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 4:
        if (v43 != 4) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 5:
        if (v43 != 5) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 6:
        if (v43 != 6) {
          goto LABEL_55;
        }
        goto LABEL_6;
      case 7:
        if (v43 != 7) {
          goto LABEL_55;
        }
        goto LABEL_6;
      default:
        if (!v43) {
          goto LABEL_6;
        }
        goto LABEL_55;
    }
  }
  if (v43 != v44) {
    goto LABEL_55;
  }
LABEL_6:
  uint64_t v77 = v4;
  if (a1[2] == a2[2] && a1[3] == a2[3] || (char v45 = 0, (sub_100222A30() & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5] || (char v45 = 0, (sub_100222A30() & 1) != 0))
    {
      if (*((unsigned __int8 *)a1 + 48) != *((unsigned __int8 *)a2 + 48)) {
        goto LABEL_55;
      }
      uint64_t v46 = type metadata accessor for ResetAccountCDPContentsRequest(0);
      uint64_t v47 = a1;
      uint64_t v48 = v46;
      uint64_t v49 = *(int *)(v46 + 40);
      uint64_t v75 = v47;
      sub_10000D830((uint64_t)v47 + v49, (uint64_t)v42, &qword_100299F50);
      uint64_t v76 = v48;
      sub_10000D830((uint64_t)a2 + *(int *)(v48 + 40), (uint64_t)v39, &qword_100299F50);
      uint64_t v50 = (uint64_t)&v30[*(int *)(v27 + 48)];
      sub_10000D830((uint64_t)v42, (uint64_t)v30, &qword_100299F50);
      sub_10000D830((uint64_t)v39, v50, &qword_100299F50);
      uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
      if (v51((uint64_t)v30, 1, v23) == 1)
      {
        sub_10004015C((uint64_t)v39, &qword_100299F50);
        sub_10004015C((uint64_t)v42, &qword_100299F50);
        if (v51(v50, 1, v23) == 1)
        {
          sub_10004015C((uint64_t)v30, &qword_100299F50);
          goto LABEL_35;
        }
      }
      else
      {
        sub_10000D830((uint64_t)v30, (uint64_t)v35, &qword_100299F50);
        if (v51(v50, 1, v23) != 1)
        {
          sub_1000D736C(v50, (uint64_t)v26, type metadata accessor for AccountInfo);
          if (*(_DWORD *)v35 != *v26)
          {
            uint64_t v69 = type metadata accessor for AccountInfo;
            sub_1000D7E78((uint64_t)v26, type metadata accessor for AccountInfo);
            char v70 = &qword_100299F50;
            goto LABEL_53;
          }
          sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v54 = sub_100222250();
          sub_1000D7E78((uint64_t)v26, type metadata accessor for AccountInfo);
          sub_10004015C((uint64_t)v39, &qword_100299F50);
          sub_10004015C((uint64_t)v42, &qword_100299F50);
          sub_1000D7E78((uint64_t)v35, type metadata accessor for AccountInfo);
          sub_10004015C((uint64_t)v30, &qword_100299F50);
          if ((v54 & 1) == 0) {
            goto LABEL_55;
          }
LABEL_35:
          uint64_t v56 = v75;
          uint64_t v55 = v76;
          uint64_t v42 = v86;
          sub_10000D830((uint64_t)v75 + *(int *)(v76 + 44), (uint64_t)v86, &qword_10029F000);
          uint64_t v39 = v85;
          sub_10000D830((uint64_t)a2 + *(int *)(v55 + 44), (uint64_t)v85, &qword_10029F000);
          uint64_t v30 = v88;
          uint64_t v57 = (uint64_t)&v88[*(int *)(v83 + 48)];
          sub_10000D830((uint64_t)v42, (uint64_t)v88, &qword_10029F000);
          sub_10000D830((uint64_t)v39, v57, &qword_10029F000);
          uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
          uint64_t v59 = v87;
          if (v58((uint64_t)v30, 1, v87) == 1)
          {
            sub_10004015C((uint64_t)v39, &qword_10029F000);
            sub_10004015C((uint64_t)v42, &qword_10029F000);
            if (v58(v57, 1, v59) == 1)
            {
              sub_10004015C((uint64_t)v30, &qword_10029F000);
LABEL_38:
              if (*((unsigned __int8 *)v56 + 49) == *((unsigned __int8 *)a2 + 49))
              {
                uint64_t v60 = v76;
                uint64_t v61 = (uint64_t)v56 + *(int *)(v76 + 36);
                uint64_t v62 = v80;
                uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
                uint64_t v64 = v77;
                uint64_t v65 = v78;
                v63(v78, v61, v77);
                uint64_t v66 = (uint64_t)a2 + *(int *)(v60 + 36);
                uint64_t v67 = v79;
                v63(v79, v66, v64);
                sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                char v45 = sub_100222250();
                uint64_t v68 = *(void (**)(char *, uint64_t))(v62 + 8);
                v68(v67, v64);
                v68(v65, v64);
                return v45 & 1;
              }
LABEL_55:
              char v45 = 0;
              return v45 & 1;
            }
            goto LABEL_42;
          }
          uint64_t v35 = v82;
          sub_10000D830((uint64_t)v30, (uint64_t)v82, &qword_10029F000);
          if (v58(v57, 1, v59) == 1)
          {
            sub_10004015C((uint64_t)v39, &qword_10029F000);
            sub_10004015C((uint64_t)v42, &qword_10029F000);
            sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
LABEL_42:
            char v52 = &qword_10029E3E8;
            uint64_t v53 = (uint64_t)v30;
            goto LABEL_54;
          }
          uint64_t v71 = v81;
          sub_1000D736C(v57, (uint64_t)v81, type metadata accessor for Metrics);
          if (*(void *)v35 == *v71 && *((void *)v35 + 1) == v71[1] || (sub_100222A30())
            && (*((void *)v35 + 2) == v71[2] && *((void *)v35 + 3) == v71[3] || (sub_100222A30() & 1) != 0))
          {
            sub_1000D8CA4(&qword_100299628, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v72 = sub_100222250();
            sub_1000D7E78((uint64_t)v71, type metadata accessor for Metrics);
            sub_10004015C((uint64_t)v39, &qword_10029F000);
            sub_10004015C((uint64_t)v42, &qword_10029F000);
            sub_1000D7E78((uint64_t)v35, type metadata accessor for Metrics);
            sub_10004015C((uint64_t)v30, &qword_10029F000);
            if ((v72 & 1) == 0) {
              goto LABEL_55;
            }
            goto LABEL_38;
          }
          uint64_t v69 = type metadata accessor for Metrics;
          sub_1000D7E78((uint64_t)v71, type metadata accessor for Metrics);
          char v70 = &qword_10029F000;
LABEL_53:
          sub_10004015C((uint64_t)v39, v70);
          sub_10004015C((uint64_t)v42, v70);
          sub_1000D7E78((uint64_t)v35, v69);
          uint64_t v53 = (uint64_t)v30;
          char v52 = v70;
          goto LABEL_54;
        }
        sub_10004015C((uint64_t)v39, &qword_100299F50);
        sub_10004015C((uint64_t)v42, &qword_100299F50);
        sub_1000D7E78((uint64_t)v35, type metadata accessor for AccountInfo);
      }
      char v52 = &qword_10029E3E0;
      uint64_t v53 = (uint64_t)v30;
LABEL_54:
      sub_10004015C(v53, v52);
      goto LABEL_55;
    }
  }
  return v45 & 1;
}