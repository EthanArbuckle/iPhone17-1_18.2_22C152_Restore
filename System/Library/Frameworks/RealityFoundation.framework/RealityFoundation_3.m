uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  void *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v7 = (void *)result;
  if (!a2)
  {
    v8 = 0;
    goto LABEL_12;
  }
  v8 = a3;
  if (!a3)
  {
LABEL_12:
    v9 = a4;
    goto LABEL_13;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v9 = *(void *)(a5 + 16);
    if (v9 != a4)
    {
      v10 = a2;
      v11 = a3 - 1;
      v12 = a5 + 40 * a4 + 32;
      v13 = a4;
      while ((a4 & 0x8000000000000000) == 0)
      {
        if (v13 >= *(void *)(a5 + 16)) {
          goto LABEL_16;
        }
        ++v13;
        result = outlined init with copy of __REAssetService(v12, v10);
        if (!v11)
        {
          v9 = v13;
          goto LABEL_13;
        }
        v10 += 40;
        --v11;
        v12 += 40;
        if (v9 == v13) {
          goto LABEL_10;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_10:
    v8 = v9 - a4;
LABEL_13:
    *v7 = a4;
    v7[1] = a5;
    v7[2] = v9;
    return v8;
  }
LABEL_17:
  __break(1u);
  return result;
}

unint64_t specialized Sequence._copySequenceContents(initializing:)(unint64_t *a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  swift_bridgeObjectRelease();
  if (a2)
  {
    if (a3)
    {
      if ((a3 & 0x8000000000000000) != 0) {
        goto LABEL_21;
      }
      unint64_t v4 = a4 >> 62;
      if (a4 >> 62)
      {
LABEL_22:
        swift_bridgeObjectRetain();
        unint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_6;
        }
      }
      else
      {
        unint64_t v9 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v9)
        {
LABEL_6:
          unint64_t v9 = 0;
          unint64_t v13 = a3--;
          do
          {
            if ((a4 & 0xC000000000000001) != 0)
            {
              uint64_t v11 = MEMORY[0x22A689930](v9, a4);
            }
            else
            {
              if (v9 >= *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
              uint64_t v11 = swift_retain();
            }
            *(void *)(a2 + 8 * v9) = v11;
            if (a3 == v9)
            {
              unint64_t v9 = v13;
              break;
            }
            if (v4)
            {
              swift_bridgeObjectRetain();
              uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v10 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            ++v9;
          }
          while (v9 != v10);
        }
      }
    }
    else
    {
      unint64_t v9 = 0;
    }
  }
  else
  {
    unint64_t v9 = 0;
  }
  *a1 = a4;
  a1[1] = v9;
  return v9;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5 = (void *)result;
  if (!a2)
  {
LABEL_42:
    uint64_t v6 = 0;
    goto LABEL_45;
  }
  uint64_t v6 = a3;
  if (!a3)
  {
LABEL_45:
    void *v5 = a4;
    v5[1] = v6;
    return v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (REEntityGetChildCount())
    {
      v31 = v5;
      if (REEntityGetChildCount() >= 1)
      {
        uint64_t v8 = 0;
        uint64_t v9 = v6 - 1;
        uint64_t v10 = &type metadata for __EntityInfoComponent;
        do
        {
          result = REEntityGetChild();
          if (!result) {
            goto LABEL_49;
          }
          uint64_t v11 = result;
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            uint64_t v12 = swift_dynamicCastClassUnconditional();
          }
          else
          {
            result = REEntityIsBeingDestroyed();
            if (result) {
              goto LABEL_47;
            }
            specialized static SceneManager.customComponentType(_:)((uint64_t)v10, (uint64_t)&protocol witness table for __EntityInfoComponent);
            if (REEntityGetCustomComponent())
            {
              uint64_t Object = RECustomComponentGetObject();
              if (Object)
              {
                v14 = *(unsigned __int8 **)Object;
                if (*(void *)(Object + 8)) {
                  BOOL v15 = 1;
                }
                else {
                  BOOL v15 = v14 == 0;
                }
                if (v15)
                {
                  result = swift_retain();
                }
                else
                {
                  int v16 = *v14;
                  uint64_t v17 = String.init(utf8String:)();
                  if (v18) {
                    Swift::Int v19 = v17;
                  }
                  else {
                    Swift::Int v19 = 0;
                  }
                  if (v18) {
                    unint64_t v20 = v18;
                  }
                  else {
                    unint64_t v20 = 0xE000000000000000;
                  }
                  v14 = (unsigned __int8 *)specialized static __EntityInfoComponent.makeRawData(isNinja:entityTypeName:)(v16 == 42, v19, v20);
                  swift_bridgeObjectRelease();
                  type metadata accessor for IntrospectionDataCleanupHelper();
                  result = swift_allocObject();
                  *(void *)(result + 16) = v14;
                }
                if (!v14) {
                  goto LABEL_50;
                }
                v21 = v10;
                swift_retain();
                uint64_t v22 = String.init(utf8String:)();
                unint64_t v24 = v23;
                swift_release();
                uint64_t v25 = v24 ? v22 : 0;
                if (!v24) {
                  unint64_t v24 = 0xE000000000000000;
                }
                v26 = (NSString *)MEMORY[0x22A688A50](v25, v24);
                swift_bridgeObjectRelease();
                Class v27 = NSClassFromString(v26);

                swift_release();
                uint64_t v10 = v21;
                uint64_t v9 = v6 - 1;
                if (v27)
                {
                  swift_getObjCClassMetadata();
                  type metadata accessor for Entity();
                  uint64_t v28 = swift_dynamicCastMetatype();
                  if (v28)
                  {
                    uint64_t v29 = (*(uint64_t (**)(void))(v28 + 232))();
                    uint64_t v30 = *(void *)(v29 + 16);
                    swift_retain();
                    MEMORY[0x22A68E750](v30, 0);
                    *(void *)(v29 + 16) = v11;
                    MEMORY[0x22A68E750](v11, v29);
                    swift_release();
                    goto LABEL_37;
                  }
                }
              }
            }
            uint64_t v12 = makeEntity(for:)(v11);
          }
          uint64_t v29 = v12;
LABEL_37:
          result = REEntityGetChildCount();
          if (v8 >= result)
          {
            __break(1u);
LABEL_47:
            __break(1u);
            goto LABEL_48;
          }
          *(void *)(a2 + 8 * v8) = v29;
          if (v9 == v8) {
            goto LABEL_44;
          }
          v5 = (void *)(v8 + 1);
          if (v8 + 1 == REEntityGetChildCount())
          {
            uint64_t v6 = v8 + 1;
LABEL_44:
            v5 = v31;
            goto LABEL_45;
          }
          ++v8;
        }
        while (v8 < REEntityGetChildCount());
      }
      __break(1u);
    }
    goto LABEL_42;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

{
  void *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  ValueMetadata *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Object;
  unsigned __int8 *v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  Swift::Int v19;
  unint64_t v20;
  ValueMetadata *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSString *v26;
  Class v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;

  v5 = (void *)result;
  if (!a2)
  {
LABEL_42:
    uint64_t v6 = 0;
    goto LABEL_45;
  }
  uint64_t v6 = a3;
  if (!a3)
  {
LABEL_45:
    void *v5 = a4;
    v5[1] = v6;
    return v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (REEntityGetChildCount() >= 1)
    {
      v31 = v5;
      if (REEntityGetChildCount() >= 1)
      {
        uint64_t v8 = 0;
        uint64_t v9 = v6 - 1;
        uint64_t v10 = &type metadata for __EntityInfoComponent;
        do
        {
          result = REEntityGetChild();
          if (!result) {
            goto LABEL_49;
          }
          uint64_t v11 = result;
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            uint64_t v12 = swift_dynamicCastClassUnconditional();
          }
          else
          {
            result = REEntityIsBeingDestroyed();
            if (result) {
              goto LABEL_47;
            }
            specialized static SceneManager.customComponentType(_:)((uint64_t)v10, (uint64_t)&protocol witness table for __EntityInfoComponent);
            if (REEntityGetCustomComponent())
            {
              uint64_t Object = RECustomComponentGetObject();
              if (Object)
              {
                v14 = *(unsigned __int8 **)Object;
                if (*(void *)(Object + 8)) {
                  BOOL v15 = 1;
                }
                else {
                  BOOL v15 = v14 == 0;
                }
                if (v15)
                {
                  result = swift_retain();
                }
                else
                {
                  int v16 = *v14;
                  uint64_t v17 = String.init(utf8String:)();
                  if (v18) {
                    Swift::Int v19 = v17;
                  }
                  else {
                    Swift::Int v19 = 0;
                  }
                  if (v18) {
                    unint64_t v20 = v18;
                  }
                  else {
                    unint64_t v20 = 0xE000000000000000;
                  }
                  v14 = (unsigned __int8 *)specialized static __EntityInfoComponent.makeRawData(isNinja:entityTypeName:)(v16 == 42, v19, v20);
                  swift_bridgeObjectRelease();
                  type metadata accessor for IntrospectionDataCleanupHelper();
                  result = swift_allocObject();
                  *(void *)(result + 16) = v14;
                }
                if (!v14) {
                  goto LABEL_50;
                }
                v21 = v10;
                swift_retain();
                uint64_t v22 = String.init(utf8String:)();
                unint64_t v24 = v23;
                swift_release();
                uint64_t v25 = v24 ? v22 : 0;
                if (!v24) {
                  unint64_t v24 = 0xE000000000000000;
                }
                v26 = (NSString *)MEMORY[0x22A688A50](v25, v24);
                swift_bridgeObjectRelease();
                Class v27 = NSClassFromString(v26);

                swift_release();
                uint64_t v10 = v21;
                uint64_t v9 = v6 - 1;
                if (v27)
                {
                  swift_getObjCClassMetadata();
                  type metadata accessor for Entity();
                  uint64_t v28 = swift_dynamicCastMetatype();
                  if (v28)
                  {
                    uint64_t v29 = (*(uint64_t (**)(void))(v28 + 232))();
                    uint64_t v30 = *(void *)(v29 + 16);
                    swift_retain();
                    MEMORY[0x22A68E750](v30, 0);
                    *(void *)(v29 + 16) = v11;
                    MEMORY[0x22A68E750](v11, v29);
                    swift_release();
                    goto LABEL_37;
                  }
                }
              }
            }
            uint64_t v12 = makeEntity(for:)(v11);
          }
          uint64_t v29 = v12;
LABEL_37:
          result = REEntityGetChildCount();
          if (v8 >= result)
          {
            __break(1u);
LABEL_47:
            __break(1u);
            goto LABEL_48;
          }
          *(void *)(a2 + 8 * v8) = v29;
          if (v9 == v8) {
            goto LABEL_44;
          }
          v5 = (void *)(v8 + 1);
          if (v8 + 1 >= REEntityGetChildCount())
          {
            uint64_t v6 = v8 + 1;
LABEL_44:
            v5 = v31;
            goto LABEL_45;
          }
          ++v8;
        }
        while (v8 < REEntityGetChildCount());
      }
      __break(1u);
    }
    goto LABEL_42;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  long long v28;
  uint64_t v29;

  v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    uint64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  uint64_t v12 = 0;
  unint64_t v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v29 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  BOOL v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int v16 = v15 | (v12 << 6);
  while (1)
  {
    unint64_t v20 = *(void *)(a4 + 56) + 80 * v16;
    v21 = *(unsigned char *)(v20 + 16);
    ++v13;
    uint64_t v22 = *(void *)(v20 + 24);
    unint64_t v23 = *(unsigned char *)(v20 + 32);
    unint64_t v24 = *(unsigned char *)(v20 + 33);
    v26 = *(void *)(v20 + 40);
    uint64_t v25 = *(void *)(v20 + 48);
    Class v27 = *(unsigned char *)(v20 + 72);
    uint64_t v28 = *(_OWORD *)(v20 + 56);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v20;
    *(unsigned char *)(v11 + 16) = v21;
    *(void *)(v11 + 24) = v22;
    *(unsigned char *)(v11 + 32) = v23;
    *(unsigned char *)(v11 + 33) = v24;
    *(void *)(v11 + 40) = v26;
    *(void *)(v11 + 48) = v25;
    *(_OWORD *)(v11 + 56) = v28;
    *(unsigned char *)(v11 + 72) = v27;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 80;
    result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    uint64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        uint64_t v9 = 0;
        uint64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        Swift::Int v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          uint64_t v17 = v19;
          goto LABEL_18;
        }
        uint64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            uint64_t v17 = v12;
            goto LABEL_18;
          }
          Swift::Int v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            uint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              uint64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                uint64_t v9 = 0;
                uint64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        uint64_t v9 = 0;
        uint64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      v7 = v29;
      goto LABEL_39;
    }
LABEL_18:
    uint64_t v9 = (v18 - 1) & v18;
    int v16 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *specialized Sequence._copySequenceContents(initializing:)(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    uint64_t v7 = a5;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = a6;
    result[3] = v7;
    return (void *)a3;
  }
  if (a3 < 0) {
    goto LABEL_60;
  }
  if (a5 == a6)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  v43 = result;
  uint64_t v44 = a5;
  uint64_t v8 = a5 + 1;
  if (__OFADD__(a5, 1)) {
    goto LABEL_59;
  }
  uint64_t v9 = a2;
  uint64_t v10 = (void *)&static ForceEffectLogger.logger;
  uint64_t v11 = 1;
  uint64_t v12 = a5;
  uint64_t v45 = a3;
  while (2)
  {
    uint64_t v47 = v12;
    uint64_t v7 = v8;
    result = (void *)REEntityGetComponentCount();
    if (v8 >= (uint64_t)result) {
      goto LABEL_11;
    }
    while (1)
    {
      uint64_t Shared = REEngineGetShared();
      if (Shared)
      {
        uint64_t v15 = Shared;
        if (one-time initialization token for lock != -1) {
          swift_once();
        }
        os_unfair_lock_lock((os_unfair_lock_t)(v10[37] + 16));
        if (!static __ServiceLocator.sharedEngine || *((void *)static __ServiceLocator.sharedEngine + 3) != v15)
        {
          type metadata accessor for __Engine();
          swift_allocObject();
          static __ServiceLocator.sharedEngine = __Engine.init(coreEngine:)(v15);
          swift_release();
          specialized static SceneManager.customComponentType(_:)((uint64_t)&type metadata for __EntityInfoComponent, (uint64_t)&protocol witness table for __EntityInfoComponent);
          specialized static SceneManager.customComponentType(_:)((uint64_t)&type metadata for SceneOriginComponent, (uint64_t)&protocol witness table for SceneOriginComponent);
        }
        os_unfair_lock_unlock((os_unfair_lock_t)(v10[37] + 16));
        int v16 = static __ServiceLocator.sharedEngine;
        if (static __ServiceLocator.sharedEngine) {
          goto LABEL_44;
        }
      }
      else
      {
        static __ServiceLocator.sharedEngine = 0;
        swift_release();
        int v16 = static __ServiceLocator.sharedEngine;
        if (static __ServiceLocator.sharedEngine) {
          goto LABEL_44;
        }
      }
      uint64_t Default = REEngineConfigurationCreateDefault();
      type metadata accessor for EngineConfiguration();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = Default;
      if ((int)REGetRetainCount() >= 2)
      {
        swift_retain();
        uint64_t v19 = REEngineConfigurationClone();
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v19;
        swift_release_n();
        uint64_t v18 = v20;
      }
      REEngineConfigurationSetClockMode();
      if (one-time initialization token for defaultServices != -1) {
        swift_once();
      }
      if ((int)REGetRetainCount() >= 2)
      {
        swift_retain();
        uint64_t v21 = REEngineConfigurationClone();
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v21;
        swift_release_n();
        uint64_t v18 = v22;
      }
      REEngineConfigurationSetServicesToCreate();
      if ((int)REGetRetainCount() >= 2)
      {
        swift_retain();
        uint64_t v23 = REEngineConfigurationClone();
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v23;
        swift_release_n();
        uint64_t v18 = v24;
      }
      REEngineConfigurationSetServicesToUpdate();
      if ((int)REGetRetainCount() >= 2)
      {
        swift_retain();
        uint64_t v25 = REEngineConfigurationClone();
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v25;
        swift_release_n();
        uint64_t v18 = v26;
      }
      REEngineConfigurationSetStartupOptions();
      if (one-time initialization token for defaultRenderFlags != -1) {
        swift_once();
      }
      if ((int)REGetRetainCount() >= 2)
      {
        swift_retain();
        uint64_t v27 = REEngineConfigurationClone();
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = v27;
        swift_release_n();
        uint64_t v18 = v28;
      }
      uint64_t v10 = (void *)&static ForceEffectLogger.logger;
      REEngineConfigurationSetRenderFlags();
      if (!specialized static __ServiceLocator.__sharedEngine.getter())
      {
        v49[0] = v18;
        uint64_t v29 = specialized static __Engine.makeSharedEngine(_:)(v49);
        REEngineSetShared();
        static __ServiceLocator.sharedEngine = v29;
        uint64_t v10 = &static ForceEffectLogger.logger;
        swift_release();
        static __ServiceLocator.createdSharedEngine = 1;
      }
      swift_release();
      specialized static SceneManager.customComponentType(_:)((uint64_t)&type metadata for __EntityInfoComponent, (uint64_t)&protocol witness table for __EntityInfoComponent);
      result = (void *)specialized static SceneManager.customComponentType(_:)((uint64_t)&type metadata for SceneOriginComponent, (uint64_t)&protocol witness table for SceneOriginComponent);
      int v16 = static __ServiceLocator.sharedEngine;
      if (!static __ServiceLocator.sharedEngine) {
        goto LABEL_62;
      }
LABEL_44:
      result = (void *)swift_beginAccess();
      uint64_t v30 = v16[5];
      if (!v30) {
        goto LABEL_61;
      }
      uint64_t v31 = v30 + 80;
      swift_beginAccess();
      outlined init with copy of __REAssetService(v31, (uint64_t)v49);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for __SceneService);
      type metadata accessor for SceneManager();
      swift_dynamicCast();
      REEntityGetComponentAtIndex();
      Swift::UInt Class = REComponentGetClass();
      swift_beginAccess();
      uint64_t v33 = *(void *)(v48 + 16);
      swift_beginAccess();
      uint64_t v34 = *(void *)(v33 + 24);
      if (*(void *)(v34 + 16))
      {
        uint64_t v35 = specialized __RawDictionaryStorage.find<A>(_:)(Class);
        if (v36)
        {
          int v13 = *(unsigned __int8 *)(*(void *)(v34 + 56) + 80 * v35 + 48);
          result = (void *)swift_release();
          if (v13 == 2) {
            goto LABEL_11;
          }
          goto LABEL_17;
        }
      }
      if (one-time initialization token for handlesToCustomComponentTypes != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v37 = static SceneManager.handlesToCustomComponentTypes;
      if (*(void *)(static SceneManager.handlesToCustomComponentTypes + 16))
      {
        uint64_t v38 = specialized __RawDictionaryStorage.find<A>(_:)(Class);
        if (v39) {
          break;
        }
      }
      swift_endAccess();
LABEL_55:
      swift_release();
LABEL_17:
      ++v7;
      result = (void *)REEntityGetComponentCount();
      if (v7 >= (uint64_t)result) {
        goto LABEL_11;
      }
    }
    uint64_t v40 = *(void *)(*(void *)(v37 + 56) + 16 * v38);
    swift_endAccess();
    uint64_t v41 = *(void *)(v48 + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v41 + 16) + 16))
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v40);
      if (v42) {
        goto LABEL_55;
      }
    }
    result = (void *)swift_release();
LABEL_11:
    *uint64_t v9 = v47;
    a3 = v45;
    if (v11 == v45) {
      goto LABEL_58;
    }
    if (v7 == a6)
    {
      uint64_t v7 = a6;
      a3 = v11;
LABEL_58:
      result = v43;
      a5 = v44;
      goto LABEL_7;
    }
    ++v11;
    ++v9;
    uint64_t v12 = v7;
    uint64_t v8 = v7 + 1;
    if (!__OFADD__(v7, 1)) {
      continue;
    }
    break;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v5 = (void *)result;
  if (!a2) {
    goto LABEL_11;
  }
  uint64_t v6 = a3;
  if (!a3) {
    goto LABEL_12;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (Scene.AnchorCollection.endIndex.getter() >= 1)
    {
      result = Scene.AnchorCollection.subscript.getter(0);
      *a2 = result;
      a2[1] = v8;
      if (v6 != 1)
      {
        uint64_t v9 = a2 + 3;
        uint64_t v10 = 1;
        while (v6 != v10)
        {
          if (v10 >= Scene.AnchorCollection.endIndex.getter())
          {
            uint64_t v6 = v10;
            goto LABEL_12;
          }
          result = Scene.AnchorCollection.subscript.getter(v10);
          *(v9 - 1) = result;
          *uint64_t v9 = v11;
          v9 += 2;
          if (v6 == ++v10) {
            goto LABEL_12;
          }
        }
        __break(1u);
        goto LABEL_15;
      }
LABEL_12:
      void *v5 = a4;
      v5[1] = v6;
      return v6;
    }
LABEL_11:
    uint64_t v6 = 0;
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;

  v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *specialized Sequence._copySequenceContents(initializing:)(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *specialized Sequence._copySequenceContents(initializing:)(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v28 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v29 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    unint64_t v18 = *(void *)(a4 + 56) + (v14 << 6);
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v21 = *(void *)(v18 + 32);
    __int16 v23 = *(_WORD *)(v18 + 40);
    int v24 = *(_DWORD *)(v18 + 44);
    uint64_t v26 = *(void *)(v18 + 48);
    uint64_t v25 = *(void *)(v18 + 56);
    *(void *)uint64_t v10 = *(void *)v18;
    *(void *)(v10 + 8) = v19;
    *(void *)(v10 + 16) = v20;
    *(void *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v21;
    *(_WORD *)(v10 + 40) = v23;
    *(_DWORD *)(v10 + 44) = v24;
    *(void *)(v10 + 48) = v26;
    *(void *)(v10 + 56) = v25;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v29)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v29)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v29)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v29)
              {
                unint64_t v8 = 0;
                int64_t v11 = v29 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v27;
      result = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  long long v28;
  uint64_t v29;
  void *v30;

  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  int64_t v29 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v30 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  int64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    uint64_t v19 = *(void *)(a4 + 56) + 80 * v15;
    ++v12;
    uint64_t v20 = *(void *)(v19 + 24);
    uint64_t v21 = *(_DWORD *)(v19 + 32);
    uint64_t v22 = *(unsigned char *)(v19 + 36);
    __int16 v23 = *(void *)(v19 + 40);
    int v24 = *(unsigned char *)(v19 + 48);
    uint64_t v26 = *(void *)(v19 + 56);
    uint64_t v25 = *(void *)(v19 + 64);
    uint64_t v27 = *(void *)(v19 + 72);
    uint64_t v28 = *(_OWORD *)(v19 + 8);
    *(void *)uint64_t v10 = *(void *)v19;
    *(_OWORD *)(v10 + 8) = v28;
    *(void *)(v10 + 24) = v20;
    *(_DWORD *)(v10 + 32) = v21;
    *(unsigned char *)(v10 + 36) = v22;
    *(void *)(v10 + 40) = v23;
    *(unsigned char *)(v10 + 48) = v24;
    *(void *)(v10 + 56) = v26;
    *(void *)(v10 + 64) = v25;
    *(void *)(v10 + 72) = v27;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    unint64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    int64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        int64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        unint64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        int64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          unint64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          int64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            unint64_t v16 = v11;
            goto LABEL_18;
          }
          unint64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          int64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              unint64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              int64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v29;
      result = v30;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    int64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t specialized Array._copyContents(initializing:)(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = lazy protocol witness table accessor for type [Component] and conformance [A](a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t outlined destroy of GeometricPin?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometricPin?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined release of AnimationLibraryComponent(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  outlined consume of String??(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *outlined release of String??(uint64_t *a1)
{
  return a1;
}

uint64_t outlined init with copy of MeshResource._Proto_Level_v1(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined retain of IKRig.Constraint(uint64_t a1)
{
  return a1;
}

CGImageRef specialized static CGImageRef.image(with:)(uint64_t a1, unint64_t a2)
{
  CGImageRef ImageAtIndex = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 == a1 >> 32) {
        return 0;
      }
      goto LABEL_7;
    case 2uLL:
      if (*(void *)(a1 + 16) != *(void *)(a1 + 24)) {
        goto LABEL_7;
      }
      return 0;
    case 3uLL:
      return ImageAtIndex;
    default:
      if ((a2 & 0xFF000000000000) == 0) {
        return 0;
      }
LABEL_7:
      CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v4 = CGImageSourceCreateWithData(isa, 0);

      if (!v4) {
        return 0;
      }
      size_t PrimaryImageIndex = CGImageSourceGetPrimaryImageIndex(v4);
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v4, PrimaryImageIndex, 0);

      return ImageAtIndex;
  }
}

uint64_t REEventDispatcher.receive(_:)(uint64_t a1)
{
  v15[2] = a1;
  uint64_t v2 = type metadata accessor for AnySubscriber();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - v4;
  uint64_t v6 = type metadata accessor for Optional();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = (os_unfair_lock_s *)(*(void *)(v1 + 64) + 16);
  os_unfair_lock_lock(v9);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 72);
  swift_retain();
  os_unfair_lock_unlock(v9);
  v15[1] = v10;
  OrderedCoatCheckBag.makeIterator()(v10, v2);
  AnyIterator.next()();
  int64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v11(v8, 1, v2) != 1)
  {
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    do
    {
      v12(v5, v8, v2);
      dispatch thunk of AnySubscriberBase.receive(_:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      AnyIterator.next()();
    }
    while (v11(v8, 1, v2) != 1);
  }
  swift_release();
  uint64_t v13 = static Subscribers.Demand.unlimited.getter();
  swift_release();
  return v13;
}

uint64_t REEventDispatcher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v102 = a3;
  uint64_t v98 = *(void *)(*(void *)v3 + 80);
  uint64_t v6 = type metadata accessor for AnySubscriber();
  uint64_t v91 = type metadata accessor for Optional();
  uint64_t v97 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  v89 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v82 - v9;
  uint64_t v11 = *(void *)(a2 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v13);
  v84 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v87 = (char *)&v82 - v15;
  MEMORY[0x270FA5388](v16);
  v86 = (char *)&v82 - v17;
  MEMORY[0x270FA5388](v18);
  v101 = (char *)&v82 - v19;
  MEMORY[0x270FA5388](v20);
  v88 = (char *)&v82 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v99 = (uint64_t)&v82 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v82 - v25;
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v28);
  v85 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  v92 = (void (**)(char *, uint64_t))((char *)&v82 - v31);
  __n128 v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v82 - v34;
  uint64_t v90 = v11;
  char v36 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  v36(v26, a1, a2, v33);
  int v37 = swift_dynamicCast();
  uint64_t v103 = v27;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v100 = v35;
  v94 = (void (*)(char *, uint64_t, uint64_t))v36;
  uint64_t v95 = v11 + 16;
  if (v37)
  {
    v38(v10, 0, 1, v6);
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v35, v10, v6);
    uint64_t v39 = a2;
  }
  else
  {
    v38(v10, 1, 1, v6);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v97 + 8);
    v97 += 8;
    v82 = v40;
    v40(v10, v91);
    uint64_t v41 = v99;
    uint64_t v83 = a1;
    ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v99, a1, a2);
    ((void (*)(char *, uint64_t, uint64_t))v36)(v88, v41, a2);
    char v42 = v89;
    uint64_t v39 = a2;
    if (swift_dynamicCast())
    {
      v38(v42, 0, 1, v6);
      uint64_t v43 = v103;
      uint64_t v44 = v42;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v103 + 32);
      v46 = v85;
      v45(v85, v44, v6);
      uint64_t v47 = v92;
      v45((char *)v92, v46, v6);
      a1 = v83;
      uint64_t v35 = v100;
      uint64_t v48 = v90;
    }
    else
    {
      v38(v42, 1, 1, v6);
      v82(v42, v91);
      v49 = v92;
      uint64_t v50 = v99;
      dispatch thunk of CustomCombineIdentifierConvertible.combineIdentifier.getter();
      type metadata accessor for AnySubscriberBox();
      ((void (*)(char *, uint64_t, uint64_t))v36)(v101, v50, a2);
      uint64_t *v49 = AnySubscriberBox.__allocating_init(_:)();
      ((void (*)(char *, uint64_t, uint64_t))v36)(v86, v50, a2);
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CustomStringConvertible);
      uint64_t v51 = v50;
      if (swift_dynamicCast())
      {
        outlined init with take of BindableDataInternal(&v104, (uint64_t)&v107);
        outlined init with take of BindableDataInternal(&v107, (uint64_t)&v104);
        uint64_t v52 = swift_allocObject();
        outlined init with take of BindableDataInternal(&v104, v52 + 16);
        v53 = partial apply for closure #1 in AnySubscriber.init<A>(_:);
      }
      else
      {
        uint64_t v106 = 0;
        long long v104 = 0u;
        long long v105 = 0u;
        outlined destroy of BodyTrackingComponent?((uint64_t)&v104, &demangling cache variable for type metadata for CustomStringConvertible?);
        swift_getDynamicType();
        uint64_t v54 = _typeName(_:qualified:)();
        uint64_t v56 = v55;
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = v54;
        *(void *)(v52 + 24) = v56;
        v53 = protocol witness for CodingKey.stringValue.getter in conformance UnkeyedDC.IndexedCodingKey;
      }
      uint64_t v43 = v103;
      uint64_t v48 = v90;
      uint64_t v47 = v92;
      v92[1] = v53;
      v47[2] = v52;
      v57 = v101;
      ((void (*)(char *, uint64_t, uint64_t))v36)(v101, v51, v39);
      unint64_t v58 = (*(unsigned __int8 *)(v48 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      v59 = (void *)swift_allocObject();
      v59[2] = v98;
      v59[3] = v39;
      v59[4] = v102;
      v60 = (char *)v59 + v58;
      uint64_t v61 = v99;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v60, v57, v39);
      v47[3] = partial apply for closure #3 in AnySubscriber.init<A>(_:);
      v47[4] = v59;
      ((void (*)(char *, uint64_t, uint64_t))v36)(v87, v61, v39);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CustomPlaygroundDisplayConvertible);
      if (swift_dynamicCast())
      {
        outlined init with take of BindableDataInternal(&v104, (uint64_t)&v107);
        outlined init with take of BindableDataInternal(&v107, (uint64_t)&v104);
        uint64_t v62 = swift_allocObject();
        outlined init with take of BindableDataInternal(&v104, v62 + 16);
        v47[5] = partial apply for closure #4 in AnySubscriber.init<A>(_:);
        v47[6] = v62;
        a1 = v83;
        uint64_t v35 = v100;
      }
      else
      {
        uint64_t v106 = 0;
        long long v104 = 0u;
        long long v105 = 0u;
        outlined destroy of BodyTrackingComponent?((uint64_t)&v104, &demangling cache variable for type metadata for CustomPlaygroundDisplayConvertible?);
        ((void (*)(char *, uint64_t, uint64_t))v36)(v84, v61, v39);
        int v63 = swift_dynamicCast();
        a1 = v83;
        uint64_t v35 = v100;
        if (v63)
        {
          outlined init with take of BindableDataInternal(&v104, (uint64_t)&v107);
          outlined init with take of BindableDataInternal(&v107, (uint64_t)&v104);
          uint64_t v64 = swift_allocObject();
          outlined init with take of BindableDataInternal(&v104, v64 + 16);
          uint64_t v47 = v92;
          v92[5] = partial apply for closure #5 in AnySubscriber.init<A>(_:);
          v47[6] = v64;
        }
        else
        {
          uint64_t v106 = 0;
          long long v104 = 0u;
          long long v105 = 0u;
          outlined destroy of BodyTrackingComponent?((uint64_t)&v104, &demangling cache variable for type metadata for CustomStringConvertible?);
          swift_getDynamicType();
          uint64_t v65 = _typeName(_:qualified:)();
          uint64_t v67 = v66;
          uint64_t v68 = swift_allocObject();
          *(void *)(v68 + 16) = v65;
          *(void *)(v68 + 24) = v67;
          uint64_t v47 = v92;
          v92[5] = partial apply for closure #6 in AnySubscriber.init<A>(_:);
          v47[6] = v68;
        }
      }
    }
    (*(void (**)(char *, void *, uint64_t))(v43 + 32))(v35, v47, v6);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v99, v39);
  }
  uint64_t v93 = v6;
  v69 = v96;
  v70 = (os_unfair_lock_s *)(v96[8] + 16);
  os_unfair_lock_lock(v70);
  swift_beginAccess();
  type metadata accessor for OrderedCoatCheckBag();
  uint64_t v90 = OrderedCoatCheckBag.append(_:)((uint64_t)v35);
  uint64_t v72 = v71;
  swift_endAccess();
  os_unfair_lock_unlock(v70);
  uint64_t v73 = v98;
  uint64_t v74 = v102;
  uint64_t v75 = type metadata accessor for REEventDispatcher.EventSubscription();
  uint64_t v99 = v69[3];
  uint64_t v97 = v69[4];
  v92 = (void *)v69[5];
  uint64_t v76 = v69[7];
  uint64_t v91 = v69[6];
  uint64_t v77 = (uint64_t)v101;
  v94(v101, a1, v39);
  uint64_t v78 = swift_allocObject();
  swift_weakInit();
  v79 = (void *)swift_allocObject();
  v79[2] = v73;
  v79[3] = v39;
  v79[4] = v74;
  v79[5] = v78;
  v79[6] = v90;
  v79[7] = v72;
  swift_allocObject();
  swift_bridgeObjectRetain();
  v80 = REEventDispatcher.EventSubscription.init(coreHandle:sourceObject:componentType:matching:downstream:cancellationHandler:)(v99, v97, (uint64_t)v92, v91, v76, v77, (uint64_t)partial apply for closure #1 in REEventDispatcher.receive<A>(subscriber:), (uint64_t)v79);
  uint64_t v108 = v75;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v107 = v80;
  dispatch thunk of Subscriber.receive(subscription:)();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v100, v93);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
}

uint64_t closure #1 in REEventDispatcher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, void *a3)
{
  type metadata accessor for AnySubscriber();
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-v7];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(os_unfair_lock_s **)(result + 64);
    swift_retain();
    os_unfair_lock_lock(v11 + 4);
    swift_release();
    swift_beginAccess();
    type metadata accessor for OrderedCoatCheckBag();
    OrderedCoatCheckBag.remove(_:)(a2, a3, v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_endAccess();
    uint64_t v12 = *(os_unfair_lock_s **)(v10 + 64);
    swift_retain();
    os_unfair_lock_unlock(v12 + 4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t *REEventDispatcher.EventSubscription.__allocating_init(coreHandle:sourceObject:componentType:matching:downstream:cancellationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return REEventDispatcher.EventSubscription.init(coreHandle:sourceObject:componentType:matching:downstream:cancellationHandler:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t *REEventDispatcher.EventSubscription.init(coreHandle:sourceObject:componentType:matching:downstream:cancellationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = a7;
  uint64_t v37 = a8;
  uint64_t v38 = a6;
  v29[1] = a3;
  v29[2] = a4;
  uint64_t v35 = a2;
  uint64_t v10 = *v8;
  uint64_t v11 = *v8;
  uint64_t v31 = a5;
  uint64_t v32 = v11;
  uint64_t v12 = *(void *)(v10 + 88);
  uint64_t v30 = type metadata accessor for Optional();
  uint64_t v13 = *(void *)(v30 - 8);
  __n128 v14 = MEMORY[0x270FA5388](v30);
  uint64_t v16 = (char *)v29 - v15;
  v8[3] = 0;
  v8[4] = 0;
  *((unsigned char *)v8 + 40) = 1;
  uint64_t v17 = (uint64_t)v8 + *(void *)(v10 + 120);
  uint64_t v18 = *(void *)(v12 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56);
  v19(v17, 1, 1, v12, v14);
  uint64_t v20 = (uint64_t *)((char *)v8 + *(void *)(*v8 + 128));
  *uint64_t v20 = 0;
  v20[1] = 0;
  *(uint64_t *)((char *)v8 + *(void *)(*v8 + 136)) = 0;
  uint64_t v33 = v18;
  uint64_t v34 = a1;
  v8[2] = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, v38, v12);
  ((void (*)(char *, void, uint64_t, uint64_t))v19)(v16, 0, 1, v12);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 40))(v17, v16, v30);
  uint64_t v21 = v31;
  swift_endAccess();
  getEventID<A>(_:)(*(void *)(v32 + 80), *(void *)(v32 + 80));
  swift_retain();
  if (v21)
  {
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))partial apply for implicit closure #2 in implicit closure #1 in REEventDispatcher.EventSubscription.init(coreHandle:sourceObject:componentType:matching:downstream:cancellationHandler:);
    uint64_t v44 = v8;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    uint64_t v41 = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    char v42 = &block_descriptor_4;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_release();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    RETimelineEventFilter();
  }
  else
  {
    uint64_t v43 = partial apply for implicit closure #4 in implicit closure #3 in REEventDispatcher.EventSubscription.init(coreHandle:sourceObject:componentType:matching:downstream:cancellationHandler:);
    uint64_t v44 = v8;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    uint64_t v41 = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    char v42 = &block_descriptor_9;
    uint64_t v22 = _Block_copy(&aBlock);
  }
  swift_release();
  uint64_t v23 = REEventBusSubscribeWithMatch();
  uint64_t v25 = v24;
  _Block_release(v22);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v38, v12);
  v8[3] = v23;
  v8[4] = v25;
  *((unsigned char *)v8 + 40) = 0;
  uint64_t v26 = *v20;
  uint64_t v27 = v37;
  *uint64_t v20 = v36;
  v20[1] = v27;
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v26);
  return v8;
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v6 = v5(a2, a3);
  swift_release();
  return v6;
}

uint64_t REEventDispatcher.EventSubscription.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0 + *(void *)(*(void *)v0 + 128)));
  return v0;
}

uint64_t REEventDispatcher.EventSubscription.__deallocating_deinit()
{
  REEventDispatcher.EventSubscription.deinit();

  return swift_deallocClassInstance();
}

uint64_t REEventDispatcher.deinit()
{
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t REEventDispatcher.__deallocating_deinit()
{
  REEventDispatcher.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for Publisher.receive<A>(subscriber:) in conformance REEventDispatcher<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return REEventDispatcher.receive<A>(subscriber:)(a1, a2, a3);
}

uint64_t protocol witness for Subscriber.receive(subscription:) in conformance REEventDispatcher<A>(void *a1)
{
  return specialized REEventDispatcher.receive(subscription:)(a1);
}

uint64_t protocol witness for Subscriber.receive(_:) in conformance REEventDispatcher<A>(uint64_t a1)
{
  return REEventDispatcher.receive(_:)(a1);
}

uint64_t REEventDispatcher.EventSubscription.request(_:)(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 136));
  swift_beginAccess();
  uint64_t v4 = *v3;
  static Subscribers.Demand.unlimited.getter();
  if (static Subscribers.Demand.== infix(_:_:)()) {
    return swift_endAccess();
  }
  static Subscribers.Demand.unlimited.getter();
  char v5 = static Subscribers.Demand.== infix(_:_:)();
  uint64_t v6 = static Subscribers.Demand.unlimited.getter();
  if (v5)
  {
LABEL_9:
    *uint64_t v3 = v6;
    return swift_endAccess();
  }
  uint64_t result = static Subscribers.Demand.== infix(_:_:)();
  if (result) {
    goto LABEL_7;
  }
  if ((v4 | a1) < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = v4 + a1;
  if (__OFADD__(v4, a1))
  {
LABEL_7:
    uint64_t v6 = static Subscribers.Demand.unlimited.getter();
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) == 0) {
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t REEventDispatcher.EventSubscription.cancel()()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  uint64_t v2 = type metadata accessor for Optional();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v1 - 8) + 56))((char *)&v13 - v5, 1, 1, v1, v4);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 120);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v7, v6, v2);
  swift_endAccess();
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    MEMORY[0x22A68E810](*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = 0;
    *(unsigned char *)(v0 + 40) = 1;
  }
  uint64_t v8 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 128));
  uint64_t v9 = (void (*)(uint64_t))*v8;
  if (*v8)
  {
    uint64_t v10 = swift_retain();
    v9(v10);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v9);
    uint64_t v11 = *v8;
  }
  else
  {
    uint64_t v11 = 0;
  }
  *uint64_t v8 = 0;
  v8[1] = 0;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v11);
}

uint64_t protocol witness for Subscription.request(_:) in conformance REEventDispatcher<A>.EventSubscription<A1>(uint64_t a1)
{
  return REEventDispatcher.EventSubscription.request(_:)(a1);
}

uint64_t protocol witness for Cancellable.cancel() in conformance REEventDispatcher<A>.EventSubscription<A1>()
{
  return REEventDispatcher.EventSubscription.cancel()();
}

uint64_t protocol witness for CustomCombineIdentifierConvertible.combineIdentifier.getter in conformance REEventDispatcher<A>.EventSubscription<A1>()
{
  return CustomCombineIdentifierConvertible<>.combineIdentifier.getter();
}

uint64_t __REEventSubscriber.combineIdentifier.getter()
{
  return CustomCombineIdentifierConvertible<>.combineIdentifier.getter();
}

uint64_t type metadata accessor for REEventDispatcher()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __REEventSubscriber.init(dispatcher:sourceObject:componentType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a2;
  a4[1] = a3;
  a4[2] = 0;
  a4[3] = 0;
  a4[4] = result;
  return result;
}

uint64_t __REEventSubscriber.receive(subscription:)(uint64_t a1, uint64_t a2)
{
  return specialized __REEventSubscriber.receive(subscription:)(a1, *(void *)(a2 + 16));
}

uint64_t __REEventSubscriber.receive(_:)(uint64_t a1)
{
  return REEventDispatcher.receive(_:)(a1);
}

uint64_t protocol witness for Subscriber.receive(subscription:) in conformance __REEventSubscriber<A>(uint64_t a1, uint64_t a2)
{
  return specialized __REEventSubscriber.receive(subscription:)(a1, *(void *)(a2 + 16));
}

uint64_t closure #3 in AnySubscriber.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  v22[1] = a3;
  uint64_t v5 = type metadata accessor for Mirror.AncestorRepresentation();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Mirror.DisplayStyle?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = MEMORY[0x270FA5388](v16);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v18((char *)v22 - v19, a1, a2, v17);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CustomReflectable);
  if (swift_dynamicCast())
  {
    outlined init with take of BindableDataInternal(v23, (uint64_t)v25);
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    dispatch thunk of CustomReflectable.customMirror.getter();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    outlined destroy of BodyTrackingComponent?((uint64_t)v23, &demangling cache variable for type metadata for CustomReflectable?);
    ((void (*)(char *, uint64_t, uint64_t))v18)(v15, a1, a2);
    uint64_t v21 = type metadata accessor for Mirror.DisplayStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8E830], v5);
    return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)();
  }
}

void *specialized REEventDispatcher.init(eventBus:coreHandle:sourceObject:componentType:matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ManagedBuffer<(), os_unfair_lock_s>);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  v6[8] = v13;
  type metadata accessor for AnySubscriber();
  v6[9] = __RKEntityLookAtCameraAction.reversed()();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  swift_unownedRetain();
  return v6;
}

{
  void *v6;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ManagedBuffer<(), os_unfair_lock_s>);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  v6[8] = v13;
  v6[9] = 0;
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  swift_unownedRetain();
  return v6;
}

void *specialized REEventDispatcher.__allocating_init(eventBus:coreHandle:sourceObject:componentType:matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return specialized REEventDispatcher.init(eventBus:coreHandle:sourceObject:componentType:matching:)(a1, a2, a3, a4, a5, a6);
}

uint64_t specialized REEventDispatcher.receive(subscription:)(void *a1)
{
  return dispatch thunk of Subscription.request(_:)();
}

uint64_t base witness table accessor for CustomCombineIdentifierConvertible in __REEventSubscriber<A>()
{
  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for Subscriber.Failure : Error in __REEventSubscriber<A>()
{
  return MEMORY[0x263F8E658];
}

uint64_t type metadata completion function for REEventDispatcher()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata completion function for REEventDispatcher.EventSubscription()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for REEventDispatcher.EventSubscription()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for __REEventSubscriber()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for __REEventSubscriber(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for __REEventSubscriber(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for __REEventSubscriber(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for __REEventSubscriber(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for __REEventSubscriber(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for __REEventSubscriber()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t base witness table accessor for Cancellable in REEventDispatcher<A>.EventSubscription<A1>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for CustomCombineIdentifierConvertible in REEventDispatcher<A>.EventSubscription<A1>()
{
  return swift_getWitnessTable();
}

uint64_t base witness table accessor for CustomCombineIdentifierConvertible in REEventDispatcher<A>()
{
  return swift_getWitnessTable();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t specialized REEventDispatcher.EventSubscription.handleEvent(sourceObject:payloadRef:)(uint64_t a1)
{
  uint64_t v42 = a1;
  uint64_t v40 = *v1;
  uint64_t v2 = v40;
  uint64_t v43 = *(void *)(v40 + 80);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v38 = v3;
  uint64_t v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v36 - v5;
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  __n128 v17 = (char *)&v36 - v16;
  uint64_t v18 = (uint64_t)v1 + *(void *)(v2 + 120);
  swift_beginAccess();
  uint64_t v19 = v18;
  uint64_t v20 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v21(v17, v10, v6);
  uint64_t v22 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 136));
  swift_beginAccess();
  uint64_t v23 = *v22;
  static Subscribers.Demand.unlimited.getter();
  uint64_t result = static Subscribers.Demand.== infix(_:_:)();
  uint64_t v25 = v17;
  uint64_t v26 = v43;
  if ((result & 1) == 0)
  {
    if (v23 < 0)
    {
      __break(1u);
      goto LABEL_22;
    }
    if (!v23)
    {
LABEL_19:
      (*(void (**)(char *, uint64_t))(v11 + 8))(v25, v6);
      return 0;
    }
  }
  UnsafeRawPointer.load<A>(fromByteOffset:as:)();
  swift_beginAccess();
  uint64_t v27 = *v22;
  static Subscribers.Demand.unlimited.getter();
  if ((static Subscribers.Demand.== infix(_:_:)() & 1) == 0)
  {
    static Subscribers.Demand.unlimited.getter();
    uint64_t result = static Subscribers.Demand.== infix(_:_:)();
    if (result)
    {
      uint64_t v28 = static Subscribers.Demand.unlimited.getter();
LABEL_12:
      *uint64_t v22 = v28;
      goto LABEL_13;
    }
    if ((v27 & 0x8000000000000000) == 0)
    {
      if (v27)
      {
        uint64_t v28 = v27 - 1;
        goto LABEL_12;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_13:
  swift_endAccess();
  if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
  {
    uint64_t v35 = v44;
    dispatch thunk of Subscriber.receive(_:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v26);
    goto LABEL_19;
  }
  uint64_t v37 = v21;
  uint64_t v42 = v11 + 32;
  uint64_t result = (uint64_t)specialized static __ServiceLocator.__sharedEngine.getter();
  if (result)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v25, v6);
    uint64_t v29 = v41;
    uint64_t v30 = v39;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v39, v44, v26);
    uint64_t v31 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v36 = v25;
    uint64_t v32 = (v31 + 40) & ~v31;
    unint64_t v33 = (v12 + *(unsigned __int8 *)(v29 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v34 = (char *)swift_allocObject();
    *((void *)v34 + 2) = v26;
    *((void *)v34 + 3) = v6;
    *((void *)v34 + 4) = *(void *)(v40 + 96);
    v37(&v34[v32], v14, v6);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v34[v33], v30, v26);
    swift_retain();
    __Engine.asyncOnEngineQueue(_:)((uint64_t)partial apply for closure #1 in REEventDispatcher.EventSubscription.handleEvent(sourceObject:payloadRef:), (uint64_t)v34);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v44, v26);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v36, v6);
    return 0;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_227F55DE8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + *(void *)(v2 + 64) + v6) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v3 | v6 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);

  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t partial apply for closure #1 in REEventDispatcher.EventSubscription.handleEvent(sourceObject:payloadRef:)()
{
  return dispatch thunk of Subscriber.receive(_:)();
}

uint64_t partial apply for implicit closure #4 in implicit closure #3 in REEventDispatcher.EventSubscription.init(coreHandle:sourceObject:componentType:matching:downstream:cancellationHandler:)(uint64_t a1, uint64_t a2)
{
  return specialized REEventDispatcher.EventSubscription.handleEvent(sourceObject:payloadRef:)(a2);
}

uint64_t sub_227F55FA4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t partial apply for closure #3 in AnySubscriber.init<A>(_:)@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in AnySubscriber.init<A>(_:)(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80)), *(void *)(v1 + 24), a1);
}

uint64_t sub_227F56078()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t partial apply for closure #6 in AnySubscriber.init<A>(_:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  a1[3] = MEMORY[0x263F8D310];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_227F560C8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_227F56100()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t partial apply for closure #1 in REEventDispatcher.receive<A>(subscriber:)()
{
  return closure #1 in REEventDispatcher.receive<A>(subscriber:)(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_227F56148()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t partial apply for closure #5 in AnySubscriber.init<A>(_:)@<X0>(uint64_t *a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t result = dispatch thunk of CustomStringConvertible.description.getter();
  a1[3] = MEMORY[0x263F8D310];
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t partial apply for closure #4 in AnySubscriber.init<A>(_:)()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return dispatch thunk of CustomPlaygroundDisplayConvertible.playgroundDescription.getter();
}

uint64_t partial apply for closure #1 in AnySubscriber.init<A>(_:)()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t one-time initialization function for name()
{
  uint64_t result = MEMORY[0x22A688A50](0xD00000000000001ELL, 0x8000000228350D90);
  static __RKCustomTriggerNotification.name = result;
  return result;
}

{
  uint64_t result;

  uint64_t result = MEMORY[0x22A688A50](0xD000000000000017, 0x800000022835B540);
  static __RKEntityCustomAction.RKEntityCustomActionNotification.name = result;
  return result;
}

uint64_t __RKCustomTrigger.__allocating_init(identifier:customArguments:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = a2;
  if (!a3) {
    a3 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
  }
  *(void *)(v6 + 40) = a3;
  *(_WORD *)(v6 + 16) = 0;
  *(unsigned char *)(v6 + 18) = 0;
  return v6;
}

uint64_t __RKCustomTrigger.init(identifier:customArguments:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  if (a3)
  {
    unint64_t v4 = a3;
    swift_retain();
  }
  else
  {
    swift_retain();
    unint64_t v4 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
  }
  *(void *)(v3 + 40) = v4;
  swift_release();
  *(_WORD *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 18) = 0;
  return v3;
}

uint64_t __RKCustomTrigger.matches(with:)()
{
  type metadata accessor for __RKCustomTrigger();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    uint64_t v2 = v1;
    BOOL v3 = v0[3] == *(void *)(v1 + 24) && v0[4] == *(void *)(v1 + 32);
    if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v4 = v0[5];
      uint64_t v5 = *(void *)(v2 + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v6 = specialized static Dictionary<>.== infix(_:_:)(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v6) {
        return 1;
      }
    }
  }
  type metadata accessor for __RKEntityTriggerGroup();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  swift_beginAccess();
  unint64_t v10 = *(void *)(v9 + 24);
  if (v10 >> 62)
  {
LABEL_36:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = result;
    if (!result) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v7)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_release();
      return v7;
    }
  }
  unint64_t v12 = v10 & 0xC000000000000001;
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = MEMORY[0x22A689930](0, v10);
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v13 = *(void *)(v10 + 32);
    swift_retain();
  }
  char v14 = __RKCustomTrigger.matches(with:)(v13);
  uint64_t result = swift_release();
  if (v14)
  {
LABEL_16:
    uint64_t v7 = 1;
    goto LABEL_20;
  }
  if (v7 == 1)
  {
    uint64_t v7 = 0;
    goto LABEL_20;
  }
  if (v12)
  {
    uint64_t v15 = MEMORY[0x22A689930](1, v10);
    goto LABEL_26;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v15 = *(void *)(v10 + 40);
    swift_retain();
LABEL_26:
    char v16 = __RKCustomTrigger.matches(with:)(v15);
    uint64_t result = swift_release();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v7 - 2;
      while (1)
      {
        uint64_t v7 = v18 != v17;
        if (v18 == v17) {
          goto LABEL_20;
        }
        unint64_t v21 = v17 + 2;
        if (v12)
        {
          uint64_t v19 = MEMORY[0x22A689930](v17 + 2, v10);
          if (__OFADD__(v21, 1)) {
            goto LABEL_35;
          }
        }
        else
        {
          if (v21 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_40;
          }
          uint64_t v19 = *(void *)(v10 + 8 * v17 + 48);
          swift_retain();
          if (__OFADD__(v21, 1))
          {
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
        }
        char v20 = __RKCustomTrigger.matches(with:)(v19);
        uint64_t result = swift_release();
        ++v17;
        if (v20) {
          goto LABEL_20;
        }
      }
    }
    goto LABEL_16;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for __RKCustomTrigger()
{
  return self;
}

uint64_t __RKCustomTrigger.copy(with:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = type metadata accessor for __RKCustomTrigger();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v5;
  *(_WORD *)(v7 + 16) = 0;
  *(unsigned char *)(v7 + 18) = 0;
  a1[3] = v6;
  *a1 = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void __RKCustomTrigger.__allocating_init()()
{
}

void __RKCustomTrigger.init()()
{
}

uint64_t __RKCustomTrigger.__ivar_destroyer()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t __RKCustomTrigger.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t __RKCustomTrigger.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t __RKEntityCustomTrigger.__allocating_init(targetEntity:identifier:customArguments:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 48) = 0;
  swift_beginAccess();
  *(void *)(v8 + 48) = a1;
  swift_retain();
  swift_retain();
  swift_release();
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  if (!a4) {
    a4 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
  }
  swift_release();
  *(void *)(v8 + 40) = a4;
  swift_release();
  *(_WORD *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 18) = 0;
  return v8;
}

uint64_t __RKEntityCustomTrigger.init(targetEntity:identifier:customArguments:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  *(void *)(v4 + 48) = 0;
  swift_beginAccess();
  *(void *)(v4 + 48) = a1;
  swift_retain();
  swift_retain();
  swift_release();
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  if (!a4) {
    a4 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
  }
  swift_release();
  *(void *)(v4 + 40) = a4;
  swift_release();
  *(_WORD *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 18) = 0;
  return v4;
}

uint64_t __RKEntityCustomTrigger.matches(with:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v47 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v47 - v16;
  type metadata accessor for __RKEntityCustomTrigger();
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18) {
    goto LABEL_21;
  }
  uint64_t v19 = v18;
  if ((v51[3] != *(void *)(v18 + 24) || v51[4] != *(void *)(v18 + 32))
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v48 = v5;
  uint64_t v50 = v3;
  char v20 = v51;
  swift_beginAccess();
  if (v20[6])
  {
    swift_retain();
    swift_retain();
    Entity.__interactionIdentifier.getter((uint64_t)v17);
    swift_release();
    uint64_t v21 = v50;
  }
  else
  {
    uint64_t v21 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v17, 1, 1, v2);
    swift_retain();
  }
  swift_beginAccess();
  uint64_t v22 = *(void *)(v19 + 48);
  uint64_t v49 = a1;
  if (v22)
  {
    swift_retain();
    Entity.__interactionIdentifier.getter((uint64_t)v14);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v2);
  }
  uint64_t v23 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of UUID?((uint64_t)v17, (uint64_t)v8);
  outlined init with copy of UUID?((uint64_t)v14, v23);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v24((uint64_t)v8, 1, v2) == 1)
  {
    outlined destroy of BodyTrackingComponent?((uint64_t)v14, &demangling cache variable for type metadata for UUID?);
    outlined destroy of BodyTrackingComponent?((uint64_t)v17, &demangling cache variable for type metadata for UUID?);
    if (v24(v23, 1, v2) == 1)
    {
      outlined destroy of BodyTrackingComponent?((uint64_t)v8, &demangling cache variable for type metadata for UUID?);
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  outlined init with copy of UUID?((uint64_t)v8, (uint64_t)v11);
  if (v24(v23, 1, v2) == 1)
  {
    outlined destroy of BodyTrackingComponent?((uint64_t)v14, &demangling cache variable for type metadata for UUID?);
    outlined destroy of BodyTrackingComponent?((uint64_t)v17, &demangling cache variable for type metadata for UUID?);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v2);
LABEL_16:
    outlined destroy of BodyTrackingComponent?((uint64_t)v8, &demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_20:
    swift_release();
    goto LABEL_21;
  }
  uint64_t v25 = v50;
  uint64_t v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v48, v23, v2);
  lazy protocol witness table accessor for type UUID and conformance UUID();
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
  v28(v26, v2);
  outlined destroy of BodyTrackingComponent?((uint64_t)v14, &demangling cache variable for type metadata for UUID?);
  outlined destroy of BodyTrackingComponent?((uint64_t)v17, &demangling cache variable for type metadata for UUID?);
  v28(v11, v2);
  outlined destroy of BodyTrackingComponent?((uint64_t)v8, &demangling cache variable for type metadata for UUID?);
  if ((v27 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v29 = v51[5];
  uint64_t v30 = *(void *)(v19 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v31 = specialized static Dictionary<>.== infix(_:_:)(v29, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v31) {
    return 1;
  }
LABEL_21:
  type metadata accessor for __RKEntityTriggerGroup();
  uint64_t v33 = swift_dynamicCastClass();
  if (!v33) {
    return 0;
  }
  uint64_t v34 = v33;
  swift_beginAccess();
  unint64_t v35 = *(void *)(v34 + 24);
  if (v35 >> 62)
  {
LABEL_46:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v32 = result;
    if (!result) {
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v32 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v32)
    {
LABEL_47:
      swift_bridgeObjectRelease();
      swift_release();
      return v32;
    }
  }
  unint64_t v37 = v35 & 0xC000000000000001;
  if ((v35 & 0xC000000000000001) != 0)
  {
    uint64_t v38 = MEMORY[0x22A689930](0, v35);
  }
  else
  {
    if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    uint64_t v38 = *(void *)(v35 + 32);
    swift_retain();
  }
  char v39 = __RKEntityCustomTrigger.matches(with:)(v38);
  uint64_t result = swift_release();
  if (v39)
  {
LABEL_28:
    uint64_t v32 = 1;
    goto LABEL_47;
  }
  if (v32 == 1)
  {
    uint64_t v32 = 0;
    goto LABEL_47;
  }
  if (v37)
  {
    uint64_t v40 = MEMORY[0x22A689930](1, v35);
    goto LABEL_36;
  }
  if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v40 = *(void *)(v35 + 40);
    swift_retain();
LABEL_36:
    char v41 = __RKEntityCustomTrigger.matches(with:)(v40);
    uint64_t result = swift_release();
    if ((v41 & 1) == 0)
    {
      uint64_t v42 = 0;
      uint64_t v43 = v32 - 2;
      while (1)
      {
        uint64_t v32 = v43 != v42;
        if (v43 == v42) {
          goto LABEL_47;
        }
        unint64_t v46 = v42 + 2;
        if (v37)
        {
          uint64_t v44 = MEMORY[0x22A689930](v42 + 2, v35);
          if (__OFADD__(v46, 1)) {
            goto LABEL_45;
          }
        }
        else
        {
          if (v46 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v44 = *(void *)(v35 + 8 * v42 + 48);
          swift_retain();
          if (__OFADD__(v46, 1))
          {
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
        }
        char v45 = __RKEntityCustomTrigger.matches(with:)(v44);
        uint64_t result = swift_release();
        ++v42;
        if (v45) {
          goto LABEL_47;
        }
      }
    }
    goto LABEL_28;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t __RKEntityCustomTrigger.copy(with:)@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v7 = type metadata accessor for __RKEntityCustomTrigger();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 48) = 0;
  swift_beginAccess();
  *(void *)(v8 + 48) = v5;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  *(void *)(v8 + 24) = v4;
  *(void *)(v8 + 32) = v3;
  swift_release();
  *(void *)(v8 + 40) = v6;
  uint64_t result = swift_release();
  *(_WORD *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 18) = 0;
  a1[3] = v7;
  *a1 = v8;
  return result;
}

uint64_t __RKEntityCustomTrigger.clone(matching:newEntity:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = v2[6];
  if (!v5 || *(void *)(v5 + 16) != *(void *)(a1 + 16)) {
    return 0;
  }
  uint64_t v8 = v2[3];
  uint64_t v7 = v2[4];
  swift_bridgeObjectRetain();
  unint64_t v9 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
  type metadata accessor for __RKEntityCustomTrigger();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 48) = 0;
  swift_beginAccess();
  *(void *)(v6 + 48) = a2;
  swift_retain();
  swift_retain();
  swift_release();
  *(void *)(v6 + 24) = v8;
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  swift_release();
  *(_WORD *)(v6 + 16) = 0;
  *(unsigned char *)(v6 + 18) = 0;
  return v6;
}

void __RKEntityCustomTrigger.__allocating_init()()
{
}

void __RKEntityCustomTrigger.init()()
{
}

uint64_t __RKEntityCustomTrigger.__ivar_destroyer()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t __RKEntityCustomTrigger.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t __RKEntityCustomTrigger.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for __RKEntityCustomTrigger()
{
  return self;
}

uint64_t sub_227F57544@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_retain();
}

ValueMetadata *type metadata accessor for __RKCustomTriggerNotification()
{
  return &type metadata for __RKCustomTriggerNotification;
}

uint64_t method lookup function for __RKCustomTrigger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for __RKCustomTrigger);
}

uint64_t dispatch thunk of __RKCustomTrigger.__allocating_init(identifier:customArguments:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t method lookup function for __RKEntityCustomTrigger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for __RKEntityCustomTrigger);
}

uint64_t dispatch thunk of __RKEntityCustomTrigger.targetEntity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of __RKEntityCustomTrigger.targetEntity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of __RKEntityCustomTrigger.targetEntity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of __RKEntityCustomTrigger.__allocating_init(targetEntity:identifier:customArguments:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t RERenderFrameWorkload.deinit()
{
  RERelease();
  return v0;
}

uint64_t RERenderFrameWorkload.__deallocating_deinit()
{
  RERelease();

  return swift_deallocClassInstance();
}

void RERenderFrameWorkload.configure(_:)()
{
}

Swift::Void __swiftcall RERenderFrameWorkload.commit()()
{
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer) -> ()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void RERenderFrameWorkload.addScheduledHandler(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = v2;
  v7[4] = _s10RealityKit21RERenderFrameWorkloadC19addScheduledHandler7handleryyACc_tFySvcfU_TA_0;
  v7[5] = v5;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer) -> ();
  v7[3] = &block_descriptor_10;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_retain();
  swift_release();
  RERenderFrameWorkloadAddScheduledHandler();
  _Block_release(v6);
}

uint64_t sub_227F57834()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t _s10RealityKit21RERenderFrameWorkloadC19addScheduledHandler7handleryyACc_tFySvcfU_TA_0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t closure #1 in RERenderFrameWorkload.addCompletedHandler(handler:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  return a2(a4);
}

Swift::Void __swiftcall RERenderFrameWorkload.commitWithImmediatePresent()()
{
  MEMORY[0x270F1F950](*(void *)(v0 + 16));
}

uint64_t type metadata accessor for RERenderFrameWorkload()
{
  return self;
}

uint64_t method lookup function for RERenderFrameWorkload(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RERenderFrameWorkload);
}

uint64_t dispatch thunk of RERenderFrameWorkload.configure(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of RERenderFrameWorkload.commit()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of RERenderFrameWorkload.addScheduledHandler(handler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of RERenderFrameWorkload.commitWithImmediatePresent()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t specialized FixedWidthInteger.init(_:)(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v7 = (uint64_t)specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = specialized _parseInteger<A, B>(ascii:radix:)(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t PhotogrammetryMetadataHelper.exifDict.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v1 + 16) || (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2, v3), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  outlined init with copy of Any(*(void *)(v1 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    outlined destroy of BodyTrackingComponent?((uint64_t)&v8, (uint64_t *)&demangling cache variable for type metadata for Any?);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t PhotogrammetryMetadataHelper.dateTimeOriginal.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date?);
  MEMORY[0x270FA5388](v6 - 8);
  long long v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = PhotogrammetryMetadataHelper.exifDict.getter();
  if (!v9)
  {
    long long v66 = 0u;
    long long v67 = 0u;
    goto LABEL_12;
  }
  uint64_t v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v10 + 16) || (unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(v11, v12), (v14 & 1) == 0))
  {
    long long v66 = 0u;
    long long v67 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  outlined init with copy of Any(*(void *)(v10 + 56) + 32 * v13, (uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v67 + 1))
  {
LABEL_12:
    outlined destroy of BodyTrackingComponent?((uint64_t)&v66, (uint64_t *)&demangling cache variable for type metadata for Any?);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  }
  uint64_t countAndFlagsBits = v65._countAndFlagsBits;
  object = v65._object;
  uint64_t v17 = PhotogrammetryMetadataHelper.exifDict.getter();
  if (!v17)
  {
    long long v66 = 0u;
    long long v67 = 0u;
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v18 = v17;
  uint64_t v64 = countAndFlagsBits;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v18 + 16) && (unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)(v19, v20), (v22 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v18 + 56) + 32 * v21, (uint64_t)&v66);
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v67 + 1)) {
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  }
  Swift::String v63 = v65;
  uint64_t v24 = PhotogrammetryMetadataHelper.exifDict.getter();
  if (!v24)
  {
    long long v66 = 0u;
    long long v67 = 0u;
LABEL_37:
    uint64_t v37 = 808464430;
    outlined destroy of BodyTrackingComponent?((uint64_t)&v66, (uint64_t *)&demangling cache variable for type metadata for Any?);
LABEL_75:
    uint64_t v51 = (void *)0xE400000000000000;
    goto LABEL_76;
  }
  uint64_t v25 = v24;
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v25 + 16) && (unint64_t v28 = specialized __RawDictionaryStorage.find<A>(_:)(v26, v27), (v29 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v25 + 56) + 32 * v28, (uint64_t)&v66);
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v67 + 1)) {
    goto LABEL_37;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_74:
    uint64_t v37 = 808464430;
    goto LABEL_75;
  }
  uint64_t result = v65._countAndFlagsBits;
  unint64_t v30 = ((unint64_t)v65._object >> 56) & 0xF;
  uint64_t v31 = v65._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (((uint64_t)v65._object & 0x2000000000000000) != 0) {
    unint64_t v32 = ((unint64_t)v65._object >> 56) & 0xF;
  }
  else {
    unint64_t v32 = v65._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v32)
  {
    uint64_t v37 = 808464430;
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  if (((uint64_t)v65._object & 0x1000000000000000) != 0)
  {
    uint64_t v34 = specialized _parseInteger<A, B>(ascii:radix:)(v65._countAndFlagsBits, (uint64_t)v65._object, 10);
    char v36 = v62;
    goto LABEL_72;
  }
  if (((uint64_t)v65._object & 0x2000000000000000) != 0)
  {
    *(void *)&long long v66 = v65._countAndFlagsBits;
    *((void *)&v66 + 1) = (uint64_t)v65._object & 0xFFFFFFFFFFFFFFLL;
    if (LOBYTE(v65._countAndFlagsBits) == 43)
    {
      if (!v30) {
        goto LABEL_92;
      }
      if (v30 == 1 || (BYTE1(v65._countAndFlagsBits) - 48) > 9u) {
        goto LABEL_59;
      }
      uint64_t v34 = (BYTE1(v65._countAndFlagsBits) - 48);
      if (v30 != 2)
      {
        if ((BYTE2(v65._countAndFlagsBits) - 48) > 9u) {
          goto LABEL_59;
        }
        uint64_t v34 = 10 * (BYTE1(v65._countAndFlagsBits) - 48)
            + (BYTE2(v65._countAndFlagsBits) - 48);
        unint64_t v38 = v30 - 3;
        if (v38)
        {
          char v39 = (unsigned __int8 *)&v66 + 3;
          while (1)
          {
            unsigned int v40 = *v39 - 48;
            if (v40 > 9) {
              goto LABEL_59;
            }
            uint64_t v41 = 10 * v34;
            if ((unsigned __int128)(v34 * (__int128)10) >> 64 != (10 * v34) >> 63) {
              goto LABEL_59;
            }
            uint64_t v34 = v41 + v40;
            if (__OFADD__(v41, v40)) {
              goto LABEL_59;
            }
            char v36 = 0;
            ++v39;
            if (!--v38) {
              goto LABEL_72;
            }
          }
        }
      }
    }
    else
    {
      if (LOBYTE(v65._countAndFlagsBits) == 45)
      {
        if (v30)
        {
          if (v30 != 1 && (BYTE1(v65._countAndFlagsBits) - 48) <= 9u)
          {
            if (v30 == 2)
            {
              char v36 = 0;
              uint64_t v34 = -(uint64_t)(BYTE1(v65._countAndFlagsBits) - 48);
              goto LABEL_72;
            }
            if ((BYTE2(v65._countAndFlagsBits) - 48) <= 9u)
            {
              uint64_t v34 = -10 * (BYTE1(v65._countAndFlagsBits) - 48)
                  - (BYTE2(v65._countAndFlagsBits) - 48);
              unint64_t v46 = v30 - 3;
              if (!v46) {
                goto LABEL_71;
              }
              v59 = (unsigned __int8 *)&v66 + 3;
              while (1)
              {
                unsigned int v60 = *v59 - 48;
                if (v60 > 9) {
                  break;
                }
                uint64_t v61 = 10 * v34;
                if ((unsigned __int128)(v34 * (__int128)10) >> 64 != (10 * v34) >> 63) {
                  break;
                }
                uint64_t v34 = v61 - v60;
                if (__OFSUB__(v61, v60)) {
                  break;
                }
                char v36 = 0;
                ++v59;
                if (!--v46) {
                  goto LABEL_72;
                }
              }
            }
          }
LABEL_59:
          uint64_t v34 = 0;
          char v36 = 1;
          goto LABEL_72;
        }
        __break(1u);
LABEL_92:
        __break(1u);
        return result;
      }
      if (!v30 || (LOBYTE(v65._countAndFlagsBits) - 48) > 9u) {
        goto LABEL_59;
      }
      uint64_t v34 = (LOBYTE(v65._countAndFlagsBits) - 48);
      if (v30 != 1)
      {
        if ((BYTE1(v65._countAndFlagsBits) - 48) > 9u) {
          goto LABEL_59;
        }
        uint64_t v34 = 10 * (LOBYTE(v65._countAndFlagsBits) - 48)
            + (BYTE1(v65._countAndFlagsBits) - 48);
        unint64_t v42 = v30 - 2;
        if (v42)
        {
          uint64_t v43 = (unsigned __int8 *)&v66 + 2;
          while (1)
          {
            unsigned int v44 = *v43 - 48;
            if (v44 > 9) {
              goto LABEL_59;
            }
            uint64_t v45 = 10 * v34;
            if ((unsigned __int128)(v34 * (__int128)10) >> 64 != (10 * v34) >> 63) {
              goto LABEL_59;
            }
            uint64_t v34 = v45 + v44;
            if (__OFADD__(v45, v44)) {
              goto LABEL_59;
            }
            char v36 = 0;
            ++v43;
            if (!--v42) {
              goto LABEL_72;
            }
          }
        }
      }
    }
LABEL_71:
    char v36 = 0;
    goto LABEL_72;
  }
  if ((v65._countAndFlagsBits & 0x1000000000000000) != 0) {
    uint64_t v33 = (unsigned __int8 *)(((uint64_t)v65._object & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v33 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
  uint64_t v34 = (uint64_t)specialized closure #1 in FixedWidthInteger.init<A>(_:radix:)(v33, v31, 10);
  char v36 = v35 & 1;
LABEL_72:
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_74;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v47 + 16) = xmmword_22830EC60;
  uint64_t v49 = MEMORY[0x263F8D750];
  *(void *)(v47 + 56) = v48;
  *(void *)(v47 + 64) = v49;
  *(void *)(v47 + 32) = v34;
  uint64_t v37 = String.init(format:_:)();
  uint64_t v51 = v50;
LABEL_76:
  id v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  v53 = (void *)MEMORY[0x22A688A50](0xD000000000000018, 0x8000000228353AF0);
  objc_msgSend(v52, sel_setDateFormat_, v53);

  *(void *)&long long v66 = v64;
  *((void *)&v66 + 1) = object;
  swift_bridgeObjectRetain();
  v54._uint64_t countAndFlagsBits = v37;
  v54._object = v51;
  String.append(_:)(v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.append(_:)(v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = (void *)MEMORY[0x22A688A50](v66, *((void *)&v66 + 1));
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(v52, sel_dateFromString_, v55);

  if (!v56)
  {

    unint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v58(v8, 1, 1, v2);
LABEL_80:
    outlined destroy of BodyTrackingComponent?((uint64_t)v8, &demangling cache variable for type metadata for Date?);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v58)(a1, 1, 1, v2);
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v57 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v57(v8, v5, v2);
  unint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v58(v8, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    goto LABEL_80;
  }
  v57(a1, v8, v2);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v58)(a1, 0, 1, v2);
}

uint64_t PhotogrammetryMetadataHelper.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotogrammetryMetadataHelper()
{
  return self;
}

BOOL static IKRig.Constraint.ID.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t specialized Array.subscript.modify(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = (uint64_t)v4;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v4);
  uint64_t v4 = (void *)result;
  *uint64_t v2 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v4[2] > a2) {
    return (uint64_t)destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
  }
LABEL_7:
  __break(1u);
  return result;
}

{
  uint64_t *v2;
  void *v4;
  uint64_t result;

  uint64_t v4 = (void *)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = (uint64_t)v4;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v4);
  uint64_t v4 = (void *)result;
  *uint64_t v2 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v4[2] > a2) {
    return (uint64_t)destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t (*specialized Array.subscript.modify(uint64_t (***a1)(), unint64_t a2))()
{
  *a1 = v2;
  uint64_t v4 = *v2;
  uint64_t result = (uint64_t (*)())swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v4;
  if (!result
    || ((unint64_t)v4 & 0x8000000000000000) != 0
    || ((unint64_t)v4 & 0x4000000000000000) != 0)
  {
    uint64_t result = (uint64_t (*)())specialized _ArrayBuffer._consumeAndCreateNew()(v4);
    uint64_t v4 = result;
    *uint64_t v2 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    return Array.subscript.modifyspecialized ;
  }
  __break(1u);
  return result;
}

{
  uint64_t (**v2)();
  uint64_t (*v4)();
  uint64_t (*result)();

  *a1 = v2;
  uint64_t v4 = *v2;
  uint64_t result = (uint64_t (*)())swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v4;
  if (!result
    || ((unint64_t)v4 & 0x8000000000000000) != 0
    || ((unint64_t)v4 & 0x4000000000000000) != 0)
  {
    uint64_t result = (uint64_t (*)())specialized _ArrayBuffer._consumeAndCreateNew()(v4);
    uint64_t v4 = result;
    *uint64_t v2 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    return Array.subscript.modifyspecialized ;
  }
  __break(1u);
  return result;
}

uint64_t Array.subscript.modifyspecialized ()
{
  return specialized Array._endMutation()();
}

uint64_t IKSolverDefinition.id.getter()
{
  return *(void *)v0;
}

uint64_t IKSolverDefinition.rigDefinition.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  *a1 = v1[1];
  a1[1] = v1[2];
  a1[2] = v2;
  a1[3] = v3;
  a1[4] = v4;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 IKSolverDefinition.rigDefinition.setter(__n128 *a1)
{
  unint64_t v3 = a1->n128_u64[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = a1->n128_u64[1];
  __n128 result = a1[1];
  __n128 v5 = a1[2];
  *(__n128 *)(v1 + 24) = result;
  *(__n128 *)(v1 + 40) = v5;
  return result;
}

uint64_t (*IKSolverDefinition.rigDefinition.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

double IKSolverDefinition.init(id:rig:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 16) = a2[1];
  long long v3 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a3 + 24) = *((_OWORD *)a2 + 1);
  uint64_t v4 = *a2;
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = v4;
  *(_OWORD *)(a3 + 40) = v3;
  *(void *)&double result = 1;
  *(_OWORD *)(a3 + 56) = xmmword_22830EC70;
  *(unsigned char *)(a3 + 72) = 6;
  *(_OWORD *)(a3 + 80) = xmmword_22830EC70;
  *(unsigned char *)(a3 + 96) = 6;
  return result;
}

uint64_t IKRig.maxIterations.getter()
{
  return *(void *)v0;
}

uint64_t IKRig.maxIterations.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*IKRig.maxIterations.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

float IKRig.globalFkWeight.getter()
{
  return *(float *)(v0 + 8);
}

void IKRig.globalFkWeight.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*IKRig.globalFkWeight.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

float IKRig.globalLimitsWeight.getter()
{
  return *(float *)(v0 + 12);
}

void IKRig.globalLimitsWeight.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

uint64_t (*IKRig.globalLimitsWeight.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.joints.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 IKRig.joints.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  v1[1] = *a1;
  return result;
}

uint64_t (*IKRig.joints.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.constraints.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 IKRig.constraints.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  v1[2] = *a1;
  return result;
}

uint64_t (*IKRig.constraints.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.init(for:)@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10RealityKit12MeshResourceC0D10FoundationE8SkeletonV5JointVG_AI5IKRigVALVs5NeverOTg504_s17d11Foundation5k15V3forAC0A3Kit12fg5CAAE8i10V_tKcfcAC5J10VAiJVXEfU_AKTf1cn_nTf4ng_n(v5, v3, v4, v5);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  IKRig.JointCollection.init(_:)(v6, &v14);
  __n128 v13 = v14;
  IKRig.ConstraintsCollection.init(_:)(MEMORY[0x263F8EE78]);
  a2->n128_u64[0] = 120;
  __asm { FMOV            V1.2S, #1.0 }
  a2->n128_u64[1] = _D1;
  __n128 result = v14;
  a2[1] = v13;
  a2[2] = result;
  return result;
}

double IKRig.Joint.init(name:parentID:restTransform:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>, __n128 a7@<Q2>)
{
  uint64_t v10 = *a3;
  char v11 = *((unsigned char *)a3 + 8);
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of IKRig.Joint.init(name:parentID:restTransform:));
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = v10;
  *(unsigned char *)(a4 + 24) = v11;
  *(__n128 *)(a4 + 32) = a5;
  *(__n128 *)(a4 + 48) = a6;
  *(__n128 *)(a4 + 64) = a7;
  *(unsigned char *)(a4 + 80) = 1;
  *(_OWORD *)(a4 + 96) = v12;
  *(void *)(a4 + 112) = 0;
  *(void *)(a4 + 120) = 0;
  *(void *)(a4 + 128) = 0x300000000;
  double result = 0.0;
  *(_OWORD *)(a4 + 136) = 0u;
  *(_OWORD *)(a4 + 152) = 0u;
  *(void *)(a4 + 168) = 0;
  return result;
}

uint64_t IKRig.JointCollection.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v20 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, 0, 0);
  uint64_t v4 = v20;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v18 = a2;
    lazy protocol witness table accessor for type String and conformance String();
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v17 = a1;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *v7;
      v19[0] = *(v7 - 1);
      v19[1] = v8;
      uint64_t v9 = StringProtocol.hash.getter();
      uint64_t v20 = v4;
      unint64_t v11 = *(void *)(v4 + 16);
      unint64_t v10 = *(void *)(v4 + 24);
      if (v11 >= v10 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
        uint64_t v4 = v20;
      }
      v7 += 22;
      uint64_t v12 = v4 + 16 * v11;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v6;
      *(void *)(v4 + 16) = v11 + 1;
      ++v6;
    }
    while (v5 != v6);
    a1 = v17;
    swift_bridgeObjectRelease_n();
    a2 = v18;
    if (*(void *)(v4 + 16)) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v13 = MEMORY[0x263F8EE80];
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v20 + 16)) {
    goto LABEL_9;
  }
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<IKRig.Joint.ID, Int>);
  uint64_t v13 = static _DictionaryStorage.allocate(capacity:)();
LABEL_10:
  v19[0] = v13;
  __n128 v14 = (void *)swift_bridgeObjectRetain();
  specialized _NativeDictionary.merge<A>(_:isUnique:uniquingKeysWith:)(v14, 1, v19);
  uint64_t result = swift_release();
  uint64_t v16 = v19[0];
  *a2 = a1;
  a2[1] = v16;
  return result;
}

double IKRig.ConstraintsCollection.init(arrayLiteral:)@<D0>(Swift::OpaquePointer a1@<X0>, _OWORD *a2@<X8>)
{
  IKRig.ConstraintsCollection.init(_:)(a1);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t IKRig.Joint.id.getter@<X0>(uint64_t *a1@<X8>)
{
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = StringProtocol.hash.getter();
  *a1 = result;
  return result;
}

uint64_t IKRig.Joint.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void IKRig.Joint.parentID.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t IKRig.Joint.parentID.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 16) = *(void *)result;
  *(unsigned char *)(v1 + 24) = v2;
  return result;
}

uint64_t (*IKRig.Joint.parentID.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Joint.restTransform.getter()
{
  return v0[2];
}

void IKRig.Joint.restTransform.setter(__n128 a1, __n128 a2, __n128 a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
}

uint64_t (*IKRig.Joint.restTransform.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.Joint.active.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t IKRig.Joint.active.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*IKRig.Joint.active.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Joint.fkWeightPerAxis.getter()
{
  return v0[6];
}

void IKRig.Joint.fkWeightPerAxis.setter(__n128 a1)
{
  v1[6] = a1;
}

uint64_t (*IKRig.Joint.fkWeightPerAxis.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Joint.rotationStiffness.getter()
{
  return v0[7];
}

void IKRig.Joint.rotationStiffness.setter(__n128 a1)
{
  v1[7] = a1;
}

uint64_t (*IKRig.Joint.rotationStiffness.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Joint.limits.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 160);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 IKRig.Joint.limits.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 144) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 160) = result;
  return result;
}

uint64_t (*IKRig.Joint.limits.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

BOOL static IKRig.Joint.LimitsDefinition.Axis.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void IKRig.Joint.LimitsDefinition.Axis.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int IKRig.Joint.LimitsDefinition.Axis.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

float IKRig.Joint.LimitsDefinition.weight.getter()
{
  return *(float *)v0;
}

void IKRig.Joint.LimitsDefinition.weight.setter(float a1)
{
  *Swift::UInt v1 = a1;
}

uint64_t (*IKRig.Joint.LimitsDefinition.weight.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

void IKRig.Joint.LimitsDefinition.boneAxis.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *IKRig.Joint.LimitsDefinition.boneAxis.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*IKRig.Joint.LimitsDefinition.boneAxis.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Joint.LimitsDefinition.minimumAngles.getter()
{
  return v0[1];
}

void IKRig.Joint.LimitsDefinition.minimumAngles.setter(__n128 a1)
{
  v1[1] = a1;
}

uint64_t (*IKRig.Joint.LimitsDefinition.minimumAngles.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t (*IKRig.Joint.LimitsDefinition.maximumAngles.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Joint.LimitsDefinition.init(weight:boneAxis:minimumAngles:maximumAngles:)@<Q0>(unsigned __int8 *a1@<X0>, __n128 *a2@<X8>, float a3@<S0>, __n128 a4@<Q1>, __n128 a5@<Q2>)
{
  unsigned __int8 v7 = *a1;
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of IKRig.Joint.LimitsDefinition.init(weight:boneAxis:minimumAngles:maximumAngles:));
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #1 of IKRig.Joint.LimitsDefinition.init(weight:boneAxis:minimumAngles:maximumAngles:));
  a2->n128_f32[0] = a3;
  a2->n128_u8[4] = v7;
  __n128 result = a5;
  a2[1] = a4;
  a2[2] = a5;
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance IKRig.Joint@<X0>(uint64_t *a1@<X8>)
{
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = StringProtocol.hash.getter();
  *a1 = result;
  return result;
}

void IKRig.Constraint.ID.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

uint64_t IKRig.Constraint.id.getter@<X0>(uint64_t *a1@<X8>)
{
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = StringProtocol.hash.getter();
  *a1 = result;
  return result;
}

uint64_t IKRig.Constraint.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IKRig.Constraint.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *long long v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IKRig.Constraint.name.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.Constraint.jointName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IKRig.Constraint.jointName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IKRig.Constraint.jointName.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Constraint.offset.getter()
{
  return v0[2];
}

void IKRig.Constraint.offset.setter(__n128 a1, __n128 a2, __n128 a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
}

uint64_t (*IKRig.Constraint.offset.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Constraint.positionDemand.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 80);
  long long v3 = *(_OWORD *)(v1 + 96);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 IKRig.Constraint.positionDemand.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 96) = v3;
  return result;
}

uint64_t (*IKRig.Constraint.positionDemand.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Constraint.orientationDemand.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 144);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 IKRig.Constraint.orientationDemand.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 128) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 144) = result;
  return result;
}

uint64_t (*IKRig.Constraint.orientationDemand.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.Constraint.IKPositionDemand.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of IKRig.Constraint.IKPositionDemand.init());
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

BOOL static IKRig.Constraint.IKPositionDemand.Mode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void IKRig.Constraint.IKPositionDemand.Mode.hash(into:)()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int IKRig.Constraint.IKPositionDemand.Mode.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void IKRig.Constraint.IKPositionDemand.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *IKRig.Constraint.IKPositionDemand.mode.setter(unsigned char *result)
{
  *Swift::UInt v1 = *result;
  return result;
}

uint64_t (*IKRig.Constraint.IKPositionDemand.mode.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.Constraint.IKPositionDemand.influenceDepthMaxJointCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t IKRig.Constraint.IKPositionDemand.influenceDepthMaxJointCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*IKRig.Constraint.IKPositionDemand.influenceDepthMaxJointCount.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Constraint.IKPositionDemand.weight.getter()
{
  return v0[1];
}

void IKRig.Constraint.IKPositionDemand.weight.setter(__n128 a1)
{
  v1[1] = a1;
}

uint64_t (*IKRig.Constraint.IKPositionDemand.weight.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.Constraint.IKOrientationDemand.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of IKRig.Constraint.IKOrientationDemand.init());
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
  *(void *)(a1 + 24) = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

__n128 IKRig.Constraint.IKOrientationDemand.mode.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[1].n128_u8[0];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 IKRig.Constraint.IKOrientationDemand.mode.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  v1[1].n128_u8[0] = v2;
  return result;
}

uint64_t (*IKRig.Constraint.IKOrientationDemand.mode.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t IKRig.Constraint.IKOrientationDemand.influenceDepthMaxJointCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t IKRig.Constraint.IKOrientationDemand.influenceDepthMaxJointCount.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*IKRig.Constraint.IKOrientationDemand.influenceDepthMaxJointCount.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 IKRig.Constraint.IKOrientationDemand.weight.getter()
{
  return v0[2];
}

void IKRig.Constraint.IKOrientationDemand.weight.setter(__n128 a1)
{
  v1[2] = a1;
}

uint64_t (*IKRig.Constraint.IKOrientationDemand.weight.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 static IKRig.Constraint.point(named:on:positionWeight:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, __n128 a6@<Q0>)
{
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of static IKRig.Constraint.point(named:on:positionWeight:));
  uint64_t v11 = one-time initialization token for identity;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  long long v12 = static Transform.identity;
  long long v13 = xmmword_2681C7AB0;
  long long v14 = xmmword_2681C7AC0;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(_OWORD *)(a5 + 32) = v12;
  *(_OWORD *)(a5 + 48) = v13;
  *(_OWORD *)(a5 + 64) = v14;
  *(_OWORD *)(a5 + 80) = xmmword_22832CC70;
  __n128 result = a6;
  *(__n128 *)(a5 + 96) = a6;
  *(void *)(a5 + 112) = 0;
  *(void *)(a5 + 120) = 0;
  *(void *)(a5 + 128) = 255;
  *(void *)(a5 + 136) = 0;
  *(void *)(a5 + 144) = 0;
  *(void *)(a5 + 152) = 0;
  return result;
}

__n128 static IKRig.Constraint.orient(named:on:orientationWeight:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, __n128 a6@<Q0>)
{
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of static IKRig.Constraint.orient(named:on:orientationWeight:));
  uint64_t v11 = one-time initialization token for identity;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  long long v12 = static Transform.identity;
  long long v13 = xmmword_2681C7AB0;
  long long v14 = xmmword_2681C7AC0;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(_OWORD *)(a5 + 32) = v12;
  *(_OWORD *)(a5 + 48) = v13;
  *(_OWORD *)(a5 + 64) = v14;
  *(void *)(a5 + 80) = 2;
  *(_OWORD *)(a5 + 88) = 0u;
  *(_OWORD *)(a5 + 104) = 0u;
  *(void *)(a5 + 120) = 0;
  __n128 result = a6;
  *(_OWORD *)(a5 + 128) = xmmword_22832CC80;
  *(__n128 *)(a5 + 144) = a6;
  return result;
}

__n128 static IKRig.Constraint.parent(named:on:positionWeight:orientationWeight:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of static IKRig.Constraint.parent(named:on:positionWeight:orientationWeight:));
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #1 of static IKRig.Constraint.parent(named:on:positionWeight:orientationWeight:));
  uint64_t v12 = one-time initialization token for identity;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  long long v13 = static Transform.identity;
  long long v14 = xmmword_2681C7AB0;
  long long v15 = xmmword_2681C7AC0;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(_OWORD *)(a5 + 32) = v13;
  *(_OWORD *)(a5 + 48) = v14;
  *(_OWORD *)(a5 + 64) = v15;
  *(_OWORD *)(a5 + 80) = xmmword_22832CC70;
  *(__n128 *)(a5 + 96) = a6;
  *(void *)(a5 + 112) = 0;
  *(void *)(a5 + 120) = 0;
  __n128 result = a7;
  *(_OWORD *)(a5 + 128) = xmmword_22832CC80;
  *(__n128 *)(a5 + 144) = a7;
  return result;
}

__n128 static IKRig.Constraint.lookAtAdditive(named:on:lookingAlong:orientationWeight:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of static IKRig.Constraint.lookAtAdditive(named:on:lookingAlong:orientationWeight:));
  uint64_t v12 = one-time initialization token for identity;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  long long v13 = static Transform.identity;
  long long v14 = xmmword_2681C7AB0;
  long long v15 = xmmword_2681C7AC0;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(_OWORD *)(a5 + 32) = v13;
  *(_OWORD *)(a5 + 48) = v14;
  *(_OWORD *)(a5 + 64) = v15;
  *(void *)(a5 + 80) = 2;
  *(void *)(a5 + 88) = 0;
  *(void *)(a5 + 96) = 0;
  *(void *)(a5 + 104) = 0;
  *(__n128 *)(a5 + 112) = a6;
  *(_OWORD *)(a5 + 128) = xmmword_22832CC70;
  __n128 result = a7;
  *(__n128 *)(a5 + 144) = a7;
  return result;
}

__n128 static IKRig.Constraint.lookAtAbsolute(named:on:lookingAlong:orientationWeight:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  specialized SIMD.init<A>(_:)((uint64_t)&outlined read-only object #0 of static IKRig.Constraint.lookAtAbsolute(named:on:lookingAlong:orientationWeight:));
  uint64_t v12 = one-time initialization token for identity;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  long long v13 = static Transform.identity;
  long long v14 = xmmword_2681C7AB0;
  long long v15 = xmmword_2681C7AC0;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(_OWORD *)(a5 + 32) = v13;
  *(_OWORD *)(a5 + 48) = v14;
  *(_OWORD *)(a5 + 64) = v15;
  *(void *)(a5 + 80) = 2;
  *(void *)(a5 + 88) = 0;
  *(void *)(a5 + 96) = 0;
  *(void *)(a5 + 104) = 0;
  *(__n128 *)(a5 + 112) = a6;
  *(_OWORD *)(a5 + 128) = xmmword_22832CC90;
  __n128 result = a7;
  *(__n128 *)(a5 + 144) = a7;
  return result;
}

uint64_t IKRig.JointCollection.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = v2;
  uint64_t v5 = v2[1];
  if (*(void *)(v5 + 16) && (uint64_t v6 = *v3, result = specialized __RawDictionaryStorage.find<A>(_:)(*a1), (v8 & 1) != 0))
  {
    unint64_t v9 = *(void *)(*(void *)(v5 + 56) + 8 * result);
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)(v6 + 16))
    {
      unint64_t v10 = (_OWORD *)(v6 + 176 * v9);
      long long v11 = v10[2];
      long long v12 = v10[4];
      v20[1] = v10[3];
      v20[2] = v12;
      v20[0] = v11;
      long long v13 = v10[5];
      long long v14 = v10[6];
      long long v15 = v10[8];
      v20[5] = v10[7];
      v20[6] = v15;
      v20[3] = v13;
      v20[4] = v14;
      long long v16 = v10[9];
      long long v17 = v10[10];
      long long v18 = v10[12];
      v20[9] = v10[11];
      v20[10] = v18;
      v20[7] = v16;
      v20[8] = v17;
      memmove(__dst, v10 + 2, 0xB0uLL);
      destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(__dst, v19);
      outlined init with take of Transform?((uint64_t)__dst, a2, &demangling cache variable for type metadata for IKRig.Joint?);
      return outlined retain of String?((uint64_t)v20);
    }
    __break(1u);
  }
  else
  {
    _s17RealityFoundation5IKRigV5JointVSgWOi0_(__dst);
    return outlined init with take of Transform?((uint64_t)__dst, a2, &demangling cache variable for type metadata for IKRig.Joint?);
  }
  return result;
}

uint64_t key path getter for IKRig.JointCollection.subscript(_:) : IKRig.JointCollection@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  v8[0] = *a1;
  uint64_t v6 = v4;
  IKRig.JointCollection.subscript.getter(&v6, (uint64_t)v7);
  outlined init with take of Transform?((uint64_t)v7, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Joint?);
  return outlined init with take of Transform?((uint64_t)v8, a3, &demangling cache variable for type metadata for IKRig.Joint?);
}

uint64_t key path setter for IKRig.JointCollection.subscript(_:) : IKRig.JointCollection(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  outlined init with take of Transform?(a1, (uint64_t)v7, &demangling cache variable for type metadata for IKRig.Joint?);
  outlined init with take of Transform?((uint64_t)v7, (uint64_t)v6, &demangling cache variable for type metadata for IKRig.Joint?);
  uint64_t v5 = v3;
  outlined retain of String?((uint64_t)v7);
  return IKRig.JointCollection.subscript.setter((uint64_t)v6, &v5);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void v8[22];
  unsigned char v9[176];

  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  outlined init with take of Transform?(a1, (uint64_t)v9, &demangling cache variable for type metadata for IKRig.Joint?);
  v8[0] = v3;
  v8[1] = v4;
  outlined retain of String?((uint64_t)v9);
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = StringProtocol.hash.getter();
  outlined init with take of Transform?((uint64_t)v9, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Joint?);
  unsigned __int8 v7 = v5;
  return IKRig.JointCollection.subscript.setter((uint64_t)v8, &v7);
}

uint64_t IKRig.JointCollection.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  outlined init with take of Transform?(a1, (uint64_t)v30, &demangling cache variable for type metadata for IKRig.Joint?);
  uint64_t v5 = *a2;
  outlined init with take of Transform?((uint64_t)v30, (uint64_t)v31, &demangling cache variable for type metadata for IKRig.Joint?);
  uint64_t result = getEnumTag for AudioFileResource.Error((uint64_t)v31);
  if (result != 1)
  {
    v29[0] = v31[0];
    lazy protocol witness table accessor for type String and conformance String();
    if (StringProtocol.hash.getter() == v5)
    {
      uint64_t v7 = *(void *)(v3 + 8);
      if (*(void *)(v7 + 16))
      {
        uint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(v5);
        if (v9)
        {
          unint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
          long long v11 = *(void **)v3;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if (result)
          {
            if ((v10 & 0x8000000000000000) == 0) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v11);
            long long v11 = (void *)result;
            if ((v10 & 0x8000000000000000) == 0)
            {
LABEL_7:
              if (v10 < v11[2])
              {
                long long v12 = &v11[22 * v10];
                long long v13 = v12[2];
                long long v14 = v12[4];
                v29[1] = v12[3];
                v29[2] = v14;
                v29[0] = v13;
                long long v15 = v12[5];
                long long v16 = v12[6];
                long long v17 = v12[8];
                v29[5] = v12[7];
                v29[6] = v17;
                void v29[3] = v15;
                v29[4] = v16;
                long long v18 = v12[9];
                long long v19 = v12[10];
                long long v20 = v12[12];
                v29[9] = v12[11];
                v29[10] = v20;
                v29[7] = v18;
                v29[8] = v19;
                long long v21 = v31[0];
                long long v22 = v31[2];
                v12[3] = v31[1];
                v12[4] = v22;
                v12[2] = v21;
                long long v23 = v31[3];
                long long v24 = v31[4];
                long long v25 = v31[6];
                v12[7] = v31[5];
                v12[8] = v25;
                v12[5] = v23;
                v12[6] = v24;
                long long v26 = v31[7];
                long long v27 = v31[8];
                long long v28 = v31[10];
                v12[11] = v31[9];
                v12[12] = v28;
                v12[9] = v26;
                v12[10] = v27;
                uint64_t result = outlined release of IKRig.Joint?((uint64_t)v29);
                *(void *)uint64_t v3 = v11;
                return result;
              }
              goto LABEL_13;
            }
          }
          __break(1u);
LABEL_13:
          __break(1u);
          return result;
        }
      }
    }
    return outlined release of IKRig.Joint?((uint64_t)v30);
  }
  return result;
}

void (*IKRig.JointCollection.subscript.modify(void *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = (char *)malloc(0x2D0uLL);
  *a1 = v5;
  uint64_t v6 = v5 + 176;
  *((void *)v5 + 88) = v2;
  uint64_t v7 = *a2;
  *((void *)v5 + 89) = *a2;
  uint64_t v8 = v2[1];
  if (!*(void *)(v8 + 16)
    || (uint64_t v9 = *v2,
        uint64_t result = (void (*)(uint64_t *, char))specialized __RawDictionaryStorage.find<A>(_:)(v7),
        (v11 & 1) == 0))
  {
    _s17RealityFoundation5IKRigV5JointVSgWOi0_(v6);
    outlined init with take of Transform?((uint64_t)v6, (uint64_t)v5, &demangling cache variable for type metadata for IKRig.Joint?);
    return IKRig.JointCollection.subscript.modify;
  }
  unint64_t v12 = *(void *)(*(void *)(v8 + 56) + 8 * (void)result);
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < *(void *)(v9 + 16))
  {
    long long v13 = (_OWORD *)(v9 + 176 * v12);
    long long v14 = v13[2];
    long long v15 = v13[4];
    *((_OWORD *)v5 + 23) = v13[3];
    *((_OWORD *)v5 + 24) = v15;
    *((_OWORD *)v5 + 22) = v14;
    long long v16 = v13[5];
    long long v17 = v13[6];
    long long v18 = v13[8];
    *((_OWORD *)v5 + 27) = v13[7];
    *((_OWORD *)v5 + 28) = v18;
    *((_OWORD *)v5 + 25) = v16;
    *((_OWORD *)v5 + 26) = v17;
    long long v19 = v13[9];
    long long v20 = v13[10];
    long long v21 = v13[12];
    *((_OWORD *)v5 + 31) = v13[11];
    *((_OWORD *)v5 + 32) = v21;
    *((_OWORD *)v5 + 29) = v19;
    *((_OWORD *)v5 + 30) = v20;
    memmove(v6, v13 + 2, 0xB0uLL);
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(v6, v22);
    outlined init with take of Transform?((uint64_t)v6, (uint64_t)v5, &demangling cache variable for type metadata for IKRig.Joint?);
    outlined retain of String?((uint64_t)(v5 + 352));
    return IKRig.JointCollection.subscript.modify;
  }
  __break(1u);
  return result;
}

void IKRig.JointCollection.subscript.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 176;
  uint64_t v4 = *a1 + 352;
  if (a2)
  {
    uint64_t v5 = v2[89];
    outlined init with take of Transform?(*a1, v4, &demangling cache variable for type metadata for IKRig.Joint?);
    outlined init with take of Transform?(v4, (uint64_t)(v2 + 66), &demangling cache variable for type metadata for IKRig.Joint?);
    uint64_t v7 = v5;
    outlined retain of String?(v4);
    IKRig.JointCollection.subscript.setter((uint64_t)(v2 + 66), &v7);
    outlined init with take of Transform?((uint64_t)v2, v3, &demangling cache variable for type metadata for IKRig.Joint?);
    outlined release of IKRig.Joint?(v3);
  }
  else
  {
    uint64_t v6 = v2[89];
    outlined init with take of Transform?(*a1, v3, &demangling cache variable for type metadata for IKRig.Joint?);
    outlined init with take of Transform?(v3, v4, &demangling cache variable for type metadata for IKRig.Joint?);
    uint64_t v7 = v6;
    IKRig.JointCollection.subscript.setter(v4, &v7);
  }

  free(v2);
}

{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t vars8;

  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 176;
  uint64_t v4 = *a1 + 352;
  if (a2)
  {
    uint64_t v5 = v2[89];
    uint64_t v6 = v2[88];
    outlined init with take of Transform?(*a1, v4, &demangling cache variable for type metadata for IKRig.Joint?);
    v2[66] = v6;
    v2[67] = v5;
    outlined retain of String?(v4);
    uint64_t v7 = StringProtocol.hash.getter();
    outlined init with take of Transform?(v4, (uint64_t)(v2 + 66), &demangling cache variable for type metadata for IKRig.Joint?);
    char v11 = v7;
    IKRig.JointCollection.subscript.setter((uint64_t)(v2 + 66), &v11);
    outlined init with take of Transform?((uint64_t)v2, v3, &demangling cache variable for type metadata for IKRig.Joint?);
    outlined release of IKRig.Joint?(v3);
  }
  else
  {
    uint64_t v8 = v2[89];
    uint64_t v9 = v2[88];
    outlined init with take of Transform?(*a1, v3, &demangling cache variable for type metadata for IKRig.Joint?);
    v2[44] = v9;
    v2[45] = v8;
    unint64_t v10 = StringProtocol.hash.getter();
    outlined init with take of Transform?(v3, v4, &demangling cache variable for type metadata for IKRig.Joint?);
    char v11 = v10;
    IKRig.JointCollection.subscript.setter(v4, &v11);
  }

  free(v2);
}

uint64_t IKRig.JointCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v8 = a1;
  *((void *)&v8 + 1) = a2;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = StringProtocol.hash.getter();
  long long v8 = *v3;
  uint64_t v7 = v5;
  return IKRig.JointCollection.subscript.getter(&v7, a3);
}

uint64_t key path getter for IKRig.JointCollection.subscript(_:) : IKRig.JointCollection@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8[0] = v3;
  v8[1] = v4;
  uint64_t v6 = StringProtocol.hash.getter();
  IKRig.JointCollection.subscript.getter(&v6, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined init with take of Transform?((uint64_t)v7, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Joint?);
  return outlined init with take of Transform?((uint64_t)v8, a2, &demangling cache variable for type metadata for IKRig.Joint?);
}

uint64_t IKRig.JointCollection.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  outlined init with take of Transform?(a1, (uint64_t)v9, &demangling cache variable for type metadata for IKRig.Joint?);
  v8[0] = a2;
  v8[1] = a3;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = StringProtocol.hash.getter();
  swift_bridgeObjectRelease();
  outlined init with take of Transform?((uint64_t)v9, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Joint?);
  uint64_t v7 = v5;
  return IKRig.JointCollection.subscript.setter((uint64_t)v8, &v7);
}

void (*IKRig.JointCollection.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = (char *)malloc(0x2E0uLL);
  *a1 = v7;
  *((void *)v7 + 22) = a2;
  long long v8 = v7 + 176;
  *((void *)v7 + 90) = v3;
  *((void *)v7 + 89) = a3;
  *((void *)v7 + 88) = a2;
  uint64_t v10 = *v3;
  uint64_t v9 = v3[1];
  *((void *)v7 + 23) = a3;
  *((void *)v7 + 91) = lazy protocol witness table accessor for type String and conformance String();
  uint64_t v11 = StringProtocol.hash.getter();
  if (!*(void *)(v9 + 16)
    || (uint64_t result = (void (*)(uint64_t *, char))specialized __RawDictionaryStorage.find<A>(_:)(v11),
        (v13 & 1) == 0))
  {
    _s17RealityFoundation5IKRigV5JointVSgWOi0_(v8);
    outlined init with take of Transform?((uint64_t)v8, (uint64_t)v7, &demangling cache variable for type metadata for IKRig.Joint?);
    return IKRig.JointCollection.subscript.modify;
  }
  unint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * (void)result);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v14 < *(void *)(v10 + 16))
  {
    long long v15 = (_OWORD *)(v10 + 176 * v14);
    long long v16 = v15[2];
    long long v17 = v15[4];
    *((_OWORD *)v7 + 12) = v15[3];
    *((_OWORD *)v7 + 13) = v17;
    *long long v8 = v16;
    long long v18 = v15[5];
    long long v19 = v15[6];
    long long v20 = v15[8];
    *((_OWORD *)v7 + 16) = v15[7];
    *((_OWORD *)v7 + 17) = v20;
    *((_OWORD *)v7 + 14) = v18;
    *((_OWORD *)v7 + 15) = v19;
    long long v21 = v15[9];
    long long v22 = v15[10];
    long long v23 = v15[12];
    *((_OWORD *)v7 + 20) = v15[11];
    *((_OWORD *)v7 + 21) = v23;
    *((_OWORD *)v7 + 18) = v21;
    *((_OWORD *)v7 + 19) = v22;
    memmove(v7 + 352, v15 + 2, 0xB0uLL);
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(v7 + 352, v24);
    outlined init with take of Transform?((uint64_t)(v7 + 352), (uint64_t)v7, &demangling cache variable for type metadata for IKRig.Joint?);
    outlined retain of String?((uint64_t)v8);
    return IKRig.JointCollection.subscript.modify;
  }
  __break(1u);
  return result;
}

uint64_t IKRig.JointCollection.forEach(descendantOf:inclusive:update:)(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void *), uint64_t a5)
{
  uint64_t v6 = v5;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = StringProtocol.hash.getter();
  unint64_t v11 = v5[1];
  if (!*(void *)(v11 + 16)) {
    return result;
  }
  uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(result);
  if ((v12 & 1) == 0) {
    return result;
  }
  unint64_t v13 = *(void *)(*(void *)(v11 + 56) + 8 * result);
  unint64_t v14 = *v5;
  if ((a3 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_128;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    return result;
  }
  while (1)
  {
    if (v13 >= *(void *)(v14 + 16)) {
      goto LABEL_130;
    }
    a4((void *)(v14 + 176 * v13 + 32));
    *uint64_t v6 = v14;
LABEL_8:
    long long v15 = (void *)specialized Array.init(repeating:count:)(MEMORY[0x263F8EE78], *(void *)(v14 + 16));
    uint64_t v16 = *(void *)(v14 + 16);
    if (v16)
    {
      Swift::String v65 = (void *)v13;
      swift_bridgeObjectRetain();
      uint64_t v17 = 0;
      v14 += 56;
      uint64_t v69 = v16;
      unint64_t v71 = v11;
      do
      {
        if ((*(unsigned char *)v14 & 1) == 0)
        {
          if (*(void *)(v11 + 16))
          {
            uint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(*(void *)(v14 - 8));
            if (v19)
            {
              unint64_t v11 = *(void *)(*(void *)(v11 + 56) + 8 * v18);
              if (swift_isUniquelyReferenced_nonNull_native())
              {
                if ((v11 & 0x8000000000000000) != 0) {
                  goto LABEL_111;
                }
              }
              else
              {
                long long v15 = specialized _ArrayBuffer._consumeAndCreateNew()(v15);
                if ((v11 & 0x8000000000000000) != 0) {
                  goto LABEL_111;
                }
              }
              if (v11 >= v15[2]) {
                goto LABEL_110;
              }
              long long v20 = (void *)v15[v11 + 4];
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v68 = v15 + 4;
              v15[v11 + 4] = v20;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                long long v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v20[2] + 1, 1, v20);
                v68[v11] = v20;
              }
              uint64_t v16 = v69;
              unint64_t v13 = v20[2];
              unint64_t v22 = v20[3];
              if (v13 >= v22 >> 1)
              {
                long long v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v22 > 1), v13 + 1, 1, v20);
                v68[v11] = v20;
              }
              v20[2] = v13 + 1;
              v20[v13 + 4] = v17;
              unint64_t v11 = v71;
            }
          }
        }
        ++v17;
        v14 += 176;
      }
      while (v16 != v17);
      swift_bridgeObjectRelease();
      unint64_t v13 = (unint64_t)v65;
    }
    if ((v13 & 0x8000000000000000) != 0) {
      goto LABEL_118;
    }
    if (v13 < v15[2]) {
      break;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((void *)v14);
    unint64_t v14 = result;
    if ((v13 & 0x8000000000000000) != 0) {
      goto LABEL_129;
    }
  }
  uint64_t v72 = v15 + 4;
  uint64_t v23 = v15[v13 + 4];
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = v23 + 32;
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  uint64_t v53 = v25;
  uint64_t v54 = v24;
  while (1)
  {
    uint64_t v60 = v26;
    unint64_t v14 = *(void *)(v25 + 8 * v26);
    unint64_t v13 = *v6;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_100;
      }
    }
    else
    {
      unint64_t v13 = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((void *)v13);
      if ((v14 & 0x8000000000000000) != 0)
      {
LABEL_100:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
    if (v14 >= *(void *)(v13 + 16)) {
      goto LABEL_120;
    }
    a4((void *)(v13 + 176 * v14 + 32));
    *uint64_t v6 = v13;
    if (v14 >= v15[2]) {
      goto LABEL_121;
    }
    uint64_t v27 = v72[v14];
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28) {
      break;
    }
LABEL_97:
    uint64_t v26 = v60 + 1;
    uint64_t v25 = v53;
    if (v60 + 1 == v54) {
      goto LABEL_106;
    }
  }
  uint64_t v29 = v27 + 32;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  uint64_t v51 = v29;
  uint64_t v52 = v28;
LABEL_35:
  uint64_t v58 = v30;
  unint64_t v14 = *(void *)(v29 + 8 * v30);
  unint64_t v13 = *v6;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_127;
    }
  }
  else
  {
    unint64_t v13 = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((void *)v13);
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_127;
    }
  }
  if (v14 >= *(void *)(v13 + 16)) {
    goto LABEL_122;
  }
  a4((void *)(v13 + 176 * v14 + 32));
  *uint64_t v6 = v13;
  if (v14 >= v15[2]) {
    goto LABEL_123;
  }
  uint64_t v31 = v72[v14];
  uint64_t v57 = *(void *)(v31 + 16);
  if (!v57) {
    goto LABEL_93;
  }
  uint64_t v32 = v31 + 32;
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  uint64_t v50 = v32;
LABEL_41:
  uint64_t v59 = v33;
  unint64_t v14 = *(void *)(v32 + 8 * v33);
  unint64_t v13 = *v6;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_126;
    }
  }
  else
  {
    unint64_t v13 = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((void *)v13);
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_126;
    }
  }
  if (v14 >= *(void *)(v13 + 16)) {
    goto LABEL_124;
  }
  a4((void *)(v13 + 176 * v14 + 32));
  *uint64_t v6 = v13;
  if (v14 >= v15[2]) {
    goto LABEL_125;
  }
  uint64_t v34 = v72[v14];
  uint64_t v61 = *(void *)(v34 + 16);
  if (!v61) {
    goto LABEL_89;
  }
  uint64_t v35 = v34 + 32;
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  uint64_t v55 = v35;
LABEL_47:
  uint64_t v62 = v36;
  unint64_t v14 = *(void *)(v35 + 8 * v36);
  unint64_t v13 = *v6;
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_117;
    }
  }
  else
  {
    unint64_t v13 = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((void *)v13);
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_117;
    }
  }
  if (v14 >= *(void *)(v13 + 16)) {
    goto LABEL_115;
  }
  a4((void *)(v13 + 176 * v14 + 32));
  *uint64_t v6 = v13;
  if (v14 >= v15[2])
  {
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  uint64_t v37 = v72[v14];
  unint64_t v11 = *(void *)(v37 + 16);
  if (!v11) {
    goto LABEL_85;
  }
  uint64_t v63 = v37 + 32;
  swift_bridgeObjectRetain();
  uint64_t v38 = 0;
  unint64_t v56 = v11;
  while (1)
  {
    uint64_t v64 = v38;
    unint64_t v14 = *(void *)(v63 + 8 * v38);
    unint64_t v13 = *v6;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_114;
      }
    }
    else
    {
      unint64_t v13 = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((void *)v13);
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_114;
      }
    }
    if (v14 >= *(void *)(v13 + 16)) {
      goto LABEL_112;
    }
    a4((void *)(v13 + 176 * v14 + 32));
    *uint64_t v6 = v13;
    if (v14 >= v15[2]) {
      goto LABEL_113;
    }
    uint64_t v39 = v72[v14];
    long long v67 = *(void **)(v39 + 16);
    if (v67) {
      break;
    }
LABEL_54:
    uint64_t v38 = v64 + 1;
    if (v64 + 1 == v11)
    {
      swift_bridgeObjectRelease();
LABEL_85:
      uint64_t v36 = v62 + 1;
      uint64_t v35 = v55;
      if (v62 + 1 != v61) {
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
LABEL_89:
      uint64_t v33 = v59 + 1;
      uint64_t v32 = v50;
      if (v59 + 1 == v57)
      {
        swift_bridgeObjectRelease();
LABEL_93:
        uint64_t v30 = v58 + 1;
        uint64_t v29 = v51;
        if (v58 + 1 == v52)
        {
          swift_bridgeObjectRelease();
          goto LABEL_97;
        }
        goto LABEL_35;
      }
      goto LABEL_41;
    }
  }
  uint64_t v66 = v39 + 32;
  swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  while (1)
  {
    unint64_t v11 = *(void *)(v66 + 8 * v13);
    unint64_t v14 = *v6;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_109;
      }
    }
    else
    {
      unint64_t v14 = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew()((void *)v14);
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_109;
      }
    }
    if (v11 >= *(void *)(v14 + 16))
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
    a4((void *)(v14 + 176 * v11 + 32));
    *uint64_t v6 = v14;
    if (v11 >= v15[2]) {
      goto LABEL_108;
    }
    uint64_t v40 = v72[v11];
    uint64_t v41 = *(void *)(v40 + 16);
    if (v41) {
      break;
    }
LABEL_62:
    if ((void *)++v13 == v67)
    {
      swift_bridgeObjectRelease();
      unint64_t v11 = v56;
      goto LABEL_54;
    }
  }
  v70 = (void *)v13;
  uint64_t v42 = v40 + 32;
  swift_bridgeObjectRetain();
  uint64_t v43 = 0;
  while (1)
  {
    unint64_t v44 = *(void *)(v42 + 8 * v43);
    uint64_t v45 = (void *)*v6;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      break;
    }
    if ((v44 & 0x8000000000000000) != 0) {
      goto LABEL_103;
    }
LABEL_72:
    if (v44 >= v45[2]) {
      goto LABEL_104;
    }
    a4(&v45[22 * v44 + 4]);
    *uint64_t v6 = (uint64_t)v45;
    if (v44 >= v15[2]) {
      goto LABEL_105;
    }
    uint64_t v46 = v72[v44];
    uint64_t v47 = *(void *)(v46 + 16);
    swift_bridgeObjectRetain();
    if (v47)
    {
      uint64_t v48 = (unint64_t *)(v46 + 32);
      do
      {
        unint64_t v49 = *v48++;
        updateChildren #1 (of:) in IKRig.JointCollection.forEach(descendantOf:inclusive:update:)(v49, a4, a5, v6, (uint64_t)v15);
        --v47;
      }
      while (v47);
    }
    swift_bridgeObjectRelease();
    if (++v43 == v41)
    {
      swift_bridgeObjectRelease();
      unint64_t v13 = (unint64_t)v70;
      goto LABEL_62;
    }
  }
  uint64_t v45 = specialized _ArrayBuffer._consumeAndCreateNew()(v45);
  if ((v44 & 0x8000000000000000) == 0) {
    goto LABEL_72;
  }
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t updateChildren #1 (of:) in IKRig.JointCollection.forEach(descendantOf:inclusive:update:)(unint64_t a1, uint64_t (*a2)(void *), uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v10 = (void *)*a4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v10;
  if (result)
  {
    if ((a1 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v10);
  uint64_t v10 = (void *)result;
  *a4 = result;
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_13;
  }
LABEL_3:
  if (v10[2] <= a1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = a2(&v10[22 * a1 + 4]);
  if (*(void *)(a5 + 16) <= a1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(a5 + 8 * a1 + 32);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v13; ++i)
    {
      uint64_t v15 = *(void *)(v12 + 8 * i + 32);
      updateChildren #1 (of:) in IKRig.JointCollection.forEach(descendantOf:inclusive:update:)(v15, a2, a3, a4, a5);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t IKRig.JointCollection.count.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

BOOL IKRig.JointCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

Swift::Bool __swiftcall IKRig.JointCollection.contains(_:)(RealityFoundation::IKRig::Joint::ID a1)
{
  return IKRig.JointCollection.contains(_:)((void *)a1.nameHash, (void (*)(void))specialized __RawDictionaryStorage.find<A>(_:));
}

uint64_t IKRig.JointCollection.set(_:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  long long v5 = a1[9];
  long long v65 = a1[8];
  long long v66 = v5;
  long long v67 = a1[10];
  long long v6 = a1[5];
  long long v61 = a1[4];
  long long v62 = v6;
  long long v7 = a1[7];
  long long v63 = a1[6];
  long long v64 = v7;
  long long v8 = a1[1];
  long long v57 = *a1;
  long long v58 = v8;
  long long v9 = a1[3];
  long long v59 = a1[2];
  long long v60 = v9;
  long long v46 = v57;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v10 = StringProtocol.hash.getter();
  unint64_t v11 = *(void **)(v2 + 8);
  if (!v11[2] || (uint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(v10), (v13 & 1) == 0))
  {
    _s17RealityFoundation5IKRigV5JointVSgWOi0_(&v46);
    uint64_t v43 = &v46;
    return outlined init with take of Transform?((uint64_t)v43, a2, &demangling cache variable for type metadata for IKRig.Joint?);
  }
  unint64_t v14 = *(void *)(v11[7] + 8 * v12);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = *(void **)v3;
    if (v14 < *(void *)(*(void *)v3 + 16))
    {
      uint64_t v15 = &v11[22 * v14];
      long long v16 = v15[2];
      long long v17 = v15[4];
      long long v47 = v15[3];
      long long v48 = v17;
      long long v46 = v16;
      long long v18 = v15[5];
      long long v19 = v15[6];
      long long v20 = v15[8];
      long long v51 = v15[7];
      long long v52 = v20;
      long long v49 = v18;
      long long v50 = v19;
      long long v21 = v15[9];
      long long v22 = v15[10];
      long long v23 = v15[12];
      long long v55 = v15[11];
      long long v56 = v23;
      long long v53 = v21;
      long long v54 = v22;
      outlined retain of String?((uint64_t)&v46);
      outlined retain of String?((uint64_t)&v57);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_12:
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v11);
  unint64_t v11 = (void *)result;
LABEL_6:
  if (v14 < v11[2])
  {
    uint64_t v25 = &v11[22 * v14];
    long long v26 = v25[2];
    long long v27 = v25[4];
    v44[1] = v25[3];
    v44[2] = v27;
    v44[0] = v26;
    long long v28 = v25[5];
    long long v29 = v25[6];
    long long v30 = v25[8];
    v44[5] = v25[7];
    v44[6] = v30;
    v44[3] = v28;
    v44[4] = v29;
    long long v31 = v25[9];
    long long v32 = v25[10];
    long long v33 = v25[12];
    v44[9] = v25[11];
    v44[10] = v33;
    v44[7] = v31;
    v44[8] = v32;
    long long v34 = v57;
    long long v35 = v59;
    v25[3] = v58;
    void v25[4] = v35;
    v25[2] = v34;
    long long v36 = v60;
    long long v37 = v61;
    long long v38 = v63;
    v25[7] = v62;
    v25[8] = v38;
    v25[5] = v36;
    v25[6] = v37;
    long long v39 = v64;
    long long v40 = v65;
    long long v41 = v67;
    v25[11] = v66;
    v25[12] = v41;
    v25[9] = v39;
    v25[10] = v40;
    outlined release of IKRig.Joint?((uint64_t)v44);
    *(void *)uint64_t v3 = v11;
    v45[8] = v54;
    v45[9] = v55;
    v45[10] = v56;
    v45[4] = v50;
    v45[5] = v51;
    v45[6] = v52;
    v45[7] = v53;
    v45[0] = v46;
    v45[1] = v47;
    v45[2] = v48;
    v45[3] = v49;
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(v45, v42);
    uint64_t v43 = v45;
    return outlined init with take of Transform?((uint64_t)v43, a2, &demangling cache variable for type metadata for IKRig.Joint?);
  }
  __break(1u);
  return result;
}

uint64_t IKRig.JointCollection.startIndex.getter()
{
  return 0;
}

unint64_t IKRig.JointCollection.subscript.getter@<X0>(unint64_t result@<X0>, _OWORD *a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > result)
  {
    uint64_t v3 = (_OWORD *)(*(void *)v2 + 176 * result);
    long long v4 = v3[2];
    long long v5 = v3[4];
    v17[1] = v3[3];
    v17[2] = v5;
    v17[0] = v4;
    long long v6 = v3[5];
    long long v7 = v3[6];
    long long v8 = v3[8];
    v17[5] = v3[7];
    v17[6] = v8;
    v17[3] = v6;
    v17[4] = v7;
    long long v9 = v3[9];
    long long v10 = v3[10];
    long long v11 = v3[12];
    v17[9] = v3[11];
    v17[10] = v11;
    v17[7] = v9;
    v17[8] = v10;
    long long v12 = v3[11];
    a2[8] = v3[10];
    a2[9] = v12;
    a2[10] = v3[12];
    long long v13 = v3[7];
    a2[4] = v3[6];
    a2[5] = v13;
    long long v14 = v3[9];
    a2[6] = v3[8];
    a2[7] = v14;
    long long v15 = v3[3];
    *a2 = v3[2];
    a2[1] = v15;
    long long v16 = v3[5];
    a2[2] = v3[4];
    a2[3] = v16;
    return outlined retain of String?((uint64_t)v17);
  }
  __break(1u);
  return result;
}

uint64_t key path getter for IKRig.JointCollection.subscript(_:) : IKRig.JointCollection@<X0>(uint64_t result@<X0>, unint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)result + 16))
  {
    long long v4 = (_OWORD *)(*(void *)result + 176 * v3);
    long long v5 = v4[2];
    long long v6 = v4[4];
    v18[1] = v4[3];
    v18[2] = v6;
    v18[0] = v5;
    long long v7 = v4[5];
    long long v8 = v4[6];
    long long v9 = v4[8];
    v18[5] = v4[7];
    v18[6] = v9;
    v18[3] = v7;
    v18[4] = v8;
    long long v10 = v4[9];
    long long v11 = v4[10];
    long long v12 = v4[12];
    v18[9] = v4[11];
    v18[10] = v12;
    v18[7] = v10;
    v18[8] = v11;
    long long v13 = v4[11];
    a3[8] = v4[10];
    a3[9] = v13;
    a3[10] = v4[12];
    long long v14 = v4[7];
    a3[4] = v4[6];
    a3[5] = v14;
    long long v15 = v4[9];
    a3[6] = v4[8];
    a3[7] = v15;
    long long v16 = v4[3];
    *a3 = v4[2];
    a3[1] = v16;
    long long v17 = v4[5];
    a3[2] = v4[4];
    a3[3] = v17;
    return outlined retain of String?((uint64_t)v18);
  }
  __break(1u);
  return result;
}

uint64_t key path setter for IKRig.JointCollection.subscript(_:) : IKRig.JointCollection(long long *a1, void **a2, unint64_t *a3)
{
  unint64_t v4 = *a3;
  long long v5 = a1[9];
  long long v38 = a1[8];
  long long v39 = v5;
  long long v40 = a1[10];
  long long v6 = a1[5];
  long long v34 = a1[4];
  long long v35 = v6;
  long long v7 = a1[7];
  long long v36 = a1[6];
  long long v37 = v7;
  long long v8 = a1[1];
  long long v30 = *a1;
  long long v31 = v8;
  long long v9 = a1[3];
  long long v32 = a1[2];
  long long v33 = v9;
  long long v10 = *a2;
  outlined retain of String?((uint64_t)&v30);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v10);
  long long v10 = (void *)result;
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v4 < v10[2])
  {
    long long v12 = &v10[22 * v4];
    long long v13 = v12[2];
    long long v14 = v12[4];
    v29[1] = v12[3];
    v29[2] = v14;
    v29[0] = v13;
    long long v15 = v12[5];
    long long v16 = v12[6];
    long long v17 = v12[8];
    v29[5] = v12[7];
    v29[6] = v17;
    void v29[3] = v15;
    v29[4] = v16;
    long long v18 = v12[9];
    long long v19 = v12[10];
    long long v20 = v12[12];
    v29[9] = v12[11];
    v29[10] = v20;
    v29[7] = v18;
    v29[8] = v19;
    long long v21 = v30;
    long long v22 = v32;
    v12[3] = v31;
    v12[4] = v22;
    v12[2] = v21;
    long long v23 = v33;
    long long v24 = v34;
    long long v25 = v36;
    v12[7] = v35;
    v12[8] = v25;
    v12[5] = v23;
    v12[6] = v24;
    long long v26 = v37;
    long long v27 = v38;
    long long v28 = v40;
    v12[11] = v39;
    v12[12] = v28;
    v12[9] = v26;
    v12[10] = v27;
    uint64_t result = outlined release of IKRig.Joint?((uint64_t)v29);
    *a2 = v10;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t IKRig.JointCollection.subscript.setter(_OWORD *a1, unint64_t a2)
{
  long long v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v5);
  long long v5 = (void *)result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v5[2] > a2)
  {
    long long v7 = &v5[22 * a2];
    long long v8 = v7[2];
    long long v9 = v7[4];
    v21[1] = v7[3];
    v21[2] = v9;
    v21[0] = v8;
    long long v10 = v7[5];
    long long v11 = v7[6];
    long long v12 = v7[8];
    v21[5] = v7[7];
    v21[6] = v12;
    v21[3] = v10;
    v21[4] = v11;
    long long v13 = v7[9];
    long long v14 = v7[10];
    long long v15 = v7[12];
    v21[9] = v7[11];
    v21[10] = v15;
    v21[7] = v13;
    v21[8] = v14;
    long long v16 = a1[9];
    v7[10] = a1[8];
    v7[11] = v16;
    v7[12] = a1[10];
    long long v17 = a1[5];
    void v7[6] = a1[4];
    v7[7] = v17;
    long long v18 = a1[7];
    v7[8] = a1[6];
    v7[9] = v18;
    long long v19 = a1[1];
    v7[2] = *a1;
    v7[3] = v19;
    long long v20 = a1[3];
    v7[4] = a1[2];
    v7[5] = v20;
    uint64_t result = outlined release of IKRig.Joint?((uint64_t)v21);
    *uint64_t v2 = v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t (*IKRig.JointCollection.subscript.modify(void *a1, unint64_t a2))()
{
  unint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = specialized Array.subscript.modify((uint64_t)v4, a2);
  return IKRig.JointCollection.subscript.modify;
}

Swift::Int __swiftcall IKRig.JointCollection.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t IKRig.JointCollection.Iterator.next()@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[1];
  unint64_t v4 = *(void *)(*v1 + 16);
  if (v3 == v4)
  {
    _s17RealityFoundation5IKRigV5JointVSgWOi0_(v16);
    return outlined init with take of Transform?((uint64_t)v16, (uint64_t)a1, &demangling cache variable for type metadata for IKRig.Joint?);
  }
  else if (v3 >= v4)
  {
    __break(1u);
  }
  else
  {
    long long v6 = (_OWORD *)(*v1 + 176 * v3);
    long long v7 = v6[2];
    long long v8 = v6[4];
    v16[1] = v6[3];
    v16[2] = v8;
    v16[0] = v7;
    long long v9 = v6[5];
    long long v10 = v6[6];
    long long v11 = v6[8];
    v16[5] = v6[7];
    v16[6] = v11;
    v16[3] = v9;
    v16[4] = v10;
    long long v12 = v6[9];
    long long v13 = v6[10];
    long long v14 = v6[12];
    v16[9] = v6[11];
    v16[10] = v14;
    v16[7] = v12;
    v16[8] = v13;
    memmove(a1, v6 + 2, 0xB0uLL);
    v1[1] = v3 + 1;
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v15);
    return outlined retain of String?((uint64_t)v16);
  }
  return result;
}

uint64_t protocol witness for IteratorProtocol.next() in conformance IKRig.JointCollection.Iterator@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[1];
  unint64_t v4 = *(void *)(*v1 + 16);
  if (v3 == v4)
  {
    _s17RealityFoundation5IKRigV5JointVSgWOi0_(v16);
    return outlined init with take of Transform?((uint64_t)v16, (uint64_t)a1, &demangling cache variable for type metadata for IKRig.Joint?);
  }
  else if (v3 >= v4)
  {
    __break(1u);
  }
  else
  {
    long long v6 = (_OWORD *)(*v1 + 176 * v3);
    long long v7 = v6[2];
    long long v8 = v6[4];
    v16[1] = v6[3];
    v16[2] = v8;
    v16[0] = v7;
    long long v9 = v6[5];
    long long v10 = v6[6];
    long long v11 = v6[8];
    v16[5] = v6[7];
    v16[6] = v11;
    v16[3] = v9;
    v16[4] = v10;
    long long v12 = v6[9];
    long long v13 = v6[10];
    long long v14 = v6[12];
    v16[9] = v6[11];
    v16[10] = v14;
    v16[7] = v12;
    v16[8] = v13;
    memmove(a1, v6 + 2, 0xB0uLL);
    v1[1] = v3 + 1;
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v15);
    return outlined retain of String?((uint64_t)v16);
  }
  return result;
}

uint64_t IKRig.JointCollection.makeIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = 0;
  return result;
}

void protocol witness for Collection.endIndex.getter in conformance IKRig.JointCollection(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

uint64_t (*protocol witness for Collection.subscript.read in conformance IKRig.JointCollection(void *a1, unint64_t *a2))()
{
  unint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = IKRig.JointCollection.subscript.read(v4, *a2);
  return protocol witness for Collection.subscript.read in conformance IKRig.JointCollection;
}

_OWORD *IKRig.JointCollection.subscript.read(void *a1, unint64_t a2)
{
  uint64_t result = malloc(0x210uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > a2)
  {
    uint64_t v6 = (uint64_t)result;
    long long v7 = (_OWORD *)(*(void *)v2 + 176 * a2);
    long long v8 = v7[2];
    long long v9 = v7[4];
    result[1] = v7[3];
    result[2] = v9;
    *uint64_t result = v8;
    long long v10 = v7[5];
    long long v11 = v7[6];
    long long v12 = v7[8];
    result[5] = v7[7];
    result[6] = v12;
    result[3] = v10;
    result[4] = v11;
    long long v13 = v7[9];
    long long v14 = v7[10];
    long long v15 = v7[12];
    result[9] = v7[11];
    result[10] = v15;
    result[7] = v13;
    result[8] = v14;
    memmove(result + 11, v7 + 2, 0xB0uLL);
    outlined retain of String?(v6);
    return IKRig.JointCollection.subscript.read;
  }
  __break(1u);
  return result;
}

void IKRig.JointCollection.subscript.read(_OWORD **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t)(*a1 + 22);
  long long v3 = v1[20];
  v1[30] = v1[19];
  v1[31] = v3;
  v1[32] = v1[21];
  long long v4 = v1[16];
  v1[26] = v1[15];
  v1[27] = v4;
  long long v5 = v1[18];
  v1[28] = v1[17];
  v1[29] = v5;
  long long v6 = v1[12];
  v1[22] = v1[11];
  v1[23] = v6;
  long long v7 = v1[14];
  v1[24] = v1[13];
  v1[25] = v7;
  outlined release of IKRig.Joint?(v2);

  free(v1);
}

BOOL protocol witness for Collection.isEmpty.getter in conformance IKRig.JointCollection()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

uint64_t protocol witness for Collection.index(_:offsetBy:limitedBy:) in conformance IKRig.JointCollection@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  return protocol witness for Collection.index(_:offsetBy:limitedBy:) in conformance IKRig.JointCollection(a1, a2, a3, specialized Collection.index(_:offsetBy:limitedBy:), a4);
}

uint64_t protocol witness for Sequence.underestimatedCount.getter in conformance IKRig.JointCollection()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t protocol witness for Sequence._copyToContiguousArray() in conformance IKRig.JointCollection(uint64_t a1, uint64_t a2)
{
  return protocol witness for Sequence._copyToContiguousArray() in conformance IKRig.JointCollection(a1, a2, (uint64_t (*)(void, void))specialized _copyCollectionToContiguousArray<A>(_:));
}

uint64_t protocol witness for Sequence._copyContents(initializing:) in conformance IKRig.JointCollection(void *a1, char *a2, unint64_t a3)
{
  return specialized Sequence._copySequenceContents(initializing:)(a1, a2, a3, *v3);
}

RealityFoundation::IKRig::ConstraintsCollection __swiftcall IKRig.ConstraintsCollection.init(_:)(Swift::OpaquePointer a1)
{
  long long v3 = v1;
  uint64_t v22 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, 0, 0);
  uint64_t v4 = v22;
  uint64_t v5 = *((void *)a1._rawValue + 2);
  if (v5)
  {
    long long v20 = v3;
    lazy protocol witness table accessor for type String and conformance String();
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    rawValue = a1._rawValue;
    long long v7 = (uint64_t *)((char *)a1._rawValue + 40);
    do
    {
      uint64_t v8 = *v7;
      v21[0] = *(v7 - 1);
      v21[1] = v8;
      uint64_t v9 = StringProtocol.hash.getter();
      uint64_t v22 = v4;
      unint64_t v11 = *(void *)(v4 + 16);
      unint64_t v10 = *(void *)(v4 + 24);
      if (v11 >= v10 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
        uint64_t v4 = v22;
      }
      v7 += 20;
      uint64_t v12 = v4 + 16 * v11;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v6;
      *(void *)(v4 + 16) = v11 + 1;
      ++v6;
    }
    while (v5 != v6);
    a1._rawValue = rawValue;
    swift_bridgeObjectRelease_n();
    long long v3 = v20;
    if (*(void *)(v4 + 16)) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v13 = MEMORY[0x263F8EE80];
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v22 + 16)) {
    goto LABEL_9;
  }
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<IKRig.Constraint.ID, Int>);
  uint64_t v13 = static _DictionaryStorage.allocate(capacity:)();
LABEL_10:
  v21[0] = v13;
  long long v14 = (void *)swift_bridgeObjectRetain();
  specialized _NativeDictionary.merge<A>(_:isUnique:uniquingKeysWith:)(v14, 1, v21);
  long long v15 = (void *)swift_release();
  long long v17 = (void *)v21[0];
  v3->_rawValue = a1._rawValue;
  v3[1]._rawValue = v17;
  result.lookUpHelper._rawValue = v16;
  result.storage._rawValue = v15;
  return result;
}

uint64_t IKRig.ConstraintsCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v8 = a1;
  *((void *)&v8 + 1) = a2;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = StringProtocol.hash.getter();
  long long v8 = *v3;
  uint64_t v7 = v5;
  return IKRig.ConstraintsCollection.subscript.getter(&v7, a3);
}

uint64_t key path getter for IKRig.ConstraintsCollection.subscript(_:) : IKRig.ConstraintsCollection@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8[0] = v3;
  v8[1] = v4;
  uint64_t v6 = StringProtocol.hash.getter();
  IKRig.ConstraintsCollection.subscript.getter(&v6, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined init with take of Transform?((uint64_t)v7, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Constraint?);
  return outlined init with take of Transform?((uint64_t)v8, a2, &demangling cache variable for type metadata for IKRig.Constraint?);
}

uint64_t key path setter for IKRig.ConstraintsCollection.subscript(_:) : IKRig.ConstraintsCollection(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  outlined init with take of Transform?(a1, (uint64_t)v9, &demangling cache variable for type metadata for IKRig.Constraint?);
  v8[0] = v3;
  v8[1] = v4;
  outlined retain of IKRig.Constraint?(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of IKRig.Constraint?);
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = StringProtocol.hash.getter();
  outlined init with take of Transform?((uint64_t)v9, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Constraint?);
  uint64_t v7 = v5;
  return IKRig.ConstraintsCollection.subscript.setter((uint64_t)v8, &v7);
}

{
  uint64_t v3;
  uint64_t v5;
  unsigned char v6[160];
  void v7[20];

  uint64_t v3 = *a3;
  outlined init with take of Transform?(a1, (uint64_t)v7, &demangling cache variable for type metadata for IKRig.Constraint?);
  outlined init with take of Transform?((uint64_t)v7, (uint64_t)v6, &demangling cache variable for type metadata for IKRig.Constraint?);
  uint64_t v5 = v3;
  outlined retain of IKRig.Constraint?(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of IKRig.Constraint?);
  return IKRig.ConstraintsCollection.subscript.setter((uint64_t)v6, &v5);
}

uint64_t IKRig.ConstraintsCollection.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  outlined init with take of Transform?(a1, (uint64_t)v9, &demangling cache variable for type metadata for IKRig.Constraint?);
  v8[0] = a2;
  v8[1] = a3;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = StringProtocol.hash.getter();
  swift_bridgeObjectRelease();
  outlined init with take of Transform?((uint64_t)v9, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Constraint?);
  uint64_t v7 = v5;
  return IKRig.ConstraintsCollection.subscript.setter((uint64_t)v8, &v7);
}

uint64_t IKRig.ConstraintsCollection.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = v2[1];
  if (*(void *)(v5 + 16) && (uint64_t v6 = *v3, result = specialized __RawDictionaryStorage.find<A>(_:)(*a1), (v8 & 1) != 0))
  {
    unint64_t v9 = *(void *)(*(void *)(v5 + 56) + 8 * result);
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)(v6 + 16))
    {
      unint64_t v10 = (_OWORD *)(v6 + 160 * v9);
      long long v11 = v10[3];
      v19[0] = v10[2];
      v19[1] = v11;
      long long v12 = v10[4];
      long long v13 = v10[5];
      long long v14 = v10[7];
      v19[4] = v10[6];
      v19[5] = v14;
      void v19[2] = v12;
      v19[3] = v13;
      long long v15 = v10[8];
      long long v16 = v10[9];
      long long v17 = v10[11];
      v19[8] = v10[10];
      v19[9] = v17;
      v19[6] = v15;
      v19[7] = v16;
      memmove(__dst, v10 + 2, 0xA0uLL);
      destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(__dst, v18);
      outlined init with take of Transform?((uint64_t)__dst, a2, &demangling cache variable for type metadata for IKRig.Constraint?);
      return outlined retain of IKRig.Constraint((uint64_t)v19);
    }
    __break(1u);
  }
  else
  {
    _s17RealityFoundation5IKRigV10ConstraintVSgWOi0_(__dst);
    return outlined init with take of Transform?((uint64_t)__dst, a2, &demangling cache variable for type metadata for IKRig.Constraint?);
  }
  return result;
}

uint64_t IKRig.ConstraintsCollection.subscript.setter(uint64_t a1, void *a2)
{
  uint64_t v3 = (void **)v2;
  outlined init with take of Transform?(a1, (uint64_t)v47, &demangling cache variable for type metadata for IKRig.Constraint?);
  uint64_t v5 = *(void *)(v2 + 8);
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = specialized __RawDictionaryStorage.find<A>(_:)(*a2);
    if (v7)
    {
      unint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
      outlined init with take of Transform?((uint64_t)v47, (uint64_t)&v37, &demangling cache variable for type metadata for IKRig.Constraint?);
      if (getEnumTag for AudioFileResource.Error((uint64_t)&v37) == 1)
      {
        specialized Array.remove(at:)(v8, v36);
        return outlined release of IKRig.Constraint((uint64_t)v36);
      }
      unint64_t v10 = *v3;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        if ((v8 & 0x8000000000000000) == 0) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v10);
        unint64_t v10 = (void *)result;
        if ((v8 & 0x8000000000000000) == 0)
        {
LABEL_13:
          if (v8 < v10[2])
          {
            long long v21 = &v10[20 * v8];
            long long v22 = v21[3];
            v36[0] = v21[2];
            v36[1] = v22;
            long long v23 = v21[4];
            long long v24 = v21[5];
            long long v25 = v21[7];
            v36[4] = v21[6];
            v36[5] = v25;
            v36[2] = v23;
            v36[3] = v24;
            long long v26 = v21[8];
            long long v27 = v21[9];
            long long v28 = v21[11];
            v36[8] = v21[10];
            v36[9] = v28;
            v36[6] = v26;
            v36[7] = v27;
            long long v29 = v38;
            void v21[2] = v37;
            v21[3] = v29;
            long long v30 = v39;
            long long v31 = v40;
            long long v32 = v42;
            v21[6] = v41;
            v21[7] = v32;
            v21[4] = v30;
            v21[5] = v31;
            long long v33 = v43;
            long long v34 = v44;
            long long v35 = v46;
            v21[10] = v45;
            _OWORD v21[11] = v35;
            v21[8] = v33;
            v21[9] = v34;
            uint64_t result = outlined release of IKRig.Constraint((uint64_t)v36);
            goto LABEL_15;
          }
LABEL_19:
          __break(1u);
          return result;
        }
      }
      __break(1u);
      goto LABEL_19;
    }
  }
  outlined init with take of Transform?((uint64_t)v47, (uint64_t)&v37, &demangling cache variable for type metadata for IKRig.Constraint?);
  uint64_t result = getEnumTag for AudioFileResource.Error((uint64_t)&v37);
  if (result == 1) {
    return result;
  }
  unint64_t v10 = *v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v10[2] + 1, 1, v10);
    unint64_t v10 = (void *)result;
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v11 > 1), v12 + 1, 1, v10);
    unint64_t v10 = (void *)result;
  }
  v10[2] = v12 + 1;
  long long v13 = &v10[20 * v12];
  long long v14 = v38;
  v13[2] = v37;
  v13[3] = v14;
  long long v15 = v39;
  long long v16 = v40;
  long long v17 = v42;
  v13[6] = v41;
  v13[7] = v17;
  v13[4] = v15;
  v13[5] = v16;
  long long v18 = v43;
  long long v19 = v44;
  long long v20 = v46;
  v13[10] = v45;
  v13[11] = v20;
  v13[8] = v18;
  v13[9] = v19;
LABEL_15:
  *uint64_t v3 = v10;
  return result;
}

void (*IKRig.ConstraintsCollection.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  char v7 = (char *)malloc(0x2A0uLL);
  *a1 = v7;
  *((void *)v7 + 20) = a2;
  unint64_t v8 = v7 + 160;
  *((void *)v7 + 82) = v3;
  *((void *)v7 + 81) = a3;
  *((void *)v7 + 80) = a2;
  uint64_t v10 = *v3;
  uint64_t v9 = v3[1];
  *((void *)v7 + 21) = a3;
  *((void *)v7 + 83) = lazy protocol witness table accessor for type String and conformance String();
  uint64_t v11 = StringProtocol.hash.getter();
  if (!*(void *)(v9 + 16)
    || (uint64_t result = (void (*)(uint64_t *, char))specialized __RawDictionaryStorage.find<A>(_:)(v11),
        (v13 & 1) == 0))
  {
    _s17RealityFoundation5IKRigV10ConstraintVSgWOi0_(v8);
    outlined init with take of Transform?((uint64_t)v8, (uint64_t)v7, &demangling cache variable for type metadata for IKRig.Constraint?);
    return IKRig.ConstraintsCollection.subscript.modify;
  }
  unint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * (void)result);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v14 < *(void *)(v10 + 16))
  {
    long long v15 = (_OWORD *)(v10 + 160 * v14);
    long long v16 = v15[3];
    *unint64_t v8 = v15[2];
    *((_OWORD *)v7 + 11) = v16;
    long long v17 = v15[4];
    long long v18 = v15[5];
    long long v19 = v15[7];
    *((_OWORD *)v7 + 14) = v15[6];
    *((_OWORD *)v7 + 15) = v19;
    *((_OWORD *)v7 + 12) = v17;
    *((_OWORD *)v7 + 13) = v18;
    long long v20 = v15[8];
    long long v21 = v15[9];
    long long v22 = v15[11];
    *((_OWORD *)v7 + 18) = v15[10];
    *((_OWORD *)v7 + 19) = v22;
    *((_OWORD *)v7 + 16) = v20;
    *((_OWORD *)v7 + 17) = v21;
    memmove(v7 + 320, v15 + 2, 0xA0uLL);
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(v7 + 320, v23);
    outlined init with take of Transform?((uint64_t)(v7 + 320), (uint64_t)v7, &demangling cache variable for type metadata for IKRig.Constraint?);
    outlined retain of IKRig.Constraint((uint64_t)v8);
    return IKRig.ConstraintsCollection.subscript.modify;
  }
  __break(1u);
  return result;
}

void IKRig.ConstraintsCollection.subscript.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = (void *)(*a1 + 160);
  uint64_t v4 = (void *)(*a1 + 320);
  if (a2)
  {
    uint64_t v5 = v2[81];
    uint64_t v6 = v2[80];
    outlined init with take of Transform?(*a1, (uint64_t)v4, &demangling cache variable for type metadata for IKRig.Constraint?);
    v2[60] = v6;
    v2[61] = v5;
    outlined retain of IKRig.Constraint?(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of IKRig.Constraint?);
    uint64_t v7 = StringProtocol.hash.getter();
    outlined init with take of Transform?((uint64_t)v4, (uint64_t)(v2 + 60), &demangling cache variable for type metadata for IKRig.Constraint?);
    uint64_t v11 = v7;
    IKRig.ConstraintsCollection.subscript.setter((uint64_t)(v2 + 60), &v11);
    outlined init with take of Transform?((uint64_t)v2, (uint64_t)v3, &demangling cache variable for type metadata for IKRig.Constraint?);
    outlined retain of IKRig.Constraint?(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of IKRig.Constraint?);
  }
  else
  {
    uint64_t v8 = v2[81];
    uint64_t v9 = v2[80];
    outlined init with take of Transform?(*a1, (uint64_t)v3, &demangling cache variable for type metadata for IKRig.Constraint?);
    v2[40] = v9;
    v2[41] = v8;
    uint64_t v10 = StringProtocol.hash.getter();
    outlined init with take of Transform?((uint64_t)v3, (uint64_t)v4, &demangling cache variable for type metadata for IKRig.Constraint?);
    uint64_t v11 = v10;
    IKRig.ConstraintsCollection.subscript.setter((uint64_t)v4, &v11);
  }

  free(v2);
}

{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t vars8;

  uint64_t v2 = (void *)*a1;
  uint64_t v3 = (void *)(*a1 + 160);
  uint64_t v4 = (void *)(*a1 + 320);
  if (a2)
  {
    uint64_t v5 = v2[81];
    outlined init with take of Transform?(*a1, (uint64_t)v4, &demangling cache variable for type metadata for IKRig.Constraint?);
    outlined init with take of Transform?((uint64_t)v4, (uint64_t)(v2 + 60), &demangling cache variable for type metadata for IKRig.Constraint?);
    uint64_t v7 = v5;
    outlined retain of IKRig.Constraint?(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of IKRig.Constraint?);
    IKRig.ConstraintsCollection.subscript.setter((uint64_t)(v2 + 60), &v7);
    outlined init with take of Transform?((uint64_t)v2, (uint64_t)v3, &demangling cache variable for type metadata for IKRig.Constraint?);
    outlined retain of IKRig.Constraint?(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of IKRig.Constraint?);
  }
  else
  {
    uint64_t v6 = v2[81];
    outlined init with take of Transform?(*a1, (uint64_t)v3, &demangling cache variable for type metadata for IKRig.Constraint?);
    outlined init with take of Transform?((uint64_t)v3, (uint64_t)v4, &demangling cache variable for type metadata for IKRig.Constraint?);
    uint64_t v7 = v6;
    IKRig.ConstraintsCollection.subscript.setter((uint64_t)v4, &v7);
  }

  free(v2);
}

uint64_t key path getter for IKRig.ConstraintsCollection.subscript(_:) : IKRig.ConstraintsCollection@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  v8[0] = *a1;
  uint64_t v6 = v4;
  IKRig.ConstraintsCollection.subscript.getter(&v6, (uint64_t)v7);
  outlined init with take of Transform?((uint64_t)v7, (uint64_t)v8, &demangling cache variable for type metadata for IKRig.Constraint?);
  return outlined init with take of Transform?((uint64_t)v8, a3, &demangling cache variable for type metadata for IKRig.Constraint?);
}

void (*IKRig.ConstraintsCollection.subscript.modify(void *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = (char *)malloc(0x290uLL);
  *a1 = v5;
  uint64_t v6 = v5 + 160;
  *((void *)v5 + 80) = v2;
  uint64_t v7 = *a2;
  *((void *)v5 + 81) = *a2;
  uint64_t v8 = v2[1];
  if (!*(void *)(v8 + 16)
    || (uint64_t v9 = *v2,
        uint64_t result = (void (*)(uint64_t *, char))specialized __RawDictionaryStorage.find<A>(_:)(v7),
        (v11 & 1) == 0))
  {
    _s17RealityFoundation5IKRigV10ConstraintVSgWOi0_(v6);
    outlined init with take of Transform?((uint64_t)v6, (uint64_t)v5, &demangling cache variable for type metadata for IKRig.Constraint?);
    return IKRig.ConstraintsCollection.subscript.modify;
  }
  unint64_t v12 = *(void *)(*(void *)(v8 + 56) + 8 * (void)result);
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < *(void *)(v9 + 16))
  {
    char v13 = (_OWORD *)(v9 + 160 * v12);
    long long v14 = v13[3];
    *((_OWORD *)v5 + 20) = v13[2];
    *((_OWORD *)v5 + 21) = v14;
    long long v15 = v13[4];
    long long v16 = v13[5];
    long long v17 = v13[7];
    *((_OWORD *)v5 + 24) = v13[6];
    *((_OWORD *)v5 + 25) = v17;
    *((_OWORD *)v5 + 22) = v15;
    *((_OWORD *)v5 + 23) = v16;
    long long v18 = v13[8];
    long long v19 = v13[9];
    long long v20 = v13[11];
    *((_OWORD *)v5 + 28) = v13[10];
    *((_OWORD *)v5 + 29) = v20;
    *((_OWORD *)v5 + 26) = v18;
    *((_OWORD *)v5 + 27) = v19;
    memmove(v6, v13 + 2, 0xA0uLL);
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(v6, v21);
    outlined init with take of Transform?((uint64_t)v6, (uint64_t)v5, &demangling cache variable for type metadata for IKRig.Constraint?);
    outlined retain of IKRig.Constraint((uint64_t)(v5 + 320));
    return IKRig.ConstraintsCollection.subscript.modify;
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall IKRig.ConstraintsCollection.contains(_:)(RealityFoundation::IKRig::Constraint::ID a1)
{
  return IKRig.JointCollection.contains(_:)((void *)a1.nameHash, (void (*)(void))specialized __RawDictionaryStorage.find<A>(_:));
}

uint64_t IKRig.JointCollection.contains(_:)(void *a1, void (*a2)(void))
{
  if (*(void *)(*(void *)(v2 + 8) + 16)) {
    a2(*a1);
  }
  else {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t IKRig.ConstraintsCollection.set(_:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  long long v5 = a1[7];
  long long v59 = a1[6];
  long long v60 = v5;
  long long v6 = a1[9];
  long long v61 = a1[8];
  long long v62 = v6;
  long long v7 = a1[3];
  long long v55 = a1[2];
  long long v56 = v7;
  long long v8 = a1[5];
  long long v57 = a1[4];
  long long v58 = v8;
  long long v9 = a1[1];
  long long v53 = *a1;
  long long v54 = v9;
  long long v43 = v53;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v10 = StringProtocol.hash.getter();
  char v11 = *(void **)(v2 + 8);
  if (!v11[2] || (uint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(v10), (v13 & 1) == 0))
  {
    _s17RealityFoundation5IKRigV10ConstraintVSgWOi0_(&v43);
    long long v40 = &v43;
    return outlined init with take of Transform?((uint64_t)v40, a2, &demangling cache variable for type metadata for IKRig.Constraint?);
  }
  unint64_t v14 = *(void *)(v11[7] + 8 * v12);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    char v11 = *(void **)v3;
    if (v14 < *(void *)(*(void *)v3 + 16))
    {
      long long v15 = &v11[20 * v14];
      long long v16 = v15[3];
      long long v43 = v15[2];
      long long v44 = v16;
      long long v17 = v15[4];
      long long v18 = v15[5];
      long long v19 = v15[7];
      long long v47 = v15[6];
      long long v48 = v19;
      long long v45 = v17;
      long long v46 = v18;
      long long v20 = v15[8];
      long long v21 = v15[9];
      long long v22 = v15[11];
      long long v51 = v15[10];
      long long v52 = v22;
      long long v49 = v20;
      long long v50 = v21;
      outlined retain of IKRig.Constraint((uint64_t)&v43);
      outlined retain of IKRig.Constraint((uint64_t)&v53);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_12:
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v11);
  char v11 = (void *)result;
LABEL_6:
  if (v14 < v11[2])
  {
    long long v24 = &v11[20 * v14];
    long long v25 = v24[3];
    v41[0] = v24[2];
    v41[1] = v25;
    long long v26 = v24[4];
    long long v27 = v24[5];
    long long v28 = v24[7];
    v41[4] = v24[6];
    v41[5] = v28;
    v41[2] = v26;
    v41[3] = v27;
    long long v29 = v24[8];
    long long v30 = v24[9];
    long long v31 = v24[11];
    v41[8] = v24[10];
    v41[9] = v31;
    v41[6] = v29;
    v41[7] = v30;
    long long v32 = v54;
    v24[2] = v53;
    v24[3] = v32;
    long long v33 = v55;
    long long v34 = v56;
    long long v35 = v58;
    v24[6] = v57;
    v24[7] = v35;
    v24[4] = v33;
    v24[5] = v34;
    long long v36 = v59;
    long long v37 = v60;
    long long v38 = v62;
    v24[10] = v61;
    v24[11] = v38;
    v24[8] = v36;
    v24[9] = v37;
    outlined release of IKRig.Constraint((uint64_t)v41);
    *(void *)uint64_t v3 = v11;
    v42[6] = v49;
    v42[7] = v50;
    v42[8] = v51;
    v42[9] = v52;
    v42[2] = v45;
    v42[3] = v46;
    v42[4] = v47;
    v42[5] = v48;
    v42[0] = v43;
    v42[1] = v44;
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(v42, v39);
    long long v40 = v42;
    return outlined init with take of Transform?((uint64_t)v40, a2, &demangling cache variable for type metadata for IKRig.Constraint?);
  }
  __break(1u);
  return result;
}

uint64_t IKRig.ConstraintsCollection.startIndex.getter()
{
  return 0;
}

unint64_t IKRig.ConstraintsCollection.subscript.getter@<X0>(unint64_t result@<X0>, _OWORD *a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > result)
  {
    uint64_t v3 = (_OWORD *)(*(void *)v2 + 160 * result);
    long long v4 = v3[3];
    v16[0] = v3[2];
    v16[1] = v4;
    long long v5 = v3[4];
    long long v6 = v3[5];
    long long v7 = v3[7];
    v16[4] = v3[6];
    v16[5] = v7;
    v16[2] = v5;
    v16[3] = v6;
    long long v8 = v3[8];
    long long v9 = v3[9];
    long long v10 = v3[11];
    v16[8] = v3[10];
    v16[9] = v10;
    v16[6] = v8;
    v16[7] = v9;
    long long v11 = v3[9];
    a2[6] = v3[8];
    a2[7] = v11;
    long long v12 = v3[11];
    a2[8] = v3[10];
    a2[9] = v12;
    long long v13 = v3[5];
    a2[2] = v3[4];
    a2[3] = v13;
    long long v14 = v3[7];
    a2[4] = v3[6];
    a2[5] = v14;
    long long v15 = v3[3];
    *a2 = v3[2];
    a2[1] = v15;
    return outlined retain of IKRig.Constraint((uint64_t)v16);
  }
  __break(1u);
  return result;
}

uint64_t key path getter for IKRig.ConstraintsCollection.subscript(_:) : IKRig.ConstraintsCollection@<X0>(uint64_t result@<X0>, unint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)result + 16))
  {
    long long v4 = (_OWORD *)(*(void *)result + 160 * v3);
    long long v5 = v4[3];
    v17[0] = v4[2];
    v17[1] = v5;
    long long v6 = v4[4];
    long long v7 = v4[5];
    long long v8 = v4[7];
    v17[4] = v4[6];
    v17[5] = v8;
    v17[2] = v6;
    v17[3] = v7;
    long long v9 = v4[8];
    long long v10 = v4[9];
    long long v11 = v4[11];
    v17[8] = v4[10];
    v17[9] = v11;
    v17[6] = v9;
    v17[7] = v10;
    long long v12 = v4[9];
    a3[6] = v4[8];
    a3[7] = v12;
    long long v13 = v4[11];
    a3[8] = v4[10];
    a3[9] = v13;
    long long v14 = v4[5];
    a3[2] = v4[4];
    a3[3] = v14;
    long long v15 = v4[7];
    a3[4] = v4[6];
    a3[5] = v15;
    long long v16 = v4[3];
    *a3 = v4[2];
    a3[1] = v16;
    return outlined retain of IKRig.Constraint((uint64_t)v17);
  }
  __break(1u);
  return result;
}

uint64_t key path setter for IKRig.ConstraintsCollection.subscript(_:) : IKRig.ConstraintsCollection(long long *a1, void **a2, unint64_t *a3)
{
  unint64_t v4 = *a3;
  long long v5 = a1[7];
  long long v34 = a1[6];
  long long v35 = v5;
  long long v6 = a1[9];
  long long v36 = a1[8];
  long long v37 = v6;
  long long v7 = a1[3];
  long long v30 = a1[2];
  long long v31 = v7;
  long long v8 = a1[5];
  long long v32 = a1[4];
  long long v33 = v8;
  long long v9 = a1[1];
  long long v28 = *a1;
  long long v29 = v9;
  long long v10 = *a2;
  outlined retain of IKRig.Constraint((uint64_t)&v28);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v10);
  long long v10 = (void *)result;
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v4 < v10[2])
  {
    long long v12 = &v10[20 * v4];
    long long v13 = v12[3];
    v27[0] = v12[2];
    v27[1] = v13;
    long long v14 = v12[4];
    long long v15 = v12[5];
    long long v16 = v12[7];
    v27[4] = v12[6];
    v27[5] = v16;
    v27[2] = v14;
    v27[3] = v15;
    long long v17 = v12[8];
    long long v18 = v12[9];
    long long v19 = v12[11];
    v27[8] = v12[10];
    v27[9] = v19;
    v27[6] = v17;
    v27[7] = v18;
    long long v20 = v29;
    v12[2] = v28;
    v12[3] = v20;
    long long v21 = v30;
    long long v22 = v31;
    long long v23 = v33;
    v12[6] = v32;
    v12[7] = v23;
    v12[4] = v21;
    v12[5] = v22;
    long long v24 = v34;
    long long v25 = v35;
    long long v26 = v37;
    v12[10] = v36;
    v12[11] = v26;
    v12[8] = v24;
    v12[9] = v25;
    uint64_t result = outlined release of IKRig.Constraint((uint64_t)v27);
    *a2 = v10;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t IKRig.ConstraintsCollection.subscript.setter(_OWORD *a1, unint64_t a2)
{
  long long v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v5);
  long long v5 = (void *)result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v5[2] > a2)
  {
    long long v7 = &v5[20 * a2];
    long long v8 = v7[3];
    v20[0] = v7[2];
    v20[1] = v8;
    long long v9 = v7[4];
    long long v10 = v7[5];
    long long v11 = v7[7];
    v20[4] = v7[6];
    v20[5] = v11;
    v20[2] = v9;
    v20[3] = v10;
    long long v12 = v7[8];
    long long v13 = v7[9];
    long long v14 = v7[11];
    v20[8] = v7[10];
    v20[9] = v14;
    v20[6] = v12;
    v20[7] = v13;
    long long v15 = a1[7];
    v7[8] = a1[6];
    v7[9] = v15;
    long long v16 = a1[9];
    v7[10] = a1[8];
    v7[11] = v16;
    long long v17 = a1[3];
    v7[4] = a1[2];
    v7[5] = v17;
    long long v18 = a1[5];
    void v7[6] = a1[4];
    v7[7] = v18;
    long long v19 = a1[1];
    v7[2] = *a1;
    v7[3] = v19;
    uint64_t result = outlined release of IKRig.Constraint((uint64_t)v20);
    *uint64_t v2 = v5;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t (*IKRig.ConstraintsCollection.subscript.modify(void *a1, unint64_t a2))()
{
  unint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = specialized Array.subscript.modify((uint64_t)v4, a2);
  return IKRig.JointCollection.subscript.modify;
}

void IKRig.JointCollection.subscript.modify(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t IKRig.ConstraintsCollection.Iterator.next()@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[1];
  unint64_t v4 = *(void *)(*v1 + 16);
  if (v3 == v4)
  {
    _s17RealityFoundation5IKRigV10ConstraintVSgWOi0_(v15);
    return outlined init with take of Transform?((uint64_t)v15, (uint64_t)a1, &demangling cache variable for type metadata for IKRig.Constraint?);
  }
  else if (v3 >= v4)
  {
    __break(1u);
  }
  else
  {
    long long v6 = (_OWORD *)(*v1 + 160 * v3);
    long long v7 = v6[3];
    v15[0] = v6[2];
    v15[1] = v7;
    long long v8 = v6[4];
    long long v9 = v6[5];
    long long v10 = v6[7];
    v15[4] = v6[6];
    v15[5] = v10;
    v15[2] = v8;
    void v15[3] = v9;
    long long v11 = v6[8];
    long long v12 = v6[9];
    long long v13 = v6[11];
    v15[8] = v6[10];
    v15[9] = v13;
    v15[6] = v11;
    v15[7] = v12;
    memmove(a1, v6 + 2, 0xA0uLL);
    v1[1] = v3 + 1;
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v14);
    return outlined retain of IKRig.Constraint((uint64_t)v15);
  }
  return result;
}

uint64_t protocol witness for IteratorProtocol.next() in conformance IKRig.ConstraintsCollection.Iterator@<X0>(void *a1@<X8>)
{
  unint64_t v3 = v1[1];
  unint64_t v4 = *(void *)(*v1 + 16);
  if (v3 == v4)
  {
    _s17RealityFoundation5IKRigV10ConstraintVSgWOi0_(v15);
    return outlined init with take of Transform?((uint64_t)v15, (uint64_t)a1, &demangling cache variable for type metadata for IKRig.Constraint?);
  }
  else if (v3 >= v4)
  {
    __break(1u);
  }
  else
  {
    long long v6 = (_OWORD *)(*v1 + 160 * v3);
    long long v7 = v6[3];
    v15[0] = v6[2];
    v15[1] = v7;
    long long v8 = v6[4];
    long long v9 = v6[5];
    long long v10 = v6[7];
    v15[4] = v6[6];
    v15[5] = v10;
    v15[2] = v8;
    void v15[3] = v9;
    long long v11 = v6[8];
    long long v12 = v6[9];
    long long v13 = v6[11];
    v15[8] = v6[10];
    v15[9] = v13;
    v15[6] = v11;
    v15[7] = v12;
    memmove(a1, v6 + 2, 0xA0uLL);
    v1[1] = v3 + 1;
    destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v14);
    return outlined retain of IKRig.Constraint((uint64_t)v15);
  }
  return result;
}

uint64_t (*protocol witness for Collection.subscript.read in conformance IKRig.ConstraintsCollection(void *a1, unint64_t *a2))()
{
  unint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = IKRig.ConstraintsCollection.subscript.read(v4, *a2);
  return protocol witness for Collection.subscript.read in conformance IKRig.JointCollection;
}

void protocol witness for Collection.subscript.read in conformance IKRig.JointCollection(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

_OWORD *IKRig.ConstraintsCollection.subscript.read(void *a1, unint64_t a2)
{
  uint64_t result = malloc(0x1E0uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > a2)
  {
    uint64_t v6 = (uint64_t)result;
    long long v7 = (_OWORD *)(*(void *)v2 + 160 * a2);
    long long v8 = v7[3];
    *uint64_t result = v7[2];
    result[1] = v8;
    long long v9 = v7[4];
    long long v10 = v7[5];
    long long v11 = v7[7];
    result[4] = v7[6];
    result[5] = v11;
    result[2] = v9;
    result[3] = v10;
    long long v12 = v7[8];
    long long v13 = v7[9];
    long long v14 = v7[11];
    result[8] = v7[10];
    result[9] = v14;
    result[6] = v12;
    result[7] = v13;
    memmove(result + 10, v7 + 2, 0xA0uLL);
    outlined retain of IKRig.Constraint(v6);
    return IKRig.ConstraintsCollection.subscript.read;
  }
  __break(1u);
  return result;
}

void IKRig.ConstraintsCollection.subscript.read(_OWORD **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t)(*a1 + 20);
  long long v3 = v1[17];
  v1[26] = v1[16];
  v1[27] = v3;
  long long v4 = v1[19];
  v1[28] = v1[18];
  v1[29] = v4;
  long long v5 = v1[13];
  v1[22] = v1[12];
  v1[23] = v5;
  long long v6 = v1[15];
  v1[24] = v1[14];
  v1[25] = v6;
  long long v7 = v1[11];
  v1[20] = v1[10];
  v1[21] = v7;
  outlined release of IKRig.Constraint(v2);

  free(v1);
}

uint64_t *protocol witness for Collection.subscript.getter in conformance IKRig.JointCollection@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (uint64_t v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    long long v5 = v2[1];
    a2[2] = result;
    a2[3] = v5;
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t protocol witness for Collection.indices.getter in conformance IKRig.JointCollection@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  uint64_t v4 = *(void *)(v2 + 16);
  a1[2] = 0;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t *protocol witness for Collection.index(_:offsetBy:) in conformance IKRig.JointCollection@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t protocol witness for Collection.index(_:offsetBy:limitedBy:) in conformance IKRig.JointCollection@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(void, uint64_t, void)@<X5>, uint64_t a5@<X8>)
{
  uint64_t result = a4(*a1, a2, *a3);
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = v7 & 1;
  return result;
}

uint64_t *protocol witness for Collection.distance(from:to:) in conformance IKRig.JointCollection(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t protocol witness for Sequence.makeIterator() in conformance IKRig.JointCollection@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = 0;
  return result;
}

uint64_t protocol witness for Sequence._copyToContiguousArray() in conformance IKRig.ConstraintsCollection(uint64_t a1, uint64_t a2)
{
  return protocol witness for Sequence._copyToContiguousArray() in conformance IKRig.JointCollection(a1, a2, (uint64_t (*)(void, void))specialized _copyCollectionToContiguousArray<A>(_:));
}

uint64_t protocol witness for Sequence._copyToContiguousArray() in conformance IKRig.JointCollection(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  uint64_t v4 = a3(*v3, v3[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t protocol witness for Sequence._copyContents(initializing:) in conformance IKRig.ConstraintsCollection(void *a1, char *a2, unint64_t a3)
{
  return specialized Sequence._copySequenceContents(initializing:)(a1, a2, a3, *v3);
}

double protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance IKRig.ConstraintsCollection@<D0>(Swift::OpaquePointer a1@<X0>, _OWORD *a2@<X8>)
{
  IKRig.ConstraintsCollection.init(_:)(a1);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay10RealityKit12MeshResourceC0D10FoundationE8SkeletonV5JointVG_AI5IKRigVALVs5NeverOTg504_s17d11Foundation5k15V3forAC0A3Kit12fg5CAAE8i10V_tKcfcAC5J10VAiJVXEfU_AKTf1cn_nTf4ng_n(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v60 = MEMORY[0x263F8EE78];
  int64_t v47 = v4;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v4, 0);
  int64_t v8 = v47;
  uint64_t v9 = 0;
  uint64_t v5 = v60;
  uint64_t v10 = a1 + 32;
  while (1)
  {
    long long v11 = (uint64_t *)(v10 + 144 * v9);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    long long v52 = *((_OWORD *)v11 + 7);
    long long v53 = *((_OWORD *)v11 + 6);
    long long v51 = *((_OWORD *)v11 + 8);
    if (v11[3])
    {
      uint64_t v14 = qword_26DC83FD0;
      if (!qword_26DC83FD0) {
        goto LABEL_31;
      }
      uint64_t v15 = 0;
      unint64_t v16 = qword_26DC83FD0 - 1;
      unint64_t v17 = 3;
      if ((unint64_t)(qword_26DC83FD0 - 1) < 3) {
        unint64_t v17 = qword_26DC83FD0 - 1;
      }
      long long v18 = 0uLL;
      do
      {
        if (v16 > 2)
        {
          __break(1u);
          goto LABEL_28;
        }
        int v19 = *((_DWORD *)&outlined read-only object #0 of closure #1 in IKRig.init(for:) + v15 + 8);
        long long v54 = v18;
        *(_DWORD *)((unint64_t)&v54 & 0xFFFFFFFFFFFFFFF3 | (4 * (v15 & 3))) = v19;
        long long v18 = v54;
        ++v15;
      }
      while (v14 != v15);
      long long v48 = v54;
      if (v17 < 2) {
        goto LABEL_31;
      }
      LOBYTE(v56) = 1;
      uint64_t v20 = v13;
      swift_bridgeObjectRetain();
      uint64_t v21 = 0;
      char v22 = v56;
      long long v24 = v52;
      long long v23 = v53;
      long long v26 = v48;
      long long v25 = v51;
      goto LABEL_23;
    }
    unint64_t v27 = v11[2];
    if ((v27 & 0x8000000000000000) != 0) {
      break;
    }
    if (v27 >= *(void *)(a4 + 16)) {
      goto LABEL_30;
    }
    long long v28 = (uint64_t *)(a4 + 32 + 144 * v27);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v56 = v30;
    uint64_t v57 = v29;
    lazy protocol witness table accessor for type String and conformance String();
    swift_bridgeObjectRetain_n();
    uint64_t v31 = StringProtocol.hash.getter();
    uint64_t v32 = qword_26DC84000;
    if (!qword_26DC84000) {
      goto LABEL_32;
    }
    uint64_t v33 = 0;
    unint64_t v34 = qword_26DC84000 - 1;
    if ((unint64_t)(qword_26DC84000 - 1) >= 3) {
      unint64_t v35 = 3;
    }
    else {
      unint64_t v35 = qword_26DC84000 - 1;
    }
    long long v36 = 0uLL;
    do
    {
      if (v34 > 2)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      int v37 = *((_DWORD *)&outlined read-only object #1 of closure #1 in IKRig.init(for:) + v33 + 8);
      long long v55 = v36;
      *(_DWORD *)((unint64_t)&v55 & 0xFFFFFFFFFFFFFFF3 | (4 * (v33 & 3))) = v37;
      long long v36 = v55;
      ++v33;
    }
    while (v32 != v33);
    uint64_t v38 = v31;
    long long v49 = v55;
    uint64_t v20 = v13;
    uint64_t result = swift_bridgeObjectRelease();
    if (v35 < 2) {
      goto LABEL_33;
    }
    char v22 = 0;
    uint64_t v10 = a1 + 32;
    long long v24 = v52;
    long long v23 = v53;
    long long v26 = v49;
    long long v25 = v51;
    uint64_t v21 = v38;
    int64_t v8 = v47;
LABEL_23:
    uint64_t v60 = v5;
    unint64_t v41 = *(void *)(v5 + 16);
    unint64_t v40 = *(void *)(v5 + 24);
    uint64_t v42 = v5;
    if (v41 >= v40 >> 1)
    {
      uint64_t v46 = v21;
      long long v50 = v26;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
      uint64_t v21 = v46;
      long long v26 = v50;
      long long v25 = v51;
      long long v24 = v52;
      long long v23 = v53;
      uint64_t v10 = a1 + 32;
      int64_t v8 = v47;
      uint64_t v42 = v60;
    }
    ++v9;
    *(void *)(v42 + 16) = v41 + 1;
    uint64_t v43 = v42 + 176 * v41;
    *(void *)(v43 + 32) = v12;
    *(void *)(v43 + 40) = v20;
    *(void *)(v43 + 48) = v21;
    *(unsigned char *)(v43 + 56) = v22;
    int v44 = *(_DWORD *)&v59[3];
    *(_DWORD *)(v43 + 57) = *(_DWORD *)v59;
    *(_DWORD *)(v43 + 60) = v44;
    *(_OWORD *)(v43 + 64) = v23;
    *(_OWORD *)(v43 + 80) = v24;
    *(_OWORD *)(v43 + 96) = v25;
    *(unsigned char *)(v43 + 112) = 1;
    uint64_t v45 = *(void *)v58;
    *(void *)(v43 + 120) = *(void *)&v58[7];
    *(void *)(v43 + 113) = v45;
    *(_OWORD *)(v43 + 128) = v26;
    *(void *)(v43 + 144) = 0;
    *(void *)(v43 + 152) = 0;
    *(void *)(v43 + 160) = 0x300000000;
    *(void *)(v43 + 200) = 0;
    *(_OWORD *)(v43 + 184) = 0u;
    *(_OWORD *)(v43 + 168) = 0u;
    uint64_t v5 = v42;
    if (v9 == v8) {
      return v5;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_33:
  __break(1u);
  return result;
}

double _s17RealityFoundation5IKRigV5JointVSgWOi0_(_OWORD *a1)
{
  double result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t outlined release of IKRig.Joint?(uint64_t a1)
{
  return a1;
}

double _s17RealityFoundation5IKRigV10ConstraintVSgWOi0_(_OWORD *a1)
{
  double result = 0.0;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t outlined release of IKRig.Constraint(uint64_t a1)
{
  return a1;
}

uint64_t outlined copy of IKRig.Constraint?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *outlined retain of IKRig.Constraint?(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

uint64_t outlined consume of IKRig.Constraint?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IKRig.Joint.ID and conformance IKRig.Joint.ID()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.Joint.ID and conformance IKRig.Joint.ID;
  if (!lazy protocol witness table cache variable for type IKRig.Joint.ID and conformance IKRig.Joint.ID)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.Joint.ID and conformance IKRig.Joint.ID);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type IKRig.Joint.ID and conformance IKRig.Joint.ID;
  if (!lazy protocol witness table cache variable for type IKRig.Joint.ID and conformance IKRig.Joint.ID)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.Joint.ID and conformance IKRig.Joint.ID);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IKRig.Joint.LimitsDefinition.Axis and conformance IKRig.Joint.LimitsDefinition.Axis()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.Joint.LimitsDefinition.Axis and conformance IKRig.Joint.LimitsDefinition.Axis;
  if (!lazy protocol witness table cache variable for type IKRig.Joint.LimitsDefinition.Axis and conformance IKRig.Joint.LimitsDefinition.Axis)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.Joint.LimitsDefinition.Axis and conformance IKRig.Joint.LimitsDefinition.Axis);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IKRig.Constraint.ID and conformance IKRig.Constraint.ID()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.Constraint.ID and conformance IKRig.Constraint.ID;
  if (!lazy protocol witness table cache variable for type IKRig.Constraint.ID and conformance IKRig.Constraint.ID)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.Constraint.ID and conformance IKRig.Constraint.ID);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type IKRig.Constraint.ID and conformance IKRig.Constraint.ID;
  if (!lazy protocol witness table cache variable for type IKRig.Constraint.ID and conformance IKRig.Constraint.ID)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.Constraint.ID and conformance IKRig.Constraint.ID);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IKRig.Constraint.IKPositionDemand.Mode and conformance IKRig.Constraint.IKPositionDemand.Mode()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.Constraint.IKPositionDemand.Mode and conformance IKRig.Constraint.IKPositionDemand.Mode;
  if (!lazy protocol witness table cache variable for type IKRig.Constraint.IKPositionDemand.Mode and conformance IKRig.Constraint.IKPositionDemand.Mode)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.Constraint.IKPositionDemand.Mode and conformance IKRig.Constraint.IKPositionDemand.Mode);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IKRig.JointCollection and conformance IKRig.JointCollection()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.JointCollection and conformance IKRig.JointCollection;
  if (!lazy protocol witness table cache variable for type IKRig.JointCollection and conformance IKRig.JointCollection)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.JointCollection and conformance IKRig.JointCollection);
  }
  return result;
}

uint64_t associated type witness table accessor for Collection.Indices : Collection in IKRig.JointCollection()
{
  return lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type DefaultIndices<IKRig.JointCollection> and conformance DefaultIndices<A>, &demangling cache variable for type metadata for DefaultIndices<IKRig.JointCollection>);
}

uint64_t associated type witness table accessor for Collection.SubSequence : Collection in IKRig.JointCollection()
{
  return lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type Slice<IKRig.JointCollection> and conformance Slice<A>, &demangling cache variable for type metadata for Slice<IKRig.JointCollection>);
}

unint64_t lazy protocol witness table accessor for type IKRig.JointCollection.Iterator and conformance IKRig.JointCollection.Iterator()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.JointCollection.Iterator and conformance IKRig.JointCollection.Iterator;
  if (!lazy protocol witness table cache variable for type IKRig.JointCollection.Iterator and conformance IKRig.JointCollection.Iterator)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.JointCollection.Iterator and conformance IKRig.JointCollection.Iterator);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type IKRig.ConstraintsCollection and conformance IKRig.ConstraintsCollection()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.ConstraintsCollection and conformance IKRig.ConstraintsCollection;
  if (!lazy protocol witness table cache variable for type IKRig.ConstraintsCollection and conformance IKRig.ConstraintsCollection)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.ConstraintsCollection and conformance IKRig.ConstraintsCollection);
  }
  return result;
}

uint64_t associated type witness table accessor for Collection.Indices : Collection in IKRig.ConstraintsCollection()
{
  return lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type DefaultIndices<IKRig.ConstraintsCollection> and conformance DefaultIndices<A>, &demangling cache variable for type metadata for DefaultIndices<IKRig.ConstraintsCollection>);
}

uint64_t associated type witness table accessor for Collection.SubSequence : Collection in IKRig.ConstraintsCollection()
{
  return lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type Slice<IKRig.ConstraintsCollection> and conformance Slice<A>, &demangling cache variable for type metadata for Slice<IKRig.ConstraintsCollection>);
}

unint64_t lazy protocol witness table accessor for type IKRig.ConstraintsCollection.Iterator and conformance IKRig.ConstraintsCollection.Iterator()
{
  unint64_t result = lazy protocol witness table cache variable for type IKRig.ConstraintsCollection.Iterator and conformance IKRig.ConstraintsCollection.Iterator;
  if (!lazy protocol witness table cache variable for type IKRig.ConstraintsCollection.Iterator and conformance IKRig.ConstraintsCollection.Iterator)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IKRig.ConstraintsCollection.Iterator and conformance IKRig.ConstraintsCollection.Iterator);
  }
  return result;
}

uint64_t sub_227F5DE40()
{
  return 0;
}

uint64_t sub_227F5DE58()
{
  return 0;
}

uint64_t sub_227F5DE70()
{
  return 0;
}

uint64_t sub_227F5DE88()
{
  return 0;
}

uint64_t sub_227F5DEA0()
{
  return 0;
}

uint64_t sub_227F5DEB8()
{
  return 0;
}

uint64_t destroy for IKSolverDefinition(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of BindTarget(*(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 96);

  return outlined consume of BindTarget(v2, v3, v4);
}

uint64_t initializeWithCopy for IKSolverDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined copy of BindTarget(v6, v7, v8);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(v2 + 80);
  uint64_t v10 = *(void *)(v2 + 88);
  LOBYTE(v2) = *(unsigned char *)(v2 + 96);
  outlined copy of BindTarget(v9, v10, v2);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = v2;
  return a1;
}

uint64_t assignWithCopy for IKSolverDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = *(void *)(v2 + 64);
  unsigned __int8 v6 = *(unsigned char *)(v2 + 72);
  outlined copy of BindTarget(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 72);
  *(unsigned char *)(a1 + 72) = v6;
  outlined consume of BindTarget(v7, v8, v9);
  uint64_t v10 = *(void *)(v2 + 80);
  uint64_t v11 = *(void *)(v2 + 88);
  LOBYTE(v2) = *(unsigned char *)(v2 + 96);
  outlined copy of BindTarget(v10, v11, v2);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 96);
  *(unsigned char *)(a1 + 96) = v2;
  outlined consume of BindTarget(v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for IKSolverDefinition(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 72);
  *(unsigned char *)(a1 + 72) = v4;
  outlined consume of BindTarget(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 96);
  *(unsigned char *)(a1 + 96) = v8;
  outlined consume of BindTarget(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for IKSolverDefinition(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 97)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IKSolverDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKSolverDefinition()
{
  return &type metadata for IKSolverDefinition;
}

uint64_t destroy for IKRig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IKRig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a2[3];
  a1[2] = a2[2];
  a1[3] = v3;
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IKRig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IKRig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IKRig()
{
  return &type metadata for IKRig;
}

uint64_t initializeWithCopy for IKRig.Joint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IKRig.Joint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  long long v5 = *(_OWORD *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(_OWORD *)(a1 + 128) = v5;
  return a1;
}

__n128 __swift_memcpy176_16(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for IKRig.Joint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  *(_OWORD *)(a1 + 128) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for IKRig.Joint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IKRig.Joint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Joint()
{
  return &type metadata for IKRig.Joint;
}

ValueMetadata *type metadata accessor for IKRig.Joint.ID()
{
  return &type metadata for IKRig.Joint.ID;
}

uint64_t getEnumTagSinglePayload for IKRig.Joint.LimitsDefinition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IKRig.Joint.LimitsDefinition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Joint.LimitsDefinition()
{
  return &type metadata for IKRig.Joint.LimitsDefinition;
}

unsigned char *storeEnumTagSinglePayload for IKRig.Joint.LimitsDefinition.Axis(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x227F5E84CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Joint.LimitsDefinition.Axis()
{
  return &type metadata for IKRig.Joint.LimitsDefinition.Axis;
}

uint64_t destroy for IKRig.Constraint()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IKRig.Constraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IKRig.Constraint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  long long v5 = *(_OWORD *)(a2 + 112);
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 112) = v5;
  return a1;
}

__n128 __swift_memcpy160_16(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for IKRig.Constraint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for IKRig.Constraint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IKRig.Constraint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Constraint()
{
  return &type metadata for IKRig.Constraint;
}

ValueMetadata *type metadata accessor for IKRig.Constraint.ID()
{
  return &type metadata for IKRig.Constraint.ID;
}

uint64_t getEnumTagSinglePayload for IKRig.Constraint.IKPositionDemand(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[32]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IKRig.Constraint.IKPositionDemand(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Constraint.IKPositionDemand()
{
  return &type metadata for IKRig.Constraint.IKPositionDemand;
}

unsigned char *storeEnumTagSinglePayload for IKRig.Constraint.IKPositionDemand.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x227F5EC88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Constraint.IKPositionDemand.Mode()
{
  return &type metadata for IKRig.Constraint.IKPositionDemand.Mode;
}

uint64_t getEnumTagSinglePayload for IKRig.Constraint.IKOrientationDemand(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IKRig.Constraint.IKOrientationDemand(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Constraint.IKOrientationDemand()
{
  return &type metadata for IKRig.Constraint.IKOrientationDemand;
}

uint64_t getEnumTagSinglePayload for IKRig.Constraint.IKOrientationDemand.Mode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IKRig.Constraint.IKOrientationDemand.Mode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for IKRig.Constraint.IKOrientationDemand.Mode(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t destructiveInjectEnumTag for IKRig.Constraint.IKOrientationDemand.Mode(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IKRig.Constraint.IKOrientationDemand.Mode()
{
  return &type metadata for IKRig.Constraint.IKOrientationDemand.Mode;
}

ValueMetadata *type metadata accessor for IKRig.JointCollection()
{
  return &type metadata for IKRig.JointCollection;
}

ValueMetadata *type metadata accessor for IKRig.JointCollection.Iterator()
{
  return &type metadata for IKRig.JointCollection.Iterator;
}

ValueMetadata *type metadata accessor for IKRig.ConstraintsCollection()
{
  return &type metadata for IKRig.ConstraintsCollection;
}

ValueMetadata *type metadata accessor for IKRig.ConstraintsCollection.Iterator()
{
  return &type metadata for IKRig.ConstraintsCollection.Iterator;
}

uint64_t ImpulseAction.targetEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return outlined copy of ActionEntityResolution();
}

uint64_t ImpulseAction.targetEntity.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = outlined consume of ActionEntityResolution();
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  return result;
}

uint64_t (*ImpulseAction.targetEntity.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

__n128 ImpulseAction.linearImpulse.getter()
{
  return v0[2];
}

void ImpulseAction.linearImpulse.setter(__n128 a1)
{
  v1[2] = a1;
}

uint64_t (*ImpulseAction.linearImpulse.modify())(void, void)
{
  return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError;
}

uint64_t ImpulseAction.animatedValueType.getter()
{
  return 0;
}

uint64_t ImpulseAction.init(targetEntity:linearImpulse:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  char v3 = *(unsigned char *)(result + 16);
  *(_OWORD *)a2 = *(_OWORD *)result;
  *(unsigned char *)(a2 + 16) = v3;
  *(__n128 *)(a2 + 32) = a3;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ImpulseAction.CodingKeys()
{
  if (*v0) {
    return 0x6D497261656E696CLL;
  }
  else {
    return 0x6E45746567726174;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ImpulseAction.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized ImpulseAction.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ImpulseAction.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ImpulseAction.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImpulseAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ImpulseAction.CodingKeys>);
  uint64_t v13 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  char v8 = *((unsigned char *)v1 + 16);
  long long v11 = *((_OWORD *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  *(void *)&long long v14 = v7;
  *((void *)&v14 + 1) = v6;
  char v15 = v8;
  char v16 = 0;
  lazy protocol witness table accessor for type ActionEntityResolution and conformance ActionEntityResolution();
  uint64_t v9 = v12;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v9)
  {
    long long v14 = v11;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIMD3<Float>);
    lazy protocol witness table accessor for type SIMD3<Float> and conformance SIMD3<A>(&lazy protocol witness table cache variable for type SIMD3<Float> and conformance SIMD3<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v3);
}

unint64_t lazy protocol witness table accessor for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys;
  if (!lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys);
  }
  return result;
}

uint64_t ImpulseAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ImpulseAction.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ImpulseAction.CodingKeys and conformance ImpulseAction.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v19 = 0;
  lazy protocol witness table accessor for type ActionEntityResolution and conformance ActionEntityResolution();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v14 = *((void *)&v16 + 1);
  uint64_t v9 = v16;
  int v10 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIMD3<Float>);
  char v19 = 1;
  uint64_t v15 = v9;
  uint64_t v11 = v14;
  int v18 = v10;
  outlined copy of ActionEntityResolution();
  lazy protocol witness table accessor for type SIMD3<Float> and conformance SIMD3<A>(&lazy protocol witness table cache variable for type SIMD3<Float> and conformance SIMD3<A>);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v12 = v16;
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return outlined consume of ActionEntityResolution();
}

uint64_t protocol witness for Decodable.init(from:) in conformance ImpulseAction@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImpulseAction.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ImpulseAction(void *a1)
{
  return ImpulseAction.encode(to:)(a1);
}

uint64_t initializeWithCopy for ImpulseAction(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  outlined copy of ActionEntityResolution();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  return a1;
}

uint64_t assignWithCopy for ImpulseAction(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  outlined copy of ActionEntityResolution();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  outlined consume of ActionEntityResolution();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  return a1;
}

uint64_t assignWithTake for ImpulseAction(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  outlined consume of ActionEntityResolution();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImpulseAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImpulseAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpulseAction()
{
  return &type metadata for ImpulseAction;
}

unsigned char *storeEnumTagSinglePayload for ImpulseAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x227F5F7C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ImpulseAction.CodingKeys()
{
  return &unk_26DC98E28;
}

uint64_t ImpulseActionHandler.applyImpulse(event:)(float32x4_t *a1)
{
  uint64_t v1 = a1[1].i64[0];
  __int8 v2 = a1[2].i8[0];
  float32x4_t v54 = a1[3];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t SceneNullable = REEntityGetSceneNullable();
      if (SceneNullable)
      {
        uint64_t v4 = SceneNullable;
        id v5 = (id)RESceneGetSwiftObject();
        type metadata accessor for Scene();
        if (v5)
        {
          swift_dynamicCastClassUnconditional();
        }
        else
        {
          swift_allocObject();
          Scene.init(coreScene:)(v4);
        }
        uint64_t v10 = Scene.findEntity(named:)();
        swift_release();
        outlined consume of ActionEntityResolution();
        if (v10) {
          goto LABEL_12;
        }
      }
      else
      {
        outlined consume of ActionEntityResolution();
      }
    }
    else
    {
      uint64_t v76 = v1;
      outlined copy of ActionEntityResolution();
      uint64_t v9 = Entity.subscript.getter(&v76);
      outlined consume of ActionEntityResolution();
      if (v9)
      {
LABEL_12:
        swift_retain();
        if (REEntityGetComponent())
        {
          CollisionComponent.init(_:)((uint64_t)&v76);
          swift_release();
          swift_bridgeObjectRelease();
          swift_retain();
          if (REEntityGetComponent())
          {
            PhysicsBodyComponent.init(_:)((uint64_t)v55);
            int v11 = v55[0];
            int v12 = v56;
            uint64_t v13 = v60;
            char v14 = v61;
            char v15 = v62;
            char v16 = v63;
            char v17 = v64;
            char v18 = v65;
            char v19 = v66;
            uint64_t v20 = v74;
            LOBYTE(v76) = v55[0];
            int v78 = v56;
            long long v52 = v58;
            long long v53 = v57;
            long long v79 = v57;
            long long v80 = v58;
            long long v50 = v69;
            long long v51 = v59;
            long long v81 = v59;
            uint64_t v82 = v60;
            char v83 = v61;
            char v84 = v62;
            char v85 = v63;
            char v86 = v64;
            char v87 = v65;
            char v88 = v66;
            char v45 = v68;
            char v46 = v67;
            char v89 = v67;
            char v90 = v68;
            long long v91 = v69;
            long long v92 = v70;
            long long v48 = v71;
            long long v49 = v70;
            long long v93 = v71;
            long long v94 = v72;
            long long v47 = v72;
            char v44 = v73;
            char v95 = v73;
            uint64_t v96 = v74;
            destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(&v76, v21);
            outlined init with take of PhysicsBodyComponent?((uint64_t)&v76, (uint64_t)v75);
            outlined retain of PhysicsBodyComponent?((uint64_t)v75);
            swift_release();
            if (v11 == 2)
            {
              uint64_t v22 = specialized static PhysicsSimulationComponent.nearestSimulationEntity(for:)();
              v55[0] = 2;
              int v56 = v12;
              long long v57 = v53;
              long long v58 = v52;
              long long v59 = v51;
              uint64_t v60 = v13;
              char v61 = v14;
              char v62 = v15;
              char v63 = v16;
              char v64 = v17;
              char v65 = v18;
              char v66 = v19;
              char v67 = v46;
              char v68 = v45;
              long long v69 = v50;
              long long v70 = v49;
              long long v71 = v48;
              long long v72 = v47;
              char v73 = v44;
              uint64_t v74 = v20;
              ImpulseActionHandler.applyLinearImpulse(to:with:for:)(v55, v22, (uint64_t)&v76, v54);
              outlined release of PhysicsBodyComponent?((uint64_t)v75);
              outlined release of PhysicsBodyComponent?((uint64_t)v75);
              v55[0] = v76;
              int v56 = v78;
              long long v57 = v79;
              long long v58 = v80;
              long long v59 = v81;
              uint64_t v60 = v82;
              char v61 = v83;
              char v62 = v84;
              char v63 = v85;
              char v64 = v86;
              char v65 = v87;
              char v66 = v88;
              char v67 = v89;
              char v68 = v90;
              long long v69 = v91;
              long long v70 = v92;
              long long v71 = v93;
              long long v72 = v94;
              char v73 = v95;
              uint64_t v74 = v96;
              destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(v55, v23);
              outlined init with take of PhysicsBodyComponent?((uint64_t)v55, (uint64_t)&v76);
              swift_retain();
              swift_retain();
              specialized Entity.ComponentSet.doSet<A>(_:newValue:returnStrongReference:)((uint64_t)&v76);
              swift_release();
              swift_release_n();
              swift_release_n();
              return swift_release();
            }
            outlined release of PhysicsBodyComponent?((uint64_t)v75);
            uint64_t v76 = 0;
            unint64_t v77 = 0xE000000000000000;
            _StringGuts.grow(_:)(124);
            v39._uint64_t countAndFlagsBits = 0x2072656C646E6148;
            v39._object = (void *)0xEC00000020726F66;
            String.append(_:)(v39);
            *(void *)long long v55 = &type metadata for ImpulseAction;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImpulseAction.Type);
            v40._uint64_t countAndFlagsBits = String.init<A>(describing:)();
            String.append(_:)(v40);
            swift_bridgeObjectRelease();
            v41._uint64_t countAndFlagsBits = 0xD000000000000038;
            v41._object = (void *)0x8000000228353BE0;
            String.append(_:)(v41);
            REEntityGetName();
            v42._uint64_t countAndFlagsBits = String.init(cString:)();
            String.append(_:)(v42);
            swift_bridgeObjectRelease();
            v43._uint64_t countAndFlagsBits = 0xD000000000000034;
            v43._object = (void *)0x8000000228353C20;
            String.append(_:)(v43);
            specialized static AnimationLogger.logError(_:)(v76, v77);
            outlined release of PhysicsBodyComponent?((uint64_t)v75);
            swift_release();
            goto LABEL_20;
          }
          swift_release();
          uint64_t v76 = 0;
          unint64_t v77 = 0xE000000000000000;
          _StringGuts.grow(_:)(82);
          v34._uint64_t countAndFlagsBits = 0x2072656C646E6148;
          v34._object = (void *)0xEC00000020726F66;
          String.append(_:)(v34);
          *(void *)long long v55 = &type metadata for ImpulseAction;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImpulseAction.Type);
          v35._uint64_t countAndFlagsBits = String.init<A>(describing:)();
          String.append(_:)(v35);
          swift_bridgeObjectRelease();
          unint64_t v32 = 0xD000000000000040;
          uint64_t v33 = " failed to get physics body component from target entity named '";
        }
        else
        {
          swift_release();
          uint64_t v76 = 0;
          unint64_t v77 = 0xE000000000000000;
          _StringGuts.grow(_:)(79);
          v30._uint64_t countAndFlagsBits = 0x2072656C646E6148;
          v30._object = (void *)0xEC00000020726F66;
          String.append(_:)(v30);
          v75[0] = &type metadata for ImpulseAction;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImpulseAction.Type);
          v31._uint64_t countAndFlagsBits = String.init<A>(describing:)();
          String.append(_:)(v31);
          swift_bridgeObjectRelease();
          unint64_t v32 = 0xD00000000000003DLL;
          uint64_t v33 = " failed to get collision component from target entity named '";
        }
        unint64_t v36 = (unint64_t)(v33 - 32) | 0x8000000000000000;
        String.append(_:)(*(Swift::String *)&v32);
        REEntityGetName();
        v37._uint64_t countAndFlagsBits = String.init(cString:)();
        String.append(_:)(v37);
        swift_bridgeObjectRelease();
        v38._uint64_t countAndFlagsBits = 10535;
        v38._object = (void *)0xE200000000000000;
        String.append(_:)(v38);
        specialized static AnimationLogger.logError(_:)(v76, v77);
        swift_release();
LABEL_20:
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v76 = 0;
    unint64_t v77 = 0xE000000000000000;
    _StringGuts.grow(_:)(77);
    v25._uint64_t countAndFlagsBits = 0x2072656C646E6148;
    v25._object = (void *)0xEC00000020726F66;
    String.append(_:)(v25);
    v75[0] = &type metadata for ImpulseAction;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImpulseAction.Type);
    v26._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
    v27._object = (void *)0x8000000228353B10;
    String.append(_:)(v27);
    REEntityGetName();
    v28._uint64_t countAndFlagsBits = String.init(cString:)();
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    v29._uint64_t countAndFlagsBits = 10535;
    v29._object = (void *)0xE200000000000000;
    String.append(_:)(v29);
    specialized static AnimationLogger.logError(_:)(v76, v77);
    goto LABEL_20;
  }
  uint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  _StringGuts.grow(_:)(62);
  v6._uint64_t countAndFlagsBits = 0x2072656C646E6148;
  v6._object = (void *)0xEC00000020726F66;
  String.append(_:)(v6);
  v75[0] = &type metadata for ImpulseAction;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImpulseAction.Type);
  v7._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._object = (void *)0x8000000228351880;
  v8._uint64_t countAndFlagsBits = 0xD000000000000030;
  String.append(_:)(v8);
  specialized static AnimationLogger.logError(_:)(0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

__n128 ImpulseActionHandler.applyLinearImpulse(to:with:for:)@<Q0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, float32x4_t a4@<Q0>)
{
  char v6 = *a1;
  int v7 = *((_DWORD *)a1 + 4);
  long long v38 = *((_OWORD *)a1 + 2);
  long long v36 = *((_OWORD *)a1 + 4);
  long long v37 = *((_OWORD *)a1 + 3);
  uint64_t v8 = *((void *)a1 + 10);
  char v9 = a1[88];
  char v10 = a1[89];
  char v11 = a1[90];
  char v12 = a1[91];
  char v13 = a1[92];
  char v31 = a1[94];
  char v32 = a1[93];
  long long v34 = *((_OWORD *)a1 + 7);
  long long v35 = *((_OWORD *)a1 + 6);
  float32x4_t v26 = *((float32x4_t *)a1 + 8);
  __n128 v33 = *((__n128 *)a1 + 9);
  char v29 = a1[160];
  char v30 = a1[95];
  uint64_t v14 = *(void *)(a1 + 164);
  if (a2)
  {
    swift_retain();
    swift_retain();
    uint64_t SceneNullable = REEntityGetSceneNullable();
    if (!SceneNullable) {
      goto LABEL_8;
    }
    uint64_t v16 = SceneNullable;
    char v25 = v13;
    id v17 = (id)RESceneGetSwiftObject();
    type metadata accessor for Scene();
    if (v17)
    {
      swift_dynamicCastClassUnconditional();
    }
    else
    {
      swift_allocObject();
      Scene.init(coreScene:)(v16);
    }
    uint64_t v18 = Scene.physicsOrigin.getter();
    swift_release();
    char v13 = v25;
    if (!v18) {
LABEL_8:
    }
      uint64_t v18 = specialized static PhysicsSimulationComponent.nearestSimulationEntity(for:)();
    swift_release();
  }
  else
  {
    swift_retain();
    uint64_t v18 = 0;
  }
  *(double *)v19.i64 = specialized static HasTransform.conversionMatrix<A, B>(from:to:)(a2, v18);
  *(__n64 *)v22.f32 = simd_float4x4.transform(force:)(a4, v19, v20, v21);
  float32x4_t v28 = v22;
  swift_release();
  float32x4_t v23 = vaddq_f32(v26, v28);
  v23.i32[3] = 0;
  *(unsigned char *)a3 = v6;
  *(_DWORD *)(a3 + 16) = v7;
  *(_OWORD *)(a3 + 32) = v38;
  *(_OWORD *)(a3 + 48) = v37;
  *(_OWORD *)(a3 + 64) = v36;
  *(void *)(a3 + 80) = v8;
  *(unsigned char *)(a3 + 88) = v9;
  *(unsigned char *)(a3 + 89) = v10;
  *(unsigned char *)(a3 + 90) = v11;
  *(unsigned char *)(a3 + 91) = v12;
  *(unsigned char *)(a3 + 92) = v13;
  *(unsigned char *)(a3 + 93) = v32;
  *(unsigned char *)(a3 + 94) = v31;
  *(unsigned char *)(a3 + 95) = v30;
  *(_OWORD *)(a3 + 96) = v35;
  *(_OWORD *)(a3 + 112) = v34;
  *(float32x4_t *)(a3 + 128) = v23;
  __n128 result = v33;
  *(__n128 *)(a3 + 144) = v33;
  *(unsigned char *)(a3 + 160) = v29;
  *(void *)(a3 + 164) = v14;
  return result;
}

uint64_t protocol witness for ActionHandlerProtocol.actionSkipped(event:) in conformance ImpulseActionHandler(float32x4_t *a1)
{
  float32x4_t v1 = a1[13];
  v10[12] = a1[12];
  v10[13] = v1;
  float32x4_t v2 = a1[15];
  v10[14] = a1[14];
  v10[15] = v2;
  float32x4_t v3 = a1[9];
  v10[8] = a1[8];
  v10[9] = v3;
  float32x4_t v4 = a1[11];
  v10[10] = a1[10];
  v10[11] = v4;
  float32x4_t v5 = a1[5];
  v10[4] = a1[4];
  v10[5] = v5;
  float32x4_t v6 = a1[7];
  v10[6] = a1[6];
  v10[7] = v6;
  float32x4_t v7 = a1[1];
  v10[0] = *a1;
  v10[1] = v7;
  float32x4_t v8 = a1[3];
  v10[2] = a1[2];
  v10[3] = v8;
  return ImpulseActionHandler.applyImpulse(event:)(v10);
}

uint64_t specialized ImpulseAction.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E45746567726174 && a2 == 0xEC00000079746974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D497261656E696CLL && a2 == 0xED000065736C7570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t outlined init with take of PhysicsBodyComponent?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhysicsBodyComponent?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined retain of PhysicsBodyComponent?(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for ImpulseActionHandler()
{
  return &type metadata for ImpulseActionHandler;
}

_UNKNOWN **associated type witness table accessor for ActionHandlerProtocol.ActionType : EntityAction in ImpulseActionHandler()
{
  return &protocol witness table for ImpulseAction;
}

uint64_t __RKVisibilityHideLaunchAnimation.deinit()
{
  return v0;
}

uint64_t __RKVisibilityHideLaunchAnimation.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for __RKVisibilityHideLaunchAnimation()
{
  return self;
}

uint64_t specialized static __RKVisibilityHideLaunchAnimation.createVisibilityHideLaunchAnimation(transform:_:localBoundingBox:variant:duration:distance:orientation:additive:)(long long *a1, float a2, float a3, float32x4_t a4, uint64_t a5, unsigned char *a6, char a7)
{
  long long v28 = *a1;
  long long v26 = a1[2];
  long long v27 = a1[1];
  if (*a6)
  {
    if (*a6 == 1)
    {
      v33._rawValue = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 108, 0, MEMORY[0x263F8EE78]);
      char v13 = &outlined read-only object #1 of static __RKVisibilityHideLaunchAnimation.createVisibilityHideLaunchAnimation(transform:_:localBoundingBox:variant:duration:distance:orientation:additive:);
    }
    else
    {
      v33._rawValue = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 67, 0, MEMORY[0x263F8EE78]);
      char v13 = &outlined read-only object #2 of static __RKVisibilityHideLaunchAnimation.createVisibilityHideLaunchAnimation(transform:_:localBoundingBox:variant:duration:distance:orientation:additive:);
    }
  }
  else
  {
    v33._rawValue = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 52, 0, MEMORY[0x263F8EE78]);
    char v13 = &outlined read-only object #0 of static __RKVisibilityHideLaunchAnimation.createVisibilityHideLaunchAnimation(transform:_:localBoundingBox:variant:duration:distance:orientation:additive:);
  }
  __makeXfos(_:_:)((Swift::OpaquePointer)v13, &v33);
  rawValue = v33._rawValue;
  if (!*((void *)v33._rawValue + 2))
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  RESampledAnimationDefaultParameters();
  uint64_t v15 = rawValue[2];
  if (!v15)
  {
    __break(1u);
    goto LABEL_15;
  }
  char v7 = BYTE1(v31);
  float v9 = (float)v15;
  unsigned int v8 = DWORD2(v31);
  uint64_t v16 = (long long *)&rawValue[6 * v15];
  long long v24 = *v16;
  long long v25 = *(v16 - 1);
  long long v23 = v16[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_15:
  }
    rawValue = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15 + 1, 1, rawValue);
  unint64_t v18 = rawValue[2];
  unint64_t v17 = rawValue[3];
  float v19 = a2 / v9;
  if (v18 >= v17 >> 1) {
    rawValue = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v17 > 1), v18 + 1, 1, rawValue);
  }
  rawValue[2] = v18 + 1;
  float32x4_t v20 = &rawValue[6 * v18];
  v20[2] = v25;
  v20[3] = v24;
  v20[4] = v23;
  v33._rawValue = rawValue;
  long long v30 = v28;
  long long v31 = v27;
  long long v32 = v26;
  specialized static __RKVisibilityBaseAnimation.bakeVisibilityHideXfos(transform:localBoundingBox:xfos:distance:orientation:additive:)((uint64_t)&v30, (uint64_t *)&v33, a3, a4);
  LOBYTE(v30) = 1;
  *((void *)&v30 + 1) = "Transform.transform";
  LOBYTE(v31) = a7 & 1;
  BYTE1(v31) = v7;
  *(void *)((char *)&v31 + 4) = __PAIR64__(v8, LODWORD(v19));
  *((float *)&v31 + 3) = a2;
  uint64_t result = REAssetManagerTimelineAssetCreateSRTSampledAnimation();
  if (result)
  {
    uint64_t v22 = result;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<OpaquePointer>);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_22830EC60;
    *(void *)(result + 32) = v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static _SystemUpdateRate._defaultUpdateInterval.getter()
{
  specialized static __ServiceLocator.shared.getter();
  swift_beginAccess();
  swift_unownedRetainStrong();
  swift_release();
  REEngineGetServiceLocator();
  if (!REServiceLocatorGetECSService()) {
    return 0.0;
  }
  REECSManagerGetDefaultCustomSystemUpdateInterval();
  return v0;
}

uint64_t static _SystemUpdateRate._defaultUpdateInterval.setter()
{
  specialized static __ServiceLocator.shared.getter();
  swift_beginAccess();
  swift_unownedRetainStrong();
  swift_release();
  REEngineGetServiceLocator();
  uint64_t result = REServiceLocatorGetECSService();
  if (result)
  {
    REECSManagerSetDefaultCustomSystemScheduleType();
    return REECSManagerSetDefaultCustomSystemUpdateInterval();
  }
  return result;
}

void (*static _SystemUpdateRate._defaultUpdateInterval.modify(void *a1))(void **a1)
{
  BOOL v2 = (char *)malloc(0x50uLL);
  *a1 = v2;
  float32x4_t v3 = (double *)(v2 + 72);
  specialized static __ServiceLocator.shared.getter();
  swift_beginAccess();
  swift_unownedRetainStrong();
  swift_release();
  REEngineGetServiceLocator();
  if (REServiceLocatorGetECSService())
  {
    REECSManagerGetDefaultCustomSystemUpdateInterval();
    double v5 = v4;
  }
  else
  {
    double v5 = 0.0;
  }
  *float32x4_t v3 = v5;
  return static _SystemUpdateRate._defaultUpdateInterval.modify;
}

void static _SystemUpdateRate._defaultUpdateInterval.modify(void **a1)
{
  float32x4_t v1 = *a1;
  specialized static __ServiceLocator.shared.getter();
  swift_beginAccess();
  swift_unownedRetainStrong();
  swift_release();
  REEngineGetServiceLocator();
  if (REServiceLocatorGetECSService())
  {
    REECSManagerSetDefaultCustomSystemScheduleType();
    REECSManagerSetDefaultCustomSystemUpdateInterval();
  }

  free(v1);
}

void _SystemUpdateRate.hash(into:)()
{
  Swift::UInt v1 = *(void *)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  if (!(v2 >> 6))
  {
    Hasher._combine(_:)(1uLL);
    Swift::UInt v5 = v1;
LABEL_11:
    Hasher._combine(_:)(v5);
    return;
  }
  if (v2 >> 6 != 1)
  {
    if (v1 | v2 ^ 0x80) {
      Swift::UInt v5 = 3;
    }
    else {
      Swift::UInt v5 = 0;
    }
    goto LABEL_11;
  }
  Swift::UInt8 v3 = v2 & 1;
  Hasher._combine(_:)(2uLL);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v3);
}

Swift::Int _SystemUpdateRate.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance _SystemUpdateRate()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance _SystemUpdateRate()
{
  return Hasher._finalize()();
}

void _SystemUpdateRateProtocol._preferredUpdateRate.getter(uint64_t a1@<X8>)
{
}

{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0x80;
}

uint64_t _SystemUpdateRateProtocol.setUpdateRate(scene:updateRate:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t result = static System.coreCustomSystem(scene:)(a1, a3);
  if (result)
  {
    uint64_t v6 = v3;
    char v7 = v4;
    return specialized _SystemUpdateRateProtocol.setUpdateRate(coreCustomSystem:updateRate:)(result, (uint64_t)&v6);
  }
  return result;
}

BOOL specialized static _SystemUpdateRate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 8);
  double v4 = *(double *)a2;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!(v3 >> 6))
  {
    if (v5 <= 0x3F) {
      return *(void *)&v2 == *(void *)&v4;
    }
    return 0;
  }
  if (v3 >> 6 == 1)
  {
    if ((v5 & 0xC0) == 0x40 && v2 == v4) {
      return (((v3 & 1) == 0) ^ v5) & 1;
    }
    return 0;
  }
  uint64_t v7 = v3 ^ 0x80;
  int v8 = v5 & 0xC0;
  if (*(void *)&v2 | v7)
  {
    BOOL v10 = v8 == 128 && *(void *)&v4 == 1;
    if (!v10 || v5 != 128) {
      return 0;
    }
  }
  else
  {
    BOOL v9 = v8 == 128 && *(void *)&v4 == 0;
    if (!v9 || v5 != 128) {
      return 0;
    }
  }
  return 1;
}

uint64_t specialized _SystemUpdateRateProtocol._scheduleUpdate(scene:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = static System.coreCustomSystem(scene:)(a1, a2);
  if (result)
  {
    return RECustomSystemEnqueueUpdateWithDeadline();
  }
  return result;
}

uint64_t specialized _SystemUpdateRateProtocol.setUpdateRate(coreCustomSystem:updateRate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 8);
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      RECustomSystemSetScheduleType();
      return RECustomSystemSetUpdateInterval();
    }
    else if (*(void *)a2 | v2 ^ 0x80)
    {
      return RECustomSystemSetScheduleType();
    }
    else
    {
      return MEMORY[0x270F1D598]();
    }
  }
  else
  {
    specialized static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
    REEngineGetPreferredFramesPerSecond();
    RECustomSystemSetScheduleType();
    return RECustomSystemSetUpdateInterval();
  }
}

unint64_t lazy protocol witness table accessor for type _SystemUpdateRate and conformance _SystemUpdateRate()
{
  unint64_t result = lazy protocol witness table cache variable for type _SystemUpdateRate and conformance _SystemUpdateRate;
  if (!lazy protocol witness table cache variable for type _SystemUpdateRate and conformance _SystemUpdateRate)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _SystemUpdateRate and conformance _SystemUpdateRate);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for _SystemUpdateRate(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for _SystemUpdateRate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t getEnumTag for _SystemUpdateRate(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t destructiveProjectEnumData for _SystemUpdateRate(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t destructiveInjectEnumTag for _SystemUpdateRate(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(unsigned char *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for _SystemUpdateRate()
{
  return &type metadata for _SystemUpdateRate;
}

uint64_t dispatch thunk of _SystemUpdateRateProtocol._preferredUpdateRate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of _SystemUpdateRateProtocol._scheduleUpdate(scene:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t __Engine.Configuration.__renderFlags.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = REEngineConfigurationGetRenderFlags();
  *a1 = result;
  return result;
}

uint64_t __Engine.Configuration.__renderFlags.setter(unsigned int *a1)
{
  return __Engine.Configuration.__renderFlags.setter(a1, MEMORY[0x263F37050]);
}

uint64_t __Engine.__allocating_init(configuration:)(uint64_t *a1)
{
  uint64_t v2 = swift_allocObject();
  __Engine.init(configuration:)(a1);
  return v2;
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable () -> ()(uint64_t a1)
{
  unsigned int v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t __Engine.Configuration.__updateServices.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = REEngineConfigurationGetServicesToUpdate();
  *a1 = result;
  return result;
}

uint64_t __Engine.Configuration.clockMode.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = REEngineConfigurationGetClockMode();
  *a1 = result;
  return result;
}

uint64_t __Engine.Configuration.clockMode.setter(unsigned int *a1)
{
  return __Engine.Configuration.__renderFlags.setter(a1, MEMORY[0x263F37020]);
}

uint64_t (*__Engine.Configuration.clockMode.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = REEngineConfigurationGetClockMode();
  return __Engine.Configuration.clockMode.modify;
}

uint64_t __Engine.Configuration.clockMode.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.clockMode.modify(a1, a2, MEMORY[0x263F37020]);
}

uint64_t __Engine.Configuration.useMetal.getter()
{
  return REEngineConfigurationGetUseMetal();
}

uint64_t __Engine.Configuration.useMetal.setter(char a1)
{
  return __Engine.Configuration.useMetal.setter(a1, MEMORY[0x263F37070]);
}

uint64_t (*__Engine.Configuration.useMetal.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = REEngineConfigurationGetUseMetal();
  return __Engine.Configuration.useMetal.modify;
}

uint64_t __Engine.Configuration.useMetal.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.useMetal.modify(a1, a2, MEMORY[0x263F37070]);
}

uint64_t __Engine.Configuration.forExportOnly.getter()
{
  return REEngineConfigurationGetForExportOnly();
}

uint64_t __Engine.Configuration.forExportOnly.setter(char a1)
{
  return __Engine.Configuration.useMetal.setter(a1, MEMORY[0x263F37040]);
}

uint64_t (*__Engine.Configuration.forExportOnly.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = REEngineConfigurationGetForExportOnly();
  return __Engine.Configuration.forExportOnly.modify;
}

uint64_t __Engine.Configuration.forExportOnly.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.useMetal.modify(a1, a2, MEMORY[0x263F37040]);
}

uint64_t __Engine.Configuration.useRealityIO.getter()
{
  return REEngineConfigurationGetUseRealityIO();
}

uint64_t __Engine.Configuration.useRealityIO.setter(char a1)
{
  return __Engine.Configuration.useMetal.setter(a1, MEMORY[0x263F37080]);
}

uint64_t (*__Engine.Configuration.useRealityIO.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = REEngineConfigurationGetUseRealityIO();
  return __Engine.Configuration.useRealityIO.modify;
}

uint64_t __Engine.Configuration.useRealityIO.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.useMetal.modify(a1, a2, MEMORY[0x263F37080]);
}

uint64_t __Engine.Configuration.usePhysicsSceneSystem.getter()
{
  return REEngineConfigurationGetUsePhysicsSceneSystem();
}

uint64_t __Engine.Configuration.usePhysicsSceneSystem.setter(char a1)
{
  return __Engine.Configuration.useMetal.setter(a1, MEMORY[0x263F37078]);
}

uint64_t (*__Engine.Configuration.usePhysicsSceneSystem.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = REEngineConfigurationGetUsePhysicsSceneSystem();
  return __Engine.Configuration.usePhysicsSceneSystem.modify;
}

uint64_t __Engine.Configuration.usePhysicsSceneSystem.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.useMetal.modify(a1, a2, MEMORY[0x263F37078]);
}

uint64_t __Engine.Configuration.assetRuntimeSizeLimit.getter()
{
  return REEngineConfigurationGetAssetRuntimeSizeLimitForResourceShareClient();
}

uint64_t __Engine.Configuration.assetRuntimeSizeLimit.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  int v4 = REGetRetainCount();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v4 >= 2)
  {
    swift_retain();
    uint64_t v5 = REEngineConfigurationClone();
    type metadata accessor for EngineConfiguration();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    swift_release_n();
    *uint64_t v1 = v6;
  }

  return MEMORY[0x270F1D9F8](v5, a1);
}

uint64_t (*__Engine.Configuration.assetRuntimeSizeLimit.modify(uint64_t *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = REEngineConfigurationGetAssetRuntimeSizeLimitForResourceShareClient();
  return __Engine.Configuration.assetRuntimeSizeLimit.modify;
}

uint64_t __Engine.Configuration.assetRuntimeSizeLimit.modify(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v3 = *v2;
  int v4 = REGetRetainCount();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v4 >= 2)
  {
    swift_retain();
    uint64_t v5 = REEngineConfigurationClone();
    type metadata accessor for EngineConfiguration();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    swift_release_n();
    *uint64_t v2 = v6;
  }

  return MEMORY[0x270F1D9F8](v5, v1);
}

id __Engine.Configuration.device.getter()
{
  Device = (void *)REEngineConfigurationGetDevice();

  return Device;
}

uint64_t __Engine.Configuration.device.setter(uint64_t a1)
{
  specialized __Engine.Configuration.device.setter(a1, MEMORY[0x263F37028]);

  return swift_unknownObjectRelease();
}

uint64_t (*__Engine.Configuration.device.modify(void *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = (id)REEngineConfigurationGetDevice();
  return __Engine.Configuration.device.modify;
}

uint64_t __Engine.Configuration.device.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(uint64_t **)(a1 + 8);
  if (a2)
  {
    swift_unknownObjectRetain();
    if ((int)REGetRetainCount() >= 2)
    {
      swift_retain();
      uint64_t v3 = REEngineConfigurationClone();
      type metadata accessor for EngineConfiguration();
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v3;
      swift_release_n();
      *uint64_t v2 = v4;
    }
    REEngineConfigurationSetDevice();
    swift_unknownObjectRelease();
  }
  else
  {
    if ((int)REGetRetainCount() >= 2)
    {
      swift_retain();
      uint64_t v5 = REEngineConfigurationClone();
      type metadata accessor for EngineConfiguration();
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v5;
      swift_release_n();
      *uint64_t v2 = v6;
    }
    REEngineConfigurationSetDevice();
  }

  return swift_unknownObjectRelease();
}

uint64_t __Engine.Configuration.isHostingSharedAudioSimulation.getter()
{
  return REEngineConfigurationGetIsHostingSharedAudioSimulation();
}

uint64_t __Engine.Configuration.isHostingSharedAudioSimulation.setter(char a1)
{
  return __Engine.Configuration.useMetal.setter(a1, MEMORY[0x263F37048]);
}

uint64_t __Engine.Configuration.useMetal.setter(char a1, uint64_t (*a2)(uint64_t, void))
{
  uint64_t v4 = *v2;
  int v5 = REGetRetainCount();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v5 >= 2)
  {
    swift_retain();
    uint64_t v6 = REEngineConfigurationClone();
    type metadata accessor for EngineConfiguration();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    swift_release_n();
    *uint64_t v2 = v7;
  }

  return a2(v6, a1 & 1);
}

uint64_t (*__Engine.Configuration.isHostingSharedAudioSimulation.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = REEngineConfigurationGetIsHostingSharedAudioSimulation();
  return __Engine.Configuration.isHostingSharedAudioSimulation.modify;
}

uint64_t __Engine.Configuration.isHostingSharedAudioSimulation.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.useMetal.modify(a1, a2, MEMORY[0x263F37048]);
}

uint64_t __Engine.Configuration.useMetal.modify(uint64_t **a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *((unsigned __int8 *)a1 + 8);
  uint64_t v5 = **a1;
  int v6 = REGetRetainCount();
  uint64_t v7 = *(void *)(v5 + 16);
  if (v6 >= 2)
  {
    swift_retain();
    uint64_t v7 = REEngineConfigurationClone();
    type metadata accessor for EngineConfiguration();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    swift_release_n();
    *uint64_t v3 = v8;
  }

  return a3(v7, v4);
}

id __Engine.Configuration.queue.getter()
{
  EngineQueue = (void *)REEngineConfigurationGetEngineQueue();

  return EngineQueue;
}

void __Engine.Configuration.queue.setter(void *a1)
{
  specialized __Engine.Configuration.device.setter((uint64_t)a1, MEMORY[0x263F37038]);
}

void (*__Engine.Configuration.queue.modify(void *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = (id)REEngineConfigurationGetEngineQueue();
  return __Engine.Configuration.queue.modify;
}

void __Engine.Configuration.queue.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(uint64_t **)(a1 + 8);
  if (a2)
  {
    id v9 = v2;
    if ((int)REGetRetainCount() >= 2)
    {
      swift_retain();
      uint64_t v5 = REEngineConfigurationClone();
      type metadata accessor for EngineConfiguration();
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v5;
      swift_release_n();
      *uint64_t v3 = v6;
    }
    REEngineConfigurationSetEngineQueue();
  }
  else
  {
    id v9 = v2;
    if ((int)REGetRetainCount() >= 2)
    {
      swift_retain();
      uint64_t v7 = REEngineConfigurationClone();
      type metadata accessor for EngineConfiguration();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      swift_release_n();
      *uint64_t v3 = v8;
    }
    REEngineConfigurationSetEngineQueue();
  }
}

uint64_t one-time initialization function for defaultServices()
{
  REEngineConfigurationCreateDefault();
  static __Engine.Configuration.defaultServices = REEngineConfigurationGetServicesToCreate() | 0x80;

  return RERelease();
}

uint64_t one-time initialization function for defaultRenderFlags()
{
  REEngineConfigurationCreateDefault();
  static __Engine.Configuration.defaultRenderFlags = REEngineConfigurationGetRenderFlags();

  return RERelease();
}

uint64_t __Engine.Configuration.__createServices.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = REEngineConfigurationGetServicesToCreate();
  *a1 = result;
  return result;
}

uint64_t __Engine.Configuration.__createServices.setter(unsigned int *a1)
{
  return __Engine.Configuration.__renderFlags.setter(a1, MEMORY[0x263F37058]);
}

uint64_t (*__Engine.Configuration.__createServices.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = REEngineConfigurationGetServicesToCreate();
  return __Engine.Configuration.__createServices.modify;
}

uint64_t __Engine.Configuration.__createServices.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.clockMode.modify(a1, a2, MEMORY[0x263F37058]);
}

uint64_t __Engine.Configuration.__updateServices.setter(unsigned int *a1)
{
  return __Engine.Configuration.__renderFlags.setter(a1, MEMORY[0x263F37060]);
}

uint64_t (*__Engine.Configuration.__updateServices.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = REEngineConfigurationGetServicesToUpdate();
  return __Engine.Configuration.__updateServices.modify;
}

uint64_t __Engine.Configuration.__updateServices.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.clockMode.modify(a1, a2, MEMORY[0x263F37060]);
}

uint64_t __Engine.Configuration.__startupOptions.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = REEngineConfigurationGetStartupOptions();
  *a1 = result;
  return result;
}

uint64_t __Engine.Configuration.__startupOptions.setter(unsigned int *a1)
{
  return __Engine.Configuration.__renderFlags.setter(a1, MEMORY[0x263F37068]);
}

uint64_t __Engine.Configuration.__renderFlags.setter(unsigned int *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *v2;
  int v5 = REGetRetainCount();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v5 >= 2)
  {
    swift_retain();
    uint64_t v6 = REEngineConfigurationClone();
    type metadata accessor for EngineConfiguration();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    swift_release_n();
    *uint64_t v2 = v7;
  }

  return a2(v6, v3);
}

uint64_t (*__Engine.Configuration.__startupOptions.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = REEngineConfigurationGetStartupOptions();
  return __Engine.Configuration.__startupOptions.modify;
}

uint64_t __Engine.Configuration.__startupOptions.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.clockMode.modify(a1, a2, MEMORY[0x263F37068]);
}

uint64_t (*__Engine.Configuration.__renderFlags.modify(uint64_t a1))(uint64_t **a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = REEngineConfigurationGetRenderFlags();
  return __Engine.Configuration.__renderFlags.modify;
}

uint64_t __Engine.Configuration.__renderFlags.modify(uint64_t **a1, uint64_t a2)
{
  return __Engine.Configuration.clockMode.modify(a1, a2, MEMORY[0x263F37050]);
}

uint64_t __Engine.Configuration.clockMode.modify(uint64_t **a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *((unsigned int *)a1 + 2);
  uint64_t v5 = **a1;
  int v6 = REGetRetainCount();
  uint64_t v7 = *(void *)(v5 + 16);
  if (v6 >= 2)
  {
    swift_retain();
    uint64_t v7 = REEngineConfigurationClone();
    type metadata accessor for EngineConfiguration();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    swift_release_n();
    *uint64_t v3 = v8;
  }

  return a3(v7, v4);
}

uint64_t __Engine.Configuration.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t Default = REEngineConfigurationCreateDefault();
  type metadata accessor for EngineConfiguration();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = Default;
  *a1 = v3;
  if ((int)REGetRetainCount() >= 2)
  {
    swift_retain();
    uint64_t v4 = REEngineConfigurationClone();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    swift_release_n();
    *a1 = v5;
  }
  REEngineConfigurationSetClockMode();
  if (one-time initialization token for defaultServices != -1) {
    swift_once();
  }
  if ((int)REGetRetainCount() >= 2)
  {
    swift_retain();
    uint64_t v6 = REEngineConfigurationClone();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    swift_release_n();
    *a1 = v7;
  }
  REEngineConfigurationSetServicesToCreate();
  if ((int)REGetRetainCount() >= 2)
  {
    swift_retain();
    uint64_t v8 = REEngineConfigurationClone();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    swift_release_n();
    *a1 = v9;
  }
  REEngineConfigurationSetServicesToUpdate();
  if ((int)REGetRetainCount() >= 2)
  {
    swift_retain();
    uint64_t v10 = REEngineConfigurationClone();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    swift_release_n();
    *a1 = v11;
  }
  REEngineConfigurationSetStartupOptions();
  if (one-time initialization token for defaultRenderFlags != -1) {
    swift_once();
  }
  if ((int)REGetRetainCount() >= 2)
  {
    swift_retain();
    uint64_t v12 = REEngineConfigurationClone();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    swift_release_n();
    *a1 = v13;
  }

  return REEngineConfigurationSetRenderFlags();
}

uint64_t __Engine.Configuration.init(configuration:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = REEngineConfigurationClone();
  type metadata accessor for EngineConfiguration();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t one-time initialization function for customComponents()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RegisterableComponent.Type>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22831E320;
  *(void *)(v0 + 32) = &type metadata for __RKSceneUUIDComponent;
  *(void *)(v0 + 40) = &protocol witness table for __RKSceneUUIDComponent;
  *(void *)(v0 + 48) = &type metadata for __RKScenePhysics;
  *(void *)(v0 + 56) = &protocol witness table for __RKScenePhysics;
  uint64_t result = type metadata accessor for __REAnchoring();
  *(void *)(v0 + 64) = result;
  *(void *)(v0 + 72) = &protocol witness table for __REAnchoring;
  *(void *)(v0 + 80) = &type metadata for __RKEntityUUIDComponent;
  *(void *)(v0 + 88) = &protocol witness table for __RKEntityUUIDComponent;
  *(void *)(v0 + 96) = &type metadata for __RKEntityTagsComponent;
  *(void *)(v0 + 104) = &protocol witness table for __RKEntityTagsComponent;
  static __Engine.customComponents = v0;
  return result;
}

uint64_t __Engine.configuration.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t __Engine.coreEngine.getter()
{
  return *(void *)(v0 + 24);
}

void __Engine.__coreEngine.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
}

id __Engine.queue.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t __Engine.asyncOnEngineQueue(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 32);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_11;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v15[1] = MEMORY[0x263F8EE78];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x22A689420](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t __Engine.asyncAfterOnEngineQueue(deadline:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(void *)(v3 + 32);
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_8_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = MEMORY[0x263F8EE78];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x22A6893E0](v17, v13, v9, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t key path setter for __Engine.services : __Engine(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  swift_retain();
  return swift_release();
}

uint64_t __Engine.services.getter()
{
  return swift_retain();
}

uint64_t __Engine.hasRenderedThisFrame.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t __Engine.hasRenderedThisFrame.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = a1;
  return result;
}

uint64_t __Engine.isRunning.getter()
{
  return MEMORY[0x22A68E340](*(void *)(v0 + 24));
}

uint64_t __Engine.acceptingInput.getter()
{
  return REEngineGetAcceptingInput();
}

void __Engine.acceptingInput.setter()
{
}

void (*__Engine.acceptingInput.modify(uint64_t a1))()
{
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = REEngineGetAcceptingInput();
  return __Engine.acceptingInput.modify;
}

void __Engine.acceptingInput.modify()
{
}

void *__Engine.init(configuration:)(uint64_t *a1)
{
  uint64_t v2 = (void *)v1;
  uint64_t v3 = *a1;
  *(void *)(v1 + 40) = 0;
  uint64_t v4 = v1 + 40;
  *(unsigned char *)(v1 + 48) = 0;
  type metadata accessor for NamedFileAssetResolver();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = MEMORY[0x263F8EE80];
  v5[3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  v5[4] = @objc closure #1 in variable initialization expression of NamedFileAssetResolver.callback;
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 - 24) = v3;
  swift_retain();
  id v6 = (id)REEngineConfigurationGetEngineQueue();
  if (!v6)
  {
    type metadata accessor for OS_os_log(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    id v6 = (id)static OS_dispatch_queue.main.getter();
  }
  v2[4] = v6;
  if (REEngineConfigurationGetEnableInteractions()
    && one-time initialization token for interactionComponentInitializer != -1)
  {
    swift_once();
  }
  if (one-time initialization token for builtInComponentsInitializer != -1) {
    swift_once();
  }
  v2[3] = REEngineCreate();
  REEngineConfigurationClone();
  REEngineConfigurationSetEngineQueue();
  id v7 = (id)REEngineConfigurationGetDevice();
  swift_unknownObjectRelease();
  if (v7)
  {
    id v8 = (id)REEngineConfigurationGetDevice();
    swift_release();
    REEngineConfigurationSetDevice();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v2[3];
  REEngineInitWithConfiguration();
  REEngineSetCallbacksEx();
  REEngineSetSwiftObject();
  MEMORY[0x22A68E3D0](v9, 0);
  type metadata accessor for __ServiceLocator();
  swift_allocObject();
  uint64_t v10 = swift_retain();
  uint64_t v11 = __ServiceLocator.init(engine:)(v10);
  swift_beginAccess();
  v2[5] = v11;
  uint64_t v12 = swift_release();
  __Engine.commonPostInit()(v12);
  RERelease();
  return v2;
}

void *static __Engine.__ensureInteractionsComponentIsRegistered()()
{
  return static __Engine.__ensureInteractionsComponentIsRegistered()(&one-time initialization token for interactionComponentInitializer);
}

void *static __Engine.__ensureBuiltInComponentsAreRegistered()()
{
  return static __Engine.__ensureInteractionsComponentIsRegistered()(&one-time initialization token for builtInComponentsInitializer);
}

void *static __Engine.__ensureInteractionsComponentIsRegistered()(void *result)
{
  if (*result != -1) {
    return (void *)swift_once();
  }
  return result;
}

uint64_t engineUpdateCallback(coreEngine:)()
{
  uint64_t v0 = type metadata accessor for OSSignpostID();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = REEngineGetSwiftObject();
  if (result)
  {
    uint64_t v5 = result;
    swift_retain();
    REEngineGetDeltaTime();
    float v7 = v6;
    if (one-time initialization token for UpdateLoop != -1) {
      swift_once();
    }
    uint64_t v8 = one-time initialization token for UpdateLoop;
    id v9 = (id)static __REOSLog.UpdateLoop;
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v0, (uint64_t)static __RESignpostID.UpdateLoop);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    v11(v3, v10, v0);
    type metadata accessor for __REOSSignpostScope();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = "Engine.engineUpdateCallback";
    *(void *)(v12 + 24) = 27;
    *(unsigned char *)(v12 + 32) = 2;
    *(void *)(v12 + 40) = v9;
    v11((char *)(v12 + OBJC_IVAR____TtC10RealityKit19__REOSSignpostScope_signpostID), (uint64_t)v3, v0);
    id v13 = v9;
    static os_signpost_type_t.begin.getter();
    os_signpost(_:dso:log:name:signpostID:)();

    uint64_t v14 = *(void (**)(char *, uint64_t))(v1 + 8);
    v14(v3, v0);
    uint64_t result = swift_beginAccess();
    if (*(void *)(v5 + 40))
    {
      uint64_t v18 = 0;
      memset(v17, 0, sizeof(v17));
      swift_retain();
      specialized EventService.publish<A>(_:on:componentType:)((uint64_t)v17, 0, 0, v7);
      outlined destroy of BodyTrackingComponent?((uint64_t)v17, &demangling cache variable for type metadata for EventSource?);
      swift_release();
      swift_setDeallocating();
      static os_signpost_type_t.end.getter();
      uint64_t v15 = *(void **)(v12 + 40);
      uint64_t v16 = v12 + OBJC_IVAR____TtC10RealityKit19__REOSSignpostScope_signpostID;
      os_signpost(_:dso:log:name:signpostID:)();

      v14((char *)v16, v0);
      swift_deallocClassInstance();
      swift_release();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t engineRenderCallback(coreEngine:)()
{
  uint64_t result = REEngineGetSwiftObject();
  if (result)
  {
    uint64_t v1 = result;
    swift_retain();
    swift_beginAccess();
    *(unsigned char *)(v1 + 48) = 0;
    uint64_t result = swift_beginAccess();
    if (*(void *)(v1 + 40))
    {
      uint64_t v3 = 0;
      memset(v2, 0, sizeof(v2));
      swift_retain();
      specialized EventService.publish<A>(_:on:componentType:)((uint64_t)v2, 0, 0);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v2, &demangling cache variable for type metadata for EventSource?);
      swift_release();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id __Engine.init(coreEngine:)(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 40) = 0;
  uint64_t v4 = v1 + 40;
  *(unsigned char *)(v1 + 48) = 0;
  type metadata accessor for NamedFileAssetResolver();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = MEMORY[0x263F8EE80];
  v5[3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  v5[4] = @objc closure #1 in variable initialization expression of NamedFileAssetResolver.callback;
  *(void *)(v4 + 16) = v5;
  RERetain();
  *(void *)(v4 - 16) = a1;
  REEngineConfigurationCreateFromEngine();
  RERetain();
  uint64_t v6 = REEngineConfigurationClone();
  type metadata accessor for EngineConfiguration();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  RERelease();
  *(void *)(v4 - 24) = v7;
  id result = (id)REEngineConfigurationGetEngineQueue();
  if (result)
  {
    *(void *)(v2 + 32) = result;
    if (REEngineConfigurationGetEnableInteractions()
      && one-time initialization token for interactionComponentInitializer != -1)
    {
      swift_once();
    }
    if (one-time initialization token for builtInComponentsInitializer != -1) {
      swift_once();
    }
    type metadata accessor for __ServiceLocator();
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = specialized __ServiceLocator.init(engine:)(v9);
    swift_release();
    swift_beginAccess();
    *(void *)(v2 + 40) = v10;
    swift_release();
    REEngineSetCallbacksEx();
    REEngineSetSwiftObject();
    if (static __ServiceLocator.sharedEngine)
    {
      swift_retain();
      REEngineSetShared();
      static __ServiceLocator.sharedEngine = (_UNKNOWN *)v2;
      swift_release();
    }
    __Engine.commonPostInit()();
    RERelease();
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t __Engine.commonPostInit()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + 40);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v0 + 40);
  if (!v4)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = v4 + 120;
  swift_beginAccess();
  outlined init with copy of __REAssetService(v5, (uint64_t)v19);
  if (one-time initialization token for instances != -1) {
    swift_once();
  }
  uint64_t v6 = static __RealityFileURLResolver.instances;
  uint64_t v7 = v20;
  uint64_t v8 = v21;
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(v19, v20);
  swift_retain();
  uint64_t v10 = specialized AssetServiceScopedRegistry.instance(for:)((uint64_t)v9, v6, v7, v8);
  swift_release();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  if (!*v2) {
    goto LABEL_10;
  }
  outlined init with copy of __REAssetService((uint64_t)(v10 + 2), (uint64_t)v19);
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  outlined init with copy of __REAssetService((uint64_t)(v10 + 2), (uint64_t)v19);
  uint64_t v13 = v20;
  uint64_t v14 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
  String.utf8CString.getter();
  REAssetManagerRegisterAssetResolver();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t result = swift_release();
  if (!*v2)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v15 = *v2 + 120;
  swift_beginAccess();
  outlined init with copy of __REAssetService(v15, (uint64_t)v19);
  uint64_t v16 = v20;
  uint64_t v17 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v16, v17);
  REAssetManagerRegisterAssetResolver();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  uint64_t ServiceLocator = REEngineGetServiceLocator();
  if (MEMORY[0x22A692230](ServiceLocator))
  {
    REAudioSceneServiceSetSTSControl();
    REAudioSceneServiceSetExternalSourceControl();
  }
  __Engine.__registerREKitBuiltInActions()();
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v1, (uint64_t)closure #1 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v1, (uint64_t)closure #2 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v1, (uint64_t)closure #3 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v1, (uint64_t)closure #4 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v1, (uint64_t)closure #5 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  return specialized static ForceEffectProtocol<>.__register(engine:_:)(v1, (uint64_t)closure #6 in __Engine.__registerREKitBuiltInForceEffects(), 0);
}

uint64_t __Engine.deinit()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 40);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = v2 + 120;
  swift_beginAccess();
  outlined init with copy of __REAssetService(v3, (uint64_t)v15);
  if (one-time initialization token for instances != -1) {
    swift_once();
  }
  uint64_t v4 = static __RealityFileURLResolver.instances;
  uint64_t v5 = (uint64_t)v16;
  uint64_t v6 = (uint64_t)v17;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(v15, (uint64_t)v16);
  swift_retain();
  uint64_t v8 = specialized AssetServiceScopedRegistry.instance(for:)((uint64_t)v7, v4, v5, v6);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  uint64_t v9 = (void *)v8[7];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = partial apply for closure #1 in __RealityFileURLResolver.unregisterRealityFileResolver();
  *(void *)(v10 + 24) = v8;
  uint64_t v17 = _sIg_Ieg_TRTA_0;
  uint64_t v18 = v10;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  void v15[2] = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v16 = &block_descriptor_12;
  uint64_t v11 = _Block_copy(v15);
  uint64_t v12 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v11);

  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release_n();
  uint64_t result = swift_release();
  if (v11)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  REEngineUnsetCallbacksEx();
  uint64_t result = REEngineSetSwiftObject();
  uint64_t v13 = *(void *)(v0 + 40);
  if (!v13)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if (*(unsigned char *)(v13 + 216) == 1)
  {
    *(unsigned char *)(v13 + 216) = 0;
    swift_beginAccess();
    swift_retain();
    REServiceLocatorSetSwiftObject();
    uint64_t v14 = *(void **)(v13 + 224);
    if (v14)
    {
      dlclose(v14);
      *(void *)(v13 + 224) = 0;
    }
    swift_release();
  }
  *(void *)(v0 + 40) = 0;
  swift_release();
  RERelease();
  swift_release();

  swift_release();
  swift_release();
  return v0;
}

uint64_t __Engine.__deallocating_deinit()
{
  __Engine.deinit();

  return swift_deallocClassInstance();
}

uint64_t static __Engine.__fromCore(_:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  Swiftuint64_t Object = REEngineGetSwiftObject();
  if (SwiftObject)
  {
    uint64_t v3 = SwiftObject;
    swift_retain();
  }
  else
  {
    type metadata accessor for __Engine();
    uint64_t v3 = swift_allocObject();
    __Engine.init(coreEngine:)(v1);
  }
  return v3;
}

Swift::Void __swiftcall __Engine.start()()
{
}

Swift::Void __swiftcall __Engine.__stop()()
{
}

void closure #1 in variable initialization expression of static __Engine.builtInComponentsInitializer()
{
  if ((static __Engine.customComponentsRegistered & 1) == 0)
  {
    static __Engine.customComponentsRegistered = 1;
    specialized static SceneManager.customComponentType(_:)((uint64_t)&type metadata for __EntityInfoComponent, (uint64_t)&protocol witness table for __EntityInfoComponent);
    if (one-time initialization token for customComponents != -1) {
      swift_once();
    }
    uint64_t v0 = static __Engine.customComponents;
    uint64_t v1 = *(void *)(static __Engine.customComponents + 16);
    if (v1)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = v0 + 40;
      do
      {
        (*(void (**)(void))(*(void *)v2 + 8))();
        v2 += 16;
        --v1;
      }
      while (v1);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t static __Engine.__registerREKitComponents()()
{
  uint64_t v1 = v0;
  if ((static __Engine.customComponentsRegistered & 1) == 0)
  {
    static __Engine.customComponentsRegistered = 1;
    uint64_t result = specialized static SceneManager.customComponentType(_:)((uint64_t)&type metadata for __EntityInfoComponent, (uint64_t)&protocol witness table for __EntityInfoComponent);
    if (one-time initialization token for customComponents != -1) {
      uint64_t result = swift_once();
    }
    uint64_t v3 = static __Engine.customComponents;
    uint64_t v4 = *(void *)(static __Engine.customComponents + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = v4 - 1;
      uint64_t v6 = v3 + 40;
      do
      {
        uint64_t v7 = v5;
        (*(void (**)(void))(*(void *)v6 + 8))();
        if (v1) {
          break;
        }
        uint64_t v5 = v7 - 1;
        v6 += 16;
      }
      while (v7);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void one-time initialization function for interactionComponentInitializer()
{
  if ((static __Engine.interactionsComponentsRegistered & 1) == 0)
  {
    static __Engine.interactionsComponentsRegistered = 1;
    type metadata accessor for __RKEntityInteractionsComponent.Registration();
    swift_allocObject();
    uint64_t v0 = (void *)__RKEntityInteractionsComponent.Registration.init()();
    swift_beginAccess();
    static __RKEntityInteractionsComponent.registration = v0;
    swift_release();
  }
}

void static __Engine.__registerInteractionComponent()()
{
  if ((static __Engine.interactionsComponentsRegistered & 1) == 0)
  {
    static __Engine.interactionsComponentsRegistered = 1;
    type metadata accessor for __RKEntityInteractionsComponent.Registration();
    swift_allocObject();
    uint64_t v1 = __RKEntityInteractionsComponent.Registration.init()();
    if (!v0)
    {
      uint64_t v2 = (void *)v1;
      swift_beginAccess();
      static __RKEntityInteractionsComponent.registration = v2;
      swift_release();
    }
  }
}

uint64_t static __Engine.__unregisterREKitComponents()()
{
  if (static __Engine.customComponentsRegistered == 1)
  {
    static __Engine.customComponentsRegistered = 0;
    uint64_t result = specialized static SceneManager.unregisterCustomComponents()();
    if (one-time initialization token for customComponents != -1) {
LABEL_12:
    }
      uint64_t result = swift_once();
    uint64_t v1 = static __Engine.customComponents;
    uint64_t v2 = *(void *)(static __Engine.customComponents + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = v1 + 16 * v2 + 24;
      do
      {
        if (v2 > *(void *)(v1 + 16))
        {
          __break(1u);
          goto LABEL_12;
        }
        --v2;
        (*(void (**)(void))(*(void *)v3 + 16))();
        v3 -= 16;
      }
      while (v2);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t static __Engine.__unregisterInteractionComponent()()
{
  if (static __Engine.interactionsComponentsRegistered == 1)
  {
    static __Engine.interactionsComponentsRegistered = 0;
    swift_beginAccess();
    static __RKEntityInteractionsComponent.registration = 0;
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall __Engine.__registerREKitBuiltInActions()()
{
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #1 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #2 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #3 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #4 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #5 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #6 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #7 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #8 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #9 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #10 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #11 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #12 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #13 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #14 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #15 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #16 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #17 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #18 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #19 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #20 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #21 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #22 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #23 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #24 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #25 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #26 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();
  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #27 in __Engine.__registerREKitBuiltInActions(), 0);
  specialized static EntityAction.__register()();
  specialized static EntityAction<>.__registerCodable()();

  specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(v0, (uint64_t)closure #28 in __Engine.__registerREKitBuiltInActions(), 0);
}

void closure #1 in __Engine.__registerREKitBuiltInActions()(void *a1@<X8>)
{
  a1[3] = &type metadata for PlayAnimationActionHandler;
  a1[4] = &protocol witness table for PlayAnimationActionHandler;
  *a1 = 0;
}

void closure #2 in __Engine.__registerREKitBuiltInActions()(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for NotificationActionHandler;
  *(void *)(a1 + 32) = &protocol witness table for NotificationActionHandler;
}

void closure #3 in __Engine.__registerREKitBuiltInActions()(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for SetEntityEnabledActionHandler;
  *(void *)(a1 + 32) = &protocol witness table for SetEntityEnabledActionHandler;
}

void closure #4 in __Engine.__registerREKitBuiltInActions()(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ImpulseActionHandler;
  *(void *)(a1 + 32) = &protocol witness table for ImpulseActionHandler;
}

double closure #5 in __Engine.__registerREKitBuiltInActions()@<D0>(uint64_t *a1@<X8>)
{
  if (one-time initialization token for identity != -1) {
    swift_once();
  }
  long long v5 = xmmword_2681C7AB0;
  long long v6 = static Transform.identity;
  long long v4 = xmmword_2681C7AC0;
  a1[3] = (uint64_t)&type metadata for OrbitEntityActionHandler;
  a1[4] = (uint64_t)&protocol witness table for OrbitEntityActionHandler;
  uint64_t v2 = swift_allocObject();
  *a1 = v2;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(_OWORD *)(v2 + 48) = v6;
  *(_OWORD *)(v2 + 64) = v5;
  *(_OWORD *)(v2 + 80) = v4;
  *(_OWORD *)(v2 + 96) = v6;
  *(_OWORD *)(v2 + 112) = v5;
  *(_OWORD *)(v2 + 128) = v4;
  double result = 0.0;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(unsigned char *)(v2 + 192) = 1;
  *(void *)(v2 + 200) = 0;
  return result;
}

uint64_t closure #6 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for SpinActionHandler;
  a1[4] = (uint64_t)&protocol witness table for SpinActionHandler;
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 1;
  return result;
}

double closure #7 in __Engine.__registerREKitBuiltInActions()@<D0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for BillboardActionHandler;
  a1[4] = (uint64_t)&protocol witness table for BillboardActionHandler;
  uint64_t v2 = swift_allocObject();
  *a1 = v2;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_DWORD *)(v2 + 96) = 0;
  *(unsigned char *)(v2 + 100) = 1;
  return result;
}

uint64_t closure #8 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<Float>);
  uint64_t result = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<Float> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<Float>);
  *(void *)(a1 + 32) = result;
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 1;
  *(void *)(a1 + 8) = 0;
  return result;
}

uint64_t closure #9 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #9 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for FromToByActionHandler<Double>, &lazy protocol witness table cache variable for type FromToByActionHandler<Double> and conformance FromToByActionHandler<A>, a1);
}

uint64_t closure #10 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #9 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for FromToByActionHandler<SIMD2<Float>>, &lazy protocol witness table cache variable for type FromToByActionHandler<SIMD2<Float>> and conformance FromToByActionHandler<A>, a1);
}

uint64_t closure #9 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X1>, unint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t result = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(a2, a1);
  *(void *)(a3 + 32) = result;
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  *(void *)(a3 + 16) = 0;
  return result;
}

uint64_t closure #11 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X8>)
{
  return closure #11 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for FromToByActionHandler<SIMD3<Float>>, &lazy protocol witness table cache variable for type FromToByActionHandler<SIMD3<Float>> and conformance FromToByActionHandler<A>, a1);
}

uint64_t closure #12 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X8>)
{
  return closure #11 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for FromToByActionHandler<SIMD4<Float>>, &lazy protocol witness table cache variable for type FromToByActionHandler<SIMD4<Float>> and conformance FromToByActionHandler<A>, a1);
}

uint64_t closure #11 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X1>, unint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(a1);
  a3[4] = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(a2, a1);
  uint64_t result = swift_allocObject();
  *a3 = result;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 1;
  *(void *)(result + 40) = 0;
  return result;
}

uint64_t closure #13 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X8>)
{
  return closure #11 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for FromToByActionHandler<simd_quatf>, &lazy protocol witness table cache variable for type FromToByActionHandler<simd_quatf> and conformance FromToByActionHandler<A>, a1);
}

double closure #14 in __Engine.__registerREKitBuiltInActions()@<D0>(uint64_t *a1@<X8>)
{
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<Transform>);
  a1[4] = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<Transform> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<Transform>);
  uint64_t v2 = swift_allocObject();
  *a1 = v2;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(unsigned char *)(v2 + 64) = 1;
  *(void *)(v2 + 72) = 0;
  return result;
}

uint64_t closure #15 in __Engine.__registerREKitBuiltInActions()@<X0>(void *a1@<X8>)
{
  return closure #15 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>, &lazy protocol witness table cache variable for type FromToByActionHandler<JointTransforms> and conformance FromToByActionHandler<A>, a1);
}

uint64_t closure #16 in __Engine.__registerREKitBuiltInActions()@<X0>(void *a1@<X8>)
{
  return closure #15 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>, &lazy protocol witness table cache variable for type FromToByActionHandler<BlendShapeWeights> and conformance FromToByActionHandler<A>, a1);
}

uint64_t closure #15 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X1>, unint64_t *a2@<X2>, void *a3@<X8>)
{
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t result = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(a2, a1);
  a3[4] = result;
  *a3 = 0;
  a3[1] = 0;
  return result;
}

uint64_t closure #17 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<Float>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Float> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #18 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<Double>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Double> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #19 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD2<Float>>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD2<Float>> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #18 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t *a1@<X1>, unint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t result = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(a2, a1);
  *(void *)(a3 + 32) = result;
  return result;
}

uint64_t closure #20 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD3<Float>>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD3<Float>> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #21 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD4<Float>>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD4<Float>> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #22 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<simd_quatf>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<simd_quatf> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #23 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<Int>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Int> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #24 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  return closure #18 in __Engine.__registerREKitBuiltInActions()(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<Bool>, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Bool> and conformance SetEntityPropertyActionHandler<A>, a1);
}

uint64_t closure #25 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<String>);
  uint64_t result = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<String> and conformance SetEntityPropertyActionHandler<A>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<String>);
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t closure #26 in __Engine.__registerREKitBuiltInActions()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<Transform>);
  uint64_t result = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Transform> and conformance SetEntityPropertyActionHandler<A>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Transform>);
  *(void *)(a1 + 32) = result;
  return result;
}

void closure #27 in __Engine.__registerREKitBuiltInActions()(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for PlayAudioActionHandler;
  *(void *)(a1 + 32) = &protocol witness table for PlayAudioActionHandler;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
}

void closure #28 in __Engine.__registerREKitBuiltInActions()(void *a1@<X8>)
{
  a1[3] = &type metadata for EmphasizeActionHandler;
  a1[4] = &protocol witness table for EmphasizeActionHandler;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *a1 = 0;
  a1[1] = v1;
}

Swift::Void __swiftcall __Engine.__registerREKitBuiltInForceEffects()()
{
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v0, (uint64_t)closure #1 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v0, (uint64_t)closure #2 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v0, (uint64_t)closure #3 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v0, (uint64_t)closure #4 in __Engine.__registerREKitBuiltInForceEffects(), 0);
  specialized static ForceEffectProtocol<>.__register(engine:_:)(v0, (uint64_t)closure #5 in __Engine.__registerREKitBuiltInForceEffects(), 0);

  specialized static ForceEffectProtocol<>.__register(engine:_:)(v0, (uint64_t)closure #6 in __Engine.__registerREKitBuiltInForceEffects(), 0);
}

void *closure #1 in __Engine.__registerREKitBuiltInForceEffects()(uint64_t a1)
{
  return ConstantForceEffect.update(parameters:)((void *)(a1 + 40));
}

uint64_t specialized static ForceEffectProtocol<>.__register(engine:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  aBlock[0] = &type metadata for ConstantForceEffect;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConstantForceEffect.Type);
  String.init<A>(describing:)();
  String.utf8CString.getter();
  uint64_t v6 = REForceEffectEventFilter();
  swift_release();
  if (one-time initialization token for registeredForceEffectsCodable != -1) {
    swift_once();
  }
  unint64_t v7 = lazy protocol witness table accessor for type ConstantForceEffect and conformance ConstantForceEffect();
  unint64_t v8 = lazy protocol witness table accessor for type ConstantForceEffect and conformance ConstantForceEffect();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = static ForceEffectComponent.registeredForceEffectsCodable;
  static ForceEffectComponent.registeredForceEffectsCodable = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for ConstantForceEffect, (uint64_t)&protocol witness table for ConstantForceEffect, v7, v8, v6, isUniquelyReferenced_nonNull_native);
  static ForceEffectComponent.registeredForceEffectsCodable = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  if (a1)
  {
    swift_retain();
    REEngineGetEventBus();
LABEL_8:
    specialized getEventID<A>(_:)();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    REForceEffectEventFilter();
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static ForceEffectProtocol<>.__register(engine:_:);
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    aBlock[3] = &block_descriptor_88;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    REEventBusSubscribeWithMatch();
    _Block_release(v14);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(a2);
  }
  type metadata accessor for __ServiceLocator();
  swift_retain();
  uint64_t v11 = static __ServiceLocator.shared.getter();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  uint64_t result = MEMORY[0x22A692280](v12);
  if (result) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void aBlock[6];
  uint64_t v16;

  aBlock[0] = &type metadata for ConstantRadialForceEffect;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConstantRadialForceEffect.Type);
  String.init<A>(describing:)();
  String.utf8CString.getter();
  uint64_t v6 = REForceEffectEventFilter();
  swift_release();
  if (one-time initialization token for registeredForceEffectsCodable != -1) {
    swift_once();
  }
  unint64_t v7 = lazy protocol witness table accessor for type ConstantRadialForceEffect and conformance ConstantRadialForceEffect();
  unint64_t v8 = lazy protocol witness table accessor for type ConstantRadialForceEffect and conformance ConstantRadialForceEffect();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = static ForceEffectComponent.registeredForceEffectsCodable;
  static ForceEffectComponent.registeredForceEffectsCodable = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for ConstantRadialForceEffect, (uint64_t)&protocol witness table for ConstantRadialForceEffect, v7, v8, v6, isUniquelyReferenced_nonNull_native);
  static ForceEffectComponent.registeredForceEffectsCodable = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  if (a1)
  {
    swift_retain();
    REEngineGetEventBus();
LABEL_8:
    specialized getEventID<A>(_:)();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    REForceEffectEventFilter();
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static ForceEffectProtocol<>.__register(engine:_:);
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    aBlock[3] = &block_descriptor_82;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    REEventBusSubscribeWithMatch();
    _Block_release(v14);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(a2);
  }
  type metadata accessor for __ServiceLocator();
  swift_retain();
  uint64_t v11 = static __ServiceLocator.shared.getter();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  uint64_t result = MEMORY[0x22A692280](v12);
  if (result) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void aBlock[6];
  uint64_t v16;

  aBlock[0] = &type metadata for RadialForceEffect;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RadialForceEffect.Type);
  String.init<A>(describing:)();
  String.utf8CString.getter();
  uint64_t v6 = REForceEffectEventFilter();
  swift_release();
  if (one-time initialization token for registeredForceEffectsCodable != -1) {
    swift_once();
  }
  unint64_t v7 = lazy protocol witness table accessor for type RadialForceEffect and conformance RadialForceEffect();
  unint64_t v8 = lazy protocol witness table accessor for type RadialForceEffect and conformance RadialForceEffect();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = static ForceEffectComponent.registeredForceEffectsCodable;
  static ForceEffectComponent.registeredForceEffectsCodable = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for RadialForceEffect, (uint64_t)&protocol witness table for RadialForceEffect, v7, v8, v6, isUniquelyReferenced_nonNull_native);
  static ForceEffectComponent.registeredForceEffectsCodable = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  if (a1)
  {
    swift_retain();
    REEngineGetEventBus();
LABEL_8:
    specialized getEventID<A>(_:)();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    REForceEffectEventFilter();
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static ForceEffectProtocol<>.__register(engine:_:);
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    aBlock[3] = &block_descriptor_76_0;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    REEventBusSubscribeWithMatch();
    _Block_release(v14);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(a2);
  }
  type metadata accessor for __ServiceLocator();
  swift_retain();
  uint64_t v11 = static __ServiceLocator.shared.getter();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  uint64_t result = MEMORY[0x22A692280](v12);
  if (result) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void aBlock[6];
  uint64_t v16;

  aBlock[0] = &type metadata for VortexForceEffect;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VortexForceEffect.Type);
  String.init<A>(describing:)();
  String.utf8CString.getter();
  uint64_t v6 = REForceEffectEventFilter();
  swift_release();
  if (one-time initialization token for registeredForceEffectsCodable != -1) {
    swift_once();
  }
  unint64_t v7 = lazy protocol witness table accessor for type VortexForceEffect and conformance VortexForceEffect();
  unint64_t v8 = lazy protocol witness table accessor for type VortexForceEffect and conformance VortexForceEffect();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = static ForceEffectComponent.registeredForceEffectsCodable;
  static ForceEffectComponent.registeredForceEffectsCodable = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for VortexForceEffect, (uint64_t)&protocol witness table for VortexForceEffect, v7, v8, v6, isUniquelyReferenced_nonNull_native);
  static ForceEffectComponent.registeredForceEffectsCodable = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  if (a1)
  {
    swift_retain();
    REEngineGetEventBus();
LABEL_8:
    specialized getEventID<A>(_:)();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    REForceEffectEventFilter();
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static ForceEffectProtocol<>.__register(engine:_:);
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    aBlock[3] = &block_descriptor_70;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    REEventBusSubscribeWithMatch();
    _Block_release(v14);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(a2);
  }
  type metadata accessor for __ServiceLocator();
  swift_retain();
  uint64_t v11 = static __ServiceLocator.shared.getter();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  uint64_t result = MEMORY[0x22A692280](v12);
  if (result) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void aBlock[6];
  uint64_t v16;

  aBlock[0] = &type metadata for DragForceEffect;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DragForceEffect.Type);
  String.init<A>(describing:)();
  String.utf8CString.getter();
  uint64_t v6 = REForceEffectEventFilter();
  swift_release();
  if (one-time initialization token for registeredForceEffectsCodable != -1) {
    swift_once();
  }
  unint64_t v7 = lazy protocol witness table accessor for type DragForceEffect and conformance DragForceEffect();
  unint64_t v8 = lazy protocol witness table accessor for type DragForceEffect and conformance DragForceEffect();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = static ForceEffectComponent.registeredForceEffectsCodable;
  static ForceEffectComponent.registeredForceEffectsCodable = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for DragForceEffect, (uint64_t)&protocol witness table for DragForceEffect, v7, v8, v6, isUniquelyReferenced_nonNull_native);
  static ForceEffectComponent.registeredForceEffectsCodable = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  if (a1)
  {
    swift_retain();
    REEngineGetEventBus();
LABEL_8:
    specialized getEventID<A>(_:)();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    REForceEffectEventFilter();
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static ForceEffectProtocol<>.__register(engine:_:);
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    aBlock[3] = &block_descriptor_64;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    REEventBusSubscribeWithMatch();
    _Block_release(v14);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(a2);
  }
  type metadata accessor for __ServiceLocator();
  swift_retain();
  uint64_t v11 = static __ServiceLocator.shared.getter();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  uint64_t result = MEMORY[0x22A692280](v12);
  if (result) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void aBlock[6];
  uint64_t v16;

  aBlock[0] = &type metadata for TurbulenceForceEffect;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TurbulenceForceEffect.Type);
  String.init<A>(describing:)();
  String.utf8CString.getter();
  uint64_t v6 = REForceEffectEventFilter();
  swift_release();
  if (one-time initialization token for registeredForceEffectsCodable != -1) {
    swift_once();
  }
  unint64_t v7 = lazy protocol witness table accessor for type TurbulenceForceEffect and conformance TurbulenceForceEffect();
  unint64_t v8 = lazy protocol witness table accessor for type TurbulenceForceEffect and conformance TurbulenceForceEffect();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = static ForceEffectComponent.registeredForceEffectsCodable;
  static ForceEffectComponent.registeredForceEffectsCodable = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for TurbulenceForceEffect, (uint64_t)&protocol witness table for TurbulenceForceEffect, v7, v8, v6, isUniquelyReferenced_nonNull_native);
  static ForceEffectComponent.registeredForceEffectsCodable = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  if (a1)
  {
    swift_retain();
    REEngineGetEventBus();
LABEL_8:
    specialized getEventID<A>(_:)();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    REForceEffectEventFilter();
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static ForceEffectProtocol<>.__register(engine:_:);
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
    aBlock[3] = &block_descriptor_58_0;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    REEventBusSubscribeWithMatch();
    _Block_release(v14);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?(a2);
  }
  type metadata accessor for __ServiceLocator();
  swift_retain();
  uint64_t v11 = static __ServiceLocator.shared.getter();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  uint64_t result = MEMORY[0x22A692280](v12);
  if (result) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t closure #2 in __Engine.__registerREKitBuiltInForceEffects()(uint64_t a1)
{
  return closure #2 in __Engine.__registerREKitBuiltInForceEffects()(a1, (uint64_t (*)(uint64_t))ConstantRadialForceEffect.update(parameters:));
}

uint64_t closure #3 in __Engine.__registerREKitBuiltInForceEffects()(double *a1, double a2, double a3, double a4, double a5, __n128 a6)
{
  return RadialForceEffect.update(parameters:)((uint64_t)(a1 + 2), *a1, a3, a4, a5, a6);
}

void closure #4 in __Engine.__registerREKitBuiltInForceEffects()(float32x4_t *a1)
{
  if ((a1[5].i8[8] & 1) == 0)
  {
    float v13 = a1->f32[0];
    uint64_t v2 = a1[4].i64[1];
    *(float32x2_t *)v3.f32 = normalizeSafe(vec:)(a1[1]);
    uint64_t v4 = a1[3].i64[0];
    if (v4 < 0)
    {
      __break(1u);
    }
    else if (v4)
    {
      uint64_t v5 = 0;
      uint64_t v6 = a1[15].i64[0];
      uint64_t v7 = a1[15].i64[1];
      float32x4_t v8 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v3, (int32x4_t)v3), (int8x16_t)v3, 0xCuLL);
      float32x4_t v9 = vnegq_f32(v3);
      do
      {
        if (v5 < v7)
        {
          int8x16_t v10 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(*(int32x4_t *)(v2 + 16 * v5), *(int32x4_t *)(v2 + 16 * v5)), *(int8x16_t *)(v2 + 16 * v5), 0xCuLL), v9), *(float32x4_t *)(v2 + 16 * v5), v8);
          v11.i32[0] = vextq_s8(v10, v10, 8uLL).u32[0];
          v11.i32[1] = v10.i32[0];
          *(float32x2_t *)&long long v12 = vmul_n_f32(v11, v13);
          *((void *)&v12 + 1) = COERCE_UNSIGNED_INT(vmuls_lane_f32(v13, *(float32x2_t *)v10.i8, 1));
          *(_OWORD *)(v6 + 16 * v5) = v12;
        }
        ++v5;
      }
      while (v4 != v5);
    }
  }
}

uint64_t closure #5 in __Engine.__registerREKitBuiltInForceEffects()(uint64_t a1)
{
  return closure #2 in __Engine.__registerREKitBuiltInForceEffects()(a1, DragForceEffect.update(parameters:));
}

uint64_t closure #2 in __Engine.__registerREKitBuiltInForceEffects()(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(a1 + 8);
}

uint64_t closure #6 in __Engine.__registerREKitBuiltInForceEffects()(uint64_t a1)
{
  return TurbulenceForceEffect.update(parameters:)(a1 + 16);
}

uint64_t specialized EventService.publish<A>(_:on:componentType:)(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  if (swift_conformsToProtocol2()) {
    float32x4_t v8 = &type metadata for EngineUpdateEvent;
  }
  else {
    float32x4_t v8 = 0;
  }
  if (v8)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v17, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v17, a2, a3, 0, 0, specialized getEventID<A>(_:), v18);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v18, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityRotorNavigationEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v18);
    *(float *)uint64_t v15 = a4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AccessibilityRotorNavigationEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  if (swift_conformsToProtocol2()) {
    float32x4_t v9 = &type metadata for EngineUpdateEvent;
  }
  else {
    float32x4_t v9 = 0;
  }
  if (v9)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v17, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v17, a2, a3, 0, 0, specialized getEventID<A>(_:), v18);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v18, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityActivateEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v18);
    *(float *)uint64_t v15 = a4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityActivateEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  if (swift_conformsToProtocol2()) {
    int8x16_t v10 = &type metadata for EngineUpdateEvent;
  }
  else {
    int8x16_t v10 = 0;
  }
  if (v10)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v17, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v17, a2, a3, 0, 0, specialized getEventID<A>(_:), v18);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v18, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityIncrementEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v18);
    *(float *)uint64_t v15 = a4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AccessibilityIncrementEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  if (swift_conformsToProtocol2()) {
    float32x2_t v11 = &type metadata for EngineUpdateEvent;
  }
  else {
    float32x2_t v11 = 0;
  }
  if (v11)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v17, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v17, a2, a3, 0, 0, specialized getEventID<A>(_:), v18);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v18, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityDecrementEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v18);
    *(float *)uint64_t v15 = a4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityDecrementEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  if (swift_conformsToProtocol2()) {
    long long v12 = &type metadata for EngineUpdateEvent;
  }
  else {
    long long v12 = 0;
  }
  if (v12)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v17, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v17, a2, a3, 0, 0, specialized getEventID<A>(_:), v18);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v18, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityCustomActionEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v18);
    *(float *)uint64_t v15 = a4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AccessibilityCustomActionEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  outlined init with copy of (Int, URL)(a1, (uint64_t)v18, &demangling cache variable for type metadata for EventSource?);
  specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v18, a2, a3, 0, 0, specialized getEventID<A>(_:), v17);
  specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v17, &demangling cache variable for type metadata for REEventDispatcher<EngineUpdateEvent>);
  outlined release of REEventBus.DispatcherHandle((uint64_t)v17);
  specialized REEventDispatcher.receive(_:)(a4);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    outlined init with copy of (Int, URL)((uint64_t)v15, (uint64_t)v14, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v14, 0, 0, 0, 0, specialized getEventID<A>(_:), v18);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v18, &demangling cache variable for type metadata for REEventDispatcher<EngineUpdateEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v18);
    outlined destroy of BodyTrackingComponent?((uint64_t)v15, &demangling cache variable for type metadata for EventSource?);
    specialized REEventDispatcher.receive(_:)(a4);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t specialized EventService.publish<A>(_:on:componentType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (swift_conformsToProtocol2()) {
    uint64_t v6 = &type metadata for EngineRenderEvent;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v15, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v15, a2, a3, 0, 0, specialized getEventID<A>(_:), v16);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v16, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityRotorNavigationEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AccessibilityRotorNavigationEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  if (swift_conformsToProtocol2()) {
    uint64_t v7 = &type metadata for EngineRenderEvent;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v15, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v15, a2, a3, 0, 0, specialized getEventID<A>(_:), v16);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v16, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityActivateEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityActivateEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  if (swift_conformsToProtocol2()) {
    float32x4_t v8 = &type metadata for EngineRenderEvent;
  }
  else {
    float32x4_t v8 = 0;
  }
  if (v8)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v15, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v15, a2, a3, 0, 0, specialized getEventID<A>(_:), v16);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v16, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityIncrementEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AccessibilityIncrementEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  if (swift_conformsToProtocol2()) {
    float32x4_t v9 = &type metadata for EngineRenderEvent;
  }
  else {
    float32x4_t v9 = 0;
  }
  if (v9)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v15, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v15, a2, a3, 0, 0, specialized getEventID<A>(_:), v16);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v16, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityDecrementEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityDecrementEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  if (swift_conformsToProtocol2()) {
    int8x16_t v10 = &type metadata for EngineRenderEvent;
  }
  else {
    int8x16_t v10 = 0;
  }
  if (v10)
  {
    outlined init with copy of (Int, URL)(a1, (uint64_t)v15, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v15, a2, a3, 0, 0, specialized getEventID<A>(_:), v16);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v16, &demangling cache variable for type metadata for REEventDispatcher<AccessibilityCustomActionEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AccessibilityCustomActionEvent);
    swift_dynamicCast();
    specialized REEventDispatcher.receive(_:)();
    goto LABEL_26;
  }
  outlined init with copy of (Int, URL)(a1, (uint64_t)v16, &demangling cache variable for type metadata for EventSource?);
  specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v16, a2, a3, 0, 0, specialized getEventID<A>(_:), v15);
  specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v15, &demangling cache variable for type metadata for REEventDispatcher<EngineRenderEvent>);
  outlined release of REEventBus.DispatcherHandle((uint64_t)v15);
  specialized REEventDispatcher.receive(_:)();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    outlined init with copy of (Int, URL)((uint64_t)v13, (uint64_t)v12, &demangling cache variable for type metadata for EventSource?);
    specialized REEventBus.DispatcherHandle.init<A>(event:sourceObject:componentType:matching:)((uint64_t)v12, 0, 0, 0, 0, specialized getEventID<A>(_:), v16);
    specialized REEventBus.getOrCreateDispatcher<A>(handle:of:)(v16, &demangling cache variable for type metadata for REEventDispatcher<EngineRenderEvent>);
    outlined release of REEventBus.DispatcherHandle((uint64_t)v16);
    outlined destroy of BodyTrackingComponent?((uint64_t)v13, &demangling cache variable for type metadata for EventSource?);
    specialized REEventDispatcher.receive(_:)();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t protocol witness for RECoreBridging.corePointer.getter in conformance __Engine()
{
  return *(void *)(*(void *)v0 + 24);
}

float EngineUpdateEvent.deltaTime.getter()
{
  return *(float *)v0;
}

void *specialized FromToByActionHandler.actionUpdated(event:)(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t), uint64_t a3, void *(*a4)(void *__return_ptr, uint64_t, void, double))
{
  float32x4_t v8 = v4;
  outlined init with take of Transform?(a1 + 200, (uint64_t)v24, &demangling cache variable for type metadata for Double?);
  uint64_t result = (void *)outlined init with take of Transform?((uint64_t)v24, (uint64_t)&v25, &demangling cache variable for type metadata for Double?);
  if ((v26 & 1) == 0)
  {
    double v11 = v25;
    BOOL v12 = fabs(v25 + -1.0) <= 0.0001;
    int v13 = v25 <= 0.0001 || v12;
    double v14 = *v8;
    if (v13 == 1 && v14 != 0.0)
    {
      uint64_t v23 = *(void *)v8;
      if (vabdd_f64(v8[1], v25) <= 0.0001)
      {
        uint64_t v17 = swift_bridgeObjectRetain();
        a2(v20, v17);
        uint64_t v18 = v21;
        if (v21)
        {
          uint64_t v19 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v19 + 64))(&v23, a3, v18, v19);
          swift_bridgeObjectRelease();
          uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t result = (void *)outlined destroy of BodyTrackingComponent?((uint64_t)v20, &demangling cache variable for type metadata for AnimationStateProtocol?);
        }
        goto LABEL_17;
      }
    }
    uint64_t result = a4(v20, a1, *(void *)&v14, v8[1]);
    if (!v20[0]) {
      return result;
    }
    uint64_t v23 = v20[0];
    a2(v20, (uint64_t)result);
    uint64_t v15 = v21;
    if (v21)
    {
      uint64_t v16 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v16 + 64))(&v23, a3, v15, v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      if (v13)
      {
LABEL_11:
        uint64_t result = (void *)swift_bridgeObjectRelease();
        *(void *)float32x4_t v8 = v23;
LABEL_17:
        v8[1] = v11;
        return result;
      }
    }
    else
    {
      outlined destroy of BodyTrackingComponent?((uint64_t)v20, &demangling cache variable for type metadata for AnimationStateProtocol?);
      if (v13) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *float32x4_t v8 = 0.0;
    goto LABEL_17;
  }
  return result;
}

uint64_t specialized FromToByActionHandler.actionUpdated(event:)(uint64_t a1)
{
  uint64_t v2 = v1;
  outlined init with take of Transform?(a1 + 360, (uint64_t)v44, &demangling cache variable for type metadata for Double?);
  uint64_t result = outlined init with take of Transform?((uint64_t)v44, (uint64_t)&v45, &demangling cache variable for type metadata for Double?);
  if ((v46 & 1) == 0)
  {
    double v5 = v45;
    BOOL v6 = fabs(v45 + -1.0) > 0.0001;
    BOOL v7 = v45 > 0.0001 && v6;
    if (!v7 && (*(unsigned char *)(v2 + 48) & 1) == 0)
    {
      long long v8 = *(_OWORD *)(v2 + 16);
      uint64_t v9 = *(void *)(v2 + 32);
      uint64_t v10 = *(void *)(v2 + 40);
      v40[0] = *(_OWORD *)v2;
      v40[1] = v8;
      uint64_t v41 = v9;
      uint64_t v42 = v10;
      if (vabdd_f64(*(double *)(v2 + 56), v45) <= 0.0001)
      {
        specialized ActionEvent.animationState.getter((uint64_t)v36);
        uint64_t v25 = v37;
        if (v37)
        {
          uint64_t v26 = v38;
          __swift_project_boxed_opaque_existential_1(v36, v37);
          (*(void (**)(_OWORD *, ValueMetadata *, uint64_t, uint64_t))(v26 + 64))(v40, &type metadata for Transform, v25, v26);
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        }
        else
        {
          uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v36, &demangling cache variable for type metadata for AnimationStateProtocol?);
        }
        goto LABEL_15;
      }
    }
    specialized FromToByActionHandler.evaluateResult(_:)(a1, (uint64_t)v36);
    uint64_t v11 = v36[0];
    uint64_t v12 = v36[1];
    uint64_t v13 = v36[2];
    uint64_t v14 = v37;
    uint64_t v15 = v38;
    uint64_t v16 = v39;
    uint64_t result = outlined init with take of Transform?((uint64_t)v36, (uint64_t)v40, &demangling cache variable for type metadata for Transform?);
    if (v43) {
      return result;
    }
    uint64_t v30 = v11;
    uint64_t v31 = v12;
    uint64_t v32 = v13;
    uint64_t v33 = v14;
    uint64_t v34 = v15;
    uint64_t v35 = v16;
    specialized ActionEvent.animationState.getter((uint64_t)v27);
    uint64_t v17 = v28;
    if (v28)
    {
      uint64_t v18 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      (*(void (**)(uint64_t *, ValueMetadata *, uint64_t, uint64_t))(v18 + 64))(&v30, &type metadata for Transform, v17, v18);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      if (v7)
      {
LABEL_11:
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
LABEL_14:
        *(void *)uint64_t v2 = v19;
        *(void *)(v2 + 8) = v20;
        *(void *)(v2 + 16) = v21;
        *(void *)(v2 + 24) = v22;
        *(void *)(v2 + 32) = v23;
        *(void *)(v2 + 40) = v24;
        *(unsigned char *)(v2 + 48) = v7;
LABEL_15:
        *(double *)(v2 + 56) = v5;
        return result;
      }
    }
    else
    {
      uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v27, &demangling cache variable for type metadata for AnimationStateProtocol?);
      if (v7) {
        goto LABEL_11;
      }
    }
    uint64_t v19 = v30;
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    uint64_t v23 = v34;
    uint64_t v24 = v35;
    goto LABEL_14;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  double v5;
  BOOL v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned char v22[16];
  double v23;
  char v24;

  uint64_t v2 = v1;
  outlined init with take of Transform?(a1 + 216, (uint64_t)v22, &demangling cache variable for type metadata for Double?);
  uint64_t result = outlined init with take of Transform?((uint64_t)v22, (uint64_t)&v23, &demangling cache variable for type metadata for Double?);
  if ((v24 & 1) == 0)
  {
    double v5 = v23;
    BOOL v6 = fabs(v23 + -1.0) > 0.0001;
    BOOL v7 = v23 > 0.0001 && v6;
    if (v7 || (*(unsigned char *)(v2 + 8) & 1) != 0 || (uint64_t v21 = *(void *)v2, vabdd_f64(*(double *)(v2 + 16), v23) > 0.0001))
    {
      uint64_t result = specialized FromToByActionHandler.evaluateResult(_:)(a1);
      if (v8) {
        return result;
      }
      uint64_t v21 = result;
      specialized ActionEvent.animationState.getter(v18, result);
      uint64_t v9 = v19;
      if (v19)
      {
        uint64_t v10 = v20;
        __swift_project_boxed_opaque_existential_1(v18, v19);
        uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 64);
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIMD2<Float>);
        v11(&v21, v12, v9, v10);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      }
      else
      {
        uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v18, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
      uint64_t v13 = v21;
      if (v7) {
        uint64_t v13 = 0;
      }
      *(void *)uint64_t v2 = v13;
      *(unsigned char *)(v2 + 8) = v7;
    }
    else
    {
      specialized ActionEvent.animationState.getter(v18, result);
      uint64_t v14 = v19;
      if (v19)
      {
        uint64_t v15 = v20;
        __swift_project_boxed_opaque_existential_1(v18, v19);
        uint64_t v16 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v15 + 64);
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SIMD2<Float>);
        v16(&v21, v17, v14, v15);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      }
      else
      {
        uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v18, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
    }
    *(double *)(v2 + 16) = v5;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  double v5;
  BOOL v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned char v18[16];
  double v19;
  char v20;

  uint64_t v2 = v1;
  outlined init with take of Transform?(a1 + 216, (uint64_t)v18, &demangling cache variable for type metadata for Double?);
  uint64_t result = outlined init with take of Transform?((uint64_t)v18, (uint64_t)&v19, &demangling cache variable for type metadata for Double?);
  if ((v20 & 1) == 0)
  {
    double v5 = v19;
    BOOL v6 = fabs(v19 + -1.0) > 0.0001;
    BOOL v7 = v19 > 0.0001 && v6;
    if (v7 || (*(unsigned char *)(v2 + 8) & 1) != 0 || (uint64_t v17 = *(void *)v2, vabdd_f64(*(double *)(v2 + 16), v19) > 0.0001))
    {
      uint64_t result = specialized FromToByActionHandler.evaluateResult(_:)(a1);
      if (v8) {
        return result;
      }
      uint64_t v17 = result;
      specialized ActionEvent.animationState.getter(v14, result);
      uint64_t v9 = v15;
      if (v15)
      {
        uint64_t v10 = v16;
        __swift_project_boxed_opaque_existential_1(v14, v15);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 64))(&v17, MEMORY[0x263F8D538], v9, v10);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      }
      else
      {
        uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v14, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
      uint64_t v11 = v17;
      if (v7) {
        uint64_t v11 = 0;
      }
      *(void *)uint64_t v2 = v11;
      *(unsigned char *)(v2 + 8) = v7;
    }
    else
    {
      specialized ActionEvent.animationState.getter(v14, result);
      uint64_t v12 = v15;
      if (v15)
      {
        uint64_t v13 = v16;
        __swift_project_boxed_opaque_existential_1(v14, v15);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 64))(&v17, MEMORY[0x263F8D538], v12, v13);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      }
      else
      {
        uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v14, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
    }
    *(double *)(v2 + 16) = v5;
  }
  return result;
}

void specialized FromToByActionHandler.actionUpdated(event:)(uint64_t a1)
{
  uint64_t v2 = v1;
  outlined init with take of Transform?(a1 + 264, (uint64_t)v29, &demangling cache variable for type metadata for Double?);
  uint64_t v4 = outlined init with take of Transform?((uint64_t)v29, (uint64_t)&v30, &demangling cache variable for type metadata for Double?);
  if ((v31 & 1) == 0)
  {
    double v6 = v30;
    v5.n128_u64[0] = 0x3F1A36E2EB1C432DLL;
    BOOL v7 = fabs(v30 + -1.0) > 0.0001;
    BOOL v8 = v30 > 0.0001 && v7;
    if (v8 || (v2[2] & 1) != 0 || (uint64_t v9 = v2[1], v27 = *v2, v28 = v9, vabdd_f64(*((double *)v2 + 3), v30) > 0.0001))
    {
      v12.n128_f64[0] = specialized FromToByActionHandler.evaluateResult(_:)(a1);
      if (v13) {
        return;
      }
      uint64_t v27 = v10;
      uint64_t v28 = v11;
      specialized ActionEvent.animationState.getter(v24, v10, v12);
      uint64_t v14 = v25;
      if (v25)
      {
        uint64_t v15 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        uint64_t v16 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v15 + 64);
        type metadata accessor for simd_quatf(0);
        v16(&v27, v17, v14, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {
        outlined destroy of BodyTrackingComponent?((uint64_t)v24, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      if (v8)
      {
        uint64_t v19 = 0;
        uint64_t v18 = 0;
      }
      *uint64_t v2 = v19;
      v2[1] = v18;
      *((unsigned char *)v2 + 16) = v8;
    }
    else
    {
      specialized ActionEvent.animationState.getter(v24, v4, v5);
      uint64_t v20 = v25;
      if (v25)
      {
        uint64_t v21 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        uint64_t v22 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v21 + 64);
        type metadata accessor for simd_quatf(0);
        v22(&v27, v23, v20, v21);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {
        outlined destroy of BodyTrackingComponent?((uint64_t)v24, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
    }
    *((double *)v2 + 3) = v6;
  }
}

uint64_t specialized FromToByActionHandler.actionUpdated(event:)(uint64_t a1, void (*a2)(void *__return_ptr), uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8 = v4;
  outlined init with take of Transform?(a1 + 264, (uint64_t)v32, &demangling cache variable for type metadata for Double?);
  uint64_t result = outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v33, &demangling cache variable for type metadata for Double?);
  if ((v34 & 1) == 0)
  {
    double v11 = v33;
    BOOL v12 = fabs(v33 + -1.0) > 0.0001;
    BOOL v13 = v33 > 0.0001 && v12;
    if (v13
      || (*(unsigned char *)(v8 + 16) & 1) != 0
      || (v14 = *(void *)(v8 + 8), uint64_t v30 = *(void *)v8, v31 = v14, vabdd_f64(*(double *)(v8 + 24), v33) > 0.0001))
    {
      uint64_t result = a4(a1);
      if (v16) {
        return result;
      }
      uint64_t v30 = result;
      uint64_t v31 = v15;
      a2(v27);
      uint64_t v17 = v28;
      if (v28)
      {
        uint64_t v18 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v18 + 64);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(a3);
        v19(&v30, v20, v17, v18);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      else
      {
        uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v27, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
      uint64_t v22 = v30;
      uint64_t v21 = v31;
      if (v13)
      {
        uint64_t v22 = 0;
        uint64_t v21 = 0;
      }
      *(void *)uint64_t v8 = v22;
      *(void *)(v8 + 8) = v21;
      *(unsigned char *)(v8 + 16) = v13;
    }
    else
    {
      ((void (*)(void *__return_ptr, uint64_t))a2)(v27, result);
      uint64_t v23 = v28;
      if (v28)
      {
        uint64_t v24 = v29;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        uint64_t v25 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v24 + 64);
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(a3);
        v25(&v30, v26, v23, v24);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      else
      {
        uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v27, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
    }
    *(double *)(v8 + 24) = v11;
  }
  return result;
}

unint64_t specialized FromToByActionHandler.actionUpdated(event:)(uint64_t a1)
{
  uint64_t v2 = v1;
  outlined init with take of Transform?(a1 + 200, (uint64_t)v17, &demangling cache variable for type metadata for Double?);
  unint64_t result = outlined init with take of Transform?((uint64_t)v17, (uint64_t)&v18, &demangling cache variable for type metadata for Double?);
  if ((v19 & 1) == 0)
  {
    double v5 = v18;
    BOOL v6 = fabs(v18 + -1.0) > 0.0001;
    BOOL v7 = v18 > 0.0001 && v6;
    if (v7 || (v2[1] & 1) != 0 || (int v16 = *v2, vabdd_f64(*((double *)v2 + 1), v18) > 0.0001))
    {
      unint64_t result = specialized FromToByActionHandler.evaluateResult(_:)(a1);
      if ((result & 0x100000000) != 0) {
        return result;
      }
      int v16 = result;
      specialized ActionEvent.animationState.getter(v13, result);
      uint64_t v8 = v14;
      if (v14)
      {
        uint64_t v9 = v15;
        __swift_project_boxed_opaque_existential_1(v13, v14);
        (*(void (**)(int *, void, uint64_t, uint64_t))(v9 + 64))(&v16, MEMORY[0x263F8D5C8], v8, v9);
        unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      }
      else
      {
        unint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v13, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
      int v10 = v16;
      if (v7) {
        int v10 = 0;
      }
      *uint64_t v2 = v10;
      *((unsigned char *)v2 + 4) = v7;
    }
    else
    {
      specialized ActionEvent.animationState.getter(v13, result);
      uint64_t v11 = v14;
      if (v14)
      {
        uint64_t v12 = v15;
        __swift_project_boxed_opaque_existential_1(v13, v14);
        (*(void (**)(int *, void, uint64_t, uint64_t))(v12 + 64))(&v16, MEMORY[0x263F8D5C8], v11, v12);
        unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      }
      else
      {
        unint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v13, &demangling cache variable for type metadata for AnimationStateProtocol?);
      }
    }
    *((double *)v2 + 1) = v5;
  }
  return result;
}

uint64_t specialized FromToByActionHandler.evaluateResult(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  outlined init with take of Transform?(a1 + 200, (uint64_t)v35, &demangling cache variable for type metadata for Double?);
  uint64_t result = outlined init with take of Transform?((uint64_t)v35, (uint64_t)&v36, &demangling cache variable for type metadata for Double?);
  if (v37) {
    goto LABEL_16;
  }
  double v7 = v36;
  specialized ActionEvent.animationState.getter(v29, result);
  uint64_t v8 = v30;
  if (v30)
  {
    v27[2] = a2;
    uint64_t v28 = a3;
    uint64_t v9 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    int v10 = *(void (**)(uint64_t, uint64_t))(v9 + 24);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v12 = type metadata accessor for Optional();
    v27[1] = v27;
    uint64_t v13 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v15 = (char *)v27 - v14;
    v10(v8, v9);
    uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      *(void *)char v34 = 0;
      long long v32 = 0u;
      long long v33 = 0u;
    }
    else
    {
      *((void *)&v33 + 1) = AssociatedTypeWitness;
      *(void *)char v34 = swift_getAssociatedConformanceWitness();
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v32);
      (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v15, AssociatedTypeWitness);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    a3 = v28;
  }
  else
  {
    outlined destroy of BodyTrackingComponent?((uint64_t)v29, &demangling cache variable for type metadata for AnimationStateProtocol?);
    long long v32 = 0u;
    long long v33 = 0u;
    *(void *)char v34 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnimatableData?);
  uint64_t result = swift_dynamicCast();
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v18 = v29[0];
  if (!v29[0]) {
    goto LABEL_16;
  }
  specialized FromToByActionHandler.getStartEnd(event:base:)((void *)a1, v29[0], (uint64_t *)&v32);
  uint64_t v19 = v32;
  if (!(void)v32)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_16:
    *a3 = 0;
    return result;
  }
  uint64_t v20 = *((void *)&v32 + 1);
  long long v21 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)char v34 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v34[16] = v21;
  *(_OWORD *)&v34[25] = *(_OWORD *)(a1 + 73);
  long long v22 = *(_OWORD *)(a1 + 32);
  long long v32 = *(_OWORD *)(a1 + 16);
  long long v33 = v22;
  char v23 = *(unsigned char *)(a1 + 89);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v34;
  *(uint64_t *)((char *)&v29[1] + 5) = *(void *)&v34[13];
  float v24 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (*(void *)(AnimationTimingFunction.coreEasingFunction.getter() + 16))
  {
    REEasingFunctionEvaluateEx();
    float v24 = v25;
  }
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVy17RealityFoundation17BlendShapeWeightsVAJG_Sfs5NeverOTB504_s17f12Foundation17hiJ62V27__rk_animationInterpolation7towards1tA2C_SdtFS2f_Sft_tXEfU_SfTf1cn_n(v19, v20, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23)
  {
    specialized AnimatableData.__rk_invertAndCombineForAnimation(with:)(v26, v18, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
    *a3 = v26;
  }
  return result;
}

{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  float32x4_t *v17;
  unint64_t v18;
  unint64_t v19;
  long long v20;
  long long v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void v26[2];
  uint64_t *v27;
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;
  long long v31;
  long long v32;
  unsigned char v33[41];
  unsigned char v34[16];
  uint64_t v35;
  char v36;

  outlined init with take of Transform?(a1 + 200, (uint64_t)v34, &demangling cache variable for type metadata for Double?);
  uint64_t result = outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v35, &demangling cache variable for type metadata for Double?);
  if (v36) {
    goto LABEL_16;
  }
  specialized ActionEvent.animationState.getter(v28, result);
  double v7 = v29;
  if (v29)
  {
    v26[1] = a2;
    uint64_t v27 = a3;
    uint64_t v8 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 24);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v11 = type metadata accessor for Optional();
    v26[0] = v26;
    uint64_t v12 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v11);
    uint64_t v14 = (char *)v26 - v13;
    v9(v7, v8);
    uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      *(void *)long long v33 = 0;
      uint64_t v31 = 0u;
      long long v32 = 0u;
    }
    else
    {
      *((void *)&v32 + 1) = AssociatedTypeWitness;
      *(void *)long long v33 = swift_getAssociatedConformanceWitness();
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
      (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(boxed_opaque_existential_1, v14, AssociatedTypeWitness);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    a3 = v27;
  }
  else
  {
    outlined destroy of BodyTrackingComponent?((uint64_t)v28, &demangling cache variable for type metadata for AnimationStateProtocol?);
    uint64_t v31 = 0u;
    long long v32 = 0u;
    *(void *)long long v33 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnimatableData?);
  uint64_t result = swift_dynamicCast();
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v17 = (float32x4_t *)v28[0];
  if (!v28[0]) {
    goto LABEL_16;
  }
  specialized FromToByActionHandler.getStartEnd(event:base:)((void *)a1, v28[0], (uint64_t *)&v31);
  uint64_t v18 = v31;
  if (!(void)v31)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_16:
    *a3 = 0;
    return result;
  }
  uint64_t v19 = *((void *)&v31 + 1);
  uint64_t v20 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)long long v33 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v33[16] = v20;
  *(_OWORD *)&v33[25] = *(_OWORD *)(a1 + 73);
  long long v21 = *(_OWORD *)(a1 + 32);
  uint64_t v31 = *(_OWORD *)(a1 + 16);
  long long v32 = v21;
  long long v22 = *(unsigned char *)(a1 + 89);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v33;
  *(uint64_t *)((char *)&v28[1] + 5) = *(void *)&v33[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (*(void *)(AnimationTimingFunction.coreEasingFunction.getter() + 16)) {
    REEasingFunctionEvaluateEx();
  }
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v23 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVy17RealityFoundation15JointTransformsVAJG_0F3Kit9TransformVs5NeverOTB504_s17f12Foundation15hi55V27__rk_animationInterpolation7towards1tA2C_SdtF0A3Kit9K14VAI_AIt_tXEfU_SfTf1cn_n(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  specialized JointTransforms.init<A>(_:)(v23, v28);
  if (v22)
  {
    float v24 = v28[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    float v25 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVy17RealityFoundation15JointTransformsVAJG_So5RESRTas5NeverOTB504_s17f12Foundation15hI84V33__rk_invertAndCombineForAnimation4withA2C_tFSo5RESRTa0A3Kit9TransformV_AJt_tXEfU_Tf1cn_n(v17, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *a3 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
    *a3 = v28[0];
  }
  return result;
}

uint64_t specialized FromToByActionHandler.getStartEnd(event:base:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  if (a1[2])
  {
    uint64_t v7 = a1[2];
  }
  else if (v5)
  {
    uint64_t v7 = a2;
    if (v6)
    {
      int64_t v9 = *(void *)(v6 + 16);
      if (v9)
      {
        uint64_t v16 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v9, 0);
        uint64_t v10 = v16;
        uint64_t v11 = (float *)(v6 + 32);
        unint64_t v12 = *(void *)(v16 + 16);
        do
        {
          float v13 = *v11;
          unint64_t v14 = *(void *)(v16 + 24);
          if (v12 >= v14 >> 1) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v12 + 1, 1);
          }
          *(void *)(v16 + 16) = v12 + 1;
          *(float *)(v16 + 4 * v12 + 32) = -v13;
          ++v11;
          ++v12;
          --v9;
        }
        while (v9);
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v10 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVy17RealityFoundation17BlendShapeWeightsVAJG_Sfs5NeverOTB504_s17f12Foundation17hiJ52V24__rk_combineForAnimation4withA2C_tFS2f_Sft_tXEfU_Tf1cn_n(v5, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t result = swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v3;
  }
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v3 = v5;
    goto LABEL_20;
  }
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v3 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVy17RealityFoundation17BlendShapeWeightsVAJG_Sfs5NeverOTB504_s17f12Foundation17hiJ52V24__rk_combineForAnimation4withA2C_tFS2f_Sft_tXEfU_Tf1cn_n(v15, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
LABEL_20:
  *a3 = v7;
  a3[1] = v3;
  return result;
}

{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  long long v12;
  long long v13;
  long long v14;
  long long v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  unint64_t v20;
  void *v21;
  long long *v22;
  unint64_t v23;
  unint64_t v24;
  _OWORD *v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  int v31;
  long long v32;
  int v33;
  uint64_t v34;

  uint64_t v3 = a2;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  if (a1[2])
  {
    uint64_t v7 = a1[2];
    goto LABEL_3;
  }
  if (v5)
  {
    uint64_t v7 = a2;
    if (v6)
    {
      int64_t v9 = *(void *)(v6 + 16);
      if (v9)
      {
        char v34 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v9, 0);
        uint64_t v10 = v34;
        if (one-time initialization token for identity != -1) {
          swift_once();
        }
        uint64_t v11 = v6 + 64;
        do
        {
          RESRTInverse();
          uint64_t v15 = v12;
          uint64_t v17 = *(void *)(v34 + 16);
          uint64_t v16 = *(void *)(v34 + 24);
          uint64_t v18 = v17 + 1;
          if (v17 >= v16 >> 1)
          {
            uint64_t v27 = v14;
            uint64_t v28 = v12;
            uint64_t v26 = v13;
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
            float v13 = v26;
            unint64_t v14 = v27;
            uint64_t v15 = v28;
          }
          HIDWORD(v15) = v31;
          HIDWORD(v14) = v33;
          *(void *)(v34 + 16) = v18;
          uint64_t v19 = (_OWORD *)(v34 + 48 * v17);
          void v19[2] = v15;
          void v19[3] = v13;
          v19[4] = v14;
          v11 += 48;
          --v9;
        }
        while (v9);
      }
      else
      {
        uint64_t v10 = MEMORY[0x263F8EE78];
        uint64_t v18 = *(void *)(MEMORY[0x263F8EE78] + 16);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        long long v21 = (void *)v10;
        if (!v18)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v7 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVy17RealityFoundation15JointTransformsVAJG_So5RESRTas5NeverOTB504_s17f12Foundation15hI75V24__rk_combineForAnimation4withA2C_tFSo5RESRTa0A3Kit9TransformV_AJt_tXEfU_Tf1cn_n(v5, (uint64_t)v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t result = swift_bridgeObjectRelease_n();
          goto LABEL_27;
        }
      }
      long long v22 = (long long *)(v10 + 64);
      long long v21 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v30 = *(v22 - 1);
        long long v32 = *(v22 - 2);
        uint64_t v29 = *v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v21 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v21[2] + 1, 1, v21);
        }
        float v24 = v21[2];
        char v23 = v21[3];
        if (v24 >= v23 >> 1) {
          long long v21 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v23 > 1), v24 + 1, 1, v21);
        }
        void v21[2] = v24 + 1;
        float v25 = &v21[6 * v24];
        v25[2] = v32;
        v25[3] = v30;
        void v25[4] = v29;
        v22 += 3;
        --v18;
      }
      while (v18);
      goto LABEL_26;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v3;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_27:
    uint64_t v3 = v5;
    goto LABEL_28;
  }
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v3 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs12Zip2SequenceVy17RealityFoundation15JointTransformsVAJG_So5RESRTas5NeverOTB504_s17f12Foundation15hI75V24__rk_combineForAnimation4withA2C_tFSo5RESRTa0A3Kit9TransformV_AJt_tXEfU_Tf1cn_n(v20, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
LABEL_28:
  *a3 = v7;
  a3[1] = v3;
  return result;
}

uint64_t specialized ActionEventData.parameter<A>(type:)(uint64_t *a1)
{
  outlined init with take of Transform?(v1, (uint64_t)v20, &demangling cache variable for type metadata for Int?);
  outlined init with take of Transform?((uint64_t)v20, (uint64_t)&v21, &demangling cache variable for type metadata for Int?);
  if (v22) {
    return 1;
  }
  outlined init with take of Transform?(v1 + 24, (uint64_t)v19, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v19, (uint64_t)v23, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  if (!v23[0])
  {
    if ((id)RETimelineEventGetSwiftParameter())
    {
      __swift_instantiateConcreteTypeFromMangledName(a1);
      BOOL v3 = swift_dynamicCastClass() == 0;
      swift_unknownObjectRelease();
      return v3;
    }
    return 1;
  }
  uint64_t v16 = v23[2];
  uint64_t v4 = v23[4];
  uint64_t v15 = v23[3];
  uint64_t v5 = v23[5];
  v14[1] = *(void *)(v1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = type metadata accessor for Optional();
  v14[0] = v14;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - v9;
  static EntityAction<>.loadParameter<A>(_:parameterType:eventID:)(v4, 0, v4, (uint64_t)v14 - v9, v15, v5);
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    long long v18 = 0u;
    long long v17 = 0u;
  }
  else
  {
    *((void *)&v18 + 1) = AssociatedTypeWitness;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 32))(boxed_opaque_existential_1, v10, AssociatedTypeWitness);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Any?);
  return swift_dynamicCast() ^ 1;
}

uint64_t specialized ActionEventData.action<A>()@<X0>(uint64_t a1@<X8>)
{
  outlined init with take of Transform?(v1 + 24, (uint64_t)v22, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v22, (uint64_t)v23, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v23[0];
  if (!v23[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<EmphasizeAction>);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        __int16 v15 = *(_WORD *)(v14 + 16);
        char v16 = *(unsigned char *)(v14 + 18);
        uint64_t result = swift_unknownObjectRelease();
        *(_WORD *)a1 = v15;
        *(unsigned char *)(a1 + 2) = v16;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v23[1];
  uint64_t v5 = v23[2];
  uint64_t v6 = v23[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v18 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v18 = 0u;
  }
  else
  {
    *((void *)&v19 + 1) = v3;
    *(void *)&long long v20 = v4;
    *((void *)&v20 + 1) = v5;
    uint64_t v21 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *(unsigned char *)(a1 + 2) = 2;
    *(_WORD *)a1 = 0;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *boxed_opaque_existential_1;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  unsigned char v27[56];
  void v28[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v27, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v27, (uint64_t)v28, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v28[0];
  if (!v28[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<PlayAudioAction>);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        __int16 v15 = *(void *)(v14 + 16);
        char v16 = *(void *)(v14 + 24);
        long long v17 = *(unsigned char *)(v14 + 32);
        long long v19 = *(void *)(v14 + 40);
        long long v18 = *(void *)(v14 + 48);
        long long v20 = *(void *)(v14 + 56);
        uint64_t v21 = *(unsigned char *)(v14 + 64);
        outlined copy of ActionEntityResolution();
        swift_bridgeObjectRetain();
        uint64_t result = swift_unknownObjectRelease();
        *(void *)a1 = v15;
        *(void *)(a1 + 8) = v16;
        *(unsigned char *)(a1 + 16) = v17;
        *(void *)(a1 + 24) = v19;
        *(void *)(a1 + 32) = v18;
        *(void *)(a1 + 40) = v20;
        *(unsigned char *)(a1 + 48) = v21;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v28[1];
  uint64_t v5 = v28[2];
  uint64_t v6 = v28[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v23 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v26 = 0;
    float v24 = 0u;
    float v25 = 0u;
    char v23 = 0u;
  }
  else
  {
    *((void *)&v24 + 1) = v3;
    *(void *)&float v25 = v4;
    *((void *)&v25 + 1) = v5;
    uint64_t v26 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *(unsigned char *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  uint64_t v42;
  unsigned char v43[168];
  unsigned char v44[56];
  void v45[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v44, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v44, (uint64_t)v45, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v45[0];
  if (v45[0])
  {
    uint64_t v4 = v45[1];
    uint64_t v5 = v45[2];
    uint64_t v6 = v45[3];
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = type metadata accessor for Optional();
    *(void *)&uint64_t v38 = &v30;
    uint64_t v9 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)&v30 - v10;
    static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v30 - v10);
    uint64_t v12 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v42 = 0;
      Swift::String v40 = 0u;
      uint64_t v41 = 0u;
      uint64_t v39 = 0u;
    }
    else
    {
      *((void *)&v40 + 1) = v3;
      *(void *)&uint64_t v41 = v4;
      *((void *)&v41 + 1) = v5;
      uint64_t v42 = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
    if (swift_dynamicCast()) {
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v25);
    }
  }
  else if ((id)RETimelineEventGetSwiftConstantData())
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<BillboardAction>);
    float v13 = swift_dynamicCastClass();
    if (v13)
    {
      uint64_t v14 = *(void *)(v13 + 16);
      __int16 v15 = *(void *)(v13 + 24);
      char v16 = *(unsigned char *)(v13 + 32);
      uint64_t v38 = *(_OWORD *)(v13 + 48);
      long long v17 = *(void *)(v13 + 64);
      long long v18 = *(void *)(v13 + 72);
      long long v19 = *(unsigned char *)(v13 + 80);
      long long v20 = *(void *)(v13 + 96);
      uint64_t v21 = *(void *)(v13 + 112);
      char v37 = *(void *)(v13 + 120);
      char v22 = *(_DWORD *)(v13 + 128);
      uint64_t v35 = *(unsigned __int8 *)(v13 + 132);
      double v36 = v22;
      char v23 = *(void *)(v13 + 144);
      float v24 = *(void *)(v13 + 160);
      long long v33 = *(void *)(v13 + 168);
      char v34 = v24;
      LODWORD(v24) = *(_DWORD *)(v13 + 176);
      uint64_t v31 = *(unsigned __int8 *)(v13 + 180);
      long long v32 = v24;
      swift_unknownObjectRelease();
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v15;
      *(unsigned char *)(a1 + 16) = v16;
      *(_OWORD *)(a1 + 32) = v38;
      *(void *)(a1 + 48) = v17;
      *(void *)(a1 + 56) = v18;
      *(unsigned char *)(a1 + 64) = v19;
      *(void *)(a1 + 80) = v20;
      uint64_t v26 = v37;
      *(void *)(a1 + 96) = v21;
      *(void *)(a1 + 104) = v26;
      *(_DWORD *)(a1 + 112) = v36;
      *(unsigned char *)(a1 + 116) = v35;
      *(void *)(a1 + 128) = v23;
      uint64_t v27 = v33;
      *(void *)(a1 + 144) = v34;
      *(void *)(a1 + 152) = v27;
      *(_DWORD *)(a1 + 160) = v32;
      *(unsigned char *)(a1 + 164) = v31;
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v25);
    }
    swift_unknownObjectRelease();
  }
  _s17RealityFoundation15BillboardActionVSgWOi0_((uint64_t)v43);
  return outlined init with take of Transform?((uint64_t)v43, a1, &demangling cache variable for type metadata for BillboardAction?);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  uint64_t *boxed_opaque_existential_1;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  unsigned char v27[56];
  void v28[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v27, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v27, (uint64_t)v28, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v28[0];
  if (!v28[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<SpinAction>);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        __int16 v15 = *(_DWORD *)(v14 + 16);
        char v22 = *(_OWORD *)(v14 + 32);
        char v16 = *(void *)(v14 + 48);
        long long v17 = *(void *)(v14 + 56);
        long long v18 = *(_DWORD *)(v14 + 64);
        long long v19 = *(unsigned char *)(v14 + 68);
        long long v20 = *(unsigned char *)(v14 + 69);
        uint64_t result = swift_unknownObjectRelease();
        *(_DWORD *)a1 = v15;
        *(_OWORD *)(a1 + 16) = v22;
        *(void *)(a1 + 32) = v16;
        *(void *)(a1 + 40) = v17;
        *(_DWORD *)(a1 + 48) = v18;
        *(unsigned char *)(a1 + 52) = v19;
        *(unsigned char *)(a1 + 53) = v20;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v28[1];
  uint64_t v5 = v28[2];
  uint64_t v6 = v28[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v22 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v26 = 0;
    float v24 = 0u;
    float v25 = 0u;
    char v23 = 0u;
  }
  else
  {
    *((void *)&v24 + 1) = v3;
    *(void *)&float v25 = v4;
    *((void *)&v25 + 1) = v5;
    uint64_t v26 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_DWORD *)(a1 + 48) = 0;
    *(_WORD *)(a1 + 52) = 512;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  char v19;
  char v20;
  uint64_t *boxed_opaque_existential_1;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  unsigned char v27[56];
  void v28[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v27, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v27, (uint64_t)v28, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v28[0];
  if (!v28[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<OrbitEntityAction>);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        __int16 v15 = *(void *)(v14 + 16);
        char v16 = *(void *)(v14 + 24);
        long long v17 = *(unsigned char *)(v14 + 32);
        long long v18 = *(_DWORD *)(v14 + 36);
        char v22 = *(_OWORD *)(v14 + 48);
        long long v19 = *(unsigned char *)(v14 + 64);
        long long v20 = *(unsigned char *)(v14 + 65);
        outlined copy of ActionEntityResolution();
        uint64_t result = swift_unknownObjectRelease();
        *(void *)a1 = v15;
        *(void *)(a1 + 8) = v16;
        *(unsigned char *)(a1 + 16) = v17;
        *(_DWORD *)(a1 + 20) = v18;
        *(_OWORD *)(a1 + 32) = v22;
        *(unsigned char *)(a1 + 48) = v19;
        *(unsigned char *)(a1 + 49) = v20;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v28[1];
  uint64_t v5 = v28[2];
  uint64_t v6 = v28[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v22 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v26 = 0;
    float v24 = 0u;
    float v25 = 0u;
    char v23 = 0u;
  }
  else
  {
    *((void *)&v24 + 1) = v3;
    *(void *)&float v25 = v4;
    *((void *)&v25 + 1) = v5;
    uint64_t v26 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 255;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(_WORD *)(a1 + 48) = 0;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *boxed_opaque_existential_1;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  uint64_t v23;
  unsigned char v24[56];
  void v25[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v24, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v24, (uint64_t)v25, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v25[0];
  if (!v25[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<ImpulseAction>);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        __int16 v15 = *(void *)(v14 + 16);
        char v16 = *(void *)(v14 + 24);
        long long v17 = *(unsigned char *)(v14 + 32);
        long long v19 = *(_OWORD *)(v14 + 48);
        outlined copy of ActionEntityResolution();
        uint64_t result = swift_unknownObjectRelease();
        *(void *)a1 = v15;
        *(void *)(a1 + 8) = v16;
        *(unsigned char *)(a1 + 16) = v17;
        *(_OWORD *)(a1 + 32) = v19;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v25[1];
  uint64_t v5 = v25[2];
  uint64_t v6 = v25[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v19 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v23 = 0;
    uint64_t v21 = 0u;
    char v22 = 0u;
    long long v20 = 0u;
  }
  else
  {
    *((void *)&v21 + 1) = v3;
    *(void *)&char v22 = v4;
    *((void *)&v22 + 1) = v5;
    char v23 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 255;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t *boxed_opaque_existential_1;
  long long v20;
  long long v21;
  long long v22;
  uint64_t v23;
  unsigned char v24[56];
  void v25[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v24, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v24, (uint64_t)v25, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v25[0];
  if (!v25[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<SetEntityEnabledAction>);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        __int16 v15 = *(void *)(v14 + 16);
        char v16 = *(void *)(v14 + 24);
        long long v17 = *(unsigned char *)(v14 + 32);
        long long v18 = *(unsigned char *)(v14 + 33);
        outlined copy of ActionEntityResolution();
        uint64_t result = swift_unknownObjectRelease();
        *(void *)a1 = v15;
        *(void *)(a1 + 8) = v16;
        *(unsigned char *)(a1 + 16) = v17;
        *(unsigned char *)(a1 + 17) = v18;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v25[1];
  uint64_t v5 = v25[2];
  uint64_t v6 = v25[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v20 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v23 = 0;
    uint64_t v21 = 0u;
    char v22 = 0u;
    long long v20 = 0u;
  }
  else
  {
    *((void *)&v21 + 1) = v3;
    *(void *)&char v22 = v4;
    *((void *)&v22 + 1) = v5;
    char v23 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(_WORD *)(a1 + 16) = 255;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t *boxed_opaque_existential_1;
  unsigned char v25[12];
  int v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  unsigned char v31[56];
  void v32[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v31, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v31, (uint64_t)v32, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v32[0];
  if (!v32[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<PlayAnimationAction>);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        char v16 = *(void *)(v14 + 16);
        __int16 v15 = *(void *)(v14 + 24);
        long long v17 = *(void *)(v14 + 32);
        long long v18 = *(void *)(v14 + 40);
        long long v19 = *(unsigned char *)(v14 + 48);
        long long v20 = *(unsigned char *)(v14 + 49);
        uint64_t v21 = *(void *)(v14 + 56);
        char v22 = *(void *)(v14 + 64);
        char v23 = *(unsigned char *)(v14 + 72);
        uint64_t v26 = *(unsigned __int8 *)(v14 + 73);
        swift_bridgeObjectRetain();
        outlined copy of ActionEntityResolution();
        uint64_t result = swift_unknownObjectRelease();
        *(void *)a1 = v16;
        *(void *)(a1 + 8) = v15;
        *(void *)(a1 + 16) = v17;
        *(void *)(a1 + 24) = v18;
        *(unsigned char *)(a1 + 32) = v19;
        *(unsigned char *)(a1 + 33) = v20;
        *(void *)(a1 + 40) = v21;
        *(void *)(a1 + 48) = v22;
        *(unsigned char *)(a1 + 56) = v23;
        *(unsigned char *)(a1 + 57) = v26;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v32[1];
  uint64_t v5 = v32[2];
  uint64_t v6 = v32[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v25[-v10];
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v25[-v10]);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v30 = 0;
    uint64_t v28 = 0u;
    uint64_t v29 = 0u;
    uint64_t v27 = 0u;
  }
  else
  {
    *((void *)&v28 + 1) = v3;
    *(void *)&uint64_t v29 = v4;
    *((void *)&v29 + 1) = v5;
    uint64_t v30 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *(_OWORD *)(a1 + 42) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

double specialized ActionEventData.action<A>()@<D0>(uint64_t a1@<X8>)
{
  outlined init with take of Transform?(v1 + 24, (uint64_t)v31, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v31, (uint64_t)v32, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v32[0];
  if (!v32[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<SetEntityPropertyAction<Transform>>);
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        uint64_t v14 = *(void *)(v13 + 16);
        uint64_t v15 = *(void *)(v13 + 24);
        char v16 = *(unsigned char *)(v13 + 32);
        uint64_t v18 = *(void *)(v13 + 40);
        uint64_t v17 = *(void *)(v13 + 48);
        long long v26 = *(_OWORD *)(v13 + 64);
        long long v25 = *(_OWORD *)(v13 + 80);
        uint64_t v19 = *(void *)(v13 + 96);
        uint64_t v20 = *(void *)(v13 + 104);
        char v21 = *(unsigned char *)(v13 + 112);
        outlined copy of ActionEntityResolution();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)a1 = v14;
        *(void *)(a1 + 8) = v15;
        *(unsigned char *)(a1 + 16) = v16;
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v17;
        long long v22 = v25;
        *(_OWORD *)(a1 + 48) = v26;
        *(_OWORD *)(a1 + 64) = v22;
        *(void *)(a1 + 80) = v19;
        *(void *)(a1 + 88) = v20;
        *(unsigned char *)(a1 + 96) = v21;
        return *(double *)&v22;
      }
      swift_unknownObjectRelease();
    }
LABEL_11:
    *(unsigned char *)(a1 + 96) = 0;
    *(void *)&long long v22 = 0;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return *(double *)&v22;
  }
  uint64_t v4 = v32[1];
  uint64_t v5 = v32[2];
  uint64_t v6 = v32[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v25 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v27 = 0u;
  }
  else
  {
    *((void *)&v28 + 1) = v3;
    *(void *)&long long v29 = v4;
    *((void *)&v29 + 1) = v5;
    uint64_t v30 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  return *(double *)&v22;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t *boxed_opaque_existential_1;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  unsigned char v27[56];
  void v28[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v27, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v27, (uint64_t)v28, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v28[0];
  if (!v28[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<SetEntityPropertyAction<String>>);
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        uint64_t v14 = *(void *)(v13 + 16);
        uint64_t v15 = *(void *)(v13 + 24);
        char v16 = *(unsigned char *)(v13 + 32);
        uint64_t v18 = *(void *)(v13 + 40);
        uint64_t v17 = *(void *)(v13 + 48);
        uint64_t v20 = *(void *)(v13 + 56);
        uint64_t v19 = *(void *)(v13 + 64);
        outlined copy of ActionEntityResolution();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)a1 = v14;
        *(void *)(a1 + 8) = v15;
        *(unsigned char *)(a1 + 16) = v16;
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v17;
        *(void *)(a1 + 40) = v20;
        *(void *)(a1 + 48) = v19;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v28[1];
  uint64_t v5 = v28[2];
  uint64_t v6 = v28[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v23 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    long long v26 = 0;
    float v24 = 0u;
    long long v25 = 0u;
    char v23 = 0u;
  }
  else
  {
    *((void *)&v24 + 1) = v3;
    *(void *)&long long v25 = v4;
    *((void *)&v25 + 1) = v5;
    long long v26 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    *(void *)(a1 + 48) = 0;
    uint64_t result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  double result;
  uint64_t *boxed_opaque_existential_1;
  long long v22;
  long long v23;
  long long v24;
  uint64_t v25;
  unsigned char v26[56];
  void v27[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v26, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v26, (uint64_t)v27, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v27[0];
  if (!v27[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<SetEntityPropertyAction<Bool>>);
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        uint64_t v14 = *(void *)(v13 + 16);
        uint64_t v15 = *(void *)(v13 + 24);
        char v16 = *(unsigned char *)(v13 + 32);
        uint64_t v18 = *(void *)(v13 + 40);
        uint64_t v17 = *(void *)(v13 + 48);
        uint64_t v19 = *(unsigned char *)(v13 + 56);
        outlined copy of ActionEntityResolution();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)a1 = v14;
        *(void *)(a1 + 8) = v15;
        *(unsigned char *)(a1 + 16) = v16;
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v17;
        *(unsigned char *)(a1 + 40) = v19;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v27[1];
  uint64_t v5 = v27[2];
  uint64_t v6 = v27[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v22 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    long long v25 = 0;
    char v23 = 0u;
    float v24 = 0u;
    long long v22 = 0u;
  }
  else
  {
    *((void *)&v23 + 1) = v3;
    *(void *)&float v24 = v4;
    *((void *)&v24 + 1) = v5;
    long long v25 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    uint64_t result = 0.0;
    *(_OWORD *)(a1 + 25) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  double result;
  uint64_t *boxed_opaque_existential_1;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  unsigned char v27[56];
  void v28[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v27, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v27, (uint64_t)v28, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v28[0];
  if (!v28[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<SetEntityPropertyAction<Float>>);
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        uint64_t v14 = *(void *)(v13 + 16);
        uint64_t v15 = *(void *)(v13 + 24);
        char v16 = *(unsigned char *)(v13 + 32);
        uint64_t v18 = *(void *)(v13 + 40);
        uint64_t v17 = *(void *)(v13 + 48);
        uint64_t v19 = *(_DWORD *)(v13 + 56);
        uint64_t v20 = *(unsigned char *)(v13 + 60);
        outlined copy of ActionEntityResolution();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)a1 = v14;
        *(void *)(a1 + 8) = v15;
        *(unsigned char *)(a1 + 16) = v16;
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v17;
        *(_DWORD *)(a1 + 40) = v19;
        *(unsigned char *)(a1 + 44) = v20;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v28[1];
  uint64_t v5 = v28[2];
  uint64_t v6 = v28[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v23 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    long long v26 = 0;
    float v24 = 0u;
    long long v25 = 0u;
    char v23 = 0u;
  }
  else
  {
    *((void *)&v24 + 1) = v3;
    *(void *)&long long v25 = v4;
    *((void *)&v25 + 1) = v5;
    long long v26 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    uint64_t result = 0.0;
    *(_OWORD *)(a1 + 29) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  int v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  long long v36;
  long long v37;
  long long v38;
  uint64_t v39;
  unsigned char v40[56];
  void v41[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v40, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v40, (uint64_t)v41, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v41[0];
  if (!v41[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<FromToByAction<Float>>);
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        uint64_t v14 = *(_DWORD *)(v13 + 16);
        uint64_t v15 = *(unsigned char *)(v13 + 20);
        char v16 = *(_DWORD *)(v13 + 24);
        uint64_t v17 = *(unsigned char *)(v13 + 28);
        uint64_t v18 = *(_DWORD *)(v13 + 32);
        uint64_t v31 = *(unsigned __int8 *)(v13 + 36);
        uint64_t v30 = *(void *)(v13 + 48);
        long long v29 = *(void *)(v13 + 56);
        long long v28 = *(_DWORD *)(v13 + 64);
        long long v27 = *(unsigned __int8 *)(v13 + 68);
        uint64_t v19 = *(void *)(v13 + 72);
        uint64_t v20 = *(void *)(v13 + 80);
        uint64_t v35 = *(unsigned __int8 *)(v13 + 89);
        char v34 = *(unsigned __int8 *)(v13 + 90);
        long long v33 = *(void *)(v13 + 96);
        long long v32 = *(void *)(v13 + 104);
        char v21 = *(unsigned char *)(v13 + 88);
        outlined copy of FromToByAction<A>.TransformMode<A>(v19, v20, v21);
        swift_unknownObjectRelease();
        *(_DWORD *)a1 = v14;
        *(unsigned char *)(a1 + 4) = v15;
        *(_DWORD *)(a1 + 8) = v16;
        *(unsigned char *)(a1 + 12) = v17;
        *(_DWORD *)(a1 + 16) = v18;
        *(unsigned char *)(a1 + 20) = v31;
        char v23 = v29;
        *(void *)(a1 + 32) = v30;
        *(void *)(a1 + 40) = v23;
        *(_DWORD *)(a1 + 48) = v28;
        *(unsigned char *)(a1 + 52) = v27;
        *(void *)(a1 + 56) = v19;
        *(void *)(a1 + 64) = v20;
        *(unsigned char *)(a1 + 72) = v21;
        *(unsigned char *)(a1 + 73) = v35;
        *(unsigned char *)(a1 + 74) = v34;
        float v24 = v32;
        *(void *)(a1 + 80) = v33;
        *(void *)(a1 + 88) = v24;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v41[1];
  uint64_t v5 = v41[2];
  uint64_t v6 = v41[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v26 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v39 = 0;
    char v37 = 0u;
    uint64_t v38 = 0u;
    double v36 = 0u;
  }
  else
  {
    *((void *)&v37 + 1) = v3;
    *(void *)&uint64_t v38 = v4;
    *((void *)&v38 + 1) = v5;
    uint64_t v39 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    uint64_t result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = xmmword_22830EC70;
  }
  return result;
}

double specialized ActionEventData.action<A>()@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with take of Transform?(v3 + 24, (uint64_t)v34, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v34, (uint64_t)v35, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v7 = v35[0];
  if (!v35[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(a1);
      uint64_t v17 = swift_dynamicCastClass();
      if (v17)
      {
        uint64_t v18 = *(void *)(v17 + 16);
        uint64_t v19 = *(void *)(v17 + 24);
        char v20 = *(unsigned char *)(v17 + 32);
        uint64_t v22 = *(void *)(v17 + 40);
        uint64_t v21 = *(void *)(v17 + 48);
        uint64_t v23 = *(void *)(v17 + 64);
        uint64_t v24 = *(void *)(v17 + 72);
        char v25 = *(unsigned char *)(v17 + 80);
        outlined copy of ActionEntityResolution();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = v19;
        *(unsigned char *)(a3 + 16) = v20;
        *(void *)(a3 + 24) = v22;
        *(void *)(a3 + 32) = v21;
        *(void *)(a3 + 48) = v23;
        *(void *)(a3 + 56) = v24;
        *(unsigned char *)(a3 + 64) = v25;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  long long v29 = a2;
  uint64_t v8 = v35[1];
  uint64_t v9 = v35[2];
  uint64_t v10 = v35[3];
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = type metadata accessor for Optional();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v28 - v14;
  static EntityAction<>.load(_:)(v11, v7, v9, (uint64_t)&v28 - v14);
  uint64_t v16 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v30 = 0u;
  }
  else
  {
    *((void *)&v31 + 1) = v7;
    *(void *)&long long v32 = v8;
    *((void *)&v32 + 1) = v9;
    uint64_t v33 = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v15, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(v29);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    *(unsigned char *)(a3 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27;
  uint64_t *v28;
  long long v29;
  long long v30;
  long long v31;
  uint64_t v32;
  unsigned char v33[56];
  void v34[8];

  outlined init with take of Transform?(v3 + 24, (uint64_t)v33, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v33, (uint64_t)v34, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v7 = v34[0];
  if (!v34[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(a1);
      uint64_t v17 = swift_dynamicCastClass();
      if (v17)
      {
        uint64_t v18 = *(void *)(v17 + 16);
        uint64_t v19 = *(void *)(v17 + 24);
        char v20 = *(unsigned char *)(v17 + 32);
        uint64_t v22 = *(void *)(v17 + 40);
        uint64_t v21 = *(void *)(v17 + 48);
        uint64_t v23 = *(void *)(v17 + 56);
        uint64_t v24 = *(unsigned char *)(v17 + 64);
        outlined copy of ActionEntityResolution();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = v19;
        *(unsigned char *)(a3 + 16) = v20;
        *(void *)(a3 + 24) = v22;
        *(void *)(a3 + 32) = v21;
        *(void *)(a3 + 40) = v23;
        *(unsigned char *)(a3 + 48) = v24;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v28 = a2;
  uint64_t v8 = v34[1];
  uint64_t v9 = v34[2];
  uint64_t v10 = v34[3];
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = type metadata accessor for Optional();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v27 - v14;
  static EntityAction<>.load(_:)(v11, v7, v9, (uint64_t)&v27 - v14);
  uint64_t v16 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    long long v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v29 = 0u;
  }
  else
  {
    *((void *)&v30 + 1) = v7;
    *(void *)&long long v31 = v8;
    *((void *)&v31 + 1) = v9;
    long long v32 = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v29);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v15, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(v28);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    *(unsigned char *)(a3 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  double result;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t *v35;
  long long v36;
  long long v37;
  long long v38;
  uint64_t v39;
  unsigned char v40[56];
  void v41[8];

  outlined init with take of Transform?(v3 + 24, (uint64_t)v40, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v40, (uint64_t)v41, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v7 = v41[0];
  if (!v41[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(a1);
      uint64_t v17 = swift_dynamicCastClass();
      if (v17)
      {
        uint64_t v18 = *(void *)(v17 + 16);
        uint64_t v19 = *(void *)(v17 + 24);
        char v20 = *(void *)(v17 + 32);
        uint64_t v21 = *(void *)(v17 + 48);
        uint64_t v22 = *(void *)(v17 + 56);
        long long v31 = *(_DWORD *)(v17 + 64);
        long long v30 = *(unsigned __int8 *)(v17 + 68);
        uint64_t v23 = *(void *)(v17 + 72);
        uint64_t v24 = *(void *)(v17 + 80);
        LODWORD(v35) = *(unsigned __int8 *)(v17 + 89);
        char v34 = *(unsigned __int8 *)(v17 + 90);
        uint64_t v33 = *(void *)(v17 + 96);
        long long v32 = *(void *)(v17 + 104);
        char v25 = *(unsigned char *)(v17 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined copy of FromToByAction<A>.TransformMode<A>(v23, v24, v25);
        swift_unknownObjectRelease();
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = v19;
        *(void *)(a3 + 16) = v20;
        *(void *)(a3 + 32) = v21;
        *(void *)(a3 + 40) = v22;
        *(_DWORD *)(a3 + 48) = v31;
        *(unsigned char *)(a3 + 52) = v30;
        *(void *)(a3 + 56) = v23;
        *(void *)(a3 + 64) = v24;
        *(unsigned char *)(a3 + 72) = v25;
        *(unsigned char *)(a3 + 73) = (_BYTE)v35;
        *(unsigned char *)(a3 + 74) = v34;
        long long v27 = v32;
        *(void *)(a3 + 80) = v33;
        *(void *)(a3 + 88) = v27;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v35 = a2;
  uint64_t v8 = v41[1];
  uint64_t v9 = v41[2];
  uint64_t v10 = v41[3];
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = type metadata accessor for Optional();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - v14;
  static EntityAction<>.load(_:)(v11, v7, v9, (uint64_t)&v29 - v14);
  uint64_t v16 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v39 = 0;
    char v37 = 0u;
    uint64_t v38 = 0u;
    double v36 = 0u;
  }
  else
  {
    *((void *)&v37 + 1) = v7;
    *(void *)&uint64_t v38 = v8;
    *((void *)&v38 + 1) = v9;
    uint64_t v39 = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v15, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(v35);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    *(void *)a3 = 1;
    double result = 0.0;
    *(_OWORD *)(a3 + 8) = 0u;
    *(_OWORD *)(a3 + 24) = 0u;
    *(_OWORD *)(a3 + 40) = 0u;
    *(_OWORD *)(a3 + 56) = 0u;
    *(_OWORD *)(a3 + 72) = 0u;
    *(void *)(a3 + 88) = 0;
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *boxed_opaque_existential_1;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  long long v39;
  long long v40;
  long long v41;
  uint64_t v42;
  unsigned char v43[56];
  void v44[8];

  outlined init with take of Transform?(v3 + 24, (uint64_t)v43, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v43, (uint64_t)v44, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v7 = v44[0];
  if (!v44[0])
  {
    if ((id)RETimelineEventGetSwiftConstantData())
    {
      __swift_instantiateConcreteTypeFromMangledName(a1);
      uint64_t v17 = swift_dynamicCastClass();
      if (v17)
      {
        uint64_t v18 = *(void *)(v17 + 16);
        uint64_t v19 = *(unsigned char *)(v17 + 24);
        char v20 = *(void *)(v17 + 32);
        uint64_t v21 = *(unsigned char *)(v17 + 40);
        uint64_t v22 = *(void *)(v17 + 48);
        char v34 = *(unsigned __int8 *)(v17 + 56);
        uint64_t v33 = *(void *)(v17 + 64);
        long long v32 = *(void *)(v17 + 72);
        long long v31 = *(_DWORD *)(v17 + 80);
        long long v30 = *(unsigned __int8 *)(v17 + 84);
        uint64_t v23 = *(void *)(v17 + 88);
        uint64_t v24 = *(void *)(v17 + 96);
        LODWORD(v38) = *(unsigned __int8 *)(v17 + 105);
        char v37 = *(unsigned __int8 *)(v17 + 106);
        double v36 = *(void *)(v17 + 112);
        uint64_t v35 = *(void *)(v17 + 120);
        char v25 = *(unsigned char *)(v17 + 104);
        outlined copy of FromToByAction<A>.TransformMode<A>(v23, v24, v25);
        swift_unknownObjectRelease();
        *(void *)a3 = v18;
        *(unsigned char *)(a3 + 8) = v19;
        *(void *)(a3 + 16) = v20;
        *(unsigned char *)(a3 + 24) = v21;
        *(void *)(a3 + 32) = v22;
        *(unsigned char *)(a3 + 40) = v34;
        long long v27 = v32;
        *(void *)(a3 + 48) = v33;
        *(void *)(a3 + 56) = v27;
        *(_DWORD *)(a3 + 64) = v31;
        *(unsigned char *)(a3 + 68) = v30;
        *(void *)(a3 + 72) = v23;
        *(void *)(a3 + 80) = v24;
        *(unsigned char *)(a3 + 88) = v25;
        *(unsigned char *)(a3 + 89) = (_BYTE)v38;
        *(unsigned char *)(a3 + 90) = v37;
        uint64_t v28 = v35;
        *(void *)(a3 + 96) = v36;
        *(void *)(a3 + 104) = v28;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v38 = a2;
  uint64_t v8 = v44[1];
  uint64_t v9 = v44[2];
  uint64_t v10 = v44[3];
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = type metadata accessor for Optional();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - v14;
  static EntityAction<>.load(_:)(v11, v7, v9, (uint64_t)&v30 - v14);
  uint64_t v16 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v42 = 0;
    Swift::String v40 = 0u;
    uint64_t v41 = 0u;
    uint64_t v39 = 0u;
  }
  else
  {
    *((void *)&v40 + 1) = v7;
    *(void *)&uint64_t v41 = v8;
    *((void *)&v41 + 1) = v9;
    uint64_t v42 = v10;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v15, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  __swift_instantiateConcreteTypeFromMangledName(v38);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(void *)&double result = 1;
    *(_OWORD *)(a3 + 96) = xmmword_22830EC70;
  }
  return result;
}

uint64_t specialized ActionEventData.action<A>()@<X0>(_OWORD *a1@<X8>)
{
  outlined init with take of Transform?(v1 + 24, (uint64_t)v54, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v54, (uint64_t)v55, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v55[0];
  if (v55[0])
  {
    uint64_t v4 = v55[1];
    uint64_t v5 = v55[2];
    uint64_t v6 = v55[3];
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = type metadata accessor for Optional();
    v33[1] = v33;
    uint64_t v9 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)v33 - v10;
    static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)v33 - v10);
    uint64_t v12 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v37 = 0;
      long long v35 = 0u;
      long long v36 = 0u;
      long long v34 = 0u;
    }
    else
    {
      *((void *)&v35 + 1) = v3;
      *(void *)&long long v36 = v4;
      *((void *)&v36 + 1) = v5;
      uint64_t v37 = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>);
    if (swift_dynamicCast()) {
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v22);
    }
  }
  else if ((id)RETimelineEventGetSwiftConstantData())
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<FromToByAction<Transform>>);
    uint64_t v13 = (_OWORD *)swift_dynamicCastClass();
    if (v13)
    {
      long long v14 = v13[14];
      long long v50 = v13[13];
      long long v51 = v14;
      long long v15 = v13[16];
      long long v52 = v13[15];
      long long v53 = v15;
      long long v16 = v13[10];
      long long v46 = v13[9];
      long long v47 = v16;
      long long v17 = v13[12];
      long long v48 = v13[11];
      long long v49 = v17;
      long long v18 = v13[6];
      long long v42 = v13[5];
      long long v43 = v18;
      long long v19 = v13[8];
      long long v44 = v13[7];
      long long v45 = v19;
      long long v20 = v13[2];
      long long v38 = v13[1];
      long long v39 = v20;
      long long v21 = v13[4];
      long long v40 = v13[3];
      long long v41 = v21;
      outlined retain of FromToByAction<Transform>((uint64_t)&v38);
      swift_unknownObjectRelease();
      long long v23 = v51;
      a1[12] = v50;
      a1[13] = v23;
      long long v24 = v53;
      a1[14] = v52;
      a1[15] = v24;
      long long v25 = v47;
      a1[8] = v46;
      a1[9] = v25;
      long long v26 = v49;
      a1[10] = v48;
      a1[11] = v26;
      long long v27 = v43;
      a1[4] = v42;
      a1[5] = v27;
      long long v28 = v45;
      a1[6] = v44;
      a1[7] = v28;
      long long v29 = v39;
      *a1 = v38;
      a1[1] = v29;
      long long v30 = v41;
      a1[2] = v40;
      a1[3] = v30;
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v22);
    }
    swift_unknownObjectRelease();
  }
  _s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOi0_(&v38);
  return outlined init with take of Transform?((uint64_t)&v38, (uint64_t)a1, &demangling cache variable for type metadata for FromToByAction<Transform>?);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _OWORD *v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  uint64_t v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  uint64_t *boxed_opaque_existential_1;
  void v27[2];
  long long v28;
  long long v29;
  long long v30;
  uint64_t v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  unsigned char v42[56];
  void v43[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v42, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v42, (uint64_t)v43, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v43[0];
  if (v43[0])
  {
    uint64_t v4 = v43[1];
    uint64_t v5 = v43[2];
    uint64_t v6 = v43[3];
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = type metadata accessor for Optional();
    v27[1] = v27;
    uint64_t v9 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)v27 - v10;
    static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)v27 - v10);
    uint64_t v12 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      long long v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      long long v28 = 0u;
    }
    else
    {
      *((void *)&v29 + 1) = v3;
      *(void *)&long long v30 = v4;
      *((void *)&v30 + 1) = v5;
      long long v31 = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>);
    if (swift_dynamicCast()) {
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v19);
    }
  }
  else if ((id)RETimelineEventGetSwiftConstantData())
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<FromToByAction<simd_quatf>>);
    uint64_t v13 = (_OWORD *)swift_dynamicCastClass();
    if (v13)
    {
      long long v14 = v13[8];
      long long v38 = v13[7];
      long long v39 = v14;
      long long v15 = v13[10];
      long long v40 = v13[9];
      long long v41 = v15;
      long long v16 = v13[4];
      long long v34 = v13[3];
      long long v35 = v16;
      long long v17 = v13[6];
      long long v36 = v13[5];
      uint64_t v37 = v17;
      long long v18 = v13[2];
      long long v32 = v13[1];
      uint64_t v33 = v18;
      outlined retain of FromToByAction<simd_quatf>((uint64_t)&v32);
      swift_unknownObjectRelease();
      long long v20 = v39;
      a1[6] = v38;
      a1[7] = v20;
      long long v21 = v41;
      a1[8] = v40;
      a1[9] = v21;
      uint64_t v22 = v35;
      a1[2] = v34;
      a1[3] = v22;
      long long v23 = v37;
      a1[4] = v36;
      a1[5] = v23;
      long long v24 = v33;
      *a1 = v32;
      a1[1] = v24;
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v19);
    }
    swift_unknownObjectRelease();
  }
  _s17RealityFoundation14FromToByActionVySo10simd_quatfaGSgWOi0_(&v32);
  return outlined init with take of Transform?((uint64_t)&v32, (uint64_t)a1, &demangling cache variable for type metadata for FromToByAction<simd_quatf>?);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _OWORD *v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  uint64_t v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  uint64_t *boxed_opaque_existential_1;
  void v27[2];
  long long v28;
  long long v29;
  long long v30;
  uint64_t v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  unsigned char v42[56];
  void v43[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v42, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v42, (uint64_t)v43, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v43[0];
  if (v43[0])
  {
    uint64_t v4 = v43[1];
    uint64_t v5 = v43[2];
    uint64_t v6 = v43[3];
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = type metadata accessor for Optional();
    v27[1] = v27;
    uint64_t v9 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)v27 - v10;
    static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)v27 - v10);
    uint64_t v12 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      long long v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      long long v28 = 0u;
    }
    else
    {
      *((void *)&v29 + 1) = v3;
      *(void *)&long long v30 = v4;
      *((void *)&v30 + 1) = v5;
      long long v31 = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
    if (swift_dynamicCast()) {
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v19);
    }
  }
  else if ((id)RETimelineEventGetSwiftConstantData())
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<FromToByAction<SIMD4<Float>>>);
    uint64_t v13 = (_OWORD *)swift_dynamicCastClass();
    if (v13)
    {
      long long v14 = v13[8];
      long long v38 = v13[7];
      long long v39 = v14;
      long long v15 = v13[10];
      long long v40 = v13[9];
      long long v41 = v15;
      long long v16 = v13[4];
      long long v34 = v13[3];
      long long v35 = v16;
      long long v17 = v13[6];
      long long v36 = v13[5];
      uint64_t v37 = v17;
      long long v18 = v13[2];
      long long v32 = v13[1];
      uint64_t v33 = v18;
      outlined retain of FromToByAction<simd_quatf>((uint64_t)&v32);
      swift_unknownObjectRelease();
      long long v20 = v39;
      a1[6] = v38;
      a1[7] = v20;
      long long v21 = v41;
      a1[8] = v40;
      a1[9] = v21;
      uint64_t v22 = v35;
      a1[2] = v34;
      a1[3] = v22;
      long long v23 = v37;
      a1[4] = v36;
      a1[5] = v23;
      long long v24 = v33;
      *a1 = v32;
      a1[1] = v24;
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v19);
    }
    swift_unknownObjectRelease();
  }
  _s17RealityFoundation14FromToByActionVySo10simd_quatfaGSgWOi0_(&v32);
  return outlined init with take of Transform?((uint64_t)&v32, (uint64_t)a1, &demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>?);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _OWORD *v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  uint64_t v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  uint64_t *boxed_opaque_existential_1;
  void v27[2];
  long long v28;
  long long v29;
  long long v30;
  uint64_t v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  unsigned char v42[56];
  void v43[8];

  outlined init with take of Transform?(v1 + 24, (uint64_t)v42, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v42, (uint64_t)v43, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v43[0];
  if (v43[0])
  {
    uint64_t v4 = v43[1];
    uint64_t v5 = v43[2];
    uint64_t v6 = v43[3];
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v8 = type metadata accessor for Optional();
    v27[1] = v27;
    uint64_t v9 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)v27 - v10;
    static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)v27 - v10);
    uint64_t v12 = *(void *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      long long v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      long long v28 = 0u;
    }
    else
    {
      *((void *)&v29 + 1) = v3;
      *(void *)&long long v30 = v4;
      *((void *)&v30 + 1) = v5;
      long long v31 = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
    if (swift_dynamicCast()) {
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v19);
    }
  }
  else if ((id)RETimelineEventGetSwiftConstantData())
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<FromToByAction<SIMD3<Float>>>);
    uint64_t v13 = (_OWORD *)swift_dynamicCastClass();
    if (v13)
    {
      long long v14 = v13[8];
      long long v38 = v13[7];
      long long v39 = v14;
      long long v15 = v13[10];
      long long v40 = v13[9];
      long long v41 = v15;
      long long v16 = v13[4];
      long long v34 = v13[3];
      long long v35 = v16;
      long long v17 = v13[6];
      long long v36 = v13[5];
      uint64_t v37 = v17;
      long long v18 = v13[2];
      long long v32 = v13[1];
      uint64_t v33 = v18;
      outlined retain of FromToByAction<simd_quatf>((uint64_t)&v32);
      swift_unknownObjectRelease();
      long long v20 = v39;
      a1[6] = v38;
      a1[7] = v20;
      long long v21 = v41;
      a1[8] = v40;
      a1[9] = v21;
      uint64_t v22 = v35;
      a1[2] = v34;
      a1[3] = v22;
      long long v23 = v37;
      a1[4] = v36;
      a1[5] = v23;
      long long v24 = v33;
      *a1 = v32;
      a1[1] = v24;
      return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a1, v19);
    }
    swift_unknownObjectRelease();
  }
  _s17RealityFoundation14FromToByActionVySo10simd_quatfaGSgWOi0_(&v32);
  return outlined init with take of Transform?((uint64_t)&v32, (uint64_t)a1, &demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>?);
}

uint64_t specialized ActionEventData.action<A>()@<X0>(void *a1@<X8>)
{
  outlined init with take of Transform?(v1 + 24, (uint64_t)v23, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  outlined init with take of Transform?((uint64_t)v23, (uint64_t)v24, &demangling cache variable for type metadata for (action: @thick EntityAction & Decodable & Encodable.Type, parameter: @thick Decodable & Encodable.Type)?);
  uint64_t v3 = v24[0];
  if (!v24[0])
  {
    uint64_t result = (uint64_t)(id)RETimelineEventGetSwiftConstantData();
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityActionWrapper<NotificationAction>);
      long long v14 = (void *)swift_dynamicCastClass();
      if (v14)
      {
        uint64_t v16 = v14[2];
        uint64_t v15 = v14[3];
        uint64_t v17 = v14[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = swift_unknownObjectRelease();
        *a1 = v16;
        a1[1] = v15;
        a1[2] = v17;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_11;
  }
  uint64_t v4 = v24[1];
  uint64_t v5 = v24[2];
  uint64_t v6 = v24[3];
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - v10;
  static EntityAction<>.load(_:)(v7, v3, v5, (uint64_t)&v19 - v10);
  uint64_t v12 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v19 = 0u;
  }
  else
  {
    *((void *)&v20 + 1) = v3;
    *(void *)&long long v21 = v4;
    *((void *)&v21 + 1) = v5;
    uint64_t v22 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_1, v11, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EntityAction & Decodable & Encodable)?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  return result;
}

uint64_t specialized static EntityAction.__unsubscribe(from:_:)(Swift::UInt a1, uint64_t a2)
{
  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for EmphasizeAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for EmphasizeAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for EmphasizeAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAudioAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for PlayAudioAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for PlayAudioAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for BillboardAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for BillboardAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for BillboardAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SpinAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for SpinAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for SpinAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for OrbitEntityAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for OrbitEntityAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for OrbitEntityAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for ImpulseAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for ImpulseAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for ImpulseAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SetEntityEnabledAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for SetEntityEnabledAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for SetEntityEnabledAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for NotificationAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for NotificationAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for NotificationAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;

  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAnimationAction);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  swift_endAccess();
  if (*(void *)(v7 + 16) && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v15 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v11, v12);
    unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v17)
    {
      unint64_t v18 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v18, v7);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v7 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, (uint64_t)&type metadata for PlayAnimationAction, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v19;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)&type metadata for PlayAnimationAction);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t specialized static EntityAction.__unsubscribe(from:_:)(Swift::UInt a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  if (one-time initialization token for actionSubscriptions != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v6 = static AnimationResource.actionSubscriptions;
  if (!*(void *)(static AnimationResource.actionSubscriptions + 16)) {
    return swift_endAccess();
  }
  unint64_t v7 = specialized __RawDictionaryStorage.find<A>(_:)(v5);
  if ((v8 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  swift_endAccess();
  if (*(void *)(v9 + 16) && (unint64_t v10 = specialized __RawDictionaryStorage.find<A>(_:)(a1), (v11 & 1) != 0))
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v10);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    if (a2)
    {
      swift_bridgeObjectRetain();
      uint64_t result = REEngineGetEventBus();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = specialized static __ServiceLocator.shared.getter();
      swift_beginAccess();
      uint64_t result = MEMORY[0x22A692280](*(void *)(v17 + 16));
      if (!result)
      {
        __break(1u);
        return result;
      }
    }
    MEMORY[0x22A68E810](result, v13, v14);
    unint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
    if (v19)
    {
      unint64_t v20 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        specialized _NativeDictionary.copy()();
      }
      specialized _NativeDictionary._delete(at:)(v20, v9);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(void *)(v9 + 16))
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = static AnimationResource.actionSubscriptions;
    static AnimationResource.actionSubscriptions = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v9, v5, isUniquelyReferenced_nonNull_native);
    static AnimationResource.actionSubscriptions = v21;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Dictionary._Variant.removeValue(forKey:)(v5);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t specialized static ActionHandlerProtocol.__registerCommon(engine:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for EmphasizeAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmphasizeAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?), v11, (uint64_t)&type metadata for EmphasizeAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAudioAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlayAudioAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for PlayAudioAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Int>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Double>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<JointTransforms>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<JointTransforms>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Double>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Double>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  void v16[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  char v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)(v6);
    Swift::String v8 = v7;
    swift_endAccess();
    if (v8)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v16, "Handler for ");
      BYTE5(v16[1]) = 0;
      HIWORD(v16[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>.Type);
      v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000228353D40;
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v10);
      specialized static AnimationLogger.logError(_:)(v16[0], v16[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v12 + 24) = v11;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v12, v6, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for BillboardAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BillboardAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for BillboardAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SpinAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SpinAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for SpinAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for OrbitEntityAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OrbitEntityAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for OrbitEntityAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for ImpulseAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImpulseAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for ImpulseAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SetEntityEnabledAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityEnabledAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for SetEntityEnabledAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for NotificationAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NotificationAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for NotificationAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  char v6;
  char v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void v15[2];

  specialized static EntityAction.__subscribe(to:_:_:)(1uLL, a1, (uint64_t)specialized closure #1 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(2uLL, a1, (uint64_t)specialized closure #2 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(4uLL, a1, (uint64_t)specialized closure #3 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(8uLL, a1, (uint64_t)specialized closure #4 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x10uLL, a1, (uint64_t)specialized closure #5 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x20uLL, a1, (uint64_t)specialized closure #6 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x40uLL, a1, (uint64_t)specialized closure #7 in static ActionHandlerProtocol.subscribe(_:), 0);
  specialized static EntityAction.__subscribe(to:_:_:)(0x80uLL, a1, (uint64_t)specialized closure #8 in static ActionHandlerProtocol.subscribe(_:), 0);
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAnimationAction);
    char v7 = v6;
    swift_endAccess();
    if (v7)
    {
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      strcpy((char *)v15, "Handler for ");
      BYTE5(v15[1]) = 0;
      HIWORD(v15[1]) = -5120;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlayAnimationAction.Type);
      v8._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._object = (void *)0x8000000228353D40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v9);
      specialized static AnimationLogger.logError(_:)(v15[0], v15[1]);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = partial apply for specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:);
  *(void *)(v11 + 24) = v10;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = static AnimationResource.actionHandlerCreators;
  static AnimationResource.actionHandlerCreators = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed AnimationPlaybackController, @unowned ActionEventData, @unowned Bool, @unowned Double, @unowned Double, @guaranteed __Engine, @unowned UnsafeRawPointer, @guaranteed Entity?) -> (@out ActionHandlerProtocol?)partial apply, v11, (uint64_t)&type metadata for PlayAnimationAction, isUniquelyReferenced_nonNull_native);
  static AnimationResource.actionHandlerCreators = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t *)@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  char v28 = *((unsigned char *)a2 + 8);
  uint64_t v19 = a2[3];
  uint64_t v26 = a2[2];
  uint64_t v34 = a2[5];
  uint64_t v35 = a2[4];
  uint64_t v32 = a2[7];
  uint64_t v33 = a2[6];
  uint64_t v31 = a2[8];
  uint64_t v29 = *a2;
  uint64_t v30 = a2[9];
  uint64_t result = specialized ActionEventData.action<A>()((uint64_t)&v85);
  int v21 = v85 | (v86 << 16);
  if ((v21 & 0xFF0000) == 0x20000)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    swift_retain();
    __int16 v37 = v21;
    uint64_t v25 = v19;
    char v38 = BYTE2(v21) & 1;
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<EmphasizeAction>) & 1;
    char v39 = v22;
    uint64_t v36 = a1;
    uint64_t v40 = a6;
    char v41 = a3 & 1;
    double v42 = a9;
    double v43 = a10;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v44 = a4;
    char v47 = 1;
    uint64_t v48 = 0;
    char v49 = 1;
    uint64_t v50 = 0;
    char v51 = 1;
    long long v23 = *((_OWORD *)a2 + 3);
    long long v54 = *((_OWORD *)a2 + 2);
    long long v55 = v23;
    long long v56 = *((_OWORD *)a2 + 4);
    long long v24 = *((_OWORD *)a2 + 1);
    long long v52 = *(_OWORD *)a2;
    long long v53 = v24;
    uint64_t v57 = a5;
    swift_retain();
    swift_retain();
    a7(&v36);
    uint64_t v58 = a1;
    __int16 v59 = v21;
    char v60 = BYTE2(v21) & 1;
    char v61 = v22;
    uint64_t v62 = a6;
    char v63 = a3 & 1;
    double v64 = a9;
    double v65 = a10;
    uint64_t v67 = 0;
    uint64_t v68 = 0;
    uint64_t v66 = a4;
    char v69 = 1;
    uint64_t v70 = 0;
    char v71 = 1;
    uint64_t v72 = 0;
    char v73 = 1;
    uint64_t v74 = v29;
    char v75 = v28 & 1;
    uint64_t v76 = v26;
    uint64_t v77 = v25;
    uint64_t v78 = v35;
    uint64_t v79 = v34;
    uint64_t v80 = v33;
    uint64_t v81 = v32;
    uint64_t v82 = v31;
    uint64_t v83 = v30;
    uint64_t v84 = a5;
    return outlined release of ActionEvent<EmphasizeAction>((uint64_t)&v58);
  }
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  uint64_t v27;
  uint64_t v28;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  long long v47;
  long long v48;
  long long v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  long long v54;
  char v55;
  uint64_t v56;
  char v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  uint64_t v73;
  long long v74;
  long long v75;
  long long v76;
  long long v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  long long v88;
  long long v89;
  uint64_t v90;
  long long v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  long long v96;
  long long v97;
  long long v98;
  long long v99;
  long long v100;
  long long v101;
  long long v102;
  long long v103;
  long long v104;
  long long v105;
  long long v106;
  char v107;
  uint64_t v108;
  char v109;
  double v110;
  double v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _OWORD v131[16];
  unsigned char v132[256];
  unsigned char v133[272];

  uint64_t v31 = *((unsigned char *)a2 + 8);
  unint64_t v18 = a2[2];
  uint64_t v19 = a2[3];
  unint64_t v20 = a2[4];
  uint64_t v36 = a2[6];
  __int16 v37 = a2[5];
  uint64_t v34 = a2[8];
  uint64_t v35 = a2[7];
  uint64_t v32 = *a2;
  uint64_t v33 = a2[9];
  specialized ActionEventData.action<A>()(v131);
  outlined init with take of Transform?((uint64_t)v131, (uint64_t)v132, &demangling cache variable for type metadata for FromToByAction<Transform>?);
  outlined init with take of Transform?((uint64_t)v132, (uint64_t)v133, &demangling cache variable for type metadata for FromToByAction<Transform>?);
  uint64_t result = _s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v133);
  if (result == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    char v28 = v20;
    outlined init with take of Transform?((uint64_t)v132, (uint64_t)&v74, &demangling cache variable for type metadata for FromToByAction<Transform>?);
    swift_retain();
    outlined retain of FromToByAction<Transform>?((uint64_t)v132, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Transform>>);
    char v51 = v86;
    long long v52 = v87;
    long long v53 = v88;
    long long v54 = v89;
    char v47 = v82;
    uint64_t v48 = v83;
    char v49 = v84;
    uint64_t v50 = v85;
    double v43 = v78;
    uint64_t v44 = v79;
    uint64_t v45 = v80;
    uint64_t v46 = v81;
    char v39 = v74;
    uint64_t v40 = v75;
    char v41 = v76;
    double v42 = v77;
    long long v23 = a5;
    long long v24 = v22 & 1;
    long long v55 = v22 & 1;
    char v38 = a1;
    long long v56 = a6;
    uint64_t v57 = a3 & 1;
    uint64_t v58 = a9;
    __int16 v59 = a10;
    char v60 = a4;
    char v61 = 0;
    char v63 = 1;
    uint64_t v62 = 0;
    double v64 = 0;
    double v65 = 1;
    uint64_t v67 = 1;
    uint64_t v25 = *((_OWORD *)a2 + 3);
    uint64_t v70 = *((_OWORD *)a2 + 2);
    char v71 = v25;
    uint64_t v72 = *((_OWORD *)a2 + 4);
    uint64_t v26 = *((_OWORD *)a2 + 1);
    uint64_t v68 = *(_OWORD *)a2;
    char v69 = v26;
    uint64_t v66 = 0;
    char v73 = v23;
    long long v27 = v23;
    swift_retain();
    swift_retain();
    a7(&v38);
    outlined retain of FromToByAction<Transform>?((uint64_t)v132, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
    char v90 = a1;
    uint64_t v103 = v86;
    long long v104 = v87;
    long long v105 = v88;
    uint64_t v106 = v89;
    uint64_t v99 = v82;
    v100 = v83;
    v101 = v84;
    uint64_t v102 = v85;
    char v95 = v78;
    uint64_t v96 = v79;
    uint64_t v97 = v80;
    uint64_t v98 = v81;
    long long v91 = v74;
    long long v92 = v75;
    long long v93 = v76;
    long long v94 = v77;
    long long v107 = v24;
    uint64_t v108 = a6;
    v109 = a3 & 1;
    v110 = a9;
    v111 = a10;
    v112 = a4;
    v113 = 0;
    v115 = 1;
    v114 = 0;
    v116 = 0;
    v117 = 1;
    v119 = 1;
    v118 = 0;
    v120 = v32;
    v121 = v31 & 1;
    v122 = v18;
    v123 = v19;
    v124 = v28;
    v125 = v37;
    v126 = v36;
    v127 = v35;
    v128 = v34;
    v129 = v33;
    v130 = v27;
    return outlined release of ActionEvent<FromToByAction<Transform>>((uint64_t)&v90);
  }
  return result;
}

{
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  char v23;
  long long v24;
  long long v25;
  long long v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  long long v47;
  char v48;
  uint64_t v49;
  char v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  uint64_t v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  uint64_t v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  char v88;
  uint64_t v89;
  char v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[10];
  void v113[20];
  unsigned char v114[176];

  uint64_t v19 = *a2;
  uint64_t v29 = *((unsigned char *)a2 + 8);
  unint64_t v20 = a2[2];
  uint64_t v35 = a2[4];
  uint64_t v36 = a2[3];
  uint64_t v33 = a2[6];
  uint64_t v34 = a2[5];
  uint64_t v31 = a2[8];
  uint64_t v32 = a2[7];
  uint64_t v30 = a2[9];
  specialized ActionEventData.action<A>()(v112);
  outlined init with take of Transform?((uint64_t)v112, (uint64_t)v113, &demangling cache variable for type metadata for FromToByAction<simd_quatf>?);
  outlined init with take of Transform?((uint64_t)v113, (uint64_t)v114, &demangling cache variable for type metadata for FromToByAction<simd_quatf>?);
  uint64_t result = _s17RealityFoundation14FromToByActionVySo10simd_quatfaGSgWOg((uint64_t)v114);
  if (result == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    outlined init with take of Transform?((uint64_t)v113, (uint64_t)&v67, &demangling cache variable for type metadata for FromToByAction<simd_quatf>?);
    swift_retain();
    outlined retain of FromToByAction<simd_quatf>?(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<simd_quatf>?);
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<simd_quatf>>);
    uint64_t v44 = v73;
    uint64_t v45 = v74;
    uint64_t v46 = v75;
    char v47 = v76;
    uint64_t v40 = v69;
    char v41 = v70;
    double v42 = v71;
    double v43 = v72;
    char v38 = v67;
    char v39 = v68;
    long long v27 = v19;
    long long v23 = v22 & 1;
    uint64_t v48 = v22 & 1;
    __int16 v37 = a1;
    char v49 = a6;
    uint64_t v50 = a3 & 1;
    char v51 = a9;
    long long v52 = a10;
    long long v54 = 0;
    long long v55 = 0;
    long long v53 = a4;
    long long v56 = 1;
    uint64_t v58 = 1;
    uint64_t v57 = 0;
    __int16 v59 = 0;
    char v60 = 1;
    long long v24 = *((_OWORD *)a2 + 4);
    uint64_t v25 = *((_OWORD *)a2 + 2);
    double v64 = *((_OWORD *)a2 + 3);
    double v65 = v24;
    uint64_t v26 = *(_OWORD *)a2;
    uint64_t v62 = *((_OWORD *)a2 + 1);
    char v63 = v25;
    char v61 = v26;
    uint64_t v66 = a5;
    swift_retain();
    swift_retain();
    a7(&v37);
    outlined retain of FromToByAction<simd_quatf>?(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<simd_quatf>?);
    uint64_t v77 = a1;
    uint64_t v84 = v73;
    unsigned __int16 v85 = v74;
    unsigned __int8 v86 = v75;
    char v87 = v76;
    uint64_t v80 = v69;
    uint64_t v81 = v70;
    uint64_t v82 = v71;
    uint64_t v83 = v72;
    uint64_t v78 = v67;
    uint64_t v79 = v68;
    char v88 = v23;
    char v89 = a6;
    char v90 = a3 & 1;
    long long v91 = a9;
    long long v92 = a10;
    char v95 = 0;
    long long v93 = a4;
    long long v94 = 0;
    uint64_t v96 = 1;
    uint64_t v98 = 1;
    uint64_t v97 = 0;
    uint64_t v99 = 0;
    v100 = 1;
    uint64_t v102 = v29 & 1;
    v101 = v27;
    uint64_t v103 = v20;
    long long v104 = v36;
    long long v105 = v35;
    uint64_t v106 = v34;
    long long v107 = v33;
    uint64_t v108 = v32;
    v109 = v31;
    v110 = v30;
    v111 = a5;
    return outlined release of ActionEvent<FromToByAction<simd_quatf>>((uint64_t)&v77);
  }
  return result;
}

{
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  char v23;
  long long v24;
  long long v25;
  long long v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  long long v47;
  char v48;
  uint64_t v49;
  char v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  uint64_t v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  uint64_t v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  char v88;
  uint64_t v89;
  char v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[10];
  void v113[20];
  unsigned char v114[176];

  uint64_t v19 = *a2;
  uint64_t v29 = *((unsigned char *)a2 + 8);
  unint64_t v20 = a2[2];
  uint64_t v35 = a2[4];
  uint64_t v36 = a2[3];
  uint64_t v33 = a2[6];
  uint64_t v34 = a2[5];
  uint64_t v31 = a2[8];
  uint64_t v32 = a2[7];
  uint64_t v30 = a2[9];
  specialized ActionEventData.action<A>()(v112);
  outlined init with take of Transform?((uint64_t)v112, (uint64_t)v113, &demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>?);
  outlined init with take of Transform?((uint64_t)v113, (uint64_t)v114, &demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>?);
  uint64_t result = _s17RealityFoundation14FromToByActionVySo10simd_quatfaGSgWOg((uint64_t)v114);
  if (result == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    outlined init with take of Transform?((uint64_t)v113, (uint64_t)&v67, &demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>?);
    swift_retain();
    outlined retain of FromToByAction<simd_quatf>?(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<SIMD4<Float>>?);
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<SIMD4<Float>>>);
    uint64_t v44 = v73;
    uint64_t v45 = v74;
    uint64_t v46 = v75;
    char v47 = v76;
    uint64_t v40 = v69;
    char v41 = v70;
    double v42 = v71;
    double v43 = v72;
    char v38 = v67;
    char v39 = v68;
    long long v27 = v19;
    long long v23 = v22 & 1;
    uint64_t v48 = v22 & 1;
    __int16 v37 = a1;
    char v49 = a6;
    uint64_t v50 = a3 & 1;
    char v51 = a9;
    long long v52 = a10;
    long long v54 = 0;
    long long v55 = 0;
    long long v53 = a4;
    long long v56 = 1;
    uint64_t v58 = 1;
    uint64_t v57 = 0;
    __int16 v59 = 0;
    char v60 = 1;
    long long v24 = *((_OWORD *)a2 + 4);
    uint64_t v25 = *((_OWORD *)a2 + 2);
    double v64 = *((_OWORD *)a2 + 3);
    double v65 = v24;
    uint64_t v26 = *(_OWORD *)a2;
    uint64_t v62 = *((_OWORD *)a2 + 1);
    char v63 = v25;
    char v61 = v26;
    uint64_t v66 = a5;
    swift_retain();
    swift_retain();
    a7(&v37);
    outlined retain of FromToByAction<simd_quatf>?(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<SIMD4<Float>>?);
    uint64_t v77 = a1;
    uint64_t v84 = v73;
    unsigned __int16 v85 = v74;
    unsigned __int8 v86 = v75;
    char v87 = v76;
    uint64_t v80 = v69;
    uint64_t v81 = v70;
    uint64_t v82 = v71;
    uint64_t v83 = v72;
    uint64_t v78 = v67;
    uint64_t v79 = v68;
    char v88 = v23;
    char v89 = a6;
    char v90 = a3 & 1;
    long long v91 = a9;
    long long v92 = a10;
    char v95 = 0;
    long long v93 = a4;
    long long v94 = 0;
    uint64_t v96 = 1;
    uint64_t v98 = 1;
    uint64_t v97 = 0;
    uint64_t v99 = 0;
    v100 = 1;
    uint64_t v102 = v29 & 1;
    v101 = v27;
    uint64_t v103 = v20;
    long long v104 = v36;
    long long v105 = v35;
    uint64_t v106 = v34;
    long long v107 = v33;
    uint64_t v108 = v32;
    v109 = v31;
    v110 = v30;
    v111 = a5;
    return outlined release of ActionEvent<FromToByAction<simd_quatf>>((uint64_t)&v77);
  }
  return result;
}

{
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  char v23;
  long long v24;
  long long v25;
  long long v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  long long v45;
  long long v46;
  long long v47;
  char v48;
  uint64_t v49;
  char v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  uint64_t v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  uint64_t v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  char v88;
  uint64_t v89;
  char v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[10];
  void v113[20];
  unsigned char v114[176];

  uint64_t v19 = *a2;
  uint64_t v29 = *((unsigned char *)a2 + 8);
  unint64_t v20 = a2[2];
  uint64_t v35 = a2[4];
  uint64_t v36 = a2[3];
  uint64_t v33 = a2[6];
  uint64_t v34 = a2[5];
  uint64_t v31 = a2[8];
  uint64_t v32 = a2[7];
  uint64_t v30 = a2[9];
  specialized ActionEventData.action<A>()(v112);
  outlined init with take of Transform?((uint64_t)v112, (uint64_t)v113, &demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>?);
  outlined init with take of Transform?((uint64_t)v113, (uint64_t)v114, &demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>?);
  uint64_t result = _s17RealityFoundation14FromToByActionVySo10simd_quatfaGSgWOg((uint64_t)v114);
  if (result == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    outlined init with take of Transform?((uint64_t)v113, (uint64_t)&v67, &demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>?);
    swift_retain();
    outlined retain of FromToByAction<simd_quatf>?(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<SIMD4<Float>>?);
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<SIMD3<Float>>>);
    uint64_t v44 = v73;
    uint64_t v45 = v74;
    uint64_t v46 = v75;
    char v47 = v76;
    uint64_t v40 = v69;
    char v41 = v70;
    double v42 = v71;
    double v43 = v72;
    char v38 = v67;
    char v39 = v68;
    long long v27 = v19;
    long long v23 = v22 & 1;
    uint64_t v48 = v22 & 1;
    __int16 v37 = a1;
    char v49 = a6;
    uint64_t v50 = a3 & 1;
    char v51 = a9;
    long long v52 = a10;
    long long v54 = 0;
    long long v55 = 0;
    long long v53 = a4;
    long long v56 = 1;
    uint64_t v58 = 1;
    uint64_t v57 = 0;
    __int16 v59 = 0;
    char v60 = 1;
    long long v24 = *((_OWORD *)a2 + 4);
    uint64_t v25 = *((_OWORD *)a2 + 2);
    double v64 = *((_OWORD *)a2 + 3);
    double v65 = v24;
    uint64_t v26 = *(_OWORD *)a2;
    uint64_t v62 = *((_OWORD *)a2 + 1);
    char v63 = v25;
    char v61 = v26;
    uint64_t v66 = a5;
    swift_retain();
    swift_retain();
    a7(&v37);
    outlined retain of FromToByAction<simd_quatf>?(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<SIMD4<Float>>?);
    uint64_t v77 = a1;
    uint64_t v84 = v73;
    unsigned __int16 v85 = v74;
    unsigned __int8 v86 = v75;
    char v87 = v76;
    uint64_t v80 = v69;
    uint64_t v81 = v70;
    uint64_t v82 = v71;
    uint64_t v83 = v72;
    uint64_t v78 = v67;
    uint64_t v79 = v68;
    char v88 = v23;
    char v89 = a6;
    char v90 = a3 & 1;
    long long v91 = a9;
    long long v92 = a10;
    char v95 = 0;
    long long v93 = a4;
    long long v94 = 0;
    uint64_t v96 = 1;
    uint64_t v98 = 1;
    uint64_t v97 = 0;
    uint64_t v99 = 0;
    v100 = 1;
    uint64_t v102 = v29 & 1;
    v101 = v27;
    uint64_t v103 = v20;
    long long v104 = v36;
    long long v105 = v35;
    uint64_t v106 = v34;
    long long v107 = v33;
    uint64_t v108 = v32;
    v109 = v31;
    v110 = v30;
    v111 = a5;
    return outlined release of ActionEvent<FromToByAction<simd_quatf>>((uint64_t)&v77);
  }
  return result;
}

{
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  long long v23;
  long long v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char v79;
  char v80;
  char v81;
  uint64_t v82;
  char v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _DWORD v105[4];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int v110;
  unsigned __int16 v111;

  char v38 = *((unsigned char *)a2 + 8);
  uint64_t v32 = a2[2];
  uint64_t v33 = a2[3];
  uint64_t v34 = a2[4];
  uint64_t v31 = a2[5];
  double v42 = a2[7];
  double v43 = a2[6];
  char v41 = a2[8];
  char v39 = *a2;
  uint64_t v40 = a2[9];
  uint64_t result = specialized ActionEventData.action<A>()((uint64_t)v105);
  uint64_t v17 = v110 | ((unint64_t)v111 << 32);
  if ((v17 & 0xFF0000000000) == 0x20000000000)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    unint64_t v18 = v108;
    char v28 = v108;
    uint64_t v29 = v109;
    uint64_t v19 = v105[0];
    long long v27 = v105[0];
    int v21 = v106;
    unint64_t v20 = v107;
    uint64_t v26 = v106;
    uint64_t v25 = v107;
    swift_retain();
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SpinAction>);
    long long v23 = *(_OWORD *)a2;
    uint64_t v67 = *((_OWORD *)a2 + 1);
    long long v24 = *((_OWORD *)a2 + 3);
    uint64_t v68 = *((_OWORD *)a2 + 2);
    char v69 = v24;
    uint64_t v70 = *((_OWORD *)a2 + 4);
    uint64_t v45 = v19;
    uint64_t v46 = v21;
    char v47 = v20;
    uint64_t v48 = v18;
    char v49 = v29;
    uint64_t v50 = v17;
    char v51 = BYTE4(v17);
    long long v52 = BYTE5(v17) & 1;
    LOBYTE(v19) = v22 & 1;
    long long v53 = v22 & 1;
    uint64_t v44 = a1;
    long long v54 = a6;
    long long v55 = a3 & 1;
    long long v56 = a9;
    uint64_t v57 = a10;
    __int16 v59 = 0;
    char v60 = 0;
    uint64_t v58 = a4;
    char v61 = 1;
    uint64_t v62 = 0;
    char v63 = 1;
    double v64 = 0;
    double v65 = 1;
    uint64_t v66 = v23;
    char v71 = a5;
    swift_retain();
    swift_retain();
    a7(&v44);
    uint64_t v72 = a1;
    char v73 = v27;
    uint64_t v74 = v26;
    char v75 = v25;
    uint64_t v76 = v28;
    uint64_t v77 = v29;
    uint64_t v78 = v17;
    uint64_t v79 = BYTE4(v17);
    uint64_t v80 = BYTE5(v17) & 1;
    uint64_t v81 = v19;
    uint64_t v82 = a6;
    uint64_t v83 = a3 & 1;
    uint64_t v84 = a9;
    unsigned __int16 v85 = a10;
    char v88 = 0;
    unsigned __int8 v86 = a4;
    char v87 = 0;
    char v89 = 1;
    char v90 = 0;
    long long v91 = 1;
    long long v92 = 0;
    long long v93 = 1;
    long long v94 = v39;
    char v95 = v38 & 1;
    uint64_t v96 = v32;
    uint64_t v97 = v33;
    uint64_t v98 = v34;
    uint64_t v99 = v31;
    v100 = v43;
    v101 = v42;
    uint64_t v102 = v41;
    uint64_t v103 = v40;
    long long v104 = a5;
    return outlined release of ActionEvent<SpinAction>((uint64_t)&v72);
  }
  return result;
}

uint64_t specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(void *)@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v44 = *a2;
  char v43 = *((unsigned char *)a2 + 8);
  uint64_t v16 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[5];
  uint64_t v41 = a2[4];
  uint64_t v19 = a2[6];
  uint64_t v39 = a2[7];
  uint64_t v20 = a2[8];
  uint64_t v46 = a2[9];
  uint64_t result = specialized ActionEventData.action<A>()((uint64_t)v104);
  uint64_t v22 = v105;
  if (v105)
  {
    uint64_t v37 = v18;
    uint64_t v38 = v20;
    uint64_t v23 = v106;
    uint64_t v35 = v17;
    uint64_t v36 = v19;
    uint64_t v24 = v104[2];
    uint64_t v25 = v104[3];
    uint64_t v47 = a5;
    uint64_t v26 = v104[0];
    uint64_t v27 = v104[1];
    uint64_t v34 = v16;
    char v28 = v107 & 1;
    char v33 = v107 & 1;
    swift_retain();
    outlined copy of SetEntityPropertyAction<Transform>?(v26, v27, v24, v25, v22);
    char v29 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAudioAction>);
    v49[1] = v26;
    v49[2] = v27;
    char v50 = v24 & 1;
    uint64_t v51 = v25;
    uint64_t v52 = v22;
    uint64_t v53 = v23;
    char v54 = v28;
    char v32 = v29 & 1;
    char v55 = v29 & 1;
    v49[0] = a1;
    uint64_t v56 = a6;
    char v57 = a3 & 1;
    double v58 = a9;
    double v59 = a10;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v60 = a4;
    char v63 = 1;
    uint64_t v64 = 0;
    char v65 = 1;
    uint64_t v66 = 0;
    char v67 = 1;
    long long v30 = *((_OWORD *)a2 + 3);
    long long v70 = *((_OWORD *)a2 + 2);
    long long v71 = v30;
    long long v72 = *((_OWORD *)a2 + 4);
    long long v31 = *((_OWORD *)a2 + 1);
    long long v68 = *(_OWORD *)a2;
    long long v69 = v31;
    uint64_t v73 = v47;
    swift_retain();
    swift_retain();
    a7(v49);
    outlined consume of SetEntityPropertyAction<Transform>?(v26, v27, v24, v25, v22);
    v74[0] = a1;
    v74[1] = v26;
    v74[2] = v27;
    char v75 = v24 & 1;
    uint64_t v76 = v25;
    uint64_t v77 = v22;
    uint64_t v78 = v23;
    char v79 = v33;
    char v80 = v32;
    uint64_t v81 = a6;
    char v82 = a3 & 1;
    double v83 = a9;
    double v84 = a10;
    uint64_t v87 = 0;
    uint64_t v85 = a4;
    uint64_t v86 = 0;
    char v88 = 1;
    uint64_t v89 = 0;
    char v90 = 1;
    uint64_t v91 = 0;
    char v92 = 1;
    uint64_t v93 = v44;
    char v94 = v43 & 1;
    uint64_t v95 = v34;
    uint64_t v96 = v35;
    uint64_t v97 = v41;
    uint64_t v98 = v37;
    uint64_t v99 = v36;
    uint64_t v100 = v39;
    uint64_t v101 = v38;
    uint64_t v102 = v46;
    uint64_t v103 = v47;
    return outlined release of ActionEvent<PlayAudioAction>((uint64_t)v74);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  return result;
}

{
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  long long v31;
  long long v32;
  long long v33;
  int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  long long v55;
  uint64_t v56;
  char v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void v66[4];
  char v67;
  long long v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char v81;
  char v82;
  uint64_t v83;
  char v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  long long v95;
  long long v96;
  long long v97;
  long long v98;
  long long v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  long long v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  char v117;
  void v118[4];
  char v119;
  long long v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  char v133;
  char v134;
  uint64_t v135;
  char v136;
  double v137;
  double v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unsigned char v158[176];
  unsigned char v159[176];
  unsigned char v160[176];

  uint64_t v60 = *((unsigned char *)a2 + 8);
  uint64_t v56 = a2[2];
  uint64_t v16 = a2[4];
  uint64_t v53 = *a2;
  char v54 = a2[3];
  uint64_t v17 = a2[5];
  uint64_t v64 = a2[7];
  char v65 = a2[6];
  uint64_t v62 = a2[9];
  char v63 = a2[8];
  specialized ActionEventData.action<A>()((uint64_t)v158);
  outlined init with take of Transform?((uint64_t)v158, (uint64_t)v159, &demangling cache variable for type metadata for BillboardAction?);
  outlined init with take of Transform?((uint64_t)v159, (uint64_t)v160, &demangling cache variable for type metadata for BillboardAction?);
  uint64_t result = _s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v160);
  if (result == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t v48 = a5;
    outlined init with take of Transform?((uint64_t)v159, (uint64_t)&v101, &demangling cache variable for type metadata for BillboardAction?);
    uint64_t v52 = v101;
    char v49 = v17;
    char v50 = v16;
    uint64_t v19 = v102;
    uint64_t v47 = v102;
    uint64_t v20 = v103;
    uint64_t v46 = v103;
    char v55 = v104;
    int v21 = v105;
    uint64_t v22 = v106;
    uint64_t v44 = v106;
    uint64_t v45 = v105;
    uint64_t v23 = v107;
    char v43 = v107;
    uint64_t v24 = v108;
    uint64_t v25 = v109;
    double v42 = v109;
    uint64_t v36 = v110;
    uint64_t v37 = a1;
    uint64_t v26 = v111;
    uint64_t v41 = v111;
    uint64_t v27 = v113;
    char v28 = v114;
    char v29 = v115;
    uint64_t v39 = v115;
    uint64_t v40 = v114;
    uint64_t v34 = v116;
    uint64_t v35 = v112;
    uint64_t v51 = v117;
    swift_retain();
    long long v30 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<BillboardAction>);
    v66[3] = v19;
    char v67 = v20;
    long long v68 = v55;
    long long v69 = v21;
    long long v70 = v22;
    long long v71 = v23;
    long long v72 = v24;
    uint64_t v73 = v25;
    uint64_t v74 = v36;
    char v75 = v26;
    uint64_t v76 = v35;
    uint64_t v77 = v27;
    uint64_t v78 = v28;
    char v79 = v29;
    char v80 = v34;
    uint64_t v81 = v51;
    uint64_t v38 = v30 & 1;
    char v82 = v30 & 1;
    v66[2] = v52;
    v66[0] = v37;
    double v83 = a6;
    double v84 = a3 & 1;
    uint64_t v85 = a9;
    uint64_t v86 = a10;
    uint64_t v89 = 0;
    uint64_t v87 = a4;
    char v88 = 0;
    char v90 = 1;
    char v92 = 1;
    uint64_t v91 = 0;
    uint64_t v93 = 0;
    char v94 = 1;
    long long v31 = *((_OWORD *)a2 + 4);
    char v32 = *((_OWORD *)a2 + 2);
    uint64_t v98 = *((_OWORD *)a2 + 3);
    uint64_t v99 = v31;
    char v33 = *(_OWORD *)a2;
    uint64_t v96 = *((_OWORD *)a2 + 1);
    uint64_t v97 = v32;
    uint64_t v95 = v33;
    uint64_t v100 = v48;
    swift_retain();
    swift_retain();
    a7(v66);
    v118[0] = v37;
    v118[2] = v52;
    v118[3] = v47;
    v119 = v46;
    v120 = v55;
    v121 = v45;
    v122 = v44;
    v123 = v43;
    v124 = v24;
    v125 = v42;
    v126 = v36;
    v127 = v41;
    v128 = v35;
    v129 = v27;
    v130 = v40;
    v131 = v39;
    v132 = v34;
    v133 = v51;
    v134 = v38;
    v135 = a6;
    v136 = a3 & 1;
    v137 = a9;
    v138 = a10;
    v141 = 0;
    v139 = a4;
    v140 = 0;
    v142 = 1;
    v144 = 1;
    v143 = 0;
    v145 = 0;
    v146 = 1;
    v148 = v60 & 1;
    v147 = v53;
    v149 = v56;
    v150 = v54;
    v151 = v50;
    v152 = v49;
    v153 = v65;
    v154 = v64;
    v155 = v63;
    v156 = v62;
    v157 = v48;
    return outlined release of ActionEvent<BillboardAction>((uint64_t)v118);
  }
  return result;
}

{
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  char v22;
  long long v23;
  long long v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void v42[4];
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  char v48;
  uint64_t v49;
  char v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  uint64_t v66;
  void v67[4];
  char v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  __int16 v72;
  char v73;
  uint64_t v74;
  char v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void v97[2];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int16 v101;

  uint64_t v37 = *((unsigned char *)a2 + 8);
  uint64_t v14 = a2[2];
  long long v30 = a2[4];
  long long v31 = a2[5];
  uint64_t v27 = a2[6];
  char v28 = a2[3];
  char v29 = a2[7];
  char v32 = a2[8];
  uint64_t v38 = *a2;
  uint64_t v39 = a2[9];
  uint64_t result = specialized ActionEventData.action<A>()((uint64_t)v97);
  uint64_t v16 = v98;
  if ((_BYTE)v98 == 0xFF)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t v17 = v99;
    uint64_t v26 = v14;
    uint64_t v19 = v97[0];
    uint64_t v18 = v97[1];
    uint64_t v25 = v97[0];
    uint64_t v20 = v100;
    int v21 = v101;
    swift_retain();
    outlined copy of OrbitEntityAction?(v19, v18, v16);
    uint64_t v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<OrbitEntityAction>);
    uint64_t v23 = *(_OWORD *)a2;
    uint64_t v62 = *((_OWORD *)a2 + 1);
    uint64_t v24 = *((_OWORD *)a2 + 3);
    char v63 = *((_OWORD *)a2 + 2);
    uint64_t v64 = v24;
    char v65 = *((_OWORD *)a2 + 4);
    char v43 = v16 & 1;
    uint64_t v44 = HIDWORD(v16);
    uint64_t v45 = v17;
    uint64_t v46 = v20;
    uint64_t v47 = v21 & 0x101;
    LOBYTE(v19) = v22 & 1;
    uint64_t v48 = v22 & 1;
    v42[2] = v25;
    v42[3] = v18;
    v42[0] = a1;
    char v49 = a6;
    char v50 = a3 & 1;
    uint64_t v51 = a9;
    uint64_t v52 = a10;
    char v54 = 0;
    char v55 = 0;
    uint64_t v53 = a4;
    uint64_t v56 = 1;
    char v57 = 0;
    double v58 = 1;
    double v59 = 0;
    uint64_t v60 = 1;
    uint64_t v61 = v23;
    uint64_t v66 = a5;
    swift_retain();
    swift_retain();
    a7(v42);
    outlined consume of OrbitEntityAction?(v25, v18, v16);
    v67[0] = a1;
    v67[2] = v25;
    v67[3] = v18;
    long long v68 = v16 & 1;
    long long v69 = HIDWORD(v16);
    long long v71 = v20;
    long long v70 = v17;
    long long v72 = v21 & 0x101;
    uint64_t v73 = v19;
    uint64_t v74 = a6;
    char v75 = a3 & 1;
    uint64_t v76 = a9;
    uint64_t v77 = a10;
    char v80 = 0;
    uint64_t v78 = a4;
    char v79 = 0;
    uint64_t v81 = 1;
    char v82 = 0;
    double v83 = 1;
    double v84 = 0;
    uint64_t v85 = 1;
    uint64_t v86 = v38;
    uint64_t v87 = v37 & 1;
    char v88 = v26;
    uint64_t v89 = v28;
    char v90 = v30;
    uint64_t v91 = v31;
    char v92 = v27;
    uint64_t v93 = v29;
    char v94 = v32;
    uint64_t v95 = v39;
    uint64_t v96 = a5;
    return outlined release of ActionEvent<OrbitEntityAction>((uint64_t)v67);
  }
  return result;
}

{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v37;
  uint64_t v39;
  uint64_t v40;
  void v42[4];
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  uint64_t v64;
  void v65[4];
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void v93[2];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  uint64_t v34 = *a2;
  uint64_t v37 = *((unsigned char *)a2 + 8);
  uint64_t v15 = a2[2];
  uint64_t v16 = a2[5];
  long long v31 = a2[3];
  char v32 = a2[4];
  uint64_t v17 = a2[7];
  long long v30 = a2[6];
  uint64_t v39 = a2[9];
  uint64_t v40 = a2[8];
  uint64_t result = specialized ActionEventData.action<A>()((uint64_t)v93);
  uint64_t v19 = v94;
  if ((_BYTE)v94 == 0xFF)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t v20 = v95;
    char v28 = v16;
    uint64_t v22 = v93[0];
    int v21 = v93[1];
    char v29 = v17;
    uint64_t v23 = v96;
    swift_retain();
    outlined copy of OrbitEntityAction?(v22, v21, v19);
    uint64_t v24 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<ImpulseAction>);
    uint64_t v25 = *(_OWORD *)a2;
    uint64_t v60 = *((_OWORD *)a2 + 1);
    uint64_t v26 = *((_OWORD *)a2 + 3);
    uint64_t v61 = *((_OWORD *)a2 + 2);
    uint64_t v62 = v26;
    char v63 = *((_OWORD *)a2 + 4);
    v42[2] = v22;
    v42[3] = v21;
    char v43 = v19 & 1;
    uint64_t v44 = v20;
    uint64_t v45 = v23;
    uint64_t v27 = v24 & 1;
    uint64_t v46 = v24 & 1;
    v42[0] = a1;
    uint64_t v47 = a6;
    uint64_t v48 = a3 & 1;
    char v49 = a9;
    char v50 = a10;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v51 = a4;
    char v54 = 1;
    char v55 = 0;
    uint64_t v56 = 1;
    char v57 = 0;
    double v58 = 1;
    double v59 = v25;
    uint64_t v64 = a5;
    swift_retain();
    swift_retain();
    a7(v42);
    outlined consume of OrbitEntityAction?(v22, v21, v19);
    v65[0] = a1;
    v65[2] = v22;
    v65[3] = v21;
    uint64_t v66 = v19 & 1;
    char v67 = v20;
    long long v68 = v23;
    long long v69 = v27;
    long long v70 = a6;
    long long v71 = a3 & 1;
    long long v72 = a9;
    uint64_t v73 = a10;
    uint64_t v76 = 0;
    uint64_t v74 = a4;
    char v75 = 0;
    uint64_t v77 = 1;
    uint64_t v78 = 0;
    char v79 = 1;
    char v80 = 0;
    uint64_t v81 = 1;
    char v82 = v34;
    double v83 = v37 & 1;
    double v84 = v15;
    uint64_t v85 = v31;
    uint64_t v86 = v32;
    uint64_t v87 = v28;
    char v88 = v30;
    uint64_t v89 = v29;
    char v90 = v40;
    uint64_t v91 = v39;
    char v92 = a5;
    return outlined release of ActionEvent<OrbitEntityAction>((uint64_t)v65);
  }
  return result;
}

{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  long long v26;
  long long v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void v40[3];
  __int16 v41;
  char v42;
  uint64_t v43;
  char v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  long long v55;
  long long v56;
  long long v57;
  long long v58;
  long long v59;
  uint64_t v60;
  void v61[3];
  __int16 v62;
  char v63;
  uint64_t v64;
  char v65;
  double v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void v87[2];
  __int16 v88;

  uint64_t v35 = *a2;
  uint64_t v34 = *((unsigned char *)a2 + 8);
  uint64_t v16 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  uint64_t v19 = a2[5];
  uint64_t v20 = a2[6];
  uint64_t v38 = a2[8];
  uint64_t v39 = a2[7];
  uint64_t v37 = a2[9];
  uint64_t result = specialized ActionEventData.action<A>()((uint64_t)v87);
  uint64_t v22 = v88;
  if ((_BYTE)v88 == 0xFF)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    char v29 = v18;
    long long v30 = v20;
    uint64_t v23 = v87[0];
    uint64_t v24 = v87[1];
    swift_retain();
    outlined copy of SetEntityEnabledAction?(v23, v24, v22);
    uint64_t v25 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityEnabledAction>);
    v40[1] = v23;
    _OWORD v40[2] = v24;
    uint64_t v41 = v22 & 0x101;
    char v28 = v25 & 1;
    double v42 = v25 & 1;
    v40[0] = a1;
    char v43 = a6;
    uint64_t v44 = a3 & 1;
    uint64_t v45 = a9;
    uint64_t v46 = a10;
    uint64_t v48 = 0;
    char v49 = 0;
    uint64_t v47 = a4;
    char v50 = 1;
    uint64_t v51 = 0;
    uint64_t v52 = 1;
    uint64_t v53 = 0;
    char v54 = 1;
    uint64_t v26 = *((_OWORD *)a2 + 3);
    char v57 = *((_OWORD *)a2 + 2);
    double v58 = v26;
    double v59 = *((_OWORD *)a2 + 4);
    uint64_t v27 = *((_OWORD *)a2 + 1);
    char v55 = *(_OWORD *)a2;
    uint64_t v56 = v27;
    uint64_t v60 = a5;
    swift_retain();
    swift_retain();
    a7(v40);
    outlined consume of SetEntityEnabledAction?(v23, v24, v22);
    v61[0] = a1;
    v61[1] = v23;
    v61[2] = v24;
    uint64_t v62 = v22 & 0x101;
    char v63 = v28;
    uint64_t v64 = a6;
    char v65 = a3 & 1;
    uint64_t v66 = a9;
    char v67 = a10;
    long long v69 = 0;
    long long v70 = 0;
    long long v68 = a4;
    long long v71 = 1;
    long long v72 = 0;
    uint64_t v73 = 1;
    uint64_t v74 = 0;
    char v75 = 1;
    uint64_t v76 = v35;
    uint64_t v77 = v34 & 1;
    uint64_t v78 = v16;
    char v79 = v17;
    char v80 = v29;
    uint64_t v81 = v19;
    char v82 = v30;
    double v83 = v39;
    double v84 = v38;
    uint64_t v85 = v37;
    uint64_t v86 = a5;
    return outlined release of ActionEvent<SetEntityEnabledAction>((uint64_t)v61);
  }
  return result;
}

{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  long long v26;
  long long v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void v41[4];
  char v42;
  uint64_t v43;
  char v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  long long v55;
  long long v56;
  long long v57;
  long long v58;
  long long v59;
  uint64_t v60;
  void v61[4];
  char v62;
  uint64_t v63;
  char v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  uint64_t v15 = *a2;
  uint64_t v35 = *((unsigned char *)a2 + 8);
  uint64_t v16 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  uint64_t v19 = a2[5];
  uint64_t v20 = a2[6];
  uint64_t v38 = a2[8];
  uint64_t v39 = a2[7];
  uint64_t v37 = a2[9];
  uint64_t result = specialized ActionEventData.action<A>()(&v86);
  uint64_t v22 = v87;
  if (v87)
  {
    long long v30 = v19;
    long long v31 = v18;
    uint64_t v23 = v88;
    uint64_t v24 = v86;
    swift_retain();
    outlined copy of NotificationAction?(v24, v22);
    uint64_t v25 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<NotificationAction>);
    uint64_t v26 = *(_OWORD *)a2;
    uint64_t v56 = *((_OWORD *)a2 + 1);
    uint64_t v27 = *((_OWORD *)a2 + 3);
    char v57 = *((_OWORD *)a2 + 2);
    double v58 = v27;
    double v59 = *((_OWORD *)a2 + 4);
    v41[2] = v22;
    v41[3] = v23;
    char v29 = v20;
    char v28 = v25 & 1;
    double v42 = v25 & 1;
    v41[0] = a1;
    v41[1] = v24;
    char v43 = a6;
    uint64_t v44 = a3 & 1;
    uint64_t v45 = a9;
    uint64_t v46 = a10;
    uint64_t v48 = 0;
    char v49 = 0;
    uint64_t v47 = a4;
    char v50 = 1;
    uint64_t v51 = 0;
    uint64_t v52 = 1;
    uint64_t v53 = 0;
    char v54 = 1;
    char v55 = v26;
    uint64_t v60 = a5;
    swift_retain();
    swift_retain();
    a7(v41);
    outlined consume of NotificationAction?(v24, v22);
    v61[0] = a1;
    v61[1] = v24;
    v61[2] = v22;
    v61[3] = v23;
    uint64_t v62 = v28;
    char v63 = a6;
    uint64_t v64 = a3 & 1;
    char v65 = a9;
    uint64_t v66 = a10;
    long long v68 = 0;
    long long v69 = 0;
    char v67 = a4;
    long long v70 = 1;
    long long v71 = 0;
    long long v72 = 1;
    uint64_t v73 = 0;
    uint64_t v74 = 1;
    char v75 = v15;
    uint64_t v76 = v35 & 1;
    uint64_t v77 = v16;
    uint64_t v78 = v17;
    char v79 = v31;
    char v80 = v30;
    uint64_t v81 = v29;
    char v82 = v39;
    double v83 = v38;
    double v84 = v37;
    uint64_t v85 = a5;
    return outlined release of ActionEvent<NotificationAction>((uint64_t)v61);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  return result;
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  long long v26;
  long long v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  char v41;
  uint64_t v42;
  uint64_t v44;
  unint64_t v45;
  void v48[5];
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  char v54;
  uint64_t v55;
  char v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  uint64_t v72;
  void v73[5];
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  __int16 v78;
  char v79;
  uint64_t v80;
  char v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int16 v110;

  double v42 = *a2;
  uint64_t v41 = *((unsigned char *)a2 + 8);
  uint64_t v14 = a2[3];
  char v33 = a2[5];
  uint64_t v34 = a2[4];
  uint64_t v15 = a2[7];
  char v32 = a2[6];
  uint64_t v35 = a2[8];
  uint64_t v36 = a2[2];
  uint64_t v44 = a2[9];
  uint64_t result = specialized ActionEventData.action<A>()((uint64_t)&v103);
  uint64_t v17 = v104;
  if (v104)
  {
    uint64_t v18 = v108;
    uint64_t v19 = v109;
    long long v30 = v15;
    long long v31 = v14;
    uint64_t v20 = v106;
    int v21 = v107;
    uint64_t v22 = v105;
    uint64_t v23 = v103;
    char v29 = v103;
    uint64_t v45 = v107 >> 8;
    uint64_t v24 = v110;
    swift_retain();
    outlined copy of PlayAnimationAction?(v23, v17);
    uint64_t v25 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAnimationAction>);
    uint64_t v26 = *(_OWORD *)a2;
    long long v68 = *((_OWORD *)a2 + 1);
    uint64_t v27 = *((_OWORD *)a2 + 3);
    long long v69 = *((_OWORD *)a2 + 2);
    long long v70 = v27;
    long long v71 = *((_OWORD *)a2 + 4);
    v48[2] = v17;
    v48[3] = v22;
    v48[4] = v20;
    char v49 = v21 & 1;
    char v50 = v45;
    uint64_t v51 = v18;
    uint64_t v52 = v19;
    uint64_t v53 = v24 & 0x101;
    char v28 = v25 & 1;
    char v54 = v25 & 1;
    v48[0] = a1;
    v48[1] = v29;
    char v55 = a6;
    uint64_t v38 = a3 & 1;
    uint64_t v56 = v38;
    char v57 = a9;
    double v58 = a10;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    double v59 = a4;
    uint64_t v62 = 1;
    char v63 = 0;
    uint64_t v64 = 1;
    char v65 = 0;
    uint64_t v66 = 1;
    char v67 = v26;
    long long v72 = a5;
    swift_retain();
    swift_retain();
    a7(v48);
    outlined consume of PlayAnimationAction?(v29, v17);
    v73[0] = a1;
    v73[1] = v29;
    v73[2] = v17;
    v73[3] = v22;
    v73[4] = v20;
    uint64_t v74 = v21 & 1;
    char v75 = v45;
    uint64_t v76 = v18;
    uint64_t v77 = v19;
    uint64_t v78 = v24 & 0x101;
    char v79 = v28;
    char v80 = a6;
    uint64_t v81 = v38;
    char v82 = a9;
    double v83 = a10;
    uint64_t v86 = 0;
    double v84 = a4;
    uint64_t v85 = 0;
    uint64_t v87 = 1;
    char v88 = 0;
    uint64_t v89 = 1;
    char v90 = 0;
    uint64_t v91 = 1;
    char v92 = v42;
    uint64_t v93 = v41 & 1;
    char v94 = v36;
    uint64_t v95 = v31;
    uint64_t v96 = v34;
    uint64_t v97 = v33;
    uint64_t v98 = v32;
    uint64_t v99 = v30;
    uint64_t v100 = v35;
    uint64_t v101 = v44;
    uint64_t v102 = a5;
    return outlined release of ActionEvent<PlayAnimationAction>((uint64_t)v73);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  return result;
}

void specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(void *)@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  char v41 = *((unsigned char *)a2 + 8);
  uint64_t v15 = a2[2];
  uint64_t v35 = a2[4];
  uint64_t v36 = a2[3];
  uint64_t v37 = a2[5];
  uint64_t v39 = a2[6];
  uint64_t v16 = a2[8];
  uint64_t v34 = a2[7];
  uint64_t v42 = *a2;
  uint64_t v43 = a2[9];
  specialized ActionEventData.action<A>()((uint64_t)v116);
  uint64_t v17 = v117;
  if (v117)
  {
    char v49 = v124;
    uint64_t v44 = v122;
    uint64_t v45 = v123;
    uint64_t v29 = v120;
    uint64_t v30 = v121;
    uint64_t v26 = v118;
    uint64_t v27 = v119;
    uint64_t v32 = v15;
    uint64_t v46 = a5;
    uint64_t v19 = v116[2];
    uint64_t v18 = v116[3];
    uint64_t v33 = v16;
    uint64_t v20 = v116[0];
    uint64_t v21 = v116[1];
    uint64_t v31 = v116[0];
    swift_retain();
    outlined copy of SetEntityPropertyAction<Transform>?(v20, v21, v19, v18, v17);
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Transform>>);
    long long v23 = *((_OWORD *)a2 + 4);
    long long v78 = *((_OWORD *)a2 + 3);
    long long v79 = v23;
    long long v24 = *((_OWORD *)a2 + 2);
    long long v25 = *(_OWORD *)a2;
    long long v76 = *((_OWORD *)a2 + 1);
    long long v77 = v24;
    v51[3] = v21;
    char v52 = v19 & 1;
    uint64_t v53 = v18;
    uint64_t v54 = v17;
    uint64_t v55 = v26;
    uint64_t v56 = v27;
    uint64_t v57 = v29;
    uint64_t v58 = v30;
    uint64_t v59 = v44;
    uint64_t v60 = v45;
    char v61 = v49 & 1;
    char v28 = v22 & 1;
    char v62 = v22 & 1;
    v51[2] = v31;
    v51[0] = a1;
    uint64_t v63 = a6;
    char v64 = a3 & 1;
    double v65 = a9;
    double v66 = a10;
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v67 = a4;
    char v70 = 1;
    uint64_t v71 = 0;
    char v72 = 1;
    uint64_t v73 = 0;
    char v74 = 1;
    long long v75 = v25;
    uint64_t v80 = v46;
    swift_retain();
    swift_retain();
    a7(v51);
    outlined consume of SetEntityPropertyAction<Transform>?(v31, v21, v19, v18, v17);
    v81[0] = a1;
    v81[2] = v31;
    v81[3] = v21;
    char v82 = v19 & 1;
    uint64_t v83 = v18;
    uint64_t v84 = v17;
    uint64_t v85 = v26;
    uint64_t v86 = v27;
    uint64_t v87 = v29;
    uint64_t v88 = v30;
    uint64_t v89 = v44;
    uint64_t v90 = v45;
    char v91 = v49 & 1;
    char v92 = v28;
    uint64_t v93 = a6;
    char v94 = a3 & 1;
    double v95 = a9;
    double v96 = a10;
    uint64_t v99 = 0;
    uint64_t v97 = a4;
    uint64_t v98 = 0;
    char v100 = 1;
    uint64_t v101 = 0;
    char v102 = 1;
    uint64_t v103 = 0;
    char v104 = 1;
    uint64_t v105 = v42;
    char v106 = v41 & 1;
    uint64_t v107 = v32;
    uint64_t v108 = v36;
    uint64_t v109 = v35;
    uint64_t v110 = v37;
    uint64_t v111 = v39;
    uint64_t v112 = v34;
    uint64_t v113 = v33;
    uint64_t v114 = v43;
    uint64_t v115 = v46;
    outlined release of ActionEvent<SetEntityPropertyAction<Transform>>((uint64_t)v81);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
}

{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  long long v27;
  long long v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  char v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  void v46[3];
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  uint64_t v70;
  void v71[3];
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void v101[4];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  char v41 = *a2;
  uint64_t v40 = *((unsigned char *)a2 + 8);
  uint64_t v15 = a2[2];
  uint64_t v16 = a2[5];
  uint64_t v37 = a2[4];
  uint64_t v17 = a2[7];
  uint64_t v33 = a2[6];
  uint64_t v34 = a2[3];
  uint64_t v18 = a2[8];
  uint64_t v43 = a2[9];
  specialized ActionEventData.action<A>()((uint64_t)v101);
  uint64_t v19 = v102;
  if (v102)
  {
    uint64_t v31 = v18;
    uint64_t v32 = v16;
    uint64_t v21 = v103;
    uint64_t v20 = v104;
    uint64_t v44 = a5;
    long long v23 = v101[2];
    char v22 = v101[3];
    uint64_t v30 = v15;
    long long v24 = v101[0];
    long long v25 = v101[1];
    swift_retain();
    outlined copy of SetEntityPropertyAction<String>?(v24, v25, v23, v22, v19);
    uint64_t v26 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<String>>);
    uint64_t v27 = *(_OWORD *)a2;
    double v66 = *((_OWORD *)a2 + 1);
    char v28 = *((_OWORD *)a2 + 3);
    uint64_t v67 = *((_OWORD *)a2 + 2);
    uint64_t v68 = v28;
    uint64_t v69 = *((_OWORD *)a2 + 4);
    v46[1] = v24;
    v46[2] = v25;
    uint64_t v47 = v23 & 1;
    uint64_t v48 = v22;
    char v49 = v19;
    char v50 = v21;
    uint64_t v51 = v20;
    uint64_t v29 = v26 & 1;
    char v52 = v26 & 1;
    v46[0] = a1;
    uint64_t v53 = a6;
    uint64_t v36 = a3 & 1;
    uint64_t v54 = v36;
    uint64_t v55 = a9;
    uint64_t v56 = a10;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    uint64_t v57 = a4;
    uint64_t v60 = 1;
    char v61 = 0;
    char v62 = 1;
    uint64_t v63 = 0;
    char v64 = 1;
    double v65 = v27;
    char v70 = v44;
    swift_retain();
    swift_retain();
    a7(v46);
    outlined consume of SetEntityPropertyAction<String>?(v24, v25, v23, v22, v19);
    v71[0] = a1;
    v71[1] = v24;
    v71[2] = v25;
    char v72 = v23 & 1;
    uint64_t v73 = v22;
    char v74 = v19;
    long long v75 = v21;
    long long v76 = v20;
    long long v77 = v29;
    long long v78 = a6;
    long long v79 = v36;
    uint64_t v80 = a9;
    uint64_t v81 = a10;
    uint64_t v84 = 0;
    char v82 = a4;
    uint64_t v83 = 0;
    uint64_t v85 = 1;
    uint64_t v86 = 0;
    uint64_t v87 = 1;
    uint64_t v88 = 0;
    uint64_t v89 = 1;
    uint64_t v90 = v41;
    char v91 = v40 & 1;
    char v92 = v30;
    uint64_t v93 = v34;
    char v94 = v37;
    double v95 = v32;
    double v96 = v33;
    uint64_t v97 = v17;
    uint64_t v98 = v31;
    uint64_t v99 = v43;
    char v100 = v44;
    outlined release of ActionEvent<SetEntityPropertyAction<String>>((uint64_t)v71);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
}

{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  long long v26;
  long long v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  void v43[3];
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  long long v65;
  uint64_t v66;
  void v67[3];
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  char v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void v96[4];
  uint64_t v97;
  char v98;

  uint64_t v38 = *a2;
  uint64_t v37 = *((unsigned char *)a2 + 8);
  uint64_t v15 = a2[3];
  uint64_t v34 = a2[2];
  uint64_t v16 = a2[4];
  uint64_t v17 = a2[5];
  uint64_t v18 = a2[8];
  uint64_t v31 = a2[7];
  uint64_t v32 = a2[6];
  uint64_t v40 = a2[9];
  specialized ActionEventData.action<A>()((uint64_t)v96);
  uint64_t v19 = v97;
  if (v97)
  {
    uint64_t v29 = v16;
    uint64_t v30 = v18;
    uint64_t v21 = v96[2];
    uint64_t v20 = v96[3];
    char v41 = a5;
    long long v23 = v96[0];
    char v22 = v96[1];
    long long v24 = v98;
    swift_retain();
    outlined copy of SetEntityPropertyAction<Transform>?(v23, v22, v21, v20, v19);
    long long v25 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Bool>>);
    uint64_t v26 = *(_OWORD *)a2;
    char v62 = *((_OWORD *)a2 + 1);
    uint64_t v27 = *((_OWORD *)a2 + 3);
    uint64_t v63 = *((_OWORD *)a2 + 2);
    char v64 = v27;
    double v65 = *((_OWORD *)a2 + 4);
    v43[1] = v23;
    v43[2] = v22;
    uint64_t v44 = v21 & 1;
    uint64_t v45 = v20;
    uint64_t v46 = v19;
    uint64_t v47 = v24;
    char v28 = v25 & 1;
    uint64_t v48 = v25 & 1;
    v43[0] = a1;
    char v49 = a6;
    char v50 = a3 & 1;
    uint64_t v51 = a9;
    char v52 = a10;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v53 = a4;
    uint64_t v56 = 1;
    uint64_t v57 = 0;
    uint64_t v58 = 1;
    uint64_t v59 = 0;
    uint64_t v60 = 1;
    char v61 = v26;
    double v66 = v41;
    swift_retain();
    swift_retain();
    a7(v43);
    outlined consume of SetEntityPropertyAction<Transform>?(v23, v22, v21, v20, v19);
    v67[0] = a1;
    v67[1] = v23;
    v67[2] = v22;
    uint64_t v68 = v21 & 1;
    uint64_t v69 = v20;
    char v70 = v19;
    uint64_t v71 = v24;
    char v72 = v28;
    uint64_t v73 = a6;
    char v74 = a3 & 1;
    long long v75 = a9;
    long long v76 = a10;
    long long v78 = 0;
    long long v79 = 0;
    long long v77 = a4;
    uint64_t v80 = 1;
    uint64_t v81 = 0;
    char v82 = 1;
    uint64_t v83 = 0;
    uint64_t v84 = 1;
    uint64_t v85 = v38;
    uint64_t v86 = v37 & 1;
    uint64_t v87 = v34;
    uint64_t v88 = v15;
    uint64_t v89 = v29;
    uint64_t v90 = v17;
    char v91 = v32;
    char v92 = v31;
    uint64_t v93 = v30;
    char v94 = v40;
    double v95 = v41;
    outlined release of ActionEvent<SetEntityPropertyAction<Bool>>((uint64_t)v67);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
}

{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  long long v26;
  long long v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char v42;
  uint64_t v43;
  uint64_t v45;
  int v46;
  uint64_t v47;
  void v49[3];
  char v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  uint64_t v73;
  void v74[3];
  char v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char v79;
  char v80;
  uint64_t v81;
  char v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void v104[4];
  uint64_t v105;
  int v106;
  char v107;

  uint64_t v43 = *a2;
  uint64_t v42 = *((unsigned char *)a2 + 8);
  uint64_t v39 = a2[2];
  uint64_t v15 = a2[4];
  uint64_t v16 = a2[5];
  uint64_t v36 = a2[3];
  uint64_t v37 = a2[6];
  uint64_t v17 = a2[7];
  uint64_t v18 = a2[8];
  uint64_t v45 = a2[9];
  specialized ActionEventData.action<A>()((uint64_t)v104);
  uint64_t v19 = v105;
  if (v105)
  {
    uint64_t v46 = v106;
    uint64_t v47 = a5;
    uint64_t v33 = v16;
    uint64_t v34 = v15;
    uint64_t v35 = v18;
    uint64_t v20 = v104[2];
    uint64_t v21 = v104[3];
    long long v23 = v104[0];
    char v22 = v104[1];
    uint64_t v32 = v104[0];
    long long v24 = v107 & 1;
    uint64_t v30 = v107 & 1;
    swift_retain();
    uint64_t v29 = v20;
    outlined copy of SetEntityPropertyAction<Transform>?(v23, v22, v20, v21, v19);
    long long v25 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Float>>);
    uint64_t v26 = *(_OWORD *)a2;
    uint64_t v69 = *((_OWORD *)a2 + 1);
    uint64_t v27 = *((_OWORD *)a2 + 3);
    char v70 = *((_OWORD *)a2 + 2);
    uint64_t v71 = v27;
    char v72 = *((_OWORD *)a2 + 4);
    LOBYTE(v20) = v20 & 1;
    char v50 = v20;
    uint64_t v51 = v21;
    char v52 = v19;
    uint64_t v53 = v46;
    uint64_t v54 = v24;
    uint64_t v31 = v17;
    char v28 = v25 & 1;
    uint64_t v55 = v25 & 1;
    v49[1] = v32;
    v49[2] = v22;
    v49[0] = a1;
    uint64_t v56 = a6;
    uint64_t v57 = a3 & 1;
    uint64_t v58 = a9;
    uint64_t v59 = a10;
    char v61 = 0;
    char v62 = 0;
    uint64_t v60 = a4;
    uint64_t v63 = 1;
    char v64 = 0;
    double v65 = 1;
    double v66 = 0;
    uint64_t v67 = 1;
    uint64_t v68 = v26;
    uint64_t v73 = v47;
    swift_retain();
    swift_retain();
    a7(v49);
    outlined consume of SetEntityPropertyAction<Transform>?(v32, v22, v29, v21, v19);
    v74[0] = a1;
    v74[1] = v32;
    v74[2] = v22;
    long long v75 = v20;
    long long v76 = v21;
    long long v77 = v19;
    long long v78 = v46;
    long long v79 = v30;
    uint64_t v80 = v28;
    uint64_t v81 = a6;
    char v82 = a3 & 1;
    uint64_t v83 = a9;
    uint64_t v84 = a10;
    uint64_t v87 = 0;
    uint64_t v85 = a4;
    uint64_t v86 = 0;
    uint64_t v88 = 1;
    uint64_t v89 = 0;
    uint64_t v90 = 1;
    char v91 = 0;
    char v92 = 1;
    uint64_t v93 = v43;
    char v94 = v42 & 1;
    double v95 = v39;
    double v96 = v36;
    uint64_t v97 = v34;
    uint64_t v98 = v33;
    uint64_t v99 = v37;
    char v100 = v31;
    uint64_t v101 = v35;
    char v102 = v45;
    uint64_t v103 = v47;
    outlined release of ActionEvent<SetEntityPropertyAction<Bool>>((uint64_t)v74);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
}

{
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v48;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void v57[3];
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  __int16 v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  long long v86;
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  uint64_t v91;
  void v92[3];
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  __int16 v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  double v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void v132[8];
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  char v50 = *a2;
  uint64_t v51 = *((unsigned char *)a2 + 8);
  uint64_t v44 = a2[3];
  uint64_t v45 = a2[2];
  uint64_t v46 = a2[4];
  char v41 = a2[5];
  uint64_t v42 = a2[6];
  uint64_t v43 = a2[7];
  uint64_t v40 = a2[8];
  char v52 = a2[9];
  specialized ActionEventData.action<A>()(&demangling cache variable for type metadata for EntityActionWrapper<FromToByAction<SIMD2<Float>>>, &demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>, (uint64_t)v132);
  if (v137 == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t v32 = v138;
    uint64_t v14 = v135;
    uint64_t v15 = v136;
    uint64_t v16 = v133;
    uint64_t v17 = v132[7];
    uint64_t v26 = v134;
    uint64_t v27 = v132[6];
    uint64_t v36 = v132[4];
    uint64_t v37 = v136;
    uint64_t v18 = v132[2];
    uint64_t v34 = v132[5];
    uint64_t v35 = v132[3];
    uint64_t v38 = a1;
    uint64_t v39 = HIDWORD(v133);
    uint64_t v29 = v133;
    uint64_t v30 = v135;
    uint64_t v19 = v132[0];
    uint64_t v20 = v132[1];
    uint64_t v33 = v132[0];
    uint64_t v21 = v137;
    uint64_t v31 = v137;
    swift_retain();
    outlined copy of FromToByAction<Double>?(v19, v20, v18, v35, v36, v34, v27, v17, v16, v26, v14, v15, v21);
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<SIMD2<Float>>>);
    long long v23 = *((_OWORD *)a2 + 4);
    long long v24 = *((_OWORD *)a2 + 2);
    uint64_t v89 = *((_OWORD *)a2 + 3);
    uint64_t v90 = v23;
    uint64_t v88 = v24;
    long long v25 = *(_OWORD *)a2;
    uint64_t v87 = *((_OWORD *)a2 + 1);
    uint64_t v58 = v20 & 1;
    uint64_t v59 = v18;
    uint64_t v60 = v35 & 1;
    char v61 = v36;
    char v62 = v34 & 1;
    uint64_t v63 = v27;
    char v64 = v17;
    double v65 = v29;
    double v66 = v39;
    uint64_t v67 = v26;
    uint64_t v68 = v30;
    uint64_t v69 = v37 & 0x1FF;
    char v70 = BYTE2(v37) & 1;
    uint64_t v71 = v31;
    char v72 = v32;
    char v28 = v22 & 1;
    uint64_t v73 = v22 & 1;
    v57[2] = v33;
    v57[0] = v38;
    char v74 = a6;
    uint64_t v48 = a3 & 1;
    long long v75 = v48;
    long long v76 = a9;
    long long v77 = a10;
    uint64_t v80 = 0;
    long long v78 = a4;
    long long v79 = 0;
    uint64_t v81 = 1;
    char v82 = 0;
    uint64_t v83 = 1;
    uint64_t v84 = 0;
    uint64_t v85 = 1;
    uint64_t v86 = v25;
    char v91 = a5;
    swift_retain();
    swift_retain();
    a7(v57);
    outlined consume of FromToByAction<Double>?(v33, v20, v18, v35, v36, v34, v27, v17, v29, v26, v30, v37, v31);
    v92[0] = v38;
    v92[2] = v33;
    uint64_t v93 = v20 & 1;
    char v94 = v18;
    double v95 = v35 & 1;
    double v96 = v36;
    uint64_t v97 = v34 & 1;
    uint64_t v98 = v27;
    uint64_t v99 = v17;
    char v100 = v29;
    uint64_t v101 = v39;
    char v102 = v26;
    uint64_t v103 = v30;
    char v104 = v37 & 0x1FF;
    uint64_t v105 = BYTE2(v37) & 1;
    char v106 = v31;
    uint64_t v107 = v32;
    uint64_t v108 = v28;
    uint64_t v109 = a6;
    uint64_t v110 = v48;
    uint64_t v111 = a9;
    uint64_t v112 = a10;
    uint64_t v115 = 0;
    uint64_t v113 = a4;
    uint64_t v114 = 0;
    v116 = 1;
    uint64_t v117 = 0;
    uint64_t v118 = 1;
    uint64_t v119 = 0;
    uint64_t v120 = 1;
    uint64_t v121 = v50;
    uint64_t v122 = v51 & 1;
    uint64_t v123 = v45;
    char v124 = v44;
    v125 = v46;
    v126 = v41;
    v127 = v42;
    v128 = v43;
    v129 = v40;
    v130 = v52;
    v131 = a5;
    outlined release of ActionEvent<FromToByAction<SIMD2<Float>>>((uint64_t)v92);
  }
}

{
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  long long v23;
  long long v24;
  long long v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v48;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void v57[3];
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  __int16 v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  long long v86;
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  uint64_t v91;
  void v92[3];
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  __int16 v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  double v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void v132[8];
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  char v50 = *a2;
  uint64_t v51 = *((unsigned char *)a2 + 8);
  uint64_t v44 = a2[3];
  uint64_t v45 = a2[2];
  uint64_t v46 = a2[4];
  char v41 = a2[5];
  uint64_t v42 = a2[6];
  uint64_t v43 = a2[7];
  uint64_t v40 = a2[8];
  char v52 = a2[9];
  specialized ActionEventData.action<A>()(&demangling cache variable for type metadata for EntityActionWrapper<FromToByAction<Double>>, &demangling cache variable for type metadata for FromToByAction<Double>, (uint64_t)v132);
  if (v137 == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t v32 = v138;
    uint64_t v14 = v135;
    uint64_t v15 = v136;
    uint64_t v16 = v133;
    uint64_t v17 = v132[7];
    uint64_t v26 = v134;
    uint64_t v27 = v132[6];
    uint64_t v36 = v132[4];
    uint64_t v37 = v136;
    uint64_t v18 = v132[2];
    uint64_t v34 = v132[5];
    uint64_t v35 = v132[3];
    uint64_t v38 = a1;
    uint64_t v39 = HIDWORD(v133);
    uint64_t v29 = v133;
    uint64_t v30 = v135;
    uint64_t v19 = v132[0];
    uint64_t v20 = v132[1];
    uint64_t v33 = v132[0];
    uint64_t v21 = v137;
    uint64_t v31 = v137;
    swift_retain();
    outlined copy of FromToByAction<Double>?(v19, v20, v18, v35, v36, v34, v27, v17, v16, v26, v14, v15, v21);
    char v22 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Double>>);
    long long v23 = *((_OWORD *)a2 + 4);
    long long v24 = *((_OWORD *)a2 + 2);
    uint64_t v89 = *((_OWORD *)a2 + 3);
    uint64_t v90 = v23;
    uint64_t v88 = v24;
    long long v25 = *(_OWORD *)a2;
    uint64_t v87 = *((_OWORD *)a2 + 1);
    uint64_t v58 = v20 & 1;
    uint64_t v59 = v18;
    uint64_t v60 = v35 & 1;
    char v61 = v36;
    char v62 = v34 & 1;
    uint64_t v63 = v27;
    char v64 = v17;
    double v65 = v29;
    double v66 = v39;
    uint64_t v67 = v26;
    uint64_t v68 = v30;
    uint64_t v69 = v37 & 0x1FF;
    char v70 = BYTE2(v37) & 1;
    uint64_t v71 = v31;
    char v72 = v32;
    char v28 = v22 & 1;
    uint64_t v73 = v22 & 1;
    v57[2] = v33;
    v57[0] = v38;
    char v74 = a6;
    uint64_t v48 = a3 & 1;
    long long v75 = v48;
    long long v76 = a9;
    long long v77 = a10;
    uint64_t v80 = 0;
    long long v78 = a4;
    long long v79 = 0;
    uint64_t v81 = 1;
    char v82 = 0;
    uint64_t v83 = 1;
    uint64_t v84 = 0;
    uint64_t v85 = 1;
    uint64_t v86 = v25;
    char v91 = a5;
    swift_retain();
    swift_retain();
    a7(v57);
    outlined consume of FromToByAction<Double>?(v33, v20, v18, v35, v36, v34, v27, v17, v29, v26, v30, v37, v31);
    v92[0] = v38;
    v92[2] = v33;
    uint64_t v93 = v20 & 1;
    char v94 = v18;
    double v95 = v35 & 1;
    double v96 = v36;
    uint64_t v97 = v34 & 1;
    uint64_t v98 = v27;
    uint64_t v99 = v17;
    char v100 = v29;
    uint64_t v101 = v39;
    char v102 = v26;
    uint64_t v103 = v30;
    char v104 = v37 & 0x1FF;
    uint64_t v105 = BYTE2(v37) & 1;
    char v106 = v31;
    uint64_t v107 = v32;
    uint64_t v108 = v28;
    uint64_t v109 = a6;
    uint64_t v110 = v48;
    uint64_t v111 = a9;
    uint64_t v112 = a10;
    uint64_t v115 = 0;
    uint64_t v113 = a4;
    uint64_t v114 = 0;
    v116 = 1;
    uint64_t v117 = 0;
    uint64_t v118 = 1;
    uint64_t v119 = 0;
    uint64_t v120 = 1;
    uint64_t v121 = v50;
    uint64_t v122 = v51 & 1;
    uint64_t v123 = v45;
    char v124 = v44;
    v125 = v46;
    v126 = v41;
    v127 = v42;
    v128 = v43;
    v129 = v40;
    v130 = v52;
    v131 = a5;
    outlined release of ActionEvent<FromToByAction<SIMD2<Float>>>((uint64_t)v92);
  }
}

void specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(void *)@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, uint64_t *a11, uint64_t *a12, uint64_t *a13)
{
  char v42 = *((unsigned char *)a2 + 8);
  uint64_t v17 = a2[2];
  uint64_t v39 = a2[4];
  uint64_t v18 = a2[6];
  uint64_t v35 = a2[5];
  uint64_t v36 = a2[3];
  uint64_t v19 = a2[7];
  uint64_t v45 = a2[8];
  uint64_t v43 = *a2;
  uint64_t v44 = a2[9];
  specialized ActionEventData.action<A>()(a11, a12, (uint64_t)v107);
  uint64_t v20 = v108;
  if (v108)
  {
    char v21 = v111;
    uint64_t v22 = v109;
    uint64_t v23 = v110;
    uint64_t v33 = v17;
    uint64_t v46 = a5;
    uint64_t v25 = v107[2];
    uint64_t v24 = v107[3];
    uint64_t v34 = v19;
    uint64_t v26 = v107[0];
    uint64_t v27 = v107[1];
    uint64_t v32 = v107[0];
    swift_retain();
    outlined copy of SetEntityPropertyAction<Transform>?(v26, v27, v25, v24, v20);
    char v28 = specialized ActionEventData.parameter<A>(type:)(a13);
    long long v29 = *(_OWORD *)a2;
    long long v71 = *((_OWORD *)a2 + 1);
    long long v30 = *((_OWORD *)a2 + 3);
    long long v72 = *((_OWORD *)a2 + 2);
    long long v73 = v30;
    long long v74 = *((_OWORD *)a2 + 4);
    char v51 = v25 & 1;
    uint64_t v52 = v24;
    uint64_t v53 = v20;
    uint64_t v54 = v22;
    uint64_t v55 = v23;
    char v56 = v21 & 1;
    char v31 = v28 & 1;
    char v57 = v28 & 1;
    v50[2] = v32;
    v50[3] = v27;
    v50[0] = a1;
    uint64_t v58 = a6;
    char v38 = a3 & 1;
    char v59 = v38;
    double v60 = a9;
    double v61 = a10;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v62 = a4;
    char v65 = 1;
    uint64_t v66 = 0;
    char v67 = 1;
    uint64_t v68 = 0;
    char v69 = 1;
    long long v70 = v29;
    uint64_t v75 = v46;
    swift_retain();
    swift_retain();
    a7(v50);
    outlined consume of SetEntityPropertyAction<Transform>?(v32, v27, v25, v24, v20);
    v76[0] = a1;
    v76[2] = v32;
    v76[3] = v27;
    char v77 = v25 & 1;
    uint64_t v78 = v24;
    uint64_t v79 = v20;
    uint64_t v80 = v22;
    uint64_t v81 = v23;
    char v82 = v21 & 1;
    char v83 = v31;
    uint64_t v84 = a6;
    char v85 = v38;
    double v86 = a9;
    double v87 = a10;
    uint64_t v90 = 0;
    uint64_t v88 = a4;
    uint64_t v89 = 0;
    char v91 = 1;
    uint64_t v92 = 0;
    char v93 = 1;
    uint64_t v94 = 0;
    char v95 = 1;
    uint64_t v96 = v43;
    char v97 = v42 & 1;
    uint64_t v98 = v33;
    uint64_t v99 = v36;
    uint64_t v100 = v39;
    uint64_t v101 = v35;
    uint64_t v102 = v18;
    uint64_t v103 = v34;
    uint64_t v104 = v45;
    uint64_t v105 = v44;
    uint64_t v106 = v46;
    outlined release of ActionEvent<SetEntityPropertyAction<simd_quatf>>((uint64_t)v76);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  long long v32;
  long long v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void v51[3];
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  long long v74;
  uint64_t v75;
  void v76[3];
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  char v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void v106[4];
  uint64_t v107;
  uint64_t v108;
  char v109;

  uint64_t v45 = *((unsigned char *)a2 + 8);
  uint64_t v18 = a2[2];
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[4];
  char v21 = a2[5];
  uint64_t v22 = a2[6];
  uint64_t v23 = a2[7];
  uint64_t v48 = a2[8];
  uint64_t v46 = *a2;
  uint64_t v47 = a2[9];
  specialized ActionEventData.action<A>()(a11, a12, (uint64_t)v106);
  uint64_t v24 = v107;
  if (v107)
  {
    char v38 = v21;
    uint64_t v39 = v23;
    uint64_t v25 = v108;
    uint64_t v36 = v19;
    uint64_t v37 = v22;
    uint64_t v26 = v106[2];
    uint64_t v27 = v106[3];
    char v49 = a5;
    char v28 = v106[0];
    long long v29 = v106[1];
    uint64_t v35 = v18;
    long long v30 = v109;
    swift_retain();
    outlined copy of SetEntityPropertyAction<Transform>?(v28, v29, v26, v27, v24);
    char v31 = specialized ActionEventData.parameter<A>(type:)(a13);
    v51[1] = v28;
    v51[2] = v29;
    uint64_t v52 = v26 & 1;
    uint64_t v53 = v27;
    uint64_t v54 = v24;
    uint64_t v55 = v25;
    char v56 = v30 & 1;
    uint64_t v34 = v31 & 1;
    char v57 = v31 & 1;
    v51[0] = a1;
    uint64_t v58 = a6;
    char v41 = a3 & 1;
    char v59 = v41;
    double v60 = a9;
    double v61 = a10;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v62 = a4;
    char v65 = 1;
    uint64_t v66 = 0;
    char v67 = 1;
    uint64_t v68 = 0;
    char v69 = 1;
    uint64_t v32 = *((_OWORD *)a2 + 3);
    long long v72 = *((_OWORD *)a2 + 2);
    long long v73 = v32;
    long long v74 = *((_OWORD *)a2 + 4);
    uint64_t v33 = *((_OWORD *)a2 + 1);
    long long v70 = *(_OWORD *)a2;
    long long v71 = v33;
    uint64_t v75 = v49;
    swift_retain();
    swift_retain();
    a7(v51);
    outlined consume of SetEntityPropertyAction<Transform>?(v28, v29, v26, v27, v24);
    v76[0] = a1;
    v76[1] = v28;
    v76[2] = v29;
    char v77 = v26 & 1;
    uint64_t v78 = v27;
    uint64_t v79 = v24;
    uint64_t v80 = v25;
    uint64_t v81 = v30 & 1;
    char v82 = v34;
    char v83 = a6;
    uint64_t v84 = v41;
    char v85 = a9;
    double v86 = a10;
    uint64_t v89 = 0;
    double v87 = a4;
    uint64_t v88 = 0;
    uint64_t v90 = 1;
    char v91 = 0;
    uint64_t v92 = 1;
    char v93 = 0;
    uint64_t v94 = 1;
    char v95 = v46;
    uint64_t v96 = v45 & 1;
    char v97 = v35;
    uint64_t v98 = v36;
    uint64_t v99 = v20;
    uint64_t v100 = v38;
    uint64_t v101 = v37;
    uint64_t v102 = v39;
    uint64_t v103 = v48;
    uint64_t v104 = v47;
    uint64_t v105 = v49;
    outlined release of ActionEvent<PlayAudioAction>((uint64_t)v76);
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
}

{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  long long v26;
  long long v27;
  long long v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void v56[8];
  int v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  double v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  uint64_t v83;
  void v84[8];
  int v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  __int16 v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  double v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void v117[3];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  uint64_t v47 = *((unsigned char *)a2 + 8);
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[5];
  uint64_t v39 = a2[4];
  uint64_t v40 = a2[6];
  char v41 = a2[7];
  char v42 = a2[2];
  char v50 = a2[8];
  uint64_t v48 = *a2;
  char v49 = a2[9];
  specialized ActionEventData.action<A>()(a11, a12, (uint64_t)v117);
  uint64_t v18 = v117[0];
  if (v117[0] == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    long long v30 = v126;
    uint64_t v32 = v17;
    uint64_t v33 = v16;
    uint64_t v19 = v124;
    uint64_t v36 = v124;
    uint64_t v37 = v125;
    char v51 = v123;
    uint64_t v20 = v121;
    char v21 = v119;
    uint64_t v34 = v120;
    uint64_t v35 = v122;
    uint64_t v22 = v117[2];
    uint64_t v23 = v118;
    char v31 = v118;
    char v38 = HIDWORD(v121);
    uint64_t v24 = v117[1];
    swift_retain();
    outlined copy of FromToByAction<BlendShapeWeights>?(v18, v24, v22, v23, v21, v34, v20, v35, v51, v19);
    uint64_t v25 = specialized ActionEventData.parameter<A>(type:)(a13);
    uint64_t v26 = *((_OWORD *)a2 + 4);
    uint64_t v81 = *((_OWORD *)a2 + 3);
    char v82 = v26;
    uint64_t v27 = *((_OWORD *)a2 + 2);
    char v28 = *(_OWORD *)a2;
    uint64_t v79 = *((_OWORD *)a2 + 1);
    uint64_t v80 = v27;
    v56[3] = v24;
    v56[4] = v22;
    v56[6] = v21;
    v56[7] = v34;
    char v57 = v20;
    uint64_t v58 = v38;
    char v59 = v35;
    double v60 = v51;
    double v61 = v36 & 0x1FF;
    uint64_t v62 = BYTE2(v36) & 1;
    uint64_t v63 = v37;
    uint64_t v64 = v30;
    long long v29 = v25 & 1;
    char v65 = v25 & 1;
    v56[2] = v18;
    v56[0] = a1;
    uint64_t v66 = a6;
    uint64_t v44 = a3 & 1;
    char v67 = v44;
    uint64_t v68 = a9;
    char v69 = a10;
    long long v71 = 0;
    long long v72 = 0;
    long long v70 = a4;
    long long v73 = 1;
    long long v74 = 0;
    uint64_t v75 = 1;
    long long v76 = 0;
    char v77 = 1;
    uint64_t v78 = v28;
    char v83 = a5;
    swift_retain();
    swift_retain();
    a7(v56);
    outlined consume of FromToByAction<BlendShapeWeights>?(v18, v24, v22, v31, v21, v34, v20, v35, v51, v36);
    v84[0] = a1;
    v84[2] = v18;
    v84[3] = v24;
    v84[4] = v22;
    v84[6] = v21;
    v84[7] = v34;
    char v85 = v20;
    double v86 = v38;
    double v87 = v35;
    uint64_t v88 = v51;
    uint64_t v89 = v36 & 0x1FF;
    uint64_t v90 = BYTE2(v36) & 1;
    char v91 = v37;
    uint64_t v92 = v30;
    char v93 = v29;
    uint64_t v94 = a6;
    char v95 = v44;
    uint64_t v96 = a9;
    char v97 = a10;
    uint64_t v100 = 0;
    uint64_t v98 = a4;
    uint64_t v99 = 0;
    uint64_t v101 = 1;
    uint64_t v102 = 0;
    uint64_t v103 = 1;
    uint64_t v104 = 0;
    uint64_t v105 = 1;
    uint64_t v106 = v48;
    uint64_t v107 = v47 & 1;
    uint64_t v108 = v42;
    uint64_t v109 = v33;
    uint64_t v110 = v39;
    char v111 = v32;
    uint64_t v112 = v40;
    uint64_t v113 = v41;
    uint64_t v114 = v50;
    uint64_t v115 = v49;
    v116 = a5;
    outlined release of ActionEvent<FromToByAction<BlendShapeWeights>>((uint64_t)v84);
  }
}

void specialized creationWrapper #1 <A>(playbackController:eventData:reversed:startTime:duration:engine:instanceID:targetEntity:) in static ActionHandlerProtocol.__registerCommon(engine:_:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t *)@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v54 = *a2;
  char v53 = *((unsigned char *)a2 + 8);
  uint64_t v46 = a2[2];
  uint64_t v47 = a2[3];
  uint64_t v48 = a2[4];
  uint64_t v50 = a2[5];
  uint64_t v15 = a2[7];
  uint64_t v45 = a2[6];
  uint64_t v16 = a2[8];
  uint64_t v56 = a2[9];
  specialized ActionEventData.action<A>()((uint64_t)&v136);
  uint64_t v17 = v146;
  if (v146 == 1)
  {
    *(void *)(a8 + 32) = 0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    char v34 = a3;
    unsigned __int8 v18 = v145;
    int v39 = v145;
    uint64_t v40 = v147;
    uint64_t v19 = v143;
    uint64_t v36 = v16;
    uint64_t v37 = v144;
    uint64_t v20 = v139;
    uint64_t v32 = v142;
    uint64_t v33 = v139;
    uint64_t v51 = a5;
    uint64_t v22 = v136;
    uint64_t v21 = v137;
    uint64_t v35 = v15;
    uint64_t v23 = v142;
    uint64_t v43 = HIDWORD(v136) & 1;
    unint64_t v44 = HIDWORD(v142);
    uint64_t v31 = v136;
    uint64_t v41 = HIDWORD(v138) & 1;
    uint64_t v42 = HIDWORD(v137) & 1;
    uint64_t v24 = v138;
    uint64_t v25 = v140;
    uint64_t v38 = v141;
    swift_retain();
    outlined copy of FromToByAction<Float>?(v22, v21, v24, v20, v25, v38, v23, v19, v37, v18, v17);
    char v26 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Float>>);
    long long v27 = *((_OWORD *)a2 + 4);
    long long v28 = *((_OWORD *)a2 + 2);
    long long v92 = *((_OWORD *)a2 + 3);
    long long v93 = v27;
    long long v91 = v28;
    long long v29 = *(_OWORD *)a2;
    long long v90 = *((_OWORD *)a2 + 1);
    int v60 = v31;
    char v61 = v43;
    int v62 = v21;
    char v63 = v42;
    int v64 = v24;
    char v65 = v41;
    uint64_t v66 = v25;
    uint64_t v67 = v38;
    int v68 = v32;
    char v69 = v44;
    uint64_t v70 = v19;
    uint64_t v71 = v37;
    __int16 v72 = v39 & 0x1FF;
    char v73 = BYTE2(v39) & 1;
    uint64_t v74 = v17;
    uint64_t v75 = v40;
    char v30 = v26 & 1;
    char v76 = v26 & 1;
    uint64_t v59 = a1;
    uint64_t v77 = a6;
    v34 &= 1u;
    char v78 = v34;
    double v79 = a9;
    double v80 = a10;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v81 = a4;
    char v84 = 1;
    uint64_t v85 = 0;
    char v86 = 1;
    uint64_t v87 = 0;
    char v88 = 1;
    long long v89 = v29;
    uint64_t v94 = v51;
    swift_retain();
    swift_retain();
    a7(&v59);
    outlined consume of FromToByAction<Float>?(v31, v21, v24, v33, v25, v38, v32, v19, v37, v39, v17);
    uint64_t v95 = a1;
    int v96 = v31;
    char v97 = v43;
    int v98 = v21;
    char v99 = v42;
    int v100 = v24;
    char v101 = v41;
    uint64_t v102 = v25;
    uint64_t v103 = v38;
    int v104 = v32;
    char v105 = v44;
    uint64_t v106 = v19;
    uint64_t v107 = v37;
    __int16 v108 = v39 & 0x1FF;
    char v109 = BYTE2(v39) & 1;
    uint64_t v110 = v17;
    uint64_t v111 = v40;
    char v112 = v30;
    uint64_t v113 = a6;
    char v114 = v34;
    double v115 = a9;
    double v116 = a10;
    uint64_t v119 = 0;
    uint64_t v117 = a4;
    uint64_t v118 = 0;
    char v120 = 1;
    uint64_t v121 = 0;
    char v122 = 1;
    uint64_t v123 = 0;
    char v124 = 1;
    uint64_t v125 = v54;
    char v126 = v53 & 1;
    uint64_t v127 = v46;
    uint64_t v128 = v47;
    uint64_t v129 = v48;
    uint64_t v130 = v50;
    uint64_t v131 = v45;
    uint64_t v132 = v35;
    uint64_t v133 = v36;
    uint64_t v134 = v56;
    uint64_t v135 = v51;
    outlined release of ActionEvent<FromToByAction<Float>>((uint64_t)&v95);
  }
}

uint64_t specialized static ActionHandlerProtocol.actionHandler(_:)(uint64_t *a1)
{
  void (*v11)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v12;
  long long v13;
  long long v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  unsigned char v34[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[24];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v32);
  }
  else
  {
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v26 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v6)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for EmphasizeAction),
          (v10 & 1) == 0))
    {
      swift_endAccess();
      outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      return 0;
    }
    uint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v9);
    swift_endAccess();
    uint64_t v12 = *a1;
    uint64_t v13 = *((_OWORD *)a1 + 10);
    long long v27 = *((_OWORD *)a1 + 9);
    long long v28 = v13;
    long long v29 = *((_OWORD *)a1 + 11);
    uint64_t v14 = *((_OWORD *)a1 + 8);
    uint64_t v25 = *((_OWORD *)a1 + 7);
    char v26 = v14;
    uint64_t v15 = *((unsigned char *)a1 + 24);
    uint64_t v16 = a1[4];
    uint64_t v17 = a1[5];
    unsigned __int8 v18 = a1[6];
    outlined init with take of Transform?((uint64_t)(a1 + 2), (uint64_t)v34, &demangling cache variable for type metadata for Entity?);
    char v30 = v12;
    uint64_t v24 = v15;
    uint64_t v22 = v17;
    uint64_t v23 = v16;
    uint64_t v20 = v2;
    uint64_t v21 = v18;
    outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v19, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v11(&v31, &v30, &v25, &v24, &v23, &v22, &v21, &v20, &v19);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)&v31, (uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (swift_dynamicCast()) {
    return v31;
  }
  else {
    return 0;
  }
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v12;
  long long v13;
  long long v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  unsigned char v34[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[30];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v32);
  }
  else
  {
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v26 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v6)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAudioAction),
          (v10 & 1) == 0))
    {
      swift_endAccess();
      outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      return 1;
    }
    uint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v9);
    swift_endAccess();
    uint64_t v12 = *a1;
    uint64_t v13 = *((_OWORD *)a1 + 13);
    long long v27 = *((_OWORD *)a1 + 12);
    long long v28 = v13;
    long long v29 = *((_OWORD *)a1 + 14);
    uint64_t v14 = *((_OWORD *)a1 + 11);
    uint64_t v25 = *((_OWORD *)a1 + 10);
    char v26 = v14;
    uint64_t v15 = *((unsigned char *)a1 + 72);
    uint64_t v16 = a1[10];
    uint64_t v17 = a1[11];
    unsigned __int8 v18 = a1[12];
    outlined init with take of Transform?((uint64_t)(a1 + 8), (uint64_t)v34, &demangling cache variable for type metadata for Entity?);
    char v30 = v12;
    uint64_t v24 = v15;
    uint64_t v22 = v17;
    uint64_t v23 = v16;
    uint64_t v20 = v2;
    uint64_t v21 = v18;
    outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v19, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v11(&v31, &v30, &v25, &v24, &v23, &v22, &v21, &v20, &v19);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)&v31, (uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (swift_dynamicCast()) {
    return v31;
  }
  else {
    return 1;
  }
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void (*v12)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v13;
  long long v14;
  long long v15;
  long long v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  uint64_t v32;
  void v33[5];
  _OWORD v34[2];
  uint64_t v35;
  unsigned char v36[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[37];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v34);
  }
  else
  {
    uint64_t v35 = 0;
    memset(v34, 0, sizeof(v34));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v34, (uint64_t)&v27, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v28 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v27, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v6) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    unint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
    char v10 = specialized __RawDictionaryStorage.find<A>(_:)(v9);
    if (v11)
    {
      uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v10);
      swift_endAccess();
      uint64_t v13 = *a1;
      uint64_t v14 = *(_OWORD *)(a1 + 33);
      uint64_t v15 = *(_OWORD *)(a1 + 35);
      long long v29 = *(_OWORD *)(a1 + 31);
      char v30 = v14;
      uint64_t v16 = *(_OWORD *)(a1 + 29);
      uint64_t v31 = v15;
      long long v27 = *(_OWORD *)(a1 + 27);
      long long v28 = v16;
      uint64_t v17 = *((unsigned char *)a1 + 128);
      unsigned __int8 v18 = a1[17];
      uint64_t v19 = a1[18];
      uint64_t v20 = a1[19];
      outlined init with take of Transform?((uint64_t)(a1 + 15), (uint64_t)v36, &demangling cache variable for type metadata for Entity?);
      uint64_t v32 = v13;
      char v26 = v17;
      uint64_t v24 = v19;
      uint64_t v25 = v18;
      uint64_t v22 = v2;
      uint64_t v23 = v20;
      outlined init with take of Transform?((uint64_t)v36, (uint64_t)&v21, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v12(v33, &v32, &v27, &v26, &v25, &v24, &v23, &v22, &v21);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v34, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v33, (uint64_t)v34, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v27, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<Transform>);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v34, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void (*v12)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v13;
  long long v14;
  long long v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  uint64_t v31;
  void v32[5];
  _OWORD v33[2];
  uint64_t v34;
  unsigned char v35[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[31];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v33);
  }
  else
  {
    char v34 = 0;
    memset(v33, 0, sizeof(v33));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v33, (uint64_t)&v26, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v27 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v26, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v6) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    unint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
    char v10 = specialized __RawDictionaryStorage.find<A>(_:)(v9);
    if (v11)
    {
      uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v10);
      swift_endAccess();
      uint64_t v13 = *a1;
      uint64_t v14 = *(_OWORD *)(a1 + 23);
      uint64_t v15 = *(_OWORD *)(a1 + 27);
      long long v28 = *(_OWORD *)(a1 + 25);
      long long v29 = v15;
      char v30 = *(_OWORD *)(a1 + 29);
      char v26 = *(_OWORD *)(a1 + 21);
      long long v27 = v14;
      uint64_t v16 = *((unsigned char *)a1 + 80);
      uint64_t v17 = a1[11];
      unsigned __int8 v18 = a1[12];
      uint64_t v19 = a1[13];
      outlined init with take of Transform?((uint64_t)(a1 + 9), (uint64_t)v35, &demangling cache variable for type metadata for Entity?);
      uint64_t v31 = v13;
      uint64_t v25 = v16;
      uint64_t v23 = v18;
      uint64_t v24 = v17;
      uint64_t v21 = v2;
      uint64_t v22 = v19;
      outlined init with take of Transform?((uint64_t)v35, (uint64_t)&v20, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v12(v32, &v31, &v26, &v25, &v24, &v23, &v22, &v21, &v20);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v32, (uint64_t)v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v33, (uint64_t)&v26, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyActionHandler<String>);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void (*v12)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v13;
  long long v14;
  long long v15;
  long long v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35;
  unsigned char v36[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[37];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v34);
  }
  else
  {
    uint64_t v35 = 0;
    memset(v34, 0, sizeof(v34));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v34, (uint64_t)&v27, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v28 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v27, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v6)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (unint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>),
          char v10 = specialized __RawDictionaryStorage.find<A>(_:)(v9),
          (v11 & 1) == 0))
    {
      swift_endAccess();
      outlined destroy of BodyTrackingComponent?((uint64_t)v34, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      return 0;
    }
    uint64_t v12 = *(void (**)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v10);
    swift_endAccess();
    uint64_t v13 = *a1;
    uint64_t v14 = *(_OWORD *)(a1 + 33);
    uint64_t v15 = *(_OWORD *)(a1 + 35);
    long long v29 = *(_OWORD *)(a1 + 31);
    char v30 = v14;
    uint64_t v16 = *(_OWORD *)(a1 + 29);
    uint64_t v31 = v15;
    long long v27 = *(_OWORD *)(a1 + 27);
    long long v28 = v16;
    uint64_t v17 = *((unsigned char *)a1 + 128);
    unsigned __int8 v18 = a1[17];
    uint64_t v19 = a1[18];
    uint64_t v20 = a1[19];
    outlined init with take of Transform?((uint64_t)(a1 + 15), (uint64_t)v36, &demangling cache variable for type metadata for Entity?);
    uint64_t v32 = v13;
    char v26 = v17;
    uint64_t v24 = v19;
    uint64_t v25 = v18;
    uint64_t v22 = v2;
    uint64_t v23 = v20;
    outlined init with take of Transform?((uint64_t)v36, (uint64_t)&v21, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v12(&v33, &v32, &v27, &v26, &v25, &v24, &v23, &v22, &v21);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v34, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)&v33, (uint64_t)v34, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v27, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<Float>);
  if (swift_dynamicCast()) {
    return v33;
  }
  else {
    return 0;
  }
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v12;
  long long v13;
  long long v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  unsigned char v34[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[31];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v32);
  }
  else
  {
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v26 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v6)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SpinAction), (v10 & 1) == 0))
    {
      swift_endAccess();
      outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      return 0;
    }
    uint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v9);
    swift_endAccess();
    uint64_t v12 = *a1;
    uint64_t v13 = *(_OWORD *)(a1 + 23);
    uint64_t v14 = *(_OWORD *)(a1 + 27);
    long long v27 = *(_OWORD *)(a1 + 25);
    long long v28 = v14;
    long long v29 = *(_OWORD *)(a1 + 29);
    uint64_t v25 = *(_OWORD *)(a1 + 21);
    char v26 = v13;
    uint64_t v15 = *((unsigned char *)a1 + 80);
    uint64_t v16 = a1[11];
    uint64_t v17 = a1[12];
    unsigned __int8 v18 = a1[13];
    outlined init with take of Transform?((uint64_t)(a1 + 9), (uint64_t)v34, &demangling cache variable for type metadata for Entity?);
    char v30 = v12;
    uint64_t v24 = v15;
    uint64_t v22 = v17;
    uint64_t v23 = v16;
    uint64_t v20 = v2;
    uint64_t v21 = v18;
    outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v19, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v11(&v31, &v30, &v25, &v24, &v23, &v22, &v21, &v20, &v19);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)&v31, (uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (swift_dynamicCast()) {
    return v31;
  }
  else {
    return 0;
  }
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v12;
  long long v13;
  long long v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  void v31[5];
  _OWORD v32[2];
  uint64_t v33;
  unsigned char v34[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[31];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v32);
  }
  else
  {
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v26 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v6) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for ImpulseAction);
    if (v10)
    {
      uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v9);
      swift_endAccess();
      uint64_t v12 = *a1;
      uint64_t v13 = *(_OWORD *)(a1 + 23);
      uint64_t v14 = *(_OWORD *)(a1 + 27);
      long long v27 = *(_OWORD *)(a1 + 25);
      long long v28 = v14;
      long long v29 = *(_OWORD *)(a1 + 29);
      uint64_t v25 = *(_OWORD *)(a1 + 21);
      char v26 = v13;
      uint64_t v15 = *((unsigned char *)a1 + 80);
      uint64_t v16 = a1[11];
      uint64_t v17 = a1[12];
      unsigned __int8 v18 = a1[13];
      outlined init with take of Transform?((uint64_t)(a1 + 9), (uint64_t)v34, &demangling cache variable for type metadata for Entity?);
      char v30 = v12;
      uint64_t v24 = v15;
      uint64_t v22 = v17;
      uint64_t v23 = v16;
      uint64_t v20 = v2;
      uint64_t v21 = v18;
      outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v19, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v11(v31, &v30, &v25, &v24, &v23, &v22, &v21, &v20, &v19);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v31, (uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v12;
  long long v13;
  long long v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  void v31[5];
  _OWORD v32[2];
  uint64_t v33;
  unsigned char v34[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[26];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v32);
  }
  else
  {
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v26 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v6) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SetEntityEnabledAction);
    if (v10)
    {
      uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v9);
      swift_endAccess();
      uint64_t v12 = *a1;
      uint64_t v13 = *((_OWORD *)a1 + 11);
      long long v27 = *((_OWORD *)a1 + 10);
      long long v28 = v13;
      long long v29 = *((_OWORD *)a1 + 12);
      uint64_t v14 = *((_OWORD *)a1 + 9);
      uint64_t v25 = *((_OWORD *)a1 + 8);
      char v26 = v14;
      uint64_t v15 = *((unsigned char *)a1 + 40);
      uint64_t v16 = a1[6];
      uint64_t v17 = a1[7];
      unsigned __int8 v18 = a1[8];
      outlined init with take of Transform?((uint64_t)(a1 + 4), (uint64_t)v34, &demangling cache variable for type metadata for Entity?);
      char v30 = v12;
      uint64_t v24 = v15;
      uint64_t v22 = v17;
      uint64_t v23 = v16;
      uint64_t v20 = v2;
      uint64_t v21 = v18;
      outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v19, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v11(v31, &v30, &v25, &v24, &v23, &v22, &v21, &v20, &v19);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v31, (uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v12;
  long long v13;
  long long v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  void v31[5];
  _OWORD v32[2];
  uint64_t v33;
  unsigned char v34[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[27];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v32);
  }
  else
  {
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v26 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v6) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for NotificationAction);
    if (v10)
    {
      uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v9);
      swift_endAccess();
      uint64_t v12 = *a1;
      uint64_t v13 = *(_OWORD *)(a1 + 19);
      uint64_t v14 = *(_OWORD *)(a1 + 23);
      long long v27 = *(_OWORD *)(a1 + 21);
      long long v28 = v14;
      long long v29 = *(_OWORD *)(a1 + 25);
      uint64_t v25 = *(_OWORD *)(a1 + 17);
      char v26 = v13;
      uint64_t v15 = *((unsigned char *)a1 + 48);
      uint64_t v16 = a1[7];
      uint64_t v17 = a1[8];
      unsigned __int8 v18 = a1[9];
      outlined init with take of Transform?((uint64_t)(a1 + 5), (uint64_t)v34, &demangling cache variable for type metadata for Entity?);
      char v30 = v12;
      uint64_t v24 = v15;
      uint64_t v22 = v17;
      uint64_t v23 = v16;
      uint64_t v20 = v2;
      uint64_t v21 = v18;
      outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v19, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v11(v31, &v30, &v25, &v24, &v23, &v22, &v21, &v20, &v19);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v31, (uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v12;
  long long v13;
  long long v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;
  void v31[5];
  _OWORD v32[2];
  uint64_t v33;
  unsigned char v34[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v2 = a1[31];
  swift_beginAccess();
  uint64_t v3 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v32);
  }
  else
  {
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v6 = *((void *)&v26 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v6)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAnimationAction),
          (v10 & 1) == 0))
    {
      swift_endAccess();
      outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      return 1;
    }
    uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v8 + 56) + 16 * v9);
    swift_endAccess();
    uint64_t v12 = *a1;
    uint64_t v13 = *(_OWORD *)(a1 + 23);
    uint64_t v14 = *(_OWORD *)(a1 + 27);
    long long v27 = *(_OWORD *)(a1 + 25);
    long long v28 = v14;
    long long v29 = *(_OWORD *)(a1 + 29);
    uint64_t v25 = *(_OWORD *)(a1 + 21);
    char v26 = v13;
    uint64_t v15 = *((unsigned char *)a1 + 80);
    uint64_t v16 = a1[11];
    uint64_t v17 = a1[12];
    unsigned __int8 v18 = a1[13];
    outlined init with take of Transform?((uint64_t)(a1 + 9), (uint64_t)v34, &demangling cache variable for type metadata for Entity?);
    char v30 = v12;
    uint64_t v24 = v15;
    uint64_t v22 = v17;
    uint64_t v23 = v16;
    uint64_t v20 = v2;
    uint64_t v21 = v18;
    outlined init with take of Transform?((uint64_t)v34, (uint64_t)&v19, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v11(v31, &v30, &v25, &v24, &v23, &v22, &v21, &v20, &v19);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)v31, (uint64_t)v32, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v32, (uint64_t)&v25, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (swift_dynamicCast()) {
    return v31[0];
  }
  else {
    return 1;
  }
}

uint64_t specialized static ActionHandlerProtocol.actionHandler(_:)(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  void (*v16)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v17;
  long long v18;
  long long v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  uint64_t v35;
  void v36[5];
  _OWORD v37[2];
  uint64_t v38;
  unsigned char v39[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v6 = a1[33];
  swift_beginAccess();
  uint64_t v7 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(v6), (v9 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v7 + 56) + 40 * v8, (uint64_t)v37);
  }
  else
  {
    uint64_t v38 = 0;
    memset(v37, 0, sizeof(v37));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v10 = *((void *)&v31 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v10) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a2);
    unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(v13);
    if (v15)
    {
      uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v12 + 56) + 16 * v14);
      swift_endAccess();
      uint64_t v17 = *a1;
      unsigned __int8 v18 = *(_OWORD *)(a1 + 25);
      uint64_t v19 = *(_OWORD *)(a1 + 29);
      uint64_t v32 = *(_OWORD *)(a1 + 27);
      uint64_t v33 = v19;
      char v34 = *(_OWORD *)(a1 + 31);
      char v30 = *(_OWORD *)(a1 + 23);
      uint64_t v31 = v18;
      uint64_t v20 = *((unsigned char *)a1 + 96);
      uint64_t v21 = a1[13];
      uint64_t v22 = a1[14];
      uint64_t v23 = a1[15];
      outlined init with take of Transform?((uint64_t)(a1 + 11), (uint64_t)v39, &demangling cache variable for type metadata for Entity?);
      uint64_t v35 = v17;
      long long v29 = v20;
      long long v27 = v22;
      long long v28 = v21;
      uint64_t v25 = v6;
      char v26 = v23;
      outlined init with take of Transform?((uint64_t)v39, (uint64_t)&v24, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v16(v36, &v35, &v30, &v29, &v28, &v27, &v26, &v25, &v24);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v36, (uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(a3);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void (*v16)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v17;
  long long v18;
  long long v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  uint64_t v35;
  void v36[5];
  _OWORD v37[2];
  uint64_t v38;
  unsigned char v39[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v6 = a1[30];
  swift_beginAccess();
  uint64_t v7 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(v6), (v9 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v7 + 56) + 40 * v8, (uint64_t)v37);
  }
  else
  {
    uint64_t v38 = 0;
    memset(v37, 0, sizeof(v37));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v10 = *((void *)&v31 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v10) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a2);
    unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(v13);
    if (v15)
    {
      uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v12 + 56) + 16 * v14);
      swift_endAccess();
      uint64_t v17 = *a1;
      unsigned __int8 v18 = *((_OWORD *)a1 + 13);
      uint64_t v32 = *((_OWORD *)a1 + 12);
      uint64_t v33 = v18;
      char v34 = *((_OWORD *)a1 + 14);
      uint64_t v19 = *((_OWORD *)a1 + 11);
      char v30 = *((_OWORD *)a1 + 10);
      uint64_t v31 = v19;
      uint64_t v20 = *((unsigned char *)a1 + 72);
      uint64_t v21 = a1[10];
      uint64_t v22 = a1[11];
      uint64_t v23 = a1[12];
      outlined init with take of Transform?((uint64_t)(a1 + 8), (uint64_t)v39, &demangling cache variable for type metadata for Entity?);
      uint64_t v35 = v17;
      long long v29 = v20;
      long long v27 = v22;
      long long v28 = v21;
      uint64_t v25 = v6;
      char v26 = v23;
      outlined init with take of Transform?((uint64_t)v39, (uint64_t)&v24, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v16(v36, &v35, &v30, &v29, &v28, &v27, &v26, &v25, &v24);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v36, (uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(a3);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void (*v16)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v17;
  long long v18;
  long long v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  uint64_t v35;
  void v36[5];
  _OWORD v37[2];
  uint64_t v38;
  unsigned char v39[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v6 = a1[29];
  swift_beginAccess();
  uint64_t v7 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(v6), (v9 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v7 + 56) + 40 * v8, (uint64_t)v37);
  }
  else
  {
    uint64_t v38 = 0;
    memset(v37, 0, sizeof(v37));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v10 = *((void *)&v31 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (v10) {
    goto LABEL_8;
  }
  if (one-time initialization token for actionHandlerCreators != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = static AnimationResource.actionHandlerCreators;
  if (*(void *)(static AnimationResource.actionHandlerCreators + 16))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a2);
    unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(v13);
    if (v15)
    {
      uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v12 + 56) + 16 * v14);
      swift_endAccess();
      uint64_t v17 = *a1;
      unsigned __int8 v18 = *(_OWORD *)(a1 + 21);
      uint64_t v19 = *(_OWORD *)(a1 + 25);
      uint64_t v32 = *(_OWORD *)(a1 + 23);
      uint64_t v33 = v19;
      char v34 = *(_OWORD *)(a1 + 27);
      char v30 = *(_OWORD *)(a1 + 19);
      uint64_t v31 = v18;
      uint64_t v20 = *((unsigned char *)a1 + 64);
      uint64_t v21 = a1[9];
      uint64_t v22 = a1[10];
      uint64_t v23 = a1[11];
      outlined init with take of Transform?((uint64_t)(a1 + 7), (uint64_t)v39, &demangling cache variable for type metadata for Entity?);
      uint64_t v35 = v17;
      long long v29 = v20;
      long long v27 = v22;
      long long v28 = v21;
      uint64_t v25 = v6;
      char v26 = v23;
      outlined init with take of Transform?((uint64_t)v39, (uint64_t)&v24, &demangling cache variable for type metadata for Entity?);
      swift_retain();
      v16(v36, &v35, &v30, &v29, &v28, &v27, &v26, &v25, &v24);
      swift_release();
      outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      outlined init with take of Transform?((uint64_t)v36, (uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
LABEL_8:
      outlined init with take of Transform?((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
      __swift_instantiateConcreteTypeFromMangledName(a3);
      return swift_dynamicCast() ^ 1;
    }
  }
  swift_endAccess();
  outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  return 1;
}

{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void (*v16)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v17;
  long long v18;
  long long v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  unsigned char v39[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v6 = a1[39];
  swift_beginAccess();
  uint64_t v7 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v8 = specialized __RawDictionaryStorage.find<A>(_:)(v6), (v9 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v7 + 56) + 40 * v8, (uint64_t)v37);
  }
  else
  {
    uint64_t v38 = 0;
    memset(v37, 0, sizeof(v37));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v10 = *((void *)&v31 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v10)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v12 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a2),
          unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(v13),
          (v15 & 1) == 0))
    {
      swift_endAccess();
      outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      return 0;
    }
    uint64_t v16 = *(void (**)(uint64_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v12 + 56) + 16 * v14);
    swift_endAccess();
    uint64_t v17 = *a1;
    unsigned __int8 v18 = *(_OWORD *)(a1 + 31);
    uint64_t v19 = *(_OWORD *)(a1 + 35);
    uint64_t v32 = *(_OWORD *)(a1 + 33);
    uint64_t v33 = v19;
    char v34 = *(_OWORD *)(a1 + 37);
    char v30 = *(_OWORD *)(a1 + 29);
    uint64_t v31 = v18;
    uint64_t v20 = *((unsigned char *)a1 + 144);
    uint64_t v21 = a1[19];
    uint64_t v22 = a1[20];
    uint64_t v23 = a1[21];
    outlined init with take of Transform?((uint64_t)(a1 + 17), (uint64_t)v39, &demangling cache variable for type metadata for Entity?);
    uint64_t v35 = v17;
    long long v29 = v20;
    long long v27 = v22;
    long long v28 = v21;
    uint64_t v25 = v6;
    char v26 = v23;
    outlined init with take of Transform?((uint64_t)v39, (uint64_t)&v24, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v16(&v36, &v35, &v30, &v29, &v28, &v27, &v26, &v25, &v24);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)&v36, (uint64_t)v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v37, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if (swift_dynamicCast()) {
    return v36;
  }
  else {
    return 0;
  }
}

uint64_t specialized static ActionHandlerProtocol.actionHandler(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  void (*v18)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v19;
  long long v20;
  long long v21;
  long long v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  uint64_t v38;
  void v39[5];
  _OWORD v40[2];
  uint64_t v41;
  unsigned char v42[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v8 = a1[37];
  swift_beginAccess();
  uint64_t v9 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v10 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v11 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v9 + 56) + 40 * v10, (uint64_t)v40);
  }
  else
  {
    uint64_t v41 = 0;
    memset(v40, 0, sizeof(v40));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v40, (uint64_t)&v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v12 = *((void *)&v34 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v12)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v14 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a2),
          unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(v15),
          (v17 & 1) == 0))
    {
      swift_endAccess();
      uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v40, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      goto LABEL_16;
    }
    unsigned __int8 v18 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v14 + 56) + 16 * v16);
    swift_endAccess();
    uint64_t v19 = *a1;
    uint64_t v20 = *(_OWORD *)(a1 + 33);
    uint64_t v21 = *(_OWORD *)(a1 + 35);
    uint64_t v35 = *(_OWORD *)(a1 + 31);
    uint64_t v36 = v20;
    uint64_t v22 = *(_OWORD *)(a1 + 29);
    uint64_t v37 = v21;
    uint64_t v33 = *(_OWORD *)(a1 + 27);
    char v34 = v22;
    uint64_t v23 = *((unsigned char *)a1 + 128);
    uint64_t v24 = a1[17];
    uint64_t v25 = a1[18];
    char v26 = a1[19];
    outlined init with take of Transform?((uint64_t)(a1 + 15), (uint64_t)v42, &demangling cache variable for type metadata for Entity?);
    uint64_t v38 = v19;
    uint64_t v32 = v23;
    char v30 = v25;
    uint64_t v31 = v24;
    long long v28 = v8;
    long long v29 = v26;
    outlined init with take of Transform?((uint64_t)v42, (uint64_t)&v27, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v18(v39, &v38, &v33, &v32, &v31, &v30, &v29, &v28, &v27);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v40, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)v39, (uint64_t)v40, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v40, (uint64_t)&v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
LABEL_16:
  }
    *a4 = xmmword_22830EC70;
  return result;
}

uint64_t specialized static ActionHandlerProtocol.actionHandler(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v19)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v20;
  long long v21;
  long long v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  long long v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  uint64_t v38;
  void v39[5];
  _OWORD v40[2];
  uint64_t v41;
  unsigned char v42[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v4 = a1[57];
  swift_beginAccess();
  uint64_t v5 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v6 = specialized __RawDictionaryStorage.find<A>(_:)(v4), (v7 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v5 + 56) + 40 * v6, (uint64_t)v40);
  }
  else
  {
    uint64_t v41 = 0;
    memset(v40, 0, sizeof(v40));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v40, (uint64_t)&v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v8 = *((void *)&v34 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v33, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v8)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v15 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>),
          unint64_t v17 = specialized __RawDictionaryStorage.find<A>(_:)(v16),
          (v18 & 1) == 0))
    {
      swift_endAccess();
      uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v40, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      long long v10 = 0uLL;
      char v14 = 1;
      long long v11 = 0uLL;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      goto LABEL_17;
    }
    uint64_t v19 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v15 + 56) + 16 * v17);
    swift_endAccess();
    uint64_t v20 = *a1;
    uint64_t v21 = *(_OWORD *)(a1 + 53);
    uint64_t v35 = *(_OWORD *)(a1 + 51);
    uint64_t v36 = v21;
    uint64_t v37 = *(_OWORD *)(a1 + 55);
    uint64_t v22 = *(_OWORD *)(a1 + 49);
    uint64_t v33 = *(_OWORD *)(a1 + 47);
    char v34 = v22;
    uint64_t v23 = *((unsigned char *)a1 + 288);
    uint64_t v24 = a1[37];
    uint64_t v25 = a1[38];
    char v26 = a1[39];
    outlined init with take of Transform?((uint64_t)(a1 + 35), (uint64_t)v42, &demangling cache variable for type metadata for Entity?);
    uint64_t v38 = v20;
    uint64_t v32 = v23;
    char v30 = v25;
    uint64_t v31 = v24;
    long long v28 = v4;
    long long v29 = v26;
    outlined init with take of Transform?((uint64_t)v42, (uint64_t)&v27, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v19(v39, &v38, &v33, &v32, &v31, &v30, &v29, &v28, &v27);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v40, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)v39, (uint64_t)v40, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v40, (uint64_t)v39, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<Transform>);
  uint64_t result = swift_dynamicCast();
  long long v10 = 0uLL;
  long long v11 = 0uLL;
  long long v12 = 0uLL;
  long long v13 = 0uLL;
  if (result)
  {
    long long v10 = v33;
    long long v11 = v34;
    long long v12 = v35;
    long long v13 = v36;
  }
  char v14 = result ^ 1;
LABEL_17:
  *(_OWORD *)a2 = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_OWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(unsigned char *)(a2 + 64) = v14;
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void (*v14)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v15;
  long long v16;
  long long v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  uint64_t v33;
  void v34[5];
  _OWORD v35[2];
  uint64_t v36;
  unsigned char v37[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v4 = a1[45];
  swift_beginAccess();
  uint64_t v5 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v6 = specialized __RawDictionaryStorage.find<A>(_:)(v4), (v7 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v5 + 56) + 40 * v6, (uint64_t)v35);
  }
  else
  {
    uint64_t v36 = 0;
    memset(v35, 0, sizeof(v35));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v35, (uint64_t)&v28, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v8 = *((void *)&v29 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v28, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v8)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    long long v11 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (long long v12 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for BillboardAction),
          (v13 & 1) == 0))
    {
      swift_endAccess();
      uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v35, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)(a2 + 64) = 0u;
      *(void *)(a2 + 77) = 0;
      long long v10 = 1;
      goto LABEL_17;
    }
    char v14 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v11 + 56) + 16 * v12);
    swift_endAccess();
    uint64_t v15 = *a1;
    uint64_t v16 = *(_OWORD *)(a1 + 41);
    char v30 = *(_OWORD *)(a1 + 39);
    uint64_t v31 = v16;
    uint64_t v32 = *(_OWORD *)(a1 + 43);
    unint64_t v17 = *(_OWORD *)(a1 + 37);
    long long v28 = *(_OWORD *)(a1 + 35);
    long long v29 = v17;
    char v18 = *((unsigned char *)a1 + 192);
    uint64_t v19 = a1[25];
    uint64_t v20 = a1[26];
    uint64_t v21 = a1[27];
    outlined init with take of Transform?((uint64_t)(a1 + 23), (uint64_t)v37, &demangling cache variable for type metadata for Entity?);
    uint64_t v33 = v15;
    long long v27 = v18;
    uint64_t v25 = v20;
    char v26 = v19;
    uint64_t v23 = v4;
    uint64_t v24 = v21;
    outlined init with take of Transform?((uint64_t)v37, (uint64_t)&v22, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v14(v34, &v33, &v28, &v27, &v26, &v25, &v24, &v23, &v22);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v35, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)v34, (uint64_t)v35, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v35, (uint64_t)&v28, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    *(void *)(a2 + 77) = 0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  long long v10 = result ^ 1;
LABEL_17:
  *(unsigned char *)(a2 + 85) = v10;
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void (*v14)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v15;
  long long v16;
  long long v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void v29[5];
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  _OWORD v35[2];
  uint64_t v36;
  unsigned char v37[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v4 = a1[31];
  swift_beginAccess();
  uint64_t v5 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v6 = specialized __RawDictionaryStorage.find<A>(_:)(v4), (v7 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v5 + 56) + 40 * v6, (uint64_t)v35);
  }
  else
  {
    uint64_t v36 = 0;
    memset(v35, 0, sizeof(v35));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v35, (uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v8 = *((void *)&v31 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v30, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v8)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    long long v11 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (long long v12 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for OrbitEntityAction),
          (v13 & 1) == 0))
    {
      swift_endAccess();
      outlined destroy of BodyTrackingComponent?((uint64_t)v35, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      goto LABEL_16;
    }
    char v14 = *(void (**)(void *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v11 + 56) + 16 * v12);
    swift_endAccess();
    uint64_t v15 = *a1;
    uint64_t v16 = *(_OWORD *)(a1 + 23);
    unint64_t v17 = *(_OWORD *)(a1 + 27);
    uint64_t v32 = *(_OWORD *)(a1 + 25);
    uint64_t v33 = v17;
    char v34 = *(_OWORD *)(a1 + 29);
    char v30 = *(_OWORD *)(a1 + 21);
    uint64_t v31 = v16;
    char v18 = *((unsigned char *)a1 + 80);
    uint64_t v19 = a1[11];
    uint64_t v20 = a1[12];
    uint64_t v21 = a1[13];
    outlined init with take of Transform?((uint64_t)(a1 + 9), (uint64_t)v37, &demangling cache variable for type metadata for Entity?);
    long long v28 = v15;
    long long v27 = v18;
    uint64_t v25 = v20;
    char v26 = v19;
    uint64_t v23 = v4;
    uint64_t v24 = v21;
    outlined init with take of Transform?((uint64_t)v37, (uint64_t)&v22, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v14(v29, &v28, &v30, &v27, &v26, &v25, &v24, &v23, &v22);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v35, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)v29, (uint64_t)v35, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v35, (uint64_t)v29, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (swift_dynamicCast()) {
    return destructiveProjectEnumData for __RKEntityInteractionsComponent.Registration.RegistrationError(a2, v9);
  }
LABEL_16:
  _s17RealityFoundation24OrbitEntityActionHandlerVSgWOi0_((uint64_t)&v30);
  return outlined init with take of Transform?((uint64_t)&v30, a2, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
}

uint64_t specialized static ActionHandlerProtocol.actionHandler(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, int8x16_t *a4@<X8>)
{
  void (*v23)(int8x16_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);
  uint64_t v24;
  long long v25;
  long long v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  uint64_t v42;
  int8x16_t v43[3];
  _OWORD v44[2];
  uint64_t v45;
  unsigned char v46[8];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v8 = a1[45];
  swift_beginAccess();
  uint64_t v9 = static AnimationResource.actionHandlers;
  if (*(void *)(static AnimationResource.actionHandlers + 16)
    && (unint64_t v10 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v11 & 1) != 0))
  {
    outlined init with copy of __REAssetService(*(void *)(v9 + 56) + 40 * v10, (uint64_t)v44);
  }
  else
  {
    uint64_t v45 = 0;
    memset(v44, 0, sizeof(v44));
  }
  swift_endAccess();
  outlined init with copy of (Int, URL)((uint64_t)v44, (uint64_t)&v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  uint64_t v12 = *((void *)&v38 + 1);
  outlined destroy of BodyTrackingComponent?((uint64_t)&v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  if (!v12)
  {
    if (one-time initialization token for actionHandlerCreators != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v19 = static AnimationResource.actionHandlerCreators;
    if (!*(void *)(static AnimationResource.actionHandlerCreators + 16)
      || (uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(a2),
          unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)(v20),
          (v22 & 1) == 0))
    {
      swift_endAccess();
      uint64_t result = outlined destroy of BodyTrackingComponent?((uint64_t)v44, &demangling cache variable for type metadata for ActionHandlerProtocol?);
      int8x16_t v16 = 0uLL;
      char v18 = 1;
      int8x16_t v17 = 0uLL;
      goto LABEL_18;
    }
    uint64_t v23 = *(void (**)(int8x16_t *__return_ptr, uint64_t *, long long *, char *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(*(void *)(v19 + 56) + 16 * v21);
    swift_endAccess();
    uint64_t v24 = *a1;
    uint64_t v25 = *(_OWORD *)(a1 + 41);
    int v39 = *(_OWORD *)(a1 + 39);
    uint64_t v40 = v25;
    uint64_t v41 = *(_OWORD *)(a1 + 43);
    char v26 = *(_OWORD *)(a1 + 37);
    uint64_t v37 = *(_OWORD *)(a1 + 35);
    uint64_t v38 = v26;
    long long v27 = *((unsigned char *)a1 + 192);
    long long v28 = a1[25];
    long long v29 = a1[26];
    char v30 = a1[27];
    outlined init with take of Transform?((uint64_t)(a1 + 23), (uint64_t)v46, &demangling cache variable for type metadata for Entity?);
    uint64_t v42 = v24;
    uint64_t v36 = v27;
    char v34 = v29;
    uint64_t v35 = v28;
    uint64_t v32 = v8;
    uint64_t v33 = v30;
    outlined init with take of Transform?((uint64_t)v46, (uint64_t)&v31, &demangling cache variable for type metadata for Entity?);
    swift_retain();
    v23(v43, &v42, &v37, &v36, &v35, &v34, &v33, &v32, &v31);
    swift_release();
    outlined destroy of BodyTrackingComponent?((uint64_t)v44, &demangling cache variable for type metadata for ActionHandlerProtocol?);
    outlined init with take of Transform?((uint64_t)v43, (uint64_t)v44, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  }
  outlined init with take of Transform?((uint64_t)v44, (uint64_t)&v37, &demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionHandlerProtocol?);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = swift_dynamicCast();
  if (result) {
    unint64_t v14 = -1;
  }
  else {
    unint64_t v14 = 0;
  }
  int8x16_t v15 = (int8x16_t)vdupq_n_s64(v14);
  int8x16_t v16 = vandq_s8(v43[0], v15);
  int8x16_t v17 = vandq_s8(v43[1], v15);
  char v18 = result ^ 1;
LABEL_18:
  *a4 = v16;
  a4[1] = v17;
  a4[2].i8[0] = v18;
  return result;
}

uint64_t specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 176);
  v14[10] = *(_OWORD *)(a1 + 160);
  v14[11] = v2;
  uint64_t v15 = *(void *)(a1 + 192);
  long long v3 = *(_OWORD *)(a1 + 112);
  v14[6] = *(_OWORD *)(a1 + 96);
  v14[7] = v3;
  long long v4 = *(_OWORD *)(a1 + 144);
  v14[8] = *(_OWORD *)(a1 + 128);
  v14[9] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  void v14[2] = *(_OWORD *)(a1 + 32);
  v14[3] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v14[4] = *(_OWORD *)(a1 + 64);
  v14[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v7;
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if (v9)
  {
    uint64_t v10 = *(void *)(a1 + 192);
    uint64_t v12 = result;
    uint64_t v13 = v9;
    EmphasizeActionHandler.actionStarted(event:)(v14);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    v11[3] = &type metadata for EmphasizeActionHandler;
    v11[4] = &protocol witness table for EmphasizeActionHandler;
    v11[0] = v12;
    v11[1] = v13;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)v11, v10);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

{
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  uint64_t result;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void v16[5];
  long long v17;
  char v18;
  _OWORD v19[16];

  long long v2 = *(_OWORD *)(a1 + 208);
  v19[12] = *(_OWORD *)(a1 + 192);
  v19[13] = v2;
  long long v3 = *(_OWORD *)(a1 + 240);
  v19[14] = *(_OWORD *)(a1 + 224);
  v19[15] = v3;
  long long v4 = *(_OWORD *)(a1 + 144);
  v19[8] = *(_OWORD *)(a1 + 128);
  v19[9] = v4;
  long long v5 = *(_OWORD *)(a1 + 176);
  _OWORD v19[10] = *(_OWORD *)(a1 + 160);
  v19[11] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v19[4] = *(_OWORD *)(a1 + 64);
  v19[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 112);
  v19[6] = *(_OWORD *)(a1 + 96);
  v19[7] = v7;
  uint64_t v8 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v8;
  uint64_t v9 = *(_OWORD *)(a1 + 48);
  void v19[2] = *(_OWORD *)(a1 + 32);
  void v19[3] = v9;
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if ((v12 & 0x100) == 0)
  {
    uint64_t v13 = *(void *)(a1 + 248);
    *(void *)&int8x16_t v17 = result;
    *((void *)&v17 + 1) = v11;
    char v18 = v12 & 1;
    SpinActionHandler.actionStarted(event:)(v19);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    v16[3] = &type metadata for SpinActionHandler;
    v16[4] = &protocol witness table for SpinActionHandler;
    unint64_t v14 = swift_allocObject();
    v16[0] = v14;
    uint64_t v15 = v18;
    *(_OWORD *)(v14 + 16) = v17;
    *(unsigned char *)(v14 + 32) = v15;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v16, v13);
    return swift_endAccess();
  }
  return result;
}

{
  long long v1;
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  _OWORD v8[12];
  uint64_t v9;

  uint64_t v1 = *(_OWORD *)(a1 + 176);
  _OWORD v8[10] = *(_OWORD *)(a1 + 160);
  _OWORD v8[11] = v1;
  uint64_t v9 = *(void *)(a1 + 192);
  long long v2 = *(_OWORD *)(a1 + 112);
  v8[6] = *(_OWORD *)(a1 + 96);
  v8[7] = v2;
  long long v3 = *(_OWORD *)(a1 + 144);
  v8[8] = *(_OWORD *)(a1 + 128);
  v8[9] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  v8[4] = *(_OWORD *)(a1 + 64);
  v8[5] = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v6;
  return specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)((uint64_t)v8);
}

{
  long long v1;
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD v9[15];
  uint64_t v10;

  uint64_t v1 = *(_OWORD *)(a1 + 208);
  v9[12] = *(_OWORD *)(a1 + 192);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(a1 + 224);
  uint64_t v10 = *(void *)(a1 + 240);
  long long v2 = *(_OWORD *)(a1 + 144);
  v9[8] = *(_OWORD *)(a1 + 128);
  v9[9] = v2;
  long long v3 = *(_OWORD *)(a1 + 176);
  v9[10] = *(_OWORD *)(a1 + 160);
  v9[11] = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v4;
  long long v5 = *(_OWORD *)(a1 + 112);
  v9[6] = *(_OWORD *)(a1 + 96);
  v9[7] = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v7;
  return specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)((uint64_t *)v9);
}

{
  return specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Int>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Int>, (void (*)(_OWORD *))specialized SetEntityPropertyActionHandler.setKeyValueOnEntity(event:), &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Int> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD2<Float>>, (void (*)(_OWORD *))specialized SetEntityPropertyActionHandler.setKeyValueOnEntity(event:), &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD2<Float>> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Double>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Double>, (void (*)(_OWORD *))specialized SetEntityPropertyActionHandler.setKeyValueOnEntity(event:), &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Double> and conformance SetEntityPropertyActionHandler<A>);
}

uint64_t specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1);
  if (result == 1) {
    return result;
  }
  long long v4 = *((_OWORD *)a1 + 12);
  long long v5 = *((_OWORD *)a1 + 14);
  long long v30 = *((_OWORD *)a1 + 13);
  long long v31 = v5;
  long long v6 = *((_OWORD *)a1 + 8);
  long long v7 = *((_OWORD *)a1 + 10);
  long long v8 = *((_OWORD *)a1 + 11);
  long long v26 = *((_OWORD *)a1 + 9);
  long long v27 = v7;
  long long v28 = v8;
  long long v29 = v4;
  long long v9 = *((_OWORD *)a1 + 5);
  long long v21 = *((_OWORD *)a1 + 4);
  long long v22 = v9;
  long long v10 = *((_OWORD *)a1 + 7);
  long long v23 = *((_OWORD *)a1 + 6);
  uint64_t v33 = result;
  char v34 = v3 & 1;
  uint64_t v32 = a1[30];
  long long v24 = v10;
  long long v25 = v6;
  long long v11 = *((_OWORD *)a1 + 1);
  long long v17 = *(_OWORD *)a1;
  long long v18 = v11;
  long long v12 = *((_OWORD *)a1 + 3);
  long long v19 = *((_OWORD *)a1 + 2);
  long long v20 = v12;
  PlayAudioActionHandler.prepareAudio(event:)((uint64_t)&v17);
  uint64_t v13 = v33;
  if (!v33)
  {
    if ((a1[7] & 1) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    char v34 = 1;
    goto LABEL_7;
  }
  uint64_t v14 = *(void *)(v33 + 32);
  uint64_t v15 = *(void *)(v33 + 48);
  swift_retain();
  MEMORY[0x22A68C6D0](v14, v15);
  RENetworkMarkComponentDirty();
  swift_release();
  if (a1[7]) {
    goto LABEL_6;
  }
  swift_retain();
  AudioPlaybackController.play()();
  swift_release();
LABEL_7:
  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v16 = a1[30];
  *((void *)&v18 + 1) = &type metadata for PlayAudioActionHandler;
  *(void *)&long long v19 = &protocol witness table for PlayAudioActionHandler;
  *(void *)&long long v17 = v13;
  BYTE8(v17) = v34;
  swift_beginAccess();
  swift_retain();
  specialized Dictionary.subscript.setter((uint64_t)&v17, v16);
  swift_endAccess();
  return swift_release();
}

{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  long long v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>, &v6);
  char v3 = v6;
  if ((void)v6 != 1)
  {
    long long v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(1uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    long long v5 = a1[37];
    long long v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    long long v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<BlendShapeWeights> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  long long v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<JointTransforms>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>, &v6);
  char v3 = v6;
  if ((void)v6 != 1)
  {
    long long v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(1uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<JointTransforms>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    long long v5 = a1[37];
    long long v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    long long v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<JointTransforms> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

{
  uint64_t result;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  long long v10;
  long long v11;
  long long v12;
  uint64_t v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  uint64_t v30;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1);
  if (result != 1)
  {
    char v3 = *((_OWORD *)a1 + 12);
    long long v4 = *((_OWORD *)a1 + 14);
    long long v5 = *((_OWORD *)a1 + 15);
    long long v27 = *((_OWORD *)a1 + 13);
    long long v28 = v4;
    long long v29 = v5;
    long long v6 = *((_OWORD *)a1 + 8);
    long long v7 = *((_OWORD *)a1 + 10);
    long long v8 = *((_OWORD *)a1 + 11);
    long long v23 = *((_OWORD *)a1 + 9);
    long long v24 = v7;
    long long v25 = v8;
    long long v26 = v3;
    long long v9 = *((_OWORD *)a1 + 5);
    long long v18 = *((_OWORD *)a1 + 4);
    long long v19 = v9;
    long long v10 = *((_OWORD *)a1 + 7);
    long long v20 = *((_OWORD *)a1 + 6);
    long long v30 = result;
    long long v21 = v10;
    long long v22 = v6;
    long long v11 = *((_OWORD *)a1 + 1);
    uint64_t v14 = *(_OWORD *)a1;
    uint64_t v15 = v11;
    long long v12 = *((_OWORD *)a1 + 3);
    uint64_t v16 = *((_OWORD *)a1 + 2);
    long long v17 = v12;
    PlayAnimationActionHandler.triggerAnimation(_:)((uint64_t)&v14);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v13 = a1[31];
    *((void *)&v15 + 1) = &type metadata for PlayAnimationActionHandler;
    *(void *)&uint64_t v16 = &protocol witness table for PlayAnimationActionHandler;
    *(void *)&uint64_t v14 = v30;
    swift_beginAccess();
    swift_retain();
    specialized Dictionary.subscript.setter((uint64_t)&v14, v13);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(__src, (uint64_t)&v11);
  if ((v18 & 1) == 0)
  {
    uint64_t v3 = __src[45];
    long long v19 = v11;
    long long v20 = v12;
    long long v21 = v13;
    long long v22 = v14;
    long long v23 = v15;
    int v24 = v16;
    char v25 = v17 & 1;
    BillboardActionHandler.actionStarted(event:)(__dst);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    *((void *)&v12 + 1) = &type metadata for BillboardActionHandler;
    *(void *)&long long v13 = &protocol witness table for BillboardActionHandler;
    uint64_t v4 = swift_allocObject();
    long long v5 = v20;
    long long v6 = v21;
    *(_OWORD *)(v4 + 16) = v19;
    *(_OWORD *)(v4 + 32) = v5;
    long long v7 = v22;
    long long v8 = v23;
    *(_OWORD *)(v4 + 48) = v6;
    *(_OWORD *)(v4 + 64) = v7;
    *(void *)&long long v11 = v4;
    int v9 = v24;
    char v10 = v25;
    *(_OWORD *)(v4 + 80) = v8;
    *(_DWORD *)(v4 + 96) = v9;
    *(unsigned char *)(v4 + 100) = v10;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)&v11, v3);
    return swift_endAccess();
  }
  return result;
}

uint64_t specialized static EntityAction.__subscribe(to:_:_:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for EmphasizeAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7BF9CLL);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_103;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for EmphasizeAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAudioAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7C4F4);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_117;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for PlayAudioAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7CA54);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_134;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7CFB4);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_148;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7D514);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_162_0;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7DA74);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_176;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7DFD4);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_193;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7E534);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_208;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7EA94);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_223;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7EFF4);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_237;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7F554);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_251;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F7FAB4);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_265;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F80014);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_279;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<JointTransforms>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F80574);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_293;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F80AD4);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_315;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F81034);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_339;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F81594);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_361;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F81AF4);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_383;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F82054);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_399;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Double>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F825B4);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_413;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EventBus;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void aBlock[6];

  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>);
  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  int v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v11 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (char v12 = specialized __RawDictionaryStorage.find<A>(_:)(v8), (v13 & 1) != 0))
      {
        unint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v14 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_26;
        }
      }
      char v15 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v16)
      {
        uint64_t v35 = a3;
        uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 16 * v15);
        long long v19 = *v17;
        uint64_t v18 = v17[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v21 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v34 = v8;
          uint64_t v22 = *(void *)(v21 + 16);
          swift_release();
          uint64_t v23 = v22;
          uint64_t v8 = v34;
          uint64_t EventBus = MEMORY[0x22A692280](v23);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v19, v18);
        a3 = v35;
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v24 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        char v25 = *(void *)(v24 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v25)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F82B14);
      }
      REEngineGetEventBus();
LABEL_29:
      long long v26 = (void *)swift_allocObject();
      v26[2] = v9;
      v26[3] = a1;
      v26[4] = a3;
      v26[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_427;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v28 = REEventBusSubscribeWithMatch();
      long long v30 = v29;
      _Block_release(v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v28, v30, a1, isUniquelyReferenced_nonNull_native);
      char v32 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v8, v33);
      static AnimationResource.actionSubscriptions = v36;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for BillboardAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F8306CLL);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_449;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for BillboardAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SpinAction), (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F835C4);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_471;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for SpinAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for OrbitEntityAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F83B1CLL);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_495;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for OrbitEntityAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for ImpulseAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F84074);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_511;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for ImpulseAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for SetEntityEnabledAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F845CCLL);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_525;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for SetEntityEnabledAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for NotificationAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F84B24);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_539;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for NotificationAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t EventBus;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void aBlock[6];

  if (!a2)
  {
    type metadata accessor for __ServiceLocator();
    static __ServiceLocator.shared.getter();
    swift_beginAccess();
    swift_unownedRetainStrong();
    swift_release();
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_release();
  switch(a1)
  {
    case 1uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 2uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3BuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
      return swift_release();
    case 4uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 8uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x10uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x20uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    case 0x40uLL:
      specialized getEventID<A>(_:)();
      goto LABEL_14;
    default:
      if (a1 != 128) {
        return swift_release();
      }
      specialized getEventID<A>(_:)();
LABEL_14:
      if (one-time initialization token for actionSubscriptions != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v10 = static AnimationResource.actionSubscriptions;
      if (*(void *)(static AnimationResource.actionSubscriptions + 16)
        && (unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&type metadata for PlayAnimationAction),
            (v12 & 1) != 0))
      {
        unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
        swift_endAccess();
        swift_bridgeObjectRetain();
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_endAccess();
        unint64_t v13 = specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x263F8EE78]);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_26;
        }
      }
      unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
      if (v15)
      {
        int v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (a2)
        {
          uint64_t EventBus = REEngineGetEventBus();
        }
        else
        {
          type metadata accessor for __ServiceLocator();
          uint64_t v20 = static __ServiceLocator.shared.getter();
          swift_beginAccess();
          uint64_t v33 = a3;
          uint64_t v21 = *(void *)(v20 + 16);
          swift_release();
          uint64_t v22 = v21;
          a3 = v33;
          uint64_t EventBus = MEMORY[0x22A692280](v22);
          if (!EventBus) {
            goto LABEL_31;
          }
        }
        MEMORY[0x22A68E810](EventBus, v18, v17);
      }
LABEL_26:
      if (!a2)
      {
        type metadata accessor for __ServiceLocator();
        uint64_t v23 = static __ServiceLocator.shared.getter();
        swift_beginAccess();
        uint64_t v24 = *(void *)(v23 + 16);
        swift_release();
        if (MEMORY[0x22A692280](v24)) {
          goto LABEL_29;
        }
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x227F8507CLL);
      }
      REEngineGetEventBus();
LABEL_29:
      char v25 = (void *)swift_allocObject();
      v25[2] = v8;
      v25[3] = a1;
      void v25[4] = a3;
      v25[5] = a4;
      aBlock[4] = partial apply for specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:);
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UnsafeMutableRawPointer?, @unowned UnsafeRawPointer) -> (@unowned REEventHandlerResult);
      aBlock[3] = &block_descriptor_553;
      long long v26 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      RETimelineEventFilter();
      uint64_t v27 = REEventBusSubscribeWithMatch();
      uint64_t v29 = v28;
      _Block_release(v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v13;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v27, v29, a1, isUniquelyReferenced_nonNull_native);
      uint64_t v31 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = static AnimationResource.actionSubscriptions;
      static AnimationResource.actionSubscriptions = 0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, (uint64_t)&type metadata for PlayAnimationAction, v32);
      static AnimationResource.actionSubscriptions = v34;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

uint64_t specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 176);
  v14[10] = *(_OWORD *)(a1 + 160);
  v14[11] = v2;
  uint64_t v15 = *(void *)(a1 + 192);
  long long v3 = *(_OWORD *)(a1 + 112);
  v14[6] = *(_OWORD *)(a1 + 96);
  v14[7] = v3;
  long long v4 = *(_OWORD *)(a1 + 144);
  v14[8] = *(_OWORD *)(a1 + 128);
  v14[9] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  void v14[2] = *(_OWORD *)(a1 + 32);
  v14[3] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v14[4] = *(_OWORD *)(a1 + 64);
  v14[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v7;
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if (v9)
  {
    uint64_t v10 = result;
    uint64_t v11 = v9;
    uint64_t v12 = *(void *)(a1 + 192);
    v13[5] = result;
    v13[6] = v9;
    EmphasizeActionHandler.actionUpdated(event:)((uint64_t)v14);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    void v13[3] = &type metadata for EmphasizeActionHandler;
    v13[4] = &protocol witness table for EmphasizeActionHandler;
    v13[0] = v10;
    v13[1] = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)v13, v12);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

{
  uint64_t result;
  char v3;
  uint64_t v4;
  char v5;
  char IsPaused;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  ValueMetadata *v12;
  _UNKNOWN **v13;
  unsigned char v14[16];
  uint64_t v15;
  char v16;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if (result == 1) {
    return result;
  }
  long long v4 = result;
  long long v5 = ((*(unsigned char *)(a1 + 56) & 1) == 0) & v3;
  if (*(unsigned char *)(a1 + 56) & 1) != 0 && (v3)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      REAnimationComponentGetComponentType();
      if (REEntityGetComponentByClass())
      {
        IsPaused = REAnimationComponentIsPaused();
        swift_release();
        if (IsPaused)
        {
          long long v5 = 1;
          goto LABEL_13;
        }
      }
      else
      {
        swift_release();
      }
    }
    if (v4)
    {
      outlined init with take of Transform?(a1 + 128, (uint64_t)v14, &demangling cache variable for type metadata for Double?);
      outlined init with take of Transform?((uint64_t)v14, (uint64_t)&v15, &demangling cache variable for type metadata for Double?);
      if ((v16 & 1) == 0)
      {
        swift_retain();
        static Duration.seconds(_:)();
        long long v7 = (double)Duration.components.getter();
        Duration.components.getter();
        MEMORY[0x22A68C670](*(void *)(v4 + 32), *(void *)(v4 + 48), (double)v8 * 1.0e-18 + v7);
        RENetworkMarkComponentDirty();
        AudioPlaybackController.play()();
        outlined consume of __ImageBasedLightComponent?(v4);
      }
    }
    long long v5 = 0;
  }
LABEL_13:
  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(a1 + 240);
  uint64_t v12 = &type metadata for PlayAudioActionHandler;
  unint64_t v13 = &protocol witness table for PlayAudioActionHandler;
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  swift_beginAccess();
  swift_retain();
  specialized Dictionary.subscript.setter((uint64_t)&v10, v9);
  swift_endAccess();
  return outlined consume of __ImageBasedLightComponent?(v4);
}

{
  long long v1;
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  _OWORD v8[12];
  uint64_t v9;

  uint64_t v1 = *(_OWORD *)(a1 + 176);
  _OWORD v8[10] = *(_OWORD *)(a1 + 160);
  _OWORD v8[11] = v1;
  uint64_t v9 = *(void *)(a1 + 192);
  long long v2 = *(_OWORD *)(a1 + 112);
  v8[6] = *(_OWORD *)(a1 + 96);
  v8[7] = v2;
  long long v3 = *(_OWORD *)(a1 + 144);
  v8[8] = *(_OWORD *)(a1 + 128);
  v8[9] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  v8[4] = *(_OWORD *)(a1 + 64);
  v8[5] = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v6;
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)((uint64_t)v8);
}

{
  long long v1;
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD v9[15];
  uint64_t v10;

  uint64_t v1 = *(_OWORD *)(a1 + 208);
  v9[12] = *(_OWORD *)(a1 + 192);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(a1 + 224);
  uint64_t v10 = *(void *)(a1 + 240);
  long long v2 = *(_OWORD *)(a1 + 144);
  v9[8] = *(_OWORD *)(a1 + 128);
  v9[9] = v2;
  long long v3 = *(_OWORD *)(a1 + 176);
  v9[10] = *(_OWORD *)(a1 + 160);
  v9[11] = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v4;
  long long v5 = *(_OWORD *)(a1 + 112);
  v9[6] = *(_OWORD *)(a1 + 96);
  v9[7] = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v7;
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)((uint64_t)v9);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Int>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Int>, 2uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Int> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD2<Float>>, 2uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD2<Float>> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Double>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Double>, 2uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Double> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, 2uLL);
}

uint64_t specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>, &v4);
  if ((void)v4 != 1)
  {
    long long v7 = v4;
    specialized FromToByActionHandler.actionUpdated(event:)((uint64_t)a1, (void (*)(void *__return_ptr, uint64_t))specialized ActionEvent.animationState.getter, (uint64_t)&type metadata for BlendShapeWeights, (void *(*)(void *__return_ptr, uint64_t, void, double))specialized FromToByActionHandler.evaluateResult(_:));
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v3 = a1[37];
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    uint64_t v6 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<BlendShapeWeights> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    long long v4 = v7;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v4, v3);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  long long v4;
  uint64_t v5;
  uint64_t v6;
  long long v7;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<JointTransforms>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>, &v4);
  if ((void)v4 != 1)
  {
    long long v7 = v4;
    specialized FromToByActionHandler.actionUpdated(event:)((uint64_t)a1, (void (*)(void *__return_ptr, uint64_t))specialized ActionEvent.animationState.getter, (uint64_t)&type metadata for JointTransforms, (void *(*)(void *__return_ptr, uint64_t, void, double))specialized FromToByActionHandler.evaluateResult(_:));
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v3 = a1[37];
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    uint64_t v6 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<JointTransforms> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    long long v4 = v7;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v4, v3);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  long long v15;
  void v16[5];
  long long v17;
  long long v18;
  long long v19;
  char v20;
  uint64_t v21;
  void v22[6];
  uint64_t v23;
  uint64_t v24;
  unsigned char v25[80];

  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, (uint64_t)v22);
  long long v2 = v22[0];
  uint64_t v3 = v22[1];
  long long v4 = v22[2];
  uint64_t v5 = v22[3];
  uint64_t v6 = v22[4];
  long long v7 = v22[5];
  uint64_t v8 = v23;
  uint64_t v9 = v24;
  uint64_t result = outlined init with take of Transform?((uint64_t)v22, (uint64_t)v25, &demangling cache variable for type metadata for FromToByActionHandler<Transform>?);
  if ((v25[64] & 1) == 0)
  {
    *(void *)&uint64_t v17 = v2;
    *((void *)&v17 + 1) = v3;
    *(void *)&uint64_t v18 = v4;
    *((void *)&v18 + 1) = v5;
    *(void *)&long long v19 = v6;
    *((void *)&v19 + 1) = v7;
    uint64_t v20 = v8 & 1;
    uint64_t v21 = v9;
    specialized FromToByActionHandler.actionUpdated(event:)((uint64_t)a1);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v11 = a1[57];
    v16[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<Transform>);
    v16[4] = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<Transform> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<Transform>);
    uint64_t v12 = swift_allocObject();
    v16[0] = v12;
    unint64_t v13 = v20;
    unint64_t v14 = v21;
    uint64_t v15 = v18;
    *(_OWORD *)(v12 + 16) = v17;
    *(_OWORD *)(v12 + 32) = v15;
    *(_OWORD *)(v12 + 48) = v19;
    *(unsigned char *)(v12 + 64) = v13;
    *(void *)(v12 + 72) = v14;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v16, v11);
    return swift_endAccess();
  }
  return result;
}

{
  int8x16_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void v10[5];
  int8x16_t v11;
  char v12;
  uint64_t v13;
  int8x16_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned char v17[48];

  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<simd_quatf>, &demangling cache variable for type metadata for FromToByActionHandler<simd_quatf>, &v14);
  long long v2 = v14;
  uint64_t v3 = v15;
  long long v4 = v16;
  uint64_t result = outlined init with take of Transform?((uint64_t)&v14, (uint64_t)v17, &demangling cache variable for type metadata for FromToByActionHandler<simd_quatf>?);
  if ((v17[32] & 1) == 0)
  {
    uint64_t v11 = v2;
    uint64_t v12 = v3 & 1;
    unint64_t v13 = v4;
    specialized FromToByActionHandler.actionUpdated(event:)((uint64_t)a1);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v6 = a1[45];
    v10[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<simd_quatf>);
    v10[4] = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<simd_quatf> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<simd_quatf>);
    long long v7 = swift_allocObject();
    v10[0] = v7;
    uint64_t v8 = v12;
    uint64_t v9 = v13;
    *(int8x16_t *)(v7 + 16) = v11;
    *(unsigned char *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v9;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v10, v6);
    return swift_endAccess();
  }
  return result;
}

{
  int8x16_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void v10[5];
  int8x16_t v11;
  char v12;
  uint64_t v13;
  int8x16_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned char v17[48];

  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>, &demangling cache variable for type metadata for FromToByActionHandler<SIMD4<Float>>, &v14);
  long long v2 = v14;
  uint64_t v3 = v15;
  long long v4 = v16;
  uint64_t result = outlined init with take of Transform?((uint64_t)&v14, (uint64_t)v17, &demangling cache variable for type metadata for FromToByActionHandler<SIMD4<Float>>?);
  if ((v17[32] & 1) == 0)
  {
    uint64_t v11 = v2;
    uint64_t v12 = v3 & 1;
    unint64_t v13 = v4;
    specialized FromToByActionHandler.actionUpdated(event:)((uint64_t)a1, (void (*)(void *__return_ptr))specialized ActionEvent.animationState.getter, (uint64_t *)&demangling cache variable for type metadata for SIMD4<Float>, specialized FromToByActionHandler.evaluateResult(_:));
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v6 = a1[45];
    v10[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<SIMD4<Float>>);
    v10[4] = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<SIMD4<Float>> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<SIMD4<Float>>);
    long long v7 = swift_allocObject();
    v10[0] = v7;
    uint64_t v8 = v12;
    uint64_t v9 = v13;
    *(int8x16_t *)(v7 + 16) = v11;
    *(unsigned char *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v9;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v10, v6);
    return swift_endAccess();
  }
  return result;
}

{
  int8x16_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void v10[5];
  int8x16_t v11;
  char v12;
  uint64_t v13;
  int8x16_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned char v17[48];

  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>, &demangling cache variable for type metadata for FromToByActionHandler<SIMD3<Float>>, &v14);
  long long v2 = v14;
  uint64_t v3 = v15;
  long long v4 = v16;
  uint64_t result = outlined init with take of Transform?((uint64_t)&v14, (uint64_t)v17, &demangling cache variable for type metadata for FromToByActionHandler<SIMD3<Float>>?);
  if ((v17[32] & 1) == 0)
  {
    uint64_t v11 = v2;
    uint64_t v12 = v3 & 1;
    unint64_t v13 = v4;
    specialized FromToByActionHandler.actionUpdated(event:)((uint64_t)a1, (void (*)(void *__return_ptr))specialized ActionEvent.animationState.getter, &demangling cache variable for type metadata for SIMD3<Float>, specialized FromToByActionHandler.evaluateResult(_:));
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v6 = a1[45];
    v10[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<SIMD3<Float>>);
    v10[4] = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<SIMD3<Float>> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<SIMD3<Float>>);
    long long v7 = swift_allocObject();
    v10[0] = v7;
    uint64_t v8 = v12;
    uint64_t v9 = v13;
    *(int8x16_t *)(v7 + 16) = v11;
    *(unsigned char *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v9;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v10, v6);
    return swift_endAccess();
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1);
  if ((v4 & 1) == 0)
  {
    uint64_t v11 = result;
    uint64_t v12 = BYTE4(result) & 1;
    unint64_t v13 = v3;
    specialized FromToByActionHandler.actionUpdated(event:)((uint64_t)a1);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<Float>);
    uint64_t v10 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<Float> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<Float>);
    uint64_t v6 = v11;
    long long v7 = v12;
    uint64_t v8 = v13;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    return swift_endAccess();
  }
  return result;
}

uint64_t specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *), unint64_t *a5)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, a2, a3);
  if ((v12 & 1) == 0)
  {
    uint64_t v19 = result;
    char v20 = v10 & 1;
    uint64_t v21 = v11;
    a4(a1);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v13 = a1[39];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v18 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(a5, a3);
    uint64_t v14 = v19;
    char v15 = v20;
    uint64_t v16 = v21;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)&v14, v13);
    return swift_endAccess();
  }
  return result;
}

uint64_t specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(float32x4_t *a1)
{
  float32x4_t v2 = a1[13];
  v20[12] = a1[12];
  v20[13] = v2;
  float32x4_t v3 = a1[15];
  v20[14] = a1[14];
  v20[15] = v3;
  float32x4_t v4 = a1[9];
  v20[8] = a1[8];
  v20[9] = v4;
  float32x4_t v5 = a1[11];
  _OWORD v20[10] = a1[10];
  _OWORD v20[11] = v5;
  float32x4_t v6 = a1[5];
  v20[4] = a1[4];
  v20[5] = v6;
  float32x4_t v7 = a1[7];
  v20[6] = a1[6];
  v20[7] = v7;
  float32x4_t v8 = a1[1];
  v20[0] = *a1;
  v20[1] = v8;
  float32x4_t v9 = a1[3];
  v20[2] = a1[2];
  void v20[3] = v9;
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if ((v12 & 0x100) == 0)
  {
    uint64_t v13 = result;
    uint64_t v14 = v11;
    uint64_t v15 = a1[15].i64[1];
    uint64_t v18[5] = result;
    v18[6] = v11;
    char v16 = v12 & 1;
    char v19 = v12 & 1;
    SpinActionHandler.actionUpdated(event:)(v20);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    v18[3] = &type metadata for SpinActionHandler;
    v18[4] = &protocol witness table for SpinActionHandler;
    uint64_t v17 = swift_allocObject();
    v18[0] = v17;
    *(void *)(v17 + 16) = v13;
    *(void *)(v17 + 24) = v14;
    *(unsigned char *)(v17 + 32) = v16;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v18, v15);
    return swift_endAccess();
  }
  return result;
}

{
  float32x4_t v1;
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v10[16];

  uint64_t v1 = a1[13];
  v10[12] = a1[12];
  v10[13] = v1;
  float32x4_t v2 = a1[15];
  v10[14] = a1[14];
  v10[15] = v2;
  float32x4_t v3 = a1[9];
  v10[8] = a1[8];
  v10[9] = v3;
  float32x4_t v4 = a1[11];
  v10[10] = a1[10];
  v10[11] = v4;
  float32x4_t v5 = a1[5];
  v10[4] = a1[4];
  v10[5] = v5;
  float32x4_t v6 = a1[7];
  v10[6] = a1[6];
  v10[7] = v6;
  float32x4_t v7 = a1[1];
  v10[0] = *a1;
  v10[1] = v7;
  float32x4_t v8 = a1[3];
  v10[2] = a1[2];
  v10[3] = v8;
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(v10);
}

uint64_t specialized closure #1 in static ActionHandlerProtocol.subscribe(_:)(uint64_t a1, void (*a2)(_OWORD *))
{
  long long v4 = *(_OWORD *)(a1 + 192);
  v42[13] = *(_OWORD *)(a1 + 208);
  long long v5 = *(_OWORD *)(a1 + 240);
  v42[14] = *(_OWORD *)(a1 + 224);
  v42[15] = v5;
  long long v6 = *(_OWORD *)(a1 + 144);
  v42[8] = *(_OWORD *)(a1 + 128);
  v42[9] = v6;
  long long v7 = *(_OWORD *)(a1 + 176);
  _OWORD v42[10] = *(_OWORD *)(a1 + 160);
  v42[11] = v7;
  v42[12] = v4;
  long long v8 = *(_OWORD *)(a1 + 80);
  v42[4] = *(_OWORD *)(a1 + 64);
  v42[5] = v8;
  long long v9 = *(_OWORD *)(a1 + 112);
  v42[6] = *(_OWORD *)(a1 + 96);
  v42[7] = v9;
  long long v10 = *(_OWORD *)(a1 + 16);
  v42[0] = *(_OWORD *)a1;
  v42[1] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v42[2] = *(_OWORD *)(a1 + 32);
  v42[3] = v11;
  specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1, (uint64_t)v29);
  outlined init with take of Transform?((uint64_t)v29, (uint64_t)v43, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
  outlined init with take of Transform?((uint64_t)v43, (uint64_t)v44, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
  uint64_t result = _s17RealityFoundation24OrbitEntityActionHandlerVSgWOg(v44);
  if (result != 1)
  {
    uint64_t v13 = *(void *)(a1 + 248);
    outlined init with take of Transform?((uint64_t)v43, (uint64_t)v27, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
    long long v38 = v27[8];
    long long v39 = v27[9];
    long long v40 = v27[10];
    long long v41 = v27[11];
    long long v34 = v27[4];
    long long v35 = v27[5];
    long long v36 = v27[6];
    long long v37 = v27[7];
    long long v30 = v27[0];
    long long v31 = v27[1];
    long long v32 = v27[2];
    long long v33 = v27[3];
    a2(v42);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    v26[3] = &type metadata for OrbitEntityActionHandler;
    v26[4] = &protocol witness table for OrbitEntityActionHandler;
    uint64_t v14 = (_OWORD *)swift_allocObject();
    long long v15 = v39;
    v28[8] = v38;
    v28[9] = v39;
    long long v16 = v40;
    long long v17 = v41;
    v28[10] = v40;
    v28[11] = v41;
    long long v18 = v34;
    long long v19 = v35;
    v28[4] = v34;
    v28[5] = v35;
    long long v20 = v36;
    long long v21 = v37;
    v28[6] = v36;
    v28[7] = v37;
    long long v22 = v30;
    long long v23 = v31;
    v28[0] = v30;
    v28[1] = v31;
    long long v24 = v32;
    long long v25 = v33;
    v28[2] = v32;
    v28[3] = v33;
    v14[9] = v38;
    v14[10] = v15;
    v14[11] = v16;
    _OWORD v14[12] = v17;
    v14[5] = v18;
    v14[6] = v19;
    v14[7] = v20;
    v14[8] = v21;
    v14[1] = v22;
    void v14[2] = v23;
    v26[0] = v14;
    v14[3] = v24;
    v14[4] = v25;
    swift_beginAccess();
    outlined retain of OrbitEntityActionHandler((uint64_t)v28);
    specialized Dictionary.subscript.setter((uint64_t)v26, v13);
    swift_endAccess();
    return outlined release of TimelineDefinition?((uint64_t)v28);
  }
  return result;
}

uint64_t specialized closure #3 in static ActionHandlerProtocol.subscribe(_:)(uint64_t a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if (result != 1)
  {
    uint64_t v3 = result;
    if (result && (*(unsigned char *)(a1 + 56) & 1) != 0)
    {
      MEMORY[0x22A68C6D0](*(void *)(result + 32), *(void *)(result + 48));
      RENetworkMarkComponentDirty();
    }
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(a1 + 240);
    long long v7 = &type metadata for PlayAudioActionHandler;
    long long v8 = &protocol witness table for PlayAudioActionHandler;
    uint64_t v5 = v3;
    char v6 = 0;
    swift_beginAccess();
    swift_retain();
    specialized Dictionary.subscript.setter((uint64_t)&v5, v4);
    swift_endAccess();
    return outlined consume of __ImageBasedLightComponent?(v3);
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void v6[5];

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if (result == 1) {
    return result;
  }
  uint64_t v3 = result;
  if (*(unsigned char *)(a1 + 65))
  {
    if (!result)
    {
      uint64_t v4 = 0;
      goto LABEL_9;
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      REAnimationComponentGetComponentType();
      if (REEntityGetComponentByClass())
      {
        REAnimationComponentStopAnimation();
        RENetworkMarkComponentDirty();
      }
      swift_release();
    }
  }
  uint64_t v4 = v3;
LABEL_9:
  outlined consume of __ImageBasedLightComponent?(v4);
  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(a1 + 248);
  v6[3] = &type metadata for PlayAnimationActionHandler;
  v6[4] = &protocol witness table for PlayAnimationActionHandler;
  v6[0] = 0;
  swift_beginAccess();
  specialized Dictionary.subscript.setter((uint64_t)v6, v5);
  return swift_endAccess();
}

{
  return specialized closure #3 in static ActionHandlerProtocol.subscribe(_:)(a1, 4uLL);
}

{
  long long v1;
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD v9[15];
  uint64_t v10;

  uint64_t v1 = *(_OWORD *)(a1 + 208);
  v9[12] = *(_OWORD *)(a1 + 192);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(a1 + 224);
  long long v10 = *(void *)(a1 + 240);
  float32x4_t v2 = *(_OWORD *)(a1 + 144);
  v9[8] = *(_OWORD *)(a1 + 128);
  v9[9] = v2;
  uint64_t v3 = *(_OWORD *)(a1 + 176);
  v9[10] = *(_OWORD *)(a1 + 160);
  v9[11] = v3;
  uint64_t v4 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v4;
  uint64_t v5 = *(_OWORD *)(a1 + 112);
  v9[6] = *(_OWORD *)(a1 + 96);
  v9[7] = v5;
  char v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v7;
  return specialized closure #3 in static ActionHandlerProtocol.subscribe(_:)((uint64_t)v9);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Int>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Int>, 4uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Int> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD2<Float>>, 4uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD2<Float>> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Double>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Double>, 4uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Double> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, 4uLL);
}

uint64_t specialized closure #3 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(4uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<BlendShapeWeights> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  long long v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<JointTransforms>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(4uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<JointTransforms>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<JointTransforms> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

uint64_t specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *__src, void (*a2)(unsigned char *))
{
  memcpy(__dst, __src, 0x170uLL);
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(__src, (uint64_t)&v19);
  if ((v31 & 1) == 0)
  {
    uint64_t v5 = v20;
    uint64_t v6 = v21;
    uint64_t v7 = v22;
    uint64_t v8 = v23;
    uint64_t v9 = v24;
    uint64_t v10 = v25;
    unint64_t v11 = v29 | ((unint64_t)v30 << 32);
    uint64_t v17 = v19;
    uint64_t v18 = __src[45];
    unsigned int v14 = v29;
    uint64_t v15 = v28;
    uint64_t v32 = v19;
    uint64_t v33 = v20;
    uint64_t v34 = v21;
    long long v35 = v22;
    long long v36 = v23;
    uint64_t v37 = v24;
    uint64_t v38 = v25;
    uint64_t v39 = v26;
    uint64_t v12 = v26;
    uint64_t v16 = v27;
    uint64_t v40 = v27;
    uint64_t v41 = v28;
    unsigned int v42 = v29;
    char v43 = v30 & 1;
    a2(__dst);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    long long v22 = &type metadata for BillboardActionHandler;
    long long v23 = &protocol witness table for BillboardActionHandler;
    uint64_t v13 = swift_allocObject();
    uint64_t v19 = v13;
    *(void *)(v13 + 16) = v17;
    *(void *)(v13 + 24) = v5;
    *(void *)(v13 + 32) = v6;
    *(void *)(v13 + 40) = v7;
    *(void *)(v13 + 48) = v8;
    *(void *)(v13 + 56) = v9;
    *(void *)(v13 + 64) = v10;
    *(void *)(v13 + 72) = v12;
    *(void *)(v13 + 80) = v16;
    *(void *)(v13 + 88) = v15;
    *(_DWORD *)(v13 + 96) = v14;
    *(unsigned char *)(v13 + 100) = BYTE4(v11) & 1;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)&v19, v18);
    return swift_endAccess();
  }
  return result;
}

uint64_t specialized closure #4 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(8uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<BlendShapeWeights> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  long long v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<JointTransforms>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(8uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<JointTransforms>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<JointTransforms> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

uint64_t *specialized closure #3 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1, Swift::UInt a2)
{
  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, (uint64_t)v15);
  outlined init with take of Transform?((uint64_t)v15, (uint64_t)v16, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
  outlined init with take of Transform?((uint64_t)v16, (uint64_t)v17, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
  uint64_t result = (uint64_t *)_s17RealityFoundation24OrbitEntityActionHandlerVSgWOg(v17);
  if (result != 1)
  {
    outlined init with take of Transform?((uint64_t)v16, (uint64_t)v14, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
    specialized static EntityAction.__unsubscribe(from:_:)(a2, a1[13]);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[31];
    void v13[3] = &type metadata for OrbitEntityActionHandler;
    v13[4] = &protocol witness table for OrbitEntityActionHandler;
    long long v6 = (_OWORD *)swift_allocObject();
    v13[0] = v6;
    long long v7 = v14[9];
    v6[9] = v14[8];
    v6[10] = v7;
    long long v8 = v14[11];
    v6[11] = v14[10];
    v6[12] = v8;
    long long v9 = v14[5];
    v6[5] = v14[4];
    v6[6] = v9;
    long long v10 = v14[7];
    v6[7] = v14[6];
    v6[8] = v10;
    long long v11 = v14[1];
    v6[1] = v14[0];
    v6[2] = v11;
    long long v12 = v14[3];
    v6[3] = v14[2];
    v6[4] = v12;
    swift_beginAccess();
    outlined retain of OrbitEntityActionHandler((uint64_t)v14);
    specialized Dictionary.subscript.setter((uint64_t)v13, v5);
    swift_endAccess();
    return outlined release of OrbitEntityActionHandler?(v16);
  }
  return result;
}

uint64_t specialized closure #5 in static ActionHandlerProtocol.subscribe(_:)(uint64_t a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if (result != 1)
  {
    uint64_t v4 = result;
    char v5 = v3 & 1;
    if (result && (*(unsigned char *)(a1 + 56) & 1) != 0)
    {
      MEMORY[0x22A68C5B0](*(void *)(result + 32), *(void *)(result + 48));
      RENetworkMarkComponentDirty();
    }
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(a1 + 240);
    long long v9 = &type metadata for PlayAudioActionHandler;
    long long v10 = &protocol witness table for PlayAudioActionHandler;
    uint64_t v7 = v4;
    char v8 = v5;
    swift_beginAccess();
    swift_retain();
    specialized Dictionary.subscript.setter((uint64_t)&v7, v6);
    swift_endAccess();
    return outlined consume of __ImageBasedLightComponent?(v4);
  }
  return result;
}

{
  return specialized closure #3 in static ActionHandlerProtocol.subscribe(_:)(a1, 0x10uLL);
}

{
  long long v1;
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD v9[15];
  uint64_t v10;

  uint64_t v1 = *(_OWORD *)(a1 + 208);
  v9[12] = *(_OWORD *)(a1 + 192);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(a1 + 224);
  long long v10 = *(void *)(a1 + 240);
  float32x4_t v2 = *(_OWORD *)(a1 + 144);
  v9[8] = *(_OWORD *)(a1 + 128);
  v9[9] = v2;
  char v3 = *(_OWORD *)(a1 + 176);
  v9[10] = *(_OWORD *)(a1 + 160);
  v9[11] = v3;
  uint64_t v4 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v4;
  char v5 = *(_OWORD *)(a1 + 112);
  v9[6] = *(_OWORD *)(a1 + 96);
  v9[7] = v5;
  uint64_t v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  uint64_t v7 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v7;
  return specialized closure #5 in static ActionHandlerProtocol.subscribe(_:)((uint64_t)v9);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Int>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Int>, 0x10uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Int> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD2<Float>>, 0x10uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD2<Float>> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Double>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Double>, 0x10uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Double> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, 0x10uLL);
}

uint64_t specialized closure #5 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(0x10uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<BlendShapeWeights> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  long long v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<JointTransforms>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(0x10uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<JointTransforms>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<JointTransforms> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

uint64_t specialized closure #6 in static ActionHandlerProtocol.subscribe(_:)(uint64_t a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)((uint64_t *)a1);
  if (result != 1)
  {
    uint64_t v4 = result;
    char v5 = v3 & 1;
    if (result)
    {
      if (*(unsigned char *)(a1 + 56))
      {
        outlined init with take of Transform?(a1 + 128, (uint64_t)v13, &demangling cache variable for type metadata for Double?);
        outlined init with take of Transform?((uint64_t)v13, (uint64_t)&v14, &demangling cache variable for type metadata for Double?);
        if ((v15 & 1) == 0)
        {
          static Duration.seconds(_:)();
          double v6 = (double)Duration.components.getter();
          Duration.components.getter();
          MEMORY[0x22A68C670](*(void *)(v4 + 32), *(void *)(v4 + 48), (double)v7 * 1.0e-18 + v6);
          RENetworkMarkComponentDirty();
          AudioPlaybackController.play()();
        }
      }
    }
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)(a1 + 240);
    long long v11 = &type metadata for PlayAudioActionHandler;
    long long v12 = &protocol witness table for PlayAudioActionHandler;
    uint64_t v9 = v4;
    char v10 = v5;
    swift_beginAccess();
    swift_retain();
    specialized Dictionary.subscript.setter((uint64_t)&v9, v8);
    swift_endAccess();
    return outlined consume of __ImageBasedLightComponent?(v4);
  }
  return result;
}

{
  return specialized closure #3 in static ActionHandlerProtocol.subscribe(_:)(a1, 0x20uLL);
}

{
  long long v1;
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD v9[15];
  uint64_t v10;

  uint64_t v1 = *(_OWORD *)(a1 + 208);
  v9[12] = *(_OWORD *)(a1 + 192);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(a1 + 224);
  char v10 = *(void *)(a1 + 240);
  float32x4_t v2 = *(_OWORD *)(a1 + 144);
  v9[8] = *(_OWORD *)(a1 + 128);
  v9[9] = v2;
  char v3 = *(_OWORD *)(a1 + 176);
  v9[10] = *(_OWORD *)(a1 + 160);
  v9[11] = v3;
  uint64_t v4 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v4;
  char v5 = *(_OWORD *)(a1 + 112);
  v9[6] = *(_OWORD *)(a1 + 96);
  v9[7] = v5;
  double v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  uint64_t v7 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v7;
  return specialized closure #6 in static ActionHandlerProtocol.subscribe(_:)((uint64_t)v9);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Int>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Int>, 0x20uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Int> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<SIMD2<Float>>, 0x20uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<SIMD2<Float>> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, &demangling cache variable for type metadata for SetEntityPropertyAction<Double>, &demangling cache variable for type metadata for SetEntityPropertyActionHandler<Double>, 0x20uLL, &lazy protocol witness table cache variable for type SetEntityPropertyActionHandler<Double> and conformance SetEntityPropertyActionHandler<A>);
}

{
  return specialized closure #2 in static ActionHandlerProtocol.subscribe(_:)(a1, 0x20uLL);
}

uint64_t specialized closure #6 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(0x20uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<BlendShapeWeights> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<BlendShapeWeights>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  long long v6;
  uint64_t v7;
  uint64_t v8;

  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, &demangling cache variable for type metadata for FromToByAction<JointTransforms>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>, &v6);
  uint64_t v3 = v6;
  if ((void)v6 != 1)
  {
    uint64_t v4 = *((void *)&v6 + 1);
    specialized static EntityAction.__unsubscribe(from:_:)(0x20uLL, a1[19], &demangling cache variable for type metadata for FromToByAction<JointTransforms>);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v5 = a1[37];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByActionHandler<JointTransforms> and conformance FromToByActionHandler<A>, &demangling cache variable for type metadata for FromToByActionHandler<JointTransforms>);
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    specialized Dictionary.subscript.setter((uint64_t)&v6, v5);
    swift_endAccess();
    return outlined consume of JointTransforms??(v3);
  }
  return result;
}

uint64_t specialized closure #4 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1, Swift::UInt a2)
{
  uint64_t result = specialized static ActionHandlerProtocol.actionHandler(_:)(a1, (uint64_t)v19);
  if ((v29 & 1) == 0)
  {
    uint64_t v5 = v19[2];
    uint64_t v17 = v19[1];
    uint64_t v18 = v19[0];
    long long v6 = v20;
    uint64_t v7 = v21;
    uint64_t v8 = v22;
    uint64_t v9 = v23;
    uint64_t v10 = v24;
    uint64_t v15 = v26;
    uint64_t v16 = v25;
    unint64_t v11 = v27 | ((unint64_t)v28 << 32);
    unsigned int v12 = v27;
    specialized static EntityAction.__unsubscribe(from:_:)(a2, a1[27]);
    if (one-time initialization token for actionHandlers != -1) {
      swift_once();
    }
    uint64_t v13 = a1[45];
    uint64_t v20 = &type metadata for BillboardActionHandler;
    uint64_t v21 = &protocol witness table for BillboardActionHandler;
    uint64_t v14 = swift_allocObject();
    v19[0] = v14;
    *(void *)(v14 + 16) = v18;
    *(void *)(v14 + 24) = v17;
    *(void *)(v14 + 32) = v5;
    *(void *)(v14 + 40) = v6;
    *(void *)(v14 + 48) = v7;
    *(void *)(v14 + 56) = v8;
    *(void *)(v14 + 64) = v9;
    *(void *)(v14 + 72) = v10;
    *(void *)(v14 + 80) = v16;
    *(void *)(v14 + 88) = v15;
    *(_DWORD *)(v14 + 96) = v12;
    *(unsigned char *)(v14 + 100) = BYTE4(v11) & 1;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v19, v13);
    return swift_endAccess();
  }
  return result;
}

uint64_t specialized closure #8 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, a2, a3, &v12);
  uint64_t v8 = v12;
  if ((void)v12 == 1)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v9 = *((void *)&v12 + 1);
    *((void *)&v14 + 1) = __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v15 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(a4, a3);
    *(void *)&long long v13 = v8;
    *((void *)&v13 + 1) = v9;
  }
  uint64_t v10 = a1[37];
  swift_beginAccess();
  specialized Dictionary.subscript.setter((uint64_t)&v13, v10);
  return swift_endAccess();
}

uint64_t specialized closure #8 in static ActionHandlerProtocol.subscribe(_:)(uint64_t *a1)
{
  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, (uint64_t)v13);
  if (v18)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    uint64_t v21 = 0;
  }
  else
  {
    char v2 = v17;
    int v3 = v16;
    uint64_t v5 = v14;
    uint64_t v4 = v15;
    long long v11 = v13[2];
    long long v12 = v13[3];
    long long v9 = v13[0];
    long long v10 = v13[1];
    *((void *)&v20 + 1) = &type metadata for BillboardActionHandler;
    uint64_t v21 = &protocol witness table for BillboardActionHandler;
    uint64_t v6 = swift_allocObject();
    *(void *)&long long v19 = v6;
    *(_OWORD *)(v6 + 16) = v9;
    *(_OWORD *)(v6 + 32) = v10;
    *(_OWORD *)(v6 + 48) = v11;
    *(_OWORD *)(v6 + 64) = v12;
    *(void *)(v6 + 80) = v5;
    *(void *)(v6 + 88) = v4;
    *(_DWORD *)(v6 + 96) = v3;
    *(unsigned char *)(v6 + 100) = v2 & 1;
  }
  uint64_t v7 = a1[45];
  swift_beginAccess();
  specialized Dictionary.subscript.setter((uint64_t)&v19, v7);
  return swift_endAccess();
}

{
  _OWORD *v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  uint64_t v9;
  _OWORD v11[12];
  unsigned char v12[192];
  long long v13;
  long long v14;
  _UNKNOWN **v15;
  unsigned char v16[192];
  uint64_t v17[24];

  if (one-time initialization token for actionHandlers != -1) {
    swift_once();
  }
  specialized static ActionHandlerProtocol.actionHandler(_:)(a1, (uint64_t)v12);
  outlined init with take of Transform?((uint64_t)v12, (uint64_t)v16, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
  outlined init with take of Transform?((uint64_t)v16, (uint64_t)v17, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
  if (_s17RealityFoundation24OrbitEntityActionHandlerVSgWOg(v17) == 1)
  {
    long long v13 = 0u;
    uint64_t v14 = 0u;
    uint64_t v15 = 0;
  }
  else
  {
    *((void *)&v14 + 1) = &type metadata for OrbitEntityActionHandler;
    uint64_t v15 = &protocol witness table for OrbitEntityActionHandler;
    char v2 = (_OWORD *)swift_allocObject();
    *(void *)&long long v13 = v2;
    outlined init with take of Transform?((uint64_t)v16, (uint64_t)v11, &demangling cache variable for type metadata for OrbitEntityActionHandler?);
    int v3 = v11[9];
    v2[9] = v11[8];
    v2[10] = v3;
    uint64_t v4 = v11[11];
    v2[11] = v11[10];
    v2[12] = v4;
    uint64_t v5 = v11[5];
    v2[5] = v11[4];
    v2[6] = v5;
    uint64_t v6 = v11[7];
    v2[7] = v11[6];
    v2[8] = v6;
    uint64_t v7 = v11[1];
    v2[1] = v11[0];
    _OWORD v2[2] = v7;
    uint64_t v8 = v11[3];
    v2[3] = v11[2];
    v2[4] = v8;
  }
  long long v9 = a1[31];
  swift_beginAccess();
  specialized Dictionary.subscript.setter((uint64_t)&v13, v9);
  return swift_endAccess();
}

uint64_t specialized static EntityAction.__register()()
{
  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000021, 0x8000000228353D80);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for EmphasizeAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for EmphasizeAction, (uint64_t)&protocol witness table for EmphasizeAction, 0xD000000000000021, 0x8000000228353D80, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000021, 0x8000000228353E50);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for PlayAudioAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for PlayAudioAction, (uint64_t)&protocol witness table for PlayAudioAction, 0xD000000000000021, 0x8000000228353E50, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003FLL, 0x8000000228353F40);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD00000000000003FLL, 0x8000000228353F40, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000037, 0x8000000228353FF0);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000037, 0x8000000228353FF0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000035, 0x80000002283540A0);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000035, 0x80000002283540A0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000034, 0x8000000228354150);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000034, 0x8000000228354150, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000039, 0x8000000228354200);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000039, 0x8000000228354200, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x80000002283542B0);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000043, 0x80000002283542B0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x8000000228354380);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000043, 0x8000000228354380, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x8000000228354450);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000043, 0x8000000228354450, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000037, 0x8000000228354520);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000037, 0x8000000228354520, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000036, 0x80000002283545D0);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for SetEntityPropertyAction<A>, 0xD000000000000036, 0x80000002283545D0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000045, 0x8000000228354680);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD000000000000045, 0x8000000228354680, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x8000000228354750);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<JointTransforms>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<JointTransforms>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD000000000000043, 0x8000000228354750, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000036, 0x8000000228354820);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD000000000000036, 0x8000000228354820, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000030, 0x80000002283548D0);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD000000000000030, 0x80000002283548D0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003ALL, 0x8000000228354970);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD00000000000003ALL, 0x8000000228354970, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003ALL, 0x8000000228354A20);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD00000000000003ALL, 0x8000000228354A20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003ALL, 0x8000000228354AD0);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD00000000000003ALL, 0x8000000228354AD0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000002ELL, 0x8000000228354B80);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Double>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Double>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD00000000000002ELL, 0x8000000228354B80, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  long long v8;
  uint64_t v9;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000002DLL, 0x8000000228354C10);
    if (v3)
    {
      uint64_t v8 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>);
      if ((void)v8 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v9 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v6, (uint64_t)&protocol witness table for FromToByAction<A>, 0xD00000000000002DLL, 0x8000000228354C10, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v9;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000021, 0x8000000228354CA0);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for BillboardAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for BillboardAction, (uint64_t)&protocol witness table for BillboardAction, 0xD000000000000021, 0x8000000228354CA0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000001CLL, 0x8000000228354D20);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for SpinAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for SpinAction, (uint64_t)&protocol witness table for SpinAction, 0xD00000000000001CLL, 0x8000000228354D20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000023, 0x8000000228354D90);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for OrbitEntityAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for OrbitEntityAction, (uint64_t)&protocol witness table for OrbitEntityAction, 0xD000000000000023, 0x8000000228354D90, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000001FLL, 0x8000000228354E20);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for ImpulseAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for ImpulseAction, (uint64_t)&protocol witness table for ImpulseAction, 0xD00000000000001FLL, 0x8000000228354E20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000028, 0x8000000228354E90);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for SetEntityEnabledAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for SetEntityEnabledAction, (uint64_t)&protocol witness table for SetEntityEnabledAction, 0xD000000000000028, 0x8000000228354E90, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000024, 0x8000000228354F20);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for NotificationAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for NotificationAction, (uint64_t)&protocol witness table for NotificationAction, 0xD000000000000024, 0x8000000228354F20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  char isUniquelyReferenced_nonNull_native;
  long long v7;
  uint64_t v8;

  if (one-time initialization token for actionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.actionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.actionTypeMap;
  if (*(void *)(static AnimationResource.actionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000025, 0x8000000228354FB0);
    if (v3)
    {
      long long v7 = *(_OWORD *)(*(void *)(v1 + 56) + 16 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v7 == &type metadata for PlayAnimationAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EntityAction.Type);
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *object;
  uint64_t *object = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)&type metadata for PlayAnimationAction, (uint64_t)&protocol witness table for PlayAnimationAction, 0xD000000000000025, 0x8000000228354FB0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v8;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t specialized static EntityAction<>.__registerCodable()()
{
  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000021, 0x8000000228353D80);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for EmphasizeAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type EmphasizeAction and conformance EmphasizeAction();
  unint64_t v7 = lazy protocol witness table accessor for type EmphasizeAction and conformance EmphasizeAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for EmphasizeAction;
  v11[1] = (uint64_t)&protocol witness table for EmphasizeAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD000000000000021, 0x8000000228353D80, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000021, 0x8000000228353E50);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for PlayAudioAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type PlayAudioAction and conformance PlayAudioAction();
  unint64_t v7 = lazy protocol witness table accessor for type PlayAudioAction and conformance PlayAudioAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for PlayAudioAction;
  v11[1] = (uint64_t)&protocol witness table for PlayAudioAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD000000000000021, 0x8000000228353E50, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003FLL, 0x8000000228353F40);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Transform> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Transform> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Transform>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD00000000000003FLL, 0x8000000228353F40, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000037, 0x8000000228353FF0);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<String>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<String> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<String>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<String> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<String>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000037, 0x8000000228353FF0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000035, 0x80000002283540A0);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Bool> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Bool> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Bool>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000035, 0x80000002283540A0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000034, 0x8000000228354150);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Int> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Int> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Int>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000034, 0x8000000228354150, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000039, 0x8000000228354200);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<simd_quatf> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<simd_quatf> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<simd_quatf>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000039, 0x8000000228354200, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x80000002283542B0);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<SIMD4<Float>> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<SIMD4<Float>> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD4<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000043, 0x80000002283542B0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x8000000228354380);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<SIMD3<Float>> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<SIMD3<Float>> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD3<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000043, 0x8000000228354380, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x8000000228354450);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<SIMD2<Float>> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<SIMD2<Float>> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<SIMD2<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000043, 0x8000000228354450, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000037, 0x8000000228354520);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Double> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Double> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Double>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000037, 0x8000000228354520, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000036, 0x80000002283545D0);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Float> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type SetEntityPropertyAction<Float> and conformance SetEntityPropertyAction<A>, &demangling cache variable for type metadata for SetEntityPropertyAction<Float>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for SetEntityPropertyAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000036, 0x80000002283545D0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000045, 0x8000000228354680);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<BlendShapeWeights> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<BlendShapeWeights> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<BlendShapeWeights>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000045, 0x8000000228354680, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000043, 0x8000000228354750);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<JointTransforms>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<JointTransforms>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<JointTransforms> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<JointTransforms>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<JointTransforms> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<JointTransforms>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000043, 0x8000000228354750, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000036, 0x8000000228354820);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Transform>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<Transform> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<Transform>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<Transform> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<Transform>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000036, 0x8000000228354820, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000030, 0x80000002283548D0);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<simd_quatf>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<simd_quatf> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<simd_quatf>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<simd_quatf> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<simd_quatf>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD000000000000030, 0x80000002283548D0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003ALL, 0x8000000228354970);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<SIMD4<Float>> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<SIMD4<Float>> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<SIMD4<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD00000000000003ALL, 0x8000000228354970, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003ALL, 0x8000000228354A20);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<SIMD3<Float>> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<SIMD3<Float>> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<SIMD3<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD00000000000003ALL, 0x8000000228354A20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000003ALL, 0x8000000228354AD0);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<SIMD2<Float>> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<SIMD2<Float>> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<SIMD2<Float>>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD00000000000003ALL, 0x8000000228354AD0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000002ELL, 0x8000000228354B80);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Double>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Double>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<Double> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<Double>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<Double> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<Double>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD00000000000002ELL, 0x8000000228354B80, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  long long v10;
  uint64_t v11;
  uint64_t v12[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000002DLL, 0x8000000228354C10);
    if (v3)
    {
      uint64_t v10 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      swift_endAccess();
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>);
      if ((void)v10 == result) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FromToByAction<Float>);
  unint64_t v7 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<Float> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<Float>);
  uint64_t v8 = lazy protocol witness table accessor for type Scene.Publisher<SceneEvents.Render> and conformance Scene.Publisher<A>(&lazy protocol witness table cache variable for type FromToByAction<Float> and conformance FromToByAction<A>, &demangling cache variable for type metadata for FromToByAction<Float>);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v11 = *object;
  uint64_t *object = 0x8000000000000000;
  v12[0] = v6;
  v12[1] = (uint64_t)&protocol witness table for FromToByAction<A>;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = MEMORY[0x263F8E628];
  v12[5] = MEMORY[0x263F8E650];
  v12[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v12, 0xD00000000000002DLL, 0x8000000228354C10, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v11;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000021, 0x8000000228354CA0);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for BillboardAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type BillboardAction and conformance BillboardAction();
  unint64_t v7 = lazy protocol witness table accessor for type BillboardAction and conformance BillboardAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for BillboardAction;
  v11[1] = (uint64_t)&protocol witness table for BillboardAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD000000000000021, 0x8000000228354CA0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000001CLL, 0x8000000228354D20);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for SpinAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type SpinAction and conformance SpinAction();
  unint64_t v7 = lazy protocol witness table accessor for type SpinAction and conformance SpinAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for SpinAction;
  v11[1] = (uint64_t)&protocol witness table for SpinAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD00000000000001CLL, 0x8000000228354D20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000023, 0x8000000228354D90);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for OrbitEntityAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type OrbitEntityAction and conformance OrbitEntityAction();
  unint64_t v7 = lazy protocol witness table accessor for type OrbitEntityAction and conformance OrbitEntityAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for OrbitEntityAction;
  v11[1] = (uint64_t)&protocol witness table for OrbitEntityAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD000000000000023, 0x8000000228354D90, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD00000000000001FLL, 0x8000000228354E20);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for ImpulseAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type ImpulseAction and conformance ImpulseAction();
  unint64_t v7 = lazy protocol witness table accessor for type ImpulseAction and conformance ImpulseAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for ImpulseAction;
  v11[1] = (uint64_t)&protocol witness table for ImpulseAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD00000000000001FLL, 0x8000000228354E20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000028, 0x8000000228354E90);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for SetEntityEnabledAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type SetEntityEnabledAction and conformance SetEntityEnabledAction();
  unint64_t v7 = lazy protocol witness table accessor for type SetEntityEnabledAction and conformance SetEntityEnabledAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for SetEntityEnabledAction;
  v11[1] = (uint64_t)&protocol witness table for SetEntityEnabledAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD000000000000028, 0x8000000228354E90, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000024, 0x8000000228354F20);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for NotificationAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type NotificationAction and conformance NotificationAction();
  unint64_t v7 = lazy protocol witness table accessor for type NotificationAction and conformance NotificationAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for NotificationAction;
  v11[1] = (uint64_t)&protocol witness table for NotificationAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD000000000000024, 0x8000000228354F20, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

{
  uint64_t *object;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  unint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  long long v9;
  uint64_t v10;
  uint64_t v11[7];

  if (one-time initialization token for codableActionTypeMap != -1) {
    swift_once();
  }
  object = &static AnimationResource.codableActionTypeMap;
  swift_beginAccess();
  uint64_t v1 = static AnimationResource.codableActionTypeMap;
  if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
  {
    unint64_t v2 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000025, 0x8000000228354FB0);
    if (v3)
    {
      long long v9 = *(_OWORD *)(*(void *)(v1 + 56) + 56 * v2);
      uint64_t result = swift_endAccess();
      if ((ValueMetadata *)v9 == &type metadata for PlayAnimationAction) {
        return result;
      }
      _StringGuts.grow(_:)(50);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (action: EntityAction & Decodable & Encodable.Type, parameter: Decodable & Encodable.Type));
      v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      object = (uint64_t *)v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
  unint64_t v6 = lazy protocol witness table accessor for type PlayAnimationAction and conformance PlayAnimationAction();
  unint64_t v7 = lazy protocol witness table accessor for type PlayAnimationAction and conformance PlayAnimationAction();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *object;
  uint64_t *object = 0x8000000000000000;
  v11[0] = (uint64_t)&type metadata for PlayAnimationAction;
  v11[1] = (uint64_t)&protocol witness table for PlayAnimationAction;
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = MEMORY[0x263F8E628];
  void v11[5] = MEMORY[0x263F8E650];
  v11[6] = MEMORY[0x263F8E630];
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v11, 0xD000000000000025, 0x8000000228354FB0, isUniquelyReferenced_nonNull_native);
  uint64_t *object = v10;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  uint64_t v9 = Strong;
  switch(a4)
  {
    case 1:
      uint64_t v11 = *(void *)a2;
      uint64_t v10 = *(void *)(a2 + 8);
      uint64_t v297 = *(void *)(a2 + 32);
      uint64_t v304 = *(void *)(a2 + 40);
      uint64_t v12 = *(void *)(a2 + 64);
      float v13 = *(float *)(a2 + 72);
      float v14 = *(float *)(a2 + 76);
      char v251 = *(unsigned char *)(a2 + 80);
      unint64_t v255 = *(void *)(a2 + 88);
      unint64_t v260 = *(void *)(a2 + 96);
      v315 = a5;
      uint64_t v266 = *(void *)(a2 + 56);
      uint64_t v271 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v44 = specialized static Entity.entityInfoType(_:)(v11);
        if (v44)
        {
          uint64_t v45 = (*(uint64_t (**)(void))(v44 + 232))();
          uint64_t v46 = *(void *)(v45 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v46, 0);
          *(void *)(v45 + 16) = v11;
          MEMORY[0x22A68E750](v11, v45);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v11);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v47 = swift_allocObject();
        swift_weakInit();
        uint64_t v287 = v47;
        *(void *)(v47 + 16) = v10;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v48 = String.init(cString:)();
        uint64_t v50 = v49;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v51 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          uint64_t v52 = v12;
          swift_bridgeObjectRetain();
          unint64_t v53 = specialized __RawDictionaryStorage.find<A>(_:)(v48, v50);
          if (v54)
          {
            uint64_t v55 = (uint64_t *)(*(void *)(v51 + 56) + 56 * v53);
            uint64_t v56 = v55[1];
            uint64_t v293 = *v55;
            uint64_t v57 = v55[2];
            uint64_t v58 = v55[3];
            uint64_t v59 = v55[4];
            uint64_t v60 = v55[5];
            uint64_t v61 = v55[6];
            swift_bridgeObjectRelease();
LABEL_84:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v373 = v297;
            BYTE8(v373) = 0;
            *(void *)&long long v374 = v304;
            *((void *)&v374 + 1) = v293;
            *(void *)&long long v375 = v56;
            *((void *)&v375 + 1) = v57;
            *(void *)&long long v376 = v58;
            *((void *)&v376 + 1) = v59;
            uint64_t v246 = v57;
            uint64_t v154 = v60;
            *(void *)&long long v377 = v60;
            *((void *)&v377 + 1) = v61;
            uint64_t v247 = v56;
            uint64_t v244 = v61;
            if (!v52)
            {
              uint64_t v157 = 0;
              goto LABEL_164;
            }
            if (!REBindPointBoundComponent())
            {
              uint64_t v157 = 0;
              goto LABEL_164;
            }
            uint64_t v282 = v58;
            uint64_t Entity = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v156 = swift_dynamicCastClassUnconditional();
              goto LABEL_88;
            }
            if ((REEntityIsBeingDestroyed() & 1) == 0)
            {
              uint64_t v205 = specialized static Entity.entityInfoType(_:)(Entity);
              if (v205)
              {
                uint64_t v157 = (*(uint64_t (**)(void))(v205 + 232))();
                uint64_t v206 = *(void *)(v157 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v206, 0);
                *(void *)(v157 + 16) = Entity;
                MEMORY[0x22A68E750](Entity, v157);
                swift_release();
                goto LABEL_163;
              }
              uint64_t v156 = makeEntity(for:)(Entity);
LABEL_88:
              uint64_t v157 = v156;
LABEL_163:
              uint64_t v58 = v282;
LABEL_164:
              specialized ActionEventData.action<A>()((uint64_t)&v371);
              int v207 = v371 | (v372 << 16);
              if ((v207 & 0xFF0000) != 0x20000)
              {
                swift_retain();
                char v208 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<EmphasizeAction>);
                __int16 v323 = v207;
                char v324 = BYTE2(v207) & 1;
                char v242 = v208 & 1;
                char v325 = v208 & 1;
                uint64_t v322 = v287;
                uint64_t v326 = v157;
                char v327 = v251;
                double v328 = v13;
                double v329 = v14;
                uint64_t v330 = v9;
                uint64_t v331 = v266;
                double v332 = -1.0;
                char v333 = 0;
                unint64_t v334 = v255;
                char v335 = 0;
                unint64_t v336 = v260;
                char v337 = 0;
                long long v340 = v375;
                long long v341 = v376;
                long long v342 = v377;
                long long v338 = v373;
                long long v339 = v374;
                uint64_t v177 = v271;
                uint64_t v343 = v271;
                swift_retain();
                swift_retain();
                v315(&v322);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v344 = v287;
                __int16 v345 = v207;
                char v346 = BYTE2(v207) & 1;
                char v347 = v242;
                uint64_t v348 = v157;
                char v349 = v251;
                double v350 = v13;
                double v351 = v14;
                uint64_t v352 = v9;
                uint64_t v353 = v266;
                double v354 = -1.0;
                char v355 = 0;
                unint64_t v356 = v255;
                char v357 = 0;
                unint64_t v358 = v260;
                char v359 = 0;
                uint64_t v360 = v297;
                char v361 = 0;
                uint64_t v362 = v304;
                uint64_t v363 = v293;
                uint64_t v364 = v247;
                uint64_t v365 = v246;
                uint64_t v366 = v58;
                uint64_t v367 = v59;
                uint64_t v368 = v154;
                uint64_t v181 = v244;
                goto LABEL_172;
              }
LABEL_210:
              swift_release();
              swift_release();
              swift_release();
LABEL_211:
              swift_release();
              return 0;
            }
            goto LABEL_234;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v52 = v12;
        }
        uint64_t v293 = 0;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        uint64_t v60 = 0;
        uint64_t v61 = 0;
        goto LABEL_84;
      }
      __break(1u);
      goto LABEL_226;
    case 2:
      uint64_t v21 = *(void *)a2;
      uint64_t v20 = *(void *)(a2 + 8);
      uint64_t v305 = *(void *)(a2 + 32);
      uint64_t v309 = *(void *)(a2 + 40);
      float v22 = *(float *)(a2 + 56);
      unint64_t v267 = *(void *)(a2 + 64);
      uint64_t v284 = *(void *)(a2 + 72);
      float v23 = *(float *)(a2 + 96);
      float v24 = *(float *)(a2 + 100);
      char v261 = *(unsigned char *)(a2 + 104);
      unint64_t v272 = *(void *)(a2 + 48);
      uint64_t v277 = *(void *)(a2 + 80);
      uint64_t v291 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v62 = specialized static Entity.entityInfoType(_:)(v21);
        if (v62)
        {
          uint64_t v63 = (*(uint64_t (**)(void))(v62 + 232))();
          uint64_t v64 = *(void *)(v63 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v64, 0);
          *(void *)(v63 + 16) = v21;
          MEMORY[0x22A68E750](v21, v63);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v21);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v65 = swift_allocObject();
        swift_weakInit();
        *(void *)(v65 + 16) = v20;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v66 = String.init(cString:)();
        uint64_t v68 = v67;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v69 = static AnimationResource.codableActionTypeMap;
        uint64_t v312 = v9;
        v318 = a5;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v70 = specialized __RawDictionaryStorage.find<A>(_:)(v66, v68);
          if (v71)
          {
            __int16 v72 = (uint64_t *)(*(void *)(v69 + 56) + 56 * v70);
            uint64_t v73 = v72[1];
            uint64_t v301 = *v72;
            uint64_t v74 = v72[2];
            uint64_t v75 = v72[3];
            uint64_t v76 = v72[4];
            uint64_t v77 = v72[5];
            uint64_t v78 = v72[6];
            swift_bridgeObjectRelease();
LABEL_92:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v373 = v305;
            BYTE8(v373) = 0;
            *(void *)&long long v374 = v309;
            *((void *)&v374 + 1) = v301;
            *(void *)&long long v375 = v73;
            *((void *)&v375 + 1) = v74;
            *(void *)&long long v376 = v75;
            *((void *)&v376 + 1) = v76;
            *(void *)&long long v377 = v77;
            *((void *)&v377 + 1) = v78;
            uint64_t v252 = v75;
            uint64_t v256 = v74;
            uint64_t v248 = v77;
            if (!v291 || !REBindPointBoundComponent())
            {
              uint64_t v160 = 0;
              goto LABEL_170;
            }
            uint64_t v296 = v76;
            uint64_t v158 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v159 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_235:
                __break(1u);
                goto LABEL_236;
              }
              uint64_t v209 = specialized static Entity.entityInfoType(_:)(v158);
              if (v209)
              {
                uint64_t v160 = (*(uint64_t (**)(void))(v209 + 232))();
                uint64_t v210 = *(void *)(v160 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v210, 0);
                *(void *)(v160 + 16) = v158;
                MEMORY[0x22A68E750](v158, v160);
                swift_release();
                goto LABEL_169;
              }
              uint64_t v159 = makeEntity(for:)(v158);
            }
            uint64_t v160 = v159;
LABEL_169:
            uint64_t v76 = v296;
LABEL_170:
            specialized ActionEventData.action<A>()((uint64_t)&v371);
            int v211 = v371 | (v372 << 16);
            if ((v211 & 0xFF0000) != 0x20000)
            {
              swift_retain();
              char v212 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<EmphasizeAction>);
              __int16 v323 = v211;
              double v213 = v22;
              char v324 = BYTE2(v211) & 1;
              char v243 = v212 & 1;
              char v325 = v212 & 1;
              uint64_t v322 = v65;
              uint64_t v326 = v160;
              char v327 = v261;
              double v328 = v23;
              double v329 = v24;
              uint64_t v330 = v312;
              uint64_t v331 = v284;
              double v332 = v213;
              char v333 = 0;
              uint64_t v177 = v277;
              unint64_t v334 = v272;
              char v335 = 0;
              unint64_t v336 = v267;
              char v337 = 0;
              long long v340 = v375;
              long long v341 = v376;
              long long v342 = v377;
              long long v338 = v373;
              long long v339 = v374;
              uint64_t v343 = v277;
              swift_retain();
              swift_retain();
              v318(&v322);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v344 = v65;
              __int16 v345 = v211;
              char v346 = BYTE2(v211) & 1;
              char v347 = v243;
              uint64_t v348 = v160;
              char v349 = v261;
              double v350 = v23;
              double v351 = v24;
              uint64_t v352 = v312;
              uint64_t v353 = v284;
              double v354 = v213;
              char v355 = 0;
              unint64_t v356 = v272;
              char v357 = 0;
              unint64_t v358 = v267;
              char v359 = 0;
              uint64_t v360 = v305;
              char v361 = 0;
              uint64_t v362 = v309;
              uint64_t v363 = v301;
              uint64_t v364 = v73;
              uint64_t v365 = v256;
              uint64_t v366 = v252;
              uint64_t v367 = v76;
              uint64_t v368 = v248;
              uint64_t v181 = v78;
              goto LABEL_172;
            }
            goto LABEL_210;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v301 = 0;
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        uint64_t v76 = 0;
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        goto LABEL_92;
      }
LABEL_226:
      __break(1u);
      goto LABEL_227;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_211;
    case 4:
      uint64_t v26 = *(void *)a2;
      uint64_t v25 = *(void *)(a2 + 8);
      uint64_t v299 = *(void *)(a2 + 32);
      uint64_t v306 = *(void *)(a2 + 40);
      uint64_t v292 = *(void *)(a2 + 48);
      uint64_t v27 = *(void *)(a2 + 64);
      float v28 = *(float *)(a2 + 72);
      float v29 = *(float *)(a2 + 76);
      char v278 = *(unsigned char *)(a2 + 80);
      uint64_t v273 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v79 = specialized static Entity.entityInfoType(_:)(v26);
        if (v79)
        {
          uint64_t v80 = (*(uint64_t (**)(void))(v79 + 232))();
          uint64_t v81 = *(void *)(v80 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v81, 0);
          *(void *)(v80 + 16) = v26;
          MEMORY[0x22A68E750](v26, v80);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v26);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v82 = swift_allocObject();
        swift_weakInit();
        uint64_t v288 = v82;
        *(void *)(v82 + 16) = v25;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v83 = String.init(cString:)();
        uint64_t v85 = v84;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        v319 = a5;
        swift_beginAccess();
        uint64_t v86 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          uint64_t v87 = v27;
          swift_bridgeObjectRetain();
          unint64_t v88 = specialized __RawDictionaryStorage.find<A>(_:)(v83, v85);
          if (v89)
          {
            long long v90 = (uint64_t *)(*(void *)(v86 + 56) + 56 * v88);
            uint64_t v92 = *v90;
            uint64_t v91 = v90[1];
            uint64_t v93 = v90[2];
            uint64_t v94 = v90[3];
            uint64_t v96 = v90[4];
            uint64_t v95 = v90[5];
            uint64_t v97 = v90[6];
            swift_bridgeObjectRelease();
            goto LABEL_100;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v87 = v27;
        }
        uint64_t v92 = 0;
        uint64_t v91 = 0;
        uint64_t v93 = 0;
        uint64_t v94 = 0;
        uint64_t v96 = 0;
        uint64_t v95 = 0;
        uint64_t v97 = 0;
LABEL_100:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&long long v373 = v299;
        BYTE8(v373) = 0;
        *(void *)&long long v374 = v306;
        *((void *)&v374 + 1) = v92;
        *(void *)&long long v375 = v91;
        *((void *)&v375 + 1) = v93;
        *(void *)&long long v376 = v94;
        *((void *)&v376 + 1) = v96;
        uint64_t v257 = v96;
        uint64_t v263 = v93;
        *(void *)&long long v377 = v95;
        *((void *)&v377 + 1) = v97;
        uint64_t v161 = v94;
        uint64_t v269 = v91;
        if (!v87)
        {
          uint64_t v165 = 0;
          v162 = v319;
          goto LABEL_177;
        }
        v162 = v319;
        if (!REBindPointBoundComponent())
        {
          uint64_t v165 = 0;
          goto LABEL_177;
        }
        uint64_t v163 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v164 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_236:
            __break(1u);
            goto LABEL_237;
          }
          uint64_t v214 = specialized static Entity.entityInfoType(_:)(v163);
          if (v214)
          {
            uint64_t v165 = (*(uint64_t (**)(void))(v214 + 232))();
            uint64_t v215 = *(void *)(v165 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v215, 0);
            *(void *)(v165 + 16) = v163;
            MEMORY[0x22A68E750](v163, v165);
            swift_release();
            goto LABEL_176;
          }
          uint64_t v164 = makeEntity(for:)(v163);
        }
        uint64_t v165 = v164;
LABEL_176:
        uint64_t v161 = v94;
LABEL_177:
        specialized ActionEventData.action<A>()((uint64_t)&v371);
        int v216 = v371 | (v372 << 16);
        if ((v216 & 0xFF0000) != 0x20000)
        {
          swift_retain();
          __int16 v323 = v216;
          char v324 = BYTE2(v216) & 1;
          uint64_t v250 = v92;
          char v217 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<EmphasizeAction>) & 1;
          char v325 = v217;
          uint64_t v322 = v288;
          uint64_t v326 = v165;
          char v327 = v278;
          double v328 = v28;
          double v329 = v29;
          uint64_t v330 = v9;
          uint64_t v331 = v273;
          double v332 = -1.0;
          char v333 = 0;
          unint64_t v334 = 0xBFF0000000000000;
          char v335 = 0;
          unint64_t v336 = 0xBFF0000000000000;
          char v337 = 0;
          long long v340 = v375;
          long long v341 = v376;
          long long v342 = v377;
          long long v338 = v373;
          long long v339 = v374;
          uint64_t v343 = v292;
          swift_retain();
          swift_retain();
          v162(&v322);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v344 = v288;
          __int16 v345 = v216;
          char v346 = BYTE2(v216) & 1;
          char v347 = v217;
          uint64_t v348 = v165;
          char v349 = v278;
          double v350 = v28;
          double v351 = v29;
          uint64_t v352 = v9;
          uint64_t v353 = v273;
          double v354 = -1.0;
          char v355 = 0;
          unint64_t v356 = 0xBFF0000000000000;
          char v357 = 0;
          unint64_t v358 = 0xBFF0000000000000;
          char v359 = 0;
          uint64_t v360 = v299;
          char v361 = 0;
          uint64_t v362 = v306;
          uint64_t v363 = v250;
          uint64_t v364 = v269;
          uint64_t v365 = v263;
          uint64_t v366 = v161;
          uint64_t v367 = v257;
          uint64_t v368 = v95;
          uint64_t v369 = v97;
          uint64_t v370 = v292;
          goto LABEL_214;
        }
        goto LABEL_210;
      }
LABEL_227:
      __break(1u);
      goto LABEL_228;
    case 8:
      uint64_t v31 = *(void *)a2;
      uint64_t v30 = *(void *)(a2 + 8);
      uint64_t v300 = *(void *)(a2 + 32);
      uint64_t v307 = *(void *)(a2 + 40);
      uint64_t v32 = *(void *)(a2 + 56);
      float v33 = *(float *)(a2 + 64);
      float v34 = *(float *)(a2 + 68);
      char v262 = *(unsigned char *)(a2 + 72);
      unint64_t v268 = *(void *)(a2 + 80);
      v316 = a5;
      unint64_t v274 = *(void *)(a2 + 88);
      uint64_t v279 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v98 = specialized static Entity.entityInfoType(_:)(v31);
        if (v98)
        {
          uint64_t v99 = (*(uint64_t (**)(void))(v98 + 232))();
          uint64_t v100 = *(void *)(v99 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v100, 0);
          *(void *)(v99 + 16) = v31;
          MEMORY[0x22A68E750](v31, v99);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v31);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v101 = swift_allocObject();
        swift_weakInit();
        *(void *)(v101 + 16) = v30;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v102 = String.init(cString:)();
        uint64_t v104 = v103;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v105 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          uint64_t v106 = v32;
          swift_bridgeObjectRetain();
          unint64_t v107 = specialized __RawDictionaryStorage.find<A>(_:)(v102, v104);
          if (v108)
          {
            char v109 = (uint64_t *)(*(void *)(v105 + 56) + 56 * v107);
            uint64_t v110 = v109[1];
            uint64_t v294 = *v109;
            uint64_t v111 = v109[2];
            uint64_t v112 = v109[3];
            uint64_t v114 = v109[4];
            uint64_t v113 = v109[5];
            uint64_t v115 = v109[6];
            swift_bridgeObjectRelease();
LABEL_108:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v373 = v300;
            BYTE8(v373) = 0;
            *(void *)&long long v374 = v307;
            *((void *)&v374 + 1) = v294;
            *(void *)&long long v375 = v110;
            *((void *)&v375 + 1) = v111;
            *(void *)&long long v376 = v112;
            *((void *)&v376 + 1) = v114;
            *(void *)&long long v377 = v113;
            *((void *)&v377 + 1) = v115;
            uint64_t v253 = v111;
            uint64_t v258 = v110;
            if (!v106 || !REBindPointBoundComponent())
            {
              uint64_t v168 = 0;
              goto LABEL_183;
            }
            uint64_t v289 = v112;
            uint64_t v166 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v167 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_237:
                __break(1u);
                goto LABEL_238;
              }
              uint64_t v218 = specialized static Entity.entityInfoType(_:)(v166);
              if (v218)
              {
                uint64_t v168 = (*(uint64_t (**)(void))(v218 + 232))();
                uint64_t v219 = *(void *)(v168 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v219, 0);
                *(void *)(v168 + 16) = v166;
                MEMORY[0x22A68E750](v166, v168);
                swift_release();
                goto LABEL_182;
              }
              uint64_t v167 = makeEntity(for:)(v166);
            }
            uint64_t v168 = v167;
LABEL_182:
            uint64_t v112 = v289;
LABEL_183:
            specialized ActionEventData.action<A>()((uint64_t)&v371);
            int v220 = v371 | (v372 << 16);
            if ((v220 & 0xFF0000) != 0x20000)
            {
              swift_retain();
              char v221 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<EmphasizeAction>);
              __int16 v323 = v220;
              char v324 = BYTE2(v220) & 1;
              char v245 = v221 & 1;
              char v325 = v221 & 1;
              uint64_t v322 = v101;
              uint64_t v326 = v168;
              char v327 = v262;
              double v328 = v33;
              double v329 = v34;
              uint64_t v331 = 0;
              double v332 = 0.0;
              uint64_t v330 = v9;
              char v333 = 1;
              unint64_t v334 = v268;
              char v335 = 0;
              unint64_t v336 = v274;
              char v337 = 0;
              long long v340 = v375;
              long long v341 = v376;
              long long v342 = v377;
              long long v338 = v373;
              long long v339 = v374;
              uint64_t v343 = v279;
              swift_retain();
              swift_retain();
              v316(&v322);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v344 = v101;
              __int16 v345 = v220;
              char v346 = BYTE2(v220) & 1;
              char v347 = v245;
              uint64_t v348 = v168;
              char v349 = v262;
              double v350 = v33;
              double v351 = v34;
              uint64_t v353 = 0;
              double v354 = 0.0;
              uint64_t v352 = v9;
              char v355 = 1;
              unint64_t v356 = v268;
              char v357 = 0;
              unint64_t v358 = v274;
              char v359 = 0;
              uint64_t v360 = v300;
              char v361 = 0;
              uint64_t v362 = v307;
              uint64_t v363 = v294;
              uint64_t v364 = v258;
              uint64_t v365 = v253;
              uint64_t v366 = v112;
              uint64_t v367 = v114;
              uint64_t v368 = v113;
              uint64_t v369 = v115;
              uint64_t v370 = v279;
              goto LABEL_214;
            }
            goto LABEL_210;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v106 = v32;
        }
        uint64_t v294 = 0;
        uint64_t v110 = 0;
        uint64_t v111 = 0;
        uint64_t v112 = 0;
        uint64_t v114 = 0;
        uint64_t v113 = 0;
        uint64_t v115 = 0;
        goto LABEL_108;
      }
LABEL_228:
      __break(1u);
      goto LABEL_229;
    case 16:
      uint64_t v36 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      uint64_t v308 = *(void *)(a2 + 40);
      uint64_t v285 = *(void *)(a2 + 56);
      unint64_t v275 = *(void *)(a2 + 32);
      uint64_t v280 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v116 = specialized static Entity.entityInfoType(_:)(v36);
        if (v116)
        {
          uint64_t v117 = (*(uint64_t (**)(void))(v116 + 232))();
          uint64_t v118 = *(void *)(v117 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v118, 0);
          *(void *)(v117 + 16) = v36;
          MEMORY[0x22A68E750](v36, v117);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
LABEL_57:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v119 = swift_allocObject();
        swift_weakInit();
        *(void *)(v119 + 16) = v35;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v120 = String.init(cString:)();
        uint64_t v122 = v121;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v123 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v124 = specialized __RawDictionaryStorage.find<A>(_:)(v120, v122);
          if (v125)
          {
            char v126 = (uint64_t *)(*(void *)(v123 + 56) + 56 * v124);
            uint64_t v127 = v126[2];
            uint64_t v295 = *v126;
            uint64_t v302 = v126[1];
            uint64_t v129 = v126[3];
            uint64_t v128 = v126[4];
            uint64_t v131 = v126[5];
            uint64_t v130 = v126[6];
            swift_bridgeObjectRelease();
LABEL_116:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v373 = 0;
            BYTE8(v373) = 0;
            *(void *)&long long v374 = v308;
            *((void *)&v374 + 1) = v295;
            *(void *)&long long v375 = v302;
            *((void *)&v375 + 1) = v127;
            *(void *)&long long v376 = v129;
            *((void *)&v376 + 1) = v128;
            *(void *)&long long v377 = v131;
            *((void *)&v377 + 1) = v130;
            uint64_t v264 = v129;
            uint64_t v270 = v127;
            uint64_t v254 = v131;
            uint64_t v259 = v128;
            uint64_t v249 = v130;
            if (v285 && REBindPointBoundComponent())
            {
              uint64_t v169 = REComponentGetEntity();
              if ((id)REEntityGetSwiftObject())
              {
                type metadata accessor for Entity();
                uint64_t v170 = swift_dynamicCastClassUnconditional();
              }
              else
              {
                if (REEntityIsBeingDestroyed())
                {
LABEL_238:
                  __break(1u);
                  goto LABEL_239;
                }
                uint64_t v222 = specialized static Entity.entityInfoType(_:)(v169);
                if (v222)
                {
                  uint64_t v171 = (*(uint64_t (**)(void))(v222 + 232))();
                  uint64_t v223 = *(void *)(v171 + 16);
                  swift_retain();
                  MEMORY[0x22A68E750](v223, 0);
                  *(void *)(v171 + 16) = v169;
                  MEMORY[0x22A68E750](v169, v171);
                  swift_release();
                  goto LABEL_122;
                }
                uint64_t v170 = makeEntity(for:)(v169);
              }
              uint64_t v171 = v170;
            }
            else
            {
              uint64_t v171 = 0;
            }
LABEL_122:
            specialized ActionEventData.action<A>()((uint64_t)&v371);
            unsigned int v172 = v371 | (v372 << 16);
            if ((v172 & 0xFF0000) == 0x20000) {
              goto LABEL_210;
            }
            __int16 v323 = v371;
            v320 = a5;
            uint64_t v322 = v119;
            unsigned int v173 = v172 >> 8;
            int v174 = HIWORD(v172) & 1;
            char v324 = BYTE2(v172) & 1;
            char v325 = 1;
            uint64_t v326 = v171;
            char v327 = 0;
            double v328 = 0.0;
            double v329 = 0.0;
            uint64_t v331 = 0;
            double v332 = 0.0;
            uint64_t v330 = v9;
            char v333 = 1;
            uint64_t v175 = v119;
            unint64_t v176 = v275;
            uint64_t v177 = v280;
            unint64_t v334 = v275;
            char v335 = 0;
            unint64_t v336 = 0;
            char v337 = 1;
            long long v340 = v375;
            long long v341 = v376;
            long long v342 = v377;
            long long v338 = v373;
            long long v339 = v374;
            uint64_t v343 = v280;
            swift_retain();
            swift_retain();
            v320(&v322);
            swift_release();
            swift_release();
            swift_release();
            uint64_t v344 = v175;
            goto LABEL_134;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v295 = 0;
        uint64_t v302 = 0;
        uint64_t v127 = 0;
        uint64_t v129 = 0;
        uint64_t v128 = 0;
        uint64_t v131 = 0;
        uint64_t v130 = 0;
        goto LABEL_116;
      }
LABEL_229:
      __break(1u);
      goto LABEL_230;
    case 32:
      uint64_t v38 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v308 = *(void *)(a2 + 40);
      uint64_t v286 = *(void *)(a2 + 56);
      unint64_t v276 = *(void *)(a2 + 32);
      uint64_t v281 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_65;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_230:
        __break(1u);
        goto LABEL_231;
      }
      uint64_t v132 = specialized static Entity.entityInfoType(_:)(v38);
      if (v132)
      {
        uint64_t v133 = (*(uint64_t (**)(void))(v132 + 232))();
        uint64_t v134 = *(void *)(v133 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v134, 0);
        *(void *)(v133 + 16) = v38;
        MEMORY[0x22A68E750](v38, v133);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v38);
      }
LABEL_65:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v135 = swift_allocObject();
      swift_weakInit();
      *(void *)(v135 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v136 = String.init(cString:)();
      uint64_t v138 = v137;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v139 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_125;
      }
      swift_bridgeObjectRetain();
      unint64_t v140 = specialized __RawDictionaryStorage.find<A>(_:)(v136, v138);
      if ((v141 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_125:
        uint64_t v295 = 0;
        uint64_t v302 = 0;
        uint64_t v143 = 0;
        uint64_t v144 = 0;
        uint64_t v145 = 0;
        uint64_t v147 = 0;
        uint64_t v146 = 0;
        goto LABEL_126;
      }
      unint64_t v142 = (uint64_t *)(*(void *)(v139 + 56) + 56 * v140);
      uint64_t v143 = v142[2];
      uint64_t v295 = *v142;
      uint64_t v302 = v142[1];
      uint64_t v144 = v142[3];
      uint64_t v145 = v142[4];
      uint64_t v147 = v142[5];
      uint64_t v146 = v142[6];
      swift_bridgeObjectRelease();
LABEL_126:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v373 = 0;
      BYTE8(v373) = 0;
      *(void *)&long long v374 = v308;
      *((void *)&v374 + 1) = v295;
      *(void *)&long long v375 = v302;
      *((void *)&v375 + 1) = v143;
      *(void *)&long long v376 = v144;
      *((void *)&v376 + 1) = v145;
      *(void *)&long long v377 = v147;
      *((void *)&v377 + 1) = v146;
      uint64_t v264 = v144;
      uint64_t v270 = v143;
      uint64_t v254 = v147;
      uint64_t v259 = v145;
      uint64_t v249 = v146;
      if (v286 && REBindPointBoundComponent())
      {
        uint64_t v178 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v179 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_239:
            __break(1u);
            goto LABEL_240;
          }
          uint64_t v224 = specialized static Entity.entityInfoType(_:)(v178);
          if (v224)
          {
            uint64_t v171 = (*(uint64_t (**)(void))(v224 + 232))();
            uint64_t v225 = *(void *)(v171 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v225, 0);
            *(void *)(v171 + 16) = v178;
            MEMORY[0x22A68E750](v178, v171);
            swift_release();
            goto LABEL_132;
          }
          uint64_t v179 = makeEntity(for:)(v178);
        }
        uint64_t v171 = v179;
      }
      else
      {
        uint64_t v171 = 0;
      }
LABEL_132:
      specialized ActionEventData.action<A>()((uint64_t)&v371);
      unsigned int v172 = v371 | (v372 << 16);
      if ((v172 & 0xFF0000) == 0x20000) {
        goto LABEL_210;
      }
      __int16 v323 = v371;
      v180 = a5;
      unsigned int v173 = v172 >> 8;
      int v174 = HIWORD(v172) & 1;
      char v324 = BYTE2(v172) & 1;
      char v325 = 1;
      uint64_t v322 = v135;
      uint64_t v326 = v171;
      char v327 = 0;
      double v328 = 0.0;
      double v329 = 0.0;
      uint64_t v331 = 0;
      double v332 = 0.0;
      uint64_t v330 = v9;
      char v333 = 1;
      uint64_t v290 = v135;
      unint64_t v176 = v276;
      uint64_t v177 = v281;
      unint64_t v334 = v276;
      char v335 = 0;
      unint64_t v336 = 0;
      char v337 = 1;
      long long v340 = v375;
      long long v341 = v376;
      long long v342 = v377;
      long long v338 = v373;
      long long v339 = v374;
      uint64_t v343 = v281;
      swift_retain();
      swift_retain();
      v180(&v322);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v344 = v290;
LABEL_134:
      LOBYTE(v345) = v172;
      HIBYTE(v345) = v173;
      char v346 = v174;
      char v347 = 1;
      uint64_t v348 = v171;
      char v349 = 0;
      double v350 = 0.0;
      double v351 = 0.0;
      uint64_t v353 = 0;
      double v354 = 0.0;
      uint64_t v352 = v9;
      char v355 = 1;
      unint64_t v356 = v176;
      char v357 = 0;
      unint64_t v358 = 0;
      char v359 = 1;
      uint64_t v360 = 0;
      char v361 = 0;
      uint64_t v362 = v308;
      uint64_t v363 = v295;
      uint64_t v364 = v302;
      uint64_t v365 = v270;
      uint64_t v366 = v264;
      uint64_t v367 = v259;
      uint64_t v368 = v254;
      uint64_t v181 = v249;
LABEL_172:
      uint64_t v369 = v181;
      uint64_t v370 = v177;
LABEL_214:
      outlined release of ActionEvent<EmphasizeAction>((uint64_t)&v344);
      return 0;
    case 64:
      v317 = a5;
      uint64_t v40 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v41 = *(void *)(a2 + 24);
      uint64_t v42 = *(void *)(a2 + 32);
      uint64_t v43 = *(void *)(a2 + 40);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_231:
          __break(1u);
          goto LABEL_232;
        }
        uint64_t v148 = specialized static Entity.entityInfoType(_:)(v40);
        if (v148)
        {
          uint64_t v149 = (*(uint64_t (**)(void))(v148 + 232))();
          uint64_t v150 = *(void *)(v149 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v150, 0);
          *(void *)(v149 + 16) = v40;
          MEMORY[0x22A68E750](v40, v149);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v40);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v151 = swift_allocObject();
      swift_weakInit();
      *(void *)(v151 + 16) = v39;
      swift_beginAccess();
      swift_weakAssign();
      if (!v43) {
        goto LABEL_151;
      }
      if (REBindPointBoundComponent())
      {
        uint64_t v152 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v153 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v43 = v153;
          goto LABEL_151;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_233:
          __break(1u);
LABEL_234:
          __break(1u);
          goto LABEL_235;
        }
        uint64_t v189 = specialized static Entity.entityInfoType(_:)(v152);
        if (!v189)
        {
          uint64_t v153 = makeEntity(for:)(v152);
          goto LABEL_77;
        }
        uint64_t v43 = (*(uint64_t (**)(void))(v189 + 232))();
        uint64_t v190 = *(void *)(v43 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v190, 0);
        *(void *)(v43 + 16) = v152;
        MEMORY[0x22A68E750](v152, v43);
        swift_release();
      }
      else
      {
        uint64_t v43 = 0;
      }
LABEL_151:
      uint64_t v191 = String.init(cString:)();
      uint64_t v193 = v192;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v194 = static AnimationResource.codableActionTypeMap;
      uint64_t v313 = v9;
      uint64_t v303 = v151;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v195 = specialized __RawDictionaryStorage.find<A>(_:)(v191, v193);
        if (v196)
        {
          v197 = (uint64_t *)(*(void *)(v194 + 56) + 56 * v195);
          uint64_t v198 = *v197;
          uint64_t v199 = v197[1];
          uint64_t v201 = v197[2];
          uint64_t v200 = v197[3];
          uint64_t v202 = v197[4];
          uint64_t v203 = v197[5];
          uint64_t v310 = v197[6];
          swift_bridgeObjectRelease();
LABEL_158:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v373 = 0;
          BYTE8(v373) = 0;
          *(void *)&long long v374 = v41;
          *((void *)&v374 + 1) = v198;
          *(void *)&long long v375 = v199;
          *((void *)&v375 + 1) = v201;
          uint64_t v283 = v202;
          *(void *)&long long v376 = v200;
          *((void *)&v376 + 1) = v202;
          *(void *)&long long v377 = v203;
          *((void *)&v377 + 1) = v310;
          specialized ActionEventData.action<A>()((uint64_t)&v371);
          int v204 = v371 | (v372 << 16);
          if ((v204 & 0xFF0000) == 0x20000) {
            goto LABEL_210;
          }
          __int16 v323 = v371;
          char v324 = BYTE2(v204) & 1;
          char v325 = 1;
          uint64_t v322 = v303;
          uint64_t v326 = v43;
          char v327 = 0;
          double v328 = 0.0;
          double v329 = 0.0;
          uint64_t v331 = 0;
          double v332 = 0.0;
          uint64_t v330 = v313;
          char v333 = 1;
          unint64_t v334 = 0;
          char v335 = 1;
          unint64_t v336 = 0;
          char v337 = 1;
          long long v340 = v375;
          long long v341 = v376;
          long long v342 = v377;
          long long v338 = v373;
          long long v339 = v374;
          uint64_t v343 = v42;
          swift_retain();
          swift_retain();
          v317(&v322);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v344 = v303;
          __int16 v345 = v204;
          char v346 = BYTE2(v204) & 1;
          char v347 = 1;
          uint64_t v348 = v43;
          char v349 = 0;
          double v350 = 0.0;
          double v351 = 0.0;
          uint64_t v353 = 0;
          double v354 = 0.0;
          uint64_t v352 = v313;
          char v355 = 1;
          unint64_t v356 = 0;
          char v357 = 1;
          unint64_t v358 = 0;
          char v359 = 1;
          uint64_t v360 = 0;
          char v361 = 0;
          uint64_t v362 = v41;
          uint64_t v363 = v198;
          uint64_t v364 = v199;
          uint64_t v365 = v201;
          uint64_t v366 = v200;
          uint64_t v367 = v283;
          uint64_t v368 = v203;
          uint64_t v369 = v310;
          goto LABEL_213;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v198 = 0;
      uint64_t v199 = 0;
      uint64_t v201 = 0;
      uint64_t v200 = 0;
      uint64_t v202 = 0;
      uint64_t v203 = 0;
      uint64_t v310 = 0;
      goto LABEL_158;
    default:
      if (a4 != 128) {
        goto LABEL_211;
      }
      uint64_t v17 = *(void *)a2;
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v18 = *(void *)(a2 + 24);
      uint64_t v19 = *(void *)(a2 + 40);
      uint64_t v298 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_232:
          __break(1u);
          goto LABEL_233;
        }
        uint64_t v182 = specialized static Entity.entityInfoType(_:)(v17);
        if (v182)
        {
          uint64_t v183 = (*(uint64_t (**)(void))(v182 + 232))();
          uint64_t v184 = *(void *)(v183 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v184, 0);
          *(void *)(v183 + 16) = v17;
          MEMORY[0x22A68E750](v17, v183);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v17);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v185 = swift_allocObject();
      swift_weakInit();
      *(void *)(v185 + 16) = v16;
      swift_beginAccess();
      swift_weakAssign();
      if (v19)
      {
        uint64_t v186 = v18;
        if (REBindPointBoundComponent())
        {
          uint64_t v187 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            uint64_t v188 = swift_dynamicCastClassUnconditional();
LABEL_142:
            uint64_t v19 = v188;
            goto LABEL_202;
          }
          if (REEntityIsBeingDestroyed())
          {
LABEL_240:
            __break(1u);
            JUMPOUT(0x227F91EC4);
          }
          uint64_t v226 = specialized static Entity.entityInfoType(_:)(v187);
          if (!v226)
          {
            uint64_t v188 = makeEntity(for:)(v187);
            goto LABEL_142;
          }
          uint64_t v19 = (*(uint64_t (**)(void))(v226 + 232))();
          uint64_t v227 = *(void *)(v19 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v227, 0);
          *(void *)(v19 + 16) = v187;
          MEMORY[0x22A68E750](v187, v19);
          swift_release();
        }
        else
        {
          uint64_t v19 = 0;
        }
      }
      else
      {
        uint64_t v186 = v18;
      }
LABEL_202:
      uint64_t v228 = String.init(cString:)();
      uint64_t v230 = v229;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v231 = static AnimationResource.codableActionTypeMap;
      uint64_t v314 = v9;
      v321 = a5;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v232 = specialized __RawDictionaryStorage.find<A>(_:)(v228, v230);
        if (v233)
        {
          v234 = (uint64_t *)(*(void *)(v231 + 56) + 56 * v232);
          uint64_t v235 = *v234;
          uint64_t v236 = v234[1];
          uint64_t v237 = v234[2];
          uint64_t v238 = v234[3];
          uint64_t v239 = v234[4];
          uint64_t v311 = v234[5];
          uint64_t v240 = v234[6];
          swift_bridgeObjectRelease();
LABEL_209:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v373 = 0;
          BYTE8(v373) = 0;
          *(void *)&long long v374 = v186;
          *((void *)&v374 + 1) = v235;
          *(void *)&long long v375 = v236;
          *((void *)&v375 + 1) = v237;
          *(void *)&long long v376 = v238;
          *((void *)&v376 + 1) = v239;
          *(void *)&long long v377 = v311;
          *((void *)&v377 + 1) = v240;
          specialized ActionEventData.action<A>()((uint64_t)&v371);
          int v241 = v371 | (v372 << 16);
          if ((v241 & 0xFF0000) == 0x20000) {
            goto LABEL_210;
          }
          __int16 v323 = v371;
          char v324 = BYTE2(v241) & 1;
          char v325 = 1;
          uint64_t v322 = v185;
          uint64_t v326 = v19;
          char v327 = 0;
          double v328 = 0.0;
          double v329 = 0.0;
          uint64_t v331 = 0;
          double v332 = 0.0;
          uint64_t v330 = v314;
          char v333 = 1;
          unint64_t v334 = 0;
          char v335 = 1;
          unint64_t v336 = 0;
          char v337 = 1;
          long long v340 = v375;
          long long v341 = v376;
          long long v342 = v377;
          long long v338 = v373;
          long long v339 = v374;
          uint64_t v265 = v236;
          uint64_t v42 = v298;
          uint64_t v343 = v298;
          swift_retain();
          swift_retain();
          swift_retain();
          v321(&v322);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v344 = v185;
          __int16 v345 = v241;
          char v346 = BYTE2(v241) & 1;
          char v347 = 1;
          uint64_t v348 = v19;
          char v349 = 0;
          double v350 = 0.0;
          double v351 = 0.0;
          uint64_t v353 = 0;
          double v354 = 0.0;
          uint64_t v352 = v314;
          char v355 = 1;
          unint64_t v356 = 0;
          char v357 = 1;
          unint64_t v358 = 0;
          char v359 = 1;
          uint64_t v360 = 0;
          char v361 = 0;
          uint64_t v362 = v186;
          uint64_t v363 = v235;
          uint64_t v364 = v265;
          uint64_t v365 = v237;
          uint64_t v366 = v238;
          uint64_t v367 = v239;
          uint64_t v368 = v311;
          uint64_t v369 = v240;
LABEL_213:
          uint64_t v370 = v42;
          goto LABEL_214;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v235 = 0;
      uint64_t v236 = 0;
      uint64_t v237 = 0;
      uint64_t v238 = 0;
      uint64_t v239 = 0;
      uint64_t v311 = 0;
      uint64_t v240 = 0;
      goto LABEL_209;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  float v9;
  float v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t Entity;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  char v158;
  double v159;
  double v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  char v172;
  double v173;
  double v174;
  double v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  char v187;
  double v188;
  double v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  char v200;
  double v201;
  double v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  char v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char v273;
  char v274;
  uint64_t v275;
  char v276;
  char v277;
  char v278;
  char v279;
  uint64_t v280;
  char v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char v292;
  char v293;
  char v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char v320;
  char v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char v330;
  uint64_t v331;
  unint64_t v332;
  char v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t Strong;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char v360;
  char v361;
  uint64_t v362;
  char v363;
  double v364;
  double v365;
  uint64_t v366;
  uint64_t v367;
  double v368;
  char v369;
  unint64_t v370;
  char v371;
  unint64_t v372;
  char v373;
  long long v374;
  long long v375;
  long long v376;
  long long v377;
  long long v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char v387;
  char v388;
  uint64_t v389;
  char v390;
  double v391;
  double v392;
  uint64_t v393;
  uint64_t v394;
  double v395;
  char v396;
  unint64_t v397;
  char v398;
  unint64_t v399;
  char v400;
  uint64_t v401;
  char v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char v418;
  long long v419;
  long long v420;
  long long v421;
  long long v422;
  long long v423;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      unint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      long long v341 = *(void *)(a2 + 40);
      char v346 = *(void *)(a2 + 32);
      uint64_t v309 = *(void *)(a2 + 64);
      v315 = *(void *)(a2 + 48);
      uint64_t v10 = *(float *)(a2 + 72);
      uint64_t v9 = *(float *)(a2 + 76);
      v320 = *(unsigned char *)(a2 + 80);
      char v327 = *(void *)(a2 + 88);
      double v332 = *(void *)(a2 + 96);
      unint64_t v336 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_212;
      }
      uint64_t v37 = specialized static Entity.entityInfoType(_:)(v7);
      if (v37)
      {
        uint64_t v38 = (*(uint64_t (**)(void))(v37 + 232))();
        uint64_t v39 = *(void *)(v38 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v39, 0);
        *(void *)(v38 + 16) = v7;
        MEMORY[0x22A68E750](v7, v38);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v7);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v40 = swift_allocObject();
      swift_weakInit();
      *(void *)(v40 + 16) = v8;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v41 = String.init(cString:)();
      uint64_t v43 = v42;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v44 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_80;
      }
      swift_bridgeObjectRetain();
      uint64_t v45 = specialized __RawDictionaryStorage.find<A>(_:)(v41, v43);
      if ((v46 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_80:
        uint64_t v49 = 0;
        uint64_t v48 = 0;
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        unint64_t v53 = 0;
        char v54 = 0;
        goto LABEL_81;
      }
      uint64_t v47 = (uint64_t *)(*(void *)(v44 + 56) + 56 * v45);
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      uint64_t v50 = v47[2];
      uint64_t v51 = v47[3];
      uint64_t v52 = v47[4];
      unint64_t v53 = v47[5];
      char v54 = v47[6];
      swift_bridgeObjectRelease();
LABEL_81:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v419 = v346;
      BYTE8(v419) = 0;
      *(void *)&v420 = v341;
      *((void *)&v420 + 1) = v49;
      *(void *)&v421 = v48;
      *((void *)&v421 + 1) = v50;
      *(void *)&v422 = v51;
      *((void *)&v422 + 1) = v52;
      *(void *)&v423 = v53;
      *((void *)&v423 + 1) = v54;
      uint64_t v295 = v50;
      uint64_t v300 = v48;
      uint64_t v285 = v54;
      uint64_t v290 = v53;
      if (!v309 || !REBindPointBoundComponent())
      {
        uint64_t v150 = 0;
        goto LABEL_87;
      }
      uint64_t Entity = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v149 = swift_dynamicCastClassUnconditional();
LABEL_85:
        uint64_t v150 = v149;
        goto LABEL_87;
      }
      if (REEntityIsBeingDestroyed()) {
        goto LABEL_220;
      }
      char v242 = specialized static Entity.entityInfoType(_:)(Entity);
      if (!v242)
      {
        uint64_t v149 = makeEntity(for:)(Entity);
        goto LABEL_85;
      }
      uint64_t v150 = (*(uint64_t (**)(void))(v242 + 232))();
      char v243 = *(void *)(v150 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v243, 0);
      *(void *)(v150 + 16) = Entity;
      MEMORY[0x22A68E750](Entity, v150);
      swift_release();
LABEL_87:
      specialized ActionEventData.action<A>()((uint64_t)&v412);
      uint64_t v151 = v416;
      if (!v416) {
        goto LABEL_201;
      }
      uint64_t v152 = v417;
      uint64_t v153 = v415;
      uint64_t v311 = v52;
      uint64_t v154 = v414;
      uint64_t v280 = v49;
      uint64_t v283 = v51;
      v155 = v413;
      uint64_t v156 = v412;
      uint64_t v157 = v418 & 1;
      uint64_t v277 = v418 & 1;
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v156, v155, v154, v153, v151);
      uint64_t v158 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAudioAction>);
      double v354 = v156;
      char v355 = v155;
      uint64_t v159 = v10;
      unint64_t v356 = v154 & 1;
      uint64_t v160 = v9;
      char v357 = v153;
      unint64_t v358 = v151;
      char v359 = v152;
      uint64_t v360 = v157;
      uint64_t v273 = v158 & 1;
      char v361 = v158 & 1;
      uint64_t v353 = v40;
      uint64_t v362 = v150;
      uint64_t v363 = v320;
      uint64_t v364 = v159;
      uint64_t v365 = v160;
      uint64_t v366 = Strong;
      uint64_t v367 = v336;
      uint64_t v368 = -1.0;
      uint64_t v369 = 0;
      uint64_t v370 = v327;
      unsigned __int16 v371 = 0;
      unsigned __int8 v372 = v332;
      long long v373 = 0;
      long long v376 = v421;
      long long v377 = v422;
      v378 = v423;
      long long v374 = v419;
      long long v375 = v420;
      v379 = v315;
      swift_retain();
      swift_retain();
      a5(&v353);
      outlined consume of SetEntityPropertyAction<Transform>?(v156, v155, v154, v153, v151);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v380 = v40;
      v381 = v156;
      v382 = v155;
      v383 = v154 & 1;
      v384 = v153;
      v385 = v151;
      v386 = v152;
      v387 = v277;
      v388 = v273;
      v389 = v150;
      v390 = v320;
      v391 = v159;
      v392 = v160;
      v393 = Strong;
      v394 = v336;
      v395 = -1.0;
      v396 = 0;
      uint64_t v161 = v327;
LABEL_100:
      v397 = v161;
      v398 = 0;
      v399 = v332;
      v400 = 0;
      v401 = v346;
      v402 = 0;
      v403 = v341;
      v404 = v280;
      v405 = v300;
      v406 = v295;
      v407 = v283;
      v408 = v311;
      v409 = v290;
      v410 = v285;
      unint64_t v176 = v315;
LABEL_200:
      v411 = v176;
      outlined release of ActionEvent<PlayAudioAction>((uint64_t)&v380);
      return 0;
    case 2:
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *(void *)(a2 + 8);
      long long v341 = *(void *)(a2 + 40);
      char v346 = *(void *)(a2 + 32);
      uint64_t v18 = *(float *)(a2 + 56);
      double v332 = *(void *)(a2 + 64);
      long long v338 = *(void *)(a2 + 48);
      double v328 = *(void *)(a2 + 72);
      uint64_t v310 = *(void *)(a2 + 88);
      v315 = *(void *)(a2 + 80);
      uint64_t v20 = *(float *)(a2 + 96);
      uint64_t v19 = *(float *)(a2 + 100);
      v321 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_212:
          __break(1u);
          goto LABEL_213;
        }
        uint64_t v55 = specialized static Entity.entityInfoType(_:)(v16);
        if (v55)
        {
          uint64_t v56 = (*(uint64_t (**)(void))(v55 + 232))();
          uint64_t v57 = *(void *)(v56 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v57, 0);
          *(void *)(v56 + 16) = v16;
          MEMORY[0x22A68E750](v16, v56);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v16);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v58 = swift_allocObject();
      swift_weakInit();
      *(void *)(v58 + 16) = v17;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v59 = String.init(cString:)();
      uint64_t v61 = v60;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v62 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_91;
      }
      swift_bridgeObjectRetain();
      uint64_t v63 = specialized __RawDictionaryStorage.find<A>(_:)(v59, v61);
      if (v64)
      {
        uint64_t v65 = (uint64_t *)(*(void *)(v62 + 56) + 56 * v63);
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        uint64_t v68 = v65[2];
        uint64_t v69 = v65[3];
        unint64_t v70 = v65[4];
        char v71 = v65[5];
        __int16 v72 = v65[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_91:
        uint64_t v67 = 0;
        uint64_t v66 = 0;
        uint64_t v68 = 0;
        uint64_t v69 = 0;
        unint64_t v70 = 0;
        char v71 = 0;
        __int16 v72 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v419 = v346;
      BYTE8(v419) = 0;
      *(void *)&v420 = v341;
      *((void *)&v420 + 1) = v67;
      *(void *)&v421 = v66;
      *((void *)&v421 + 1) = v68;
      *(void *)&v422 = v69;
      *((void *)&v422 + 1) = v70;
      *(void *)&v423 = v71;
      *((void *)&v423 + 1) = v72;
      uint64_t v295 = v68;
      uint64_t v300 = v66;
      uint64_t v285 = v72;
      uint64_t v290 = v71;
      if (v310 && REBindPointBoundComponent())
      {
        v162 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v163 = swift_dynamicCastClassUnconditional();
LABEL_96:
          uint64_t v164 = v163;
          goto LABEL_98;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v244 = specialized static Entity.entityInfoType(_:)(v162);
        if (!v244)
        {
          uint64_t v163 = makeEntity(for:)(v162);
          goto LABEL_96;
        }
        uint64_t v164 = (*(uint64_t (**)(void))(v244 + 232))();
        char v245 = *(void *)(v164 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v245, 0);
        *(void *)(v164 + 16) = v162;
        MEMORY[0x22A68E750](v162, v164);
        swift_release();
      }
      else
      {
        uint64_t v164 = 0;
      }
LABEL_98:
      specialized ActionEventData.action<A>()((uint64_t)&v412);
      uint64_t v165 = v416;
      if (v416)
      {
        uint64_t v166 = v417;
        uint64_t v167 = v415;
        uint64_t v311 = v70;
        uint64_t v168 = v414;
        uint64_t v280 = v67;
        uint64_t v283 = v69;
        uint64_t v169 = v413;
        uint64_t v170 = v412;
        uint64_t v171 = v418 & 1;
        char v278 = v418 & 1;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v170, v169, v168, v167, v165);
        unsigned int v172 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAudioAction>);
        double v354 = v170;
        char v355 = v169;
        unsigned int v173 = v20;
        unint64_t v356 = v168 & 1;
        int v174 = v19;
        uint64_t v175 = v18;
        char v357 = v167;
        unint64_t v358 = v165;
        char v359 = v166;
        uint64_t v360 = v171;
        unint64_t v274 = v172 & 1;
        char v361 = v172 & 1;
        uint64_t v353 = v58;
        uint64_t v362 = v164;
        uint64_t v363 = v321;
        uint64_t v364 = v173;
        uint64_t v365 = v174;
        uint64_t v366 = Strong;
        uint64_t v367 = v328;
        uint64_t v368 = v175;
        uint64_t v369 = 0;
        uint64_t v370 = v338;
        unsigned __int16 v371 = 0;
        unsigned __int8 v372 = v332;
        long long v373 = 0;
        long long v376 = v421;
        long long v377 = v422;
        v378 = v423;
        long long v374 = v419;
        long long v375 = v420;
        v379 = v315;
        swift_retain();
        swift_retain();
        a5(&v353);
        outlined consume of SetEntityPropertyAction<Transform>?(v170, v169, v168, v167, v165);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v380 = v58;
        v381 = v170;
        v382 = v169;
        v383 = v168 & 1;
        v384 = v167;
        v385 = v165;
        v386 = v166;
        v387 = v278;
        v388 = v274;
        v389 = v164;
        v390 = v321;
        v391 = v173;
        v392 = v174;
        v393 = Strong;
        v394 = v328;
        v395 = v175;
        v396 = 0;
        uint64_t v161 = v338;
        goto LABEL_100;
      }
LABEL_201:
      swift_release();
      swift_release();
      swift_release();
LABEL_202:
      swift_release();
      return 0;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_202;
    case 4:
      uint64_t v21 = *(void *)a2;
      float v22 = *(void *)(a2 + 8);
      long long v342 = *(void *)(a2 + 40);
      char v347 = *(void *)(a2 + 32);
      long long v339 = *(void *)(a2 + 56);
      uint64_t v322 = *(void *)(a2 + 64);
      double v329 = *(void *)(a2 + 48);
      float v24 = *(float *)(a2 + 72);
      float v23 = *(float *)(a2 + 76);
      char v333 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_213:
          __break(1u);
          goto LABEL_214;
        }
        uint64_t v73 = specialized static Entity.entityInfoType(_:)(v21);
        if (v73)
        {
          uint64_t v74 = (*(uint64_t (**)(void))(v73 + 232))();
          uint64_t v75 = *(void *)(v74 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v75, 0);
          *(void *)(v74 + 16) = v21;
          MEMORY[0x22A68E750](v21, v74);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v21);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v76 = swift_allocObject();
      swift_weakInit();
      *(void *)(v76 + 16) = v22;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v77 = String.init(cString:)();
      uint64_t v79 = v78;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v80 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_103;
      }
      swift_bridgeObjectRetain();
      uint64_t v81 = specialized __RawDictionaryStorage.find<A>(_:)(v77, v79);
      if (v82)
      {
        uint64_t v83 = (uint64_t *)(*(void *)(v80 + 56) + 56 * v81);
        uint64_t v85 = *v83;
        uint64_t v84 = v83[1];
        uint64_t v86 = v83[2];
        uint64_t v87 = v83[3];
        unint64_t v88 = v83[4];
        char v89 = v83[5];
        long long v90 = v83[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_103:
        uint64_t v85 = 0;
        uint64_t v84 = 0;
        uint64_t v86 = 0;
        uint64_t v87 = 0;
        unint64_t v88 = 0;
        char v89 = 0;
        long long v90 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v419 = v347;
      BYTE8(v419) = 0;
      *(void *)&v420 = v342;
      *((void *)&v420 + 1) = v85;
      *(void *)&v421 = v84;
      *((void *)&v421 + 1) = v86;
      *(void *)&v422 = v87;
      *((void *)&v422 + 1) = v88;
      *(void *)&v423 = v89;
      *((void *)&v423 + 1) = v90;
      uint64_t v305 = v86;
      uint64_t v312 = v84;
      uint64_t v296 = v90;
      uint64_t v301 = v89;
      if (v322 && REBindPointBoundComponent())
      {
        uint64_t v177 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v178 = swift_dynamicCastClassUnconditional();
LABEL_108:
          uint64_t v179 = v178;
          goto LABEL_110;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_222:
          __break(1u);
          goto LABEL_223;
        }
        uint64_t v246 = specialized static Entity.entityInfoType(_:)(v177);
        if (!v246)
        {
          uint64_t v178 = makeEntity(for:)(v177);
          goto LABEL_108;
        }
        uint64_t v179 = (*(uint64_t (**)(void))(v246 + 232))();
        uint64_t v247 = *(void *)(v179 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v247, 0);
        *(void *)(v179 + 16) = v177;
        MEMORY[0x22A68E750](v177, v179);
        swift_release();
      }
      else
      {
        uint64_t v179 = 0;
      }
LABEL_110:
      specialized ActionEventData.action<A>()((uint64_t)&v412);
      v180 = v416;
      if (v416)
      {
        unint64_t v275 = v179;
        uint64_t v181 = v417;
        uint64_t v182 = v415;
        char v324 = v88;
        uint64_t v183 = v414;
        uint64_t v286 = v85;
        uint64_t v291 = v87;
        uint64_t v184 = v413;
        uint64_t v185 = v412;
        uint64_t v186 = v418 & 1;
        uint64_t v281 = v418 & 1;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v185, v184, v183, v182, v180);
        uint64_t v187 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAudioAction>);
        double v354 = v185;
        char v355 = v184;
        uint64_t v188 = v24;
        unint64_t v356 = v183 & 1;
        uint64_t v189 = v23;
        char v357 = v182;
        unint64_t v358 = v180;
        char v359 = v181;
        uint64_t v360 = v186;
        uint64_t v279 = v187 & 1;
        char v361 = v187 & 1;
        uint64_t v353 = v76;
        uint64_t v362 = v275;
        uint64_t v363 = v333;
        uint64_t v364 = v188;
        uint64_t v365 = v189;
        uint64_t v366 = Strong;
        uint64_t v367 = v339;
        uint64_t v368 = -1.0;
        uint64_t v369 = 0;
        uint64_t v370 = 0xBFF0000000000000;
        unsigned __int16 v371 = 0;
        unsigned __int8 v372 = 0xBFF0000000000000;
        long long v373 = 0;
        long long v376 = v421;
        long long v377 = v422;
        v378 = v423;
        long long v374 = v419;
        long long v375 = v420;
        v379 = v329;
        swift_retain();
        swift_retain();
        a5(&v353);
        outlined consume of SetEntityPropertyAction<Transform>?(v185, v184, v183, v182, v180);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v380 = v76;
        v381 = v185;
        v382 = v184;
        v383 = v183 & 1;
        v384 = v182;
        v385 = v180;
        v386 = v181;
        v387 = v281;
        v388 = v279;
        v389 = v275;
        v390 = v333;
        v391 = v188;
        v392 = v189;
        v393 = Strong;
        v394 = v339;
        v395 = -1.0;
        v396 = 0;
        v397 = 0xBFF0000000000000;
        v398 = 0;
        v399 = 0xBFF0000000000000;
        v400 = 0;
        v401 = v347;
        v402 = 0;
        v403 = v342;
        v404 = v286;
        v405 = v312;
        v406 = v305;
        v407 = v291;
        v408 = v324;
        v409 = v301;
        v410 = v296;
        unint64_t v176 = v329;
        goto LABEL_200;
      }
      goto LABEL_201;
    case 8:
      uint64_t v25 = *(void *)a2;
      uint64_t v26 = *(void *)(a2 + 8);
      uint64_t v343 = *(void *)(a2 + 40);
      uint64_t v348 = *(void *)(a2 + 32);
      v316 = *(void *)(a2 + 56);
      __int16 v323 = *(void *)(a2 + 48);
      float v28 = *(float *)(a2 + 64);
      uint64_t v27 = *(float *)(a2 + 68);
      uint64_t v330 = *(unsigned char *)(a2 + 72);
      unint64_t v334 = *(void *)(a2 + 80);
      long long v340 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_214:
          __break(1u);
          goto LABEL_215;
        }
        uint64_t v91 = specialized static Entity.entityInfoType(_:)(v25);
        if (v91)
        {
          uint64_t v92 = (*(uint64_t (**)(void))(v91 + 232))();
          uint64_t v93 = *(void *)(v92 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v93, 0);
          *(void *)(v92 + 16) = v25;
          MEMORY[0x22A68E750](v25, v92);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v25);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v94 = swift_allocObject();
      swift_weakInit();
      *(void *)(v94 + 16) = v26;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v95 = String.init(cString:)();
      uint64_t v97 = v96;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v98 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_114;
      }
      swift_bridgeObjectRetain();
      uint64_t v99 = specialized __RawDictionaryStorage.find<A>(_:)(v95, v97);
      if (v100)
      {
        uint64_t v101 = (uint64_t *)(*(void *)(v98 + 56) + 56 * v99);
        uint64_t v103 = *v101;
        uint64_t v102 = v101[1];
        uint64_t v104 = v101[2];
        uint64_t v105 = v101[3];
        uint64_t v106 = v101[4];
        unint64_t v107 = v101[5];
        char v108 = v101[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_114:
        uint64_t v103 = 0;
        uint64_t v102 = 0;
        uint64_t v104 = 0;
        uint64_t v105 = 0;
        uint64_t v106 = 0;
        unint64_t v107 = 0;
        char v108 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v419 = v348;
      BYTE8(v419) = 0;
      *(void *)&v420 = v343;
      *((void *)&v420 + 1) = v103;
      *(void *)&v421 = v102;
      *((void *)&v421 + 1) = v104;
      *(void *)&v422 = v105;
      *((void *)&v422 + 1) = v106;
      *(void *)&v423 = v107;
      *((void *)&v423 + 1) = v108;
      uint64_t v302 = v104;
      uint64_t v306 = v102;
      uint64_t v297 = v105;
      uint64_t v284 = v108;
      uint64_t v287 = v107;
      if (v316 && REBindPointBoundComponent())
      {
        uint64_t v190 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v191 = swift_dynamicCastClassUnconditional();
LABEL_119:
          uint64_t v192 = v191;
          goto LABEL_121;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        uint64_t v248 = specialized static Entity.entityInfoType(_:)(v190);
        if (!v248)
        {
          uint64_t v191 = makeEntity(for:)(v190);
          goto LABEL_119;
        }
        uint64_t v192 = (*(uint64_t (**)(void))(v248 + 232))();
        uint64_t v249 = *(void *)(v192 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v249, 0);
        *(void *)(v192 + 16) = v190;
        MEMORY[0x22A68E750](v190, v192);
        swift_release();
      }
      else
      {
        uint64_t v192 = 0;
      }
LABEL_121:
      specialized ActionEventData.action<A>()((uint64_t)&v412);
      uint64_t v193 = v416;
      if (v416)
      {
        uint64_t v194 = v417;
        unint64_t v195 = v415;
        char v196 = v414;
        v317 = v103;
        v197 = v413;
        uint64_t v198 = v412;
        uint64_t v199 = v418 & 1;
        uint64_t v282 = v418 & 1;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v198, v197, v196, v195, v193);
        uint64_t v200 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAudioAction>);
        double v354 = v198;
        char v355 = v197;
        uint64_t v201 = v28;
        unint64_t v356 = v196 & 1;
        uint64_t v202 = v27;
        char v357 = v195;
        unint64_t v358 = v193;
        char v359 = v194;
        uint64_t v360 = v199;
        unint64_t v276 = v200 & 1;
        char v361 = v200 & 1;
        uint64_t v353 = v94;
        uint64_t v362 = v192;
        uint64_t v363 = v330;
        uint64_t v364 = v201;
        uint64_t v365 = v202;
        uint64_t v367 = 0;
        uint64_t v368 = 0.0;
        uint64_t v366 = Strong;
        uint64_t v369 = 1;
        uint64_t v370 = v334;
        unsigned __int16 v371 = 0;
        unsigned __int8 v372 = v340;
        long long v373 = 0;
        long long v376 = v421;
        long long v377 = v422;
        v378 = v423;
        long long v374 = v419;
        long long v375 = v420;
        v379 = v323;
        swift_retain();
        swift_retain();
        a5(&v353);
        outlined consume of SetEntityPropertyAction<Transform>?(v198, v197, v196, v195, v193);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v380 = v94;
        v381 = v198;
        v382 = v197;
        v383 = v196 & 1;
        v384 = v195;
        v385 = v193;
        v386 = v194;
        v387 = v282;
        v388 = v276;
        v389 = v192;
        v390 = v330;
        v391 = v201;
        v392 = v202;
        v395 = 0.0;
        v393 = Strong;
        v394 = 0;
        v396 = 1;
        v397 = v334;
        v398 = 0;
        v399 = v340;
        v400 = 0;
        v401 = v348;
        v402 = 0;
        v403 = v343;
        v404 = v317;
        v405 = v306;
        v406 = v302;
        v407 = v297;
        v408 = v106;
        v409 = v287;
        v410 = v284;
        unint64_t v176 = v323;
        goto LABEL_200;
      }
      goto LABEL_201;
    case 16:
      float v29 = *(void *)a2;
      uint64_t v30 = *(void *)(a2 + 8);
      uint64_t v344 = *(void *)(a2 + 32);
      char v349 = *(void *)(a2 + 40);
      char v335 = *(void *)(a2 + 56);
      char v337 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        char v109 = specialized static Entity.entityInfoType(_:)(v29);
        if (v109)
        {
          uint64_t v110 = (*(uint64_t (**)(void))(v109 + 232))();
          uint64_t v111 = *(void *)(v110 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v111, 0);
          *(void *)(v110 + 16) = v29;
          MEMORY[0x22A68E750](v29, v110);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v29);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v112 = swift_allocObject();
      swift_weakInit();
      *(void *)(v112 + 16) = v30;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v113 = String.init(cString:)();
      uint64_t v115 = v114;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v116 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_125;
      }
      swift_bridgeObjectRetain();
      uint64_t v117 = specialized __RawDictionaryStorage.find<A>(_:)(v113, v115);
      if (v118)
      {
        uint64_t v119 = (uint64_t *)(*(void *)(v116 + 56) + 56 * v117);
        uint64_t v120 = *v119;
        uint64_t v121 = v119[1];
        uint64_t v123 = v119[2];
        uint64_t v122 = v119[3];
        unint64_t v124 = v119[4];
        char v125 = v119[5];
        char v126 = v119[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_125:
        uint64_t v120 = 0;
        uint64_t v121 = 0;
        uint64_t v123 = 0;
        uint64_t v122 = 0;
        unint64_t v124 = 0;
        char v125 = 0;
        char v126 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v419 = 0;
      BYTE8(v419) = 0;
      *(void *)&v420 = v349;
      *((void *)&v420 + 1) = v120;
      *(void *)&v421 = v121;
      *((void *)&v421 + 1) = v123;
      *(void *)&v422 = v122;
      *((void *)&v422 + 1) = v124;
      *(void *)&v423 = v125;
      *((void *)&v423 + 1) = v126;
      v318 = v124;
      char v325 = v122;
      uint64_t v307 = v126;
      uint64_t v313 = v125;
      if (!v335 || !REBindPointBoundComponent()) {
        goto LABEL_138;
      }
      uint64_t v203 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_136;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_176;
      }
      __break(1u);
LABEL_131:
      swift_bridgeObjectRelease();
LABEL_132:
      uint64_t v120 = 0;
      uint64_t v121 = 0;
      uint64_t v123 = 0;
      uint64_t v137 = 0;
      uint64_t v138 = 0;
      uint64_t v139 = 0;
      unint64_t v140 = 0;
LABEL_133:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v419 = 0;
      BYTE8(v419) = 0;
      *(void *)&v420 = v349;
      *((void *)&v420 + 1) = v120;
      *(void *)&v421 = v121;
      *((void *)&v421 + 1) = v123;
      *(void *)&v422 = v137;
      *((void *)&v422 + 1) = v138;
      *(void *)&v423 = v139;
      *((void *)&v423 + 1) = v140;
      v318 = v138;
      char v325 = v137;
      uint64_t v307 = v140;
      uint64_t v313 = v139;
      if (v335 && REBindPointBoundComponent())
      {
        uint64_t v203 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_136:
          type metadata accessor for Entity();
          int v204 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_224:
            __break(1u);
            goto LABEL_225;
          }
LABEL_176:
          uint64_t v250 = specialized static Entity.entityInfoType(_:)(v203);
          if (v250)
          {
            uint64_t v205 = (*(uint64_t (**)(void))(v250 + 232))();
            char v251 = *(void *)(v205 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v251, 0);
            *(void *)(v205 + 16) = v203;
            MEMORY[0x22A68E750](v203, v205);
            swift_release();
            goto LABEL_139;
          }
          int v204 = makeEntity(for:)(v203);
        }
        uint64_t v205 = v204;
      }
      else
      {
LABEL_138:
        uint64_t v205 = 0;
      }
LABEL_139:
      specialized ActionEventData.action<A>()((uint64_t)&v412);
      uint64_t v206 = v416;
      if (!v416) {
        goto LABEL_201;
      }
      int v207 = v417;
      uint64_t v303 = v121;
      char v208 = v415;
      uint64_t v209 = v414;
      uint64_t v210 = v205;
      int v211 = v413;
      char v212 = v412;
      uint64_t v292 = v418 & 1;
      double v354 = v412;
      char v355 = v413;
      uint64_t v288 = v414 & 1;
      unint64_t v356 = v414 & 1;
      char v357 = v415;
      unint64_t v358 = v416;
      char v359 = v417;
      uint64_t v360 = v418 & 1;
      char v361 = 1;
      uint64_t v353 = v112;
      uint64_t v362 = v210;
      uint64_t v363 = 0;
      uint64_t v364 = 0.0;
      uint64_t v365 = 0.0;
      uint64_t v367 = 0;
      uint64_t v368 = 0.0;
      uint64_t v366 = Strong;
      uint64_t v369 = 1;
      uint64_t v370 = v344;
      unsigned __int16 v371 = 0;
      unsigned __int8 v372 = 0;
      long long v373 = 1;
      long long v376 = v421;
      long long v377 = v422;
      v378 = v423;
      long long v374 = v419;
      long long v375 = v420;
      v379 = v337;
      swift_retain();
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v212, v211, v209, v208, v206);
      swift_retain();
      a5(&v353);
      outlined consume of SetEntityPropertyAction<Transform>?(v212, v211, v209, v208, v206);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v380 = v112;
      v381 = v212;
      v382 = v211;
      v383 = v288;
      v384 = v208;
      v385 = v206;
      v386 = v207;
      v387 = v292;
      v388 = 1;
      v389 = v210;
      v390 = 0;
      v392 = 0.0;
      v391 = 0.0;
      v395 = 0.0;
      v393 = Strong;
      v394 = 0;
      v396 = 1;
      v397 = v344;
      v398 = 0;
      v399 = 0;
      v400 = 1;
      v401 = 0;
      v402 = 0;
      v403 = v349;
      v404 = v120;
      v405 = v303;
      v406 = v123;
      v407 = v325;
      v408 = v318;
      v409 = v313;
      double v213 = v307;
LABEL_199:
      v410 = v213;
      unint64_t v176 = v337;
      goto LABEL_200;
    case 32:
      uint64_t v31 = *(void *)a2;
      uint64_t v32 = *(void *)(a2 + 8);
      uint64_t v344 = *(void *)(a2 + 32);
      char v349 = *(void *)(a2 + 40);
      char v335 = *(void *)(a2 + 56);
      char v337 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        uint64_t v127 = specialized static Entity.entityInfoType(_:)(v31);
        if (v127)
        {
          uint64_t v128 = (*(uint64_t (**)(void))(v127 + 232))();
          uint64_t v129 = *(void *)(v128 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v129, 0);
          *(void *)(v128 + 16) = v31;
          MEMORY[0x22A68E750](v31, v128);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v31);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v112 = swift_allocObject();
      swift_weakInit();
      *(void *)(v112 + 16) = v32;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v130 = String.init(cString:)();
      uint64_t v132 = v131;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v133 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_132;
      }
      swift_bridgeObjectRetain();
      uint64_t v134 = specialized __RawDictionaryStorage.find<A>(_:)(v130, v132);
      if ((v135 & 1) == 0) {
        goto LABEL_131;
      }
      uint64_t v136 = (uint64_t *)(*(void *)(v133 + 56) + 56 * v134);
      uint64_t v120 = *v136;
      uint64_t v121 = v136[1];
      uint64_t v123 = v136[2];
      uint64_t v137 = v136[3];
      uint64_t v138 = v136[4];
      uint64_t v139 = v136[5];
      unint64_t v140 = v136[6];
      swift_bridgeObjectRelease();
      goto LABEL_133;
    case 64:
      float v33 = *(void *)a2;
      float v34 = *(void *)(a2 + 8);
      uint64_t v35 = *(void *)(a2 + 24);
      uint64_t v36 = *(void *)(a2 + 40);
      char v337 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        char v141 = specialized static Entity.entityInfoType(_:)(v33);
        if (v141)
        {
          unint64_t v142 = (*(uint64_t (**)(void))(v141 + 232))();
          uint64_t v143 = *(void *)(v142 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v143, 0);
          *(void *)(v142 + 16) = v33;
          MEMORY[0x22A68E750](v33, v142);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v33);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v144 = swift_allocObject();
      swift_weakInit();
      *(void *)(v144 + 16) = v34;
      swift_beginAccess();
      swift_weakAssign();
      if (v36 && REBindPointBoundComponent())
      {
        uint64_t v145 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v146 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v147 = v146;
          goto LABEL_154;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        char v221 = specialized static Entity.entityInfoType(_:)(v145);
        if (!v221)
        {
          uint64_t v146 = makeEntity(for:)(v145);
          goto LABEL_77;
        }
        uint64_t v147 = (*(uint64_t (**)(void))(v221 + 232))();
        uint64_t v222 = *(void *)(v147 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v222, 0);
        *(void *)(v147 + 16) = v145;
        MEMORY[0x22A68E750](v145, v147);
        swift_release();
      }
      else
      {
        uint64_t v147 = 0;
      }
LABEL_154:
      uint64_t v223 = String.init(cString:)();
      uint64_t v225 = v224;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v226 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v227 = specialized __RawDictionaryStorage.find<A>(_:)(v223, v225);
        if (v228)
        {
          uint64_t v229 = (uint64_t *)(*(void *)(v226 + 56) + 56 * v227);
          uint64_t v230 = *v229;
          uint64_t v231 = v229[1];
          unint64_t v232 = v229[2];
          char v233 = v229[3];
          v234 = v229[4];
          __int16 v345 = v229[6];
          double v350 = v229[5];
          swift_bridgeObjectRelease();
LABEL_161:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v419 = 0;
          BYTE8(v419) = 0;
          *(void *)&v420 = v35;
          *((void *)&v420 + 1) = v230;
          *(void *)&v421 = v231;
          *((void *)&v421 + 1) = v232;
          *(void *)&v422 = v233;
          *((void *)&v422 + 1) = v234;
          uint64_t v331 = v234;
          *(void *)&v423 = v350;
          *((void *)&v423 + 1) = v345;
          specialized ActionEventData.action<A>()((uint64_t)&v412);
          uint64_t v235 = v416;
          if (!v416) {
            goto LABEL_201;
          }
          v319 = v232;
          uint64_t v326 = v231;
          uint64_t v236 = v417;
          uint64_t v237 = v147;
          uint64_t v238 = v415;
          uint64_t v239 = v414;
          uint64_t v308 = v35;
          uint64_t v314 = v233;
          uint64_t v240 = v413;
          int v241 = v412;
          uint64_t v304 = v230;
          uint64_t v298 = v418 & 1;
          double v354 = v412;
          char v355 = v413;
          uint64_t v293 = v414 & 1;
          unint64_t v356 = v414 & 1;
          char v357 = v415;
          unint64_t v358 = v416;
          char v359 = v417;
          uint64_t v360 = v418 & 1;
          char v361 = 1;
          uint64_t v353 = v144;
          uint64_t v362 = v237;
          uint64_t v363 = 0;
          uint64_t v364 = 0.0;
          uint64_t v365 = 0.0;
          uint64_t v367 = 0;
          uint64_t v368 = 0.0;
          uint64_t v366 = Strong;
          uint64_t v369 = 1;
          uint64_t v370 = 0;
          unsigned __int16 v371 = 1;
          unsigned __int8 v372 = 0;
          long long v373 = 1;
          long long v376 = v421;
          long long v377 = v422;
          v378 = v423;
          long long v374 = v419;
          long long v375 = v420;
          v379 = v337;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v241, v240, v239, v238, v235);
          swift_retain();
          a5(&v353);
          outlined consume of SetEntityPropertyAction<Transform>?(v241, v240, v239, v238, v235);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v380 = v144;
          v381 = v241;
          v382 = v240;
          v383 = v293;
          v384 = v238;
          v385 = v235;
          v386 = v236;
          v387 = v298;
          v388 = 1;
          v389 = v237;
          v390 = 0;
          v392 = 0.0;
          v391 = 0.0;
          v395 = 0.0;
          v393 = Strong;
LABEL_198:
          v394 = 0;
          v396 = 1;
          v397 = 0;
          v398 = 1;
          v399 = 0;
          v400 = 1;
          v401 = 0;
          v402 = 0;
          v403 = v308;
          v404 = v304;
          v405 = v326;
          v406 = v319;
          v407 = v314;
          v408 = v331;
          v409 = v350;
          double v213 = v345;
          goto LABEL_199;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v230 = 0;
      uint64_t v231 = 0;
      unint64_t v232 = 0;
      char v233 = 0;
      v234 = 0;
      __int16 v345 = 0;
      double v350 = 0;
      goto LABEL_161;
    default:
      if (a4 != 128) {
        goto LABEL_202;
      }
      uint64_t v12 = *(void *)a2;
      float v13 = *(void *)(a2 + 8);
      float v14 = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 40);
      char v337 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
        uint64_t v214 = specialized static Entity.entityInfoType(_:)(v12);
        if (v214)
        {
          uint64_t v215 = (*(uint64_t (**)(void))(v214 + 232))();
          int v216 = *(void *)(v215 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v216, 0);
          *(void *)(v215 + 16) = v12;
          MEMORY[0x22A68E750](v12, v215);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v12);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v217 = swift_allocObject();
      swift_weakInit();
      *(void *)(v217 + 16) = v13;
      swift_beginAccess();
      swift_weakAssign();
      if (v15 && REBindPointBoundComponent())
      {
        uint64_t v218 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v219 = swift_dynamicCastClassUnconditional();
LABEL_149:
          int v220 = v219;
          goto LABEL_189;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          JUMPOUT(0x227F9463CLL);
        }
        uint64_t v252 = specialized static Entity.entityInfoType(_:)(v218);
        if (!v252)
        {
          uint64_t v219 = makeEntity(for:)(v218);
          goto LABEL_149;
        }
        int v220 = (*(uint64_t (**)(void))(v252 + 232))();
        uint64_t v253 = *(void *)(v220 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v253, 0);
        *(void *)(v220 + 16) = v218;
        MEMORY[0x22A68E750](v218, v220);
        swift_release();
      }
      else
      {
        int v220 = 0;
      }
LABEL_189:
      uint64_t v254 = String.init(cString:)();
      uint64_t v256 = v255;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v257 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v258 = specialized __RawDictionaryStorage.find<A>(_:)(v254, v256);
        if (v259)
        {
          unint64_t v260 = (uint64_t *)(*(void *)(v257 + 56) + 56 * v258);
          char v261 = *v260;
          char v262 = v260[1];
          uint64_t v263 = v260[2];
          uint64_t v264 = v260[3];
          uint64_t v265 = v260[4];
          __int16 v345 = v260[6];
          double v350 = v260[5];
          swift_bridgeObjectRelease();
LABEL_196:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v419 = 0;
          BYTE8(v419) = 0;
          *(void *)&v420 = v14;
          *((void *)&v420 + 1) = v261;
          *(void *)&v421 = v262;
          *((void *)&v421 + 1) = v263;
          *(void *)&v422 = v264;
          *((void *)&v422 + 1) = v265;
          uint64_t v331 = v265;
          *(void *)&v423 = v350;
          *((void *)&v423 + 1) = v345;
          specialized ActionEventData.action<A>()((uint64_t)&v412);
          uint64_t v266 = v416;
          if (!v416) {
            goto LABEL_201;
          }
          v319 = v263;
          uint64_t v326 = v262;
          unint64_t v267 = v220;
          unint64_t v268 = v414;
          uint64_t v308 = v14;
          uint64_t v314 = v264;
          uint64_t v269 = v413;
          uint64_t v270 = v412;
          uint64_t v304 = v261;
          uint64_t v299 = v418 & 1;
          double v354 = v412;
          char v355 = v413;
          uint64_t v289 = v414;
          uint64_t v294 = v414 & 1;
          unint64_t v356 = v414 & 1;
          char v357 = v415;
          unint64_t v358 = v416;
          uint64_t v271 = v415;
          char v359 = v417;
          unint64_t v272 = v417;
          uint64_t v360 = v418 & 1;
          char v361 = 1;
          uint64_t v353 = v217;
          uint64_t v362 = v267;
          uint64_t v363 = 0;
          uint64_t v364 = 0.0;
          uint64_t v365 = 0.0;
          uint64_t v367 = 0;
          uint64_t v368 = 0.0;
          uint64_t v366 = Strong;
          uint64_t v369 = 1;
          uint64_t v370 = 0;
          unsigned __int16 v371 = 1;
          unsigned __int8 v372 = 0;
          long long v373 = 1;
          long long v376 = v421;
          long long v377 = v422;
          v378 = v423;
          long long v374 = v419;
          long long v375 = v420;
          v379 = v337;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v270, v269, v268, v271, v266);
          swift_retain();
          a5(&v353);
          swift_release();
          outlined consume of SetEntityPropertyAction<Transform>?(v270, v269, v289, v271, v266);
          swift_release();
          swift_release();
          swift_release();
          v380 = v217;
          v381 = v270;
          v382 = v269;
          v383 = v294;
          v384 = v271;
          v385 = v266;
          v386 = v272;
          v387 = v299;
          v388 = 1;
          v389 = v267;
          v390 = 0;
          v392 = 0.0;
          v391 = 0.0;
          v395 = 0.0;
          v393 = Strong;
          goto LABEL_198;
        }
        swift_bridgeObjectRelease();
      }
      char v261 = 0;
      char v262 = 0;
      uint64_t v263 = 0;
      uint64_t v264 = 0;
      uint64_t v265 = 0;
      __int16 v345 = 0;
      double v350 = 0;
      goto LABEL_196;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  float v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  float v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t Entity;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  double v168;
  double v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  double v182;
  double v183;
  double v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  double v196;
  double v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  double v208;
  double v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  char v269;
  uint64_t *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  char v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  uint64_t v309;
  uint64_t v310;
  char v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char v322;
  char v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  char v338;
  unint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  uint64_t v344;
  unint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t Strong;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char v389;
  uint64_t v390;
  char v391;
  double v392;
  double v393;
  uint64_t v394;
  uint64_t v395;
  double v396;
  char v397;
  unint64_t v398;
  char v399;
  unint64_t v400;
  char v401;
  long long v402;
  long long v403;
  long long v404;
  long long v405;
  long long v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  char v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char v416;
  uint64_t v417;
  char v418;
  double v419;
  double v420;
  uint64_t v421;
  uint64_t v422;
  double v423;
  char v424;
  unint64_t v425;
  char v426;
  unint64_t v427;
  char v428;
  uint64_t v429;
  char v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  long long v447;
  long long v448;
  long long v449;
  long long v450;
  long long v451;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      unint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v365 = *(void *)(a2 + 40);
      unsigned __int8 v372 = *(void *)(a2 + 32);
      v316 = *(void *)(a2 + 48);
      uint64_t v9 = *(void *)(a2 + 64);
      uint64_t v10 = *(float *)(a2 + 72);
      uint64_t v11 = *(float *)(a2 + 76);
      uint64_t v322 = *(unsigned char *)(a2 + 80);
      double v328 = *(void *)(a2 + 88);
      unint64_t v336 = *(void *)(a2 + 96);
      long long v342 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_221;
      }
      uint64_t v40 = specialized static Entity.entityInfoType(_:)(v7);
      if (v40)
      {
        uint64_t v41 = (*(uint64_t (**)(void))(v40 + 232))();
        uint64_t v42 = *(void *)(v41 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v42, 0);
        *(void *)(v41 + 16) = v7;
        MEMORY[0x22A68E750](v7, v41);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v7);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v43 = swift_allocObject();
      swift_weakInit();
      uint64_t v304 = v43;
      *(void *)(v43 + 16) = v8;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v44 = String.init(cString:)();
      uint64_t v46 = v45;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v47 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_85;
      }
      swift_bridgeObjectRetain();
      uint64_t v48 = specialized __RawDictionaryStorage.find<A>(_:)(v44, v46);
      if ((v49 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_85:
        uint64_t v353 = 0;
        uint64_t v360 = 0;
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        unint64_t v53 = 0;
        uint64_t v55 = 0;
        char v54 = 0;
        goto LABEL_86;
      }
      uint64_t v50 = (uint64_t *)(*(void *)(v47 + 56) + 56 * v48);
      uint64_t v51 = v50[2];
      uint64_t v353 = *v50;
      uint64_t v360 = v50[1];
      uint64_t v52 = v50[3];
      unint64_t v53 = v50[4];
      uint64_t v55 = v50[5];
      char v54 = v50[6];
      swift_bridgeObjectRelease();
LABEL_86:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = v372;
      BYTE8(v447) = 0;
      *(void *)&v448 = v365;
      *((void *)&v448 + 1) = v353;
      *(void *)&v449 = v360;
      *((void *)&v449 + 1) = v51;
      *(void *)&v450 = v52;
      *((void *)&v450 + 1) = v53;
      *(void *)&v451 = v55;
      *((void *)&v451 + 1) = v54;
      uint64_t v296 = v52;
      uint64_t v299 = v51;
      uint64_t v291 = v54;
      uint64_t v293 = v55;
      if (!v9 || !REBindPointBoundComponent())
      {
        uint64_t v159 = 0;
        goto LABEL_92;
      }
      uint64_t Entity = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v158 = swift_dynamicCastClassUnconditional();
LABEL_90:
        uint64_t v159 = v158;
        goto LABEL_92;
      }
      if (REEntityIsBeingDestroyed()) {
        goto LABEL_229;
      }
      unint64_t v232 = specialized static Entity.entityInfoType(_:)(Entity);
      if (!v232)
      {
        uint64_t v158 = makeEntity(for:)(Entity);
        goto LABEL_90;
      }
      uint64_t v159 = (*(uint64_t (**)(void))(v232 + 232))();
      char v233 = *(void *)(v159 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v233, 0);
      *(void *)(v159 + 16) = Entity;
      MEMORY[0x22A68E750](Entity, v159);
      swift_release();
LABEL_92:
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      uint64_t v160 = v444;
      if (!v444) {
        goto LABEL_208;
      }
      uint64_t v161 = v446;
      v162 = v445;
      uint64_t v163 = v443;
      uint64_t v164 = v442;
      uint64_t v165 = v441;
      uint64_t v288 = v53;
      uint64_t v166 = v440;
      uint64_t v283 = v442;
      uint64_t v286 = v440;
      swift_retain();
      outlined copy of SetEntityPropertyAction<String>?(v166, v165, v164, v163, v160);
      uint64_t v167 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<String>>);
      v403 = v448;
      v404 = v449;
      v405 = v450;
      v406 = v451;
      uint64_t v168 = v10;
      uint64_t v169 = v11;
      v384 = v283 & 1;
      v385 = v163;
      v386 = v160;
      v387 = v162;
      v388 = v161;
      uint64_t v281 = v167 & 1;
      v389 = v167 & 1;
      v382 = v286;
      v383 = v165;
      v381 = v304;
      v390 = v159;
      v391 = v322;
      v392 = v168;
      v393 = v169;
      v394 = Strong;
      v395 = v342;
      v396 = -1.0;
      v397 = 0;
      v398 = v328;
      v399 = 0;
      v400 = v336;
      v401 = 0;
      v402 = v447;
      v407 = v316;
      swift_retain();
      swift_retain();
      a5(&v381);
      outlined consume of SetEntityPropertyAction<String>?(v286, v165, v283, v163, v160);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v408 = v304;
      v409 = v286;
      v410 = v165;
      v411 = v283 & 1;
      v412 = v163;
      v413 = v160;
      v414 = v162;
      v415 = v161;
      v416 = v281;
      v417 = v159;
      v418 = v322;
      v419 = v168;
      v420 = v169;
      v421 = Strong;
      v422 = v342;
      v423 = -1.0;
      v424 = 0;
      uint64_t v170 = v328;
LABEL_105:
      v425 = v170;
      v426 = 0;
      v427 = v336;
      v428 = 0;
      v429 = v372;
      v430 = 0;
      v431 = v365;
      v432 = v353;
      v433 = v360;
      v434 = v299;
      v435 = v296;
      v436 = v288;
      v437 = v293;
      v438 = v291;
      uint64_t v185 = v316;
LABEL_207:
      v439 = v185;
      outlined release of ActionEvent<SetEntityPropertyAction<String>>((uint64_t)&v408);
      return 0;
    case 2:
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *(void *)(a2 + 8);
      uint64_t v365 = *(void *)(a2 + 40);
      unsigned __int8 v372 = *(void *)(a2 + 32);
      uint64_t v18 = *(float *)(a2 + 56);
      unint64_t v336 = *(void *)(a2 + 64);
      uint64_t v343 = *(void *)(a2 + 48);
      double v329 = *(void *)(a2 + 72);
      uint64_t v19 = *(void *)(a2 + 88);
      v316 = *(void *)(a2 + 80);
      uint64_t v20 = *(float *)(a2 + 96);
      uint64_t v21 = *(float *)(a2 + 100);
      __int16 v323 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v56 = specialized static Entity.entityInfoType(_:)(v16);
        if (v56)
        {
          uint64_t v57 = (*(uint64_t (**)(void))(v56 + 232))();
          uint64_t v58 = *(void *)(v57 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v58, 0);
          *(void *)(v57 + 16) = v16;
          MEMORY[0x22A68E750](v16, v57);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v16);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v59 = swift_allocObject();
      swift_weakInit();
      uint64_t v305 = v59;
      *(void *)(v59 + 16) = v17;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v60 = String.init(cString:)();
      uint64_t v62 = v61;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v63 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_96;
      }
      swift_bridgeObjectRetain();
      uint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v60, v62);
      if (v65)
      {
        uint64_t v66 = (uint64_t *)(*(void *)(v63 + 56) + 56 * v64);
        uint64_t v67 = v66[2];
        uint64_t v353 = *v66;
        uint64_t v360 = v66[1];
        uint64_t v68 = v66[3];
        uint64_t v69 = v66[4];
        char v71 = v66[5];
        unint64_t v70 = v66[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_96:
        uint64_t v353 = 0;
        uint64_t v360 = 0;
        uint64_t v67 = 0;
        uint64_t v68 = 0;
        uint64_t v69 = 0;
        char v71 = 0;
        unint64_t v70 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = v372;
      BYTE8(v447) = 0;
      *(void *)&v448 = v365;
      *((void *)&v448 + 1) = v353;
      *(void *)&v449 = v360;
      *((void *)&v449 + 1) = v67;
      *(void *)&v450 = v68;
      *((void *)&v450 + 1) = v69;
      *(void *)&v451 = v71;
      *((void *)&v451 + 1) = v70;
      uint64_t v296 = v68;
      uint64_t v299 = v67;
      uint64_t v291 = v70;
      uint64_t v293 = v71;
      if (v19 && REBindPointBoundComponent())
      {
        uint64_t v171 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          unsigned int v172 = swift_dynamicCastClassUnconditional();
LABEL_101:
          unsigned int v173 = v172;
          goto LABEL_103;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_230:
          __break(1u);
          goto LABEL_231;
        }
        v234 = specialized static Entity.entityInfoType(_:)(v171);
        if (!v234)
        {
          unsigned int v172 = makeEntity(for:)(v171);
          goto LABEL_101;
        }
        unsigned int v173 = (*(uint64_t (**)(void))(v234 + 232))();
        uint64_t v235 = *(void *)(v173 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v235, 0);
        *(void *)(v173 + 16) = v171;
        MEMORY[0x22A68E750](v171, v173);
        swift_release();
      }
      else
      {
        unsigned int v173 = 0;
      }
LABEL_103:
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      int v174 = v444;
      if (v444)
      {
        uint64_t v175 = v446;
        unint64_t v176 = v445;
        uint64_t v177 = v443;
        uint64_t v178 = v442;
        uint64_t v179 = v441;
        uint64_t v288 = v69;
        v180 = v440;
        uint64_t v284 = v442;
        uint64_t v287 = v440;
        swift_retain();
        outlined copy of SetEntityPropertyAction<String>?(v180, v179, v178, v177, v174);
        uint64_t v181 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<String>>);
        v403 = v448;
        v404 = v449;
        v405 = v450;
        v406 = v451;
        uint64_t v182 = v20;
        uint64_t v183 = v21;
        uint64_t v184 = v18;
        v384 = v284 & 1;
        v385 = v177;
        v386 = v174;
        v387 = v176;
        v388 = v175;
        uint64_t v282 = v181 & 1;
        v389 = v181 & 1;
        v382 = v287;
        v383 = v179;
        v381 = v305;
        v390 = v173;
        v391 = v323;
        v392 = v182;
        v393 = v183;
        v394 = Strong;
        v395 = v329;
        v396 = v184;
        v397 = 0;
        v398 = v343;
        v399 = 0;
        v400 = v336;
        v401 = 0;
        v402 = v447;
        v407 = v316;
        swift_retain();
        swift_retain();
        a5(&v381);
        outlined consume of SetEntityPropertyAction<String>?(v287, v179, v284, v177, v174);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v408 = v305;
        v409 = v287;
        v410 = v179;
        v411 = v284 & 1;
        v412 = v177;
        v413 = v174;
        v414 = v176;
        v415 = v175;
        v416 = v282;
        v417 = v173;
        v418 = v323;
        v419 = v182;
        v420 = v183;
        v421 = Strong;
        v422 = v329;
        v423 = v184;
        v424 = 0;
        uint64_t v170 = v343;
        goto LABEL_105;
      }
LABEL_208:
      swift_release();
      swift_release();
      swift_release();
LABEL_209:
      swift_release();
      return 0;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_209;
    case 4:
      float v22 = *(void *)a2;
      float v23 = *(void *)(a2 + 8);
      uint64_t v366 = *(void *)(a2 + 40);
      long long v374 = *(void *)(a2 + 32);
      uint64_t v330 = *(void *)(a2 + 48);
      float v24 = *(void *)(a2 + 64);
      uint64_t v344 = *(void *)(a2 + 56);
      uint64_t v25 = *(float *)(a2 + 72);
      uint64_t v26 = *(float *)(a2 + 76);
      long long v338 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_222:
          __break(1u);
          goto LABEL_223;
        }
        __int16 v72 = specialized static Entity.entityInfoType(_:)(v22);
        if (v72)
        {
          uint64_t v73 = (*(uint64_t (**)(void))(v72 + 232))();
          uint64_t v74 = *(void *)(v73 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v74, 0);
          *(void *)(v73 + 16) = v22;
          MEMORY[0x22A68E750](v22, v73);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v22);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v75 = swift_allocObject();
      swift_weakInit();
      *(void *)(v75 + 16) = v23;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v76 = String.init(cString:)();
      uint64_t v78 = v77;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v79 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_108;
      }
      swift_bridgeObjectRetain();
      uint64_t v80 = specialized __RawDictionaryStorage.find<A>(_:)(v76, v78);
      if (v81)
      {
        uint64_t v82 = (uint64_t *)(*(void *)(v79 + 56) + 56 * v80);
        uint64_t v83 = v82[2];
        double v354 = *v82;
        char v361 = v82[1];
        uint64_t v84 = v82[3];
        uint64_t v85 = v82[4];
        uint64_t v87 = v82[5];
        uint64_t v86 = v82[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_108:
        double v354 = 0;
        char v361 = 0;
        uint64_t v83 = 0;
        uint64_t v84 = 0;
        uint64_t v85 = 0;
        uint64_t v87 = 0;
        uint64_t v86 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = v374;
      BYTE8(v447) = 0;
      *(void *)&v448 = v366;
      *((void *)&v448 + 1) = v354;
      *(void *)&v449 = v361;
      *((void *)&v449 + 1) = v83;
      *(void *)&v450 = v84;
      *((void *)&v450 + 1) = v85;
      *(void *)&v451 = v87;
      *((void *)&v451 + 1) = v86;
      uint64_t v306 = v84;
      uint64_t v312 = v83;
      uint64_t v297 = v86;
      uint64_t v300 = v87;
      if (v24 && REBindPointBoundComponent())
      {
        uint64_t v186 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v187 = swift_dynamicCastClassUnconditional();
LABEL_113:
          v317 = v187;
          goto LABEL_115;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_231:
          __break(1u);
          goto LABEL_232;
        }
        uint64_t v236 = specialized static Entity.entityInfoType(_:)(v186);
        if (!v236)
        {
          uint64_t v187 = makeEntity(for:)(v186);
          goto LABEL_113;
        }
        uint64_t v237 = (*(uint64_t (**)(void))(v236 + 232))();
        uint64_t v238 = *(void *)(v237 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v238, 0);
        *(void *)(v237 + 16) = v186;
        MEMORY[0x22A68E750](v186, v237);
        v317 = v237;
        swift_release();
      }
      else
      {
        v317 = 0;
      }
LABEL_115:
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      uint64_t v188 = v444;
      if (v444)
      {
        uint64_t v189 = v446;
        uint64_t v190 = v445;
        uint64_t v191 = v443;
        uint64_t v192 = v442;
        uint64_t v193 = v441;
        uint64_t v294 = v85;
        uint64_t v194 = v440;
        swift_retain();
        outlined copy of SetEntityPropertyAction<String>?(v194, v193, v192, v191, v188);
        unint64_t v195 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<String>>);
        v403 = v448;
        v404 = v449;
        v405 = v450;
        v406 = v451;
        char v196 = v25;
        v197 = v26;
        v382 = v194;
        v383 = v193;
        v384 = v192 & 1;
        v385 = v191;
        v386 = v188;
        v387 = v190;
        v388 = v189;
        uint64_t v289 = v195 & 1;
        v389 = v195 & 1;
        v381 = v75;
        v390 = v317;
        v391 = v338;
        v392 = v196;
        v393 = v197;
        v394 = Strong;
        v395 = v344;
        v396 = -1.0;
        v397 = 0;
        v398 = 0xBFF0000000000000;
        v399 = 0;
        v400 = 0xBFF0000000000000;
        v401 = 0;
        v402 = v447;
        v407 = v330;
        swift_retain();
        swift_retain();
        a5(&v381);
        outlined consume of SetEntityPropertyAction<String>?(v194, v193, v192, v191, v188);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v408 = v75;
        v409 = v194;
        v410 = v193;
        v411 = v192 & 1;
        v412 = v191;
        v413 = v188;
        v414 = v190;
        v415 = v189;
        v416 = v289;
        v417 = v317;
        v418 = v338;
        v419 = v196;
        v420 = v197;
        v421 = Strong;
        v422 = v344;
        v423 = -1.0;
        v424 = 0;
        v425 = 0xBFF0000000000000;
        v426 = 0;
        v427 = 0xBFF0000000000000;
        v428 = 0;
        v429 = v374;
        v430 = 0;
        v431 = v366;
        v432 = v354;
        v433 = v361;
        v434 = v312;
        v435 = v306;
        v436 = v294;
        v437 = v300;
        v438 = v297;
        uint64_t v185 = v330;
        goto LABEL_207;
      }
      goto LABEL_208;
    case 8:
      uint64_t v27 = *(void *)a2;
      float v28 = *(void *)(a2 + 8);
      uint64_t v367 = *(void *)(a2 + 40);
      long long v375 = *(void *)(a2 + 32);
      float v29 = *(void *)(a2 + 56);
      char v324 = *(void *)(a2 + 48);
      uint64_t v30 = *(float *)(a2 + 64);
      uint64_t v31 = *(float *)(a2 + 68);
      uint64_t v331 = *(unsigned char *)(a2 + 72);
      long long v339 = *(void *)(a2 + 80);
      __int16 v345 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        unint64_t v88 = specialized static Entity.entityInfoType(_:)(v27);
        if (v88)
        {
          char v89 = (*(uint64_t (**)(void))(v88 + 232))();
          long long v90 = *(void *)(v89 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v90, 0);
          *(void *)(v89 + 16) = v27;
          MEMORY[0x22A68E750](v27, v89);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v27);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v91 = swift_allocObject();
      swift_weakInit();
      *(void *)(v91 + 16) = v28;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v92 = String.init(cString:)();
      uint64_t v94 = v93;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v95 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_119;
      }
      swift_bridgeObjectRetain();
      uint64_t v96 = specialized __RawDictionaryStorage.find<A>(_:)(v92, v94);
      if (v97)
      {
        uint64_t v98 = (uint64_t *)(*(void *)(v95 + 56) + 56 * v96);
        uint64_t v99 = v98[2];
        char v355 = *v98;
        uint64_t v362 = v98[1];
        uint64_t v100 = v98[3];
        uint64_t v101 = v98[4];
        uint64_t v103 = v98[5];
        uint64_t v102 = v98[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_119:
        char v355 = 0;
        uint64_t v362 = 0;
        uint64_t v99 = 0;
        uint64_t v100 = 0;
        uint64_t v101 = 0;
        uint64_t v103 = 0;
        uint64_t v102 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = v375;
      BYTE8(v447) = 0;
      *(void *)&v448 = v367;
      *((void *)&v448 + 1) = v355;
      *(void *)&v449 = v362;
      *((void *)&v449 + 1) = v99;
      *(void *)&v450 = v100;
      *((void *)&v450 + 1) = v101;
      *(void *)&v451 = v103;
      *((void *)&v451 + 1) = v102;
      uint64_t v307 = v100;
      uint64_t v313 = v99;
      uint64_t v298 = v103;
      uint64_t v301 = v101;
      uint64_t v295 = v102;
      if (v29 && REBindPointBoundComponent())
      {
        uint64_t v198 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v199 = swift_dynamicCastClassUnconditional();
LABEL_124:
          uint64_t v200 = v199;
          goto LABEL_126;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_232:
          __break(1u);
          goto LABEL_233;
        }
        uint64_t v239 = specialized static Entity.entityInfoType(_:)(v198);
        if (!v239)
        {
          uint64_t v199 = makeEntity(for:)(v198);
          goto LABEL_124;
        }
        uint64_t v200 = (*(uint64_t (**)(void))(v239 + 232))();
        uint64_t v240 = *(void *)(v200 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v240, 0);
        *(void *)(v200 + 16) = v198;
        MEMORY[0x22A68E750](v198, v200);
        swift_release();
      }
      else
      {
        uint64_t v200 = 0;
      }
LABEL_126:
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      uint64_t v201 = v444;
      if (v444)
      {
        uint64_t v202 = v445;
        uint64_t v203 = v443;
        int v204 = v442;
        uint64_t v205 = v441;
        uint64_t v206 = v440;
        uint64_t v290 = v446;
        uint64_t v292 = v440;
        swift_retain();
        outlined copy of SetEntityPropertyAction<String>?(v206, v205, v204, v203, v201);
        int v207 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<String>>);
        v403 = v448;
        v404 = v449;
        v405 = v450;
        v406 = v451;
        char v208 = v30;
        uint64_t v209 = v31;
        v383 = v205;
        v384 = v204 & 1;
        v385 = v203;
        v386 = v201;
        v387 = v202;
        v388 = v290;
        uint64_t v285 = v207 & 1;
        v389 = v207 & 1;
        v381 = v91;
        v382 = v292;
        v390 = v200;
        v391 = v331;
        v392 = v208;
        v393 = v209;
        v395 = 0;
        v396 = 0.0;
        v394 = Strong;
        v397 = 1;
        v398 = v339;
        v399 = 0;
        v400 = v345;
        v401 = 0;
        v402 = v447;
        v407 = v324;
        swift_retain();
        swift_retain();
        a5(&v381);
        outlined consume of SetEntityPropertyAction<String>?(v292, v205, v204, v203, v201);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v408 = v91;
        v409 = v292;
        v410 = v205;
        v411 = v204 & 1;
        v412 = v203;
        v413 = v201;
        v414 = v202;
        v415 = v290;
        v416 = v285;
        v417 = v200;
        v418 = v331;
        v419 = v208;
        v420 = v209;
        v423 = 0.0;
        v421 = Strong;
        v422 = 0;
        v424 = 1;
        v425 = v339;
        v426 = 0;
        v427 = v345;
        v428 = 0;
        v429 = v375;
        v430 = 0;
        v431 = v367;
        v432 = v355;
        v433 = v362;
        v434 = v313;
        v435 = v307;
        v436 = v301;
        v437 = v298;
        v438 = v295;
        uint64_t v185 = v324;
        goto LABEL_207;
      }
      goto LABEL_208;
    case 16:
      uint64_t v32 = *(void *)a2;
      float v33 = *(void *)(a2 + 8);
      long long v376 = *(void *)(a2 + 40);
      unint64_t v358 = *(void *)(a2 + 32);
      uint64_t v368 = *(void *)(a2 + 48);
      double v350 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          goto LABEL_225;
        }
        uint64_t v104 = specialized static Entity.entityInfoType(_:)(v32);
        if (v104)
        {
          uint64_t v105 = (*(uint64_t (**)(void))(v104 + 232))();
          uint64_t v106 = *(void *)(v105 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v106, 0);
          *(void *)(v105 + 16) = v32;
          MEMORY[0x22A68E750](v32, v105);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v32);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v107 = swift_allocObject();
      swift_weakInit();
      *(void *)(v107 + 16) = v33;
      swift_beginAccess();
      swift_weakAssign();
      char v108 = String.init(cString:)();
      uint64_t v110 = v109;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v111 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_130;
      }
      swift_bridgeObjectRetain();
      uint64_t v112 = specialized __RawDictionaryStorage.find<A>(_:)(v108, v110);
      if (v113)
      {
        uint64_t v114 = (uint64_t *)(*(void *)(v111 + 56) + 56 * v112);
        uint64_t v116 = *v114;
        uint64_t v115 = v114[1];
        uint64_t v117 = v114[2];
        uint64_t v118 = v114[3];
        uint64_t v119 = v114[4];
        uint64_t v120 = v114[5];
        uint64_t v121 = v114[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_130:
        uint64_t v116 = 0;
        uint64_t v115 = 0;
        uint64_t v117 = 0;
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        uint64_t v120 = 0;
        uint64_t v121 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = 0;
      BYTE8(v447) = 0;
      *(void *)&v448 = v376;
      *((void *)&v448 + 1) = v116;
      *(void *)&v449 = v115;
      *((void *)&v449 + 1) = v117;
      *(void *)&v450 = v118;
      *((void *)&v450 + 1) = v119;
      *(void *)&v451 = v120;
      *((void *)&v451 + 1) = v121;
      double v332 = v117;
      long long v341 = v115;
      char v325 = v118;
      if (v350)
      {
        if (REBindPointBoundComponent())
        {
          uint64_t v210 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            int v211 = swift_dynamicCastClassUnconditional();
LABEL_135:
            char v212 = v211;
            goto LABEL_179;
          }
          if (REEntityIsBeingDestroyed())
          {
LABEL_233:
            __break(1u);
            goto LABEL_234;
          }
          int v241 = specialized static Entity.entityInfoType(_:)(v210);
          if (!v241)
          {
            int v211 = makeEntity(for:)(v210);
            goto LABEL_135;
          }
          char v242 = (*(uint64_t (**)(void))(v241 + 232))();
          char v243 = *(void *)(v242 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v243, 0);
          *(void *)(v242 + 16) = v210;
          uint64_t v244 = v210;
          char v212 = v242;
          MEMORY[0x22A68E750](v244, v242);
          swift_release();
        }
        else
        {
          char v212 = 0;
        }
      }
      else
      {
        char v212 = 0;
      }
LABEL_179:
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      char v245 = v444;
      if (v444)
      {
        v403 = v448;
        v404 = v449;
        v405 = v450;
        v406 = v451;
        uint64_t v246 = v212;
        uint64_t v247 = v446;
        uint64_t v248 = v445;
        unint64_t v356 = v119;
        uint64_t v249 = v443;
        uint64_t v314 = v121;
        v320 = v120;
        uint64_t v250 = v442;
        char v251 = v441;
        uint64_t v309 = v116;
        uint64_t v252 = v440;
        v382 = v440;
        v383 = v441;
        uint64_t v302 = v442 & 1;
        v384 = v442 & 1;
        v385 = v443;
        v386 = v444;
        v387 = v445;
        v388 = v446;
        v389 = 1;
        v381 = v107;
        v390 = v246;
        v391 = 0;
        v392 = 0.0;
        v393 = 0.0;
        v395 = 0;
        v396 = 0.0;
        v394 = Strong;
        v397 = 1;
        v398 = v358;
        v399 = 0;
        v400 = 0;
        v401 = 1;
        v402 = v447;
        v407 = v368;
        swift_retain();
        swift_retain();
        outlined copy of SetEntityPropertyAction<String>?(v252, v251, v250, v249, v245);
        swift_retain();
        a5(&v381);
        outlined consume of SetEntityPropertyAction<String>?(v252, v251, v250, v249, v245);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v408 = v107;
        v409 = v252;
        v410 = v251;
        v411 = v302;
        v412 = v249;
        v413 = v245;
        v414 = v248;
        v415 = v247;
        v416 = 1;
        v417 = v246;
        v418 = 0;
        v420 = 0.0;
        v419 = 0.0;
        v423 = 0.0;
        v421 = Strong;
        v422 = 0;
        v424 = 1;
        v425 = v358;
        v426 = 0;
        v427 = 0;
        v428 = 1;
        v429 = 0;
        v430 = 0;
        v431 = v376;
        v432 = v309;
        v433 = v341;
        v434 = v332;
        v435 = v325;
        v436 = v356;
        v437 = v320;
        v438 = v314;
        uint64_t v185 = v368;
        goto LABEL_207;
      }
      goto LABEL_208;
    case 32:
      float v34 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      long long v377 = *(void *)(a2 + 40);
      double v351 = *(void *)(a2 + 32);
      char v359 = *(void *)(a2 + 48);
      char v346 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          goto LABEL_226;
        }
        uint64_t v122 = specialized static Entity.entityInfoType(_:)(v34);
        if (v122)
        {
          uint64_t v123 = (*(uint64_t (**)(void))(v122 + 232))();
          unint64_t v124 = *(void *)(v123 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v124, 0);
          *(void *)(v123 + 16) = v34;
          MEMORY[0x22A68E750](v34, v123);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v125 = swift_allocObject();
      swift_weakInit();
      long long v340 = v125;
      *(void *)(v125 + 16) = v35;
      swift_beginAccess();
      swift_weakAssign();
      char v126 = String.init(cString:)();
      uint64_t v128 = v127;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v129 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_138;
      }
      swift_bridgeObjectRetain();
      uint64_t v130 = specialized __RawDictionaryStorage.find<A>(_:)(v126, v128);
      if (v131)
      {
        uint64_t v132 = (uint64_t *)(*(void *)(v129 + 56) + 56 * v130);
        uint64_t v133 = v132[1];
        uint64_t v369 = *v132;
        uint64_t v134 = v132[2];
        uint64_t v135 = v132[3];
        uint64_t v136 = v132[4];
        uint64_t v137 = v132[5];
        uint64_t v138 = v132[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_138:
        uint64_t v369 = 0;
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        uint64_t v135 = 0;
        uint64_t v136 = 0;
        uint64_t v137 = 0;
        uint64_t v138 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = 0;
      BYTE8(v447) = 0;
      *(void *)&v448 = v377;
      *((void *)&v448 + 1) = v369;
      *(void *)&v449 = v133;
      *((void *)&v449 + 1) = v134;
      *(void *)&v450 = v135;
      *((void *)&v450 + 1) = v136;
      *(void *)&v451 = v137;
      *((void *)&v451 + 1) = v138;
      v318 = v135;
      uint64_t v326 = v134;
      char v333 = v133;
      if (v346)
      {
        if (REBindPointBoundComponent())
        {
          double v213 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            uint64_t v214 = swift_dynamicCastClassUnconditional();
LABEL_143:
            uint64_t v215 = v214;
            goto LABEL_185;
          }
          if (REEntityIsBeingDestroyed())
          {
LABEL_234:
            __break(1u);
            goto LABEL_235;
          }
          uint64_t v253 = specialized static Entity.entityInfoType(_:)(v213);
          if (!v253)
          {
            uint64_t v214 = makeEntity(for:)(v213);
            goto LABEL_143;
          }
          uint64_t v215 = (*(uint64_t (**)(void))(v253 + 232))();
          uint64_t v254 = *(void *)(v215 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v254, 0);
          *(void *)(v215 + 16) = v213;
          MEMORY[0x22A68E750](v213, v215);
          swift_release();
        }
        else
        {
          uint64_t v215 = 0;
        }
      }
      else
      {
        uint64_t v215 = 0;
      }
LABEL_185:
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      unint64_t v255 = v444;
      if (v444)
      {
        v403 = v448;
        v404 = v449;
        v405 = v450;
        v406 = v451;
        uint64_t v256 = v446;
        uint64_t v257 = v445;
        uint64_t v348 = v136;
        uint64_t v258 = v443;
        uint64_t v310 = v137;
        uint64_t v259 = v442;
        unint64_t v260 = v441;
        char v261 = v440;
        v382 = v440;
        v383 = v441;
        uint64_t v303 = v442 & 1;
        v384 = v442 & 1;
        v385 = v443;
        v386 = v444;
        v387 = v445;
        v388 = v446;
        v389 = 1;
        v381 = v340;
        v390 = v215;
        v391 = 0;
        v392 = 0.0;
        v393 = 0.0;
        v395 = 0;
        v396 = 0.0;
        v394 = Strong;
        v397 = 1;
        v398 = v351;
        v399 = 0;
        v400 = 0;
        v401 = 1;
        v402 = v447;
        v407 = v359;
        swift_retain();
        swift_retain();
        outlined copy of SetEntityPropertyAction<String>?(v261, v260, v259, v258, v255);
        swift_retain();
        a5(&v381);
        outlined consume of SetEntityPropertyAction<String>?(v261, v260, v259, v258, v255);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v408 = v340;
        v409 = v261;
        v410 = v260;
        v411 = v303;
        v412 = v258;
        v413 = v255;
        v414 = v257;
        v415 = v256;
        v416 = 1;
        v417 = v215;
        v418 = 0;
        v420 = 0.0;
        v419 = 0.0;
        v423 = 0.0;
        v421 = Strong;
        v422 = 0;
        v424 = 1;
        v425 = v351;
        v426 = 0;
        v427 = 0;
        v428 = 1;
        v429 = 0;
        v430 = 0;
        v431 = v377;
        v432 = v369;
        v433 = v333;
        v434 = v326;
        v435 = v318;
        v436 = v348;
        v437 = v310;
        v438 = v138;
        uint64_t v185 = v359;
        goto LABEL_207;
      }
      goto LABEL_208;
    case 64:
      uint64_t v36 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v38 = *(void *)(a2 + 24);
      uint64_t v39 = *(void *)(a2 + 40);
      uint64_t v352 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          goto LABEL_227;
        }
        uint64_t v139 = specialized static Entity.entityInfoType(_:)(v36);
        if (v139)
        {
          unint64_t v140 = (*(uint64_t (**)(void))(v139 + 232))();
          char v141 = *(void *)(v140 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v141, 0);
          *(void *)(v140 + 16) = v36;
          MEMORY[0x22A68E750](v36, v140);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v142 = swift_allocObject();
      swift_weakInit();
      char v347 = v142;
      *(void *)(v142 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      if (v39 && REBindPointBoundComponent())
      {
        uint64_t v143 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v144 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v145 = v144;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_228:
          __break(1u);
LABEL_229:
          __break(1u);
          goto LABEL_230;
        }
        uint64_t v230 = specialized static Entity.entityInfoType(_:)(v143);
        if (!v230)
        {
          uint64_t v144 = makeEntity(for:)(v143);
          goto LABEL_77;
        }
        uint64_t v145 = (*(uint64_t (**)(void))(v230 + 232))();
        uint64_t v231 = *(void *)(v145 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v231, 0);
        *(void *)(v145 + 16) = v143;
        MEMORY[0x22A68E750](v143, v145);
        swift_release();
      }
      else
      {
        uint64_t v145 = 0;
      }
LABEL_79:
      uint64_t v146 = String.init(cString:)();
      uint64_t v148 = v147;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v149 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v150 = specialized __RawDictionaryStorage.find<A>(_:)(v146, v148);
        if (v151)
        {
          uint64_t v152 = (uint64_t *)(*(void *)(v149 + 56) + 56 * v150);
          uint64_t v153 = *v152;
          uint64_t v154 = v152[1];
          v155 = v152[2];
          uint64_t v156 = v152[3];
          uint64_t v370 = v152[5];
          v378 = v152[4];
          uint64_t v363 = v152[6];
          swift_bridgeObjectRelease();
          goto LABEL_147;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v153 = 0;
      uint64_t v154 = 0;
      v155 = 0;
      uint64_t v156 = 0;
      uint64_t v370 = 0;
      v378 = 0;
      uint64_t v363 = 0;
LABEL_147:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = 0;
      BYTE8(v447) = 0;
      *(void *)&v448 = v38;
      *((void *)&v448 + 1) = v153;
      *(void *)&v449 = v154;
      *((void *)&v449 + 1) = v155;
      unint64_t v334 = v156;
      *(void *)&v450 = v156;
      *((void *)&v450 + 1) = v378;
      *(void *)&v451 = v370;
      *((void *)&v451 + 1) = v363;
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      int v216 = v444;
      if (v444)
      {
        v403 = v448;
        v404 = v449;
        v405 = v450;
        v406 = v451;
        v319 = v153;
        char v327 = v38;
        char v217 = v446;
        uint64_t v218 = v445;
        uint64_t v219 = v443;
        int v220 = v442;
        char v221 = v441;
        uint64_t v222 = v145;
        uint64_t v223 = v440;
        v382 = v440;
        v383 = v441;
        uint64_t v308 = v442 & 1;
        v384 = v442 & 1;
        v385 = v443;
        v386 = v444;
        v387 = v445;
        v388 = v446;
        v389 = 1;
        v381 = v347;
        v390 = v222;
        v391 = 0;
        v392 = 0.0;
        v393 = 0.0;
        v395 = 0;
        v396 = 0.0;
        v394 = Strong;
        v397 = 1;
        v398 = 0;
        v399 = 1;
        v400 = 0;
        v401 = 1;
        v402 = v447;
        v407 = v352;
        swift_retain();
        swift_retain();
        outlined copy of SetEntityPropertyAction<String>?(v223, v221, v220, v219, v216);
        swift_retain();
        a5(&v381);
        outlined consume of SetEntityPropertyAction<String>?(v223, v221, v220, v219, v216);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v408 = v347;
        v409 = v223;
        v410 = v221;
        v411 = v308;
        v412 = v219;
        v413 = v216;
        v414 = v218;
        v415 = v217;
        v416 = 1;
        v417 = v222;
        v418 = 0;
        v420 = 0.0;
        v419 = 0.0;
        v423 = 0.0;
        v421 = Strong;
        v422 = 0;
        v424 = 1;
        v425 = 0;
        v426 = 1;
        v427 = 0;
        v428 = 1;
        v429 = 0;
        v430 = 0;
        v431 = v327;
        v432 = v319;
        v433 = v154;
        v434 = v155;
        v435 = v334;
        v436 = v378;
        v437 = v370;
        v438 = v363;
        uint64_t v185 = v352;
        goto LABEL_207;
      }
      goto LABEL_208;
    default:
      if (a4 != 128) {
        goto LABEL_209;
      }
      float v13 = *(void *)a2;
      float v14 = *(void *)(a2 + 8);
      long long v373 = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 40);
      char v337 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_227:
          __break(1u);
          goto LABEL_228;
        }
        uint64_t v224 = specialized static Entity.entityInfoType(_:)(v13);
        if (v224)
        {
          uint64_t v225 = (*(uint64_t (**)(void))(v224 + 232))();
          uint64_t v226 = *(void *)(v225 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v226, 0);
          *(void *)(v225 + 16) = v13;
          MEMORY[0x22A68E750](v13, v225);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v13);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v227 = swift_allocObject();
      swift_weakInit();
      char v335 = v227;
      *(void *)(v227 + 16) = v14;
      swift_beginAccess();
      swift_weakAssign();
      if (!v15) {
        goto LABEL_198;
      }
      if (REBindPointBoundComponent())
      {
        uint64_t v228 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v229 = swift_dynamicCastClassUnconditional();
LABEL_157:
          uint64_t v15 = v229;
          goto LABEL_198;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_235:
          __break(1u);
          JUMPOUT(0x227F9A2ACLL);
        }
        char v262 = specialized static Entity.entityInfoType(_:)(v228);
        if (!v262)
        {
          uint64_t v229 = makeEntity(for:)(v228);
          goto LABEL_157;
        }
        uint64_t v15 = (*(uint64_t (**)(void))(v262 + 232))();
        uint64_t v263 = *(void *)(v15 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v263, 0);
        *(void *)(v15 + 16) = v228;
        MEMORY[0x22A68E750](v228, v15);
        swift_release();
      }
      else
      {
        uint64_t v15 = 0;
      }
LABEL_198:
      uint64_t v264 = String.init(cString:)();
      uint64_t v266 = v265;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v267 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v268 = specialized __RawDictionaryStorage.find<A>(_:)(v264, v266);
        if (v269)
        {
          uint64_t v270 = (uint64_t *)(*(void *)(v267 + 56) + 56 * v268);
          unint64_t v272 = *v270;
          uint64_t v271 = v270[1];
          uint64_t v273 = v270[2];
          uint64_t v364 = v270[4];
          unsigned __int16 v371 = v270[3];
          char v349 = v270[6];
          char v357 = v270[5];
          swift_bridgeObjectRelease();
          goto LABEL_205;
        }
        swift_bridgeObjectRelease();
      }
      unint64_t v272 = 0;
      uint64_t v271 = 0;
      uint64_t v273 = 0;
      uint64_t v364 = 0;
      unsigned __int16 v371 = 0;
      char v349 = 0;
      char v357 = 0;
LABEL_205:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v447 = 0;
      BYTE8(v447) = 0;
      *(void *)&v448 = v373;
      *((void *)&v448 + 1) = v272;
      v321 = v273;
      *(void *)&v449 = v271;
      *((void *)&v449 + 1) = v273;
      *(void *)&v450 = v371;
      *((void *)&v450 + 1) = v364;
      *(void *)&v451 = v357;
      *((void *)&v451 + 1) = v349;
      specialized ActionEventData.action<A>()((uint64_t)&v440);
      unint64_t v274 = v444;
      if (v444)
      {
        v403 = v448;
        v404 = v449;
        v405 = v450;
        v406 = v451;
        unint64_t v275 = v446;
        unint64_t v276 = v445;
        uint64_t v277 = v443;
        v315 = v272;
        char v278 = v442;
        uint64_t v279 = v441;
        uint64_t v280 = v440;
        v382 = v440;
        v383 = v441;
        uint64_t v311 = v442 & 1;
        v384 = v442 & 1;
        v385 = v443;
        v386 = v444;
        v387 = v445;
        v388 = v446;
        v389 = 1;
        v381 = v335;
        v390 = v15;
        v391 = 0;
        v392 = 0.0;
        v393 = 0.0;
        v395 = 0;
        v396 = 0.0;
        v394 = Strong;
        v397 = 1;
        v398 = 0;
        v399 = 1;
        v400 = 0;
        v401 = 1;
        v402 = v447;
        v407 = v337;
        swift_retain();
        swift_retain();
        outlined copy of SetEntityPropertyAction<String>?(v280, v279, v278, v277, v274);
        swift_retain();
        a5(&v381);
        swift_release();
        outlined consume of SetEntityPropertyAction<String>?(v280, v279, v278, v277, v274);
        swift_release();
        swift_release();
        swift_release();
        v408 = v335;
        v409 = v280;
        v410 = v279;
        v411 = v311;
        v412 = v277;
        v413 = v274;
        v414 = v276;
        v415 = v275;
        v416 = 1;
        v417 = v15;
        v418 = 0;
        v420 = 0.0;
        v419 = 0.0;
        v423 = 0.0;
        v421 = Strong;
        v422 = 0;
        v424 = 1;
        v425 = 0;
        v426 = 1;
        v427 = 0;
        v428 = 1;
        v429 = 0;
        v430 = 0;
        v431 = v373;
        v432 = v315;
        v433 = v271;
        v434 = v321;
        v435 = v371;
        v436 = v364;
        v437 = v357;
        v438 = v349;
        uint64_t v185 = v337;
        goto LABEL_207;
      }
      goto LABEL_208;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t Entity;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  char v209;
  double v210;
  double v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char v219;
  char v220;
  double v221;
  double v222;
  double v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  char v233;
  double v234;
  double v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  char v244;
  double v245;
  double v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257;
  char v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  char v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  char v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  uint64_t v290;
  char v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t Strong;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char v334;
  uint64_t v335;
  uint64_t v336;
  char v337;
  char v338;
  uint64_t v339;
  char v340;
  double v341;
  double v342;
  uint64_t v343;
  uint64_t v344;
  double v345;
  char v346;
  unint64_t v347;
  char v348;
  unint64_t v349;
  char v350;
  long long v351;
  long long v352;
  long long v353;
  long long v354;
  long long v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char v360;
  uint64_t v361;
  uint64_t v362;
  char v363;
  char v364;
  uint64_t v365;
  char v366;
  double v367;
  double v368;
  uint64_t v369;
  uint64_t v370;
  double v371;
  char v372;
  unint64_t v373;
  char v374;
  unint64_t v375;
  char v376;
  uint64_t v377;
  char v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char v393;
  long long v394;
  long long v395;
  long long v396;
  long long v397;
  long long v398;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v8 = *(void *)a2;
      unint64_t v7 = *(void *)(a2 + 8);
      v317 = *(void *)(a2 + 40);
      __int16 v323 = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 64);
      uint64_t v10 = *(float *)(a2 + 72);
      uint64_t v11 = *(float *)(a2 + 76);
      uint64_t v269 = *(unsigned char *)(a2 + 80);
      uint64_t v280 = *(void *)(a2 + 48);
      uint64_t v284 = *(void *)(a2 + 88);
      uint64_t v289 = *(void *)(a2 + 96);
      uint64_t v293 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v41 = specialized static Entity.entityInfoType(_:)(v8);
        if (v41)
        {
          uint64_t v42 = (*(uint64_t (**)(void))(v41 + 232))();
          uint64_t v43 = *(void *)(v42 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v43, 0);
          *(void *)(v42 + 16) = v8;
          MEMORY[0x22A68E750](v8, v42);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v8);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v44 = swift_allocObject();
        swift_weakInit();
        uint64_t v45 = v44;
        *(void *)(v44 + 16) = v7;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v46 = String.init(cString:)();
        uint64_t v48 = v47;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v49 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v50 = specialized __RawDictionaryStorage.find<A>(_:)(v46, v48);
          if (v51)
          {
            uint64_t v52 = (uint64_t *)(*(void *)(v49 + 56) + 56 * v50);
            unint64_t v53 = v52[2];
            uint64_t v308 = *v52;
            uint64_t v311 = v52[1];
            char v54 = v52[3];
            uint64_t v303 = v52[4];
            uint64_t v56 = v52[5];
            uint64_t v55 = v52[6];
            swift_bridgeObjectRelease();
LABEL_87:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&v394 = v323;
            BYTE8(v394) = 0;
            *(void *)&v395 = v317;
            *((void *)&v395 + 1) = v308;
            *(void *)&v396 = v311;
            *((void *)&v396 + 1) = v53;
            *(void *)&v397 = v54;
            *((void *)&v397 + 1) = v303;
            *(void *)&v398 = v56;
            *((void *)&v398 + 1) = v55;
            char v261 = v56;
            uint64_t v264 = v53;
            if (!v9) {
              goto LABEL_164;
            }
            if (!REBindPointBoundComponent())
            {
              uint64_t v9 = 0;
              goto LABEL_164;
            }
            uint64_t Entity = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v154 = swift_dynamicCastClassUnconditional();
LABEL_91:
              uint64_t v9 = v154;
              goto LABEL_164;
            }
            if ((REEntityIsBeingDestroyed() & 1) == 0)
            {
              uint64_t v201 = specialized static Entity.entityInfoType(_:)(Entity);
              if (!v201)
              {
                uint64_t v154 = makeEntity(for:)(Entity);
                goto LABEL_91;
              }
              uint64_t v9 = (*(uint64_t (**)(void))(v201 + 232))();
              uint64_t v202 = *(void *)(v9 + 16);
              swift_retain();
              MEMORY[0x22A68E750](v202, 0);
              *(void *)(v9 + 16) = Entity;
              MEMORY[0x22A68E750](Entity, v9);
              swift_release();
LABEL_164:
              specialized ActionEventData.action<A>()((uint64_t)&v388);
              uint64_t v203 = v392;
              if (v392)
              {
                int v204 = v391;
                uint64_t v205 = v390;
                uint64_t v206 = v389;
                unint64_t v255 = v54;
                int v207 = v388;
                uint64_t v254 = v388;
                char v208 = v393;
                swift_retain();
                outlined copy of SetEntityPropertyAction<Transform>?(v207, v206, v205, v204, v203);
                uint64_t v209 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Bool>>);
                uint64_t v352 = v395;
                uint64_t v353 = v396;
                double v354 = v397;
                char v355 = v398;
                uint64_t v210 = v10;
                int v211 = v11;
                unint64_t v334 = v205 & 1;
                char v335 = v204;
                unint64_t v336 = v203;
                char v337 = v208;
                char v251 = v209 & 1;
                long long v338 = v209 & 1;
                double v332 = v254;
                char v333 = v206;
                uint64_t v331 = v45;
                long long v339 = v9;
                long long v340 = v269;
                long long v341 = v210;
                long long v342 = v211;
                uint64_t v343 = Strong;
                uint64_t v344 = v293;
                __int16 v345 = -1.0;
                char v346 = 0;
                char v347 = v284;
                uint64_t v348 = 0;
                char v349 = v289;
                double v350 = 0;
                double v351 = v394;
                unint64_t v356 = v280;
                swift_retain();
                swift_retain();
                a5(&v331);
                outlined consume of SetEntityPropertyAction<Transform>?(v254, v206, v205, v204, v203);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                char v357 = v45;
                unint64_t v358 = v254;
                char v359 = v206;
                uint64_t v360 = v205 & 1;
                char v361 = v204;
                uint64_t v362 = v203;
                uint64_t v363 = v208;
                uint64_t v364 = v251;
                uint64_t v365 = v9;
                uint64_t v366 = v269;
                uint64_t v367 = v210;
                uint64_t v368 = v211;
                uint64_t v369 = Strong;
                uint64_t v370 = v293;
                unsigned __int16 v371 = -1.0;
                unsigned __int8 v372 = 0;
                long long v373 = v284;
                long long v374 = 0;
                long long v375 = v289;
                long long v376 = 0;
                long long v377 = v323;
                v378 = 0;
                v379 = v317;
                v380 = v308;
                v381 = v311;
                v382 = v264;
                v383 = v255;
                v384 = v303;
                v385 = v261;
                v386 = v55;
                int v174 = v280;
                goto LABEL_187;
              }
LABEL_188:
              swift_release();
              swift_release();
              swift_release();
LABEL_189:
              swift_release();
              return 0;
            }
            goto LABEL_221;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v308 = 0;
        uint64_t v311 = 0;
        unint64_t v53 = 0;
        char v54 = 0;
        uint64_t v303 = 0;
        uint64_t v56 = 0;
        uint64_t v55 = 0;
        goto LABEL_87;
      }
      __break(1u);
      goto LABEL_213;
    case 2:
      uint64_t v18 = *(void *)a2;
      uint64_t v17 = *(void *)(a2 + 8);
      v318 = *(void *)(a2 + 40);
      char v324 = *(void *)(a2 + 32);
      uint64_t v19 = *(float *)(a2 + 56);
      uint64_t v294 = *(void *)(a2 + 64);
      uint64_t v300 = *(void *)(a2 + 48);
      uint64_t v20 = *(void *)(a2 + 88);
      uint64_t v285 = *(void *)(a2 + 80);
      uint64_t v290 = *(void *)(a2 + 72);
      uint64_t v21 = *(float *)(a2 + 96);
      float v22 = *(float *)(a2 + 100);
      unint64_t v275 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v57 = specialized static Entity.entityInfoType(_:)(v18);
        if (v57)
        {
          uint64_t v58 = (*(uint64_t (**)(void))(v57 + 232))();
          uint64_t v59 = *(void *)(v58 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v59, 0);
          *(void *)(v58 + 16) = v18;
          MEMORY[0x22A68E750](v18, v58);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v18);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v60 = swift_allocObject();
        swift_weakInit();
        *(void *)(v60 + 16) = v17;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v61 = String.init(cString:)();
        uint64_t v63 = v62;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v64 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v65 = specialized __RawDictionaryStorage.find<A>(_:)(v61, v63);
          if (v66)
          {
            uint64_t v67 = (uint64_t *)(*(void *)(v64 + 56) + 56 * v65);
            uint64_t v68 = *v67;
            uint64_t v69 = v67[2];
            unint64_t v70 = v67[3];
            char v71 = v67[5];
            uint64_t v309 = v67[1];
            uint64_t v312 = v67[4];
            __int16 v72 = v67[6];
            swift_bridgeObjectRelease();
            goto LABEL_94;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v68 = 0;
        uint64_t v309 = 0;
        uint64_t v312 = 0;
        uint64_t v69 = 0;
        unint64_t v70 = 0;
        char v71 = 0;
        __int16 v72 = 0;
LABEL_94:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v394 = v324;
        BYTE8(v394) = 0;
        *(void *)&v395 = v318;
        *((void *)&v395 + 1) = v68;
        *(void *)&v396 = v309;
        *((void *)&v396 + 1) = v69;
        *(void *)&v397 = v70;
        *((void *)&v397 + 1) = v312;
        *(void *)&v398 = v71;
        *((void *)&v398 + 1) = v72;
        uint64_t v265 = v71;
        uint64_t v270 = v69;
        char v262 = v72;
        if (v20)
        {
          if (REBindPointBoundComponent())
          {
            v155 = v70;
            uint64_t v156 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v157 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_222:
                __break(1u);
                goto LABEL_223;
              }
              char v212 = specialized static Entity.entityInfoType(_:)(v156);
              if (v212)
              {
                uint64_t v20 = (*(uint64_t (**)(void))(v212 + 232))();
                double v213 = *(void *)(v20 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v213, 0);
                *(void *)(v20 + 16) = v156;
                MEMORY[0x22A68E750](v156, v20);
                swift_release();
                goto LABEL_170;
              }
              uint64_t v157 = makeEntity(for:)(v156);
            }
            uint64_t v20 = v157;
LABEL_170:
            unint64_t v70 = v155;
            goto LABEL_171;
          }
          uint64_t v20 = 0;
        }
LABEL_171:
        specialized ActionEventData.action<A>()((uint64_t)&v388);
        uint64_t v214 = v392;
        if (!v392) {
          goto LABEL_188;
        }
        uint64_t v215 = v391;
        uint64_t v259 = v70;
        int v216 = v390;
        char v217 = v389;
        uint64_t v218 = v388;
        uint64_t v256 = v388;
        uint64_t v219 = v393;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v218, v217, v216, v215, v214);
        int v220 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Bool>>);
        uint64_t v352 = v395;
        uint64_t v353 = v396;
        double v354 = v397;
        char v355 = v398;
        char v221 = v21;
        uint64_t v222 = v22;
        uint64_t v223 = v19;
        unint64_t v334 = v216 & 1;
        char v335 = v215;
        unint64_t v336 = v214;
        char v337 = v219;
        uint64_t v252 = v220 & 1;
        long long v338 = v220 & 1;
        double v332 = v256;
        char v333 = v217;
        uint64_t v331 = v60;
        long long v339 = v20;
        long long v340 = v275;
        long long v341 = v221;
        long long v342 = v222;
        uint64_t v343 = Strong;
        uint64_t v344 = v290;
        __int16 v345 = v223;
        char v346 = 0;
        char v347 = v300;
        uint64_t v348 = 0;
        char v349 = v294;
        double v350 = 0;
        double v351 = v394;
        unint64_t v356 = v285;
        swift_retain();
        swift_retain();
        a5(&v331);
        outlined consume of SetEntityPropertyAction<Transform>?(v256, v217, v216, v215, v214);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        char v357 = v60;
        unint64_t v358 = v256;
        char v359 = v217;
        uint64_t v360 = v216 & 1;
        char v361 = v215;
        uint64_t v362 = v214;
        uint64_t v363 = v219;
        uint64_t v364 = v252;
        uint64_t v365 = v20;
        uint64_t v366 = v275;
        uint64_t v367 = v221;
        uint64_t v368 = v222;
        uint64_t v369 = Strong;
        uint64_t v370 = v290;
        unsigned __int16 v371 = v223;
        unsigned __int8 v372 = 0;
        long long v373 = v300;
        long long v374 = 0;
        long long v375 = v294;
        long long v376 = 0;
        long long v377 = v324;
        v378 = 0;
        v379 = v318;
        v380 = v68;
        v381 = v309;
        v382 = v270;
        v383 = v259;
        v384 = v312;
        v385 = v265;
        uint64_t v224 = v262;
        goto LABEL_179;
      }
LABEL_213:
      __break(1u);
      goto LABEL_214;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_189;
    case 4:
      float v24 = *(void *)a2;
      float v23 = *(void *)(a2 + 8);
      v319 = *(void *)(a2 + 40);
      char v325 = *(void *)(a2 + 32);
      uint64_t v285 = *(void *)(a2 + 48);
      uint64_t v25 = *(void *)(a2 + 64);
      uint64_t v295 = *(void *)(a2 + 56);
      uint64_t v26 = *(float *)(a2 + 72);
      uint64_t v27 = *(float *)(a2 + 76);
      uint64_t v291 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v73 = specialized static Entity.entityInfoType(_:)(v24);
        if (v73)
        {
          uint64_t v74 = (*(uint64_t (**)(void))(v73 + 232))();
          uint64_t v75 = *(void *)(v74 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v75, 0);
          *(void *)(v74 + 16) = v24;
          MEMORY[0x22A68E750](v24, v74);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v24);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v76 = swift_allocObject();
        swift_weakInit();
        uint64_t v77 = v76;
        *(void *)(v76 + 16) = v23;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v78 = String.init(cString:)();
        uint64_t v80 = v79;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v81 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v82 = specialized __RawDictionaryStorage.find<A>(_:)(v78, v80);
          if (v83)
          {
            uint64_t v84 = (uint64_t *)(*(void *)(v81 + 56) + 56 * v82);
            uint64_t v85 = v84[2];
            uint64_t v304 = *v84;
            uint64_t v310 = v84[1];
            uint64_t v86 = v84[3];
            uint64_t v313 = v84[4];
            unint64_t v88 = v84[5];
            uint64_t v87 = v84[6];
            swift_bridgeObjectRelease();
            goto LABEL_101;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v304 = 0;
        uint64_t v310 = 0;
        uint64_t v85 = 0;
        uint64_t v86 = 0;
        uint64_t v313 = 0;
        unint64_t v88 = 0;
        uint64_t v87 = 0;
LABEL_101:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v394 = v325;
        BYTE8(v394) = 0;
        *(void *)&v395 = v319;
        *((void *)&v395 + 1) = v304;
        *(void *)&v396 = v310;
        *((void *)&v396 + 1) = v85;
        *(void *)&v397 = v86;
        *((void *)&v397 + 1) = v313;
        *(void *)&v398 = v88;
        *((void *)&v398 + 1) = v87;
        uint64_t v271 = v88;
        unint64_t v276 = v85;
        uint64_t v266 = v87;
        if (v25)
        {
          if (REBindPointBoundComponent())
          {
            uint64_t v158 = v86;
            uint64_t v159 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v160 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_223:
                __break(1u);
                goto LABEL_224;
              }
              uint64_t v225 = specialized static Entity.entityInfoType(_:)(v159);
              if (v225)
              {
                uint64_t v25 = (*(uint64_t (**)(void))(v225 + 232))();
                uint64_t v226 = *(void *)(v25 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v226, 0);
                *(void *)(v25 + 16) = v159;
                MEMORY[0x22A68E750](v159, v25);
                swift_release();
                goto LABEL_176;
              }
              uint64_t v160 = makeEntity(for:)(v159);
            }
            uint64_t v25 = v160;
LABEL_176:
            uint64_t v86 = v158;
            goto LABEL_177;
          }
          uint64_t v25 = 0;
        }
LABEL_177:
        specialized ActionEventData.action<A>()((uint64_t)&v388);
        uint64_t v227 = v392;
        if (!v392) {
          goto LABEL_188;
        }
        uint64_t v228 = v391;
        uint64_t v229 = v390;
        uint64_t v263 = v86;
        uint64_t v230 = v389;
        uint64_t v231 = v388;
        unint64_t v260 = v388;
        unint64_t v232 = v393;
        swift_retain();
        uint64_t v253 = v229;
        outlined copy of SetEntityPropertyAction<Transform>?(v231, v230, v229, v228, v227);
        char v233 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Bool>>);
        uint64_t v352 = v395;
        uint64_t v353 = v396;
        double v354 = v397;
        char v355 = v398;
        v234 = v26;
        uint64_t v235 = v27;
        LOBYTE(v229) = v229 & 1;
        unint64_t v334 = v229;
        char v335 = v228;
        unint64_t v336 = v227;
        char v337 = v232;
        uint64_t v257 = v233 & 1;
        long long v338 = v233 & 1;
        double v332 = v260;
        char v333 = v230;
        uint64_t v331 = v77;
        long long v339 = v25;
        long long v340 = v291;
        long long v341 = v234;
        long long v342 = v235;
        uint64_t v343 = Strong;
        uint64_t v344 = v295;
        __int16 v345 = -1.0;
        char v346 = 0;
        char v347 = 0xBFF0000000000000;
        uint64_t v348 = 0;
        char v349 = 0xBFF0000000000000;
        double v350 = 0;
        double v351 = v394;
        unint64_t v356 = v285;
        swift_retain();
        swift_retain();
        a5(&v331);
        outlined consume of SetEntityPropertyAction<Transform>?(v260, v230, v253, v228, v227);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        char v357 = v77;
        unint64_t v358 = v260;
        char v359 = v230;
        uint64_t v360 = v229;
        char v361 = v228;
        uint64_t v362 = v227;
        uint64_t v363 = v232;
        uint64_t v364 = v257;
        uint64_t v365 = v25;
        uint64_t v366 = v291;
        uint64_t v367 = v234;
        uint64_t v368 = v235;
        uint64_t v369 = Strong;
        uint64_t v370 = v295;
        unsigned __int16 v371 = -1.0;
        unsigned __int8 v372 = 0;
        long long v373 = 0xBFF0000000000000;
        long long v374 = 0;
        long long v375 = 0xBFF0000000000000;
        long long v376 = 0;
        long long v377 = v325;
        v378 = 0;
        v379 = v319;
        v380 = v304;
        v381 = v310;
        v382 = v276;
        v383 = v263;
        v384 = v313;
        v385 = v271;
        uint64_t v224 = v266;
LABEL_179:
        v386 = v224;
        int v174 = v285;
        goto LABEL_187;
      }
LABEL_214:
      __break(1u);
      goto LABEL_215;
    case 8:
      float v29 = *(void *)a2;
      float v28 = *(void *)(a2 + 8);
      v320 = *(void *)(a2 + 40);
      uint64_t v326 = *(void *)(a2 + 32);
      uint64_t v30 = *(void *)(a2 + 56);
      uint64_t v31 = *(float *)(a2 + 64);
      uint64_t v32 = *(float *)(a2 + 68);
      uint64_t v286 = *(unsigned char *)(a2 + 72);
      uint64_t v296 = *(void *)(a2 + 48);
      uint64_t v301 = *(void *)(a2 + 80);
      uint64_t v306 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        char v89 = specialized static Entity.entityInfoType(_:)(v29);
        if (v89)
        {
          long long v90 = (*(uint64_t (**)(void))(v89 + 232))();
          uint64_t v91 = *(void *)(v90 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v91, 0);
          *(void *)(v90 + 16) = v29;
          MEMORY[0x22A68E750](v29, v90);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v29);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v92 = swift_allocObject();
        swift_weakInit();
        *(void *)(v92 + 16) = v28;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v93 = String.init(cString:)();
        uint64_t v95 = v94;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v96 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          uint64_t v97 = v30;
          swift_bridgeObjectRetain();
          uint64_t v98 = specialized __RawDictionaryStorage.find<A>(_:)(v93, v95);
          if (v99)
          {
            uint64_t v100 = (uint64_t *)(*(void *)(v96 + 56) + 56 * v98);
            uint64_t v101 = *v100;
            uint64_t v314 = v100[1];
            uint64_t v102 = v100[2];
            uint64_t v103 = v100[3];
            uint64_t v104 = v100[4];
            uint64_t v105 = v100[5];
            uint64_t v106 = v100[6];
            swift_bridgeObjectRelease();
LABEL_108:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&v394 = v326;
            BYTE8(v394) = 0;
            *(void *)&v395 = v320;
            *((void *)&v395 + 1) = v101;
            *(void *)&v396 = v314;
            *((void *)&v396 + 1) = v102;
            *(void *)&v397 = v103;
            *((void *)&v397 + 1) = v104;
            *(void *)&v398 = v105;
            *((void *)&v398 + 1) = v106;
            uint64_t v277 = v104;
            uint64_t v281 = v102;
            unint64_t v267 = v106;
            unint64_t v272 = v105;
            if (!v97 || !REBindPointBoundComponent())
            {
              uint64_t v164 = 0;
              goto LABEL_185;
            }
            uint64_t v161 = v103;
            v162 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v163 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_224:
                __break(1u);
                goto LABEL_225;
              }
              uint64_t v236 = specialized static Entity.entityInfoType(_:)(v162);
              if (v236)
              {
                uint64_t v164 = (*(uint64_t (**)(void))(v236 + 232))();
                uint64_t v237 = *(void *)(v164 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v237, 0);
                *(void *)(v164 + 16) = v162;
                MEMORY[0x22A68E750](v162, v164);
                swift_release();
                goto LABEL_184;
              }
              uint64_t v163 = makeEntity(for:)(v162);
            }
            uint64_t v164 = v163;
LABEL_184:
            uint64_t v103 = v161;
LABEL_185:
            specialized ActionEventData.action<A>()((uint64_t)&v388);
            uint64_t v238 = v392;
            if (v392)
            {
              uint64_t v239 = v391;
              uint64_t v240 = v390;
              int v241 = v389;
              char v242 = v388;
              char v243 = v393;
              swift_retain();
              outlined copy of SetEntityPropertyAction<Transform>?(v242, v241, v240, v239, v238);
              uint64_t v244 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Bool>>);
              uint64_t v352 = v395;
              uint64_t v353 = v396;
              double v354 = v397;
              char v355 = v398;
              char v245 = v31;
              uint64_t v246 = v32;
              double v332 = v242;
              char v333 = v241;
              unint64_t v334 = v240 & 1;
              char v335 = v239;
              unint64_t v336 = v238;
              char v337 = v243;
              uint64_t v258 = v244 & 1;
              long long v338 = v244 & 1;
              uint64_t v331 = v92;
              long long v339 = v164;
              long long v340 = v286;
              long long v341 = v245;
              long long v342 = v246;
              uint64_t v344 = 0;
              __int16 v345 = 0.0;
              uint64_t v343 = Strong;
              char v346 = 1;
              char v347 = v301;
              uint64_t v348 = 0;
              char v349 = v306;
              double v350 = 0;
              double v351 = v394;
              unint64_t v356 = v296;
              swift_retain();
              swift_retain();
              a5(&v331);
              outlined consume of SetEntityPropertyAction<Transform>?(v242, v241, v240, v239, v238);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              char v357 = v92;
              unint64_t v358 = v242;
              char v359 = v241;
              uint64_t v360 = v240 & 1;
              char v361 = v239;
              uint64_t v362 = v238;
              uint64_t v363 = v243;
              uint64_t v364 = v258;
              uint64_t v365 = v164;
              uint64_t v366 = v286;
              uint64_t v367 = v245;
              uint64_t v368 = v246;
              unsigned __int16 v371 = 0.0;
              uint64_t v369 = Strong;
              uint64_t v370 = 0;
              unsigned __int8 v372 = 1;
              long long v373 = v301;
              long long v374 = 0;
              long long v375 = v306;
              long long v376 = 0;
              long long v377 = v326;
              v378 = 0;
              v379 = v320;
              v380 = v101;
              v381 = v314;
              v382 = v281;
              v383 = v103;
              v384 = v277;
              v385 = v272;
              v386 = v267;
              int v174 = v296;
              goto LABEL_187;
            }
            goto LABEL_188;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v97 = v30;
        }
        uint64_t v101 = 0;
        uint64_t v314 = 0;
        uint64_t v102 = 0;
        uint64_t v103 = 0;
        uint64_t v104 = 0;
        uint64_t v105 = 0;
        uint64_t v106 = 0;
        goto LABEL_108;
      }
LABEL_215:
      __break(1u);
      goto LABEL_216;
    case 16:
      float v34 = *(void *)a2;
      float v33 = *(void *)(a2 + 8);
      char v327 = *(void *)(a2 + 40);
      uint64_t v302 = *(void *)(a2 + 48);
      uint64_t v307 = *(void *)(a2 + 32);
      uint64_t v297 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_216:
        __break(1u);
        goto LABEL_217;
      }
      unint64_t v107 = specialized static Entity.entityInfoType(_:)(v34);
      if (v107)
      {
        char v108 = (*(uint64_t (**)(void))(v107 + 232))();
        char v109 = *(void *)(v108 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v109, 0);
        *(void *)(v108 + 16) = v34;
        MEMORY[0x22A68E750](v34, v108);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v34);
      }
LABEL_57:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v110 = swift_allocObject();
      swift_weakInit();
      *(void *)(v110 + 16) = v33;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v111 = String.init(cString:)();
      uint64_t v113 = v112;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v114 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_115;
      }
      swift_bridgeObjectRetain();
      uint64_t v115 = specialized __RawDictionaryStorage.find<A>(_:)(v111, v113);
      if ((v116 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_115:
        v315 = 0;
        v321 = 0;
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        uint64_t v120 = 0;
        uint64_t v122 = 0;
        uint64_t v121 = 0;
        goto LABEL_116;
      }
      uint64_t v117 = (uint64_t *)(*(void *)(v114 + 56) + 56 * v115);
      uint64_t v118 = v117[2];
      v315 = *v117;
      v321 = v117[1];
      uint64_t v119 = v117[3];
      uint64_t v120 = v117[4];
      uint64_t v122 = v117[5];
      uint64_t v121 = v117[6];
      swift_bridgeObjectRelease();
LABEL_116:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v394 = 0;
      BYTE8(v394) = 0;
      *(void *)&v395 = v327;
      *((void *)&v395 + 1) = v315;
      *(void *)&v396 = v321;
      *((void *)&v396 + 1) = v118;
      *(void *)&v397 = v119;
      *((void *)&v397 + 1) = v120;
      *(void *)&v398 = v122;
      *((void *)&v398 + 1) = v121;
      uint64_t v282 = v120;
      uint64_t v287 = v119;
      if (!v297 || !REBindPointBoundComponent()) {
        goto LABEL_128;
      }
      uint64_t v165 = REComponentGetEntity();
      if (!(id)REEntityGetSwiftObject())
      {
        if ((REEntityIsBeingDestroyed() & 1) == 0) {
          goto LABEL_192;
        }
        __break(1u);
        goto LABEL_121;
      }
LABEL_126:
      type metadata accessor for Entity();
      uint64_t v166 = swift_dynamicCastClassUnconditional();
LABEL_127:
      uint64_t v167 = v166;
LABEL_129:
      specialized ActionEventData.action<A>()((uint64_t)&v388);
      uint64_t v168 = v392;
      if (!v392) {
        goto LABEL_188;
      }
      uint64_t v352 = v395;
      uint64_t v353 = v396;
      double v354 = v397;
      char v355 = v398;
      uint64_t v298 = v121;
      uint64_t v169 = v391;
      uint64_t v273 = v118;
      char v278 = v122;
      uint64_t v170 = v390;
      uint64_t v171 = v389;
      unsigned int v172 = v388;
      unsigned int v173 = v393;
      double v332 = v388;
      char v333 = v389;
      unint64_t v268 = v390 & 1;
      unint64_t v334 = v390 & 1;
      char v335 = v391;
      unint64_t v336 = v392;
      char v337 = v393;
      long long v338 = 1;
      uint64_t v331 = v110;
      long long v339 = v167;
      long long v340 = 0;
      long long v341 = 0.0;
      long long v342 = 0.0;
      uint64_t v344 = 0;
      __int16 v345 = 0.0;
      uint64_t v343 = Strong;
      char v346 = 1;
      char v347 = v307;
      uint64_t v348 = 0;
      char v349 = 0;
      double v350 = 1;
      double v351 = v394;
      unint64_t v356 = v302;
      swift_retain();
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v172, v171, v170, v169, v168);
      swift_retain();
      a5(&v331);
      outlined consume of SetEntityPropertyAction<Transform>?(v172, v171, v170, v169, v168);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      char v357 = v110;
      unint64_t v358 = v172;
      char v359 = v171;
      uint64_t v360 = v268;
      char v361 = v169;
      uint64_t v362 = v168;
      uint64_t v363 = v173;
      uint64_t v364 = 1;
      uint64_t v365 = v167;
      uint64_t v366 = 0;
      uint64_t v367 = 0.0;
      uint64_t v368 = 0.0;
      unsigned __int16 v371 = 0.0;
      uint64_t v369 = Strong;
      uint64_t v370 = 0;
      unsigned __int8 v372 = 1;
      long long v373 = v307;
      long long v374 = 0;
      long long v375 = 0;
      long long v376 = 1;
      long long v377 = 0;
      v378 = 0;
      v379 = v327;
      v380 = v315;
      v381 = v321;
      v382 = v273;
      v383 = v287;
      v384 = v282;
      v385 = v278;
      v386 = v298;
      int v174 = v302;
LABEL_187:
      v387 = v174;
      outlined release of ActionEvent<SetEntityPropertyAction<Bool>>((uint64_t)&v357);
      return 0;
    case 32:
      uint64_t v36 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      char v327 = *(void *)(a2 + 40);
      uint64_t v302 = *(void *)(a2 + 48);
      uint64_t v307 = *(void *)(a2 + 32);
      uint64_t v297 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        uint64_t v123 = specialized static Entity.entityInfoType(_:)(v36);
        if (v123)
        {
          unint64_t v124 = (*(uint64_t (**)(void))(v123 + 232))();
          char v125 = *(void *)(v124 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v125, 0);
          *(void *)(v124 + 16) = v36;
          MEMORY[0x22A68E750](v36, v124);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v110 = swift_allocObject();
      swift_weakInit();
      *(void *)(v110 + 16) = v35;
      swift_beginAccess();
      swift_weakAssign();
      char v126 = String.init(cString:)();
      uint64_t v128 = v127;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v129 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_122;
      }
      swift_bridgeObjectRetain();
      uint64_t v130 = specialized __RawDictionaryStorage.find<A>(_:)(v126, v128);
      if (v131)
      {
        uint64_t v132 = (uint64_t *)(*(void *)(v129 + 56) + 56 * v130);
        uint64_t v118 = v132[2];
        v315 = *v132;
        v321 = v132[1];
        uint64_t v133 = v132[3];
        uint64_t v134 = v132[4];
        uint64_t v122 = v132[5];
        uint64_t v121 = v132[6];
        swift_bridgeObjectRelease();
LABEL_123:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v394 = 0;
        BYTE8(v394) = 0;
        *(void *)&v395 = v327;
        *((void *)&v395 + 1) = v315;
        *(void *)&v396 = v321;
        *((void *)&v396 + 1) = v118;
        *(void *)&v397 = v133;
        *((void *)&v397 + 1) = v134;
        *(void *)&v398 = v122;
        *((void *)&v398 + 1) = v121;
        uint64_t v282 = v134;
        uint64_t v287 = v133;
        if (v297 && REBindPointBoundComponent())
        {
          uint64_t v165 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject()) {
            goto LABEL_126;
          }
          if (REEntityIsBeingDestroyed())
          {
LABEL_225:
            __break(1u);
            goto LABEL_226;
          }
LABEL_192:
          uint64_t v247 = specialized static Entity.entityInfoType(_:)(v165);
          if (v247)
          {
            uint64_t v167 = (*(uint64_t (**)(void))(v247 + 232))();
            uint64_t v248 = *(void *)(v167 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v248, 0);
            *(void *)(v167 + 16) = v165;
            MEMORY[0x22A68E750](v165, v167);
            swift_release();
            goto LABEL_129;
          }
          uint64_t v166 = makeEntity(for:)(v165);
          goto LABEL_127;
        }
LABEL_128:
        uint64_t v167 = 0;
        goto LABEL_129;
      }
LABEL_121:
      swift_bridgeObjectRelease();
LABEL_122:
      v315 = 0;
      v321 = 0;
      uint64_t v118 = 0;
      uint64_t v133 = 0;
      uint64_t v134 = 0;
      uint64_t v122 = 0;
      uint64_t v121 = 0;
      goto LABEL_123;
    case 64:
      uint64_t v38 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v39 = *(void *)(a2 + 24);
      uint64_t v40 = *(void *)(a2 + 40);
      uint64_t v305 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
        uint64_t v135 = specialized static Entity.entityInfoType(_:)(v38);
        if (v135)
        {
          uint64_t v136 = (*(uint64_t (**)(void))(v135 + 232))();
          uint64_t v137 = *(void *)(v136 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v137, 0);
          *(void *)(v136 + 16) = v38;
          MEMORY[0x22A68E750](v38, v136);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v138 = swift_allocObject();
      swift_weakInit();
      *(void *)(v138 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      if (v40 && REBindPointBoundComponent())
      {
        uint64_t v139 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          unint64_t v140 = swift_dynamicCastClassUnconditional();
LABEL_77:
          char v141 = v140;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_220:
          __break(1u);
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v199 = specialized static Entity.entityInfoType(_:)(v139);
        if (!v199)
        {
          unint64_t v140 = makeEntity(for:)(v139);
          goto LABEL_77;
        }
        char v141 = (*(uint64_t (**)(void))(v199 + 232))();
        uint64_t v200 = *(void *)(v141 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v200, 0);
        *(void *)(v141 + 16) = v139;
        MEMORY[0x22A68E750](v139, v141);
        swift_release();
      }
      else
      {
        char v141 = 0;
      }
LABEL_79:
      unint64_t v142 = String.init(cString:)();
      uint64_t v144 = v143;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v145 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v146 = specialized __RawDictionaryStorage.find<A>(_:)(v142, v144);
        if (v147)
        {
          uint64_t v148 = (uint64_t *)(*(void *)(v145 + 56) + 56 * v146);
          uint64_t v149 = *v148;
          uint64_t v150 = v148[1];
          uint64_t v151 = v148[2];
          uint64_t v152 = v148[3];
          uint64_t v322 = v148[5];
          double v328 = v148[4];
          v316 = v148[6];
          swift_bridgeObjectRelease();
LABEL_133:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v394 = 0;
          BYTE8(v394) = 0;
          *(void *)&v395 = v39;
          *((void *)&v395 + 1) = v149;
          *(void *)&v396 = v150;
          *((void *)&v396 + 1) = v151;
          uint64_t v292 = v152;
          uint64_t v299 = v151;
          *(void *)&v397 = v152;
          *((void *)&v397 + 1) = v328;
          *(void *)&v398 = v322;
          *((void *)&v398 + 1) = v316;
          specialized ActionEventData.action<A>()((uint64_t)&v388);
          uint64_t v175 = v392;
          if (!v392) {
            goto LABEL_188;
          }
          uint64_t v352 = v395;
          uint64_t v353 = v396;
          double v354 = v397;
          char v355 = v398;
          uint64_t v283 = v39;
          uint64_t v288 = v150;
          unint64_t v176 = Strong;
          uint64_t v177 = v391;
          uint64_t v178 = v390;
          uint64_t v179 = v389;
          v180 = v388;
          uint64_t v279 = v149;
          uint64_t v181 = v393;
          double v332 = v388;
          char v333 = v389;
          unint64_t v274 = v390 & 1;
          unint64_t v334 = v390 & 1;
          char v335 = v391;
          unint64_t v336 = v392;
          char v337 = v393;
          long long v338 = 1;
          uint64_t v331 = v138;
          long long v339 = v141;
          long long v340 = 0;
          long long v341 = 0.0;
          long long v342 = 0.0;
          uint64_t v344 = 0;
          __int16 v345 = 0.0;
          uint64_t v343 = Strong;
          char v346 = 1;
          char v347 = 0;
          uint64_t v348 = 1;
          char v349 = 0;
          double v350 = 1;
          double v351 = v394;
          unint64_t v356 = v305;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v180, v179, v178, v177, v175);
          swift_retain();
          a5(&v331);
          outlined consume of SetEntityPropertyAction<Transform>?(v180, v179, v178, v177, v175);
          swift_release();
LABEL_156:
          swift_release();
          swift_release();
          swift_release();
          char v357 = v138;
          unint64_t v358 = v180;
          char v359 = v179;
          uint64_t v360 = v274;
          char v361 = v177;
          uint64_t v362 = v175;
          uint64_t v363 = v181;
          uint64_t v364 = 1;
          uint64_t v365 = v141;
          uint64_t v366 = 0;
          uint64_t v367 = 0.0;
          uint64_t v368 = 0.0;
          unsigned __int16 v371 = 0.0;
          uint64_t v369 = v176;
          uint64_t v370 = 0;
          unsigned __int8 v372 = 1;
          long long v373 = 0;
          long long v374 = 1;
          long long v375 = 0;
          long long v376 = 1;
          long long v377 = 0;
          v378 = 0;
          v379 = v283;
          v380 = v279;
          v381 = v288;
          v382 = v299;
          v383 = v292;
          v384 = v328;
          v385 = v322;
          v386 = v316;
          int v174 = v305;
          goto LABEL_187;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v149 = 0;
      uint64_t v150 = 0;
      uint64_t v151 = 0;
      uint64_t v152 = 0;
      uint64_t v322 = 0;
      double v328 = 0;
      v316 = 0;
      goto LABEL_133;
    default:
      if (a4 != 128) {
        goto LABEL_189;
      }
      float v14 = *(void *)a2;
      float v13 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 40);
      uint64_t v305 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v182 = specialized static Entity.entityInfoType(_:)(v14);
        if (v182)
        {
          uint64_t v183 = (*(uint64_t (**)(void))(v182 + 232))();
          uint64_t v184 = *(void *)(v183 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v184, 0);
          *(void *)(v183 + 16) = v14;
          MEMORY[0x22A68E750](v14, v183);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v138 = swift_allocObject();
      swift_weakInit();
      *(void *)(v138 + 16) = v13;
      swift_beginAccess();
      swift_weakAssign();
      if (v16 && REBindPointBoundComponent())
      {
        uint64_t v185 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v186 = swift_dynamicCastClassUnconditional();
LABEL_142:
          char v141 = v186;
          goto LABEL_144;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          JUMPOUT(0x227F9C9D4);
        }
        uint64_t v249 = specialized static Entity.entityInfoType(_:)(v185);
        if (!v249)
        {
          uint64_t v186 = makeEntity(for:)(v185);
          goto LABEL_142;
        }
        char v141 = (*(uint64_t (**)(void))(v249 + 232))();
        uint64_t v250 = *(void *)(v141 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v250, 0);
        *(void *)(v141 + 16) = v185;
        MEMORY[0x22A68E750](v185, v141);
        swift_release();
      }
      else
      {
        char v141 = 0;
      }
LABEL_144:
      uint64_t v187 = String.init(cString:)();
      uint64_t v189 = v188;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v190 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v191 = specialized __RawDictionaryStorage.find<A>(_:)(v187, v189);
        if (v192)
        {
          uint64_t v193 = (uint64_t *)(*(void *)(v190 + 56) + 56 * v191);
          uint64_t v194 = *v193;
          unint64_t v195 = v193[1];
          char v196 = v193[2];
          v197 = v193[3];
          uint64_t v322 = v193[5];
          double v328 = v193[4];
          v316 = v193[6];
          swift_bridgeObjectRelease();
LABEL_154:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v394 = 0;
          BYTE8(v394) = 0;
          *(void *)&v395 = v15;
          *((void *)&v395 + 1) = v194;
          *(void *)&v396 = v195;
          *((void *)&v396 + 1) = v196;
          uint64_t v292 = v197;
          uint64_t v299 = v196;
          *(void *)&v397 = v197;
          *((void *)&v397 + 1) = v328;
          *(void *)&v398 = v322;
          *((void *)&v398 + 1) = v316;
          specialized ActionEventData.action<A>()((uint64_t)&v388);
          uint64_t v175 = v392;
          if (!v392) {
            goto LABEL_188;
          }
          uint64_t v352 = v395;
          uint64_t v353 = v396;
          double v354 = v397;
          char v355 = v398;
          uint64_t v283 = v15;
          uint64_t v288 = v195;
          unint64_t v176 = Strong;
          uint64_t v177 = v391;
          uint64_t v198 = v390;
          uint64_t v179 = v389;
          v180 = v388;
          uint64_t v279 = v194;
          uint64_t v181 = v393;
          double v332 = v388;
          char v333 = v389;
          unint64_t v274 = v390 & 1;
          unint64_t v334 = v390 & 1;
          char v335 = v391;
          unint64_t v336 = v392;
          char v337 = v393;
          long long v338 = 1;
          uint64_t v331 = v138;
          long long v339 = v141;
          long long v340 = 0;
          long long v341 = 0.0;
          long long v342 = 0.0;
          uint64_t v344 = 0;
          __int16 v345 = 0.0;
          uint64_t v343 = Strong;
          char v346 = 1;
          char v347 = 0;
          uint64_t v348 = 1;
          char v349 = 0;
          double v350 = 1;
          double v351 = v394;
          unint64_t v356 = v305;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v180, v179, v198, v177, v175);
          swift_retain();
          a5(&v331);
          swift_release();
          outlined consume of SetEntityPropertyAction<Transform>?(v180, v179, v198, v177, v175);
          goto LABEL_156;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v194 = 0;
      unint64_t v195 = 0;
      char v196 = 0;
      v197 = 0;
      uint64_t v322 = 0;
      double v328 = 0;
      v316 = 0;
      goto LABEL_154;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t Entity;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  char v212;
  double v213;
  double v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  char v225;
  double v226;
  double v227;
  double v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  char v238;
  double v239;
  double v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  char v252;
  double v253;
  double v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char v266;
  char v267;
  char v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  char v272;
  char v273;
  char v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  char v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  char v285;
  char v286;
  uint64_t v287;
  char v288;
  char v289;
  int v290;
  uint64_t v291;
  uint64_t v292;
  int v293;
  int v294;
  int v295;
  int v296;
  char v297;
  char v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  char v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  int v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  unint64_t v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  unint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t Strong;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char v357;
  uint64_t v358;
  uint64_t v359;
  int v360;
  char v361;
  char v362;
  uint64_t v363;
  char v364;
  double v365;
  double v366;
  uint64_t v367;
  uint64_t v368;
  double v369;
  char v370;
  unint64_t v371;
  char v372;
  unint64_t v373;
  char v374;
  long long v375;
  long long v376;
  long long v377;
  long long v378;
  long long v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  int v387;
  char v388;
  char v389;
  uint64_t v390;
  char v391;
  double v392;
  double v393;
  uint64_t v394;
  uint64_t v395;
  double v396;
  char v397;
  unint64_t v398;
  char v399;
  unint64_t v400;
  char v401;
  uint64_t v402;
  char v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  int v418;
  char v419;
  long long v420;
  long long v421;
  long long v422;
  long long v423;
  long long v424;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      unint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      long long v342 = *(void *)(a2 + 40);
      char v347 = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 64);
      uint64_t v10 = *(float *)(a2 + 72);
      uint64_t v11 = *(float *)(a2 + 76);
      uint64_t v285 = *(unsigned char *)(a2 + 80);
      uint64_t v308 = *(void *)(a2 + 48);
      uint64_t v314 = *(void *)(a2 + 88);
      v318 = *(void *)(a2 + 96);
      __int16 v323 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v42 = specialized static Entity.entityInfoType(_:)(v7);
        if (v42)
        {
          uint64_t v43 = (*(uint64_t (**)(void))(v42 + 232))();
          uint64_t v44 = *(void *)(v43 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v44, 0);
          *(void *)(v43 + 16) = v7;
          MEMORY[0x22A68E750](v7, v43);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v7);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v45 = swift_allocObject();
        swift_weakInit();
        uint64_t v46 = v45;
        *(void *)(v45 + 16) = v8;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v47 = String.init(cString:)();
        uint64_t v49 = v48;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v50 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v51 = specialized __RawDictionaryStorage.find<A>(_:)(v47, v49);
          if (v52)
          {
            unint64_t v53 = (uint64_t *)(*(void *)(v50 + 56) + 56 * v51);
            char v54 = v53[2];
            unint64_t v334 = v53[1];
            char v337 = *v53;
            uint64_t v55 = v53[3];
            uint64_t v330 = v53[4];
            uint64_t v57 = v53[5];
            uint64_t v56 = v53[6];
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          swift_bridgeObjectRelease();
        }
        unint64_t v334 = 0;
        char v337 = 0;
        char v54 = 0;
        uint64_t v55 = 0;
        uint64_t v330 = 0;
        uint64_t v57 = 0;
        uint64_t v56 = 0;
LABEL_86:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v420 = v347;
        BYTE8(v420) = 0;
        *(void *)&v421 = v342;
        *((void *)&v421 + 1) = v337;
        *(void *)&v422 = v334;
        *((void *)&v422 + 1) = v54;
        *(void *)&v423 = v55;
        *((void *)&v423 + 1) = v330;
        *(void *)&v424 = v57;
        *((void *)&v424 + 1) = v56;
        uint64_t v280 = v57;
        uint64_t v282 = v54;
        uint64_t v279 = v56;
        if (!v9 || !REBindPointBoundComponent())
        {
          uint64_t v299 = 0;
          goto LABEL_162;
        }
        uint64_t v153 = v55;
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          v155 = swift_dynamicCastClassUnconditional();
          goto LABEL_90;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v203 = specialized static Entity.entityInfoType(_:)(Entity);
          if (v203)
          {
            int v204 = (*(uint64_t (**)(void))(v203 + 232))();
            uint64_t v205 = *(void *)(v204 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v205, 0);
            *(void *)(v204 + 16) = Entity;
            MEMORY[0x22A68E750](Entity, v204);
            uint64_t v299 = v204;
            swift_release();
            goto LABEL_161;
          }
          v155 = makeEntity(for:)(Entity);
LABEL_90:
          uint64_t v299 = v155;
LABEL_161:
          uint64_t v55 = v153;
LABEL_162:
          specialized ActionEventData.action<A>()((uint64_t)&v413);
          uint64_t v206 = v417;
          if (v417)
          {
            uint64_t v295 = v418;
            unint64_t v276 = v55;
            int v207 = v416;
            char v208 = v415;
            uint64_t v209 = v414;
            uint64_t v210 = v413;
            uint64_t v270 = v413;
            int v211 = v419 & 1;
            unint64_t v268 = v419 & 1;
            swift_retain();
            outlined copy of SetEntityPropertyAction<Transform>?(v210, v209, v208, v207, v206);
            char v212 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Float>>);
            long long v376 = v421;
            long long v377 = v422;
            v378 = v423;
            v379 = v424;
            double v213 = v10;
            uint64_t v214 = v11;
            char v357 = v208 & 1;
            unint64_t v358 = v207;
            char v359 = v206;
            uint64_t v360 = v295;
            char v361 = v211;
            uint64_t v266 = v212 & 1;
            uint64_t v362 = v212 & 1;
            char v355 = v270;
            unint64_t v356 = v209;
            double v354 = v46;
            uint64_t v363 = v299;
            uint64_t v364 = v285;
            uint64_t v365 = v213;
            uint64_t v366 = v214;
            uint64_t v367 = Strong;
            uint64_t v368 = v323;
            uint64_t v369 = -1.0;
            uint64_t v370 = 0;
            unsigned __int16 v371 = v314;
            unsigned __int8 v372 = 0;
            long long v373 = v318;
            long long v374 = 0;
            long long v375 = v420;
            v380 = v308;
            swift_retain();
            swift_retain();
            a5(&v354);
            outlined consume of SetEntityPropertyAction<Transform>?(v270, v209, v208, v207, v206);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v381 = v46;
            v382 = v270;
            v383 = v209;
            v384 = v208 & 1;
            v385 = v207;
            v386 = v206;
            v387 = v295;
            v388 = v268;
            v389 = v266;
            v390 = v299;
            v391 = v285;
            v392 = v213;
            v393 = v214;
            v394 = Strong;
            v395 = v323;
            v396 = -1.0;
            v397 = 0;
            uint64_t v215 = v314;
LABEL_171:
            v398 = v215;
            v399 = 0;
            v400 = v318;
            v401 = 0;
            v402 = v347;
            v403 = 0;
            v404 = v342;
            v405 = v337;
            v406 = v334;
            v407 = v282;
            v408 = v276;
            v409 = v330;
            v410 = v280;
            v411 = v279;
            uint64_t v200 = v308;
            goto LABEL_194;
          }
          goto LABEL_195;
        }
        goto LABEL_225;
      }
      __break(1u);
      goto LABEL_217;
    case 2:
      uint64_t v17 = *(void *)a2;
      uint64_t v18 = *(void *)(a2 + 8);
      long long v342 = *(void *)(a2 + 40);
      char v347 = *(void *)(a2 + 32);
      uint64_t v19 = *(float *)(a2 + 56);
      v318 = *(void *)(a2 + 64);
      char v324 = *(void *)(a2 + 48);
      uint64_t v20 = *(void *)(a2 + 88);
      uint64_t v308 = *(void *)(a2 + 80);
      v315 = *(void *)(a2 + 72);
      uint64_t v21 = *(float *)(a2 + 96);
      float v22 = *(float *)(a2 + 100);
      uint64_t v286 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v58 = specialized static Entity.entityInfoType(_:)(v17);
        if (v58)
        {
          uint64_t v59 = (*(uint64_t (**)(void))(v58 + 232))();
          uint64_t v60 = *(void *)(v59 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v60, 0);
          *(void *)(v59 + 16) = v17;
          MEMORY[0x22A68E750](v17, v59);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v17);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v61 = swift_allocObject();
        swift_weakInit();
        uint64_t v62 = v61;
        *(void *)(v61 + 16) = v18;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v63 = String.init(cString:)();
        uint64_t v65 = v64;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v66 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v67 = specialized __RawDictionaryStorage.find<A>(_:)(v63, v65);
          if (v68)
          {
            uint64_t v69 = (uint64_t *)(*(void *)(v66 + 56) + 56 * v67);
            unint64_t v70 = v69[2];
            unint64_t v334 = v69[1];
            char v337 = *v69;
            char v71 = v69[3];
            uint64_t v330 = v69[4];
            uint64_t v73 = v69[5];
            __int16 v72 = v69[6];
            swift_bridgeObjectRelease();
LABEL_94:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&v420 = v347;
            BYTE8(v420) = 0;
            *(void *)&v421 = v342;
            *((void *)&v421 + 1) = v337;
            *(void *)&v422 = v334;
            *((void *)&v422 + 1) = v70;
            *(void *)&v423 = v71;
            *((void *)&v423 + 1) = v330;
            *(void *)&v424 = v73;
            *((void *)&v424 + 1) = v72;
            uint64_t v280 = v73;
            uint64_t v282 = v70;
            uint64_t v279 = v72;
            if (!v20 || !REBindPointBoundComponent())
            {
              uint64_t v300 = 0;
              goto LABEL_169;
            }
            uint64_t v156 = v71;
            uint64_t v157 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v158 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_226:
                __break(1u);
                goto LABEL_227;
              }
              int v216 = specialized static Entity.entityInfoType(_:)(v157);
              if (v216)
              {
                char v217 = (*(uint64_t (**)(void))(v216 + 232))();
                uint64_t v218 = *(void *)(v217 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v218, 0);
                *(void *)(v217 + 16) = v157;
                MEMORY[0x22A68E750](v157, v217);
                uint64_t v300 = v217;
                swift_release();
                goto LABEL_168;
              }
              uint64_t v158 = makeEntity(for:)(v157);
            }
            uint64_t v300 = v158;
LABEL_168:
            char v71 = v156;
LABEL_169:
            specialized ActionEventData.action<A>()((uint64_t)&v413);
            uint64_t v219 = v417;
            if (v417)
            {
              uint64_t v296 = v418;
              unint64_t v276 = v71;
              int v220 = v416;
              char v221 = v415;
              uint64_t v222 = v414;
              uint64_t v223 = v413;
              uint64_t v271 = v413;
              uint64_t v224 = v419 & 1;
              uint64_t v269 = v419 & 1;
              swift_retain();
              outlined copy of SetEntityPropertyAction<Transform>?(v223, v222, v221, v220, v219);
              uint64_t v225 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Float>>);
              long long v376 = v421;
              long long v377 = v422;
              v378 = v423;
              v379 = v424;
              uint64_t v226 = v21;
              uint64_t v227 = v22;
              uint64_t v228 = v19;
              char v357 = v221 & 1;
              unint64_t v358 = v220;
              char v359 = v219;
              uint64_t v360 = v296;
              char v361 = v224;
              unint64_t v267 = v225 & 1;
              uint64_t v362 = v225 & 1;
              char v355 = v271;
              unint64_t v356 = v222;
              double v354 = v62;
              uint64_t v363 = v300;
              uint64_t v364 = v286;
              uint64_t v365 = v226;
              uint64_t v366 = v227;
              uint64_t v367 = Strong;
              uint64_t v368 = v315;
              uint64_t v369 = v228;
              uint64_t v370 = 0;
              unsigned __int16 v371 = v324;
              unsigned __int8 v372 = 0;
              long long v373 = v318;
              long long v374 = 0;
              long long v375 = v420;
              v380 = v308;
              swift_retain();
              swift_retain();
              a5(&v354);
              outlined consume of SetEntityPropertyAction<Transform>?(v271, v222, v221, v220, v219);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v381 = v62;
              v382 = v271;
              v383 = v222;
              v384 = v221 & 1;
              v385 = v220;
              v386 = v219;
              v387 = v296;
              v388 = v269;
              v389 = v267;
              v390 = v300;
              v391 = v286;
              v392 = v226;
              v393 = v227;
              v394 = Strong;
              v395 = v315;
              v396 = v228;
              v397 = 0;
              uint64_t v215 = v324;
              goto LABEL_171;
            }
LABEL_195:
            swift_release();
            swift_release();
            swift_release();
LABEL_196:
            swift_release();
            return 0;
          }
          swift_bridgeObjectRelease();
        }
        unint64_t v334 = 0;
        char v337 = 0;
        unint64_t v70 = 0;
        char v71 = 0;
        uint64_t v330 = 0;
        uint64_t v73 = 0;
        __int16 v72 = 0;
        goto LABEL_94;
      }
LABEL_217:
      __break(1u);
      goto LABEL_218;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_196;
    case 4:
      float v23 = *(void *)a2;
      float v24 = *(void *)(a2 + 8);
      uint64_t v343 = *(void *)(a2 + 40);
      uint64_t v348 = *(void *)(a2 + 32);
      uint64_t v25 = *(void *)(a2 + 64);
      v319 = *(void *)(a2 + 48);
      char v325 = *(void *)(a2 + 56);
      uint64_t v26 = *(float *)(a2 + 72);
      uint64_t v27 = *(float *)(a2 + 76);
      uint64_t v298 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v74 = specialized static Entity.entityInfoType(_:)(v23);
        if (v74)
        {
          uint64_t v75 = (*(uint64_t (**)(void))(v74 + 232))();
          uint64_t v76 = *(void *)(v75 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v76, 0);
          *(void *)(v75 + 16) = v23;
          MEMORY[0x22A68E750](v23, v75);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v23);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v77 = swift_allocObject();
        swift_weakInit();
        uint64_t v78 = v77;
        *(void *)(v77 + 16) = v24;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v79 = String.init(cString:)();
        uint64_t v81 = v80;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v82 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v83 = specialized __RawDictionaryStorage.find<A>(_:)(v79, v81);
          if (v84)
          {
            uint64_t v85 = (uint64_t *)(*(void *)(v82 + 56) + 56 * v83);
            uint64_t v86 = v85[2];
            char v335 = v85[1];
            long long v338 = *v85;
            uint64_t v87 = v85[3];
            uint64_t v331 = v85[4];
            char v89 = v85[5];
            unint64_t v88 = v85[6];
            swift_bridgeObjectRelease();
LABEL_102:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&v420 = v348;
            BYTE8(v420) = 0;
            *(void *)&v421 = v343;
            *((void *)&v421 + 1) = v338;
            *(void *)&v422 = v335;
            *((void *)&v422 + 1) = v86;
            *(void *)&v423 = v87;
            *((void *)&v423 + 1) = v331;
            *(void *)&v424 = v89;
            *((void *)&v424 + 1) = v88;
            uint64_t v287 = v89;
            uint64_t v291 = v86;
            uint64_t v283 = v88;
            if (!v25 || !REBindPointBoundComponent())
            {
              uint64_t v309 = 0;
LABEL_177:
              specialized ActionEventData.action<A>()((uint64_t)&v413);
              unint64_t v232 = v417;
              if (!v417) {
                goto LABEL_195;
              }
              uint64_t v307 = v418;
              char v233 = v416;
              v234 = v415;
              uint64_t v235 = v414;
              uint64_t v236 = v413;
              uint64_t v277 = v413;
              uint64_t v237 = v419 & 1;
              unint64_t v274 = v419 & 1;
              swift_retain();
              outlined copy of SetEntityPropertyAction<Transform>?(v236, v235, v234, v233, v232);
              uint64_t v238 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Float>>);
              long long v376 = v421;
              long long v377 = v422;
              v378 = v423;
              v379 = v424;
              uint64_t v239 = v26;
              uint64_t v240 = v27;
              char v357 = v234 & 1;
              unint64_t v358 = v233;
              char v359 = v232;
              uint64_t v360 = v307;
              char v361 = v237;
              unint64_t v272 = v238 & 1;
              uint64_t v362 = v238 & 1;
              char v355 = v277;
              unint64_t v356 = v235;
              double v354 = v78;
              uint64_t v363 = v309;
              uint64_t v364 = v298;
              uint64_t v365 = v239;
              uint64_t v366 = v240;
              uint64_t v367 = Strong;
              uint64_t v368 = v325;
              uint64_t v369 = -1.0;
              uint64_t v370 = 0;
              unsigned __int16 v371 = 0xBFF0000000000000;
              unsigned __int8 v372 = 0;
              long long v373 = 0xBFF0000000000000;
              long long v374 = 0;
              long long v375 = v420;
              v380 = v319;
              swift_retain();
              swift_retain();
              a5(&v354);
              outlined consume of SetEntityPropertyAction<Transform>?(v277, v235, v234, v233, v232);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v381 = v78;
              v382 = v277;
              v383 = v235;
              v384 = v234 & 1;
              v385 = v233;
              v386 = v232;
              v387 = v307;
              v388 = v274;
              v389 = v272;
              v390 = v309;
              v391 = v298;
              v392 = v239;
              v393 = v240;
              v394 = Strong;
              v395 = v325;
              v396 = -1.0;
              v397 = 0;
              v398 = 0xBFF0000000000000;
              v399 = 0;
              v400 = 0xBFF0000000000000;
              v401 = 0;
              v402 = v348;
              v403 = 0;
              v404 = v343;
              v405 = v338;
              v406 = v335;
              v407 = v291;
              v408 = v87;
              int v241 = v331;
              goto LABEL_186;
            }
            uint64_t v159 = v87;
            uint64_t v160 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v161 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_227:
                __break(1u);
                goto LABEL_228;
              }
              uint64_t v229 = specialized static Entity.entityInfoType(_:)(v160);
              if (v229)
              {
                uint64_t v230 = (*(uint64_t (**)(void))(v229 + 232))();
                uint64_t v231 = *(void *)(v230 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v231, 0);
                *(void *)(v230 + 16) = v160;
                MEMORY[0x22A68E750](v160, v230);
                uint64_t v309 = v230;
                swift_release();
                goto LABEL_176;
              }
              uint64_t v161 = makeEntity(for:)(v160);
            }
            uint64_t v309 = v161;
LABEL_176:
            uint64_t v87 = v159;
            goto LABEL_177;
          }
          swift_bridgeObjectRelease();
        }
        char v335 = 0;
        long long v338 = 0;
        uint64_t v86 = 0;
        uint64_t v87 = 0;
        uint64_t v331 = 0;
        char v89 = 0;
        unint64_t v88 = 0;
        goto LABEL_102;
      }
LABEL_218:
      __break(1u);
      goto LABEL_219;
    case 8:
      float v28 = *(void *)a2;
      float v29 = *(void *)(a2 + 8);
      uint64_t v344 = *(void *)(a2 + 40);
      char v349 = *(void *)(a2 + 32);
      uint64_t v30 = *(void *)(a2 + 56);
      uint64_t v31 = *(float *)(a2 + 64);
      uint64_t v32 = *(float *)(a2 + 68);
      uint64_t v305 = *(unsigned char *)(a2 + 72);
      v319 = *(void *)(a2 + 48);
      uint64_t v326 = *(void *)(a2 + 80);
      double v328 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        long long v90 = specialized static Entity.entityInfoType(_:)(v28);
        if (v90)
        {
          uint64_t v91 = (*(uint64_t (**)(void))(v90 + 232))();
          uint64_t v92 = *(void *)(v91 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v92, 0);
          *(void *)(v91 + 16) = v28;
          MEMORY[0x22A68E750](v28, v91);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v28);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v93 = swift_allocObject();
        swift_weakInit();
        *(void *)(v93 + 16) = v29;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v94 = String.init(cString:)();
        uint64_t v96 = v95;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v97 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v98 = specialized __RawDictionaryStorage.find<A>(_:)(v94, v96);
          if (v99)
          {
            uint64_t v100 = (uint64_t *)(*(void *)(v97 + 56) + 56 * v98);
            uint64_t v101 = v100[2];
            unint64_t v336 = v100[1];
            long long v339 = *v100;
            uint64_t v102 = v100[3];
            uint64_t v103 = v100[4];
            uint64_t v105 = v100[5];
            uint64_t v104 = v100[6];
            swift_bridgeObjectRelease();
LABEL_110:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&v420 = v349;
            BYTE8(v420) = 0;
            *(void *)&v421 = v344;
            *((void *)&v421 + 1) = v339;
            *(void *)&v422 = v336;
            *((void *)&v422 + 1) = v101;
            *(void *)&v423 = v102;
            *((void *)&v423 + 1) = v103;
            *(void *)&v424 = v105;
            *((void *)&v424 + 1) = v104;
            uint64_t v292 = v103;
            uint64_t v301 = v101;
            uint64_t v283 = v104;
            uint64_t v287 = v105;
            if (!v30 || !REBindPointBoundComponent())
            {
              uint64_t v310 = 0;
LABEL_184:
              specialized ActionEventData.action<A>()((uint64_t)&v413);
              char v245 = v417;
              if (!v417) {
                goto LABEL_195;
              }
              uint64_t v246 = v418;
              uint64_t v281 = v102;
              unint64_t v275 = v418;
              uint64_t v247 = v416;
              uint64_t v248 = v415;
              uint64_t v249 = v414;
              uint64_t v250 = v413;
              char v251 = v419 & 1;
              char v278 = v419 & 1;
              swift_retain();
              outlined copy of SetEntityPropertyAction<Transform>?(v250, v249, v248, v247, v245);
              uint64_t v252 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Float>>);
              long long v376 = v421;
              long long v377 = v422;
              v378 = v423;
              v379 = v424;
              uint64_t v253 = v31;
              uint64_t v254 = v32;
              char v355 = v250;
              unint64_t v356 = v249;
              unint64_t v255 = v248;
              LOBYTE(v248) = v248 & 1;
              char v357 = v248;
              unint64_t v358 = v247;
              char v359 = v245;
              uint64_t v360 = v246;
              char v361 = v251;
              uint64_t v273 = v252 & 1;
              uint64_t v362 = v252 & 1;
              double v354 = v93;
              uint64_t v363 = v310;
              uint64_t v364 = v305;
              uint64_t v365 = v253;
              uint64_t v366 = v254;
              uint64_t v368 = 0;
              uint64_t v369 = 0.0;
              uint64_t v367 = Strong;
              uint64_t v370 = 1;
              unsigned __int16 v371 = v326;
              unsigned __int8 v372 = 0;
              long long v373 = v328;
              long long v374 = 0;
              long long v375 = v420;
              v380 = v319;
              swift_retain();
              swift_retain();
              a5(&v354);
              outlined consume of SetEntityPropertyAction<Transform>?(v250, v249, v255, v247, v245);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v381 = v93;
              v382 = v250;
              v383 = v249;
              v384 = v248;
              v385 = v247;
              v386 = v245;
              v387 = v275;
              v388 = v278;
              v389 = v273;
              v390 = v310;
              v391 = v305;
              v392 = v253;
              v393 = v254;
              v396 = 0.0;
              v394 = Strong;
              v395 = 0;
              v397 = 1;
              v398 = v326;
              v399 = 0;
              v400 = v328;
              v401 = 0;
              v402 = v349;
              v403 = 0;
              v404 = v344;
              v405 = v339;
              v406 = v336;
              v407 = v301;
              v408 = v281;
              int v241 = v292;
LABEL_186:
              v409 = v241;
              v410 = v287;
              v411 = v283;
              uint64_t v200 = v319;
              goto LABEL_194;
            }
            v162 = v102;
            uint64_t v163 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v164 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_228:
                __break(1u);
                goto LABEL_229;
              }
              char v242 = specialized static Entity.entityInfoType(_:)(v163);
              if (v242)
              {
                char v243 = (*(uint64_t (**)(void))(v242 + 232))();
                uint64_t v244 = *(void *)(v243 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v244, 0);
                *(void *)(v243 + 16) = v163;
                MEMORY[0x22A68E750](v163, v243);
                uint64_t v310 = v243;
                swift_release();
                goto LABEL_183;
              }
              uint64_t v164 = makeEntity(for:)(v163);
            }
            uint64_t v310 = v164;
LABEL_183:
            uint64_t v102 = v162;
            goto LABEL_184;
          }
          swift_bridgeObjectRelease();
        }
        unint64_t v336 = 0;
        long long v339 = 0;
        uint64_t v101 = 0;
        uint64_t v102 = 0;
        uint64_t v103 = 0;
        uint64_t v105 = 0;
        uint64_t v104 = 0;
        goto LABEL_110;
      }
LABEL_219:
      __break(1u);
      goto LABEL_220;
    case 16:
      float v33 = *(void *)a2;
      float v34 = *(void *)(a2 + 8);
      double v350 = *(void *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 56);
      double v329 = *(void *)(a2 + 48);
      char v333 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v106 = specialized static Entity.entityInfoType(_:)(v33);
        if (v106)
        {
          unint64_t v107 = (*(uint64_t (**)(void))(v106 + 232))();
          char v108 = *(void *)(v107 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v108, 0);
          *(void *)(v107 + 16) = v33;
          MEMORY[0x22A68E750](v33, v107);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v33);
        }
LABEL_57:
        type metadata accessor for AnimationPlaybackController();
        char v109 = swift_allocObject();
        swift_weakInit();
        *(void *)(v109 + 16) = v34;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v110 = String.init(cString:)();
        uint64_t v112 = v111;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v113 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v114 = specialized __RawDictionaryStorage.find<A>(_:)(v110, v112);
          if (v115)
          {
            uint64_t v116 = (uint64_t *)(*(void *)(v113 + 56) + 56 * v114);
            uint64_t v117 = v116[2];
            long long v340 = v116[1];
            __int16 v345 = *v116;
            uint64_t v118 = v116[3];
            uint64_t v119 = v116[4];
            uint64_t v121 = v116[5];
            uint64_t v120 = v116[6];
            swift_bridgeObjectRelease();
            goto LABEL_118;
          }
          swift_bridgeObjectRelease();
        }
        long long v340 = 0;
        __int16 v345 = 0;
        uint64_t v117 = 0;
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        uint64_t v121 = 0;
        uint64_t v120 = 0;
LABEL_118:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v420 = 0;
        BYTE8(v420) = 0;
        *(void *)&v421 = v350;
        *((void *)&v421 + 1) = v345;
        *(void *)&v422 = v340;
        *((void *)&v422 + 1) = v117;
        *(void *)&v423 = v118;
        *((void *)&v423 + 1) = v119;
        *(void *)&v424 = v121;
        *((void *)&v424 + 1) = v120;
        uint64_t v311 = v120;
        v316 = v121;
        v320 = v118;
        if (!v35 || !REBindPointBoundComponent()) {
          goto LABEL_130;
        }
        uint64_t v165 = v119;
        uint64_t v166 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_128:
          type metadata accessor for Entity();
          uint64_t v167 = swift_dynamicCastClassUnconditional();
          goto LABEL_129;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
LABEL_189:
          uint64_t v256 = specialized static Entity.entityInfoType(_:)(v166);
          if (v256)
          {
            uint64_t v168 = (*(uint64_t (**)(void))(v256 + 232))();
            uint64_t v257 = *(void *)(v168 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v257, 0);
            *(void *)(v168 + 16) = v166;
            MEMORY[0x22A68E750](v166, v168);
            swift_release();
            goto LABEL_191;
          }
          uint64_t v167 = makeEntity(for:)(v166);
LABEL_129:
          uint64_t v168 = v167;
LABEL_191:
          uint64_t v119 = v165;
LABEL_192:
          specialized ActionEventData.action<A>()((uint64_t)&v413);
          uint64_t v258 = v417;
          if (v417)
          {
            long long v376 = v421;
            long long v377 = v422;
            v378 = v423;
            v379 = v424;
            uint64_t v290 = v418;
            uint64_t v304 = v117;
            uint64_t v259 = v168;
            unint64_t v260 = v416;
            char v261 = v415;
            char v262 = v414;
            uint64_t v263 = v413;
            uint64_t v297 = v419 & 1;
            char v355 = v413;
            unint64_t v356 = v414;
            uint64_t v284 = v415 & 1;
            char v357 = v415 & 1;
            unint64_t v358 = v416;
            char v359 = v417;
            uint64_t v360 = v418;
            char v361 = v419 & 1;
            uint64_t v362 = 1;
            double v354 = v109;
            uint64_t v363 = v259;
            uint64_t v364 = 0;
            uint64_t v365 = 0.0;
            uint64_t v366 = 0.0;
            uint64_t v368 = 0;
            uint64_t v369 = 0.0;
            uint64_t v367 = Strong;
            uint64_t v370 = 1;
            unsigned __int16 v371 = v333;
            unsigned __int8 v372 = 0;
            long long v373 = 0;
            long long v374 = 1;
            long long v375 = v420;
            v380 = v329;
            swift_retain();
            swift_retain();
            outlined copy of SetEntityPropertyAction<Transform>?(v263, v262, v261, v260, v258);
            swift_retain();
            a5(&v354);
            outlined consume of SetEntityPropertyAction<Transform>?(v263, v262, v261, v260, v258);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v381 = v109;
            v382 = v263;
            v383 = v262;
            v384 = v284;
            v385 = v260;
            v386 = v258;
            v387 = v290;
            v388 = v297;
            v389 = 1;
            v390 = v259;
            v391 = 0;
            v393 = 0.0;
            v392 = 0.0;
            v396 = 0.0;
            v394 = Strong;
            v395 = 0;
            v397 = 1;
            v398 = v333;
            v399 = 0;
            v400 = 0;
            v401 = 1;
            v402 = 0;
            v403 = 0;
            v404 = v350;
            v405 = v345;
            v406 = v340;
            v407 = v304;
            v408 = v320;
            v409 = v119;
            v410 = v316;
            v411 = v311;
            uint64_t v200 = v329;
            goto LABEL_194;
          }
          goto LABEL_195;
        }
        __break(1u);
        goto LABEL_123;
      }
LABEL_220:
      __break(1u);
      goto LABEL_221;
    case 32:
      uint64_t v36 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      double v350 = *(void *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 56);
      double v329 = *(void *)(a2 + 48);
      char v333 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
LABEL_65:
        type metadata accessor for AnimationPlaybackController();
        char v109 = swift_allocObject();
        swift_weakInit();
        *(void *)(v109 + 16) = v37;
        swift_beginAccess();
        swift_weakAssign();
        char v125 = String.init(cString:)();
        uint64_t v127 = v126;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v128 = static AnimationResource.codableActionTypeMap;
        if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
          goto LABEL_124;
        }
        swift_bridgeObjectRetain();
        uint64_t v129 = specialized __RawDictionaryStorage.find<A>(_:)(v125, v127);
        if (v130)
        {
          uint64_t v131 = (uint64_t *)(*(void *)(v128 + 56) + 56 * v129);
          uint64_t v117 = v131[2];
          long long v340 = v131[1];
          __int16 v345 = *v131;
          uint64_t v132 = v131[3];
          uint64_t v119 = v131[4];
          uint64_t v134 = v131[5];
          uint64_t v133 = v131[6];
          swift_bridgeObjectRelease();
LABEL_125:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v420 = 0;
          BYTE8(v420) = 0;
          *(void *)&v421 = v350;
          *((void *)&v421 + 1) = v345;
          *(void *)&v422 = v340;
          *((void *)&v422 + 1) = v117;
          *(void *)&v423 = v132;
          *((void *)&v423 + 1) = v119;
          *(void *)&v424 = v134;
          *((void *)&v424 + 1) = v133;
          uint64_t v311 = v133;
          v316 = v134;
          v320 = v132;
          if (v35 && REBindPointBoundComponent())
          {
            uint64_t v165 = v119;
            uint64_t v166 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject()) {
              goto LABEL_128;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_229:
              __break(1u);
              goto LABEL_230;
            }
            goto LABEL_189;
          }
LABEL_130:
          uint64_t v168 = 0;
          goto LABEL_192;
        }
LABEL_123:
        swift_bridgeObjectRelease();
LABEL_124:
        long long v340 = 0;
        __int16 v345 = 0;
        uint64_t v117 = 0;
        uint64_t v132 = 0;
        uint64_t v119 = 0;
        uint64_t v134 = 0;
        uint64_t v133 = 0;
        goto LABEL_125;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v122 = specialized static Entity.entityInfoType(_:)(v36);
        if (v122)
        {
          uint64_t v123 = (*(uint64_t (**)(void))(v122 + 232))();
          unint64_t v124 = *(void *)(v123 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v124, 0);
          *(void *)(v123 + 16) = v36;
          MEMORY[0x22A68E750](v36, v123);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
        goto LABEL_65;
      }
LABEL_221:
      __break(1u);
      goto LABEL_222;
    case 64:
      uint64_t v38 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v40 = *(void *)(a2 + 24);
      uint64_t v41 = *(void *)(a2 + 40);
      double v332 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
LABEL_73:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v138 = swift_allocObject();
        swift_weakInit();
        *(void *)(v138 + 16) = v39;
        swift_beginAccess();
        swift_weakAssign();
        if (!v41 || !REBindPointBoundComponent())
        {
          char v141 = 0;
          goto LABEL_79;
        }
        uint64_t v139 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          unint64_t v140 = swift_dynamicCastClassUnconditional();
LABEL_77:
          char v141 = v140;
          goto LABEL_79;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v201 = specialized static Entity.entityInfoType(_:)(v139);
          if (!v201)
          {
            unint64_t v140 = makeEntity(for:)(v139);
            goto LABEL_77;
          }
          char v141 = (*(uint64_t (**)(void))(v201 + 232))();
          uint64_t v202 = *(void *)(v141 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v202, 0);
          *(void *)(v141 + 16) = v139;
          MEMORY[0x22A68E750](v139, v141);
          swift_release();
LABEL_79:
          unint64_t v142 = String.init(cString:)();
          uint64_t v144 = v143;
          if (one-time initialization token for codableActionTypeMap != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v145 = static AnimationResource.codableActionTypeMap;
          if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v146 = specialized __RawDictionaryStorage.find<A>(_:)(v142, v144);
            if (v147)
            {
              uint64_t v148 = (uint64_t *)(*(void *)(v145 + 56) + 56 * v146);
              uint64_t v149 = *v148;
              uint64_t v150 = v148[1];
              uint64_t v152 = v148[2];
              uint64_t v151 = v148[3];
              char v346 = v148[5];
              double v351 = v148[4];
              long long v341 = v148[6];
              swift_bridgeObjectRelease();
LABEL_133:
              swift_endAccess();
              swift_bridgeObjectRelease();
              *(void *)&v420 = 0;
              BYTE8(v420) = 0;
              *(void *)&v421 = v40;
              *((void *)&v421 + 1) = v149;
              *(void *)&v422 = v150;
              *((void *)&v422 + 1) = v152;
              char v327 = v151;
              *(void *)&v423 = v151;
              *((void *)&v423 + 1) = v351;
              *(void *)&v424 = v346;
              *((void *)&v424 + 1) = v341;
              specialized ActionEventData.action<A>()((uint64_t)&v413);
              uint64_t v169 = v417;
              if (!v417) {
                goto LABEL_195;
              }
              long long v376 = v421;
              long long v377 = v422;
              v378 = v423;
              v379 = v424;
              uint64_t v293 = v418;
              uint64_t v312 = v40;
              v321 = v152;
              uint64_t v170 = v141;
              uint64_t v171 = v416;
              unsigned int v172 = v415;
              unsigned int v173 = v414;
              uint64_t v306 = v150;
              int v174 = v413;
              uint64_t v302 = v419 & 1;
              char v355 = v413;
              unint64_t v356 = v414;
              uint64_t v288 = v415 & 1;
              char v357 = v415 & 1;
              unint64_t v358 = v416;
              char v359 = v417;
              uint64_t v360 = v418;
              char v361 = v419 & 1;
              uint64_t v362 = 1;
              double v354 = v138;
              uint64_t v363 = v170;
              uint64_t v364 = 0;
              uint64_t v365 = 0.0;
              uint64_t v366 = 0.0;
              uint64_t v368 = 0;
              uint64_t v369 = 0.0;
              uint64_t v367 = Strong;
              uint64_t v370 = 1;
              unsigned __int16 v371 = 0;
              unsigned __int8 v372 = 1;
              long long v373 = 0;
              long long v374 = 1;
              long long v375 = v420;
              v380 = v332;
              swift_retain();
              swift_retain();
              outlined copy of SetEntityPropertyAction<Transform>?(v174, v173, v172, v171, v169);
              swift_retain();
              a5(&v354);
              outlined consume of SetEntityPropertyAction<Transform>?(v174, v173, v172, v171, v169);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v381 = v138;
              v382 = v174;
              v383 = v173;
              v384 = v288;
              v385 = v171;
              v386 = v169;
              v387 = v293;
              v388 = v302;
              v389 = 1;
              v390 = v170;
              v391 = 0;
              v393 = 0.0;
              v392 = 0.0;
              v396 = 0.0;
              v394 = Strong;
              v395 = 0;
              v397 = 1;
              v398 = 0;
              v399 = 1;
              v400 = 0;
              v401 = 1;
              v402 = 0;
              v403 = 0;
              v404 = v312;
              v405 = v149;
              v406 = v306;
              uint64_t v175 = v321;
              goto LABEL_153;
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v149 = 0;
          uint64_t v150 = 0;
          uint64_t v152 = 0;
          uint64_t v151 = 0;
          char v346 = 0;
          double v351 = 0;
          long long v341 = 0;
          goto LABEL_133;
        }
LABEL_224:
        __break(1u);
LABEL_225:
        __break(1u);
        goto LABEL_226;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v135 = specialized static Entity.entityInfoType(_:)(v38);
        if (v135)
        {
          uint64_t v136 = (*(uint64_t (**)(void))(v135 + 232))();
          uint64_t v137 = *(void *)(v136 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v137, 0);
          *(void *)(v136 + 16) = v38;
          MEMORY[0x22A68E750](v38, v136);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
        goto LABEL_73;
      }
LABEL_222:
      __break(1u);
      goto LABEL_223;
    default:
      if (a4 != 128) {
        goto LABEL_196;
      }
      float v13 = *(void *)a2;
      float v14 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 40);
      double v332 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        unint64_t v176 = specialized static Entity.entityInfoType(_:)(v13);
        if (v176)
        {
          uint64_t v177 = (*(uint64_t (**)(void))(v176 + 232))();
          uint64_t v178 = *(void *)(v177 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v178, 0);
          *(void *)(v177 + 16) = v13;
          MEMORY[0x22A68E750](v13, v177);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v13);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v179 = swift_allocObject();
      swift_weakInit();
      *(void *)(v179 + 16) = v14;
      swift_beginAccess();
      swift_weakAssign();
      if (v16 && REBindPointBoundComponent())
      {
        v180 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v181 = swift_dynamicCastClassUnconditional();
LABEL_142:
          uint64_t v182 = v181;
          goto LABEL_144;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_230:
          __break(1u);
          JUMPOUT(0x227FA4574);
        }
        uint64_t v264 = specialized static Entity.entityInfoType(_:)(v180);
        if (!v264)
        {
          uint64_t v181 = makeEntity(for:)(v180);
          goto LABEL_142;
        }
        uint64_t v182 = (*(uint64_t (**)(void))(v264 + 232))();
        uint64_t v265 = *(void *)(v182 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v265, 0);
        *(void *)(v182 + 16) = v180;
        MEMORY[0x22A68E750](v180, v182);
        swift_release();
      }
      else
      {
        uint64_t v182 = 0;
      }
LABEL_144:
      uint64_t v183 = String.init(cString:)();
      uint64_t v185 = v184;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v186 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_150;
      }
      swift_bridgeObjectRetain();
      uint64_t v187 = specialized __RawDictionaryStorage.find<A>(_:)(v183, v185);
      if (v188)
      {
        uint64_t v189 = (uint64_t *)(*(void *)(v186 + 56) + 56 * v187);
        uint64_t v190 = *v189;
        uint64_t v191 = v189[1];
        uint64_t v193 = v189[2];
        uint64_t v192 = v189[3];
        char v346 = v189[5];
        double v351 = v189[4];
        long long v341 = v189[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_150:
        uint64_t v190 = 0;
        uint64_t v191 = 0;
        uint64_t v193 = 0;
        uint64_t v192 = 0;
        char v346 = 0;
        double v351 = 0;
        long long v341 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v420 = 0;
      BYTE8(v420) = 0;
      *(void *)&v421 = v15;
      *((void *)&v421 + 1) = v190;
      *(void *)&v422 = v191;
      *((void *)&v422 + 1) = v193;
      char v327 = v192;
      *(void *)&v423 = v192;
      *((void *)&v423 + 1) = v351;
      *(void *)&v424 = v346;
      *((void *)&v424 + 1) = v341;
      specialized ActionEventData.action<A>()((uint64_t)&v413);
      uint64_t v194 = v417;
      if (!v417) {
        goto LABEL_195;
      }
      long long v376 = v421;
      long long v377 = v422;
      v378 = v423;
      v379 = v424;
      uint64_t v294 = v418;
      v317 = v15;
      uint64_t v322 = v190;
      unint64_t v195 = v182;
      char v196 = v416;
      v197 = v415;
      uint64_t v198 = v414;
      uint64_t v313 = v191;
      uint64_t v199 = v413;
      uint64_t v303 = v419 & 1;
      char v355 = v413;
      unint64_t v356 = v414;
      uint64_t v289 = v415 & 1;
      char v357 = v415 & 1;
      unint64_t v358 = v416;
      char v359 = v417;
      uint64_t v360 = v418;
      char v361 = v419 & 1;
      uint64_t v362 = 1;
      double v354 = v179;
      uint64_t v363 = v195;
      uint64_t v364 = 0;
      uint64_t v365 = 0.0;
      uint64_t v366 = 0.0;
      uint64_t v368 = 0;
      uint64_t v369 = 0.0;
      uint64_t v367 = Strong;
      uint64_t v370 = 1;
      unsigned __int16 v371 = 0;
      unsigned __int8 v372 = 1;
      long long v373 = 0;
      long long v374 = 1;
      long long v375 = v420;
      v380 = v332;
      swift_retain();
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v199, v198, v197, v196, v194);
      swift_retain();
      a5(&v354);
      swift_release();
      outlined consume of SetEntityPropertyAction<Transform>?(v199, v198, v197, v196, v194);
      swift_release();
      swift_release();
      swift_release();
      v381 = v179;
      v382 = v199;
      v383 = v198;
      v384 = v289;
      v385 = v196;
      v386 = v194;
      v387 = v294;
      v388 = v303;
      v389 = 1;
      v390 = v195;
      v391 = 0;
      v393 = 0.0;
      v392 = 0.0;
      v396 = 0.0;
      v394 = Strong;
      v395 = 0;
      v397 = 1;
      v398 = 0;
      v399 = 1;
      v400 = 0;
      v401 = 1;
      v402 = 0;
      v403 = 0;
      v404 = v317;
      v405 = v322;
      v406 = v313;
      uint64_t v175 = v193;
LABEL_153:
      v407 = v175;
      v408 = v327;
      v409 = v351;
      v410 = v346;
      v411 = v341;
      uint64_t v200 = v332;
LABEL_194:
      v412 = v200;
      outlined release of ActionEvent<SetEntityPropertyAction<Bool>>((uint64_t)&v381);
      return 0;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t Entity;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unsigned __int16 v216;
  uint64_t v217;
  uint64_t v218;
  char v219;
  double v220;
  double v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned __int16 v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  double v229;
  double v230;
  double v231;
  uint64_t v232;
  uint64_t v233;
  unsigned __int16 v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  double v238;
  double v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unsigned __int16 v243;
  uint64_t v244;
  uint64_t v245;
  char v246;
  double v247;
  double v248;
  uint64_t v249;
  uint64_t v250;
  unsigned __int16 v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  char v257;
  char v258;
  char v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  unint64_t v268;
  unint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char v305;
  char v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t Strong;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  __int16 v325;
  char v326;
  uint64_t v327;
  char v328;
  double v329;
  double v330;
  uint64_t v331;
  uint64_t v332;
  double v333;
  char v334;
  unint64_t v335;
  char v336;
  unint64_t v337;
  char v338;
  long long v339;
  long long v340;
  long long v341;
  long long v342;
  long long v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  __int16 v348;
  char v349;
  uint64_t v350;
  char v351;
  double v352;
  double v353;
  uint64_t v354;
  uint64_t v355;
  double v356;
  char v357;
  unint64_t v358;
  char v359;
  unint64_t v360;
  char v361;
  uint64_t v362;
  char v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  unsigned __int16 v375;
  long long v376;
  long long v377;
  long long v378;
  long long v379;
  long long v380;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v8 = *(void *)a2;
      unint64_t v7 = *(void *)(a2 + 8);
      uint64_t v310 = *(void *)(a2 + 32);
      uint64_t v314 = *(void *)(a2 + 40);
      uint64_t v299 = *(void *)(a2 + 48);
      uint64_t v9 = *(void *)(a2 + 64);
      uint64_t v11 = *(float *)(a2 + 72);
      uint64_t v10 = *(float *)(a2 + 76);
      uint64_t v305 = *(unsigned char *)(a2 + 80);
      uint64_t v266 = *(void *)(a2 + 88);
      unint64_t v268 = *(void *)(a2 + 96);
      unint64_t v272 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v42 = specialized static Entity.entityInfoType(_:)(v8);
        if (v42)
        {
          uint64_t v43 = (*(uint64_t (**)(void))(v42 + 232))();
          uint64_t v44 = *(void *)(v43 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v44, 0);
          *(void *)(v43 + 16) = v8;
          MEMORY[0x22A68E750](v8, v43);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v8);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v295 = swift_allocObject();
        swift_weakInit();
        *(void *)(v295 + 16) = v7;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v45 = String.init(cString:)();
        uint64_t v47 = v46;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v48 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v49 = specialized __RawDictionaryStorage.find<A>(_:)(v45, v47);
          if (v50)
          {
            uint64_t v51 = (uint64_t *)(*(void *)(v48 + 56) + 56 * v49);
            unint64_t v53 = *v51;
            uint64_t v52 = v51[1];
            uint64_t v55 = v51[2];
            char v54 = v51[3];
            uint64_t v56 = v51[4];
            uint64_t v57 = v51[5];
            uint64_t v58 = v51[6];
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          swift_bridgeObjectRelease();
        }
        unint64_t v53 = 0;
        uint64_t v52 = 0;
        uint64_t v55 = 0;
        char v54 = 0;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v58 = 0;
LABEL_86:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&long long v376 = v310;
        BYTE8(v376) = 0;
        *(void *)&long long v377 = v314;
        *((void *)&v377 + 1) = v53;
        *(void *)&v378 = v52;
        *((void *)&v378 + 1) = v55;
        *(void *)&v379 = v54;
        *((void *)&v379 + 1) = v56;
        *(void *)&v380 = v57;
        *((void *)&v380 + 1) = v58;
        uint64_t v163 = v58;
        uint64_t v264 = v52;
        if (!v9 || !REBindPointBoundComponent())
        {
          uint64_t v166 = 0;
          goto LABEL_162;
        }
        uint64_t v280 = v58;
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v165 = swift_dynamicCastClassUnconditional();
          goto LABEL_90;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v214 = specialized static Entity.entityInfoType(_:)(Entity);
          if (v214)
          {
            uint64_t v166 = (*(uint64_t (**)(void))(v214 + 232))();
            uint64_t v215 = *(void *)(v166 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v215, 0);
            *(void *)(v166 + 16) = Entity;
            MEMORY[0x22A68E750](Entity, v166);
            swift_release();
            goto LABEL_161;
          }
          uint64_t v165 = makeEntity(for:)(Entity);
LABEL_90:
          uint64_t v166 = v165;
LABEL_161:
          uint64_t v163 = v280;
LABEL_162:
          specialized ActionEventData.action<A>()((uint64_t)&v373);
          int v216 = v375;
          if ((_BYTE)v375 != 0xFF)
          {
            char v261 = v53;
            char v262 = v55;
            uint64_t v288 = v57;
            uint64_t v293 = v56;
            uint64_t v283 = v163;
            char v217 = v374;
            uint64_t v218 = v373;
            swift_retain();
            outlined copy of SetEntityEnabledAction?(v218, v217, v216);
            uint64_t v219 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityEnabledAction>);
            __int16 v323 = v218;
            char v324 = v217;
            int v220 = v11;
            char v325 = v216 & 0x101;
            char v221 = v10;
            uint64_t v256 = v219 & 1;
            uint64_t v326 = v219 & 1;
            uint64_t v322 = v295;
            char v327 = v166;
            double v328 = v305;
            double v329 = v220;
            uint64_t v330 = v221;
            uint64_t v331 = Strong;
            double v332 = v272;
            char v333 = -1.0;
            unint64_t v334 = 0;
            char v335 = v266;
            unint64_t v336 = 0;
            unint64_t v260 = v54;
            uint64_t v222 = v268;
            char v337 = v268;
            long long v338 = 0;
            long long v341 = v378;
            long long v342 = v379;
            uint64_t v343 = v380;
            long long v339 = v376;
            long long v340 = v377;
            uint64_t v344 = v299;
            swift_retain();
            swift_retain();
            a5(&v322);
            outlined consume of SetEntityEnabledAction?(v218, v217, v216);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            __int16 v345 = v295;
            char v346 = v218;
            char v347 = v217;
            uint64_t v348 = v216 & 0x101;
            char v349 = v256;
            double v350 = v166;
            double v351 = v305;
            uint64_t v352 = v220;
            uint64_t v353 = v221;
            double v354 = Strong;
            char v355 = v272;
            unint64_t v356 = -1.0;
            char v357 = 0;
            unint64_t v358 = v266;
LABEL_170:
            char v359 = 0;
            uint64_t v360 = v222;
            char v361 = 0;
            uint64_t v362 = v310;
            uint64_t v363 = 0;
            uint64_t v364 = v314;
            uint64_t v365 = v261;
            uint64_t v366 = v264;
            uint64_t v367 = v262;
            uint64_t v368 = v260;
            uint64_t v369 = v293;
            uint64_t v370 = v288;
            unsigned __int16 v371 = v283;
            int v211 = v299;
            goto LABEL_193;
          }
          goto LABEL_190;
        }
        goto LABEL_222;
      }
      __break(1u);
      goto LABEL_214;
    case 2:
      uint64_t v18 = *(void *)a2;
      uint64_t v17 = *(void *)(a2 + 8);
      uint64_t v310 = *(void *)(a2 + 32);
      uint64_t v314 = *(void *)(a2 + 40);
      uint64_t v19 = *(float *)(a2 + 56);
      unint64_t v267 = *(void *)(a2 + 72);
      uint64_t v269 = *(void *)(a2 + 64);
      uint64_t v20 = *(void *)(a2 + 88);
      uint64_t v299 = *(void *)(a2 + 80);
      float v22 = *(float *)(a2 + 96);
      uint64_t v21 = *(float *)(a2 + 100);
      uint64_t v306 = *(unsigned char *)(a2 + 104);
      uint64_t v273 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v59 = specialized static Entity.entityInfoType(_:)(v18);
        if (v59)
        {
          uint64_t v60 = (*(uint64_t (**)(void))(v59 + 232))();
          uint64_t v61 = *(void *)(v60 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v61, 0);
          *(void *)(v60 + 16) = v18;
          MEMORY[0x22A68E750](v18, v60);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v18);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v296 = swift_allocObject();
        swift_weakInit();
        *(void *)(v296 + 16) = v17;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v62 = String.init(cString:)();
        uint64_t v64 = v63;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v65 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v66 = specialized __RawDictionaryStorage.find<A>(_:)(v62, v64);
          if (v67)
          {
            uint64_t v68 = (uint64_t *)(*(void *)(v65 + 56) + 56 * v66);
            unint64_t v70 = *v68;
            uint64_t v69 = v68[1];
            __int16 v72 = v68[2];
            char v71 = v68[3];
            uint64_t v73 = v68[4];
            uint64_t v74 = v68[5];
            uint64_t v75 = v68[6];
            swift_bridgeObjectRelease();
LABEL_94:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v376 = v310;
            BYTE8(v376) = 0;
            *(void *)&long long v377 = v314;
            *((void *)&v377 + 1) = v70;
            *(void *)&v378 = v69;
            *((void *)&v378 + 1) = v72;
            *(void *)&v379 = v71;
            *((void *)&v379 + 1) = v73;
            *(void *)&v380 = v74;
            *((void *)&v380 + 1) = v75;
            uint64_t v167 = v75;
            uint64_t v264 = v69;
            if (!v20 || !REBindPointBoundComponent())
            {
              uint64_t v170 = 0;
              goto LABEL_168;
            }
            uint64_t v281 = v75;
            uint64_t v168 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v169 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_223:
                __break(1u);
                goto LABEL_224;
              }
              uint64_t v223 = specialized static Entity.entityInfoType(_:)(v168);
              if (v223)
              {
                uint64_t v170 = (*(uint64_t (**)(void))(v223 + 232))();
                uint64_t v224 = *(void *)(v170 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v224, 0);
                *(void *)(v170 + 16) = v168;
                MEMORY[0x22A68E750](v168, v170);
                swift_release();
                goto LABEL_167;
              }
              uint64_t v169 = makeEntity(for:)(v168);
            }
            uint64_t v170 = v169;
LABEL_167:
            uint64_t v167 = v281;
LABEL_168:
            specialized ActionEventData.action<A>()((uint64_t)&v373);
            uint64_t v225 = v375;
            if ((_BYTE)v375 != 0xFF)
            {
              char v261 = v70;
              char v262 = v72;
              uint64_t v288 = v74;
              uint64_t v293 = v73;
              uint64_t v283 = v167;
              uint64_t v226 = v374;
              uint64_t v227 = v373;
              swift_retain();
              outlined copy of SetEntityEnabledAction?(v227, v226, v225);
              uint64_t v228 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityEnabledAction>);
              __int16 v323 = v227;
              char v324 = v226;
              uint64_t v229 = v22;
              char v325 = v225 & 0x101;
              uint64_t v230 = v21;
              uint64_t v231 = v19;
              uint64_t v257 = v228 & 1;
              uint64_t v326 = v228 & 1;
              uint64_t v322 = v296;
              char v327 = v170;
              double v328 = v306;
              double v329 = v229;
              uint64_t v330 = v230;
              uint64_t v331 = Strong;
              double v332 = v267;
              char v333 = v231;
              unint64_t v334 = 0;
              char v335 = v273;
              unint64_t v336 = 0;
              unint64_t v260 = v71;
              uint64_t v222 = v269;
              char v337 = v269;
              long long v338 = 0;
              long long v341 = v378;
              long long v342 = v379;
              uint64_t v343 = v380;
              long long v339 = v376;
              long long v340 = v377;
              uint64_t v344 = v299;
              swift_retain();
              swift_retain();
              a5(&v322);
              outlined consume of SetEntityEnabledAction?(v227, v226, v225);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              __int16 v345 = v296;
              char v346 = v227;
              char v347 = v226;
              uint64_t v348 = v225 & 0x101;
              char v349 = v257;
              double v350 = v170;
              double v351 = v306;
              uint64_t v352 = v229;
              uint64_t v353 = v230;
              double v354 = Strong;
              char v355 = v267;
              unint64_t v356 = v231;
              char v357 = 0;
              unint64_t v358 = v273;
              goto LABEL_170;
            }
LABEL_190:
            swift_release();
            swift_release();
            swift_release();
LABEL_191:
            swift_release();
            return 0;
          }
          swift_bridgeObjectRelease();
        }
        unint64_t v70 = 0;
        uint64_t v69 = 0;
        __int16 v72 = 0;
        char v71 = 0;
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        goto LABEL_94;
      }
LABEL_214:
      __break(1u);
      goto LABEL_215;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_191;
    case 4:
      float v24 = *(void *)a2;
      float v23 = *(void *)(a2 + 8);
      uint64_t v311 = *(void *)(a2 + 32);
      v316 = *(void *)(a2 + 40);
      uint64_t v307 = *(void *)(a2 + 48);
      uint64_t v25 = *(void *)(a2 + 64);
      uint64_t v27 = *(float *)(a2 + 72);
      uint64_t v26 = *(float *)(a2 + 76);
      unint64_t v274 = *(unsigned char *)(a2 + 80);
      char v278 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v76 = specialized static Entity.entityInfoType(_:)(v24);
        if (v76)
        {
          uint64_t v77 = (*(uint64_t (**)(void))(v76 + 232))();
          uint64_t v78 = *(void *)(v77 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v78, 0);
          *(void *)(v77 + 16) = v24;
          MEMORY[0x22A68E750](v24, v77);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v24);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v300 = swift_allocObject();
        swift_weakInit();
        *(void *)(v300 + 16) = v23;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v79 = String.init(cString:)();
        uint64_t v81 = v80;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v82 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v83 = specialized __RawDictionaryStorage.find<A>(_:)(v79, v81);
          if (v84)
          {
            uint64_t v85 = (uint64_t *)(*(void *)(v82 + 56) + 56 * v83);
            uint64_t v87 = *v85;
            uint64_t v86 = v85[1];
            char v89 = v85[2];
            unint64_t v88 = v85[3];
            long long v90 = v85[4];
            uint64_t v91 = v85[5];
            uint64_t v92 = v85[6];
            swift_bridgeObjectRelease();
LABEL_102:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v376 = v311;
            BYTE8(v376) = 0;
            *(void *)&long long v377 = v316;
            *((void *)&v377 + 1) = v87;
            *(void *)&v378 = v86;
            *((void *)&v378 + 1) = v89;
            *(void *)&v379 = v88;
            *((void *)&v379 + 1) = v90;
            *(void *)&v380 = v91;
            *((void *)&v380 + 1) = v92;
            uint64_t v171 = v92;
            uint64_t v270 = v86;
            if (!v25 || !REBindPointBoundComponent())
            {
              int v174 = 0;
LABEL_175:
              specialized ActionEventData.action<A>()((uint64_t)&v373);
              v234 = v375;
              if ((_BYTE)v375 == 0xFF) {
                goto LABEL_190;
              }
              uint64_t v265 = v87;
              uint64_t v289 = v171;
              uint64_t v235 = v374;
              uint64_t v236 = v373;
              swift_retain();
              outlined copy of SetEntityEnabledAction?(v236, v235, v234);
              uint64_t v237 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityEnabledAction>);
              __int16 v323 = v236;
              char v324 = v235;
              uint64_t v238 = v27;
              char v325 = v234 & 0x101;
              uint64_t v239 = v26;
              uint64_t v259 = v237 & 1;
              uint64_t v326 = v237 & 1;
              uint64_t v322 = v300;
              char v327 = v174;
              double v328 = v274;
              double v329 = v238;
              uint64_t v330 = v239;
              uint64_t v331 = Strong;
              double v332 = v278;
              char v333 = -1.0;
              unint64_t v334 = 0;
              char v335 = 0xBFF0000000000000;
              unint64_t v336 = 0;
              char v337 = 0xBFF0000000000000;
              long long v338 = 0;
              long long v341 = v378;
              long long v342 = v379;
              uint64_t v343 = v380;
              long long v339 = v376;
              long long v340 = v377;
              uint64_t v344 = v307;
              swift_retain();
              swift_retain();
              a5(&v322);
              outlined consume of SetEntityEnabledAction?(v236, v235, v234);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              __int16 v345 = v300;
              char v346 = v236;
              char v347 = v235;
              uint64_t v348 = v234 & 0x101;
              char v349 = v259;
              double v350 = v174;
              double v351 = v274;
              uint64_t v352 = v238;
              uint64_t v353 = v239;
              double v354 = Strong;
              char v355 = v278;
              unint64_t v356 = -1.0;
              char v357 = 0;
              unint64_t v358 = 0xBFF0000000000000;
              char v359 = 0;
              uint64_t v360 = 0xBFF0000000000000;
              char v361 = 0;
              uint64_t v362 = v311;
              uint64_t v363 = 0;
              uint64_t v364 = v316;
              uint64_t v365 = v265;
              uint64_t v366 = v270;
              uint64_t v367 = v89;
              uint64_t v368 = v88;
              uint64_t v369 = v90;
              uint64_t v370 = v91;
              uint64_t v240 = v289;
              goto LABEL_184;
            }
            uint64_t v285 = v92;
            unsigned int v172 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              unsigned int v173 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_224:
                __break(1u);
                goto LABEL_225;
              }
              unint64_t v232 = specialized static Entity.entityInfoType(_:)(v172);
              if (v232)
              {
                int v174 = (*(uint64_t (**)(void))(v232 + 232))();
                char v233 = *(void *)(v174 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v233, 0);
                *(void *)(v174 + 16) = v172;
                MEMORY[0x22A68E750](v172, v174);
                swift_release();
                goto LABEL_174;
              }
              unsigned int v173 = makeEntity(for:)(v172);
            }
            int v174 = v173;
LABEL_174:
            uint64_t v171 = v285;
            goto LABEL_175;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v87 = 0;
        uint64_t v86 = 0;
        char v89 = 0;
        unint64_t v88 = 0;
        long long v90 = 0;
        uint64_t v91 = 0;
        uint64_t v92 = 0;
        goto LABEL_102;
      }
LABEL_215:
      __break(1u);
      goto LABEL_216;
    case 8:
      float v29 = *(void *)a2;
      float v28 = *(void *)(a2 + 8);
      uint64_t v312 = *(void *)(a2 + 32);
      v317 = *(void *)(a2 + 40);
      uint64_t v30 = *(void *)(a2 + 56);
      uint64_t v307 = *(void *)(a2 + 48);
      uint64_t v32 = *(float *)(a2 + 64);
      uint64_t v31 = *(float *)(a2 + 68);
      uint64_t v279 = *(unsigned char *)(a2 + 72);
      uint64_t v284 = *(void *)(a2 + 80);
      uint64_t v290 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v93 = specialized static Entity.entityInfoType(_:)(v29);
        if (v93)
        {
          uint64_t v94 = (*(uint64_t (**)(void))(v93 + 232))();
          uint64_t v95 = *(void *)(v94 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v95, 0);
          *(void *)(v94 + 16) = v29;
          MEMORY[0x22A68E750](v29, v94);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v29);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v301 = swift_allocObject();
        swift_weakInit();
        *(void *)(v301 + 16) = v28;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v96 = String.init(cString:)();
        uint64_t v98 = v97;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v99 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v100 = specialized __RawDictionaryStorage.find<A>(_:)(v96, v98);
          if (v101)
          {
            uint64_t v102 = (uint64_t *)(*(void *)(v99 + 56) + 56 * v100);
            uint64_t v104 = *v102;
            uint64_t v103 = v102[1];
            uint64_t v106 = v102[2];
            uint64_t v105 = v102[3];
            char v108 = v102[4];
            unint64_t v107 = v102[5];
            char v109 = v102[6];
            swift_bridgeObjectRelease();
LABEL_110:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v376 = v312;
            BYTE8(v376) = 0;
            *(void *)&long long v377 = v317;
            *((void *)&v377 + 1) = v104;
            *(void *)&v378 = v103;
            *((void *)&v378 + 1) = v106;
            *(void *)&v379 = v105;
            *((void *)&v379 + 1) = v108;
            uint64_t v271 = v107;
            unint64_t v275 = v103;
            *(void *)&v380 = v107;
            *((void *)&v380 + 1) = v109;
            uint64_t v175 = v108;
            if (!v30 || !REBindPointBoundComponent())
            {
              uint64_t v178 = 0;
LABEL_181:
              specialized ActionEventData.action<A>()((uint64_t)&v373);
              char v243 = v375;
              if ((_BYTE)v375 == 0xFF) {
                goto LABEL_190;
              }
              uint64_t v298 = v175;
              uint64_t v244 = v374;
              uint64_t v263 = v104;
              char v245 = v373;
              swift_retain();
              outlined copy of SetEntityEnabledAction?(v245, v244, v243);
              uint64_t v246 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityEnabledAction>);
              __int16 v323 = v245;
              char v324 = v244;
              uint64_t v247 = v32;
              char v325 = v243 & 0x101;
              uint64_t v248 = v31;
              uint64_t v258 = v246 & 1;
              uint64_t v326 = v246 & 1;
              uint64_t v322 = v301;
              char v327 = v178;
              double v328 = v279;
              double v329 = v247;
              uint64_t v330 = v248;
              double v332 = 0;
              char v333 = 0.0;
              uint64_t v331 = Strong;
              unint64_t v334 = 1;
              char v335 = v284;
              unint64_t v336 = 0;
              char v337 = v290;
              long long v338 = 0;
              long long v341 = v378;
              long long v342 = v379;
              uint64_t v343 = v380;
              long long v339 = v376;
              long long v340 = v377;
              uint64_t v344 = v307;
              swift_retain();
              swift_retain();
              a5(&v322);
              outlined consume of SetEntityEnabledAction?(v245, v244, v243);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              __int16 v345 = v301;
              char v346 = v245;
              char v347 = v244;
              uint64_t v348 = v243 & 0x101;
              char v349 = v258;
              double v350 = v178;
              double v351 = v279;
              uint64_t v352 = v247;
              uint64_t v353 = v248;
              char v355 = 0;
              unint64_t v356 = 0.0;
              double v354 = Strong;
              char v357 = 1;
              unint64_t v358 = v284;
              char v359 = 0;
              uint64_t v360 = v290;
              char v361 = 0;
              uint64_t v362 = v312;
              uint64_t v363 = 0;
              uint64_t v364 = v317;
              uint64_t v365 = v263;
              uint64_t v366 = v275;
              uint64_t v367 = v106;
              uint64_t v368 = v105;
              uint64_t v369 = v298;
              uint64_t v370 = v271;
              uint64_t v240 = v109;
LABEL_184:
              unsigned __int16 v371 = v240;
              int v211 = v307;
              goto LABEL_193;
            }
            unint64_t v176 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v177 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_225:
                __break(1u);
                goto LABEL_226;
              }
              int v241 = specialized static Entity.entityInfoType(_:)(v176);
              if (v241)
              {
                uint64_t v178 = (*(uint64_t (**)(void))(v241 + 232))();
                char v242 = *(void *)(v178 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v242, 0);
                *(void *)(v178 + 16) = v176;
                MEMORY[0x22A68E750](v176, v178);
                swift_release();
                goto LABEL_180;
              }
              uint64_t v177 = makeEntity(for:)(v176);
            }
            uint64_t v178 = v177;
LABEL_180:
            uint64_t v175 = v108;
            goto LABEL_181;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v104 = 0;
        uint64_t v103 = 0;
        uint64_t v106 = 0;
        uint64_t v105 = 0;
        char v108 = 0;
        unint64_t v107 = 0;
        char v109 = 0;
        goto LABEL_110;
      }
LABEL_216:
      __break(1u);
      goto LABEL_217;
    case 16:
      float v34 = *(void *)a2;
      float v33 = *(void *)(a2 + 8);
      uint64_t v35 = *(void *)(a2 + 56);
      uint64_t v313 = *(void *)(a2 + 48);
      v318 = *(void *)(a2 + 40);
      uint64_t v294 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v110 = specialized static Entity.entityInfoType(_:)(v34);
        if (v110)
        {
          uint64_t v111 = (*(uint64_t (**)(void))(v110 + 232))();
          uint64_t v112 = *(void *)(v111 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v112, 0);
          *(void *)(v111 + 16) = v34;
          MEMORY[0x22A68E750](v34, v111);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
LABEL_57:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v113 = swift_allocObject();
        swift_weakInit();
        uint64_t v308 = v113;
        *(void *)(v113 + 16) = v33;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v114 = String.init(cString:)();
        uint64_t v116 = v115;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v117 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v118 = specialized __RawDictionaryStorage.find<A>(_:)(v114, v116);
          if (v119)
          {
            uint64_t v120 = (uint64_t *)(*(void *)(v117 + 56) + 56 * v118);
            uint64_t v121 = *v120;
            uint64_t v122 = v120[1];
            unint64_t v124 = v120[2];
            uint64_t v123 = v120[3];
            char v125 = v120[4];
            char v126 = v120[5];
            uint64_t v127 = v120[6];
            swift_bridgeObjectRelease();
            goto LABEL_118;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v121 = 0;
        uint64_t v122 = 0;
        unint64_t v124 = 0;
        uint64_t v123 = 0;
        char v125 = 0;
        char v126 = 0;
        uint64_t v127 = 0;
LABEL_118:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&long long v376 = 0;
        BYTE8(v376) = 0;
        *(void *)&long long v377 = v318;
        *((void *)&v377 + 1) = v121;
        *(void *)&v378 = v122;
        *((void *)&v378 + 1) = v124;
        *(void *)&v379 = v123;
        *((void *)&v379 + 1) = v125;
        *(void *)&v380 = v126;
        *((void *)&v380 + 1) = v127;
        uint64_t v286 = v127;
        uint64_t v291 = v123;
        uint64_t v179 = v126;
        if (!v35 || !REBindPointBoundComponent()) {
          goto LABEL_130;
        }
        uint64_t v302 = v126;
        v180 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_128:
          type metadata accessor for Entity();
          uint64_t v181 = swift_dynamicCastClassUnconditional();
          goto LABEL_129;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
LABEL_186:
          uint64_t v249 = specialized static Entity.entityInfoType(_:)(v180);
          if (v249)
          {
            uint64_t v182 = (*(uint64_t (**)(void))(v249 + 232))();
            uint64_t v250 = *(void *)(v182 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v250, 0);
            *(void *)(v182 + 16) = v180;
            MEMORY[0x22A68E750](v180, v182);
            swift_release();
            goto LABEL_188;
          }
          uint64_t v181 = makeEntity(for:)(v180);
LABEL_129:
          uint64_t v182 = v181;
LABEL_188:
          uint64_t v179 = v302;
LABEL_189:
          specialized ActionEventData.action<A>()((uint64_t)&v373);
          char v251 = v375;
          if ((_BYTE)v375 != 0xFF)
          {
            uint64_t v277 = v124;
            uint64_t v304 = v179;
            uint64_t v252 = v374;
            uint64_t v253 = v373;
            __int16 v323 = v373;
            char v324 = v374;
            char v325 = v375 & 0x101;
            uint64_t v326 = 1;
            uint64_t v322 = v308;
            char v327 = v182;
            double v328 = 0;
            double v329 = 0.0;
            uint64_t v330 = 0.0;
            double v332 = 0;
            char v333 = 0.0;
            uint64_t v331 = Strong;
            unint64_t v334 = 1;
            char v335 = v294;
            unint64_t v336 = 0;
            char v337 = 0;
            long long v338 = 1;
            long long v341 = v378;
            long long v342 = v379;
            uint64_t v343 = v380;
            long long v339 = v376;
            long long v340 = v377;
            uint64_t v344 = v313;
            swift_retain();
            swift_retain();
            outlined copy of SetEntityEnabledAction?(v253, v252, v251);
            swift_retain();
            a5(&v322);
            outlined consume of SetEntityEnabledAction?(v253, v252, v251);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            __int16 v345 = v308;
            char v346 = v253;
            char v347 = v252;
            uint64_t v348 = v251 & 0x101;
            char v349 = 1;
            double v350 = v182;
            double v351 = 0;
            uint64_t v352 = 0.0;
            uint64_t v353 = 0.0;
            char v355 = 0;
            unint64_t v356 = 0.0;
            double v354 = Strong;
            char v357 = 1;
            unint64_t v358 = v294;
            char v359 = 0;
            uint64_t v360 = 0;
            char v361 = 1;
            uint64_t v362 = 0;
            uint64_t v363 = 0;
            uint64_t v364 = v318;
            uint64_t v365 = v121;
            uint64_t v366 = v122;
            uint64_t v367 = v277;
            uint64_t v368 = v291;
            uint64_t v369 = v125;
            uint64_t v370 = v304;
            unsigned __int16 v371 = v286;
            int v211 = v313;
            goto LABEL_193;
          }
          goto LABEL_190;
        }
        __break(1u);
        goto LABEL_123;
      }
LABEL_217:
      __break(1u);
      goto LABEL_218;
    case 32:
      uint64_t v37 = *(void *)a2;
      uint64_t v36 = *(void *)(a2 + 8);
      uint64_t v35 = *(void *)(a2 + 56);
      uint64_t v313 = *(void *)(a2 + 48);
      v318 = *(void *)(a2 + 40);
      uint64_t v294 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
LABEL_65:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v131 = swift_allocObject();
        swift_weakInit();
        uint64_t v308 = v131;
        *(void *)(v131 + 16) = v36;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v132 = String.init(cString:)();
        uint64_t v134 = v133;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v135 = static AnimationResource.codableActionTypeMap;
        if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
          goto LABEL_124;
        }
        swift_bridgeObjectRetain();
        uint64_t v136 = specialized __RawDictionaryStorage.find<A>(_:)(v132, v134);
        if (v137)
        {
          uint64_t v138 = (uint64_t *)(*(void *)(v135 + 56) + 56 * v136);
          uint64_t v121 = *v138;
          uint64_t v122 = v138[1];
          unint64_t v124 = v138[2];
          uint64_t v139 = v138[3];
          char v125 = v138[4];
          unint64_t v140 = v138[5];
          char v141 = v138[6];
          swift_bridgeObjectRelease();
LABEL_125:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v376 = 0;
          BYTE8(v376) = 0;
          *(void *)&long long v377 = v318;
          *((void *)&v377 + 1) = v121;
          *(void *)&v378 = v122;
          *((void *)&v378 + 1) = v124;
          *(void *)&v379 = v139;
          *((void *)&v379 + 1) = v125;
          *(void *)&v380 = v140;
          *((void *)&v380 + 1) = v141;
          uint64_t v286 = v141;
          uint64_t v291 = v139;
          uint64_t v179 = v140;
          if (v35 && REBindPointBoundComponent())
          {
            uint64_t v302 = v140;
            v180 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject()) {
              goto LABEL_128;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_226:
              __break(1u);
              goto LABEL_227;
            }
            goto LABEL_186;
          }
LABEL_130:
          uint64_t v182 = 0;
          goto LABEL_189;
        }
LABEL_123:
        swift_bridgeObjectRelease();
LABEL_124:
        uint64_t v121 = 0;
        uint64_t v122 = 0;
        unint64_t v124 = 0;
        uint64_t v139 = 0;
        char v125 = 0;
        unint64_t v140 = 0;
        char v141 = 0;
        goto LABEL_125;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v128 = specialized static Entity.entityInfoType(_:)(v37);
        if (v128)
        {
          uint64_t v129 = (*(uint64_t (**)(void))(v128 + 232))();
          uint64_t v130 = *(void *)(v129 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v130, 0);
          *(void *)(v129 + 16) = v37;
          MEMORY[0x22A68E750](v37, v129);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v37);
        }
        goto LABEL_65;
      }
LABEL_218:
      __break(1u);
      goto LABEL_219;
    case 64:
      uint64_t v39 = *(void *)a2;
      uint64_t v38 = *(void *)(a2 + 8);
      uint64_t v40 = *(void *)(a2 + 24);
      uint64_t v41 = *(void *)(a2 + 40);
      v315 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
LABEL_73:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v145 = swift_allocObject();
        swift_weakInit();
        *(void *)(v145 + 16) = v38;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v146 = v40;
        if (!v41 || !REBindPointBoundComponent())
        {
          uint64_t v149 = 0;
          goto LABEL_79;
        }
        uint64_t v147 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v148 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v149 = v148;
          goto LABEL_79;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          char v212 = specialized static Entity.entityInfoType(_:)(v147);
          if (!v212)
          {
            uint64_t v148 = makeEntity(for:)(v147);
            goto LABEL_77;
          }
          uint64_t v149 = (*(uint64_t (**)(void))(v212 + 232))();
          double v213 = *(void *)(v149 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v213, 0);
          *(void *)(v149 + 16) = v147;
          MEMORY[0x22A68E750](v147, v149);
          swift_release();
LABEL_79:
          uint64_t v150 = String.init(cString:)();
          uint64_t v152 = v151;
          if (one-time initialization token for codableActionTypeMap != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v153 = static AnimationResource.codableActionTypeMap;
          if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v154 = specialized __RawDictionaryStorage.find<A>(_:)(v150, v152);
            if (v155)
            {
              uint64_t v156 = (uint64_t *)(*(void *)(v153 + 56) + 56 * v154);
              uint64_t v157 = *v156;
              uint64_t v158 = v156[1];
              uint64_t v159 = v156[2];
              uint64_t v160 = v156[3];
              uint64_t v161 = v156[4];
              v162 = v156[5];
              v319 = v156[6];
              swift_bridgeObjectRelease();
LABEL_133:
              swift_endAccess();
              swift_bridgeObjectRelease();
              *(void *)&long long v376 = 0;
              BYTE8(v376) = 0;
              *(void *)&long long v377 = v146;
              *((void *)&v377 + 1) = v157;
              *(void *)&v378 = v158;
              *((void *)&v378 + 1) = v159;
              *(void *)&v379 = v160;
              *((void *)&v379 + 1) = v161;
              uint64_t v303 = v162;
              uint64_t v309 = v161;
              *(void *)&v380 = v162;
              *((void *)&v380 + 1) = v319;
              specialized ActionEventData.action<A>()((uint64_t)&v373);
              uint64_t v183 = v375;
              if ((_BYTE)v375 == 0xFF) {
                goto LABEL_190;
              }
              uint64_t v184 = v374;
              uint64_t v292 = v146;
              uint64_t v297 = v160;
              uint64_t v185 = v373;
              __int16 v323 = v373;
              char v324 = v374;
              uint64_t v282 = v159;
              uint64_t v287 = v158;
              uint64_t v186 = v149;
              uint64_t v187 = v375 & 1;
              char v325 = v375 & 0x101;
              unint64_t v276 = v157;
              uint64_t v188 = Strong;
              uint64_t v189 = HIBYTE(v375) & 1;
              uint64_t v326 = 1;
              uint64_t v322 = v145;
              char v327 = v186;
              double v328 = 0;
              double v329 = 0.0;
              uint64_t v330 = 0.0;
              double v332 = 0;
              char v333 = 0.0;
              uint64_t v331 = Strong;
              unint64_t v334 = 1;
              char v335 = 0;
              unint64_t v336 = 1;
              char v337 = 0;
              long long v338 = 1;
              long long v341 = v378;
              long long v342 = v379;
              uint64_t v343 = v380;
              long long v339 = v376;
              long long v340 = v377;
              uint64_t v344 = v315;
              swift_retain();
              swift_retain();
              outlined copy of SetEntityEnabledAction?(v185, v184, v183);
              swift_retain();
              a5(&v322);
              outlined consume of SetEntityEnabledAction?(v185, v184, v183);
              swift_release();
              goto LABEL_154;
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v157 = 0;
          uint64_t v158 = 0;
          uint64_t v159 = 0;
          uint64_t v160 = 0;
          uint64_t v161 = 0;
          v162 = 0;
          v319 = 0;
          goto LABEL_133;
        }
LABEL_221:
        __break(1u);
LABEL_222:
        __break(1u);
        goto LABEL_223;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        unint64_t v142 = specialized static Entity.entityInfoType(_:)(v39);
        if (v142)
        {
          uint64_t v143 = (*(uint64_t (**)(void))(v142 + 232))();
          uint64_t v144 = *(void *)(v143 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v144, 0);
          *(void *)(v143 + 16) = v39;
          MEMORY[0x22A68E750](v39, v143);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v39);
        }
        goto LABEL_73;
      }
LABEL_219:
      __break(1u);
      goto LABEL_220;
    default:
      if (a4 != 128) {
        goto LABEL_191;
      }
      float v14 = *(void *)a2;
      float v13 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 40);
      v315 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        uint64_t v190 = specialized static Entity.entityInfoType(_:)(v14);
        if (v190)
        {
          uint64_t v191 = (*(uint64_t (**)(void))(v190 + 232))();
          uint64_t v192 = *(void *)(v191 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v192, 0);
          *(void *)(v191 + 16) = v14;
          MEMORY[0x22A68E750](v14, v191);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v145 = swift_allocObject();
      swift_weakInit();
      *(void *)(v145 + 16) = v13;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v193 = v15;
      if (v16 && REBindPointBoundComponent())
      {
        uint64_t v194 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          unint64_t v195 = swift_dynamicCastClassUnconditional();
LABEL_142:
          char v196 = v195;
          goto LABEL_144;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_227:
          __break(1u);
          JUMPOUT(0x227FBFB88);
        }
        uint64_t v254 = specialized static Entity.entityInfoType(_:)(v194);
        if (!v254)
        {
          unint64_t v195 = makeEntity(for:)(v194);
          goto LABEL_142;
        }
        char v196 = (*(uint64_t (**)(void))(v254 + 232))();
        unint64_t v255 = *(void *)(v196 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v255, 0);
        *(void *)(v196 + 16) = v194;
        MEMORY[0x22A68E750](v194, v196);
        swift_release();
      }
      else
      {
        char v196 = 0;
      }
LABEL_144:
      v197 = String.init(cString:)();
      uint64_t v199 = v198;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v200 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_150;
      }
      swift_bridgeObjectRetain();
      uint64_t v201 = specialized __RawDictionaryStorage.find<A>(_:)(v197, v199);
      if (v202)
      {
        uint64_t v203 = (uint64_t *)(*(void *)(v200 + 56) + 56 * v201);
        int v204 = *v203;
        uint64_t v205 = v203[1];
        uint64_t v206 = v203[2];
        int v207 = v203[3];
        char v208 = v203[4];
        uint64_t v209 = v203[5];
        v319 = v203[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_150:
        int v204 = 0;
        uint64_t v205 = 0;
        uint64_t v206 = 0;
        int v207 = 0;
        char v208 = 0;
        uint64_t v209 = 0;
        v319 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v376 = 0;
      BYTE8(v376) = 0;
      *(void *)&long long v377 = v193;
      *((void *)&v377 + 1) = v204;
      *(void *)&v378 = v205;
      *((void *)&v378 + 1) = v206;
      *(void *)&v379 = v207;
      *((void *)&v379 + 1) = v208;
      uint64_t v303 = v209;
      uint64_t v309 = v208;
      *(void *)&v380 = v209;
      *((void *)&v380 + 1) = v319;
      specialized ActionEventData.action<A>()((uint64_t)&v373);
      uint64_t v210 = v375;
      if ((_BYTE)v375 == 0xFF) {
        goto LABEL_190;
      }
      uint64_t v184 = v374;
      uint64_t v292 = v193;
      uint64_t v297 = v207;
      uint64_t v185 = v373;
      __int16 v323 = v373;
      char v324 = v374;
      uint64_t v282 = v206;
      uint64_t v287 = v205;
      uint64_t v186 = v196;
      uint64_t v187 = v375 & 1;
      char v325 = v375 & 0x101;
      unint64_t v276 = v204;
      uint64_t v188 = Strong;
      uint64_t v189 = HIBYTE(v375) & 1;
      uint64_t v326 = 1;
      uint64_t v322 = v145;
      char v327 = v186;
      double v328 = 0;
      double v329 = 0.0;
      uint64_t v330 = 0.0;
      double v332 = 0;
      char v333 = 0.0;
      uint64_t v331 = Strong;
      unint64_t v334 = 1;
      char v335 = 0;
      unint64_t v336 = 1;
      char v337 = 0;
      long long v338 = 1;
      long long v341 = v378;
      long long v342 = v379;
      uint64_t v343 = v380;
      long long v339 = v376;
      long long v340 = v377;
      uint64_t v344 = v315;
      swift_retain();
      swift_retain();
      outlined copy of SetEntityEnabledAction?(v185, v184, v210);
      swift_retain();
      a5(&v322);
      swift_release();
      outlined consume of SetEntityEnabledAction?(v185, v184, v210);
LABEL_154:
      swift_release();
      swift_release();
      swift_release();
      __int16 v345 = v145;
      char v346 = v185;
      char v347 = v184;
      LOBYTE(v348) = v187;
      HIBYTE(v348) = v189;
      char v349 = 1;
      double v350 = v186;
      double v351 = 0;
      uint64_t v352 = 0.0;
      uint64_t v353 = 0.0;
      char v355 = 0;
      unint64_t v356 = 0.0;
      double v354 = v188;
      char v357 = 1;
      unint64_t v358 = 0;
      char v359 = 1;
      uint64_t v360 = 0;
      char v361 = 1;
      uint64_t v362 = 0;
      uint64_t v363 = 0;
      uint64_t v364 = v292;
      uint64_t v365 = v276;
      uint64_t v366 = v287;
      uint64_t v367 = v282;
      uint64_t v368 = v297;
      uint64_t v369 = v309;
      uint64_t v370 = v303;
      unsigned __int16 v371 = v319;
      int v211 = v315;
LABEL_193:
      unsigned __int8 v372 = v211;
      outlined release of ActionEvent<SetEntityEnabledAction>((uint64_t)&v345);
      return 0;
  }
}

{
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float v12;
  float v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  float v22;
  float v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *);
  unint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t *);
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t *);
  unint64_t v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t *);
  unint64_t v104;
  char v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t *);
  unint64_t v122;
  char v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t Entity;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  double v160;
  double v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  double v170;
  double v171;
  double v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t *);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  double v183;
  double v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t *);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  double v194;
  double v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  long long v201;
  uint64_t v202;
  void (*v203)(uint64_t *);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  char v255;
  uint64_t *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  uint64_t v282;
  char v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  char v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void (*v336)(uint64_t *);
  void (*v337)(uint64_t *);
  void (*v338)(uint64_t *);
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char v343;
  uint64_t v344;
  char v345;
  double v346;
  double v347;
  uint64_t v348;
  uint64_t v349;
  double v350;
  char v351;
  unint64_t v352;
  char v353;
  unint64_t v354;
  char v355;
  long long v356;
  long long v357;
  long long v358;
  long long v359;
  long long v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char v366;
  uint64_t v367;
  char v368;
  double v369;
  double v370;
  uint64_t v371;
  uint64_t v372;
  double v373;
  char v374;
  unint64_t v375;
  char v376;
  unint64_t v377;
  char v378;
  uint64_t v379;
  char v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  long long v393;
  long long v394;
  long long v395;
  long long v396;
  long long v397;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  uint64_t v9 = Strong;
  switch(a4)
  {
    case 1:
      uint64_t v11 = *(void *)a2;
      uint64_t v10 = *(void *)(a2 + 8);
      v320 = *(void *)(a2 + 32);
      uint64_t v326 = *(void *)(a2 + 40);
      uint64_t v307 = *(void *)(a2 + 48);
      uint64_t v12 = *(float *)(a2 + 72);
      float v13 = *(float *)(a2 + 76);
      uint64_t v281 = *(unsigned char *)(a2 + 80);
      uint64_t v288 = *(void *)(a2 + 64);
      uint64_t v294 = *(void *)(a2 + 88);
      uint64_t v301 = *(void *)(a2 + 96);
      unint64_t v276 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_228;
      }
      uint64_t v42 = specialized static Entity.entityInfoType(_:)(v11);
      if (v42)
      {
        uint64_t v43 = (*(uint64_t (**)(void))(v42 + 232))();
        uint64_t v44 = *(void *)(v43 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v44, 0);
        *(void *)(v43 + 16) = v11;
        MEMORY[0x22A68E750](v11, v43);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v11);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v45 = swift_allocObject();
      swift_weakInit();
      *(void *)(v45 + 16) = v10;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v46 = String.init(cString:)();
      uint64_t v48 = v47;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v49 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        uint64_t v50 = a5;
LABEL_85:
        char v54 = 0;
        uint64_t v314 = 0;
        uint64_t v55 = 0;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        goto LABEL_86;
      }
      uint64_t v50 = a5;
      swift_bridgeObjectRetain();
      uint64_t v51 = specialized __RawDictionaryStorage.find<A>(_:)(v46, v48);
      if ((v52 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_85;
      }
      unint64_t v53 = (uint64_t *)(*(void *)(v49 + 56) + 56 * v51);
      char v54 = *v53;
      uint64_t v314 = v53[1];
      uint64_t v55 = v53[2];
      uint64_t v56 = v53[3];
      uint64_t v57 = v53[4];
      uint64_t v58 = v53[5];
      uint64_t v59 = v53[6];
      swift_bridgeObjectRelease();
LABEL_86:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v393 = v320;
      BYTE8(v393) = 0;
      *(void *)&v394 = v326;
      *((void *)&v394 + 1) = v54;
      *(void *)&v395 = v314;
      *((void *)&v395 + 1) = v55;
      *(void *)&v396 = v56;
      *((void *)&v396 + 1) = v57;
      *(void *)&v397 = v58;
      *((void *)&v397 + 1) = v59;
      uint64_t v273 = v55;
      uint64_t v269 = v57;
      uint64_t v266 = v59;
      if (!v288 || !REBindPointBoundComponent())
      {
        v155 = 0;
        goto LABEL_92;
      }
      uint64_t Entity = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v154 = swift_dynamicCastClassUnconditional();
LABEL_90:
        v155 = v154;
        goto LABEL_92;
      }
      if (REEntityIsBeingDestroyed()) {
        goto LABEL_236;
      }
      uint64_t v236 = specialized static Entity.entityInfoType(_:)(Entity);
      if (!v236)
      {
        uint64_t v154 = makeEntity(for:)(Entity);
        goto LABEL_90;
      }
      v155 = (*(uint64_t (**)(void))(v236 + 232))();
      uint64_t v237 = *(void *)(v155 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v237, 0);
      *(void *)(v155 + 16) = Entity;
      MEMORY[0x22A68E750](Entity, v155);
      swift_release();
LABEL_92:
      specialized ActionEventData.action<A>()(&v390);
      uint64_t v156 = v391;
      if (!v391) {
        goto LABEL_215;
      }
      uint64_t v157 = v392;
      uint64_t v158 = v390;
      swift_retain();
      uint64_t v265 = v157;
      outlined copy of NotificationAction?(v158, v156);
      uint64_t v159 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<NotificationAction>);
      char v357 = v394;
      unint64_t v358 = v395;
      char v359 = v396;
      uint64_t v360 = v397;
      uint64_t v160 = v12;
      uint64_t v161 = v13;
      long long v341 = v156;
      long long v342 = v157;
      LOBYTE(v157) = v159 & 1;
      uint64_t v343 = v159 & 1;
      long long v339 = v45;
      long long v340 = v158;
      uint64_t v344 = v155;
      __int16 v345 = v281;
      char v346 = v160;
      char v347 = v161;
      uint64_t v348 = v9;
      char v349 = v276;
      double v350 = -1.0;
      double v351 = 0;
      uint64_t v352 = v294;
      uint64_t v353 = 0;
      double v354 = v301;
      char v355 = 0;
      unint64_t v356 = v393;
      char v361 = v307;
      swift_retain();
      swift_retain();
      v50(&v339);
      outlined consume of NotificationAction?(v158, v156);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v362 = v45;
      uint64_t v363 = v158;
      uint64_t v364 = v156;
      uint64_t v365 = v265;
      uint64_t v366 = v157;
      uint64_t v367 = v155;
      uint64_t v368 = v281;
      uint64_t v369 = v160;
      uint64_t v370 = v161;
      unsigned __int16 v371 = v9;
      unsigned __int8 v372 = v276;
      long long v373 = -1.0;
      long long v374 = 0;
      long long v375 = v294;
      long long v376 = 0;
      long long v377 = v301;
      v378 = 0;
      v379 = v320;
      v380 = 0;
      v381 = v326;
      v382 = v54;
      v383 = v314;
      v384 = v273;
      v385 = v56;
      v386 = v269;
      v387 = v58;
      v162 = v266;
LABEL_116:
      v388 = v162;
      uint64_t v185 = v307;
LABEL_150:
      v389 = v185;
LABEL_214:
      outlined release of ActionEvent<NotificationAction>((uint64_t)&v362);
      return 0;
    case 2:
      uint64_t v21 = *(void *)a2;
      uint64_t v20 = *(void *)(a2 + 8);
      char v327 = *(void *)(a2 + 32);
      char v333 = *(void *)(a2 + 40);
      float v22 = *(float *)(a2 + 56);
      uint64_t v302 = *(void *)(a2 + 80);
      uint64_t v308 = *(void *)(a2 + 64);
      uint64_t v295 = *(void *)(a2 + 88);
      float v23 = *(float *)(a2 + 96);
      float v24 = *(float *)(a2 + 100);
      uint64_t v277 = *(unsigned char *)(a2 + 104);
      uint64_t v282 = *(void *)(a2 + 72);
      uint64_t v289 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_228:
          __break(1u);
          goto LABEL_229;
        }
        uint64_t v60 = specialized static Entity.entityInfoType(_:)(v21);
        if (v60)
        {
          uint64_t v61 = (*(uint64_t (**)(void))(v60 + 232))();
          uint64_t v62 = *(void *)(v61 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v62, 0);
          *(void *)(v61 + 16) = v21;
          MEMORY[0x22A68E750](v21, v61);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v21);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v63 = swift_allocObject();
      swift_weakInit();
      *(void *)(v63 + 16) = v20;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v64 = String.init(cString:)();
      uint64_t v66 = v65;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v67 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        uint64_t v68 = a5;
        swift_bridgeObjectRetain();
        uint64_t v69 = specialized __RawDictionaryStorage.find<A>(_:)(v64, v66);
        if (v70)
        {
          char v71 = (uint64_t *)(*(void *)(v67 + 56) + 56 * v69);
          __int16 v72 = *v71;
          uint64_t v73 = v71[3];
          v315 = v71[2];
          __int16 v323 = v71[1];
          uint64_t v74 = v71[4];
          uint64_t v75 = v71[5];
          uint64_t v76 = v71[6];
          swift_bridgeObjectRelease();
LABEL_97:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v393 = v327;
          BYTE8(v393) = 0;
          *(void *)&v394 = v333;
          *((void *)&v394 + 1) = v72;
          *(void *)&v395 = v323;
          *((void *)&v395 + 1) = v315;
          *(void *)&v396 = v73;
          *((void *)&v396 + 1) = v74;
          *(void *)&v397 = v75;
          *((void *)&v397 + 1) = v76;
          unint64_t v272 = v74;
          unint64_t v274 = v73;
          unint64_t v268 = v76;
          uint64_t v270 = v75;
          if (v295 && REBindPointBoundComponent())
          {
            uint64_t v163 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v164 = swift_dynamicCastClassUnconditional();
LABEL_101:
              uint64_t v165 = v164;
              goto LABEL_103;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_237:
              __break(1u);
              goto LABEL_238;
            }
            uint64_t v238 = specialized static Entity.entityInfoType(_:)(v163);
            if (!v238)
            {
              uint64_t v164 = makeEntity(for:)(v163);
              goto LABEL_101;
            }
            uint64_t v165 = (*(uint64_t (**)(void))(v238 + 232))();
            uint64_t v239 = *(void *)(v165 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v239, 0);
            *(void *)(v165 + 16) = v163;
            MEMORY[0x22A68E750](v163, v165);
            swift_release();
          }
          else
          {
            uint64_t v165 = 0;
          }
LABEL_103:
          specialized ActionEventData.action<A>()(&v390);
          uint64_t v166 = v391;
          if (v391)
          {
            uint64_t v167 = v392;
            unint64_t v336 = v68;
            uint64_t v168 = v390;
            swift_retain();
            outlined copy of NotificationAction?(v168, v166);
            uint64_t v169 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<NotificationAction>);
            char v357 = v394;
            unint64_t v358 = v395;
            char v359 = v396;
            uint64_t v360 = v397;
            uint64_t v170 = v23;
            uint64_t v171 = v24;
            unsigned int v172 = v22;
            long long v341 = v166;
            long long v342 = v167;
            uint64_t v298 = v72;
            unsigned int v173 = v169 & 1;
            uint64_t v343 = v169 & 1;
            long long v339 = v63;
            long long v340 = v168;
            uint64_t v344 = v165;
            __int16 v345 = v277;
            char v346 = v170;
            char v347 = v171;
            uint64_t v348 = v9;
            char v349 = v282;
            double v350 = v172;
            double v351 = 0;
            uint64_t v352 = v289;
            uint64_t v353 = 0;
            double v354 = v308;
            char v355 = 0;
            unint64_t v356 = v393;
            char v361 = v302;
            swift_retain();
            swift_retain();
            v336(&v339);
            outlined consume of NotificationAction?(v168, v166);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v362 = v63;
            uint64_t v363 = v168;
            uint64_t v364 = v166;
            uint64_t v365 = v167;
            uint64_t v366 = v173;
            uint64_t v367 = v165;
            uint64_t v368 = v277;
            uint64_t v369 = v170;
            uint64_t v370 = v171;
            unsigned __int16 v371 = v9;
            unsigned __int8 v372 = v282;
            long long v373 = v172;
            long long v374 = 0;
            long long v375 = v289;
            long long v376 = 0;
            long long v377 = v308;
            v378 = 0;
            v379 = v327;
            v380 = 0;
            v381 = v333;
            v382 = v298;
            v383 = v323;
            int v174 = v315;
LABEL_127:
            v384 = v174;
            v385 = v274;
            v386 = v272;
            v387 = v270;
            v388 = v268;
            uint64_t v185 = v302;
            goto LABEL_150;
          }
          goto LABEL_215;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v68 = a5;
      }
      __int16 v72 = 0;
      v315 = 0;
      __int16 v323 = 0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      uint64_t v75 = 0;
      uint64_t v76 = 0;
      goto LABEL_97;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_216;
    case 4:
      uint64_t v26 = *(void *)a2;
      uint64_t v25 = *(void *)(a2 + 8);
      v321 = *(void *)(a2 + 32);
      double v328 = *(void *)(a2 + 40);
      uint64_t v303 = *(void *)(a2 + 64);
      uint64_t v307 = *(void *)(a2 + 48);
      uint64_t v27 = *(float *)(a2 + 72);
      float v28 = *(float *)(a2 + 76);
      uint64_t v296 = *(unsigned char *)(a2 + 80);
      uint64_t v290 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_229:
          __break(1u);
          goto LABEL_230;
        }
        uint64_t v77 = specialized static Entity.entityInfoType(_:)(v26);
        if (v77)
        {
          uint64_t v78 = (*(uint64_t (**)(void))(v77 + 232))();
          uint64_t v79 = *(void *)(v78 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v79, 0);
          *(void *)(v78 + 16) = v26;
          MEMORY[0x22A68E750](v26, v78);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v26);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v80 = swift_allocObject();
      swift_weakInit();
      *(void *)(v80 + 16) = v25;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v81 = String.init(cString:)();
      uint64_t v83 = v82;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v84 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        uint64_t v85 = a5;
        swift_bridgeObjectRetain();
        uint64_t v86 = specialized __RawDictionaryStorage.find<A>(_:)(v81, v83);
        if (v87)
        {
          unint64_t v88 = (uint64_t *)(*(void *)(v84 + 56) + 56 * v86);
          char v89 = v88[1];
          v316 = *v88;
          long long v90 = v88[2];
          uint64_t v91 = v88[3];
          uint64_t v92 = v88[4];
          uint64_t v93 = v88[5];
          uint64_t v94 = v88[6];
          swift_bridgeObjectRelease();
LABEL_108:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v393 = v321;
          BYTE8(v393) = 0;
          *(void *)&v394 = v328;
          *((void *)&v394 + 1) = v316;
          *(void *)&v395 = v89;
          *((void *)&v395 + 1) = v90;
          *(void *)&v396 = v91;
          *((void *)&v396 + 1) = v92;
          *(void *)&v397 = v93;
          *((void *)&v397 + 1) = v94;
          char v278 = v91;
          uint64_t v284 = v90;
          unint64_t v275 = v92;
          uint64_t v271 = v94;
          if (v303 && REBindPointBoundComponent())
          {
            uint64_t v175 = REComponentGetEntity();
            unint64_t v176 = v85;
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v177 = swift_dynamicCastClassUnconditional();
LABEL_112:
              uint64_t v178 = v177;
              goto LABEL_114;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_238:
              __break(1u);
              goto LABEL_239;
            }
            uint64_t v240 = specialized static Entity.entityInfoType(_:)(v175);
            if (!v240)
            {
              uint64_t v177 = makeEntity(for:)(v175);
              goto LABEL_112;
            }
            uint64_t v178 = (*(uint64_t (**)(void))(v240 + 232))();
            int v241 = *(void *)(v178 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v241, 0);
            *(void *)(v178 + 16) = v175;
            MEMORY[0x22A68E750](v175, v178);
            swift_release();
          }
          else
          {
            uint64_t v178 = 0;
            unint64_t v176 = v85;
          }
LABEL_114:
          specialized ActionEventData.action<A>()(&v390);
          uint64_t v179 = v391;
          if (v391)
          {
            v180 = v392;
            uint64_t v181 = v390;
            swift_retain();
            unint64_t v267 = v180;
            outlined copy of NotificationAction?(v181, v179);
            uint64_t v182 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<NotificationAction>);
            char v357 = v394;
            unint64_t v358 = v395;
            char v359 = v396;
            uint64_t v360 = v397;
            uint64_t v183 = v27;
            uint64_t v184 = v28;
            long long v341 = v179;
            long long v342 = v180;
            LOBYTE(v180) = v182 & 1;
            uint64_t v343 = v182 & 1;
            long long v339 = v80;
            long long v340 = v181;
            uint64_t v344 = v178;
            __int16 v345 = v296;
            char v346 = v183;
            char v347 = v184;
            uint64_t v348 = v9;
            char v349 = v290;
            double v350 = -1.0;
            double v351 = 0;
            uint64_t v352 = 0xBFF0000000000000;
            uint64_t v353 = 0;
            double v354 = 0xBFF0000000000000;
            char v355 = 0;
            unint64_t v356 = v393;
            char v361 = v307;
            swift_retain();
            swift_retain();
            v176(&v339);
            outlined consume of NotificationAction?(v181, v179);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v362 = v80;
            uint64_t v363 = v181;
            uint64_t v364 = v179;
            uint64_t v365 = v267;
            uint64_t v366 = v180;
            uint64_t v367 = v178;
            uint64_t v368 = v296;
            uint64_t v369 = v183;
            uint64_t v370 = v184;
            unsigned __int16 v371 = v9;
            unsigned __int8 v372 = v290;
            long long v373 = -1.0;
            long long v374 = 0;
            long long v375 = 0xBFF0000000000000;
            long long v376 = 0;
            long long v377 = 0xBFF0000000000000;
            v378 = 0;
            v379 = v321;
            v380 = 0;
            v381 = v328;
            v382 = v316;
            v383 = v89;
            v384 = v284;
            v385 = v278;
            v386 = v275;
            v387 = v93;
            v162 = v271;
            goto LABEL_116;
          }
          goto LABEL_215;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v85 = a5;
      }
      v316 = 0;
      char v89 = 0;
      long long v90 = 0;
      uint64_t v91 = 0;
      uint64_t v92 = 0;
      uint64_t v93 = 0;
      uint64_t v94 = 0;
      goto LABEL_108;
    case 8:
      uint64_t v30 = *(void *)a2;
      float v29 = *(void *)(a2 + 8);
      uint64_t v322 = *(void *)(a2 + 32);
      double v329 = *(void *)(a2 + 40);
      uint64_t v297 = *(void *)(a2 + 56);
      uint64_t v302 = *(void *)(a2 + 48);
      uint64_t v31 = *(float *)(a2 + 64);
      uint64_t v32 = *(float *)(a2 + 68);
      uint64_t v283 = *(unsigned char *)(a2 + 72);
      uint64_t v291 = *(void *)(a2 + 80);
      uint64_t v309 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_230:
          __break(1u);
          goto LABEL_231;
        }
        uint64_t v95 = specialized static Entity.entityInfoType(_:)(v30);
        if (v95)
        {
          uint64_t v96 = (*(uint64_t (**)(void))(v95 + 232))();
          uint64_t v97 = *(void *)(v96 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v97, 0);
          *(void *)(v96 + 16) = v30;
          MEMORY[0x22A68E750](v30, v96);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v30);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v98 = swift_allocObject();
      swift_weakInit();
      *(void *)(v98 + 16) = v29;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v99 = String.init(cString:)();
      uint64_t v101 = v100;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v102 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        uint64_t v103 = a5;
        swift_bridgeObjectRetain();
        uint64_t v104 = specialized __RawDictionaryStorage.find<A>(_:)(v99, v101);
        if (v105)
        {
          uint64_t v106 = (uint64_t *)(*(void *)(v102 + 56) + 56 * v104);
          unint64_t v107 = *v106;
          v317 = v106[1];
          char v108 = v106[2];
          char v109 = v106[3];
          uint64_t v111 = v106[4];
          uint64_t v110 = v106[5];
          uint64_t v112 = v106[6];
          swift_bridgeObjectRelease();
LABEL_119:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v393 = v322;
          BYTE8(v393) = 0;
          *(void *)&v394 = v329;
          *((void *)&v394 + 1) = v107;
          *(void *)&v395 = v317;
          *((void *)&v395 + 1) = v108;
          *(void *)&v396 = v109;
          *((void *)&v396 + 1) = v111;
          *(void *)&v397 = v110;
          *((void *)&v397 + 1) = v112;
          unint64_t v274 = v109;
          uint64_t v279 = v108;
          uint64_t v270 = v110;
          unint64_t v272 = v111;
          unint64_t v268 = v112;
          if (v297 && REBindPointBoundComponent())
          {
            uint64_t v186 = REComponentGetEntity();
            uint64_t v187 = v103;
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v188 = swift_dynamicCastClassUnconditional();
LABEL_123:
              uint64_t v189 = v188;
              goto LABEL_125;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_239:
              __break(1u);
              goto LABEL_240;
            }
            char v242 = specialized static Entity.entityInfoType(_:)(v186);
            if (!v242)
            {
              uint64_t v188 = makeEntity(for:)(v186);
              goto LABEL_123;
            }
            uint64_t v189 = (*(uint64_t (**)(void))(v242 + 232))();
            char v243 = *(void *)(v189 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v243, 0);
            *(void *)(v189 + 16) = v186;
            MEMORY[0x22A68E750](v186, v189);
            swift_release();
          }
          else
          {
            uint64_t v189 = 0;
            uint64_t v187 = v103;
          }
LABEL_125:
          specialized ActionEventData.action<A>()(&v390);
          uint64_t v190 = v391;
          if (v391)
          {
            uint64_t v191 = v392;
            uint64_t v192 = v390;
            swift_retain();
            outlined copy of NotificationAction?(v192, v190);
            uint64_t v193 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<NotificationAction>);
            char v357 = v394;
            unint64_t v358 = v395;
            char v359 = v396;
            uint64_t v360 = v397;
            uint64_t v194 = v31;
            unint64_t v195 = v32;
            long long v341 = v190;
            long long v342 = v191;
            uint64_t v299 = v107;
            char v196 = v193 & 1;
            uint64_t v343 = v193 & 1;
            long long v339 = v98;
            long long v340 = v192;
            uint64_t v344 = v189;
            __int16 v345 = v283;
            char v346 = v194;
            char v347 = v195;
            char v349 = 0;
            double v350 = 0.0;
            uint64_t v348 = v9;
            double v351 = 1;
            uint64_t v352 = v291;
            uint64_t v353 = 0;
            double v354 = v309;
            char v355 = 0;
            unint64_t v356 = v393;
            char v361 = v302;
            swift_retain();
            swift_retain();
            v187(&v339);
            outlined consume of NotificationAction?(v192, v190);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v362 = v98;
            uint64_t v363 = v192;
            uint64_t v364 = v190;
            uint64_t v365 = v191;
            uint64_t v366 = v196;
            uint64_t v367 = v189;
            uint64_t v368 = v283;
            uint64_t v369 = v194;
            uint64_t v370 = v195;
            unsigned __int8 v372 = 0;
            long long v373 = 0.0;
            unsigned __int16 v371 = v9;
            long long v374 = 1;
            long long v375 = v291;
            long long v376 = 0;
            long long v377 = v309;
            v378 = 0;
            v379 = v322;
            v380 = 0;
            v381 = v329;
            v382 = v299;
            v383 = v317;
            int v174 = v279;
            goto LABEL_127;
          }
LABEL_215:
          swift_release();
          swift_release();
          swift_release();
LABEL_216:
          swift_release();
          return 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v103 = a5;
      }
      unint64_t v107 = 0;
      v317 = 0;
      char v108 = 0;
      char v109 = 0;
      uint64_t v111 = 0;
      uint64_t v110 = 0;
      uint64_t v112 = 0;
      goto LABEL_119;
    case 16:
      float v34 = *(void *)a2;
      float v33 = *(void *)(a2 + 8);
      uint64_t v330 = *(void *)(a2 + 40);
      uint64_t v310 = *(void *)(a2 + 56);
      uint64_t v313 = *(void *)(a2 + 48);
      uint64_t v304 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_231:
          __break(1u);
          goto LABEL_232;
        }
        uint64_t v113 = specialized static Entity.entityInfoType(_:)(v34);
        if (v113)
        {
          uint64_t v114 = (*(uint64_t (**)(void))(v113 + 232))();
          uint64_t v115 = *(void *)(v114 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v115, 0);
          *(void *)(v114 + 16) = v34;
          MEMORY[0x22A68E750](v34, v114);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v116 = swift_allocObject();
      swift_weakInit();
      *(void *)(v116 + 16) = v33;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v117 = String.init(cString:)();
      uint64_t v119 = v118;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v120 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        uint64_t v121 = a5;
        swift_bridgeObjectRetain();
        uint64_t v122 = specialized __RawDictionaryStorage.find<A>(_:)(v117, v119);
        if (v123)
        {
          unint64_t v124 = (uint64_t *)(*(void *)(v120 + 56) + 56 * v122);
          char v125 = *v124;
          char v126 = v124[1];
          uint64_t v127 = v124[3];
          char v324 = v124[2];
          uint64_t v128 = v124[4];
          uint64_t v129 = v124[5];
          uint64_t v130 = v124[6];
          swift_bridgeObjectRelease();
LABEL_131:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v393 = 0;
          BYTE8(v393) = 0;
          *(void *)&v394 = v330;
          *((void *)&v394 + 1) = v125;
          *(void *)&v395 = v126;
          *((void *)&v395 + 1) = v324;
          *(void *)&v396 = v127;
          *((void *)&v396 + 1) = v128;
          *(void *)&v397 = v129;
          *((void *)&v397 + 1) = v130;
          uint64_t v292 = v129;
          uint64_t v300 = v128;
          uint64_t v285 = v130;
          if (v310 && REBindPointBoundComponent())
          {
            v197 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v198 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_240:
                __break(1u);
                goto LABEL_241;
              }
              uint64_t v244 = specialized static Entity.entityInfoType(_:)(v197);
              if (v244)
              {
                uint64_t v199 = (*(uint64_t (**)(void))(v244 + 232))();
                char v245 = *(void *)(v199 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v245, 0);
                *(void *)(v199 + 16) = v197;
                MEMORY[0x22A68E750](v197, v199);
                swift_release();
                goto LABEL_137;
              }
              uint64_t v198 = makeEntity(for:)(v197);
            }
            uint64_t v199 = v198;
          }
          else
          {
            uint64_t v199 = 0;
          }
LABEL_137:
          specialized ActionEventData.action<A>()(&v390);
          uint64_t v200 = v391;
          if (!v391) {
            goto LABEL_215;
          }
          uint64_t v201 = v393;
          char v357 = v394;
          unint64_t v358 = v395;
          char v359 = v396;
          uint64_t v360 = v397;
          uint64_t v312 = v127;
          uint64_t v202 = v392;
          uint64_t v280 = v126;
          uint64_t v203 = v121;
          goto LABEL_149;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v121 = a5;
      }
      char v125 = 0;
      char v126 = 0;
      char v324 = 0;
      uint64_t v127 = 0;
      uint64_t v128 = 0;
      uint64_t v129 = 0;
      uint64_t v130 = 0;
      goto LABEL_131;
    case 32:
      uint64_t v36 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      uint64_t v330 = *(void *)(a2 + 40);
      uint64_t v311 = *(void *)(a2 + 56);
      uint64_t v313 = *(void *)(a2 + 48);
      uint64_t v304 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_232:
          __break(1u);
          goto LABEL_233;
        }
        uint64_t v131 = specialized static Entity.entityInfoType(_:)(v36);
        if (v131)
        {
          uint64_t v132 = (*(uint64_t (**)(void))(v131 + 232))();
          uint64_t v133 = *(void *)(v132 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v133, 0);
          *(void *)(v132 + 16) = v36;
          MEMORY[0x22A68E750](v36, v132);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v116 = swift_allocObject();
      swift_weakInit();
      *(void *)(v116 + 16) = v35;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v134 = String.init(cString:)();
      uint64_t v136 = v135;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v137 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_140;
      }
      swift_bridgeObjectRetain();
      uint64_t v138 = specialized __RawDictionaryStorage.find<A>(_:)(v134, v136);
      if (v139)
      {
        unint64_t v140 = (uint64_t *)(*(void *)(v137 + 56) + 56 * v138);
        char v125 = *v140;
        char v141 = v140[1];
        unint64_t v142 = v140[3];
        char v324 = v140[2];
        uint64_t v143 = v140[4];
        uint64_t v144 = v140[5];
        uint64_t v145 = v140[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_140:
        char v125 = 0;
        char v141 = 0;
        char v324 = 0;
        unint64_t v142 = 0;
        uint64_t v143 = 0;
        uint64_t v144 = 0;
        uint64_t v145 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v393 = 0;
      BYTE8(v393) = 0;
      *(void *)&v394 = v330;
      *((void *)&v394 + 1) = v125;
      *(void *)&v395 = v141;
      *((void *)&v395 + 1) = v324;
      *(void *)&v396 = v142;
      *((void *)&v396 + 1) = v143;
      *(void *)&v397 = v144;
      *((void *)&v397 + 1) = v145;
      uint64_t v292 = v144;
      uint64_t v300 = v143;
      uint64_t v285 = v145;
      if (v311 && REBindPointBoundComponent())
      {
        int v204 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v205 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_241:
            __break(1u);
            goto LABEL_242;
          }
          uint64_t v246 = specialized static Entity.entityInfoType(_:)(v204);
          if (v246)
          {
            uint64_t v199 = (*(uint64_t (**)(void))(v246 + 232))();
            uint64_t v247 = *(void *)(v199 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v247, 0);
            *(void *)(v199 + 16) = v204;
            MEMORY[0x22A68E750](v204, v199);
            swift_release();
            goto LABEL_147;
          }
          uint64_t v205 = makeEntity(for:)(v204);
        }
        uint64_t v199 = v205;
      }
      else
      {
        uint64_t v199 = 0;
      }
LABEL_147:
      specialized ActionEventData.action<A>()(&v390);
      uint64_t v200 = v391;
      if (!v391) {
        goto LABEL_215;
      }
      uint64_t v201 = v393;
      char v357 = v394;
      unint64_t v358 = v395;
      char v359 = v396;
      uint64_t v360 = v397;
      uint64_t v312 = v142;
      uint64_t v202 = v392;
      uint64_t v280 = v141;
      uint64_t v203 = a5;
LABEL_149:
      uint64_t v206 = v9;
      int v207 = v390;
      long long v341 = v200;
      long long v342 = v202;
      uint64_t v343 = 1;
      long long v339 = v116;
      long long v340 = v390;
      uint64_t v344 = v199;
      __int16 v345 = 0;
      char v346 = 0.0;
      char v347 = 0.0;
      char v349 = 0;
      double v350 = 0.0;
      uint64_t v348 = v206;
      double v351 = 1;
      uint64_t v352 = v304;
      uint64_t v353 = 0;
      double v354 = 0;
      char v355 = 1;
      unint64_t v356 = v201;
      char v361 = v313;
      swift_retain();
      swift_retain();
      outlined copy of NotificationAction?(v207, v200);
      swift_retain();
      v203(&v339);
      outlined consume of NotificationAction?(v207, v200);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v362 = v116;
      uint64_t v363 = v207;
      uint64_t v364 = v200;
      uint64_t v365 = v202;
      uint64_t v366 = 1;
      uint64_t v367 = v199;
      uint64_t v368 = 0;
      uint64_t v369 = 0.0;
      uint64_t v370 = 0.0;
      unsigned __int8 v372 = 0;
      long long v373 = 0.0;
      unsigned __int16 v371 = v206;
      long long v374 = 1;
      long long v375 = v304;
      long long v376 = 0;
      long long v377 = 0;
      v378 = 1;
      v379 = 0;
      v380 = 0;
      v381 = v330;
      v382 = v125;
      v383 = v280;
      v384 = v324;
      v385 = v312;
      v386 = v300;
      v387 = v292;
      v388 = v285;
      uint64_t v185 = v313;
      goto LABEL_150;
    case 64:
      uint64_t v38 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v39 = *(void *)(a2 + 24);
      uint64_t v40 = *(void *)(a2 + 32);
      uint64_t v41 = *(void *)(a2 + 40);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_233:
          __break(1u);
          goto LABEL_234;
        }
        uint64_t v146 = specialized static Entity.entityInfoType(_:)(v38);
        if (v146)
        {
          uint64_t v147 = (*(uint64_t (**)(void))(v146 + 232))();
          uint64_t v148 = *(void *)(v147 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v148, 0);
          *(void *)(v147 + 16) = v38;
          MEMORY[0x22A68E750](v38, v147);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v149 = swift_allocObject();
      swift_weakInit();
      *(void *)(v149 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      if (v41)
      {
        uint64_t v150 = v39;
        if (REBindPointBoundComponent())
        {
          uint64_t v151 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            uint64_t v152 = swift_dynamicCastClassUnconditional();
LABEL_77:
            uint64_t v41 = v152;
            goto LABEL_166;
          }
          if (REEntityIsBeingDestroyed())
          {
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
            goto LABEL_237;
          }
          uint64_t v215 = specialized static Entity.entityInfoType(_:)(v151);
          if (!v215)
          {
            uint64_t v152 = makeEntity(for:)(v151);
            goto LABEL_77;
          }
          uint64_t v41 = (*(uint64_t (**)(void))(v215 + 232))();
          int v216 = *(void *)(v41 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v216, 0);
          *(void *)(v41 + 16) = v151;
          MEMORY[0x22A68E750](v151, v41);
          swift_release();
        }
        else
        {
          uint64_t v41 = 0;
        }
      }
      else
      {
        uint64_t v150 = v39;
      }
LABEL_166:
      char v217 = String.init(cString:)();
      uint64_t v219 = v218;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      int v220 = static AnimationResource.codableActionTypeMap;
      char v337 = a5;
      v318 = v40;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        char v221 = specialized __RawDictionaryStorage.find<A>(_:)(v217, v219);
        if (v222)
        {
          uint64_t v223 = (uint64_t *)(*(void *)(v220 + 56) + 56 * v221);
          uint64_t v224 = *v223;
          uint64_t v225 = v223[1];
          uint64_t v226 = v223[2];
          uint64_t v227 = v223[3];
          uint64_t v228 = v223[4];
          uint64_t v331 = v223[6];
          unint64_t v334 = v223[5];
          swift_bridgeObjectRelease();
LABEL_173:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v393 = 0;
          BYTE8(v393) = 0;
          *(void *)&v394 = v150;
          *((void *)&v394 + 1) = v224;
          *(void *)&v395 = v225;
          *((void *)&v395 + 1) = v226;
          *(void *)&v396 = v227;
          *((void *)&v396 + 1) = v228;
          *(void *)&v397 = v334;
          *((void *)&v397 + 1) = v331;
          specialized ActionEventData.action<A>()(&v390);
          uint64_t v229 = v391;
          if (!v391) {
            goto LABEL_215;
          }
          char v357 = v394;
          unint64_t v358 = v395;
          char v359 = v396;
          uint64_t v360 = v397;
          uint64_t v305 = v227;
          uint64_t v230 = v392;
          uint64_t v293 = v224;
          uint64_t v231 = v9;
          unint64_t v232 = v390;
          long long v341 = v391;
          long long v342 = v392;
          uint64_t v343 = 1;
          long long v339 = v149;
          long long v340 = v390;
          uint64_t v344 = v41;
          __int16 v345 = 0;
          char v346 = 0.0;
          char v347 = 0.0;
          char v349 = 0;
          double v350 = 0.0;
          uint64_t v348 = v231;
          double v351 = 1;
          uint64_t v352 = 0;
          uint64_t v353 = 1;
          double v354 = 0;
          char v355 = 1;
          unint64_t v356 = v393;
          uint64_t v286 = v226;
          char v233 = v225;
          v234 = v318;
          char v361 = v318;
          swift_retain();
          swift_retain();
          outlined copy of NotificationAction?(v232, v229);
          swift_retain();
          v337(&v339);
          outlined consume of NotificationAction?(v232, v229);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v362 = v149;
          uint64_t v363 = v232;
          uint64_t v364 = v229;
          uint64_t v365 = v230;
          uint64_t v366 = 1;
          uint64_t v367 = v41;
          uint64_t v368 = 0;
          uint64_t v369 = 0.0;
          uint64_t v370 = 0.0;
          unsigned __int8 v372 = 0;
          long long v373 = 0.0;
          unsigned __int16 v371 = v231;
          long long v374 = 1;
          long long v375 = 0;
          long long v376 = 1;
          long long v377 = 0;
          v378 = 1;
          v379 = 0;
          v380 = 0;
          v381 = v150;
          v382 = v293;
          v383 = v233;
          v384 = v286;
          v385 = v305;
          v386 = v228;
          v387 = v334;
          uint64_t v235 = v331;
LABEL_213:
          v388 = v235;
          v389 = v234;
          goto LABEL_214;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v224 = 0;
      uint64_t v225 = 0;
      uint64_t v226 = 0;
      uint64_t v227 = 0;
      uint64_t v228 = 0;
      uint64_t v331 = 0;
      unint64_t v334 = 0;
      goto LABEL_173;
    default:
      if (a4 != 128) {
        goto LABEL_216;
      }
      uint64_t v16 = *(void *)a2;
      uint64_t v15 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 24);
      uint64_t v18 = *(void *)(a2 + 32);
      uint64_t v19 = *(void *)(a2 + 40);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_234:
          __break(1u);
          goto LABEL_235;
        }
        char v208 = specialized static Entity.entityInfoType(_:)(v16);
        if (v208)
        {
          uint64_t v209 = (*(uint64_t (**)(void))(v208 + 232))();
          uint64_t v210 = *(void *)(v209 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v210, 0);
          *(void *)(v209 + 16) = v16;
          MEMORY[0x22A68E750](v16, v209);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v16);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      int v211 = swift_allocObject();
      swift_weakInit();
      *(void *)(v211 + 16) = v15;
      swift_beginAccess();
      swift_weakAssign();
      if (v19)
      {
        char v212 = v17;
        if (REBindPointBoundComponent())
        {
          double v213 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            uint64_t v214 = swift_dynamicCastClassUnconditional();
LABEL_159:
            uint64_t v19 = v214;
            goto LABEL_204;
          }
          if (REEntityIsBeingDestroyed())
          {
LABEL_242:
            __break(1u);
            JUMPOUT(0x227FC21E0);
          }
          uint64_t v248 = specialized static Entity.entityInfoType(_:)(v213);
          if (!v248)
          {
            uint64_t v214 = makeEntity(for:)(v213);
            goto LABEL_159;
          }
          uint64_t v19 = (*(uint64_t (**)(void))(v248 + 232))();
          uint64_t v249 = *(void *)(v19 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v249, 0);
          *(void *)(v19 + 16) = v213;
          MEMORY[0x22A68E750](v213, v19);
          swift_release();
        }
        else
        {
          uint64_t v19 = 0;
        }
      }
      else
      {
        char v212 = v17;
      }
LABEL_204:
      uint64_t v250 = String.init(cString:)();
      uint64_t v252 = v251;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v253 = static AnimationResource.codableActionTypeMap;
      long long v338 = a5;
      v319 = v18;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v254 = specialized __RawDictionaryStorage.find<A>(_:)(v250, v252);
        if (v255)
        {
          uint64_t v256 = (uint64_t *)(*(void *)(v253 + 56) + 56 * v254);
          uint64_t v257 = *v256;
          uint64_t v258 = v256[1];
          unint64_t v260 = v256[2];
          uint64_t v259 = v256[3];
          double v332 = v256[5];
          char v335 = v256[4];
          char v325 = v256[6];
          swift_bridgeObjectRelease();
LABEL_211:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v393 = 0;
          BYTE8(v393) = 0;
          *(void *)&v394 = v212;
          *((void *)&v394 + 1) = v257;
          *(void *)&v395 = v258;
          *((void *)&v395 + 1) = v260;
          *(void *)&v396 = v259;
          *((void *)&v396 + 1) = v335;
          *(void *)&v397 = v332;
          *((void *)&v397 + 1) = v325;
          specialized ActionEventData.action<A>()(&v390);
          char v261 = v391;
          if (!v391) {
            goto LABEL_215;
          }
          char v357 = v394;
          unint64_t v358 = v395;
          char v359 = v396;
          uint64_t v360 = v397;
          uint64_t v306 = v260;
          char v262 = v392;
          uint64_t v263 = v9;
          uint64_t v264 = v390;
          long long v341 = v391;
          long long v342 = v392;
          uint64_t v343 = 1;
          long long v339 = v211;
          long long v340 = v390;
          uint64_t v344 = v19;
          __int16 v345 = 0;
          char v346 = 0.0;
          char v347 = 0.0;
          char v349 = 0;
          double v350 = 0.0;
          uint64_t v348 = v263;
          double v351 = 1;
          uint64_t v352 = 0;
          uint64_t v353 = 1;
          double v354 = 0;
          char v355 = 1;
          unint64_t v356 = v393;
          uint64_t v287 = v257;
          v234 = v319;
          char v361 = v319;
          swift_retain();
          swift_retain();
          outlined copy of NotificationAction?(v264, v261);
          swift_retain();
          v338(&v339);
          swift_release();
          outlined consume of NotificationAction?(v264, v261);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v362 = v211;
          uint64_t v363 = v264;
          uint64_t v364 = v261;
          uint64_t v365 = v262;
          uint64_t v366 = 1;
          uint64_t v367 = v19;
          uint64_t v368 = 0;
          uint64_t v369 = 0.0;
          uint64_t v370 = 0.0;
          unsigned __int8 v372 = 0;
          long long v373 = 0.0;
          unsigned __int16 v371 = v263;
          long long v374 = 1;
          long long v375 = 0;
          long long v376 = 1;
          long long v377 = 0;
          v378 = 1;
          v379 = 0;
          v380 = 0;
          v381 = v212;
          v382 = v287;
          v383 = v258;
          v384 = v306;
          v385 = v259;
          v386 = v335;
          v387 = v332;
          uint64_t v235 = v325;
          goto LABEL_213;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v257 = 0;
      uint64_t v258 = 0;
      unint64_t v260 = 0;
      uint64_t v259 = 0;
      double v332 = 0;
      char v335 = 0;
      char v325 = 0;
      goto LABEL_211;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  float v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  float v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  float v34;
  float v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t Entity;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unsigned __int16 v168;
  char v169;
  double v170;
  double v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unsigned __int16 v182;
  char v183;
  double v184;
  double v185;
  double v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned __int16 v197;
  char v198;
  double v199;
  double v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  unsigned __int16 v211;
  char v212;
  double v213;
  double v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  char v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  char v272;
  char v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char v290;
  char v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  char v296;
  unint64_t v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  int v301;
  unint64_t v302;
  int v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  int v309;
  char v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char v314;
  char v315;
  uint64_t v316;
  unint64_t v317;
  unint64_t v318;
  uint64_t v319;
  char v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  unint64_t v333;
  char v334;
  char v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  unint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  unint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t Strong;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  __int16 v379;
  uint64_t v380;
  uint64_t v381;
  __int16 v382;
  char v383;
  uint64_t v384;
  char v385;
  double v386;
  double v387;
  uint64_t v388;
  uint64_t v389;
  double v390;
  char v391;
  unint64_t v392;
  char v393;
  unint64_t v394;
  char v395;
  long long v396;
  long long v397;
  long long v398;
  long long v399;
  long long v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  char v407;
  char v408;
  uint64_t v409;
  uint64_t v410;
  __int16 v411;
  char v412;
  uint64_t v413;
  char v414;
  double v415;
  double v416;
  uint64_t v417;
  uint64_t v418;
  double v419;
  char v420;
  unint64_t v421;
  char v422;
  unint64_t v423;
  char v424;
  uint64_t v425;
  char v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  unint64_t v440;
  uint64_t v441;
  uint64_t v442;
  unsigned __int16 v443;
  long long v444;
  long long v445;
  long long v446;
  long long v447;
  long long v448;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      unint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v9 = *(void *)(a2 + 48);
      uint64_t v363 = *(void *)(a2 + 32);
      uint64_t v369 = *(void *)(a2 + 40);
      uint64_t v10 = *(void *)(a2 + 64);
      uint64_t v11 = *(float *)(a2 + 72);
      uint64_t v12 = *(float *)(a2 + 76);
      v320 = *(unsigned char *)(a2 + 80);
      char v327 = *(void *)(a2 + 88);
      double v332 = *(void *)(a2 + 96);
      long long v339 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_213;
      }
      uint64_t v44 = specialized static Entity.entityInfoType(_:)(v7);
      if (v44)
      {
        uint64_t v45 = (*(uint64_t (**)(void))(v44 + 232))();
        uint64_t v46 = *(void *)(v45 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v46, 0);
        *(void *)(v45 + 16) = v7;
        MEMORY[0x22A68E750](v7, v45);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v7);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v47 = swift_allocObject();
      swift_weakInit();
      uint64_t v48 = v47;
      *(void *)(v47 + 16) = v8;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v49 = String.init(cString:)();
      uint64_t v51 = v50;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v52 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_86;
      }
      swift_bridgeObjectRetain();
      unint64_t v53 = specialized __RawDictionaryStorage.find<A>(_:)(v49, v51);
      if ((v54 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_86:
        uint64_t v352 = 0;
        uint64_t v362 = 0;
        uint64_t v56 = 0;
        char v346 = 0;
        uint64_t v57 = 0;
        uint64_t v59 = 0;
        uint64_t v58 = 0;
        goto LABEL_87;
      }
      uint64_t v55 = (uint64_t *)(*(void *)(v52 + 56) + 56 * v53);
      uint64_t v56 = v55[1];
      uint64_t v352 = v55[2];
      uint64_t v362 = *v55;
      uint64_t v57 = v55[4];
      char v346 = v55[3];
      uint64_t v59 = v55[5];
      uint64_t v58 = v55[6];
      swift_bridgeObjectRelease();
LABEL_87:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v444 = v363;
      BYTE8(v444) = 0;
      *(void *)&v445 = v369;
      *((void *)&v445 + 1) = v362;
      *(void *)&v446 = v56;
      *((void *)&v446 + 1) = v352;
      *(void *)&v447 = v346;
      *((void *)&v447 + 1) = v57;
      *(void *)&v448 = v59;
      *((void *)&v448 + 1) = v58;
      v316 = v9;
      uint64_t v287 = v57;
      uint64_t v292 = v56;
      uint64_t v283 = v58;
      if (!v10 || !REBindPointBoundComponent())
      {
        uint64_t v304 = 0;
        goto LABEL_93;
      }
      uint64_t Entity = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v160 = swift_dynamicCastClassUnconditional();
LABEL_91:
        uint64_t v304 = v160;
        goto LABEL_93;
      }
      if (REEntityIsBeingDestroyed()) {
        goto LABEL_221;
      }
      uint64_t v256 = specialized static Entity.entityInfoType(_:)(Entity);
      if (!v256)
      {
        uint64_t v160 = makeEntity(for:)(Entity);
        goto LABEL_91;
      }
      uint64_t v257 = (*(uint64_t (**)(void))(v256 + 232))();
      uint64_t v258 = *(void *)(v257 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v258, 0);
      *(void *)(v257 + 16) = Entity;
      MEMORY[0x22A68E750](Entity, v257);
      uint64_t v304 = v257;
      swift_release();
LABEL_93:
      specialized ActionEventData.action<A>()((uint64_t)&v436);
      uint64_t v161 = v437;
      if (!v437) {
        goto LABEL_173;
      }
      v162 = v442;
      uint64_t v163 = v441;
      uint64_t v164 = v440;
      uint64_t v165 = v439;
      uint64_t v166 = v438;
      uint64_t v167 = v436;
      uint64_t v277 = v436;
      uint64_t v298 = v440 >> 8;
      uint64_t v168 = v443;
      swift_retain();
      outlined copy of PlayAnimationAction?(v167, v161);
      uint64_t v169 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAnimationAction>);
      v397 = v445;
      v398 = v446;
      v399 = v447;
      v400 = v448;
      uint64_t v170 = v11;
      uint64_t v171 = v12;
      long long v376 = v161;
      long long v377 = v166;
      v378 = v165;
      LOBYTE(v379) = v164 & 1;
      HIBYTE(v379) = v298;
      v380 = v163;
      v381 = v162;
      v382 = v168 & 0x101;
      unint64_t v272 = v169 & 1;
      v383 = v169 & 1;
      long long v374 = v48;
      long long v375 = v277;
      v384 = v304;
      v385 = v320;
      v386 = v170;
      v387 = v171;
      v388 = Strong;
      v389 = v339;
      v390 = -1.0;
      v391 = 0;
      v392 = v327;
      v393 = 0;
      v394 = v332;
      v395 = 0;
      v396 = v444;
      v401 = v316;
      swift_retain();
      swift_retain();
      a5(&v374);
      outlined consume of PlayAnimationAction?(v277, v161);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v402 = v48;
      v403 = v277;
      v404 = v161;
      v405 = v166;
      v406 = v165;
      v407 = v164 & 1;
      v408 = v298;
      v409 = v163;
      v410 = v162;
      v411 = v168 & 0x101;
      v412 = v272;
      v413 = v304;
      v414 = v320;
      v415 = v170;
      v416 = v171;
      v417 = Strong;
      v418 = v339;
      v419 = -1.0;
      v420 = 0;
      v421 = v327;
      v422 = 0;
      v423 = v332;
      v424 = 0;
      v425 = v363;
      v426 = 0;
      v427 = v369;
      v428 = v362;
      v429 = v292;
      v430 = v352;
      v431 = v346;
      v432 = v287;
      v433 = v59;
      v434 = v283;
      unsigned int v172 = v316;
LABEL_172:
      v435 = v172;
      outlined release of ActionEvent<PlayAnimationAction>((uint64_t)&v402);
      return 0;
    case 2:
      uint64_t v18 = *(void *)a2;
      uint64_t v19 = *(void *)(a2 + 8);
      char v359 = *(void *)(a2 + 32);
      uint64_t v364 = *(void *)(a2 + 40);
      uint64_t v20 = *(float *)(a2 + 56);
      double v328 = *(void *)(a2 + 64);
      char v333 = *(void *)(a2 + 48);
      uint64_t v21 = *(void *)(a2 + 80);
      v321 = *(void *)(a2 + 72);
      float v22 = *(void *)(a2 + 88);
      float v23 = *(float *)(a2 + 96);
      float v24 = *(float *)(a2 + 100);
      v315 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_213:
          __break(1u);
          goto LABEL_214;
        }
        uint64_t v60 = specialized static Entity.entityInfoType(_:)(v18);
        if (v60)
        {
          uint64_t v61 = (*(uint64_t (**)(void))(v60 + 232))();
          uint64_t v62 = *(void *)(v61 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v62, 0);
          *(void *)(v61 + 16) = v18;
          MEMORY[0x22A68E750](v18, v61);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v18);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      long long v342 = swift_allocObject();
      swift_weakInit();
      *(void *)(v342 + 16) = v19;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v63 = String.init(cString:)();
      uint64_t v65 = v64;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v66 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        uint64_t v67 = v21;
        swift_bridgeObjectRetain();
        uint64_t v68 = specialized __RawDictionaryStorage.find<A>(_:)(v63, v65);
        if (v69)
        {
          unint64_t v70 = (uint64_t *)(*(void *)(v66 + 56) + 56 * v68);
          char v71 = *v70;
          __int16 v72 = v70[1];
          uint64_t v73 = v70[4];
          char v347 = v70[3];
          uint64_t v353 = v70[2];
          uint64_t v74 = v70[5];
          uint64_t v75 = v70[6];
          swift_bridgeObjectRelease();
LABEL_98:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v444 = v359;
          BYTE8(v444) = 0;
          *(void *)&v445 = v364;
          *((void *)&v445 + 1) = v71;
          *(void *)&v446 = v72;
          *((void *)&v446 + 1) = v353;
          *(void *)&v447 = v347;
          *((void *)&v447 + 1) = v73;
          *(void *)&v448 = v74;
          *((void *)&v448 + 1) = v75;
          uint64_t v311 = v67;
          uint64_t v288 = v72;
          uint64_t v293 = v71;
          char v278 = v75;
          uint64_t v284 = v74;
          if (v22 && REBindPointBoundComponent())
          {
            unsigned int v173 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              int v174 = swift_dynamicCastClassUnconditional();
LABEL_102:
              uint64_t v305 = v174;
              goto LABEL_104;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_222:
              __break(1u);
              goto LABEL_223;
            }
            uint64_t v259 = specialized static Entity.entityInfoType(_:)(v173);
            if (!v259)
            {
              int v174 = makeEntity(for:)(v173);
              goto LABEL_102;
            }
            unint64_t v260 = (*(uint64_t (**)(void))(v259 + 232))();
            char v261 = *(void *)(v260 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v261, 0);
            *(void *)(v260 + 16) = v173;
            MEMORY[0x22A68E750](v173, v260);
            uint64_t v305 = v260;
            swift_release();
          }
          else
          {
            uint64_t v305 = 0;
          }
LABEL_104:
          specialized ActionEventData.action<A>()((uint64_t)&v436);
          uint64_t v175 = v437;
          if (v437)
          {
            unint64_t v176 = v442;
            uint64_t v177 = v441;
            uint64_t v178 = v440;
            uint64_t v179 = v439;
            v180 = v438;
            uint64_t v181 = v436;
            unint64_t v275 = v436;
            uint64_t v299 = v440 >> 8;
            uint64_t v182 = v443;
            swift_retain();
            outlined copy of PlayAnimationAction?(v181, v175);
            uint64_t v183 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAnimationAction>);
            v397 = v445;
            v398 = v446;
            v399 = v447;
            v400 = v448;
            uint64_t v184 = v23;
            uint64_t v185 = v24;
            uint64_t v186 = v20;
            long long v376 = v175;
            long long v377 = v180;
            v378 = v179;
            LOBYTE(v379) = v178 & 1;
            HIBYTE(v379) = v299;
            v380 = v177;
            v381 = v176;
            v382 = v182 & 0x101;
            uint64_t v271 = v183 & 1;
            v383 = v183 & 1;
            long long v374 = v342;
            long long v375 = v275;
            v384 = v305;
            v385 = v315;
            v386 = v184;
            v387 = v185;
            v388 = Strong;
            v389 = v321;
            v390 = v186;
            v391 = 0;
            v392 = v333;
            v393 = 0;
            v394 = v328;
            v395 = 0;
            v396 = v444;
            v401 = v311;
            swift_retain();
            swift_retain();
            a5(&v374);
            outlined consume of PlayAnimationAction?(v275, v175);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v402 = v342;
            v403 = v275;
            v404 = v175;
            v405 = v180;
            v406 = v179;
            v407 = v178 & 1;
            v408 = v299;
            v409 = v177;
            v410 = v176;
            v411 = v182 & 0x101;
            v412 = v271;
            v413 = v305;
            v414 = v315;
            v415 = v184;
            v416 = v185;
            v417 = Strong;
            v418 = v321;
            v419 = v186;
            v420 = 0;
            v421 = v333;
            v422 = 0;
            v423 = v328;
            v424 = 0;
            v425 = v359;
            v426 = 0;
            v427 = v364;
            v428 = v293;
            v429 = v288;
            v430 = v353;
            v431 = v347;
            v432 = v73;
            v433 = v284;
            v434 = v278;
            unsigned int v172 = v311;
            goto LABEL_172;
          }
LABEL_173:
          swift_release();
          swift_release();
          swift_release();
LABEL_174:
          swift_release();
          return 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v67 = v21;
      }
      char v71 = 0;
      __int16 v72 = 0;
      char v347 = 0;
      uint64_t v353 = 0;
      uint64_t v73 = 0;
      uint64_t v74 = 0;
      uint64_t v75 = 0;
      goto LABEL_98;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_174;
    case 4:
      uint64_t v25 = *(void *)a2;
      uint64_t v26 = *(void *)(a2 + 8);
      uint64_t v27 = *(void *)(a2 + 48);
      uint64_t v360 = *(void *)(a2 + 32);
      uint64_t v365 = *(void *)(a2 + 40);
      float v28 = *(void *)(a2 + 64);
      long long v340 = *(void *)(a2 + 56);
      float v29 = *(float *)(a2 + 72);
      uint64_t v30 = *(float *)(a2 + 76);
      unint64_t v334 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_214:
          __break(1u);
          goto LABEL_215;
        }
        uint64_t v76 = specialized static Entity.entityInfoType(_:)(v25);
        if (v76)
        {
          uint64_t v77 = (*(uint64_t (**)(void))(v76 + 232))();
          uint64_t v78 = *(void *)(v77 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v78, 0);
          *(void *)(v77 + 16) = v25;
          MEMORY[0x22A68E750](v25, v77);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v25);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      __int16 v323 = swift_allocObject();
      swift_weakInit();
      *(void *)(v323 + 16) = v26;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v79 = String.init(cString:)();
      uint64_t v81 = v80;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v82 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_108;
      }
      swift_bridgeObjectRetain();
      uint64_t v83 = specialized __RawDictionaryStorage.find<A>(_:)(v79, v81);
      if (v84)
      {
        uint64_t v85 = (uint64_t *)(*(void *)(v82 + 56) + 56 * v83);
        uint64_t v86 = *v85;
        uint64_t v87 = v85[1];
        unint64_t v88 = v85[4];
        uint64_t v348 = v85[2];
        double v354 = v85[3];
        char v89 = v85[5];
        long long v90 = v85[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_108:
        uint64_t v86 = 0;
        uint64_t v87 = 0;
        uint64_t v348 = 0;
        double v354 = 0;
        unint64_t v88 = 0;
        char v89 = 0;
        long long v90 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v444 = v360;
      BYTE8(v444) = 0;
      *(void *)&v445 = v365;
      *((void *)&v445 + 1) = v86;
      *(void *)&v446 = v87;
      *((void *)&v446 + 1) = v348;
      *(void *)&v447 = v354;
      *((void *)&v447 + 1) = v88;
      *(void *)&v448 = v89;
      *((void *)&v448 + 1) = v90;
      double v329 = v27;
      uint64_t v306 = v87;
      uint64_t v312 = v86;
      uint64_t v294 = v90;
      uint64_t v300 = v89;
      if (v28 && REBindPointBoundComponent())
      {
        uint64_t v187 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v188 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_223:
            __break(1u);
            goto LABEL_224;
          }
          char v262 = specialized static Entity.entityInfoType(_:)(v187);
          if (v262)
          {
            uint64_t v189 = (*(uint64_t (**)(void))(v262 + 232))();
            uint64_t v263 = *(void *)(v189 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v263, 0);
            *(void *)(v189 + 16) = v187;
            MEMORY[0x22A68E750](v187, v189);
            swift_release();
            goto LABEL_115;
          }
          uint64_t v188 = makeEntity(for:)(v187);
        }
        uint64_t v189 = v188;
      }
      else
      {
        uint64_t v189 = 0;
      }
LABEL_115:
      specialized ActionEventData.action<A>()((uint64_t)&v436);
      uint64_t v190 = v437;
      if (!v437) {
        goto LABEL_173;
      }
      uint64_t v191 = v442;
      uint64_t v192 = v441;
      uint64_t v193 = v440;
      uint64_t v194 = v439;
      unint64_t v195 = v438;
      char v196 = v436;
      uint64_t v279 = v436;
      uint64_t v285 = v88;
      v317 = v440 >> 8;
      v197 = v443;
      swift_retain();
      outlined copy of PlayAnimationAction?(v196, v190);
      uint64_t v198 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAnimationAction>);
      v397 = v445;
      v398 = v446;
      v399 = v447;
      v400 = v448;
      uint64_t v199 = v29;
      uint64_t v200 = v30;
      long long v376 = v190;
      long long v377 = v195;
      v378 = v194;
      LOBYTE(v379) = v193 & 1;
      HIBYTE(v379) = v317;
      v380 = v192;
      v381 = v191;
      v382 = v197 & 0x101;
      uint64_t v273 = v198 & 1;
      v383 = v198 & 1;
      long long v374 = v323;
      long long v375 = v279;
      v384 = v189;
      v385 = v334;
      v386 = v199;
      v387 = v200;
      v388 = Strong;
      v389 = v340;
      v390 = -1.0;
      v391 = 0;
      v392 = 0xBFF0000000000000;
      v393 = 0;
      v394 = 0xBFF0000000000000;
      v395 = 0;
      v396 = v444;
      v401 = v329;
      swift_retain();
      swift_retain();
      a5(&v374);
      outlined consume of PlayAnimationAction?(v279, v190);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v402 = v323;
      v403 = v279;
      v404 = v190;
      v405 = v195;
      v406 = v194;
      v407 = v193 & 1;
      v408 = v317;
      v409 = v192;
      v410 = v191;
      v411 = v197 & 0x101;
      v412 = v273;
      v413 = v189;
      v414 = v334;
      v415 = v199;
      v416 = v200;
      v417 = Strong;
      v418 = v340;
      v419 = -1.0;
      v420 = 0;
      v421 = 0xBFF0000000000000;
      v422 = 0;
      v423 = 0xBFF0000000000000;
      v424 = 0;
      v425 = v360;
      v426 = 0;
      v427 = v365;
      v428 = v312;
      v429 = v306;
      v430 = v348;
      uint64_t v201 = v354;
      goto LABEL_128;
    case 8:
      uint64_t v31 = *(void *)a2;
      uint64_t v32 = *(void *)(a2 + 8);
      float v33 = *(void *)(a2 + 48);
      char v361 = *(void *)(a2 + 32);
      uint64_t v366 = *(void *)(a2 + 40);
      float v34 = *(float *)(a2 + 64);
      uint64_t v35 = *(float *)(a2 + 68);
      char v335 = *(unsigned char *)(a2 + 72);
      long long v341 = *(void *)(a2 + 80);
      __int16 v345 = *(void *)(a2 + 88);
      uint64_t v322 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        uint64_t v91 = specialized static Entity.entityInfoType(_:)(v31);
        if (v91)
        {
          uint64_t v92 = (*(uint64_t (**)(void))(v91 + 232))();
          uint64_t v93 = *(void *)(v92 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v93, 0);
          *(void *)(v92 + 16) = v31;
          MEMORY[0x22A68E750](v31, v92);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v31);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v355 = swift_allocObject();
      swift_weakInit();
      *(void *)(v355 + 16) = v32;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v94 = String.init(cString:)();
      uint64_t v96 = v95;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v97 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_119;
      }
      swift_bridgeObjectRetain();
      uint64_t v98 = specialized __RawDictionaryStorage.find<A>(_:)(v94, v96);
      if (v99)
      {
        uint64_t v100 = (uint64_t *)(*(void *)(v97 + 56) + 56 * v98);
        uint64_t v101 = *v100;
        uint64_t v102 = v100[1];
        uint64_t v104 = v100[2];
        uint64_t v103 = v100[3];
        uint64_t v106 = v100[4];
        uint64_t v105 = v100[5];
        unint64_t v107 = v100[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_119:
        uint64_t v101 = 0;
        uint64_t v102 = 0;
        uint64_t v104 = 0;
        uint64_t v103 = 0;
        uint64_t v106 = 0;
        uint64_t v105 = 0;
        unint64_t v107 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v444 = v361;
      BYTE8(v444) = 0;
      *(void *)&v445 = v366;
      *((void *)&v445 + 1) = v101;
      *(void *)&v446 = v102;
      *((void *)&v446 + 1) = v104;
      *(void *)&v447 = v103;
      *((void *)&v447 + 1) = v106;
      *(void *)&v448 = v105;
      *((void *)&v448 + 1) = v107;
      double v329 = v33;
      uint64_t v307 = v102;
      uint64_t v313 = v101;
      uint64_t v294 = v107;
      uint64_t v300 = v105;
      if (v322 && REBindPointBoundComponent())
      {
        uint64_t v202 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v203 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_224:
            __break(1u);
            goto LABEL_225;
          }
          uint64_t v264 = specialized static Entity.entityInfoType(_:)(v202);
          if (v264)
          {
            uint64_t v265 = (*(uint64_t (**)(void))(v264 + 232))();
            uint64_t v266 = *(void *)(v265 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v266, 0);
            *(void *)(v265 + 16) = v202;
            MEMORY[0x22A68E750](v202, v265);
            char v324 = v265;
            swift_release();
            goto LABEL_126;
          }
          uint64_t v203 = makeEntity(for:)(v202);
        }
        char v324 = v203;
      }
      else
      {
        char v324 = 0;
      }
LABEL_126:
      specialized ActionEventData.action<A>()((uint64_t)&v436);
      int v204 = v437;
      if (!v437) {
        goto LABEL_173;
      }
      uint64_t v205 = v442;
      uint64_t v206 = v441;
      int v207 = v439;
      uint64_t v285 = v106;
      uint64_t v289 = v103;
      char v208 = v438;
      uint64_t v209 = v436;
      unint64_t v276 = v436;
      uint64_t v280 = v104;
      v318 = v440 >> 8;
      uint64_t v210 = v440;
      int v211 = v443;
      swift_retain();
      outlined copy of PlayAnimationAction?(v209, v204);
      char v212 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<PlayAnimationAction>);
      v397 = v445;
      v398 = v446;
      v399 = v447;
      v400 = v448;
      double v213 = v34;
      uint64_t v214 = v35;
      long long v376 = v204;
      long long v377 = v208;
      v378 = v207;
      v210 &= 1u;
      LOBYTE(v379) = v210;
      HIBYTE(v379) = v318;
      v380 = v206;
      v381 = v205;
      v382 = v211 & 0x101;
      unint64_t v274 = v212 & 1;
      v383 = v212 & 1;
      long long v374 = v355;
      long long v375 = v276;
      v384 = v324;
      v385 = v335;
      v386 = v213;
      v387 = v214;
      v389 = 0;
      v390 = 0.0;
      v388 = Strong;
      v391 = 1;
      v392 = v341;
      v393 = 0;
      v394 = v345;
      v395 = 0;
      v396 = v444;
      v401 = v33;
      swift_retain();
      swift_retain();
      a5(&v374);
      outlined consume of PlayAnimationAction?(v276, v204);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v402 = v355;
      v403 = v276;
      v404 = v204;
      v405 = v208;
      v406 = v207;
      v407 = v210;
      v408 = v318;
      v409 = v206;
      v410 = v205;
      v411 = v211 & 0x101;
      v412 = v274;
      v413 = v324;
      v414 = v335;
      v415 = v213;
      v416 = v214;
      v419 = 0.0;
      v417 = Strong;
      v418 = 0;
      v420 = 1;
      v421 = v341;
      v422 = 0;
      v423 = v345;
      v424 = 0;
      v425 = v361;
      v426 = 0;
      v427 = v366;
      v428 = v313;
      v429 = v307;
      v430 = v280;
      uint64_t v201 = v289;
LABEL_128:
      v431 = v201;
      v432 = v285;
      v433 = v300;
      v434 = v294;
      unsigned int v172 = v329;
      goto LABEL_172;
    case 16:
      uint64_t v36 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v367 = *(void *)(a2 + 32);
      uint64_t v370 = *(void *)(a2 + 40);
      unint64_t v358 = *(void *)(a2 + 48);
      double v351 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        char v108 = specialized static Entity.entityInfoType(_:)(v36);
        if (v108)
        {
          char v109 = (*(uint64_t (**)(void))(v108 + 232))();
          uint64_t v110 = *(void *)(v109 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v110, 0);
          *(void *)(v109 + 16) = v36;
          MEMORY[0x22A68E750](v36, v109);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v111 = swift_allocObject();
      swift_weakInit();
      char v349 = v111;
      *(void *)(v111 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v112 = String.init(cString:)();
      uint64_t v114 = v113;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v115 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_131;
      }
      swift_bridgeObjectRetain();
      uint64_t v116 = specialized __RawDictionaryStorage.find<A>(_:)(v112, v114);
      if (v117)
      {
        uint64_t v118 = (uint64_t *)(*(void *)(v115 + 56) + 56 * v116);
        uint64_t v119 = *v118;
        uint64_t v120 = v118[1];
        uint64_t v122 = v118[2];
        uint64_t v121 = v118[3];
        uint64_t v123 = v118[4];
        unint64_t v124 = v118[5];
        char v125 = v118[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_131:
        uint64_t v119 = 0;
        uint64_t v120 = 0;
        uint64_t v122 = 0;
        uint64_t v121 = 0;
        uint64_t v123 = 0;
        unint64_t v124 = 0;
        char v125 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v444 = 0;
      BYTE8(v444) = 0;
      *(void *)&v445 = v370;
      *((void *)&v445 + 1) = v119;
      *(void *)&v446 = v120;
      *((void *)&v446 + 1) = v122;
      *(void *)&v447 = v121;
      *((void *)&v447 + 1) = v123;
      *(void *)&v448 = v124;
      *((void *)&v448 + 1) = v125;
      unint64_t v336 = v121;
      uint64_t v343 = v122;
      uint64_t v330 = v123;
      if (!v351 || !REBindPointBoundComponent()) {
        goto LABEL_144;
      }
      uint64_t v215 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_142;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_192;
      }
      __break(1u);
LABEL_137:
      swift_bridgeObjectRelease();
LABEL_138:
      uint64_t v119 = 0;
      uint64_t v120 = 0;
      uint64_t v138 = 0;
      uint64_t v137 = 0;
      uint64_t v139 = 0;
      unint64_t v124 = 0;
      char v125 = 0;
LABEL_139:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v444 = 0;
      BYTE8(v444) = 0;
      *(void *)&v445 = v370;
      *((void *)&v445 + 1) = v119;
      *(void *)&v446 = v120;
      *((void *)&v446 + 1) = v138;
      *(void *)&v447 = v137;
      *((void *)&v447 + 1) = v139;
      *(void *)&v448 = v124;
      *((void *)&v448 + 1) = v125;
      unint64_t v336 = v137;
      uint64_t v343 = v138;
      uint64_t v330 = v139;
      if (v351 && REBindPointBoundComponent())
      {
        uint64_t v215 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_142:
          type metadata accessor for Entity();
          int v216 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_225:
            __break(1u);
            goto LABEL_226;
          }
LABEL_192:
          unint64_t v267 = specialized static Entity.entityInfoType(_:)(v215);
          if (v267)
          {
            char v217 = (*(uint64_t (**)(void))(v267 + 232))();
            unint64_t v268 = *(void *)(v217 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v268, 0);
            *(void *)(v217 + 16) = v215;
            MEMORY[0x22A68E750](v215, v217);
            swift_release();
            goto LABEL_145;
          }
          int v216 = makeEntity(for:)(v215);
        }
        char v217 = v216;
      }
      else
      {
LABEL_144:
        char v217 = 0;
      }
LABEL_145:
      specialized ActionEventData.action<A>()((uint64_t)&v436);
      uint64_t v218 = v437;
      if (!v437) {
        goto LABEL_173;
      }
      v397 = v445;
      v398 = v446;
      v399 = v447;
      v400 = v448;
      uint64_t v219 = v441;
      v319 = v119;
      char v325 = v125;
      int v220 = v439;
      uint64_t v281 = v442;
      char v221 = v438;
      uint64_t v222 = v436;
      uint64_t v295 = v440 >> 8;
      long long v376 = v437;
      long long v377 = v438;
      v378 = v439;
      uint64_t v290 = v440 & 1;
      v379 = v440 & 0xFF01;
      v380 = v441;
      v381 = v442;
      uint64_t v308 = v443 & 1;
      v382 = v443 & 0x101;
      uint64_t v301 = HIBYTE(v443) & 1;
      v383 = 1;
      long long v374 = v349;
      long long v375 = v436;
      v384 = v217;
      v385 = 0;
      v386 = 0.0;
      v387 = 0.0;
      v389 = 0;
      v390 = 0.0;
      v388 = Strong;
      v391 = 1;
      v392 = v367;
      v393 = 0;
      v394 = 0;
      v395 = 1;
      v396 = v444;
      v401 = v358;
      swift_retain();
      swift_retain();
      outlined copy of PlayAnimationAction?(v222, v218);
      swift_retain();
      a5(&v374);
      outlined consume of PlayAnimationAction?(v222, v218);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v402 = v349;
      v403 = v222;
      v404 = v218;
      v405 = v221;
      v406 = v220;
      v407 = v290;
      v408 = v295;
      v409 = v219;
      v410 = v281;
      LOBYTE(v411) = v308;
      HIBYTE(v411) = v301;
      v412 = 1;
      v413 = v217;
      v414 = 0;
      v416 = 0.0;
      v415 = 0.0;
      v419 = 0.0;
      v417 = Strong;
      v418 = 0;
      v420 = 1;
      v421 = v367;
      v422 = 0;
      v423 = 0;
      v424 = 1;
      v425 = 0;
      v426 = 0;
      v427 = v370;
      v428 = v319;
      v429 = v120;
      v430 = v343;
      v431 = v336;
      v432 = v330;
      v433 = v124;
      uint64_t v223 = v325;
LABEL_171:
      v434 = v223;
      unsigned int v172 = v358;
      goto LABEL_172;
    case 32:
      uint64_t v38 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v367 = *(void *)(a2 + 32);
      uint64_t v370 = *(void *)(a2 + 40);
      unint64_t v358 = *(void *)(a2 + 48);
      double v351 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        char v126 = specialized static Entity.entityInfoType(_:)(v38);
        if (v126)
        {
          uint64_t v127 = (*(uint64_t (**)(void))(v126 + 232))();
          uint64_t v128 = *(void *)(v127 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v128, 0);
          *(void *)(v127 + 16) = v38;
          MEMORY[0x22A68E750](v38, v127);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v129 = swift_allocObject();
      swift_weakInit();
      char v349 = v129;
      *(void *)(v129 + 16) = v39;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v130 = String.init(cString:)();
      uint64_t v132 = v131;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v133 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_138;
      }
      swift_bridgeObjectRetain();
      uint64_t v134 = specialized __RawDictionaryStorage.find<A>(_:)(v130, v132);
      if ((v135 & 1) == 0) {
        goto LABEL_137;
      }
      uint64_t v136 = (uint64_t *)(*(void *)(v133 + 56) + 56 * v134);
      uint64_t v119 = *v136;
      uint64_t v120 = v136[1];
      uint64_t v138 = v136[2];
      uint64_t v137 = v136[3];
      uint64_t v139 = v136[4];
      unint64_t v124 = v136[5];
      char v125 = v136[6];
      swift_bridgeObjectRelease();
      goto LABEL_139;
    case 64:
      uint64_t v40 = *(void *)a2;
      uint64_t v41 = *(void *)(a2 + 8);
      uint64_t v42 = *(void *)(a2 + 24);
      uint64_t v43 = *(void *)(a2 + 40);
      unint64_t v358 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
        unint64_t v140 = specialized static Entity.entityInfoType(_:)(v40);
        if (v140)
        {
          char v141 = (*(uint64_t (**)(void))(v140 + 232))();
          unint64_t v142 = *(void *)(v141 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v142, 0);
          *(void *)(v141 + 16) = v40;
          MEMORY[0x22A68E750](v40, v141);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v40);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v143 = swift_allocObject();
      swift_weakInit();
      unint64_t v356 = v143;
      *(void *)(v143 + 16) = v41;
      swift_beginAccess();
      swift_weakAssign();
      if (v43 && REBindPointBoundComponent())
      {
        uint64_t v144 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v145 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v146 = v145;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_220:
          __break(1u);
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v254 = specialized static Entity.entityInfoType(_:)(v144);
        if (!v254)
        {
          uint64_t v145 = makeEntity(for:)(v144);
          goto LABEL_77;
        }
        uint64_t v146 = (*(uint64_t (**)(void))(v254 + 232))();
        unint64_t v255 = *(void *)(v146 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v255, 0);
        *(void *)(v146 + 16) = v144;
        MEMORY[0x22A68E750](v144, v146);
        swift_release();
      }
      else
      {
        uint64_t v146 = 0;
      }
LABEL_79:
      uint64_t v147 = String.init(cString:)();
      uint64_t v149 = v148;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v150 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v151 = specialized __RawDictionaryStorage.find<A>(_:)(v147, v149);
        if (v152)
        {
          uint64_t v153 = (uint64_t *)(*(void *)(v150 + 56) + 56 * v151);
          uint64_t v154 = *v153;
          v155 = v153[1];
          uint64_t v156 = v153[2];
          uint64_t v157 = v153[3];
          uint64_t v158 = v153[4];
          uint64_t v368 = v153[6];
          unsigned __int16 v371 = v153[5];
          swift_bridgeObjectRelease();
LABEL_150:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v444 = 0;
          BYTE8(v444) = 0;
          *(void *)&v445 = v42;
          *((void *)&v445 + 1) = v154;
          *(void *)&v446 = v155;
          *((void *)&v446 + 1) = v156;
          *(void *)&v447 = v157;
          *((void *)&v447 + 1) = v158;
          *(void *)&v448 = v371;
          *((void *)&v448 + 1) = v368;
          specialized ActionEventData.action<A>()((uint64_t)&v436);
          if (!v437) {
            goto LABEL_173;
          }
          v397 = v445;
          v398 = v446;
          v399 = v447;
          v400 = v448;
          char v337 = v42;
          uint64_t v344 = v154;
          uint64_t v224 = v441;
          uint64_t v225 = v439;
          uint64_t v286 = v442;
          uint64_t v226 = v438;
          uint64_t v326 = v155;
          uint64_t v227 = v146;
          uint64_t v228 = v436;
          uint64_t v302 = v440 >> 8;
          long long v376 = v437;
          long long v377 = v438;
          v378 = v439;
          uint64_t v296 = v440 & 1;
          v379 = v440 & 0xFF01;
          v380 = v441;
          v381 = v442;
          uint64_t v314 = v443 & 1;
          v382 = v443 & 0x101;
          uint64_t v309 = HIBYTE(v443) & 1;
          v383 = 1;
          long long v374 = v356;
          long long v375 = v436;
          v384 = v227;
          v385 = 0;
          v386 = 0.0;
          v387 = 0.0;
          v389 = 0;
          v390 = 0.0;
          v388 = Strong;
          v391 = 1;
          v392 = 0;
          v393 = 1;
          v394 = 0;
          v395 = 1;
          v396 = v444;
          v401 = v358;
          uint64_t v229 = v437;
          swift_retain();
          swift_retain();
          outlined copy of PlayAnimationAction?(v228, v229);
          swift_retain();
          a5(&v374);
          outlined consume of PlayAnimationAction?(v228, v229);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v402 = v356;
          v403 = v228;
          v404 = v229;
          v405 = v226;
          v406 = v225;
          v407 = v296;
          v408 = v302;
          v409 = v224;
          v410 = v286;
          LOBYTE(v411) = v314;
          HIBYTE(v411) = v309;
          v412 = 1;
          v413 = v227;
          v414 = 0;
          v416 = 0.0;
          v415 = 0.0;
          v419 = 0.0;
          v417 = Strong;
          v418 = 0;
          v420 = 1;
          v421 = 0;
          v422 = 1;
          v423 = 0;
          v424 = 1;
          v425 = 0;
          v426 = 0;
          v427 = v337;
          v428 = v344;
          v429 = v326;
          v430 = v156;
          v431 = v157;
          uint64_t v230 = v158;
LABEL_170:
          v432 = v230;
          v433 = v371;
          uint64_t v223 = v368;
          goto LABEL_171;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v154 = 0;
      v155 = 0;
      uint64_t v156 = 0;
      uint64_t v157 = 0;
      uint64_t v158 = 0;
      uint64_t v368 = 0;
      unsigned __int16 v371 = 0;
      goto LABEL_150;
    default:
      if (a4 != 128) {
        goto LABEL_174;
      }
      float v14 = *(void *)a2;
      uint64_t v15 = *(void *)(a2 + 8);
      uint64_t v16 = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 40);
      unint64_t v358 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v231 = specialized static Entity.entityInfoType(_:)(v14);
        if (v231)
        {
          unint64_t v232 = (*(uint64_t (**)(void))(v231 + 232))();
          char v233 = *(void *)(v232 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v233, 0);
          *(void *)(v232 + 16) = v14;
          MEMORY[0x22A68E750](v14, v232);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      v234 = swift_allocObject();
      swift_weakInit();
      char v357 = v234;
      *(void *)(v234 + 16) = v15;
      swift_beginAccess();
      swift_weakAssign();
      if (v17 && REBindPointBoundComponent())
      {
        uint64_t v235 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v236 = swift_dynamicCastClassUnconditional();
LABEL_159:
          uint64_t v237 = v236;
          goto LABEL_161;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          JUMPOUT(0x227FC4C64);
        }
        uint64_t v269 = specialized static Entity.entityInfoType(_:)(v235);
        if (!v269)
        {
          uint64_t v236 = makeEntity(for:)(v235);
          goto LABEL_159;
        }
        uint64_t v237 = (*(uint64_t (**)(void))(v269 + 232))();
        uint64_t v270 = *(void *)(v237 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v270, 0);
        *(void *)(v237 + 16) = v235;
        MEMORY[0x22A68E750](v235, v237);
        swift_release();
      }
      else
      {
        uint64_t v237 = 0;
      }
LABEL_161:
      uint64_t v238 = String.init(cString:)();
      uint64_t v240 = v239;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      int v241 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        char v242 = specialized __RawDictionaryStorage.find<A>(_:)(v238, v240);
        if (v243)
        {
          uint64_t v244 = (uint64_t *)(*(void *)(v241 + 56) + 56 * v242);
          char v245 = *v244;
          uint64_t v246 = v244[1];
          uint64_t v247 = v244[2];
          uint64_t v248 = v244[3];
          uint64_t v249 = v244[4];
          uint64_t v368 = v244[6];
          unsigned __int16 v371 = v244[5];
          swift_bridgeObjectRelease();
LABEL_168:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v444 = 0;
          BYTE8(v444) = 0;
          *(void *)&v445 = v16;
          *((void *)&v445 + 1) = v245;
          *(void *)&v446 = v246;
          *((void *)&v446 + 1) = v247;
          *(void *)&v447 = v248;
          *((void *)&v447 + 1) = v249;
          *(void *)&v448 = v371;
          *((void *)&v448 + 1) = v368;
          specialized ActionEventData.action<A>()((uint64_t)&v436);
          if (!v437) {
            goto LABEL_173;
          }
          v397 = v445;
          v398 = v446;
          v399 = v447;
          v400 = v448;
          uint64_t v331 = v16;
          long long v338 = v245;
          double v350 = v442;
          uint64_t v250 = v441;
          uint64_t v282 = v438;
          char v251 = v436;
          uint64_t v297 = v440 >> 8;
          long long v376 = v437;
          long long v377 = v438;
          v378 = v439;
          uint64_t v252 = v439;
          uint64_t v291 = v440 & 1;
          v379 = v440 & 0xFF01;
          v380 = v441;
          v381 = v442;
          uint64_t v310 = v443 & 1;
          v382 = v443 & 0x101;
          uint64_t v303 = HIBYTE(v443) & 1;
          v383 = 1;
          long long v374 = v357;
          long long v375 = v436;
          v384 = v237;
          v385 = 0;
          v386 = 0.0;
          v387 = 0.0;
          v389 = 0;
          v390 = 0.0;
          v388 = Strong;
          v391 = 1;
          v392 = 0;
          v393 = 1;
          v394 = 0;
          v395 = 1;
          v396 = v444;
          v401 = v358;
          uint64_t v253 = v437;
          swift_retain();
          swift_retain();
          outlined copy of PlayAnimationAction?(v251, v253);
          swift_retain();
          a5(&v374);
          swift_release();
          outlined consume of PlayAnimationAction?(v251, v253);
          swift_release();
          swift_release();
          swift_release();
          v402 = v357;
          v403 = v251;
          v404 = v253;
          v405 = v282;
          v406 = v252;
          v407 = v291;
          v408 = v297;
          v409 = v250;
          v410 = v350;
          LOBYTE(v411) = v310;
          HIBYTE(v411) = v303;
          v412 = 1;
          v413 = v237;
          v414 = 0;
          v416 = 0.0;
          v415 = 0.0;
          v419 = 0.0;
          v417 = Strong;
          v418 = 0;
          v420 = 1;
          v421 = 0;
          v422 = 1;
          v423 = 0;
          v424 = 1;
          v425 = 0;
          v426 = 0;
          v427 = v331;
          v428 = v338;
          v429 = v246;
          v430 = v247;
          v431 = v248;
          uint64_t v230 = v249;
          goto LABEL_170;
        }
        swift_bridgeObjectRelease();
      }
      char v245 = 0;
      uint64_t v246 = 0;
      uint64_t v247 = 0;
      uint64_t v248 = 0;
      uint64_t v249 = 0;
      uint64_t v368 = 0;
      unsigned __int16 v371 = 0;
      goto LABEL_168;
  }
}

uint64_t specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v414 = *(void *)(a2 + 32);
      uint64_t v420 = *(void *)(a2 + 40);
      uint64_t v373 = *(void *)(a2 + 48);
      uint64_t v9 = *(void *)(a2 + 64);
      float v10 = *(float *)(a2 + 72);
      float v11 = *(float *)(a2 + 76);
      char v377 = *(unsigned char *)(a2 + 80);
      unint64_t v381 = *(void *)(a2 + 88);
      unint64_t v387 = *(void *)(a2 + 96);
      uint64_t v393 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_222;
      }
      uint64_t v42 = specialized static Entity.entityInfoType(_:)(v7);
      if (v42)
      {
        uint64_t v43 = (*(uint64_t (**)(void))(v42 + 232))();
        uint64_t v44 = *(void *)(v43 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v44, 0);
        *(void *)(v43 + 16) = v7;
        MEMORY[0x22A68E750](v7, v43);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v7);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v435 = swift_allocObject();
      swift_weakInit();
      *(void *)(v435 + 16) = v8;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v45 = String.init(cString:)();
      uint64_t v47 = v46;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v48 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_79;
      }
      swift_bridgeObjectRetain();
      unint64_t v49 = specialized __RawDictionaryStorage.find<A>(_:)(v45, v47);
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_79:
        uint64_t v53 = 0;
        uint64_t v52 = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v401 = 0;
        uint64_t v408 = 0;
        uint64_t v56 = 0;
        goto LABEL_80;
      }
      uint64_t v51 = (uint64_t *)(*(void *)(v48 + 56) + 56 * v49);
      uint64_t v53 = *v51;
      uint64_t v52 = v51[1];
      uint64_t v54 = v51[2];
      uint64_t v55 = v51[3];
      uint64_t v56 = v51[6];
      uint64_t v401 = v51[4];
      uint64_t v408 = v51[5];
      swift_bridgeObjectRelease();
LABEL_80:
      uint64_t v307 = v56;
      uint64_t v314 = v55;
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v524 = v414;
      BYTE8(v524) = 0;
      *(void *)&long long v525 = v420;
      *((void *)&v525 + 1) = v53;
      *(void *)&long long v526 = v52;
      *((void *)&v526 + 1) = v54;
      *(void *)&long long v527 = v55;
      *((void *)&v527 + 1) = v401;
      *(void *)&long long v528 = v408;
      *((void *)&v528 + 1) = v56;
      uint64_t v325 = v52;
      uint64_t v320 = v54;
      if (!v9 || !REBindPointBoundComponent())
      {
        uint64_t v429 = 0;
        goto LABEL_86;
      }
      uint64_t Entity = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v147 = swift_dynamicCastClassUnconditional();
LABEL_84:
        uint64_t v429 = v147;
        goto LABEL_86;
      }
      if (REEntityIsBeingDestroyed()) {
        goto LABEL_230;
      }
      uint64_t v252 = specialized static Entity.entityInfoType(_:)(Entity);
      if (!v252)
      {
        uint64_t v147 = makeEntity(for:)(Entity);
        goto LABEL_84;
      }
      uint64_t v253 = (*(uint64_t (**)(void))(v252 + 232))();
      uint64_t v254 = *(void *)(v253 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v254, 0);
      *(void *)(v253 + 16) = Entity;
      MEMORY[0x22A68E750](Entity, v253);
      uint64_t v429 = v253;
      swift_release();
LABEL_86:
      specialized ActionEventData.action<A>()((uint64_t)&v512);
      if (!v516) {
        goto LABEL_196;
      }
      char v295 = v523;
      uint64_t v357 = v521;
      uint64_t v362 = v522;
      uint64_t v148 = v519;
      uint64_t v344 = v518;
      uint64_t v350 = v520;
      uint64_t v149 = v517;
      uint64_t v150 = v515;
      uint64_t v338 = v514;
      uint64_t v151 = v513;
      uint64_t v152 = v512;
      uint64_t v289 = v512;
      uint64_t v279 = v516;
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v152, v151, v338, v150, v279);
      char v153 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Transform>>);
      long long v472 = v527;
      long long v473 = v528;
      long long v470 = v525;
      long long v471 = v526;
      double v154 = v10;
      double v155 = v11;
      uint64_t v445 = v151;
      char v446 = v338 & 1;
      uint64_t v447 = v150;
      uint64_t v448 = v279;
      uint64_t v449 = v149;
      uint64_t v450 = v344;
      uint64_t v451 = v148;
      uint64_t v452 = v350;
      uint64_t v453 = v357;
      uint64_t v454 = v362;
      char v455 = v295 & 1;
      char v283 = v153 & 1;
      char v456 = v153 & 1;
      uint64_t v444 = v289;
      v443[0] = v435;
      uint64_t v457 = v429;
      char v458 = v377;
      double v459 = v154;
      double v460 = v155;
      uint64_t v461 = Strong;
      uint64_t v462 = v393;
      double v463 = -1.0;
      char v464 = 0;
      unint64_t v465 = v381;
      char v466 = 0;
      unint64_t v467 = v387;
      char v468 = 0;
      long long v469 = v524;
      uint64_t v474 = v373;
      swift_retain();
      swift_retain();
      a5(v443);
      outlined consume of SetEntityPropertyAction<Transform>?(v289, v151, v338, v150, v279);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v475 = v435;
      uint64_t v476 = v289;
      uint64_t v477 = v151;
      char v478 = v338 & 1;
      uint64_t v479 = v150;
      uint64_t v480 = v279;
      uint64_t v481 = v149;
      uint64_t v482 = v344;
      uint64_t v483 = v148;
      uint64_t v484 = v350;
      uint64_t v485 = v357;
      uint64_t v486 = v362;
      char v487 = v295 & 1;
      char v488 = v283;
      uint64_t v489 = v429;
      char v490 = v377;
      double v491 = v154;
      double v492 = v155;
      uint64_t v493 = Strong;
      uint64_t v494 = v393;
      double v495 = -1.0;
      char v496 = 0;
      unint64_t v497 = v381;
      char v498 = 0;
      unint64_t v499 = v387;
      char v500 = 0;
      uint64_t v501 = v414;
      char v502 = 0;
      uint64_t v503 = v420;
      uint64_t v504 = v53;
      uint64_t v505 = v325;
      uint64_t v506 = v320;
      uint64_t v507 = v314;
      uint64_t v508 = v401;
      uint64_t v509 = v408;
      uint64_t v156 = v307;
LABEL_99:
      uint64_t v510 = v156;
      uint64_t v169 = v373;
LABEL_195:
      uint64_t v511 = v169;
      outlined release of ActionEvent<SetEntityPropertyAction<Transform>>((uint64_t)&v475);
      return 0;
    case 2:
      uint64_t v17 = *(void *)a2;
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v415 = *(void *)(a2 + 32);
      uint64_t v421 = *(void *)(a2 + 40);
      float v19 = *(float *)(a2 + 56);
      unint64_t v388 = *(void *)(a2 + 64);
      unint64_t v394 = *(void *)(a2 + 48);
      uint64_t v382 = *(void *)(a2 + 72);
      uint64_t v20 = *(void *)(a2 + 88);
      uint64_t v373 = *(void *)(a2 + 80);
      float v21 = *(float *)(a2 + 96);
      float v22 = *(float *)(a2 + 100);
      char v378 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_222:
          __break(1u);
          goto LABEL_223;
        }
        uint64_t v57 = specialized static Entity.entityInfoType(_:)(v17);
        if (v57)
        {
          uint64_t v58 = (*(uint64_t (**)(void))(v57 + 232))();
          uint64_t v59 = *(void *)(v58 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v59, 0);
          *(void *)(v58 + 16) = v17;
          MEMORY[0x22A68E750](v17, v58);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v17);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v436 = swift_allocObject();
      swift_weakInit();
      *(void *)(v436 + 16) = v18;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v60 = String.init(cString:)();
      uint64_t v62 = v61;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v63 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_90;
      }
      swift_bridgeObjectRetain();
      unint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v60, v62);
      if (v65)
      {
        uint64_t v66 = (uint64_t *)(*(void *)(v63 + 56) + 56 * v64);
        uint64_t v68 = *v66;
        uint64_t v67 = v66[1];
        uint64_t v69 = v66[2];
        uint64_t v70 = v66[3];
        uint64_t v71 = v66[6];
        uint64_t v402 = v66[4];
        uint64_t v409 = v66[5];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_90:
        uint64_t v68 = 0;
        uint64_t v67 = 0;
        uint64_t v69 = 0;
        uint64_t v70 = 0;
        uint64_t v402 = 0;
        uint64_t v409 = 0;
        uint64_t v71 = 0;
      }
      uint64_t v321 = v71;
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v524 = v415;
      BYTE8(v524) = 0;
      *(void *)&long long v525 = v421;
      *((void *)&v525 + 1) = v68;
      *(void *)&long long v526 = v67;
      *((void *)&v526 + 1) = v69;
      *(void *)&long long v527 = v70;
      *((void *)&v527 + 1) = v402;
      *(void *)&long long v528 = v409;
      *((void *)&v528 + 1) = v71;
      uint64_t v157 = v70;
      uint64_t v332 = v67;
      uint64_t v326 = v69;
      if (v20 && REBindPointBoundComponent())
      {
        uint64_t v158 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v159 = swift_dynamicCastClassUnconditional();
LABEL_95:
          uint64_t v430 = v159;
          goto LABEL_97;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_231:
          __break(1u);
          goto LABEL_232;
        }
        uint64_t v255 = specialized static Entity.entityInfoType(_:)(v158);
        if (!v255)
        {
          uint64_t v159 = makeEntity(for:)(v158);
          goto LABEL_95;
        }
        uint64_t v256 = (*(uint64_t (**)(void))(v255 + 232))();
        uint64_t v257 = *(void *)(v256 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v257, 0);
        *(void *)(v256 + 16) = v158;
        MEMORY[0x22A68E750](v158, v256);
        uint64_t v430 = v256;
        swift_release();
      }
      else
      {
        uint64_t v430 = 0;
      }
LABEL_97:
      specialized ActionEventData.action<A>()((uint64_t)&v512);
      uint64_t v160 = v516;
      if (v516)
      {
        char v301 = v523;
        uint64_t v358 = v520;
        uint64_t v363 = v522;
        uint64_t v161 = v519;
        uint64_t v278 = v517;
        uint64_t v280 = v518;
        uint64_t v308 = v157;
        uint64_t v162 = v515;
        uint64_t v345 = v514;
        uint64_t v351 = v521;
        uint64_t v163 = v513;
        uint64_t v164 = v512;
        uint64_t v296 = v512;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v164, v163, v345, v162, v160);
        char v165 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Transform>>);
        long long v472 = v527;
        long long v473 = v528;
        long long v470 = v525;
        long long v471 = v526;
        double v166 = v21;
        double v167 = v22;
        double v168 = v19;
        uint64_t v445 = v163;
        char v446 = v345 & 1;
        uint64_t v447 = v162;
        uint64_t v448 = v160;
        uint64_t v449 = v278;
        uint64_t v450 = v280;
        uint64_t v451 = v161;
        uint64_t v452 = v358;
        uint64_t v453 = v351;
        uint64_t v454 = v363;
        char v455 = v301 & 1;
        char v285 = v165 & 1;
        char v456 = v165 & 1;
        uint64_t v444 = v296;
        v443[0] = v436;
        uint64_t v457 = v430;
        char v458 = v378;
        double v459 = v166;
        double v460 = v167;
        uint64_t v461 = Strong;
        uint64_t v462 = v382;
        double v463 = v168;
        char v464 = 0;
        unint64_t v465 = v394;
        char v466 = 0;
        unint64_t v467 = v388;
        char v468 = 0;
        long long v469 = v524;
        uint64_t v474 = v373;
        swift_retain();
        swift_retain();
        a5(v443);
        outlined consume of SetEntityPropertyAction<Transform>?(v296, v163, v345, v162, v160);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v475 = v436;
        uint64_t v476 = v296;
        uint64_t v477 = v163;
        char v478 = v345 & 1;
        uint64_t v479 = v162;
        uint64_t v480 = v160;
        uint64_t v481 = v278;
        uint64_t v482 = v280;
        uint64_t v483 = v161;
        uint64_t v484 = v358;
        uint64_t v485 = v351;
        uint64_t v486 = v363;
        char v487 = v301 & 1;
        char v488 = v285;
        uint64_t v489 = v430;
        char v490 = v378;
        double v491 = v166;
        double v492 = v167;
        uint64_t v493 = Strong;
        uint64_t v494 = v382;
        double v495 = v168;
        char v496 = 0;
        unint64_t v497 = v394;
        char v498 = 0;
        unint64_t v499 = v388;
        char v500 = 0;
        uint64_t v501 = v415;
        char v502 = 0;
        uint64_t v503 = v421;
        uint64_t v504 = v68;
        uint64_t v505 = v332;
        uint64_t v506 = v326;
        uint64_t v507 = v308;
        uint64_t v508 = v402;
        uint64_t v509 = v409;
        uint64_t v156 = v321;
        goto LABEL_99;
      }
LABEL_196:
      swift_release();
      swift_release();
      swift_release();
LABEL_197:
      swift_release();
      return 0;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_197;
    case 4:
      uint64_t v23 = *(void *)a2;
      uint64_t v24 = *(void *)(a2 + 8);
      uint64_t v416 = *(void *)(a2 + 32);
      uint64_t v422 = *(void *)(a2 + 40);
      uint64_t v25 = *(void *)(a2 + 64);
      uint64_t v389 = *(void *)(a2 + 56);
      uint64_t v395 = *(void *)(a2 + 48);
      float v26 = *(float *)(a2 + 72);
      float v27 = *(float *)(a2 + 76);
      char v383 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        uint64_t v72 = specialized static Entity.entityInfoType(_:)(v23);
        if (v72)
        {
          uint64_t v73 = (*(uint64_t (**)(void))(v72 + 232))();
          uint64_t v74 = *(void *)(v73 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v74, 0);
          *(void *)(v73 + 16) = v23;
          MEMORY[0x22A68E750](v23, v73);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v23);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v437 = swift_allocObject();
      swift_weakInit();
      *(void *)(v437 + 16) = v24;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v75 = String.init(cString:)();
      uint64_t v77 = v76;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v78 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_102;
      }
      swift_bridgeObjectRetain();
      unint64_t v79 = specialized __RawDictionaryStorage.find<A>(_:)(v75, v77);
      if (v80)
      {
        uint64_t v81 = (uint64_t *)(*(void *)(v78 + 56) + 56 * v79);
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        uint64_t v84 = v81[2];
        uint64_t v85 = v81[3];
        uint64_t v86 = v81[6];
        uint64_t v403 = v81[4];
        uint64_t v410 = v81[5];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_102:
        uint64_t v83 = 0;
        uint64_t v82 = 0;
        uint64_t v84 = 0;
        uint64_t v85 = 0;
        uint64_t v403 = 0;
        uint64_t v410 = 0;
        uint64_t v86 = 0;
      }
      uint64_t v322 = v86;
      uint64_t v327 = v85;
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v524 = v416;
      BYTE8(v524) = 0;
      *(void *)&long long v525 = v422;
      *((void *)&v525 + 1) = v83;
      *(void *)&long long v526 = v82;
      *((void *)&v526 + 1) = v84;
      *(void *)&long long v527 = v85;
      *((void *)&v527 + 1) = v403;
      *(void *)&long long v528 = v410;
      *((void *)&v528 + 1) = v86;
      uint64_t v339 = v82;
      uint64_t v333 = v84;
      if (v25 && REBindPointBoundComponent())
      {
        uint64_t v170 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v171 = swift_dynamicCastClassUnconditional();
LABEL_107:
          uint64_t v431 = v171;
          goto LABEL_109;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_232:
          __break(1u);
          goto LABEL_233;
        }
        uint64_t v258 = specialized static Entity.entityInfoType(_:)(v170);
        if (!v258)
        {
          uint64_t v171 = makeEntity(for:)(v170);
          goto LABEL_107;
        }
        uint64_t v259 = (*(uint64_t (**)(void))(v258 + 232))();
        uint64_t v260 = *(void *)(v259 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v260, 0);
        *(void *)(v259 + 16) = v170;
        MEMORY[0x22A68E750](v170, v259);
        uint64_t v431 = v259;
        swift_release();
      }
      else
      {
        uint64_t v431 = 0;
      }
LABEL_109:
      specialized ActionEventData.action<A>()((uint64_t)&v512);
      if (v516)
      {
        char v302 = v523;
        uint64_t v359 = v516;
        uint64_t v364 = v521;
        uint64_t v172 = v520;
        uint64_t v368 = v519;
        uint64_t v374 = v522;
        uint64_t v282 = v518;
        uint64_t v352 = v517;
        uint64_t v173 = v515;
        uint64_t v174 = v514;
        uint64_t v175 = v513;
        uint64_t v176 = v512;
        uint64_t v309 = v512;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v176, v175, v174, v173, v359);
        char v177 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Transform>>);
        long long v472 = v527;
        long long v473 = v528;
        long long v470 = v525;
        long long v471 = v526;
        double v178 = v26;
        double v179 = v27;
        uint64_t v445 = v175;
        char v446 = v174 & 1;
        uint64_t v447 = v173;
        uint64_t v448 = v359;
        uint64_t v449 = v352;
        uint64_t v450 = v282;
        uint64_t v451 = v368;
        uint64_t v452 = v172;
        uint64_t v453 = v364;
        uint64_t v454 = v374;
        char v455 = v302 & 1;
        char v290 = v177 & 1;
        char v456 = v177 & 1;
        uint64_t v444 = v309;
        v443[0] = v437;
        uint64_t v457 = v431;
        char v458 = v383;
        double v459 = v178;
        double v460 = v179;
        uint64_t v461 = Strong;
        uint64_t v462 = v389;
        double v463 = -1.0;
        char v464 = 0;
        unint64_t v465 = 0xBFF0000000000000;
        char v466 = 0;
        unint64_t v467 = 0xBFF0000000000000;
        char v468 = 0;
        long long v469 = v524;
        uint64_t v474 = v395;
        swift_retain();
        swift_retain();
        a5(v443);
        outlined consume of SetEntityPropertyAction<Transform>?(v309, v175, v174, v173, v359);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v475 = v437;
        uint64_t v476 = v309;
        uint64_t v477 = v175;
        char v478 = v174 & 1;
        uint64_t v479 = v173;
        uint64_t v480 = v359;
        uint64_t v481 = v352;
        uint64_t v482 = v282;
        uint64_t v483 = v368;
        uint64_t v484 = v172;
        uint64_t v485 = v364;
        uint64_t v486 = v374;
        char v487 = v302 & 1;
        char v488 = v290;
        uint64_t v489 = v431;
        char v490 = v383;
        double v491 = v178;
        double v492 = v179;
        uint64_t v493 = Strong;
        uint64_t v494 = v389;
        double v495 = -1.0;
        char v496 = 0;
        unint64_t v497 = 0xBFF0000000000000;
        char v498 = 0;
        unint64_t v499 = 0xBFF0000000000000;
        char v500 = 0;
        uint64_t v501 = v416;
        char v502 = 0;
        uint64_t v503 = v422;
        uint64_t v504 = v83;
        uint64_t v505 = v339;
        uint64_t v506 = v333;
        uint64_t v507 = v327;
        uint64_t v508 = v403;
        uint64_t v509 = v410;
        uint64_t v510 = v322;
        uint64_t v169 = v395;
        goto LABEL_195;
      }
      goto LABEL_196;
    case 8:
      uint64_t v28 = *(void *)a2;
      uint64_t v29 = *(void *)(a2 + 8);
      uint64_t v423 = *(void *)(a2 + 32);
      uint64_t v427 = *(void *)(a2 + 40);
      uint64_t v30 = *(void *)(a2 + 56);
      uint64_t v384 = *(void *)(a2 + 48);
      float v31 = *(float *)(a2 + 64);
      float v32 = *(float *)(a2 + 68);
      char v390 = *(unsigned char *)(a2 + 72);
      unint64_t v396 = *(void *)(a2 + 80);
      unint64_t v400 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          goto LABEL_225;
        }
        uint64_t v87 = specialized static Entity.entityInfoType(_:)(v28);
        if (v87)
        {
          uint64_t v88 = (*(uint64_t (**)(void))(v87 + 232))();
          uint64_t v89 = *(void *)(v88 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v89, 0);
          *(void *)(v88 + 16) = v28;
          MEMORY[0x22A68E750](v28, v88);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v28);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v90 = swift_allocObject();
      swift_weakInit();
      uint64_t v411 = v90;
      *(void *)(v90 + 16) = v29;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v91 = String.init(cString:)();
      uint64_t v93 = v92;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v94 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_113;
      }
      swift_bridgeObjectRetain();
      unint64_t v95 = specialized __RawDictionaryStorage.find<A>(_:)(v91, v93);
      if (v96)
      {
        uint64_t v97 = (uint64_t *)(*(void *)(v94 + 56) + 56 * v95);
        uint64_t v98 = v97[1];
        uint64_t v418 = *v97;
        uint64_t v99 = v97[2];
        uint64_t v100 = v97[3];
        uint64_t v101 = v97[4];
        uint64_t v102 = v97[5];
        uint64_t v103 = v97[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_113:
        uint64_t v418 = 0;
        uint64_t v98 = 0;
        uint64_t v99 = 0;
        uint64_t v100 = 0;
        uint64_t v101 = 0;
        uint64_t v102 = 0;
        uint64_t v103 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v524 = v423;
      BYTE8(v524) = 0;
      *(void *)&long long v525 = v427;
      *((void *)&v525 + 1) = v418;
      *(void *)&long long v526 = v98;
      *((void *)&v526 + 1) = v99;
      *(void *)&long long v527 = v100;
      *((void *)&v527 + 1) = v101;
      *(void *)&long long v528 = v102;
      *((void *)&v528 + 1) = v103;
      uint64_t v180 = v101;
      uint64_t v181 = v102;
      uint64_t v182 = v103;
      uint64_t v353 = v99;
      uint64_t v346 = v100;
      if (v30 && REBindPointBoundComponent())
      {
        uint64_t v183 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v184 = swift_dynamicCastClassUnconditional();
LABEL_118:
          uint64_t v439 = v184;
          goto LABEL_120;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_233:
          __break(1u);
          goto LABEL_234;
        }
        uint64_t v261 = specialized static Entity.entityInfoType(_:)(v183);
        if (!v261)
        {
          uint64_t v184 = makeEntity(for:)(v183);
          goto LABEL_118;
        }
        uint64_t v262 = (*(uint64_t (**)(void))(v261 + 232))();
        uint64_t v263 = *(void *)(v262 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v263, 0);
        *(void *)(v262 + 16) = v183;
        MEMORY[0x22A68E750](v183, v262);
        uint64_t v439 = v262;
        swift_release();
      }
      else
      {
        uint64_t v439 = 0;
      }
LABEL_120:
      specialized ActionEventData.action<A>()((uint64_t)&v512);
      if (v516)
      {
        char v315 = v523;
        uint64_t v369 = v521;
        uint64_t v375 = v522;
        uint64_t v185 = v520;
        uint64_t v186 = v519;
        uint64_t v334 = v180;
        uint64_t v281 = v518;
        uint64_t v187 = v517;
        uint64_t v323 = v181;
        uint64_t v188 = v515;
        uint64_t v365 = v514;
        uint64_t v189 = v182;
        uint64_t v190 = v513;
        uint64_t v340 = v189;
        uint64_t v191 = v512;
        uint64_t v310 = v512;
        uint64_t v277 = v516;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v191, v190, v365, v188, v277);
        char v192 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SetEntityPropertyAction<Transform>>);
        long long v472 = v527;
        long long v473 = v528;
        long long v470 = v525;
        long long v471 = v526;
        double v193 = v31;
        double v194 = v32;
        uint64_t v445 = v190;
        char v446 = v365 & 1;
        uint64_t v447 = v188;
        uint64_t v448 = v277;
        uint64_t v449 = v187;
        uint64_t v450 = v281;
        uint64_t v451 = v186;
        uint64_t v452 = v185;
        uint64_t v453 = v369;
        uint64_t v454 = v375;
        char v455 = v315 & 1;
        char v291 = v192 & 1;
        char v456 = v192 & 1;
        uint64_t v444 = v310;
        v443[0] = v411;
        uint64_t v457 = v439;
        char v458 = v390;
        double v459 = v193;
        double v460 = v194;
        uint64_t v462 = 0;
        double v463 = 0.0;
        uint64_t v461 = Strong;
        char v464 = 1;
        unint64_t v465 = v396;
        char v466 = 0;
        unint64_t v467 = v400;
        char v468 = 0;
        long long v469 = v524;
        uint64_t v474 = v384;
        swift_retain();
        swift_retain();
        a5(v443);
        outlined consume of SetEntityPropertyAction<Transform>?(v310, v190, v365, v188, v277);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v475 = v411;
        uint64_t v476 = v310;
        uint64_t v477 = v190;
        char v478 = v365 & 1;
        uint64_t v479 = v188;
        uint64_t v480 = v277;
        uint64_t v481 = v187;
        uint64_t v482 = v281;
        uint64_t v483 = v186;
        uint64_t v484 = v185;
        uint64_t v485 = v369;
        uint64_t v486 = v375;
        char v487 = v315 & 1;
        char v488 = v291;
        uint64_t v489 = v439;
        char v490 = v390;
        double v491 = v193;
        double v492 = v194;
        double v495 = 0.0;
        uint64_t v493 = Strong;
        uint64_t v494 = 0;
        char v496 = 1;
        unint64_t v497 = v396;
        char v498 = 0;
        unint64_t v499 = v400;
        char v500 = 0;
        uint64_t v501 = v423;
        char v502 = 0;
        uint64_t v503 = v427;
        uint64_t v504 = v418;
        uint64_t v505 = v98;
        uint64_t v506 = v353;
        uint64_t v507 = v346;
        uint64_t v508 = v334;
        uint64_t v509 = v323;
        uint64_t v510 = v340;
        uint64_t v169 = v384;
        goto LABEL_195;
      }
      goto LABEL_196;
    case 16:
      uint64_t v33 = *(void *)a2;
      uint64_t v34 = *(void *)(a2 + 8);
      uint64_t v433 = *(void *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 56);
      unint64_t v424 = *(void *)(a2 + 32);
      uint64_t v426 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          goto LABEL_226;
        }
        uint64_t v104 = specialized static Entity.entityInfoType(_:)(v33);
        if (v104)
        {
          uint64_t v105 = (*(uint64_t (**)(void))(v104 + 232))();
          uint64_t v106 = *(void *)(v105 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v106, 0);
          *(void *)(v105 + 16) = v33;
          MEMORY[0x22A68E750](v33, v105);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v33);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v107 = swift_allocObject();
      swift_weakInit();
      uint64_t v412 = v107;
      *(void *)(v107 + 16) = v34;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v108 = String.init(cString:)();
      uint64_t v110 = v109;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v111 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_124;
      }
      swift_bridgeObjectRetain();
      unint64_t v112 = specialized __RawDictionaryStorage.find<A>(_:)(v108, v110);
      if (v113)
      {
        uint64_t v114 = (uint64_t *)(*(void *)(v111 + 56) + 56 * v112);
        uint64_t v115 = *v114;
        uint64_t v116 = v114[1];
        uint64_t v117 = v114[2];
        uint64_t v118 = v114[3];
        uint64_t v119 = v114[4];
        uint64_t v120 = v114[5];
        uint64_t v121 = v114[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_124:
        uint64_t v115 = 0;
        uint64_t v116 = 0;
        uint64_t v117 = 0;
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        uint64_t v120 = 0;
        uint64_t v121 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v524 = 0;
      BYTE8(v524) = 0;
      *(void *)&long long v525 = v433;
      *((void *)&v525 + 1) = v115;
      *(void *)&long long v526 = v116;
      *((void *)&v526 + 1) = v117;
      *(void *)&long long v527 = v118;
      *((void *)&v527 + 1) = v119;
      *(void *)&long long v528 = v120;
      *((void *)&v528 + 1) = v121;
      uint64_t v385 = v120;
      uint64_t v391 = v119;
      if (v35)
      {
        if (REBindPointBoundComponent())
        {
          uint64_t v195 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
            type metadata accessor for Entity();
            uint64_t v196 = swift_dynamicCastClassUnconditional();
          }
          else
          {
            if (REEntityIsBeingDestroyed())
            {
LABEL_234:
              __break(1u);
              goto LABEL_235;
            }
            uint64_t v264 = specialized static Entity.entityInfoType(_:)(v195);
            if (v264)
            {
              uint64_t v197 = (*(uint64_t (**)(void))(v264 + 232))();
              uint64_t v265 = *(void *)(v197 + 16);
              swift_retain();
              MEMORY[0x22A68E750](v265, 0);
              *(void *)(v197 + 16) = v195;
              MEMORY[0x22A68E750](v195, v197);
              swift_release();
              goto LABEL_192;
            }
            uint64_t v196 = makeEntity(for:)(v195);
          }
          uint64_t v197 = v196;
        }
        else
        {
          uint64_t v197 = 0;
        }
      }
      else
      {
        uint64_t v197 = 0;
      }
LABEL_192:
      specialized ActionEventData.action<A>()((uint64_t)&v512);
      if (!v516) {
        goto LABEL_196;
      }
      long long v472 = v527;
      long long v473 = v528;
      long long v470 = v525;
      long long v471 = v526;
      uint64_t v406 = v519;
      uint64_t v337 = v518;
      uint64_t v367 = v117;
      uint64_t v372 = v115;
      uint64_t v266 = v514;
      uint64_t v267 = v513;
      uint64_t v268 = v197;
      uint64_t v331 = v197;
      uint64_t v269 = v512;
      uint64_t v445 = v513;
      uint64_t v313 = v514;
      uint64_t v319 = v517;
      char v349 = v514 & 1;
      char v446 = v514 & 1;
      uint64_t v447 = v515;
      uint64_t v448 = v516;
      uint64_t v270 = v515;
      uint64_t v449 = v517;
      uint64_t v450 = v518;
      uint64_t v451 = v519;
      uint64_t v452 = v520;
      uint64_t v306 = v520;
      uint64_t v453 = v521;
      uint64_t v454 = v522;
      uint64_t v399 = v521;
      uint64_t v271 = v522;
      char v356 = v523 & 1;
      char v455 = v523 & 1;
      char v456 = 1;
      uint64_t v444 = v512;
      uint64_t v288 = v512;
      v443[0] = v412;
      uint64_t v457 = v268;
      char v458 = 0;
      double v459 = 0.0;
      double v460 = 0.0;
      uint64_t v462 = 0;
      double v463 = 0.0;
      uint64_t v461 = Strong;
      char v464 = 1;
      unint64_t v465 = v424;
      char v466 = 0;
      unint64_t v467 = 0;
      char v468 = 1;
      long long v469 = v524;
      uint64_t v474 = v426;
      uint64_t v272 = v516;
      uint64_t v300 = v516;
      swift_retain();
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v269, v267, v266, v270, v272);
      swift_retain();
      a5(v443);
      outlined consume of SetEntityPropertyAction<Transform>?(v288, v267, v313, v270, v300);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v475 = v412;
      uint64_t v476 = v288;
      uint64_t v477 = v267;
      char v478 = v349;
      uint64_t v479 = v270;
      uint64_t v480 = v300;
      uint64_t v481 = v319;
      uint64_t v482 = v337;
      uint64_t v483 = v406;
      uint64_t v484 = v306;
      uint64_t v485 = v399;
      uint64_t v486 = v271;
      char v487 = v356;
      char v488 = 1;
      uint64_t v489 = v331;
      char v490 = 0;
      double v492 = 0.0;
      double v491 = 0.0;
      double v495 = 0.0;
      uint64_t v493 = Strong;
      uint64_t v494 = 0;
      char v496 = 1;
      unint64_t v497 = v424;
      char v498 = 0;
      unint64_t v499 = 0;
      char v500 = 1;
      uint64_t v501 = 0;
      char v502 = 0;
      uint64_t v503 = v433;
      uint64_t v504 = v372;
      uint64_t v505 = v116;
      uint64_t v506 = v367;
      uint64_t v507 = v118;
      uint64_t v508 = v391;
      uint64_t v509 = v385;
      uint64_t v230 = v121;
      goto LABEL_194;
    case 32:
      uint64_t v36 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v434 = *(void *)(a2 + 40);
      unint64_t v417 = *(void *)(a2 + 32);
      uint64_t v425 = *(void *)(a2 + 48);
      uint64_t v407 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          goto LABEL_227;
        }
        uint64_t v122 = specialized static Entity.entityInfoType(_:)(v36);
        if (v122)
        {
          uint64_t v123 = (*(uint64_t (**)(void))(v122 + 232))();
          uint64_t v124 = *(void *)(v123 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v124, 0);
          *(void *)(v123 + 16) = v36;
          MEMORY[0x22A68E750](v36, v123);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v125 = swift_allocObject();
      swift_weakInit();
      uint64_t v428 = v125;
      *(void *)(v125 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v126 = String.init(cString:)();
      uint64_t v128 = v127;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v129 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_132;
      }
      swift_bridgeObjectRetain();
      unint64_t v130 = specialized __RawDictionaryStorage.find<A>(_:)(v126, v128);
      if (v131)
      {
        uint64_t v132 = (uint64_t *)(*(void *)(v129 + 56) + 56 * v130);
        uint64_t v133 = *v132;
        uint64_t v134 = v132[1];
        uint64_t v136 = v132[2];
        uint64_t v135 = v132[3];
        uint64_t v137 = v132[4];
        uint64_t v138 = v132[5];
        uint64_t v139 = v132[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_132:
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        uint64_t v136 = 0;
        uint64_t v135 = 0;
        uint64_t v137 = 0;
        uint64_t v138 = 0;
        uint64_t v139 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v524 = 0;
      BYTE8(v524) = 0;
      *(void *)&long long v525 = v434;
      *((void *)&v525 + 1) = v133;
      *(void *)&long long v526 = v134;
      *((void *)&v526 + 1) = v136;
      *(void *)&long long v527 = v135;
      *((void *)&v527 + 1) = v137;
      *(void *)&long long v528 = v138;
      *((void *)&v528 + 1) = v139;
      uint64_t v379 = v138;
      uint64_t v386 = v137;
      if (v407 && REBindPointBoundComponent())
      {
        uint64_t v198 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v199 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_235:
            __break(1u);
            goto LABEL_236;
          }
          uint64_t v273 = specialized static Entity.entityInfoType(_:)(v198);
          if (v273)
          {
            uint64_t v200 = (*(uint64_t (**)(void))(v273 + 232))();
            uint64_t v274 = *(void *)(v200 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v274, 0);
            *(void *)(v200 + 16) = v198;
            MEMORY[0x22A68E750](v198, v200);
            swift_release();
            goto LABEL_139;
          }
          uint64_t v199 = makeEntity(for:)(v198);
        }
        uint64_t v200 = v199;
      }
      else
      {
        uint64_t v200 = 0;
      }
LABEL_139:
      specialized ActionEventData.action<A>()((uint64_t)&v512);
      uint64_t v201 = v516;
      if (!v516) {
        goto LABEL_196;
      }
      long long v472 = v527;
      long long v473 = v528;
      long long v470 = v525;
      long long v471 = v526;
      uint64_t v202 = v522;
      uint64_t v392 = v520;
      uint64_t v328 = v518;
      uint64_t v360 = v136;
      uint64_t v316 = v517;
      uint64_t v324 = v515;
      uint64_t v203 = v514;
      uint64_t v297 = v519;
      uint64_t v303 = v513;
      uint64_t v204 = v512;
      uint64_t v444 = v512;
      uint64_t v445 = v513;
      uint64_t v292 = v514;
      char v341 = v514 & 1;
      char v446 = v514 & 1;
      uint64_t v447 = v515;
      uint64_t v448 = v516;
      uint64_t v449 = v517;
      uint64_t v450 = v518;
      uint64_t v451 = v519;
      uint64_t v452 = v520;
      uint64_t v453 = v521;
      uint64_t v454 = v522;
      uint64_t v397 = v521;
      char v347 = v523 & 1;
      char v455 = v523 & 1;
      char v456 = 1;
      uint64_t v284 = v512;
      uint64_t v286 = v516;
      v443[0] = v428;
      uint64_t v457 = v200;
      char v458 = 0;
      double v459 = 0.0;
      double v460 = 0.0;
      uint64_t v462 = 0;
      double v463 = 0.0;
      uint64_t v461 = Strong;
      char v464 = 1;
      unint64_t v465 = v417;
      char v466 = 0;
      unint64_t v467 = 0;
      char v468 = 1;
      long long v469 = v524;
      uint64_t v474 = v425;
      swift_retain();
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v204, v303, v203, v324, v201);
      swift_retain();
      a5(v443);
      outlined consume of SetEntityPropertyAction<Transform>?(v284, v303, v292, v324, v286);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v475 = v428;
      uint64_t v476 = v284;
      uint64_t v477 = v303;
      char v478 = v341;
      uint64_t v479 = v324;
      uint64_t v480 = v286;
      uint64_t v481 = v316;
      uint64_t v482 = v328;
      uint64_t v483 = v297;
      uint64_t v484 = v392;
      uint64_t v485 = v397;
      uint64_t v486 = v202;
      char v487 = v347;
      char v488 = 1;
      uint64_t v489 = v200;
      char v490 = 0;
      double v492 = 0.0;
      double v491 = 0.0;
      double v495 = 0.0;
      uint64_t v493 = Strong;
      uint64_t v494 = 0;
      char v496 = 1;
      unint64_t v497 = v417;
      char v498 = 0;
      unint64_t v499 = 0;
      char v500 = 1;
      uint64_t v501 = 0;
      char v502 = 0;
      uint64_t v503 = v434;
      uint64_t v504 = v133;
      uint64_t v505 = v134;
      uint64_t v506 = v360;
      uint64_t v507 = v135;
      uint64_t v508 = v386;
      uint64_t v509 = v379;
      uint64_t v205 = v139;
      goto LABEL_175;
    case 64:
      uint64_t v38 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v40 = *(void *)(a2 + 24);
      uint64_t v41 = *(void *)(a2 + 40);
      uint64_t v425 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_227:
          __break(1u);
          goto LABEL_228;
        }
        uint64_t v140 = specialized static Entity.entityInfoType(_:)(v38);
        if (v140)
        {
          uint64_t v141 = (*(uint64_t (**)(void))(v140 + 232))();
          uint64_t v142 = *(void *)(v141 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v142, 0);
          *(void *)(v141 + 16) = v38;
          MEMORY[0x22A68E750](v38, v141);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v143 = swift_allocObject();
      swift_weakInit();
      uint64_t v438 = v143;
      *(void *)(v143 + 16) = v39;
      swift_beginAccess();
      swift_weakAssign();
      if (!v41) {
        goto LABEL_166;
      }
      if (REBindPointBoundComponent())
      {
        uint64_t v144 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v145 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v41 = v145;
          goto LABEL_166;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_229:
          __break(1u);
LABEL_230:
          __break(1u);
          goto LABEL_231;
        }
        uint64_t v231 = specialized static Entity.entityInfoType(_:)(v144);
        if (!v231)
        {
          uint64_t v145 = makeEntity(for:)(v144);
          goto LABEL_77;
        }
        uint64_t v41 = (*(uint64_t (**)(void))(v231 + 232))();
        uint64_t v232 = *(void *)(v41 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v232, 0);
        *(void *)(v41 + 16) = v144;
        MEMORY[0x22A68E750](v144, v41);
        swift_release();
      }
      else
      {
        uint64_t v41 = 0;
      }
LABEL_166:
      uint64_t v233 = String.init(cString:)();
      uint64_t v235 = v234;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v236 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v237 = specialized __RawDictionaryStorage.find<A>(_:)(v233, v235);
        if (v238)
        {
          uint64_t v239 = (uint64_t *)(*(void *)(v236 + 56) + 56 * v237);
          uint64_t v240 = *v239;
          uint64_t v241 = v239[1];
          uint64_t v242 = v239[2];
          uint64_t v243 = v239[3];
          uint64_t v245 = v239[4];
          uint64_t v244 = v239[5];
          uint64_t v432 = v239[6];
          swift_bridgeObjectRelease();
LABEL_173:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v524 = 0;
          BYTE8(v524) = 0;
          *(void *)&long long v525 = v40;
          *((void *)&v525 + 1) = v240;
          *(void *)&long long v526 = v241;
          *((void *)&v526 + 1) = v242;
          *(void *)&long long v527 = v243;
          *((void *)&v527 + 1) = v245;
          *(void *)&long long v528 = v244;
          *((void *)&v528 + 1) = v432;
          specialized ActionEventData.action<A>()((uint64_t)&v512);
          if (!v516) {
            goto LABEL_196;
          }
          long long v472 = v527;
          long long v473 = v528;
          long long v470 = v525;
          long long v471 = v526;
          uint64_t v312 = v519;
          uint64_t v376 = v40;
          uint64_t v380 = v240;
          uint64_t v343 = v518;
          uint64_t v246 = v41;
          uint64_t v413 = v41;
          uint64_t v247 = v515;
          uint64_t v371 = v243;
          uint64_t v248 = v514;
          uint64_t v330 = v517;
          uint64_t v336 = v513;
          uint64_t v249 = v512;
          uint64_t v445 = v513;
          uint64_t v299 = v514;
          char v355 = v514 & 1;
          char v446 = v514 & 1;
          uint64_t v447 = v515;
          uint64_t v448 = v516;
          uint64_t v449 = v517;
          uint64_t v450 = v518;
          uint64_t v451 = v519;
          uint64_t v452 = v520;
          uint64_t v318 = v520;
          uint64_t v453 = v521;
          uint64_t v454 = v522;
          uint64_t v405 = v521;
          uint64_t v250 = v522;
          char v361 = v523 & 1;
          char v455 = v523 & 1;
          char v456 = 1;
          uint64_t v444 = v512;
          uint64_t v305 = v512;
          v443[0] = v438;
          uint64_t v457 = v246;
          char v458 = 0;
          double v459 = 0.0;
          double v460 = 0.0;
          uint64_t v462 = 0;
          double v463 = 0.0;
          uint64_t v461 = Strong;
          char v464 = 1;
          unint64_t v465 = 0;
          char v466 = 1;
          unint64_t v467 = 0;
          char v468 = 1;
          long long v469 = v524;
          uint64_t v474 = v425;
          uint64_t v251 = v516;
          uint64_t v294 = v516;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v249, v336, v248, v247, v251);
          swift_retain();
          a5(v443);
          outlined consume of SetEntityPropertyAction<Transform>?(v305, v336, v299, v247, v294);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v475 = v438;
          uint64_t v476 = v305;
          uint64_t v477 = v336;
          char v478 = v355;
          uint64_t v479 = v247;
          uint64_t v480 = v294;
          uint64_t v481 = v330;
          uint64_t v482 = v343;
          uint64_t v483 = v312;
          uint64_t v484 = v318;
          uint64_t v485 = v405;
          uint64_t v486 = v250;
          char v487 = v361;
          char v488 = 1;
          uint64_t v489 = v413;
          char v490 = 0;
          double v492 = 0.0;
          double v491 = 0.0;
          double v495 = 0.0;
          uint64_t v493 = Strong;
          uint64_t v494 = 0;
          char v496 = 1;
          unint64_t v497 = 0;
          char v498 = 1;
          unint64_t v499 = 0;
          char v500 = 1;
          uint64_t v501 = 0;
          char v502 = 0;
          uint64_t v503 = v376;
          uint64_t v504 = v380;
          uint64_t v505 = v241;
          uint64_t v506 = v242;
          uint64_t v507 = v371;
          uint64_t v508 = v245;
          uint64_t v509 = v244;
          uint64_t v205 = v432;
LABEL_175:
          uint64_t v510 = v205;
          uint64_t v169 = v425;
          goto LABEL_195;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v240 = 0;
      uint64_t v241 = 0;
      uint64_t v242 = 0;
      uint64_t v243 = 0;
      uint64_t v245 = 0;
      uint64_t v244 = 0;
      uint64_t v432 = 0;
      goto LABEL_173;
    default:
      if (a4 != 128) {
        goto LABEL_197;
      }
      uint64_t v13 = *(void *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 40);
      uint64_t v426 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_228:
          __break(1u);
          goto LABEL_229;
        }
        uint64_t v206 = specialized static Entity.entityInfoType(_:)(v13);
        if (v206)
        {
          uint64_t v207 = (*(uint64_t (**)(void))(v206 + 232))();
          uint64_t v208 = *(void *)(v207 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v208, 0);
          *(void *)(v207 + 16) = v13;
          MEMORY[0x22A68E750](v13, v207);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v13);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v209 = swift_allocObject();
      swift_weakInit();
      uint64_t v419 = v209;
      *(void *)(v209 + 16) = v14;
      swift_beginAccess();
      swift_weakAssign();
      if (v16 && REBindPointBoundComponent())
      {
        uint64_t v210 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v211 = swift_dynamicCastClassUnconditional();
LABEL_149:
          uint64_t v212 = v211;
          goto LABEL_151;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_236:
          __break(1u);
          JUMPOUT(0x227F977C8);
        }
        uint64_t v275 = specialized static Entity.entityInfoType(_:)(v210);
        if (!v275)
        {
          uint64_t v211 = makeEntity(for:)(v210);
          goto LABEL_149;
        }
        uint64_t v212 = (*(uint64_t (**)(void))(v275 + 232))();
        uint64_t v276 = *(void *)(v212 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v276, 0);
        *(void *)(v212 + 16) = v210;
        MEMORY[0x22A68E750](v210, v212);
        swift_release();
      }
      else
      {
        uint64_t v212 = 0;
      }
LABEL_151:
      uint64_t v213 = String.init(cString:)();
      uint64_t v215 = v214;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v216 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v217 = specialized __RawDictionaryStorage.find<A>(_:)(v213, v215);
        if (v218)
        {
          uint64_t v219 = (uint64_t *)(*(void *)(v216 + 56) + 56 * v217);
          uint64_t v220 = *v219;
          uint64_t v221 = v219[1];
          uint64_t v222 = v219[2];
          uint64_t v223 = v219[3];
          uint64_t v225 = v219[4];
          uint64_t v224 = v219[5];
          uint64_t v440 = v219[6];
          swift_bridgeObjectRelease();
LABEL_160:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v524 = 0;
          BYTE8(v524) = 0;
          *(void *)&long long v525 = v15;
          *((void *)&v525 + 1) = v220;
          *(void *)&long long v526 = v221;
          *((void *)&v526 + 1) = v222;
          *(void *)&long long v527 = v223;
          *((void *)&v527 + 1) = v225;
          *(void *)&long long v528 = v224;
          *((void *)&v528 + 1) = v440;
          specialized ActionEventData.action<A>()((uint64_t)&v512);
          if (!v516) {
            goto LABEL_196;
          }
          long long v472 = v527;
          long long v473 = v528;
          long long v470 = v525;
          long long v471 = v526;
          uint64_t v304 = v519;
          uint64_t v311 = v212;
          uint64_t v370 = v15;
          uint64_t v342 = v517;
          uint64_t v329 = v518;
          uint64_t v335 = v515;
          uint64_t v366 = v223;
          uint64_t v226 = v514;
          uint64_t v404 = v513;
          uint64_t v227 = v512;
          uint64_t v445 = v513;
          uint64_t v293 = v520;
          uint64_t v298 = v514;
          char v348 = v514 & 1;
          char v446 = v514 & 1;
          uint64_t v447 = v515;
          uint64_t v448 = v516;
          uint64_t v449 = v517;
          uint64_t v450 = v518;
          uint64_t v451 = v519;
          uint64_t v452 = v520;
          uint64_t v453 = v521;
          uint64_t v454 = v522;
          uint64_t v398 = v521;
          uint64_t v228 = v522;
          char v354 = v523 & 1;
          char v455 = v523 & 1;
          char v456 = 1;
          uint64_t v444 = v512;
          uint64_t v287 = v512;
          v443[0] = v419;
          uint64_t v457 = v212;
          char v458 = 0;
          double v459 = 0.0;
          double v460 = 0.0;
          uint64_t v462 = 0;
          double v463 = 0.0;
          uint64_t v461 = Strong;
          char v464 = 1;
          unint64_t v465 = 0;
          char v466 = 1;
          unint64_t v467 = 0;
          char v468 = 1;
          long long v469 = v524;
          uint64_t v474 = v426;
          uint64_t v229 = v516;
          uint64_t v317 = v516;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v227, v404, v226, v335, v229);
          swift_retain();
          a5(v443);
          swift_release();
          outlined consume of SetEntityPropertyAction<Transform>?(v287, v404, v298, v335, v317);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v475 = v419;
          uint64_t v476 = v287;
          uint64_t v477 = v404;
          char v478 = v348;
          uint64_t v479 = v335;
          uint64_t v480 = v317;
          uint64_t v481 = v342;
          uint64_t v482 = v329;
          uint64_t v483 = v304;
          uint64_t v484 = v293;
          uint64_t v485 = v398;
          uint64_t v486 = v228;
          char v487 = v354;
          char v488 = 1;
          uint64_t v489 = v311;
          char v490 = 0;
          double v492 = 0.0;
          double v491 = 0.0;
          double v495 = 0.0;
          uint64_t v493 = Strong;
          uint64_t v494 = 0;
          char v496 = 1;
          unint64_t v497 = 0;
          char v498 = 1;
          unint64_t v499 = 0;
          char v500 = 1;
          uint64_t v501 = 0;
          char v502 = 0;
          uint64_t v503 = v370;
          uint64_t v504 = v220;
          uint64_t v505 = v221;
          uint64_t v506 = v222;
          uint64_t v507 = v366;
          uint64_t v508 = v225;
          uint64_t v509 = v224;
          uint64_t v230 = v440;
LABEL_194:
          uint64_t v510 = v230;
          uint64_t v169 = v426;
          goto LABEL_195;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v220 = 0;
      uint64_t v221 = 0;
      uint64_t v222 = 0;
      uint64_t v223 = 0;
      uint64_t v225 = 0;
      uint64_t v224 = 0;
      uint64_t v440 = 0;
      goto LABEL_160;
  }
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  float v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  uint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t Entity;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  double v178;
  double v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  double v185;
  double v186;
  double v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  double v191;
  double v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  double v197;
  double v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  char v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  char v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(void *);
  uint64_t Strong;
  void v272[2];
  long long v273;
  long long v274;
  long long v275;
  long long v276;
  long long v277;
  long long v278;
  long long v279;
  long long v280;
  long long v281;
  long long v282;
  long long v283;
  long long v284;
  long long v285;
  long long v286;
  long long v287;
  long long v288;
  char v289;
  uint64_t v290;
  char v291;
  double v292;
  double v293;
  uint64_t v294;
  uint64_t v295;
  double v296;
  char v297;
  unint64_t v298;
  char v299;
  unint64_t v300;
  char v301;
  long long v302;
  long long v303;
  long long v304;
  long long v305;
  long long v306;
  uint64_t v307;
  long long v308;
  long long v309;
  long long v310;
  long long v311;
  long long v312;
  long long v313;
  long long v314;
  long long v315;
  long long v316;
  long long v317;
  long long v318;
  long long v319;
  long long v320;
  long long v321;
  long long v322;
  long long v323;
  uint64_t v324;
  long long v325;
  long long v326;
  long long v327;
  long long v328;
  long long v329;
  long long v330;
  long long v331;
  long long v332;
  long long v333;
  long long v334;
  long long v335;
  long long v336;
  long long v337;
  long long v338;
  long long v339;
  long long v340;
  char v341;
  uint64_t v342;
  char v343;
  double v344;
  double v345;
  uint64_t v346;
  uint64_t v347;
  double v348;
  char v349;
  unint64_t v350;
  char v351;
  unint64_t v352;
  char v353;
  uint64_t v354;
  char v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  _OWORD v365[16];
  unsigned char v366[256];
  unsigned char v367[264];
  long long v368;
  long long v369;
  long long v370;
  long long v371;
  long long v372;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  uint64_t v270 = a5;
  switch(a4)
  {
    case 1:
      uint64_t v9 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v258 = *(void *)(a2 + 32);
      uint64_t v264 = *(void *)(a2 + 40);
      float v10 = *(void *)(a2 + 64);
      float v11 = *(float *)(a2 + 72);
      uint64_t v12 = *(float *)(a2 + 76);
      uint64_t v221 = *(unsigned char *)(a2 + 80);
      uint64_t v224 = *(void *)(a2 + 88);
      uint64_t v228 = *(void *)(a2 + 56);
      uint64_t v232 = *(void *)(a2 + 96);
      char v238 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v42 = specialized static Entity.entityInfoType(_:)(v9);
        if (v42)
        {
          uint64_t v43 = (*(uint64_t (**)(void))(v42 + 232))();
          uint64_t v44 = *(void *)(v43 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v44, 0);
          *(void *)(v43 + 16) = v9;
          MEMORY[0x22A68E750](v9, v43);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v9);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v45 = swift_allocObject();
        swift_weakInit();
        *(void *)(v45 + 16) = v8;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v46 = String.init(cString:)();
        uint64_t v48 = v47;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v49 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          char v50 = specialized __RawDictionaryStorage.find<A>(_:)(v46, v48);
          if (v51)
          {
            uint64_t v52 = (uint64_t *)(*(void *)(v49 + 56) + 56 * v50);
            uint64_t v53 = *v52;
            uint64_t v252 = v52[1];
            uint64_t v54 = v52[2];
            uint64_t v55 = v52[3];
            uint64_t v57 = v52[4];
            uint64_t v56 = v52[5];
            uint64_t v58 = v52[6];
            swift_bridgeObjectRelease();
LABEL_80:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&uint64_t v368 = v258;
            BYTE8(v368) = 0;
            *(void *)&uint64_t v369 = v264;
            *((void *)&v369 + 1) = v53;
            *(void *)&uint64_t v370 = v252;
            *((void *)&v370 + 1) = v54;
            *(void *)&uint64_t v371 = v55;
            *((void *)&v371 + 1) = v57;
            *(void *)&uint64_t v372 = v56;
            *((void *)&v372 + 1) = v58;
            char v218 = v56;
            if (!v10) {
              goto LABEL_151;
            }
            if (!REBindPointBoundComponent())
            {
              float v10 = 0;
              goto LABEL_151;
            }
            uint64_t v245 = v58;
            uint64_t Entity = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v145 = swift_dynamicCastClassUnconditional();
              goto LABEL_84;
            }
            if ((REEntityIsBeingDestroyed() & 1) == 0)
            {
              uint64_t v175 = specialized static Entity.entityInfoType(_:)(Entity);
              if (v175)
              {
                float v10 = (*(uint64_t (**)(void))(v175 + 232))();
                uint64_t v176 = *(void *)(v10 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v176, 0);
                *(void *)(v10 + 16) = Entity;
                MEMORY[0x22A68E750](Entity, v10);
                swift_release();
                goto LABEL_150;
              }
              uint64_t v145 = makeEntity(for:)(Entity);
LABEL_84:
              float v10 = v145;
LABEL_150:
              uint64_t v58 = v245;
LABEL_151:
              specialized ActionEventData.action<A>()(v365);
              outlined init with take of Transform?((uint64_t)v365, (uint64_t)v366, &demangling cache variable for type metadata for FromToByAction<Transform>?);
              outlined init with take of Transform?((uint64_t)v366, (uint64_t)v367, &demangling cache variable for type metadata for FromToByAction<Transform>?);
              if (_s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v367) != 1)
              {
                outlined init with take of Transform?((uint64_t)v366, (uint64_t)&v308, &demangling cache variable for type metadata for FromToByAction<Transform>?);
                swift_retain();
                outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
                char v177 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Transform>>);
                double v178 = v11;
                double v179 = v12;
                char v285 = v320;
                uint64_t v286 = v321;
                uint64_t v287 = v322;
                uint64_t v288 = v323;
                uint64_t v281 = v316;
                uint64_t v282 = v317;
                char v283 = v318;
                uint64_t v284 = v319;
                uint64_t v277 = v312;
                uint64_t v278 = v313;
                uint64_t v279 = v314;
                uint64_t v280 = v315;
                uint64_t v273 = v308;
                uint64_t v274 = v309;
                uint64_t v275 = v310;
                uint64_t v276 = v311;
                uint64_t v214 = v177 & 1;
                uint64_t v289 = v177 & 1;
                v272[0] = v45;
                char v290 = v10;
                uint64_t v215 = v53;
                char v291 = v221;
                uint64_t v292 = v178;
                uint64_t v293 = v179;
                uint64_t v294 = Strong;
                char v295 = v228;
                uint64_t v297 = 0;
                uint64_t v296 = -1.0;
                uint64_t v250 = v58;
                uint64_t v298 = v224;
                uint64_t v299 = 0;
                char v301 = 0;
                uint64_t v304 = v370;
                uint64_t v305 = v371;
                uint64_t v306 = v372;
                char v302 = v368;
                uint64_t v303 = v369;
                uint64_t v180 = v238;
                uint64_t v300 = v232;
                uint64_t v307 = v238;
                swift_retain();
                swift_retain();
                v270(v272);
                outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v324 = v45;
                uint64_t v337 = v320;
                uint64_t v338 = v321;
                uint64_t v339 = v322;
                uint64_t v340 = v323;
                uint64_t v334 = v317;
                uint64_t v335 = v318;
                uint64_t v336 = v319;
                uint64_t v329 = v312;
                uint64_t v330 = v313;
                uint64_t v331 = v314;
                uint64_t v332 = v315;
                uint64_t v333 = v316;
                uint64_t v325 = v308;
                uint64_t v326 = v309;
                uint64_t v327 = v310;
                uint64_t v328 = v311;
                char v341 = v214;
                uint64_t v342 = v10;
                uint64_t v343 = v221;
                uint64_t v344 = v178;
                uint64_t v345 = v179;
                uint64_t v346 = Strong;
                char v347 = v228;
                char v349 = 0;
                char v348 = -1.0;
                uint64_t v350 = v224;
                uint64_t v351 = 0;
                uint64_t v353 = 0;
                uint64_t v352 = v232;
                char v354 = v258;
                char v355 = 0;
                char v356 = v264;
                uint64_t v357 = v215;
                uint64_t v358 = v252;
                uint64_t v359 = v54;
                uint64_t v360 = v55;
                char v361 = v57;
                uint64_t v181 = v218;
LABEL_171:
                uint64_t v362 = v181;
                uint64_t v363 = v250;
                uint64_t v364 = v180;
                goto LABEL_202;
              }
              goto LABEL_198;
            }
            goto LABEL_220;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v53 = 0;
        uint64_t v252 = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v57 = 0;
        uint64_t v56 = 0;
        uint64_t v58 = 0;
        goto LABEL_80;
      }
      __break(1u);
      goto LABEL_212;
    case 2:
      float v19 = *(void *)a2;
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v259 = *(void *)(a2 + 40);
      uint64_t v266 = *(void *)(a2 + 32);
      uint64_t v20 = *(float *)(a2 + 56);
      uint64_t v229 = *(void *)(a2 + 64);
      uint64_t v233 = *(void *)(a2 + 48);
      uint64_t v225 = *(void *)(a2 + 72);
      float v21 = *(void *)(a2 + 88);
      float v22 = *(float *)(a2 + 96);
      uint64_t v23 = *(float *)(a2 + 100);
      uint64_t v222 = *(unsigned char *)(a2 + 104);
      uint64_t v239 = *(void *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_212:
        __break(1u);
        goto LABEL_213;
      }
      uint64_t v59 = specialized static Entity.entityInfoType(_:)(v19);
      if (v59)
      {
        uint64_t v60 = (*(uint64_t (**)(void))(v59 + 232))();
        uint64_t v61 = *(void *)(v60 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v61, 0);
        *(void *)(v60 + 16) = v19;
        MEMORY[0x22A68E750](v19, v60);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v19);
      }
LABEL_33:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v62 = swift_allocObject();
      swift_weakInit();
      *(void *)(v62 + 16) = v18;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v63 = String.init(cString:)();
      char v65 = v64;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v66 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v67 = specialized __RawDictionaryStorage.find<A>(_:)(v63, v65);
        if (v68)
        {
          uint64_t v69 = (uint64_t *)(*(void *)(v66 + 56) + 56 * v67);
          uint64_t v70 = *v69;
          uint64_t v253 = v69[1];
          uint64_t v71 = v69[2];
          uint64_t v72 = v69[3];
          uint64_t v74 = v69[4];
          uint64_t v73 = v69[5];
          uint64_t v75 = v69[6];
          swift_bridgeObjectRelease();
          goto LABEL_87;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v70 = 0;
      uint64_t v253 = 0;
      uint64_t v71 = 0;
      uint64_t v72 = 0;
      uint64_t v74 = 0;
      uint64_t v73 = 0;
      uint64_t v75 = 0;
LABEL_87:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v368 = v266;
      BYTE8(v368) = 0;
      *(void *)&uint64_t v369 = v259;
      *((void *)&v369 + 1) = v70;
      *(void *)&uint64_t v370 = v253;
      *((void *)&v370 + 1) = v71;
      *(void *)&uint64_t v371 = v72;
      *((void *)&v371 + 1) = v74;
      *(void *)&uint64_t v372 = v73;
      *((void *)&v372 + 1) = v75;
      uint64_t v219 = v73;
      if (!v21) {
        goto LABEL_157;
      }
      if (!REBindPointBoundComponent())
      {
        float v21 = 0;
        goto LABEL_157;
      }
      uint64_t v246 = v75;
      uint64_t v146 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v147 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v182 = specialized static Entity.entityInfoType(_:)(v146);
        if (v182)
        {
          float v21 = (*(uint64_t (**)(void))(v182 + 232))();
          uint64_t v183 = *(void *)(v21 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v183, 0);
          *(void *)(v21 + 16) = v146;
          MEMORY[0x22A68E750](v146, v21);
          swift_release();
          goto LABEL_156;
        }
        uint64_t v147 = makeEntity(for:)(v146);
      }
      float v21 = v147;
LABEL_156:
      uint64_t v75 = v246;
LABEL_157:
      specialized ActionEventData.action<A>()(v365);
      outlined init with take of Transform?((uint64_t)v365, (uint64_t)v366, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      outlined init with take of Transform?((uint64_t)v366, (uint64_t)v367, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      if (_s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v367) == 1) {
        goto LABEL_198;
      }
      outlined init with take of Transform?((uint64_t)v366, (uint64_t)&v308, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      swift_retain();
      outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
      uint64_t v184 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Transform>>);
      uint64_t v185 = v22;
      uint64_t v186 = v23;
      uint64_t v187 = v20;
      char v285 = v320;
      uint64_t v286 = v321;
      uint64_t v287 = v322;
      uint64_t v288 = v323;
      uint64_t v281 = v316;
      uint64_t v282 = v317;
      char v283 = v318;
      uint64_t v284 = v319;
      uint64_t v277 = v312;
      uint64_t v278 = v313;
      uint64_t v279 = v314;
      uint64_t v280 = v315;
      uint64_t v273 = v308;
      uint64_t v274 = v309;
      uint64_t v275 = v310;
      uint64_t v276 = v311;
      uint64_t v213 = v184 & 1;
      uint64_t v289 = v184 & 1;
      v272[0] = v62;
      char v290 = v21;
      char v291 = v222;
      uint64_t v292 = v185;
      uint64_t v293 = v186;
      uint64_t v294 = Strong;
      char v295 = v225;
      uint64_t v296 = v187;
      uint64_t v297 = 0;
      uint64_t v299 = 0;
      uint64_t v298 = v233;
      uint64_t v300 = v229;
      char v301 = 0;
      uint64_t v304 = v370;
      uint64_t v305 = v371;
      uint64_t v306 = v372;
      char v302 = v368;
      uint64_t v303 = v369;
      uint64_t v307 = v239;
      swift_retain();
      swift_retain();
      v270(v272);
      outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v324 = v62;
      uint64_t v337 = v320;
      uint64_t v338 = v321;
      uint64_t v339 = v322;
      uint64_t v340 = v323;
      uint64_t v334 = v317;
      uint64_t v335 = v318;
      uint64_t v336 = v319;
      uint64_t v329 = v312;
      uint64_t v330 = v313;
      uint64_t v331 = v314;
      uint64_t v332 = v315;
      uint64_t v333 = v316;
      uint64_t v325 = v308;
      uint64_t v326 = v309;
      uint64_t v327 = v310;
      uint64_t v328 = v311;
      char v341 = v213;
      uint64_t v342 = v21;
      uint64_t v343 = v222;
      uint64_t v344 = v185;
      uint64_t v345 = v186;
      uint64_t v346 = Strong;
      char v347 = v225;
      char v348 = v187;
      char v349 = 0;
      uint64_t v351 = 0;
      uint64_t v350 = v233;
      uint64_t v352 = v229;
      uint64_t v353 = 0;
      char v355 = 0;
      char v354 = v266;
      char v356 = v259;
      uint64_t v357 = v70;
      uint64_t v358 = v253;
      uint64_t v359 = v71;
      uint64_t v360 = v72;
      char v361 = v74;
      uint64_t v362 = v219;
      uint64_t v363 = v75;
      uint64_t v364 = v239;
LABEL_202:
      outlined release of ActionEvent<FromToByAction<Transform>>((uint64_t)&v324);
      return 0;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_199;
    case 4:
      uint64_t v25 = *(void *)a2;
      uint64_t v24 = *(void *)(a2 + 8);
      uint64_t v260 = *(void *)(a2 + 32);
      uint64_t v267 = *(void *)(a2 + 40);
      float v26 = *(void *)(a2 + 64);
      uint64_t v234 = *(void *)(a2 + 56);
      float v27 = *(float *)(a2 + 72);
      uint64_t v28 = *(float *)(a2 + 76);
      uint64_t v230 = *(unsigned char *)(a2 + 80);
      uint64_t v240 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_213:
          __break(1u);
          goto LABEL_214;
        }
        uint64_t v76 = specialized static Entity.entityInfoType(_:)(v25);
        if (v76)
        {
          uint64_t v77 = (*(uint64_t (**)(void))(v76 + 232))();
          uint64_t v78 = *(void *)(v77 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v78, 0);
          *(void *)(v77 + 16) = v25;
          MEMORY[0x22A68E750](v25, v77);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v25);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v79 = swift_allocObject();
      swift_weakInit();
      *(void *)(v79 + 16) = v24;
      swift_beginAccess();
      swift_weakAssign();
      char v80 = String.init(cString:)();
      uint64_t v82 = v81;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v83 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_93;
      }
      swift_bridgeObjectRetain();
      uint64_t v84 = specialized __RawDictionaryStorage.find<A>(_:)(v80, v82);
      if (v85)
      {
        uint64_t v86 = (uint64_t *)(*(void *)(v83 + 56) + 56 * v84);
        uint64_t v88 = *v86;
        uint64_t v87 = v86[1];
        uint64_t v89 = v86[3];
        uint64_t v254 = v86[2];
        uint64_t v91 = v86[4];
        uint64_t v90 = v86[5];
        uint64_t v92 = v86[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_93:
        uint64_t v88 = 0;
        uint64_t v87 = 0;
        uint64_t v254 = 0;
        uint64_t v89 = 0;
        uint64_t v91 = 0;
        uint64_t v90 = 0;
        uint64_t v92 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v368 = v260;
      BYTE8(v368) = 0;
      *(void *)&uint64_t v369 = v267;
      *((void *)&v369 + 1) = v88;
      *(void *)&uint64_t v370 = v87;
      *((void *)&v370 + 1) = v254;
      *(void *)&uint64_t v371 = v89;
      *((void *)&v371 + 1) = v91;
      *(void *)&uint64_t v372 = v90;
      *((void *)&v372 + 1) = v92;
      uint64_t v227 = v90;
      if (!v26) {
        goto LABEL_163;
      }
      if (!REBindPointBoundComponent())
      {
        float v26 = 0;
        goto LABEL_163;
      }
      uint64_t v247 = v92;
      uint64_t v148 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v149 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_222:
          __break(1u);
          goto LABEL_223;
        }
        uint64_t v188 = specialized static Entity.entityInfoType(_:)(v148);
        if (v188)
        {
          float v26 = (*(uint64_t (**)(void))(v188 + 232))();
          uint64_t v189 = *(void *)(v26 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v189, 0);
          *(void *)(v26 + 16) = v148;
          MEMORY[0x22A68E750](v148, v26);
          swift_release();
          goto LABEL_162;
        }
        uint64_t v149 = makeEntity(for:)(v148);
      }
      float v26 = v149;
LABEL_162:
      uint64_t v92 = v247;
LABEL_163:
      specialized ActionEventData.action<A>()(v365);
      outlined init with take of Transform?((uint64_t)v365, (uint64_t)v366, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      outlined init with take of Transform?((uint64_t)v366, (uint64_t)v367, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      if (_s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v367) != 1)
      {
        outlined init with take of Transform?((uint64_t)v366, (uint64_t)&v308, &demangling cache variable for type metadata for FromToByAction<Transform>?);
        swift_retain();
        outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
        uint64_t v190 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Transform>>);
        uint64_t v191 = v27;
        char v192 = v28;
        char v285 = v320;
        uint64_t v286 = v321;
        uint64_t v287 = v322;
        uint64_t v288 = v323;
        uint64_t v281 = v316;
        uint64_t v282 = v317;
        char v283 = v318;
        uint64_t v284 = v319;
        uint64_t v277 = v312;
        uint64_t v278 = v313;
        uint64_t v279 = v314;
        uint64_t v280 = v315;
        uint64_t v273 = v308;
        uint64_t v274 = v309;
        uint64_t v275 = v310;
        uint64_t v276 = v311;
        uint64_t v250 = v92;
        double v193 = v190 & 1;
        uint64_t v289 = v190 & 1;
        v272[0] = v79;
        char v290 = v26;
        char v291 = v230;
        uint64_t v292 = v191;
        uint64_t v293 = v192;
        uint64_t v216 = v88;
        uint64_t v294 = Strong;
        char v295 = v234;
        uint64_t v297 = 0;
        uint64_t v296 = -1.0;
        uint64_t v298 = 0xBFF0000000000000;
        uint64_t v299 = 0;
        char v301 = 0;
        uint64_t v304 = v370;
        uint64_t v305 = v371;
        uint64_t v306 = v372;
        char v302 = v368;
        uint64_t v303 = v369;
        uint64_t v300 = 0xBFF0000000000000;
        uint64_t v180 = v240;
        uint64_t v307 = v240;
        swift_retain();
        swift_retain();
        v270(v272);
        outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v324 = v79;
        uint64_t v337 = v320;
        uint64_t v338 = v321;
        uint64_t v339 = v322;
        uint64_t v340 = v323;
        uint64_t v334 = v317;
        uint64_t v335 = v318;
        uint64_t v336 = v319;
        uint64_t v329 = v312;
        uint64_t v330 = v313;
        uint64_t v331 = v314;
        uint64_t v332 = v315;
        uint64_t v333 = v316;
        uint64_t v325 = v308;
        uint64_t v326 = v309;
        uint64_t v327 = v310;
        uint64_t v328 = v311;
        char v341 = v193;
        uint64_t v342 = v26;
        uint64_t v343 = v230;
        uint64_t v344 = v191;
        uint64_t v345 = v192;
        uint64_t v346 = Strong;
        char v347 = v234;
        char v349 = 0;
        char v348 = -1.0;
        uint64_t v350 = 0xBFF0000000000000;
        uint64_t v351 = 0;
        uint64_t v353 = 0;
        uint64_t v352 = 0xBFF0000000000000;
        char v354 = v260;
        char v355 = 0;
        char v356 = v267;
        uint64_t v357 = v216;
        uint64_t v358 = v87;
        uint64_t v359 = v254;
        uint64_t v360 = v89;
        char v361 = v91;
        uint64_t v181 = v227;
        goto LABEL_171;
      }
LABEL_198:
      swift_release();
      swift_release();
      swift_release();
LABEL_199:
      swift_release();
      return 0;
    case 8:
      uint64_t v30 = *(void *)a2;
      uint64_t v29 = *(void *)(a2 + 8);
      uint64_t v261 = *(void *)(a2 + 32);
      uint64_t v268 = *(void *)(a2 + 40);
      float v31 = *(void *)(a2 + 56);
      float v32 = *(float *)(a2 + 64);
      uint64_t v33 = *(float *)(a2 + 68);
      uint64_t v226 = *(unsigned char *)(a2 + 72);
      uint64_t v231 = *(void *)(a2 + 80);
      uint64_t v235 = *(void *)(a2 + 88);
      uint64_t v241 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_214:
          __break(1u);
          goto LABEL_215;
        }
        uint64_t v93 = specialized static Entity.entityInfoType(_:)(v30);
        if (v93)
        {
          uint64_t v94 = (*(uint64_t (**)(void))(v93 + 232))();
          unint64_t v95 = *(void *)(v94 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v95, 0);
          *(void *)(v94 + 16) = v30;
          MEMORY[0x22A68E750](v30, v94);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v30);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v96 = swift_allocObject();
      swift_weakInit();
      *(void *)(v96 + 16) = v29;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v97 = String.init(cString:)();
      uint64_t v99 = v98;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v100 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_100;
      }
      swift_bridgeObjectRetain();
      uint64_t v101 = specialized __RawDictionaryStorage.find<A>(_:)(v97, v99);
      if (v102)
      {
        uint64_t v103 = (uint64_t *)(*(void *)(v100 + 56) + 56 * v101);
        uint64_t v105 = *v103;
        uint64_t v104 = v103[1];
        uint64_t v106 = v103[3];
        uint64_t v255 = v103[2];
        uint64_t v108 = v103[4];
        uint64_t v107 = v103[5];
        uint64_t v109 = v103[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_100:
        uint64_t v105 = 0;
        uint64_t v104 = 0;
        uint64_t v255 = 0;
        uint64_t v106 = 0;
        uint64_t v108 = 0;
        uint64_t v107 = 0;
        uint64_t v109 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v368 = v261;
      BYTE8(v368) = 0;
      *(void *)&uint64_t v369 = v268;
      *((void *)&v369 + 1) = v105;
      *(void *)&uint64_t v370 = v104;
      *((void *)&v370 + 1) = v255;
      *(void *)&uint64_t v371 = v106;
      *((void *)&v371 + 1) = v108;
      *(void *)&uint64_t v372 = v107;
      *((void *)&v372 + 1) = v109;
      uint64_t v223 = v107;
      if (!v31) {
        goto LABEL_169;
      }
      if (!REBindPointBoundComponent())
      {
        float v31 = 0;
        goto LABEL_169;
      }
      uint64_t v248 = v109;
      uint64_t v150 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v151 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        double v194 = specialized static Entity.entityInfoType(_:)(v150);
        if (v194)
        {
          float v31 = (*(uint64_t (**)(void))(v194 + 232))();
          uint64_t v195 = *(void *)(v31 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v195, 0);
          *(void *)(v31 + 16) = v150;
          MEMORY[0x22A68E750](v150, v31);
          swift_release();
          goto LABEL_168;
        }
        uint64_t v151 = makeEntity(for:)(v150);
      }
      float v31 = v151;
LABEL_168:
      uint64_t v109 = v248;
LABEL_169:
      specialized ActionEventData.action<A>()(v365);
      outlined init with take of Transform?((uint64_t)v365, (uint64_t)v366, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      outlined init with take of Transform?((uint64_t)v366, (uint64_t)v367, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      if (_s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v367) != 1)
      {
        outlined init with take of Transform?((uint64_t)v366, (uint64_t)&v308, &demangling cache variable for type metadata for FromToByAction<Transform>?);
        swift_retain();
        outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
        uint64_t v196 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Transform>>);
        uint64_t v197 = v32;
        uint64_t v198 = v33;
        char v285 = v320;
        uint64_t v286 = v321;
        uint64_t v287 = v322;
        uint64_t v288 = v323;
        uint64_t v281 = v316;
        uint64_t v282 = v317;
        char v283 = v318;
        uint64_t v284 = v319;
        uint64_t v277 = v312;
        uint64_t v278 = v313;
        uint64_t v279 = v314;
        uint64_t v280 = v315;
        uint64_t v273 = v308;
        uint64_t v274 = v309;
        uint64_t v275 = v310;
        uint64_t v276 = v311;
        unint64_t v217 = v105;
        uint64_t v220 = v104;
        uint64_t v199 = v196 & 1;
        uint64_t v289 = v196 & 1;
        v272[0] = v96;
        char v290 = v31;
        uint64_t v250 = v109;
        char v291 = v226;
        uint64_t v292 = v197;
        uint64_t v293 = v198;
        uint64_t v294 = Strong;
        char v295 = 0;
        uint64_t v297 = 1;
        uint64_t v296 = 0.0;
        uint64_t v298 = v231;
        uint64_t v299 = 0;
        char v301 = 0;
        uint64_t v304 = v370;
        uint64_t v305 = v371;
        uint64_t v306 = v372;
        char v302 = v368;
        uint64_t v303 = v369;
        uint64_t v180 = v241;
        uint64_t v300 = v235;
        uint64_t v307 = v241;
        swift_retain();
        swift_retain();
        v270(v272);
        outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v324 = v96;
        uint64_t v337 = v320;
        uint64_t v338 = v321;
        uint64_t v339 = v322;
        uint64_t v340 = v323;
        uint64_t v334 = v317;
        uint64_t v335 = v318;
        uint64_t v336 = v319;
        uint64_t v329 = v312;
        uint64_t v330 = v313;
        uint64_t v331 = v314;
        uint64_t v332 = v315;
        uint64_t v333 = v316;
        uint64_t v325 = v308;
        uint64_t v326 = v309;
        uint64_t v327 = v310;
        uint64_t v328 = v311;
        char v341 = v199;
        uint64_t v342 = v31;
        uint64_t v343 = v226;
        uint64_t v344 = v197;
        uint64_t v345 = v198;
        uint64_t v346 = Strong;
        char v347 = 0;
        char v349 = 1;
        char v348 = 0.0;
        uint64_t v350 = v231;
        uint64_t v351 = 0;
        uint64_t v353 = 0;
        uint64_t v352 = v235;
        char v354 = v261;
        char v355 = 0;
        char v356 = v268;
        uint64_t v357 = v217;
        uint64_t v358 = v220;
        uint64_t v359 = v255;
        uint64_t v360 = v106;
        char v361 = v108;
        uint64_t v181 = v223;
        goto LABEL_171;
      }
      goto LABEL_198;
    case 16:
      uint64_t v35 = *(void *)a2;
      uint64_t v34 = *(void *)(a2 + 8);
      uint64_t v242 = *(void *)(a2 + 32);
      uint64_t v269 = *(void *)(a2 + 40);
      uint64_t v36 = *(void *)(a2 + 56);
      uint64_t v244 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        uint64_t v110 = specialized static Entity.entityInfoType(_:)(v35);
        if (v110)
        {
          uint64_t v111 = (*(uint64_t (**)(void))(v110 + 232))();
          unint64_t v112 = *(void *)(v111 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v112, 0);
          *(void *)(v111 + 16) = v35;
          MEMORY[0x22A68E750](v35, v111);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v35);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v113 = swift_allocObject();
      swift_weakInit();
      *(void *)(v113 + 16) = v34;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v114 = String.init(cString:)();
      uint64_t v116 = v115;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v117 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_107;
      }
      swift_bridgeObjectRetain();
      uint64_t v118 = specialized __RawDictionaryStorage.find<A>(_:)(v114, v116);
      if (v119)
      {
        uint64_t v120 = (uint64_t *)(*(void *)(v117 + 56) + 56 * v118);
        uint64_t v121 = *v120;
        uint64_t v262 = v120[1];
        uint64_t v122 = v120[2];
        uint64_t v123 = v120[3];
        uint64_t v125 = v120[4];
        uint64_t v124 = v120[5];
        uint64_t v126 = v120[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_107:
        uint64_t v121 = 0;
        uint64_t v262 = 0;
        uint64_t v122 = 0;
        uint64_t v123 = 0;
        uint64_t v125 = 0;
        uint64_t v124 = 0;
        uint64_t v126 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v368 = 0;
      BYTE8(v368) = 0;
      *(void *)&uint64_t v369 = v269;
      *((void *)&v369 + 1) = v121;
      *(void *)&uint64_t v370 = v262;
      *((void *)&v370 + 1) = v122;
      *(void *)&uint64_t v371 = v123;
      *((void *)&v371 + 1) = v125;
      *(void *)&uint64_t v372 = v124;
      *((void *)&v372 + 1) = v126;
      uint64_t v236 = v124;
      if (!v36) {
        goto LABEL_176;
      }
      if (!REBindPointBoundComponent()) {
        goto LABEL_120;
      }
      uint64_t v256 = v126;
      uint64_t v152 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_118;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_173;
      }
      __break(1u);
LABEL_113:
      swift_bridgeObjectRelease();
LABEL_114:
      uint64_t v121 = 0;
      uint64_t v262 = 0;
      uint64_t v122 = 0;
      uint64_t v123 = 0;
      uint64_t v125 = 0;
      uint64_t v137 = 0;
      uint64_t v126 = 0;
LABEL_115:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v368 = 0;
      BYTE8(v368) = 0;
      *(void *)&uint64_t v369 = v269;
      *((void *)&v369 + 1) = v121;
      *(void *)&uint64_t v370 = v262;
      *((void *)&v370 + 1) = v122;
      *(void *)&uint64_t v371 = v123;
      *((void *)&v371 + 1) = v125;
      *(void *)&uint64_t v372 = v137;
      *((void *)&v372 + 1) = v126;
      uint64_t v236 = v137;
      if (!v36) {
        goto LABEL_176;
      }
      if (!REBindPointBoundComponent())
      {
LABEL_120:
        uint64_t v36 = 0;
        goto LABEL_176;
      }
      uint64_t v256 = v126;
      uint64_t v152 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
LABEL_118:
        type metadata accessor for Entity();
        char v153 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          goto LABEL_225;
        }
LABEL_173:
        uint64_t v200 = specialized static Entity.entityInfoType(_:)(v152);
        if (v200)
        {
          uint64_t v36 = (*(uint64_t (**)(void))(v200 + 232))();
          uint64_t v201 = *(void *)(v36 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v201, 0);
          *(void *)(v36 + 16) = v152;
          MEMORY[0x22A68E750](v152, v36);
          swift_release();
          goto LABEL_175;
        }
        char v153 = makeEntity(for:)(v152);
      }
      uint64_t v36 = v153;
LABEL_175:
      uint64_t v126 = v256;
LABEL_176:
      specialized ActionEventData.action<A>()(v365);
      outlined init with take of Transform?((uint64_t)v365, (uint64_t)v366, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      outlined init with take of Transform?((uint64_t)v366, (uint64_t)v367, &demangling cache variable for type metadata for FromToByAction<Transform>?);
      if (_s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v367) != 1)
      {
        outlined init with take of Transform?((uint64_t)v366, (uint64_t)&v308, &demangling cache variable for type metadata for FromToByAction<Transform>?);
        char v285 = v320;
        uint64_t v286 = v321;
        uint64_t v287 = v322;
        uint64_t v288 = v323;
        uint64_t v281 = v316;
        uint64_t v282 = v317;
        char v283 = v318;
        uint64_t v284 = v319;
        uint64_t v277 = v312;
        uint64_t v278 = v313;
        uint64_t v279 = v314;
        uint64_t v280 = v315;
        uint64_t v273 = v308;
        uint64_t v274 = v309;
        uint64_t v275 = v310;
        uint64_t v276 = v311;
        uint64_t v289 = 1;
        v272[0] = v113;
        char v290 = v36;
        char v291 = 0;
        uint64_t v292 = 0.0;
        uint64_t v293 = 0.0;
        uint64_t v294 = Strong;
        char v295 = 0;
        uint64_t v297 = 1;
        uint64_t v296 = 0.0;
        uint64_t v298 = v242;
        uint64_t v299 = 0;
        char v301 = 1;
        uint64_t v304 = v370;
        uint64_t v305 = v371;
        uint64_t v306 = v372;
        char v302 = v368;
        uint64_t v303 = v369;
        uint64_t v300 = 0;
        uint64_t v307 = v244;
        swift_retain();
        swift_retain();
        outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
        swift_retain();
        v270(v272);
        outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v324 = v113;
        uint64_t v337 = v320;
        uint64_t v338 = v321;
        uint64_t v339 = v322;
        uint64_t v340 = v323;
        uint64_t v334 = v317;
        uint64_t v335 = v318;
        uint64_t v336 = v319;
        uint64_t v329 = v312;
        uint64_t v330 = v313;
        uint64_t v331 = v314;
        uint64_t v332 = v315;
        uint64_t v333 = v316;
        uint64_t v325 = v308;
        uint64_t v326 = v309;
        uint64_t v327 = v310;
        uint64_t v328 = v311;
        char v341 = 1;
        uint64_t v342 = v36;
        uint64_t v343 = 0;
        uint64_t v345 = 0.0;
        uint64_t v344 = 0.0;
        uint64_t v346 = Strong;
        char v347 = 0;
        char v349 = 1;
        char v348 = 0.0;
        uint64_t v350 = v242;
        uint64_t v351 = 0;
        uint64_t v353 = 1;
        uint64_t v352 = 0;
        char v354 = 0;
        char v355 = 0;
        char v356 = v269;
        uint64_t v357 = v121;
        uint64_t v358 = v262;
        uint64_t v359 = v122;
        uint64_t v360 = v123;
        char v361 = v125;
        uint64_t v362 = v236;
        uint64_t v363 = v126;
        uint64_t v364 = v244;
        goto LABEL_202;
      }
      goto LABEL_198;
    case 32:
      uint64_t v38 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v242 = *(void *)(a2 + 32);
      uint64_t v269 = *(void *)(a2 + 40);
      uint64_t v36 = *(void *)(a2 + 56);
      uint64_t v244 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        uint64_t v127 = specialized static Entity.entityInfoType(_:)(v38);
        if (v127)
        {
          uint64_t v128 = (*(uint64_t (**)(void))(v127 + 232))();
          uint64_t v129 = *(void *)(v128 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v129, 0);
          *(void *)(v128 + 16) = v38;
          MEMORY[0x22A68E750](v38, v128);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v113 = swift_allocObject();
      swift_weakInit();
      *(void *)(v113 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      unint64_t v130 = String.init(cString:)();
      uint64_t v132 = v131;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v133 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_114;
      }
      swift_bridgeObjectRetain();
      uint64_t v134 = specialized __RawDictionaryStorage.find<A>(_:)(v130, v132);
      if ((v135 & 1) == 0) {
        goto LABEL_113;
      }
      uint64_t v136 = (uint64_t *)(*(void *)(v133 + 56) + 56 * v134);
      uint64_t v121 = *v136;
      uint64_t v262 = v136[1];
      uint64_t v122 = v136[2];
      uint64_t v123 = v136[3];
      uint64_t v125 = v136[4];
      uint64_t v137 = v136[5];
      uint64_t v126 = v136[6];
      swift_bridgeObjectRelease();
      goto LABEL_115;
    case 64:
      uint64_t v40 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v265 = *(void *)(a2 + 24);
      uint64_t v41 = *(void *)(a2 + 32);
      uint64_t v17 = *(void *)(a2 + 40);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        uint64_t v138 = specialized static Entity.entityInfoType(_:)(v40);
        if (v138)
        {
          uint64_t v139 = (*(uint64_t (**)(void))(v138 + 232))();
          uint64_t v140 = *(void *)(v139 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v140, 0);
          *(void *)(v139 + 16) = v40;
          MEMORY[0x22A68E750](v40, v139);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v40);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v141 = swift_allocObject();
      swift_weakInit();
      *(void *)(v141 + 16) = v39;
      swift_beginAccess();
      swift_weakAssign();
      if (!v17) {
        goto LABEL_138;
      }
      if (REBindPointBoundComponent())
      {
        uint64_t v142 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v143 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v17 = v143;
          goto LABEL_138;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        uint64_t v159 = specialized static Entity.entityInfoType(_:)(v142);
        if (!v159)
        {
          uint64_t v143 = makeEntity(for:)(v142);
          goto LABEL_77;
        }
        uint64_t v17 = (*(uint64_t (**)(void))(v159 + 232))();
        uint64_t v160 = *(void *)(v17 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v160, 0);
        *(void *)(v17 + 16) = v142;
        MEMORY[0x22A68E750](v142, v17);
        swift_release();
      }
      else
      {
        uint64_t v17 = 0;
      }
LABEL_138:
      uint64_t v161 = String.init(cString:)();
      uint64_t v163 = v162;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v164 = static AnimationResource.codableActionTypeMap;
      uint64_t v249 = v41;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        char v165 = specialized __RawDictionaryStorage.find<A>(_:)(v161, v163);
        if (v166)
        {
          double v167 = (uint64_t *)(*(void *)(v164 + 56) + 56 * v165);
          uint64_t v169 = *v167;
          double v168 = v167[1];
          uint64_t v170 = v167[4];
          uint64_t v257 = v167[3];
          uint64_t v263 = v167[2];
          uint64_t v171 = v167[5];
          uint64_t v172 = v167[6];
          swift_bridgeObjectRelease();
LABEL_145:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v368 = 0;
          BYTE8(v368) = 0;
          *(void *)&uint64_t v369 = v265;
          *((void *)&v369 + 1) = v169;
          uint64_t v243 = v168;
          *(void *)&uint64_t v370 = v168;
          *((void *)&v370 + 1) = v263;
          *(void *)&uint64_t v371 = v257;
          *((void *)&v371 + 1) = v170;
          *(void *)&uint64_t v372 = v171;
          *((void *)&v372 + 1) = v172;
          specialized ActionEventData.action<A>()(v365);
          outlined init with take of Transform?((uint64_t)v365, (uint64_t)v366, &demangling cache variable for type metadata for FromToByAction<Transform>?);
          outlined init with take of Transform?((uint64_t)v366, (uint64_t)v367, &demangling cache variable for type metadata for FromToByAction<Transform>?);
          if (_s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v367) == 1) {
            goto LABEL_198;
          }
          outlined init with take of Transform?((uint64_t)v366, (uint64_t)&v308, &demangling cache variable for type metadata for FromToByAction<Transform>?);
          char v285 = v320;
          uint64_t v286 = v321;
          uint64_t v287 = v322;
          uint64_t v288 = v323;
          uint64_t v281 = v316;
          uint64_t v282 = v317;
          char v283 = v318;
          uint64_t v284 = v319;
          uint64_t v277 = v312;
          uint64_t v278 = v313;
          uint64_t v279 = v314;
          uint64_t v280 = v315;
          uint64_t v273 = v308;
          uint64_t v274 = v309;
          uint64_t v275 = v310;
          uint64_t v276 = v311;
          uint64_t v289 = 1;
          v272[0] = v141;
          char v290 = v17;
          char v291 = 0;
          uint64_t v292 = 0.0;
          uint64_t v293 = 0.0;
          unint64_t v237 = v169;
          uint64_t v173 = Strong;
          uint64_t v294 = Strong;
          char v295 = 0;
          uint64_t v297 = 1;
          uint64_t v296 = 0.0;
          uint64_t v298 = 0;
          uint64_t v299 = 1;
          char v301 = 1;
          uint64_t v304 = v370;
          uint64_t v305 = v371;
          uint64_t v306 = v372;
          char v302 = v368;
          uint64_t v303 = v369;
          uint64_t v300 = 0;
          uint64_t v174 = v249;
          uint64_t v307 = v249;
          swift_retain();
          swift_retain();
          outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
          swift_retain();
          v270(v272);
          outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
          swift_release();
          goto LABEL_201;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v169 = 0;
      double v168 = 0;
      uint64_t v257 = 0;
      uint64_t v263 = 0;
      uint64_t v170 = 0;
      uint64_t v171 = 0;
      uint64_t v172 = 0;
      goto LABEL_145;
    default:
      if (a4 != 128) {
        goto LABEL_199;
      }
      uint64_t v15 = *(void *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v265 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 32);
      uint64_t v17 = *(void *)(a2 + 40);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
        double v154 = specialized static Entity.entityInfoType(_:)(v15);
        if (v154)
        {
          double v155 = (*(uint64_t (**)(void))(v154 + 232))();
          uint64_t v156 = *(void *)(v155 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v156, 0);
          *(void *)(v155 + 16) = v15;
          MEMORY[0x22A68E750](v15, v155);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v15);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v141 = swift_allocObject();
      swift_weakInit();
      *(void *)(v141 + 16) = v14;
      swift_beginAccess();
      swift_weakAssign();
      if (!v17) {
        goto LABEL_190;
      }
      if (REBindPointBoundComponent())
      {
        uint64_t v157 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v158 = swift_dynamicCastClassUnconditional();
LABEL_128:
          uint64_t v17 = v158;
          goto LABEL_190;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          JUMPOUT(0x227FA9F20);
        }
        uint64_t v202 = specialized static Entity.entityInfoType(_:)(v157);
        if (!v202)
        {
          uint64_t v158 = makeEntity(for:)(v157);
          goto LABEL_128;
        }
        uint64_t v17 = (*(uint64_t (**)(void))(v202 + 232))();
        uint64_t v203 = *(void *)(v17 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v203, 0);
        *(void *)(v17 + 16) = v157;
        MEMORY[0x22A68E750](v157, v17);
        swift_release();
      }
      else
      {
        uint64_t v17 = 0;
      }
LABEL_190:
      uint64_t v204 = String.init(cString:)();
      uint64_t v206 = v205;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v207 = static AnimationResource.codableActionTypeMap;
      uint64_t v251 = v16;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v208 = specialized __RawDictionaryStorage.find<A>(_:)(v204, v206);
        if (v209)
        {
          uint64_t v210 = (uint64_t *)(*(void *)(v207 + 56) + 56 * v208);
          uint64_t v212 = *v210;
          uint64_t v211 = v210[1];
          uint64_t v170 = v210[4];
          uint64_t v257 = v210[3];
          uint64_t v263 = v210[2];
          uint64_t v171 = v210[5];
          uint64_t v172 = v210[6];
          swift_bridgeObjectRelease();
LABEL_197:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v368 = 0;
          BYTE8(v368) = 0;
          *(void *)&uint64_t v369 = v265;
          *((void *)&v369 + 1) = v212;
          uint64_t v243 = v211;
          *(void *)&uint64_t v370 = v211;
          *((void *)&v370 + 1) = v263;
          *(void *)&uint64_t v371 = v257;
          *((void *)&v371 + 1) = v170;
          *(void *)&uint64_t v372 = v171;
          *((void *)&v372 + 1) = v172;
          specialized ActionEventData.action<A>()(v365);
          outlined init with take of Transform?((uint64_t)v365, (uint64_t)v366, &demangling cache variable for type metadata for FromToByAction<Transform>?);
          outlined init with take of Transform?((uint64_t)v366, (uint64_t)v367, &demangling cache variable for type metadata for FromToByAction<Transform>?);
          if (_s17RealityFoundation14FromToByActionVy0A3Kit9TransformVGSgWOg((uint64_t)v367) == 1) {
            goto LABEL_198;
          }
          outlined init with take of Transform?((uint64_t)v366, (uint64_t)&v308, &demangling cache variable for type metadata for FromToByAction<Transform>?);
          char v285 = v320;
          uint64_t v286 = v321;
          uint64_t v287 = v322;
          uint64_t v288 = v323;
          uint64_t v281 = v316;
          uint64_t v282 = v317;
          char v283 = v318;
          uint64_t v284 = v319;
          uint64_t v277 = v312;
          uint64_t v278 = v313;
          uint64_t v279 = v314;
          uint64_t v280 = v315;
          uint64_t v273 = v308;
          uint64_t v274 = v309;
          uint64_t v275 = v310;
          uint64_t v276 = v311;
          uint64_t v289 = 1;
          v272[0] = v141;
          char v290 = v17;
          char v291 = 0;
          uint64_t v292 = 0.0;
          uint64_t v293 = 0.0;
          unint64_t v237 = v212;
          uint64_t v173 = Strong;
          uint64_t v294 = Strong;
          char v295 = 0;
          uint64_t v297 = 1;
          uint64_t v296 = 0.0;
          uint64_t v298 = 0;
          uint64_t v299 = 1;
          char v301 = 1;
          uint64_t v304 = v370;
          uint64_t v305 = v371;
          uint64_t v306 = v372;
          char v302 = v368;
          uint64_t v303 = v369;
          uint64_t v300 = 0;
          uint64_t v174 = v251;
          uint64_t v307 = v251;
          swift_retain();
          swift_retain();
          outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of FromToByAction<Transform>?);
          swift_retain();
          v270(v272);
          swift_release();
          outlined retain of FromToByAction<Transform>?((uint64_t)v366, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of FromToByAction<Transform>?);
LABEL_201:
          swift_release();
          swift_release();
          swift_release();
          uint64_t v324 = v141;
          uint64_t v337 = v320;
          uint64_t v338 = v321;
          uint64_t v339 = v322;
          uint64_t v340 = v323;
          uint64_t v334 = v317;
          uint64_t v335 = v318;
          uint64_t v336 = v319;
          uint64_t v329 = v312;
          uint64_t v330 = v313;
          uint64_t v331 = v314;
          uint64_t v332 = v315;
          uint64_t v333 = v316;
          uint64_t v325 = v308;
          uint64_t v326 = v309;
          uint64_t v327 = v310;
          uint64_t v328 = v311;
          char v341 = 1;
          uint64_t v342 = v17;
          uint64_t v343 = 0;
          uint64_t v345 = 0.0;
          uint64_t v344 = 0.0;
          uint64_t v346 = v173;
          char v347 = 0;
          char v349 = 1;
          char v348 = 0.0;
          uint64_t v350 = 0;
          uint64_t v351 = 1;
          uint64_t v353 = 1;
          uint64_t v352 = 0;
          char v354 = 0;
          char v355 = 0;
          char v356 = v265;
          uint64_t v357 = v237;
          uint64_t v358 = v243;
          uint64_t v359 = v263;
          uint64_t v360 = v257;
          char v361 = v170;
          uint64_t v362 = v171;
          uint64_t v363 = v172;
          uint64_t v364 = v174;
          goto LABEL_202;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v212 = 0;
      uint64_t v211 = 0;
      uint64_t v257 = 0;
      uint64_t v263 = 0;
      uint64_t v170 = 0;
      uint64_t v171 = 0;
      uint64_t v172 = 0;
      goto LABEL_197;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  float v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  uint64_t v21;
  float v22;
  float v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t Entity;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned __int8 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  char v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unsigned __int8 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  double v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned __int8 v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unsigned __int8 v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  uint64_t v279;
  unsigned __int8 v280;
  char v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char v288;
  unsigned __int8 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  int v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  unsigned int v357;
  unint64_t v358;
  uint64_t v359;
  unint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  unsigned int v364;
  unsigned int v365;
  unint64_t v366;
  unsigned int v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  unsigned int v372;
  uint64_t v373;
  unsigned int v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  char v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char v398;
  unint64_t v399;
  uint64_t v400;
  char v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  unint64_t v406;
  uint64_t v407;
  unint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  unint64_t v412;
  uint64_t v413;
  unint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t Strong;
  void v447[2];
  int v448;
  char v449;
  int v450;
  char v451;
  int v452;
  char v453;
  uint64_t v454;
  uint64_t v455;
  int v456;
  char v457;
  uint64_t v458;
  uint64_t v459;
  __int16 v460;
  char v461;
  uint64_t v462;
  uint64_t v463;
  char v464;
  uint64_t v465;
  char v466;
  double v467;
  double v468;
  uint64_t v469;
  uint64_t v470;
  double v471;
  char v472;
  unint64_t v473;
  char v474;
  unint64_t v475;
  char v476;
  long long v477;
  long long v478;
  long long v479;
  long long v480;
  long long v481;
  uint64_t v482;
  uint64_t v483;
  int v484;
  char v485;
  int v486;
  char v487;
  int v488;
  char v489;
  uint64_t v490;
  uint64_t v491;
  int v492;
  char v493;
  uint64_t v494;
  uint64_t v495;
  __int16 v496;
  char v497;
  uint64_t v498;
  uint64_t v499;
  char v500;
  uint64_t v501;
  char v502;
  double v503;
  double v504;
  uint64_t v505;
  uint64_t v506;
  double v507;
  char v508;
  unint64_t v509;
  char v510;
  unint64_t v511;
  char v512;
  uint64_t v513;
  char v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  unint64_t v524;
  unint64_t v525;
  unint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  unint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  long long v536;
  long long v537;
  long long v538;
  long long v539;
  long long v540;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v9 = *(void *)(a2 + 48);
      uint64_t v434 = *(void *)(a2 + 32);
      uint64_t v440 = *(void *)(a2 + 40);
      float v10 = *(void *)(a2 + 64);
      float v11 = *(float *)(a2 + 72);
      uint64_t v12 = *(float *)(a2 + 76);
      uint64_t v398 = *(unsigned char *)(a2 + 80);
      uint64_t v405 = *(void *)(a2 + 88);
      uint64_t v412 = *(void *)(a2 + 96);
      uint64_t v418 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_215;
      }
      uint64_t v44 = specialized static Entity.entityInfoType(_:)(v7);
      if (v44)
      {
        uint64_t v45 = (*(uint64_t (**)(void))(v44 + 232))();
        uint64_t v46 = *(void *)(v45 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v46, 0);
        *(void *)(v45 + 16) = v7;
        MEMORY[0x22A68E750](v7, v45);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v7);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v47 = swift_allocObject();
      swift_weakInit();
      uint64_t v423 = v47;
      *(void *)(v47 + 16) = v8;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v48 = String.init(cString:)();
      char v50 = v49;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v51 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_85;
      }
      swift_bridgeObjectRetain();
      uint64_t v52 = specialized __RawDictionaryStorage.find<A>(_:)(v48, v50);
      if ((v53 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_85:
        uint64_t v428 = 0;
        uint64_t v55 = 0;
        uint64_t v57 = 0;
        uint64_t v56 = 0;
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        uint64_t v60 = 0;
        goto LABEL_86;
      }
      uint64_t v54 = (uint64_t *)(*(void *)(v51 + 56) + 56 * v52);
      uint64_t v55 = v54[1];
      uint64_t v428 = *v54;
      uint64_t v57 = v54[2];
      uint64_t v56 = v54[3];
      uint64_t v58 = v54[4];
      uint64_t v59 = v54[5];
      uint64_t v60 = v54[6];
      swift_bridgeObjectRelease();
LABEL_86:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v536 = v434;
      BYTE8(v536) = 0;
      *(void *)&v537 = v440;
      *((void *)&v537 + 1) = v428;
      *(void *)&v538 = v55;
      *((void *)&v538 + 1) = v57;
      *(void *)&v539 = v56;
      *((void *)&v539 + 1) = v58;
      *(void *)&v540 = v59;
      *((void *)&v540 + 1) = v60;
      unint64_t v394 = v9;
      uint64_t v368 = v59;
      uint64_t v375 = v56;
      char v361 = v60;
      if (v10 && REBindPointBoundComponent())
      {
        double v155 = v58;
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v157 = swift_dynamicCastClassUnconditional();
          goto LABEL_90;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v209 = specialized static Entity.entityInfoType(_:)(Entity);
          if (v209)
          {
            uint64_t v210 = (*(uint64_t (**)(void))(v209 + 232))();
            uint64_t v211 = *(void *)(v210 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v211, 0);
            *(void *)(v210 + 16) = Entity;
            MEMORY[0x22A68E750](Entity, v210);
            unint64_t v381 = v210;
            swift_release();
            goto LABEL_162;
          }
          uint64_t v157 = makeEntity(for:)(Entity);
LABEL_90:
          unint64_t v381 = v157;
LABEL_162:
          uint64_t v58 = v155;
          goto LABEL_163;
        }
        goto LABEL_223;
      }
      unint64_t v381 = 0;
LABEL_163:
      specialized ActionEventData.action<A>()((uint64_t)&v524);
      uint64_t v212 = v534;
      if (v534 == 1) {
        goto LABEL_190;
      }
      uint64_t v213 = v533;
      uint64_t v318 = v533;
      uint64_t v323 = v535;
      uint64_t v312 = v532;
      char v301 = v57;
      uint64_t v307 = v531;
      uint64_t v214 = v530;
      uint64_t v215 = v527;
      uint64_t v286 = v527;
      char v291 = v58;
      uint64_t v216 = v525;
      uint64_t v296 = v55;
      unint64_t v217 = v524;
      uint64_t v350 = HIDWORD(v524) & 1;
      uint64_t v358 = HIDWORD(v530);
      uint64_t v329 = v534;
      uint64_t v336 = HIDWORD(v525) & 1;
      uint64_t v342 = HIDWORD(v526) & 1;
      char v218 = v526;
      uint64_t v219 = v529;
      uint64_t v220 = v528;
      swift_retain();
      outlined copy of FromToByAction<Float>?(v217, v216, v218, v215, v220, v219, v214, v307, v312, v213, v212);
      uint64_t v221 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Float>>);
      uint64_t v480 = v539;
      uint64_t v481 = v540;
      char v478 = v537;
      uint64_t v479 = v538;
      uint64_t v448 = v217;
      uint64_t v449 = v350;
      uint64_t v450 = v216;
      uint64_t v451 = v336;
      uint64_t v452 = v218;
      uint64_t v453 = v342;
      uint64_t v454 = v220;
      char v455 = v219;
      char v456 = v214;
      uint64_t v457 = v358;
      char v458 = v307;
      double v459 = v312;
      double v460 = v318 & 0x1FF;
      uint64_t v461 = BYTE2(v318) & 1;
      uint64_t v462 = v329;
      double v463 = v323;
      uint64_t v277 = v221 & 1;
      char v464 = v221 & 1;
      v447[0] = v423;
      unint64_t v465 = v381;
      char v466 = v398;
      unint64_t v467 = v11;
      char v468 = v12;
      long long v469 = Strong;
      long long v470 = v418;
      long long v471 = -1.0;
      long long v472 = 0;
      long long v473 = v405;
      uint64_t v474 = 0;
      uint64_t v475 = v412;
      uint64_t v476 = 0;
      uint64_t v477 = v536;
      uint64_t v482 = v394;
      swift_retain();
      swift_retain();
      a5(v447);
      outlined consume of FromToByAction<Float>?(v217, v216, v218, v286, v220, v219, v214, v307, v312, v318, v329);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v483 = v423;
      uint64_t v484 = v217;
      uint64_t v485 = v350;
      uint64_t v486 = v216;
      char v487 = v336;
      char v488 = v218;
      uint64_t v489 = v342;
      char v490 = v220;
      double v491 = v219;
      double v492 = v214;
      uint64_t v493 = v358;
      uint64_t v494 = v307;
      double v495 = v312;
      char v496 = v318 & 0x1FF;
      unint64_t v497 = BYTE2(v318) & 1;
      char v498 = v329;
      unint64_t v499 = v323;
      char v500 = v277;
      uint64_t v501 = v381;
      char v502 = v398;
      uint64_t v503 = v11;
      uint64_t v504 = v12;
      uint64_t v505 = Strong;
      uint64_t v506 = v418;
      uint64_t v507 = -1.0;
      uint64_t v508 = 0;
      uint64_t v509 = v405;
      uint64_t v510 = 0;
      uint64_t v511 = v412;
      uint64_t v512 = 0;
      uint64_t v513 = v434;
      uint64_t v514 = 0;
      uint64_t v515 = v440;
      uint64_t v516 = v428;
      uint64_t v517 = v296;
      uint64_t v518 = v301;
      uint64_t v519 = v375;
      uint64_t v520 = v291;
      uint64_t v521 = v368;
      uint64_t v522 = v361;
      uint64_t v222 = v394;
LABEL_194:
      char v523 = v222;
      outlined release of ActionEvent<FromToByAction<Float>>((uint64_t)&v483);
      return 0;
    case 2:
      uint64_t v18 = *(void *)a2;
      float v19 = *(void *)(a2 + 8);
      uint64_t v435 = *(void *)(a2 + 32);
      v441 = *(void *)(a2 + 40);
      uint64_t v20 = *(float *)(a2 + 56);
      uint64_t v399 = *(void *)(a2 + 64);
      uint64_t v406 = *(void *)(a2 + 48);
      uint64_t v392 = *(void *)(a2 + 72);
      float v21 = *(void *)(a2 + 88);
      float v22 = *(float *)(a2 + 96);
      uint64_t v23 = *(float *)(a2 + 100);
      unint64_t v387 = *(unsigned char *)(a2 + 104);
      uint64_t v413 = *(void *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        uint64_t v61 = specialized static Entity.entityInfoType(_:)(v18);
        if (v61)
        {
          uint64_t v62 = (*(uint64_t (**)(void))(v61 + 232))();
          uint64_t v63 = *(void *)(v62 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v63, 0);
          *(void *)(v62 + 16) = v18;
          MEMORY[0x22A68E750](v18, v62);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v18);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v64 = swift_allocObject();
      swift_weakInit();
      uint64_t v420 = v64;
      *(void *)(v64 + 16) = v19;
      swift_beginAccess();
      swift_weakAssign();
      char v65 = String.init(cString:)();
      uint64_t v67 = v66;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v68 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_93;
      }
      swift_bridgeObjectRetain();
      uint64_t v69 = specialized __RawDictionaryStorage.find<A>(_:)(v65, v67);
      if (v70)
      {
        uint64_t v71 = (uint64_t *)(*(void *)(v68 + 56) + 56 * v69);
        uint64_t v72 = v71[2];
        unint64_t v424 = v71[1];
        uint64_t v429 = *v71;
        uint64_t v74 = v71[3];
        uint64_t v73 = v71[4];
        uint64_t v75 = v71[5];
        uint64_t v76 = v71[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_93:
        unint64_t v424 = 0;
        uint64_t v429 = 0;
        uint64_t v72 = 0;
        uint64_t v74 = 0;
        uint64_t v73 = 0;
        uint64_t v75 = 0;
        uint64_t v76 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v536 = v435;
      BYTE8(v536) = 0;
      *(void *)&v537 = v441;
      *((void *)&v537 + 1) = v429;
      *(void *)&v538 = v424;
      *((void *)&v538 + 1) = v72;
      *(void *)&v539 = v74;
      *((void *)&v539 + 1) = v73;
      *(void *)&v540 = v75;
      *((void *)&v540 + 1) = v76;
      char v354 = v75;
      uint64_t v362 = v74;
      char v347 = v76;
      if (!v21 || !REBindPointBoundComponent())
      {
        uint64_t v369 = 0;
        goto LABEL_170;
      }
      uint64_t v158 = v73;
      uint64_t v159 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v160 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          goto LABEL_225;
        }
        uint64_t v223 = specialized static Entity.entityInfoType(_:)(v159);
        if (v223)
        {
          uint64_t v224 = (*(uint64_t (**)(void))(v223 + 232))();
          uint64_t v225 = *(void *)(v224 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v225, 0);
          *(void *)(v224 + 16) = v159;
          MEMORY[0x22A68E750](v159, v224);
          uint64_t v369 = v224;
          swift_release();
          goto LABEL_169;
        }
        uint64_t v160 = makeEntity(for:)(v159);
      }
      uint64_t v369 = v160;
LABEL_169:
      uint64_t v73 = v158;
LABEL_170:
      specialized ActionEventData.action<A>()((uint64_t)&v524);
      uint64_t v226 = v534;
      if (v534 != 1)
      {
        uint64_t v379 = v533;
        uint64_t v227 = v532;
        uint64_t v287 = v532;
        uint64_t v292 = v73;
        uint64_t v308 = v531;
        uint64_t v313 = v535;
        uint64_t v228 = v530;
        uint64_t v229 = v527;
        uint64_t v297 = v527;
        char v302 = v72;
        uint64_t v230 = v526;
        uint64_t v231 = v524;
        uint64_t v319 = v534;
        uint64_t v324 = HIDWORD(v524) & 1;
        uint64_t v337 = HIDWORD(v525) & 1;
        uint64_t v343 = HIDWORD(v530);
        uint64_t v232 = v525;
        uint64_t v330 = HIDWORD(v526) & 1;
        uint64_t v233 = v529;
        uint64_t v234 = v528;
        swift_retain();
        outlined copy of FromToByAction<Float>?(v231, v232, v230, v229, v234, v233, v228, v308, v227, v379, v226);
        uint64_t v235 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Float>>);
        uint64_t v480 = v539;
        uint64_t v481 = v540;
        char v478 = v537;
        uint64_t v479 = v538;
        uint64_t v236 = v20;
        uint64_t v448 = v231;
        uint64_t v449 = v324;
        uint64_t v450 = v232;
        uint64_t v451 = v337;
        uint64_t v452 = v230;
        uint64_t v453 = v330;
        uint64_t v454 = v234;
        char v455 = v233;
        char v456 = v228;
        uint64_t v457 = v343;
        char v458 = v308;
        double v459 = v287;
        double v460 = v379 & 0x1FF;
        uint64_t v461 = BYTE2(v379) & 1;
        uint64_t v462 = v319;
        double v463 = v313;
        uint64_t v281 = v235 & 1;
        char v464 = v235 & 1;
        v447[0] = v420;
        unint64_t v465 = v369;
        char v466 = v387;
        unint64_t v467 = v22;
        char v468 = v23;
        long long v469 = Strong;
        long long v470 = v392;
        long long v471 = v236;
        long long v472 = 0;
        long long v473 = v406;
        uint64_t v474 = 0;
        uint64_t v475 = v399;
        uint64_t v476 = 0;
        uint64_t v477 = v536;
        uint64_t v482 = v413;
        swift_retain();
        swift_retain();
        a5(v447);
        outlined consume of FromToByAction<Float>?(v231, v232, v230, v297, v234, v233, v228, v308, v287, v379, v319);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v483 = v420;
        uint64_t v484 = v231;
        uint64_t v485 = v324;
        uint64_t v486 = v232;
        char v487 = v337;
        char v488 = v230;
        uint64_t v489 = v330;
        char v490 = v234;
        double v491 = v233;
        double v492 = v228;
        uint64_t v493 = v343;
        uint64_t v494 = v308;
        double v495 = v287;
        char v496 = v379 & 0x1FF;
        unint64_t v497 = BYTE2(v379) & 1;
        char v498 = v319;
        unint64_t v499 = v313;
        char v500 = v281;
        uint64_t v501 = v369;
        char v502 = v387;
        uint64_t v503 = v22;
        uint64_t v504 = v23;
        uint64_t v505 = Strong;
        uint64_t v506 = v392;
        uint64_t v507 = v236;
        uint64_t v508 = 0;
        uint64_t v509 = v406;
        uint64_t v510 = 0;
        uint64_t v511 = v399;
        uint64_t v512 = 0;
        uint64_t v513 = v435;
        uint64_t v514 = 0;
        uint64_t v515 = v441;
        uint64_t v516 = v429;
        uint64_t v517 = v424;
        uint64_t v518 = v302;
        uint64_t v519 = v362;
        uint64_t v520 = v292;
        uint64_t v521 = v354;
        uint64_t v522 = v347;
        uint64_t v222 = v413;
        goto LABEL_194;
      }
LABEL_190:
      swift_release();
      swift_release();
      swift_release();
LABEL_191:
      swift_release();
      return 0;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_191;
    case 4:
      uint64_t v24 = *(void *)a2;
      uint64_t v25 = *(void *)(a2 + 8);
      uint64_t v436 = *(void *)(a2 + 32);
      v442 = *(void *)(a2 + 40);
      float v26 = *(void *)(a2 + 64);
      unint64_t v400 = *(void *)(a2 + 56);
      float v27 = *(float *)(a2 + 72);
      uint64_t v28 = *(float *)(a2 + 76);
      uint64_t v393 = *(unsigned char *)(a2 + 80);
      uint64_t v407 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        uint64_t v77 = specialized static Entity.entityInfoType(_:)(v24);
        if (v77)
        {
          uint64_t v78 = (*(uint64_t (**)(void))(v77 + 232))();
          unint64_t v79 = *(void *)(v78 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v79, 0);
          *(void *)(v78 + 16) = v24;
          MEMORY[0x22A68E750](v24, v78);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v24);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v80 = swift_allocObject();
      swift_weakInit();
      uint64_t v415 = v80;
      *(void *)(v80 + 16) = v25;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v81 = String.init(cString:)();
      uint64_t v83 = v82;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v84 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_101;
      }
      swift_bridgeObjectRetain();
      uint64_t v85 = specialized __RawDictionaryStorage.find<A>(_:)(v81, v83);
      if (v86)
      {
        uint64_t v87 = (uint64_t *)(*(void *)(v84 + 56) + 56 * v85);
        uint64_t v425 = *v87;
        uint64_t v430 = v87[1];
        uint64_t v88 = v87[3];
        uint64_t v421 = v87[2];
        uint64_t v89 = v87[4];
        uint64_t v90 = v87[5];
        uint64_t v91 = v87[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_101:
        uint64_t v425 = 0;
        uint64_t v430 = 0;
        uint64_t v421 = 0;
        uint64_t v88 = 0;
        uint64_t v89 = 0;
        uint64_t v90 = 0;
        uint64_t v91 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v536 = v436;
      BYTE8(v536) = 0;
      *(void *)&v537 = v442;
      *((void *)&v537 + 1) = v425;
      *(void *)&v538 = v430;
      *((void *)&v538 + 1) = v421;
      *(void *)&v539 = v88;
      *((void *)&v539 + 1) = v89;
      *(void *)&v540 = v90;
      *((void *)&v540 + 1) = v91;
      uint64_t v363 = v90;
      uint64_t v370 = v88;
      char v355 = v91;
      if (!v26 || !REBindPointBoundComponent())
      {
        uint64_t v376 = 0;
        goto LABEL_176;
      }
      uint64_t v161 = v89;
      uint64_t v162 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v163 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          goto LABEL_226;
        }
        unint64_t v237 = specialized static Entity.entityInfoType(_:)(v162);
        if (v237)
        {
          char v238 = (*(uint64_t (**)(void))(v237 + 232))();
          uint64_t v239 = *(void *)(v238 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v239, 0);
          *(void *)(v238 + 16) = v162;
          MEMORY[0x22A68E750](v162, v238);
          uint64_t v376 = v238;
          swift_release();
          goto LABEL_175;
        }
        uint64_t v163 = makeEntity(for:)(v162);
      }
      uint64_t v376 = v163;
LABEL_175:
      uint64_t v89 = v161;
LABEL_176:
      specialized ActionEventData.action<A>()((uint64_t)&v524);
      uint64_t v240 = v534;
      if (v534 != 1)
      {
        uint64_t v385 = v533;
        uint64_t v241 = v532;
        uint64_t v298 = v532;
        uint64_t v303 = v89;
        uint64_t v314 = v531;
        uint64_t v320 = v535;
        uint64_t v242 = v530;
        uint64_t v243 = v527;
        uint64_t v309 = v527;
        uint64_t v244 = v526;
        uint64_t v245 = v524;
        uint64_t v344 = HIDWORD(v524) & 1;
        uint64_t v351 = HIDWORD(v530);
        uint64_t v325 = v534;
        uint64_t v331 = HIDWORD(v525) & 1;
        uint64_t v246 = v525;
        uint64_t v338 = HIDWORD(v526) & 1;
        uint64_t v247 = v529;
        uint64_t v248 = v528;
        swift_retain();
        outlined copy of FromToByAction<Float>?(v245, v246, v244, v243, v248, v247, v242, v314, v241, v385, v240);
        uint64_t v249 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Float>>);
        uint64_t v480 = v539;
        uint64_t v481 = v540;
        char v478 = v537;
        uint64_t v479 = v538;
        uint64_t v448 = v245;
        uint64_t v449 = v344;
        uint64_t v450 = v246;
        uint64_t v451 = v331;
        uint64_t v452 = v244;
        uint64_t v453 = v338;
        uint64_t v454 = v248;
        char v455 = v247;
        char v456 = v242;
        uint64_t v457 = v351;
        char v458 = v314;
        double v459 = v298;
        double v460 = v385 & 0x1FF;
        uint64_t v461 = BYTE2(v385) & 1;
        uint64_t v462 = v325;
        double v463 = v320;
        uint64_t v282 = v249 & 1;
        char v464 = v249 & 1;
        v447[0] = v415;
        unint64_t v465 = v376;
        char v466 = v393;
        unint64_t v467 = v27;
        char v468 = v28;
        long long v469 = Strong;
        long long v470 = v400;
        long long v471 = -1.0;
        long long v472 = 0;
        long long v473 = 0xBFF0000000000000;
        uint64_t v474 = 0;
        uint64_t v475 = 0xBFF0000000000000;
        uint64_t v476 = 0;
        uint64_t v477 = v536;
        uint64_t v482 = v407;
        swift_retain();
        swift_retain();
        a5(v447);
        outlined consume of FromToByAction<Float>?(v245, v246, v244, v309, v248, v247, v242, v314, v298, v385, v325);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v483 = v415;
        uint64_t v484 = v245;
        uint64_t v485 = v344;
        uint64_t v486 = v246;
        char v487 = v331;
        char v488 = v244;
        uint64_t v489 = v338;
        char v490 = v248;
        double v491 = v247;
        double v492 = v242;
        uint64_t v493 = v351;
        uint64_t v494 = v314;
        double v495 = v298;
        char v496 = v385 & 0x1FF;
        unint64_t v497 = BYTE2(v385) & 1;
        char v498 = v325;
        unint64_t v499 = v320;
        char v500 = v282;
        uint64_t v501 = v376;
        char v502 = v393;
        uint64_t v503 = v27;
        uint64_t v504 = v28;
        uint64_t v505 = Strong;
        uint64_t v506 = v400;
        uint64_t v507 = -1.0;
        uint64_t v508 = 0;
        uint64_t v509 = 0xBFF0000000000000;
        uint64_t v510 = 0;
        uint64_t v511 = 0xBFF0000000000000;
        uint64_t v512 = 0;
        uint64_t v513 = v436;
        uint64_t v514 = 0;
        uint64_t v515 = v442;
        uint64_t v516 = v425;
        uint64_t v517 = v430;
        uint64_t v518 = v421;
        uint64_t v519 = v370;
        uint64_t v520 = v303;
        uint64_t v521 = v363;
        uint64_t v522 = v355;
        uint64_t v222 = v407;
        goto LABEL_194;
      }
      goto LABEL_190;
    case 8:
      uint64_t v29 = *(void *)a2;
      uint64_t v30 = *(void *)(a2 + 8);
      uint64_t v437 = *(void *)(a2 + 32);
      v443 = *(void *)(a2 + 40);
      float v31 = *(void *)(a2 + 56);
      float v32 = *(float *)(a2 + 64);
      uint64_t v33 = *(float *)(a2 + 68);
      uint64_t v401 = *(unsigned char *)(a2 + 72);
      uint64_t v408 = *(void *)(a2 + 80);
      uint64_t v414 = *(void *)(a2 + 88);
      uint64_t v419 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        uint64_t v92 = specialized static Entity.entityInfoType(_:)(v29);
        if (v92)
        {
          uint64_t v93 = (*(uint64_t (**)(void))(v92 + 232))();
          uint64_t v94 = *(void *)(v93 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v94, 0);
          *(void *)(v93 + 16) = v29;
          MEMORY[0x22A68E750](v29, v93);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v29);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v95 = swift_allocObject();
      swift_weakInit();
      uint64_t v426 = v95;
      *(void *)(v95 + 16) = v30;
      swift_beginAccess();
      swift_weakAssign();
      char v96 = String.init(cString:)();
      uint64_t v98 = v97;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v99 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_109;
      }
      swift_bridgeObjectRetain();
      uint64_t v100 = specialized __RawDictionaryStorage.find<A>(_:)(v96, v98);
      if (v101)
      {
        uint64_t v102 = (uint64_t *)(*(void *)(v99 + 56) + 56 * v100);
        uint64_t v103 = v102[1];
        uint64_t v431 = *v102;
        uint64_t v105 = v102[2];
        uint64_t v104 = v102[3];
        uint64_t v106 = v102[4];
        uint64_t v107 = v102[5];
        uint64_t v108 = v102[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_109:
        uint64_t v431 = 0;
        uint64_t v103 = 0;
        uint64_t v105 = 0;
        uint64_t v104 = 0;
        uint64_t v106 = 0;
        uint64_t v107 = 0;
        uint64_t v108 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v536 = v437;
      BYTE8(v536) = 0;
      *(void *)&v537 = v443;
      *((void *)&v537 + 1) = v431;
      *(void *)&v538 = v103;
      *((void *)&v538 + 1) = v105;
      *(void *)&v539 = v104;
      *((void *)&v539 + 1) = v106;
      *(void *)&v540 = v107;
      *((void *)&v540 + 1) = v108;
      char v377 = v107;
      uint64_t v382 = v104;
      uint64_t v371 = v108;
      if (!v31 || !REBindPointBoundComponent())
      {
        unint64_t v388 = 0;
LABEL_182:
        specialized ActionEventData.action<A>()((uint64_t)&v524);
        if (v534 == 1) {
          goto LABEL_190;
        }
        uint64_t v253 = v534;
        uint64_t v254 = v533;
        uint64_t v326 = v533;
        uint64_t v332 = v535;
        uint64_t v276 = v532;
        char v315 = v105;
        uint64_t v321 = v531;
        uint64_t v255 = v527;
        uint64_t v299 = v527;
        uint64_t v304 = v106;
        uint64_t v256 = v526;
        uint64_t v257 = v525;
        uint64_t v310 = v103;
        uint64_t v258 = v524;
        uint64_t v259 = v530;
        uint64_t v359 = HIDWORD(v524) & 1;
        uint64_t v366 = HIDWORD(v530);
        uint64_t v293 = v525;
        uint64_t v345 = HIDWORD(v525) & 1;
        uint64_t v352 = HIDWORD(v526) & 1;
        uint64_t v260 = v529;
        uint64_t v261 = v528;
        swift_retain();
        outlined copy of FromToByAction<Float>?(v258, v257, v256, v255, v261, v260, v259, v321, v276, v254, v253);
        uint64_t v262 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<FromToByAction<Float>>);
        uint64_t v480 = v539;
        uint64_t v481 = v540;
        uint64_t v479 = v538;
        char v478 = v537;
        uint64_t v448 = v258;
        uint64_t v449 = v359;
        uint64_t v450 = v293;
        uint64_t v451 = v345;
        uint64_t v452 = v256;
        uint64_t v453 = v352;
        uint64_t v454 = v261;
        char v455 = v260;
        char v456 = v259;
        uint64_t v457 = v366;
        char v458 = v321;
        double v459 = v276;
        double v460 = v326 & 0x1FF;
        uint64_t v461 = BYTE2(v326) & 1;
        uint64_t v462 = v253;
        double v463 = v332;
        uint64_t v288 = v262 & 1;
        char v464 = v262 & 1;
        v447[0] = v426;
        unint64_t v465 = v388;
        char v466 = v401;
        unint64_t v467 = v32;
        char v468 = v33;
        long long v470 = 0;
        long long v471 = 0.0;
        long long v469 = Strong;
        long long v472 = 1;
        long long v473 = v408;
        uint64_t v474 = 0;
        uint64_t v475 = v414;
        uint64_t v476 = 0;
        uint64_t v477 = v536;
        uint64_t v482 = v419;
        swift_retain();
        swift_retain();
        a5(v447);
        outlined consume of FromToByAction<Float>?(v258, v293, v256, v299, v261, v260, v259, v321, v276, v326, v253);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v483 = v426;
        uint64_t v484 = v258;
        uint64_t v485 = v359;
        uint64_t v486 = v293;
        char v487 = v345;
        char v488 = v256;
        uint64_t v489 = v352;
        char v490 = v261;
        double v491 = v260;
        double v492 = v259;
        uint64_t v493 = v366;
        uint64_t v494 = v321;
        double v495 = v276;
        char v496 = v326 & 0x1FF;
        unint64_t v497 = BYTE2(v326) & 1;
        char v498 = v253;
        unint64_t v499 = v332;
        char v500 = v288;
        uint64_t v501 = v388;
        char v502 = v401;
        uint64_t v503 = v32;
        uint64_t v504 = v33;
        uint64_t v507 = 0.0;
        uint64_t v505 = Strong;
        uint64_t v506 = 0;
        uint64_t v508 = 1;
        uint64_t v509 = v408;
        uint64_t v510 = 0;
        uint64_t v511 = v414;
        uint64_t v512 = 0;
        uint64_t v513 = v437;
        uint64_t v514 = 0;
        uint64_t v515 = v443;
        uint64_t v516 = v431;
        uint64_t v517 = v310;
        uint64_t v518 = v315;
        uint64_t v519 = v382;
        uint64_t v520 = v304;
        uint64_t v521 = v377;
        uint64_t v206 = v371;
LABEL_193:
        uint64_t v522 = v206;
        uint64_t v222 = v419;
        goto LABEL_194;
      }
      uint64_t v164 = v106;
      char v165 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        double v166 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          goto LABEL_227;
        }
        uint64_t v250 = specialized static Entity.entityInfoType(_:)(v165);
        if (v250)
        {
          uint64_t v251 = (*(uint64_t (**)(void))(v250 + 232))();
          uint64_t v252 = *(void *)(v251 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v252, 0);
          *(void *)(v251 + 16) = v165;
          MEMORY[0x22A68E750](v165, v251);
          unint64_t v388 = v251;
          swift_release();
          goto LABEL_181;
        }
        double v166 = makeEntity(for:)(v165);
      }
      unint64_t v388 = v166;
LABEL_181:
      uint64_t v106 = v164;
      goto LABEL_182;
    case 16:
      uint64_t v34 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      uint64_t v438 = *(void *)(a2 + 40);
      uint64_t v36 = *(void *)(a2 + 56);
      uint64_t v419 = *(void *)(a2 + 48);
      uint64_t v422 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
        uint64_t v109 = specialized static Entity.entityInfoType(_:)(v34);
        if (v109)
        {
          uint64_t v110 = (*(uint64_t (**)(void))(v109 + 232))();
          uint64_t v111 = *(void *)(v110 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v111, 0);
          *(void *)(v110 + 16) = v34;
          MEMORY[0x22A68E750](v34, v110);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v112 = swift_allocObject();
      swift_weakInit();
      *(void *)(v112 + 16) = v35;
      swift_beginAccess();
      swift_weakAssign();
      char v113 = String.init(cString:)();
      uint64_t v115 = v114;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v116 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_117;
      }
      swift_bridgeObjectRetain();
      uint64_t v117 = specialized __RawDictionaryStorage.find<A>(_:)(v113, v115);
      if (v118)
      {
        uint64_t v119 = (uint64_t *)(*(void *)(v116 + 56) + 56 * v117);
        uint64_t v120 = *v119;
        uint64_t v432 = v119[1];
        uint64_t v122 = v119[2];
        uint64_t v121 = v119[3];
        uint64_t v124 = v119[4];
        uint64_t v123 = v119[5];
        uint64_t v125 = v119[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_117:
        uint64_t v120 = 0;
        uint64_t v432 = 0;
        uint64_t v122 = 0;
        uint64_t v121 = 0;
        uint64_t v124 = 0;
        uint64_t v123 = 0;
        uint64_t v125 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v536 = 0;
      BYTE8(v536) = 0;
      *(void *)&v537 = v438;
      *((void *)&v537 + 1) = v120;
      *(void *)&v538 = v432;
      *((void *)&v538 + 1) = v122;
      *(void *)&v539 = v121;
      *((void *)&v539 + 1) = v124;
      uint64_t v409 = v123;
      uint64_t v416 = v122;
      *(void *)&v540 = v123;
      *((void *)&v540 + 1) = v125;
      if (!v36) {
        goto LABEL_130;
      }
      if (!REBindPointBoundComponent()) {
        goto LABEL_131;
      }
      uint64_t v39 = v121;
      double v167 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_128;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_186;
      }
      __break(1u);
LABEL_123:
      swift_bridgeObjectRelease();
LABEL_124:
      uint64_t v120 = 0;
      uint64_t v432 = 0;
      uint64_t v136 = 0;
      uint64_t v121 = 0;
      uint64_t v124 = 0;
      uint64_t v137 = 0;
      uint64_t v125 = 0;
LABEL_125:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v536 = 0;
      BYTE8(v536) = 0;
      *(void *)&v537 = v438;
      *((void *)&v537 + 1) = v120;
      *(void *)&v538 = v432;
      *((void *)&v538 + 1) = v136;
      *(void *)&v539 = v121;
      *((void *)&v539 + 1) = v124;
      uint64_t v409 = v137;
      uint64_t v416 = v136;
      *(void *)&v540 = v137;
      *((void *)&v540 + 1) = v125;
      if (v39)
      {
        if (REBindPointBoundComponent())
        {
          uint64_t v39 = v121;
          double v167 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
LABEL_128:
            type metadata accessor for Entity();
            double v168 = swift_dynamicCastClassUnconditional();
          }
          else
          {
            if (REEntityIsBeingDestroyed())
            {
LABEL_227:
              __break(1u);
              goto LABEL_228;
            }
LABEL_186:
            uint64_t v263 = specialized static Entity.entityInfoType(_:)(v167);
            if (v263)
            {
              uint64_t v169 = (*(uint64_t (**)(void))(v263 + 232))();
              uint64_t v264 = *(void *)(v169 + 16);
              swift_retain();
              MEMORY[0x22A68E750](v264, 0);
              *(void *)(v169 + 16) = v167;
              MEMORY[0x22A68E750](v167, v169);
              swift_release();
              goto LABEL_188;
            }
            double v168 = makeEntity(for:)(v167);
          }
          uint64_t v169 = v168;
LABEL_188:
          uint64_t v121 = v39;
          goto LABEL_189;
        }
LABEL_131:
        uint64_t v169 = 0;
      }
      else
      {
LABEL_130:
        uint64_t v169 = 0;
      }
LABEL_189:
      specialized ActionEventData.action<A>()((uint64_t)&v524);
      uint64_t v265 = v534;
      if (v534 == 1) {
        goto LABEL_190;
      }
      uint64_t v480 = v539;
      uint64_t v481 = v540;
      char v478 = v537;
      uint64_t v479 = v538;
      uint64_t v266 = v533;
      uint64_t v391 = v121;
      uint64_t v397 = v125;
      uint64_t v267 = v531;
      uint64_t v380 = v120;
      uint64_t v386 = v124;
      uint64_t v327 = v529;
      uint64_t v333 = v530;
      uint64_t v294 = v528;
      uint64_t v268 = v527;
      uint64_t v322 = v526;
      uint64_t v269 = v525;
      uint64_t v270 = v169;
      uint64_t v404 = v169;
      uint64_t v271 = v524;
      uint64_t v339 = HIDWORD(v524) & 1;
      uint64_t v346 = HIDWORD(v525) & 1;
      uint64_t v353 = HIDWORD(v526) & 1;
      uint64_t v360 = HIDWORD(v530);
      uint64_t v448 = v524;
      uint64_t v449 = BYTE4(v524) & 1;
      uint64_t v450 = v525;
      uint64_t v278 = v525;
      uint64_t v279 = v527;
      uint64_t v451 = BYTE4(v525) & 1;
      uint64_t v452 = v526;
      uint64_t v453 = BYTE4(v526) & 1;
      uint64_t v454 = v528;
      char v455 = v529;
      char v456 = v530;
      uint64_t v457 = BYTE4(v530);
      char v458 = v531;
      double v459 = v532;
      uint64_t v272 = v532;
      double v460 = v533 & 0x1FF;
      uint64_t v374 = (v533 >> 8) & 1;
      uint64_t v367 = WORD1(v533) & 1;
      uint64_t v461 = BYTE2(v533) & 1;
      uint64_t v462 = v534;
      double v463 = v535;
      uint64_t v273 = v535;
      char v464 = 1;
      v447[0] = v112;
      unint64_t v465 = v270;
      char v466 = 0;
      unint64_t v467 = 0.0;
      char v468 = 0.0;
      long long v470 = 0;
      long long v471 = 0.0;
      long long v469 = Strong;
      long long v472 = 1;
      long long v473 = v422;
      uint64_t v474 = 0;
      uint64_t v475 = 0;
      uint64_t v476 = 1;
      uint64_t v477 = v536;
      uint64_t v482 = v419;
      char v283 = v534;
      swift_retain();
      swift_retain();
      outlined copy of FromToByAction<Float>?(v271, v269, v322, v268, v294, v327, v333, v267, v272, v266, v265);
      swift_retain();
      a5(v447);
      outlined consume of FromToByAction<Float>?(v271, v278, v322, v279, v294, v327, v333, v267, v272, v266, v283);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v483 = v112;
      uint64_t v484 = v271;
      uint64_t v485 = v339;
      uint64_t v486 = v278;
      char v487 = v346;
      char v488 = v322;
      uint64_t v489 = v353;
      char v490 = v294;
      double v491 = v327;
      double v492 = v333;
      uint64_t v493 = v360;
      uint64_t v494 = v267;
      double v495 = v272;
      LOBYTE(v496) = v266;
      HIBYTE(v496) = v374;
      unint64_t v497 = v367;
      char v498 = v283;
      unint64_t v499 = v273;
      char v500 = 1;
      uint64_t v501 = v404;
      char v502 = 0;
      uint64_t v504 = 0.0;
      uint64_t v503 = 0.0;
      uint64_t v507 = 0.0;
      uint64_t v505 = Strong;
      uint64_t v506 = 0;
      uint64_t v508 = 1;
      uint64_t v509 = v422;
      uint64_t v510 = 0;
      uint64_t v511 = 0;
      uint64_t v512 = 1;
      uint64_t v513 = 0;
      uint64_t v514 = 0;
      uint64_t v515 = v438;
      uint64_t v516 = v380;
      uint64_t v517 = v432;
      uint64_t v518 = v416;
      uint64_t v519 = v391;
      uint64_t v520 = v386;
      uint64_t v521 = v409;
      uint64_t v206 = v397;
      goto LABEL_193;
    case 32:
      uint64_t v37 = *(void *)a2;
      uint64_t v38 = *(void *)(a2 + 8);
      uint64_t v438 = *(void *)(a2 + 40);
      uint64_t v39 = *(void *)(a2 + 56);
      uint64_t v419 = *(void *)(a2 + 48);
      uint64_t v422 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v126 = specialized static Entity.entityInfoType(_:)(v37);
        if (v126)
        {
          uint64_t v127 = (*(uint64_t (**)(void))(v126 + 232))();
          uint64_t v128 = *(void *)(v127 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v128, 0);
          *(void *)(v127 + 16) = v37;
          MEMORY[0x22A68E750](v37, v127);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v37);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v112 = swift_allocObject();
      swift_weakInit();
      *(void *)(v112 + 16) = v38;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v129 = String.init(cString:)();
      char v131 = v130;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v132 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_124;
      }
      swift_bridgeObjectRetain();
      uint64_t v133 = specialized __RawDictionaryStorage.find<A>(_:)(v129, v131);
      if ((v134 & 1) == 0) {
        goto LABEL_123;
      }
      uint64_t v135 = (uint64_t *)(*(void *)(v132 + 56) + 56 * v133);
      uint64_t v120 = *v135;
      uint64_t v432 = v135[1];
      uint64_t v136 = v135[2];
      uint64_t v121 = v135[3];
      uint64_t v124 = v135[4];
      uint64_t v137 = v135[5];
      uint64_t v125 = v135[6];
      swift_bridgeObjectRelease();
      goto LABEL_125;
    case 64:
      uint64_t v40 = *(void *)a2;
      uint64_t v41 = *(void *)(a2 + 8);
      uint64_t v42 = *(void *)(a2 + 24);
      uint64_t v43 = *(void *)(a2 + 40);
      uint64_t v419 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        uint64_t v138 = specialized static Entity.entityInfoType(_:)(v40);
        if (v138)
        {
          uint64_t v139 = (*(uint64_t (**)(void))(v138 + 232))();
          uint64_t v140 = *(void *)(v139 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v140, 0);
          *(void *)(v139 + 16) = v40;
          MEMORY[0x22A68E750](v40, v139);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v40);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v141 = swift_allocObject();
      swift_weakInit();
      *(void *)(v141 + 16) = v41;
      swift_beginAccess();
      swift_weakAssign();
      if (v43 && REBindPointBoundComponent())
      {
        uint64_t v142 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v143 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v144 = v143;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_222:
          __break(1u);
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        uint64_t v207 = specialized static Entity.entityInfoType(_:)(v142);
        if (!v207)
        {
          uint64_t v143 = makeEntity(for:)(v142);
          goto LABEL_77;
        }
        uint64_t v144 = (*(uint64_t (**)(void))(v207 + 232))();
        uint64_t v208 = *(void *)(v144 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v208, 0);
        *(void *)(v144 + 16) = v142;
        MEMORY[0x22A68E750](v142, v144);
        swift_release();
      }
      else
      {
        uint64_t v144 = 0;
      }
LABEL_79:
      uint64_t v145 = String.init(cString:)();
      uint64_t v147 = v146;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v148 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v149 = specialized __RawDictionaryStorage.find<A>(_:)(v145, v147);
        if (v150)
        {
          uint64_t v151 = (uint64_t *)(*(void *)(v148 + 56) + 56 * v149);
          uint64_t v152 = *v151;
          char v153 = v151[1];
          double v154 = v151[2];
          uint64_t v439 = v151[4];
          uint64_t v444 = v151[3];
          uint64_t v427 = v151[6];
          uint64_t v433 = v151[5];
          swift_bridgeObjectRelease();
LABEL_134:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v536 = 0;
          BYTE8(v536) = 0;
          *(void *)&v537 = v42;
          *((void *)&v537 + 1) = v152;
          *(void *)&v538 = v153;
          *((void *)&v538 + 1) = v154;
          unint64_t v417 = v154;
          *(void *)&v539 = v444;
          *((void *)&v539 + 1) = v439;
          *(void *)&v540 = v433;
          *((void *)&v540 + 1) = v427;
          specialized ActionEventData.action<A>()((uint64_t)&v524);
          uint64_t v170 = v534;
          if (v534 == 1) {
            goto LABEL_190;
          }
          uint64_t v480 = v539;
          uint64_t v481 = v540;
          char v478 = v537;
          uint64_t v479 = v538;
          uint64_t v171 = v532;
          char v383 = v152;
          uint64_t v389 = v42;
          uint64_t v395 = v529;
          uint64_t v402 = v531;
          uint64_t v172 = v528;
          char v378 = v153;
          uint64_t v305 = v526;
          uint64_t v311 = v527;
          uint64_t v173 = v141;
          uint64_t v316 = v141;
          uint64_t v174 = v525;
          uint64_t v175 = v144;
          uint64_t v176 = v524;
          uint64_t v334 = HIDWORD(v524) & 1;
          uint64_t v340 = HIDWORD(v525) & 1;
          char v348 = HIDWORD(v526) & 1;
          char v356 = HIDWORD(v530);
          uint64_t v448 = v524;
          uint64_t v449 = BYTE4(v524) & 1;
          uint64_t v450 = v525;
          uint64_t v451 = BYTE4(v525) & 1;
          uint64_t v452 = v526;
          uint64_t v453 = BYTE4(v526) & 1;
          uint64_t v454 = v528;
          char v455 = v529;
          char v456 = v530;
          char v177 = v530;
          uint64_t v284 = v530;
          uint64_t v289 = v533;
          uint64_t v457 = BYTE4(v530);
          char v458 = v531;
          double v459 = v532;
          char v295 = v532;
          double v178 = v533;
          double v460 = v533 & 0x1FF;
          uint64_t v372 = (v533 >> 8) & 1;
          uint64_t v364 = WORD1(v533) & 1;
          uint64_t v461 = BYTE2(v533) & 1;
          uint64_t v462 = v534;
          double v463 = v535;
          double v179 = v535;
          char v464 = 1;
          v447[0] = v173;
          unint64_t v465 = v175;
          char v466 = 0;
          unint64_t v467 = 0.0;
          char v468 = 0.0;
          long long v470 = 0;
          long long v471 = 0.0;
          long long v469 = Strong;
          long long v472 = 1;
          long long v473 = 0;
          uint64_t v474 = 1;
          uint64_t v475 = 0;
          uint64_t v476 = 1;
          uint64_t v477 = v536;
          uint64_t v482 = v419;
          uint64_t v410 = v534;
          swift_retain();
          swift_retain();
          outlined copy of FromToByAction<Float>?(v176, v174, v305, v311, v172, v395, v177, v402, v171, v178, v170);
          swift_retain();
          a5(v447);
          outlined consume of FromToByAction<Float>?(v176, v174, v305, v311, v172, v395, v284, v402, v295, v289, v410);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v483 = v316;
          uint64_t v484 = v176;
          uint64_t v485 = v334;
          uint64_t v486 = v174;
          char v487 = v340;
          char v488 = v305;
          uint64_t v489 = v348;
          char v490 = v172;
          double v491 = v395;
          double v492 = v284;
          uint64_t v493 = v356;
          uint64_t v494 = v402;
          double v495 = v295;
          LOBYTE(v496) = v289;
          HIBYTE(v496) = v372;
          unint64_t v497 = v364;
          char v498 = v410;
          unint64_t v499 = v179;
          char v500 = 1;
          uint64_t v501 = v175;
          char v502 = 0;
          uint64_t v504 = 0.0;
          uint64_t v503 = 0.0;
          uint64_t v507 = 0.0;
          uint64_t v505 = Strong;
          uint64_t v506 = 0;
          uint64_t v508 = 1;
          uint64_t v509 = 0;
          uint64_t v510 = 1;
          uint64_t v511 = 0;
          uint64_t v512 = 1;
          uint64_t v513 = 0;
          uint64_t v514 = 0;
          uint64_t v515 = v389;
          uint64_t v516 = v383;
          uint64_t v180 = v378;
LABEL_155:
          uint64_t v517 = v180;
          uint64_t v518 = v417;
          uint64_t v519 = v444;
          uint64_t v520 = v439;
          uint64_t v521 = v433;
          uint64_t v206 = v427;
          goto LABEL_193;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v152 = 0;
      char v153 = 0;
      double v154 = 0;
      uint64_t v439 = 0;
      uint64_t v444 = 0;
      uint64_t v427 = 0;
      uint64_t v433 = 0;
      goto LABEL_134;
    default:
      if (a4 != 128) {
        goto LABEL_191;
      }
      uint64_t v14 = *(void *)a2;
      uint64_t v15 = *(void *)(a2 + 8);
      uint64_t v16 = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 40);
      uint64_t v419 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v181 = specialized static Entity.entityInfoType(_:)(v14);
        if (v181)
        {
          uint64_t v182 = (*(uint64_t (**)(void))(v181 + 232))();
          uint64_t v183 = *(void *)(v182 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v183, 0);
          *(void *)(v182 + 16) = v14;
          MEMORY[0x22A68E750](v14, v182);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v184 = swift_allocObject();
      swift_weakInit();
      *(void *)(v184 + 16) = v15;
      swift_beginAccess();
      swift_weakAssign();
      if (v17 && REBindPointBoundComponent())
      {
        uint64_t v185 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v186 = swift_dynamicCastClassUnconditional();
LABEL_143:
          uint64_t v187 = v186;
          goto LABEL_145;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_228:
          __break(1u);
          JUMPOUT(0x227FB2EACLL);
        }
        uint64_t v274 = specialized static Entity.entityInfoType(_:)(v185);
        if (!v274)
        {
          uint64_t v186 = makeEntity(for:)(v185);
          goto LABEL_143;
        }
        uint64_t v187 = (*(uint64_t (**)(void))(v274 + 232))();
        uint64_t v275 = *(void *)(v187 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v275, 0);
        *(void *)(v187 + 16) = v185;
        MEMORY[0x22A68E750](v185, v187);
        swift_release();
      }
      else
      {
        uint64_t v187 = 0;
      }
LABEL_145:
      uint64_t v188 = String.init(cString:)();
      uint64_t v190 = v189;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v191 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        char v192 = specialized __RawDictionaryStorage.find<A>(_:)(v188, v190);
        if (v193)
        {
          double v194 = (uint64_t *)(*(void *)(v191 + 56) + 56 * v192);
          uint64_t v196 = *v194;
          uint64_t v195 = v194[1];
          uint64_t v197 = v194[2];
          uint64_t v439 = v194[4];
          uint64_t v444 = v194[3];
          uint64_t v427 = v194[6];
          uint64_t v433 = v194[5];
          swift_bridgeObjectRelease();
LABEL_152:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v536 = 0;
          BYTE8(v536) = 0;
          *(void *)&v537 = v16;
          *((void *)&v537 + 1) = v196;
          *(void *)&v538 = v195;
          *((void *)&v538 + 1) = v197;
          unint64_t v417 = v197;
          *(void *)&v539 = v444;
          *((void *)&v539 + 1) = v439;
          *(void *)&v540 = v433;
          *((void *)&v540 + 1) = v427;
          specialized ActionEventData.action<A>()((uint64_t)&v524);
          if (v534 == 1) {
            goto LABEL_190;
          }
          uint64_t v480 = v539;
          uint64_t v481 = v540;
          char v478 = v537;
          uint64_t v479 = v538;
          uint64_t v198 = v535;
          uint64_t v384 = v16;
          char v390 = v532;
          uint64_t v300 = v530;
          uint64_t v306 = v531;
          uint64_t v317 = v184;
          char v290 = v529;
          uint64_t v373 = v195;
          uint64_t v199 = v528;
          uint64_t v403 = v526;
          uint64_t v411 = v527;
          uint64_t v200 = v184;
          uint64_t v201 = v525;
          uint64_t v202 = v187;
          unint64_t v396 = v187;
          uint64_t v203 = v524;
          uint64_t v328 = HIDWORD(v524) & 1;
          uint64_t v335 = HIDWORD(v525) & 1;
          char v341 = HIDWORD(v526) & 1;
          char v349 = HIDWORD(v530);
          uint64_t v448 = v524;
          uint64_t v449 = BYTE4(v524) & 1;
          uint64_t v450 = v525;
          uint64_t v451 = BYTE4(v525) & 1;
          uint64_t v452 = v526;
          uint64_t v453 = BYTE4(v526) & 1;
          uint64_t v454 = v528;
          char v455 = v529;
          uint64_t v280 = v533;
          char v285 = v528;
          char v456 = v530;
          uint64_t v457 = BYTE4(v530);
          char v458 = v531;
          double v459 = v532;
          uint64_t v204 = v533;
          double v460 = v533 & 0x1FF;
          uint64_t v365 = (v533 >> 8) & 1;
          uint64_t v357 = WORD1(v533) & 1;
          uint64_t v461 = BYTE2(v533) & 1;
          uint64_t v462 = v534;
          double v463 = v535;
          char v464 = 1;
          v447[0] = v200;
          unint64_t v465 = v202;
          char v466 = 0;
          unint64_t v467 = 0.0;
          char v468 = 0.0;
          long long v470 = 0;
          long long v471 = 0.0;
          long long v469 = Strong;
          long long v472 = 1;
          long long v473 = 0;
          uint64_t v474 = 1;
          uint64_t v475 = 0;
          uint64_t v476 = 1;
          uint64_t v477 = v536;
          uint64_t v482 = v419;
          uint64_t v205 = v534;
          swift_retain();
          swift_retain();
          outlined copy of FromToByAction<Float>?(v203, v201, v403, v411, v199, v290, v300, v306, v390, v204, v205);
          swift_retain();
          a5(v447);
          swift_release();
          outlined consume of FromToByAction<Float>?(v203, v201, v403, v411, v285, v290, v300, v306, v390, v280, v205);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v483 = v317;
          uint64_t v484 = v203;
          uint64_t v485 = v328;
          uint64_t v486 = v201;
          char v487 = v335;
          char v488 = v403;
          uint64_t v489 = v341;
          char v490 = v285;
          double v491 = v290;
          double v492 = v300;
          uint64_t v493 = v349;
          uint64_t v494 = v306;
          double v495 = v390;
          LOBYTE(v496) = v280;
          HIBYTE(v496) = v365;
          unint64_t v497 = v357;
          char v498 = v205;
          unint64_t v499 = v198;
          char v500 = 1;
          uint64_t v501 = v396;
          char v502 = 0;
          uint64_t v504 = 0.0;
          uint64_t v503 = 0.0;
          uint64_t v507 = 0.0;
          uint64_t v505 = Strong;
          uint64_t v506 = 0;
          uint64_t v508 = 1;
          uint64_t v509 = 0;
          uint64_t v510 = 1;
          uint64_t v511 = 0;
          uint64_t v512 = 1;
          uint64_t v513 = 0;
          uint64_t v514 = 0;
          uint64_t v515 = v384;
          uint64_t v516 = v196;
          uint64_t v180 = v373;
          goto LABEL_155;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v196 = 0;
      uint64_t v195 = 0;
      uint64_t v197 = 0;
      uint64_t v439 = 0;
      uint64_t v444 = 0;
      uint64_t v427 = 0;
      uint64_t v433 = 0;
      goto LABEL_152;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t Entity;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  double v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  char v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  char v272;
  char v273;
  uint64_t v274;
  char v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  char v286;
  char v287;
  char v288;
  int v289;
  uint64_t v290;
  uint64_t v291;
  int v292;
  uint64_t v293;
  uint64_t v294;
  char v295;
  uint64_t v296;
  uint64_t v297;
  char v298;
  uint64_t v299;
  int v300;
  char v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char v314;
  int v315;
  int v316;
  uint64_t v317;
  uint64_t v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  char v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  int v327;
  char v328;
  char v329;
  uint64_t v330;
  uint64_t v331;
  char v332;
  uint64_t v333;
  int v334;
  int v335;
  char v336;
  uint64_t v337;
  uint64_t v338;
  int v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  char v345;
  uint64_t v346;
  uint64_t v347;
  long long v348;
  long long v349;
  long long v350;
  char v351;
  uint64_t v352;
  char v353;
  long long v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char v360;
  uint64_t v361;
  uint64_t v362;
  long long v363;
  long long v364;
  long long v365;
  char v366;
  char v367;
  char v368;
  char v369;
  uint64_t v370;
  char v371;
  unint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  unint64_t v377;
  unint64_t v378;
  uint64_t v379;
  char v380;
  uint64_t v381;
  uint64_t v382;
  unint64_t v383;
  unint64_t v384;
  uint64_t v385;
  uint64_t v386;
  unint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  unint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t Strong;
  void v420[2];
  uint64_t v421;
  uint64_t v422;
  char v423;
  long long v424;
  uint64_t v425;
  uint64_t v426;
  char v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  int v431;
  char v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  int v436;
  char v437;
  char v438;
  uint64_t v439;
  char v440;
  double v441;
  double v442;
  uint64_t v443;
  uint64_t v444;
  double v445;
  char v446;
  unint64_t v447;
  char v448;
  unint64_t v449;
  char v450;
  long long v451;
  long long v452;
  long long v453;
  long long v454;
  long long v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  char v459;
  long long v460;
  uint64_t v461;
  uint64_t v462;
  char v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  int v467;
  char v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  int v472;
  char v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  char v477;
  long long v478;
  uint64_t v479;
  uint64_t v480;
  char v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  int v485;
  char v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  int v490;
  char v491;
  char v492;
  uint64_t v493;
  char v494;
  double v495;
  double v496;
  uint64_t v497;
  uint64_t v498;
  double v499;
  char v500;
  unint64_t v501;
  char v502;
  unint64_t v503;
  char v504;
  uint64_t v505;
  char v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  unsigned char v516[176];
  unsigned char v517[176];
  unsigned char v518[168];
  long long v519;
  long long v520;
  long long v521;
  long long v522;
  long long v523;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v8 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v409 = *(void *)(a2 + 40);
      uint64_t v414 = *(void *)(a2 + 32);
      char v390 = *(void *)(a2 + 48);
      uint64_t v9 = *(void *)(a2 + 64);
      float v10 = *(float *)(a2 + 72);
      float v11 = *(float *)(a2 + 76);
      uint64_t v367 = *(unsigned char *)(a2 + 80);
      char v377 = *(void *)(a2 + 88);
      uint64_t v382 = *(void *)(a2 + 56);
      uint64_t v372 = *(void *)(a2 + 96);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v42 = specialized static Entity.entityInfoType(_:)(v8);
        if (v42)
        {
          uint64_t v43 = (*(uint64_t (**)(void))(v42 + 232))();
          uint64_t v44 = *(void *)(v43 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v44, 0);
          *(void *)(v43 + 16) = v8;
          MEMORY[0x22A68E750](v8, v43);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v8);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v45 = swift_allocObject();
        swift_weakInit();
        *(void *)(v45 + 16) = v7;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v46 = String.init(cString:)();
        uint64_t v48 = v47;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v49 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          char v50 = specialized __RawDictionaryStorage.find<A>(_:)(v46, v48);
          if (v51)
          {
            uint64_t v52 = (uint64_t *)(*(void *)(v49 + 56) + 56 * v50);
            uint64_t v401 = *v52;
            uint64_t v404 = v52[1];
            uint64_t v53 = v52[3];
            uint64_t v395 = v52[2];
            uint64_t v55 = v52[4];
            uint64_t v54 = v52[5];
            uint64_t v56 = v52[6];
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v401 = 0;
        uint64_t v404 = 0;
        uint64_t v395 = 0;
        uint64_t v53 = 0;
        uint64_t v55 = 0;
        uint64_t v54 = 0;
        uint64_t v56 = 0;
LABEL_86:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v519 = v414;
        BYTE8(v519) = 0;
        *(void *)&uint64_t v520 = v409;
        *((void *)&v520 + 1) = v401;
        *(void *)&uint64_t v521 = v404;
        *((void *)&v521 + 1) = v395;
        *(void *)&uint64_t v522 = v53;
        *((void *)&v522 + 1) = v55;
        *(void *)&char v523 = v54;
        *((void *)&v523 + 1) = v56;
        char v355 = v56;
        char v361 = v53;
        if (!v9 || !REBindPointBoundComponent())
        {
          uint64_t v150 = 0;
          goto LABEL_92;
        }
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v149 = swift_dynamicCastClassUnconditional();
LABEL_90:
          uint64_t v150 = v149;
          goto LABEL_92;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v242 = specialized static Entity.entityInfoType(_:)(Entity);
          if (!v242)
          {
            uint64_t v149 = makeEntity(for:)(Entity);
            goto LABEL_90;
          }
          uint64_t v150 = (*(uint64_t (**)(void))(v242 + 232))();
          uint64_t v243 = *(void *)(v150 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v243, 0);
          *(void *)(v150 + 16) = Entity;
          MEMORY[0x22A68E750](Entity, v150);
          swift_release();
LABEL_92:
          specialized ActionEventData.action<A>()((uint64_t)v516);
          outlined init with take of Transform?((uint64_t)v516, (uint64_t)v517, &demangling cache variable for type metadata for BillboardAction?);
          outlined init with take of Transform?((uint64_t)v517, (uint64_t)v518, &demangling cache variable for type metadata for BillboardAction?);
          if (_s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v518) != 1)
          {
            outlined init with take of Transform?((uint64_t)v517, (uint64_t)&v457, &demangling cache variable for type metadata for BillboardAction?);
            char v341 = v457;
            uint64_t v264 = v45;
            uint64_t v267 = v150;
            uint64_t v151 = v458;
            uint64_t v312 = v458;
            uint64_t v318 = v55;
            uint64_t v152 = v459;
            uint64_t v287 = v459;
            char v348 = v460;
            char v153 = v461;
            double v154 = v462;
            uint64_t v279 = v462;
            char v283 = v461;
            uint64_t v323 = v54;
            double v155 = v463;
            uint64_t v275 = v463;
            uint64_t v156 = v464;
            uint64_t v157 = v465;
            uint64_t v305 = v465;
            uint64_t v158 = v467;
            uint64_t v300 = v467;
            uint64_t v159 = v468;
            char v295 = v468;
            uint64_t v160 = v469;
            uint64_t v259 = v470;
            uint64_t v261 = v466;
            uint64_t v161 = v471;
            char v291 = v471;
            uint64_t v334 = v472;
            uint64_t v328 = v473;
            swift_retain();
            uint64_t v162 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<BillboardAction>);
            uint64_t v422 = v151;
            uint64_t v423 = v152;
            unint64_t v424 = v348;
            uint64_t v425 = v153;
            uint64_t v426 = v154;
            uint64_t v427 = v155;
            uint64_t v428 = v156;
            uint64_t v429 = v157;
            uint64_t v430 = v261;
            uint64_t v431 = v158;
            uint64_t v432 = v159;
            uint64_t v433 = v160;
            uint64_t v434 = v259;
            uint64_t v435 = v161;
            uint64_t v436 = v334;
            uint64_t v437 = v328;
            uint64_t v271 = v162 & 1;
            uint64_t v438 = v162 & 1;
            uint64_t v421 = v341;
            v420[0] = v264;
            uint64_t v439 = v267;
            uint64_t v440 = v367;
            v441 = v10;
            v442 = v11;
            v443 = Strong;
            uint64_t v444 = v382;
            uint64_t v445 = -1.0;
            char v446 = 0;
            uint64_t v448 = 0;
            uint64_t v447 = v377;
            uint64_t v449 = v372;
            uint64_t v450 = 0;
            uint64_t v454 = v522;
            char v455 = v523;
            uint64_t v452 = v520;
            uint64_t v453 = v521;
            uint64_t v451 = v519;
            char v456 = v390;
            swift_retain();
            swift_retain();
            a5(v420);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v474 = v264;
            uint64_t v475 = v341;
            uint64_t v476 = v312;
            uint64_t v477 = v287;
            char v478 = v348;
            uint64_t v479 = v283;
            uint64_t v480 = v279;
            uint64_t v481 = v275;
            uint64_t v482 = v156;
            uint64_t v483 = v305;
            uint64_t v484 = v261;
            uint64_t v485 = v300;
            uint64_t v486 = v295;
            char v487 = v160;
            char v488 = v259;
            uint64_t v489 = v291;
            char v490 = v334;
            double v491 = v328;
            double v492 = v271;
            uint64_t v493 = v267;
            uint64_t v494 = v367;
            double v495 = v10;
            char v496 = v11;
            unint64_t v497 = Strong;
            char v498 = v382;
            unint64_t v499 = -1.0;
            char v500 = 0;
            char v502 = 0;
            uint64_t v501 = v377;
            uint64_t v503 = v372;
LABEL_104:
            uint64_t v504 = 0;
            uint64_t v506 = 0;
            uint64_t v505 = v414;
            uint64_t v507 = v409;
            uint64_t v508 = v401;
            uint64_t v509 = v404;
            uint64_t v510 = v395;
            uint64_t v511 = v361;
            uint64_t v512 = v318;
            uint64_t v513 = v323;
            uint64_t v514 = v355;
            double v179 = v390;
LABEL_189:
            uint64_t v515 = v179;
            goto LABEL_190;
          }
          goto LABEL_185;
        }
        goto LABEL_219;
      }
      __break(1u);
      goto LABEL_211;
    case 2:
      uint64_t v18 = *(void *)a2;
      uint64_t v17 = *(void *)(a2 + 8);
      uint64_t v409 = *(void *)(a2 + 40);
      uint64_t v414 = *(void *)(a2 + 32);
      float v19 = *(float *)(a2 + 56);
      char v378 = *(void *)(a2 + 64);
      char v383 = *(void *)(a2 + 48);
      uint64_t v373 = *(void *)(a2 + 72);
      uint64_t v20 = *(void *)(a2 + 88);
      char v390 = *(void *)(a2 + 80);
      float v21 = *(float *)(a2 + 96);
      float v22 = *(float *)(a2 + 100);
      uint64_t v368 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v57 = specialized static Entity.entityInfoType(_:)(v18);
        if (v57)
        {
          uint64_t v58 = (*(uint64_t (**)(void))(v57 + 232))();
          uint64_t v59 = *(void *)(v58 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v59, 0);
          *(void *)(v58 + 16) = v18;
          MEMORY[0x22A68E750](v18, v58);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v18);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v60 = swift_allocObject();
        swift_weakInit();
        *(void *)(v60 + 16) = v17;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v61 = String.init(cString:)();
        uint64_t v63 = v62;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v64 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          char v65 = specialized __RawDictionaryStorage.find<A>(_:)(v61, v63);
          if (v66)
          {
            uint64_t v67 = (uint64_t *)(*(void *)(v64 + 56) + 56 * v65);
            uint64_t v401 = *v67;
            uint64_t v404 = v67[1];
            uint64_t v68 = v67[3];
            uint64_t v395 = v67[2];
            uint64_t v70 = v67[4];
            uint64_t v69 = v67[5];
            uint64_t v71 = v67[6];
            swift_bridgeObjectRelease();
LABEL_96:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&uint64_t v519 = v414;
            BYTE8(v519) = 0;
            *(void *)&uint64_t v520 = v409;
            *((void *)&v520 + 1) = v401;
            *(void *)&uint64_t v521 = v404;
            *((void *)&v521 + 1) = v395;
            *(void *)&uint64_t v522 = v68;
            *((void *)&v522 + 1) = v70;
            *(void *)&char v523 = v69;
            *((void *)&v523 + 1) = v71;
            char v355 = v71;
            char v361 = v68;
            if (v20 && REBindPointBoundComponent())
            {
              uint64_t v163 = REComponentGetEntity();
              if ((id)REEntityGetSwiftObject())
              {
                type metadata accessor for Entity();
                uint64_t v164 = swift_dynamicCastClassUnconditional();
LABEL_100:
                char v165 = v164;
                goto LABEL_102;
              }
              if (REEntityIsBeingDestroyed())
              {
LABEL_220:
                __break(1u);
                goto LABEL_221;
              }
              uint64_t v244 = specialized static Entity.entityInfoType(_:)(v163);
              if (!v244)
              {
                uint64_t v164 = makeEntity(for:)(v163);
                goto LABEL_100;
              }
              char v165 = (*(uint64_t (**)(void))(v244 + 232))();
              uint64_t v245 = *(void *)(v165 + 16);
              swift_retain();
              MEMORY[0x22A68E750](v245, 0);
              *(void *)(v165 + 16) = v163;
              MEMORY[0x22A68E750](v163, v165);
              swift_release();
            }
            else
            {
              char v165 = 0;
            }
LABEL_102:
            specialized ActionEventData.action<A>()((uint64_t)v516);
            outlined init with take of Transform?((uint64_t)v516, (uint64_t)v517, &demangling cache variable for type metadata for BillboardAction?);
            outlined init with take of Transform?((uint64_t)v517, (uint64_t)v518, &demangling cache variable for type metadata for BillboardAction?);
            if (_s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v518) != 1)
            {
              outlined init with take of Transform?((uint64_t)v517, (uint64_t)&v457, &demangling cache variable for type metadata for BillboardAction?);
              uint64_t v342 = v457;
              uint64_t v265 = v60;
              uint64_t v268 = v165;
              double v166 = v458;
              uint64_t v313 = v458;
              uint64_t v318 = v70;
              double v167 = v459;
              uint64_t v276 = v459;
              char v349 = v460;
              double v168 = v461;
              uint64_t v169 = v462;
              uint64_t v306 = v462;
              uint64_t v323 = v69;
              uint64_t v170 = v463;
              char v301 = v463;
              uint64_t v171 = v464;
              uint64_t v172 = v465;
              uint64_t v296 = v465;
              uint64_t v173 = v467;
              uint64_t v292 = v467;
              uint64_t v174 = v468;
              uint64_t v288 = v468;
              uint64_t v175 = v469;
              uint64_t v176 = v470;
              uint64_t v280 = v461;
              uint64_t v284 = v470;
              uint64_t v260 = v471;
              uint64_t v262 = v466;
              uint64_t v335 = v472;
              uint64_t v329 = v473;
              swift_retain();
              char v177 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<BillboardAction>);
              uint64_t v422 = v166;
              uint64_t v423 = v167;
              double v178 = v19;
              unint64_t v424 = v349;
              uint64_t v425 = v168;
              uint64_t v426 = v169;
              uint64_t v427 = v170;
              uint64_t v428 = v171;
              uint64_t v429 = v172;
              uint64_t v430 = v262;
              uint64_t v431 = v173;
              uint64_t v432 = v174;
              uint64_t v433 = v175;
              uint64_t v434 = v176;
              uint64_t v435 = v260;
              uint64_t v436 = v335;
              uint64_t v437 = v329;
              uint64_t v272 = v177 & 1;
              uint64_t v438 = v177 & 1;
              uint64_t v421 = v342;
              v420[0] = v265;
              uint64_t v439 = v268;
              uint64_t v440 = v368;
              v441 = v21;
              v442 = v22;
              v443 = Strong;
              uint64_t v444 = v373;
              uint64_t v445 = v178;
              char v446 = 0;
              uint64_t v448 = 0;
              uint64_t v447 = v383;
              uint64_t v449 = v378;
              uint64_t v450 = 0;
              uint64_t v454 = v522;
              char v455 = v523;
              uint64_t v452 = v520;
              uint64_t v453 = v521;
              uint64_t v451 = v519;
              char v456 = v390;
              swift_retain();
              swift_retain();
              a5(v420);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v474 = v265;
              uint64_t v475 = v342;
              uint64_t v476 = v313;
              uint64_t v477 = v276;
              char v478 = v349;
              uint64_t v479 = v280;
              uint64_t v480 = v306;
              uint64_t v481 = v301;
              uint64_t v482 = v171;
              uint64_t v483 = v296;
              uint64_t v484 = v262;
              uint64_t v485 = v292;
              uint64_t v486 = v288;
              char v487 = v175;
              char v488 = v284;
              uint64_t v489 = v260;
              char v490 = v335;
              double v491 = v329;
              double v492 = v272;
              uint64_t v493 = v268;
              uint64_t v494 = v368;
              double v495 = v21;
              char v496 = v22;
              unint64_t v497 = Strong;
              char v498 = v373;
              unint64_t v499 = v178;
              char v500 = 0;
              char v502 = 0;
              uint64_t v501 = v383;
              uint64_t v503 = v378;
              goto LABEL_104;
            }
LABEL_185:
            swift_release();
            swift_release();
            swift_release();
LABEL_186:
            swift_release();
            return 0;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v401 = 0;
        uint64_t v404 = 0;
        uint64_t v395 = 0;
        uint64_t v68 = 0;
        uint64_t v70 = 0;
        uint64_t v69 = 0;
        uint64_t v71 = 0;
        goto LABEL_96;
      }
LABEL_211:
      __break(1u);
      goto LABEL_212;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_186;
    case 4:
      uint64_t v24 = *(void *)a2;
      uint64_t v23 = *(void *)(a2 + 8);
      uint64_t v410 = *(void *)(a2 + 40);
      uint64_t v415 = *(void *)(a2 + 32);
      uint64_t v25 = *(void *)(a2 + 64);
      uint64_t v374 = *(void *)(a2 + 56);
      uint64_t v379 = *(void *)(a2 + 48);
      float v26 = *(float *)(a2 + 72);
      float v27 = *(float *)(a2 + 76);
      uint64_t v369 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_212:
        __break(1u);
        goto LABEL_213;
      }
      uint64_t v72 = specialized static Entity.entityInfoType(_:)(v24);
      if (v72)
      {
        uint64_t v73 = (*(uint64_t (**)(void))(v72 + 232))();
        uint64_t v74 = *(void *)(v73 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v74, 0);
        *(void *)(v73 + 16) = v24;
        MEMORY[0x22A68E750](v24, v73);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v24);
      }
LABEL_41:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v75 = swift_allocObject();
      swift_weakInit();
      uint64_t v385 = v75;
      *(void *)(v75 + 16) = v23;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v76 = String.init(cString:)();
      uint64_t v78 = v77;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v79 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_106;
      }
      swift_bridgeObjectRetain();
      char v80 = specialized __RawDictionaryStorage.find<A>(_:)(v76, v78);
      if ((v81 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_106:
        uint64_t v402 = 0;
        uint64_t v405 = 0;
        uint64_t v392 = 0;
        unint64_t v396 = 0;
        uint64_t v83 = 0;
        uint64_t v84 = 0;
        uint64_t v85 = 0;
        goto LABEL_107;
      }
      uint64_t v82 = (uint64_t *)(*(void *)(v79 + 56) + 56 * v80);
      uint64_t v402 = *v82;
      uint64_t v405 = v82[1];
      uint64_t v83 = v82[3];
      uint64_t v84 = v82[4];
      uint64_t v392 = v82[5];
      unint64_t v396 = v82[2];
      uint64_t v85 = v82[6];
      swift_bridgeObjectRelease();
LABEL_107:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v519 = v415;
      BYTE8(v519) = 0;
      *(void *)&uint64_t v520 = v410;
      *((void *)&v520 + 1) = v402;
      *(void *)&uint64_t v521 = v405;
      *((void *)&v521 + 1) = v396;
      *(void *)&uint64_t v522 = v83;
      *((void *)&v522 + 1) = v84;
      *(void *)&char v523 = v392;
      *((void *)&v523 + 1) = v85;
      char v356 = v85;
      uint64_t v362 = v83;
      if (v25 && REBindPointBoundComponent())
      {
        uint64_t v180 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v181 = swift_dynamicCastClassUnconditional();
LABEL_111:
          uint64_t v182 = v181;
          goto LABEL_113;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v246 = specialized static Entity.entityInfoType(_:)(v180);
        if (!v246)
        {
          uint64_t v181 = makeEntity(for:)(v180);
          goto LABEL_111;
        }
        uint64_t v182 = (*(uint64_t (**)(void))(v246 + 232))();
        uint64_t v247 = *(void *)(v182 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v247, 0);
        *(void *)(v182 + 16) = v180;
        MEMORY[0x22A68E750](v180, v182);
        swift_release();
      }
      else
      {
        uint64_t v182 = 0;
      }
LABEL_113:
      specialized ActionEventData.action<A>()((uint64_t)v516);
      outlined init with take of Transform?((uint64_t)v516, (uint64_t)v517, &demangling cache variable for type metadata for BillboardAction?);
      outlined init with take of Transform?((uint64_t)v517, (uint64_t)v518, &demangling cache variable for type metadata for BillboardAction?);
      if (_s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v518) == 1) {
        goto LABEL_185;
      }
      outlined init with take of Transform?((uint64_t)v517, (uint64_t)&v457, &demangling cache variable for type metadata for BillboardAction?);
      uint64_t v269 = v182;
      uint64_t v343 = v457;
      uint64_t v307 = v84;
      uint64_t v183 = v458;
      uint64_t v184 = v459;
      char v285 = v459;
      uint64_t v350 = v460;
      uint64_t v185 = v461;
      uint64_t v186 = v462;
      uint64_t v277 = v462;
      uint64_t v281 = v461;
      uint64_t v187 = v463;
      uint64_t v273 = v463;
      uint64_t v188 = v464;
      uint64_t v189 = v465;
      uint64_t v297 = v465;
      char v302 = v458;
      uint64_t v190 = v466;
      uint64_t v293 = v466;
      uint64_t v191 = v467;
      uint64_t v289 = v467;
      uint64_t v336 = v468;
      char v192 = v469;
      uint64_t v324 = v471;
      uint64_t v330 = v470;
      uint64_t v319 = v472;
      uint64_t v314 = v473;
      swift_retain();
      uint64_t v422 = v183;
      uint64_t v423 = v184;
      unint64_t v424 = v350;
      uint64_t v425 = v185;
      uint64_t v426 = v186;
      uint64_t v427 = v187;
      uint64_t v428 = v188;
      uint64_t v429 = v189;
      uint64_t v430 = v190;
      uint64_t v431 = v191;
      uint64_t v432 = v336;
      uint64_t v433 = v192;
      uint64_t v434 = v330;
      uint64_t v435 = v324;
      uint64_t v436 = v319;
      uint64_t v437 = v314;
      LOBYTE(v185) = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<BillboardAction>) & 1;
      uint64_t v438 = v185;
      uint64_t v421 = v343;
      v420[0] = v385;
      uint64_t v439 = v269;
      uint64_t v440 = v369;
      v441 = v26;
      v442 = v27;
      v443 = Strong;
      uint64_t v444 = v374;
      uint64_t v445 = -1.0;
      char v446 = 0;
      uint64_t v448 = 0;
      uint64_t v447 = 0xBFF0000000000000;
      uint64_t v449 = 0xBFF0000000000000;
      uint64_t v450 = 0;
      uint64_t v454 = v522;
      char v455 = v523;
      uint64_t v452 = v520;
      uint64_t v453 = v521;
      uint64_t v451 = v519;
      char v456 = v379;
      swift_retain();
      swift_retain();
      a5(v420);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v474 = v385;
      uint64_t v475 = v343;
      uint64_t v476 = v302;
      uint64_t v477 = v285;
      char v478 = v350;
      uint64_t v479 = v281;
      uint64_t v480 = v277;
      uint64_t v481 = v273;
      uint64_t v482 = v188;
      uint64_t v483 = v297;
      uint64_t v484 = v293;
      uint64_t v485 = v289;
      uint64_t v486 = v336;
      char v487 = v192;
      char v488 = v330;
      uint64_t v489 = v324;
      char v490 = v319;
      double v491 = v314;
      double v492 = v185;
      uint64_t v493 = v269;
      uint64_t v494 = v369;
      double v495 = v26;
      char v496 = v27;
      unint64_t v497 = Strong;
      char v498 = v374;
      unint64_t v499 = -1.0;
      char v500 = 0;
      char v502 = 0;
      uint64_t v501 = 0xBFF0000000000000;
      uint64_t v503 = 0xBFF0000000000000;
      uint64_t v504 = 0;
      uint64_t v506 = 0;
      uint64_t v505 = v415;
      uint64_t v507 = v410;
      uint64_t v508 = v402;
      uint64_t v509 = v405;
      uint64_t v510 = v396;
      uint64_t v511 = v362;
      uint64_t v512 = v307;
      uint64_t v513 = v392;
      uint64_t v514 = v356;
      uint64_t v515 = v379;
LABEL_190:
      outlined release of ActionEvent<BillboardAction>((uint64_t)&v474);
      return 0;
    case 8:
      uint64_t v29 = *(void *)a2;
      uint64_t v28 = *(void *)(a2 + 8);
      uint64_t v411 = *(void *)(a2 + 40);
      uint64_t v416 = *(void *)(a2 + 32);
      uint64_t v30 = *(void *)(a2 + 56);
      unint64_t v394 = *(void *)(a2 + 48);
      float v31 = *(float *)(a2 + 64);
      float v32 = *(float *)(a2 + 68);
      uint64_t v380 = *(unsigned char *)(a2 + 72);
      uint64_t v384 = *(void *)(a2 + 88);
      unint64_t v387 = *(void *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_213:
          __break(1u);
          goto LABEL_214;
        }
        uint64_t v86 = specialized static Entity.entityInfoType(_:)(v29);
        if (v86)
        {
          uint64_t v87 = (*(uint64_t (**)(void))(v86 + 232))();
          uint64_t v88 = *(void *)(v87 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v88, 0);
          *(void *)(v87 + 16) = v29;
          MEMORY[0x22A68E750](v29, v87);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v29);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v89 = swift_allocObject();
      swift_weakInit();
      *(void *)(v89 + 16) = v28;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v90 = String.init(cString:)();
      uint64_t v92 = v91;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v93 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_117;
      }
      swift_bridgeObjectRetain();
      uint64_t v94 = specialized __RawDictionaryStorage.find<A>(_:)(v90, v92);
      if (v95)
      {
        char v96 = (uint64_t *)(*(void *)(v93 + 56) + 56 * v94);
        uint64_t v97 = v96[2];
        uint64_t v403 = *v96;
        uint64_t v406 = v96[1];
        uint64_t v98 = v96[3];
        uint64_t v99 = v96[4];
        uint64_t v101 = v96[5];
        uint64_t v100 = v96[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_117:
        uint64_t v403 = 0;
        uint64_t v406 = 0;
        uint64_t v97 = 0;
        uint64_t v98 = 0;
        uint64_t v99 = 0;
        uint64_t v101 = 0;
        uint64_t v100 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v519 = v416;
      BYTE8(v519) = 0;
      *(void *)&uint64_t v520 = v411;
      *((void *)&v520 + 1) = v403;
      *(void *)&uint64_t v521 = v406;
      *((void *)&v521 + 1) = v97;
      *(void *)&uint64_t v522 = v98;
      *((void *)&v522 + 1) = v99;
      uint64_t v370 = v101;
      uint64_t v375 = v98;
      *(void *)&char v523 = v101;
      *((void *)&v523 + 1) = v100;
      if (v30 && REBindPointBoundComponent())
      {
        double v193 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          double v194 = swift_dynamicCastClassUnconditional();
LABEL_122:
          uint64_t v195 = v194;
          goto LABEL_124;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_222:
          __break(1u);
          goto LABEL_223;
        }
        uint64_t v248 = specialized static Entity.entityInfoType(_:)(v193);
        if (!v248)
        {
          double v194 = makeEntity(for:)(v193);
          goto LABEL_122;
        }
        uint64_t v195 = (*(uint64_t (**)(void))(v248 + 232))();
        uint64_t v249 = *(void *)(v195 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v249, 0);
        *(void *)(v195 + 16) = v193;
        MEMORY[0x22A68E750](v193, v195);
        swift_release();
      }
      else
      {
        uint64_t v195 = 0;
      }
LABEL_124:
      specialized ActionEventData.action<A>()((uint64_t)v516);
      outlined init with take of Transform?((uint64_t)v516, (uint64_t)v517, &demangling cache variable for type metadata for BillboardAction?);
      outlined init with take of Transform?((uint64_t)v517, (uint64_t)v518, &demangling cache variable for type metadata for BillboardAction?);
      if (_s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v518) != 1)
      {
        outlined init with take of Transform?((uint64_t)v517, (uint64_t)&v457, &demangling cache variable for type metadata for BillboardAction?);
        uint64_t v331 = v99;
        uint64_t v337 = v97;
        uint64_t v357 = v457;
        uint64_t v196 = v458;
        uint64_t v197 = v459;
        uint64_t v298 = v459;
        uint64_t v363 = v460;
        uint64_t v274 = v89;
        uint64_t v278 = v195;
        uint64_t v198 = v461;
        uint64_t v344 = v100;
        uint64_t v199 = v462;
        char v290 = v462;
        uint64_t v294 = v461;
        uint64_t v200 = v463;
        uint64_t v286 = v463;
        uint64_t v201 = v464;
        uint64_t v270 = v465;
        uint64_t v202 = v466;
        uint64_t v320 = v466;
        uint64_t v325 = v458;
        uint64_t v203 = v467;
        char v315 = v467;
        uint64_t v204 = v468;
        uint64_t v308 = v468;
        uint64_t v205 = v469;
        uint64_t v263 = v470;
        uint64_t v206 = v471;
        uint64_t v303 = v471;
        uint64_t v266 = v472;
        uint64_t v351 = v473;
        swift_retain();
        uint64_t v207 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<BillboardAction>);
        uint64_t v422 = v196;
        uint64_t v423 = v197;
        unint64_t v424 = v363;
        uint64_t v425 = v198;
        uint64_t v426 = v199;
        uint64_t v427 = v200;
        uint64_t v428 = v201;
        uint64_t v429 = v270;
        uint64_t v430 = v202;
        uint64_t v431 = v203;
        uint64_t v432 = v204;
        uint64_t v433 = v205;
        uint64_t v434 = v263;
        uint64_t v435 = v206;
        uint64_t v436 = v266;
        uint64_t v437 = v351;
        uint64_t v282 = v207 & 1;
        uint64_t v438 = v207 & 1;
        uint64_t v421 = v357;
        v420[0] = v274;
        uint64_t v439 = v278;
        uint64_t v440 = v380;
        v441 = v31;
        v442 = v32;
        uint64_t v445 = 0.0;
        v443 = Strong;
        uint64_t v444 = 0;
        char v446 = 1;
        uint64_t v448 = 0;
        uint64_t v447 = v387;
        uint64_t v449 = v384;
        uint64_t v450 = 0;
        uint64_t v454 = v522;
        char v455 = v523;
        uint64_t v452 = v520;
        uint64_t v453 = v521;
        uint64_t v451 = v519;
        char v456 = v394;
        swift_retain();
        swift_retain();
        a5(v420);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v474 = v274;
        uint64_t v475 = v357;
        uint64_t v476 = v325;
        uint64_t v477 = v298;
        char v478 = v363;
        uint64_t v479 = v294;
        uint64_t v480 = v290;
        uint64_t v481 = v286;
        uint64_t v482 = v201;
        uint64_t v483 = v270;
        uint64_t v484 = v320;
        uint64_t v485 = v315;
        uint64_t v486 = v308;
        char v487 = v205;
        char v488 = v263;
        uint64_t v489 = v303;
        char v490 = v266;
        double v491 = v351;
        double v492 = v282;
        uint64_t v493 = v278;
        uint64_t v494 = v380;
        double v495 = v31;
        char v496 = v32;
        unint64_t v499 = 0.0;
        unint64_t v497 = Strong;
        char v498 = 0;
        char v500 = 1;
        char v502 = 0;
        uint64_t v501 = v387;
        uint64_t v503 = v384;
        uint64_t v504 = 0;
        uint64_t v506 = 0;
        uint64_t v505 = v416;
        uint64_t v507 = v411;
        uint64_t v508 = v403;
        uint64_t v509 = v406;
        uint64_t v510 = v337;
        uint64_t v511 = v375;
        uint64_t v512 = v331;
        uint64_t v513 = v370;
        uint64_t v514 = v344;
        double v179 = v394;
        goto LABEL_189;
      }
      goto LABEL_185;
    case 16:
      uint64_t v34 = *(void *)a2;
      uint64_t v33 = *(void *)(a2 + 8);
      uint64_t v391 = *(void *)(a2 + 32);
      uint64_t v412 = *(void *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 56);
      unint64_t v400 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_214:
          __break(1u);
          goto LABEL_215;
        }
        uint64_t v102 = specialized static Entity.entityInfoType(_:)(v34);
        if (v102)
        {
          uint64_t v103 = (*(uint64_t (**)(void))(v102 + 232))();
          uint64_t v104 = *(void *)(v103 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v104, 0);
          *(void *)(v103 + 16) = v34;
          MEMORY[0x22A68E750](v34, v103);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v105 = swift_allocObject();
      swift_weakInit();
      *(void *)(v105 + 16) = v33;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v106 = String.init(cString:)();
      uint64_t v108 = v107;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v109 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_127;
      }
      swift_bridgeObjectRetain();
      uint64_t v110 = specialized __RawDictionaryStorage.find<A>(_:)(v106, v108);
      if (v111)
      {
        unint64_t v112 = (uint64_t *)(*(void *)(v109 + 56) + 56 * v110);
        char v113 = v112[1];
        uint64_t v407 = *v112;
        uint64_t v115 = v112[2];
        uint64_t v114 = v112[3];
        uint64_t v116 = v112[4];
        uint64_t v117 = v112[5];
        uint64_t v118 = v112[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_127:
        uint64_t v407 = 0;
        char v113 = 0;
        uint64_t v115 = 0;
        uint64_t v114 = 0;
        uint64_t v116 = 0;
        uint64_t v117 = 0;
        uint64_t v118 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v519 = 0;
      BYTE8(v519) = 0;
      *(void *)&uint64_t v520 = v412;
      *((void *)&v520 + 1) = v407;
      *(void *)&uint64_t v521 = v113;
      *((void *)&v521 + 1) = v115;
      *(void *)&uint64_t v522 = v114;
      *((void *)&v522 + 1) = v116;
      *(void *)&char v523 = v117;
      *((void *)&v523 + 1) = v118;
      unint64_t v388 = v114;
      if (!v35) {
        goto LABEL_184;
      }
      if (!REBindPointBoundComponent()) {
        goto LABEL_140;
      }
      uint64_t v397 = v117;
      uint64_t v208 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_138;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_181;
      }
      __break(1u);
LABEL_133:
      swift_bridgeObjectRelease();
LABEL_134:
      uint64_t v407 = 0;
      char v113 = 0;
      uint64_t v115 = 0;
      uint64_t v129 = 0;
      uint64_t v116 = 0;
      uint64_t v117 = 0;
      uint64_t v118 = 0;
LABEL_135:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v519 = 0;
      BYTE8(v519) = 0;
      *(void *)&uint64_t v520 = v412;
      *((void *)&v520 + 1) = v407;
      *(void *)&uint64_t v521 = v113;
      *((void *)&v521 + 1) = v115;
      *(void *)&uint64_t v522 = v129;
      *((void *)&v522 + 1) = v116;
      *(void *)&char v523 = v117;
      *((void *)&v523 + 1) = v118;
      unint64_t v388 = v129;
      if (!v35) {
        goto LABEL_184;
      }
      if (!REBindPointBoundComponent())
      {
LABEL_140:
        uint64_t v35 = 0;
LABEL_184:
        specialized ActionEventData.action<A>()((uint64_t)v516);
        outlined init with take of Transform?((uint64_t)v516, (uint64_t)v517, &demangling cache variable for type metadata for BillboardAction?);
        outlined init with take of Transform?((uint64_t)v517, (uint64_t)v518, &demangling cache variable for type metadata for BillboardAction?);
        if (_s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v518) == 1) {
          goto LABEL_185;
        }
        outlined init with take of Transform?((uint64_t)v517, (uint64_t)&v457, &demangling cache variable for type metadata for BillboardAction?);
        uint64_t v299 = v457;
        uint64_t v399 = v117;
        uint64_t v252 = v458;
        uint64_t v360 = v459;
        char v354 = v460;
        uint64_t v340 = v462;
        char v347 = v461;
        uint64_t v376 = v115;
        uint64_t v253 = v463;
        uint64_t v254 = v464;
        uint64_t v333 = v465;
        uint64_t v255 = v466;
        uint64_t v327 = v467;
        uint64_t v322 = v468;
        uint64_t v256 = v469;
        uint64_t v311 = v471;
        uint64_t v317 = v470;
        uint64_t v304 = v472;
        uint64_t v366 = v473;
        uint64_t v421 = v457;
        uint64_t v422 = v458;
        uint64_t v423 = v459;
        unint64_t v424 = v460;
        uint64_t v425 = v461;
        uint64_t v426 = v462;
        uint64_t v427 = v463;
        uint64_t v428 = v464;
        uint64_t v429 = v465;
        uint64_t v430 = v466;
        uint64_t v431 = v467;
        uint64_t v432 = v468;
        uint64_t v433 = v469;
        uint64_t v434 = v470;
        uint64_t v435 = v471;
        uint64_t v436 = v472;
        uint64_t v437 = v473;
        uint64_t v438 = 1;
        v420[0] = v105;
        uint64_t v439 = v35;
        uint64_t v440 = 0;
        v442 = 0.0;
        v441 = 0.0;
        uint64_t v445 = 0.0;
        v443 = Strong;
        uint64_t v444 = 0;
        char v446 = 1;
        uint64_t v448 = 0;
        uint64_t v447 = v391;
        uint64_t v449 = 0;
        uint64_t v450 = 1;
        uint64_t v453 = v521;
        uint64_t v454 = v522;
        char v455 = v523;
        uint64_t v451 = v519;
        uint64_t v452 = v520;
        char v456 = v400;
        swift_retain();
        swift_retain();
        a5(v420);
        swift_release();
        swift_release();
        swift_release();
        uint64_t v474 = v105;
        uint64_t v475 = v299;
        uint64_t v476 = v252;
        uint64_t v477 = v360;
        char v478 = v354;
        uint64_t v479 = v347;
        uint64_t v480 = v340;
        uint64_t v481 = v253;
        uint64_t v482 = v254;
        uint64_t v483 = v333;
        uint64_t v484 = v255;
        uint64_t v485 = v327;
        uint64_t v486 = v322;
        char v487 = v256;
        char v488 = v317;
        uint64_t v489 = v311;
        char v490 = v304;
        double v491 = v366;
        double v492 = 1;
        uint64_t v493 = v35;
        uint64_t v494 = 0;
        char v496 = 0.0;
        double v495 = 0.0;
        unint64_t v499 = 0.0;
        unint64_t v497 = Strong;
        char v498 = 0;
        char v500 = 1;
        char v502 = 0;
        uint64_t v501 = v391;
        uint64_t v503 = 0;
        uint64_t v504 = 1;
        uint64_t v506 = 0;
        uint64_t v505 = 0;
        uint64_t v507 = v412;
        uint64_t v508 = v407;
        uint64_t v509 = v113;
        uint64_t v510 = v376;
        uint64_t v511 = v388;
        uint64_t v512 = v116;
        uint64_t v513 = v399;
        uint64_t v239 = v118;
LABEL_188:
        uint64_t v514 = v239;
        double v179 = v400;
        goto LABEL_189;
      }
      uint64_t v397 = v117;
      uint64_t v208 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
LABEL_138:
        type metadata accessor for Entity();
        uint64_t v209 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
LABEL_181:
        uint64_t v250 = specialized static Entity.entityInfoType(_:)(v208);
        if (v250)
        {
          uint64_t v35 = (*(uint64_t (**)(void))(v250 + 232))();
          uint64_t v251 = *(void *)(v35 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v251, 0);
          *(void *)(v35 + 16) = v208;
          MEMORY[0x22A68E750](v208, v35);
          swift_release();
          goto LABEL_183;
        }
        uint64_t v209 = makeEntity(for:)(v208);
      }
      uint64_t v35 = v209;
LABEL_183:
      uint64_t v117 = v397;
      goto LABEL_184;
    case 32:
      uint64_t v37 = *(void *)a2;
      uint64_t v36 = *(void *)(a2 + 8);
      uint64_t v391 = *(void *)(a2 + 32);
      uint64_t v412 = *(void *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 56);
      unint64_t v400 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        uint64_t v119 = specialized static Entity.entityInfoType(_:)(v37);
        if (v119)
        {
          uint64_t v120 = (*(uint64_t (**)(void))(v119 + 232))();
          uint64_t v121 = *(void *)(v120 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v121, 0);
          *(void *)(v120 + 16) = v37;
          MEMORY[0x22A68E750](v37, v120);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v37);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v105 = swift_allocObject();
      swift_weakInit();
      *(void *)(v105 + 16) = v36;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v122 = String.init(cString:)();
      uint64_t v124 = v123;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v125 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_134;
      }
      swift_bridgeObjectRetain();
      uint64_t v126 = specialized __RawDictionaryStorage.find<A>(_:)(v122, v124);
      if ((v127 & 1) == 0) {
        goto LABEL_133;
      }
      uint64_t v128 = (uint64_t *)(*(void *)(v125 + 56) + 56 * v126);
      char v113 = v128[1];
      uint64_t v407 = *v128;
      uint64_t v115 = v128[2];
      uint64_t v129 = v128[3];
      uint64_t v116 = v128[4];
      uint64_t v117 = v128[5];
      uint64_t v118 = v128[6];
      swift_bridgeObjectRelease();
      goto LABEL_135;
    case 64:
      uint64_t v39 = *(void *)a2;
      uint64_t v38 = *(void *)(a2 + 8);
      uint64_t v40 = *(void *)(a2 + 24);
      uint64_t v41 = *(void *)(a2 + 40);
      unint64_t v400 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        unint64_t v130 = specialized static Entity.entityInfoType(_:)(v39);
        if (v130)
        {
          char v131 = (*(uint64_t (**)(void))(v130 + 232))();
          uint64_t v132 = *(void *)(v131 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v132, 0);
          *(void *)(v131 + 16) = v39;
          MEMORY[0x22A68E750](v39, v131);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v39);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v133 = swift_allocObject();
      swift_weakInit();
      *(void *)(v133 + 16) = v38;
      swift_beginAccess();
      swift_weakAssign();
      if (v41 && REBindPointBoundComponent())
      {
        uint64_t v134 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v135 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v136 = v135;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v240 = specialized static Entity.entityInfoType(_:)(v134);
        if (!v240)
        {
          uint64_t v135 = makeEntity(for:)(v134);
          goto LABEL_77;
        }
        uint64_t v136 = (*(uint64_t (**)(void))(v240 + 232))();
        uint64_t v241 = *(void *)(v136 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v241, 0);
        *(void *)(v136 + 16) = v134;
        MEMORY[0x22A68E750](v134, v136);
        swift_release();
      }
      else
      {
        uint64_t v136 = 0;
      }
LABEL_79:
      uint64_t v137 = String.init(cString:)();
      uint64_t v139 = v138;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v140 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v141 = specialized __RawDictionaryStorage.find<A>(_:)(v137, v139);
        if (v142)
        {
          uint64_t v143 = (uint64_t *)(*(void *)(v140 + 56) + 56 * v141);
          uint64_t v144 = *v143;
          uint64_t v145 = v143[1];
          uint64_t v147 = v143[2];
          uint64_t v146 = v143[3];
          uint64_t v413 = v143[5];
          unint64_t v417 = v143[4];
          uint64_t v408 = v143[6];
          swift_bridgeObjectRelease();
LABEL_143:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v519 = 0;
          BYTE8(v519) = 0;
          *(void *)&uint64_t v520 = v40;
          *((void *)&v520 + 1) = v144;
          *(void *)&uint64_t v521 = v145;
          *((void *)&v521 + 1) = v147;
          uint64_t v398 = v146;
          *(void *)&uint64_t v522 = v146;
          *((void *)&v522 + 1) = v417;
          *(void *)&char v523 = v413;
          *((void *)&v523 + 1) = v408;
          specialized ActionEventData.action<A>()((uint64_t)v516);
          outlined init with take of Transform?((uint64_t)v516, (uint64_t)v517, &demangling cache variable for type metadata for BillboardAction?);
          outlined init with take of Transform?((uint64_t)v517, (uint64_t)v518, &demangling cache variable for type metadata for BillboardAction?);
          if (_s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v518) == 1) {
            goto LABEL_185;
          }
          outlined init with take of Transform?((uint64_t)v517, (uint64_t)&v457, &demangling cache variable for type metadata for BillboardAction?);
          uint64_t v309 = v457;
          uint64_t v210 = v458;
          uint64_t v389 = v40;
          uint64_t v393 = v147;
          uint64_t v211 = v459;
          uint64_t v364 = v460;
          uint64_t v358 = v461;
          uint64_t v352 = v462;
          uint64_t v345 = v463;
          uint64_t v212 = v464;
          unint64_t v381 = v145;
          uint64_t v386 = v144;
          uint64_t v338 = v465;
          uint64_t v213 = v466;
          uint64_t v214 = v467;
          uint64_t v332 = v468;
          uint64_t v215 = v469;
          uint64_t v321 = v471;
          uint64_t v326 = v470;
          uint64_t v316 = v472;
          uint64_t v371 = v473;
          uint64_t v421 = v457;
          uint64_t v422 = v458;
          uint64_t v423 = v459;
          unint64_t v424 = v460;
          uint64_t v425 = v461;
          uint64_t v426 = v462;
          uint64_t v427 = v463;
          uint64_t v428 = v464;
          uint64_t v429 = v465;
          uint64_t v430 = v466;
          uint64_t v431 = v467;
          uint64_t v432 = v468;
          uint64_t v433 = v469;
          uint64_t v434 = v470;
          uint64_t v435 = v471;
          uint64_t v436 = v472;
          uint64_t v437 = v473;
          uint64_t v216 = Strong;
          uint64_t v438 = 1;
          v420[0] = v133;
          uint64_t v439 = v136;
          uint64_t v440 = 0;
          v442 = 0.0;
          v441 = 0.0;
          uint64_t v445 = 0.0;
          v443 = Strong;
          uint64_t v444 = 0;
          char v446 = 1;
          uint64_t v448 = 1;
          uint64_t v447 = 0;
          uint64_t v449 = 0;
          uint64_t v450 = 1;
          uint64_t v453 = v521;
          uint64_t v454 = v522;
          char v455 = v523;
          uint64_t v451 = v519;
          uint64_t v452 = v520;
          char v456 = v400;
          swift_retain();
          swift_retain();
          a5(v420);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v474 = v133;
          uint64_t v475 = v309;
          uint64_t v476 = v210;
          uint64_t v477 = v211;
          char v478 = v364;
          uint64_t v479 = v358;
          uint64_t v480 = v352;
          uint64_t v481 = v345;
          uint64_t v482 = v212;
          uint64_t v483 = v338;
          uint64_t v484 = v213;
          uint64_t v485 = v214;
LABEL_164:
          uint64_t v486 = v332;
          char v487 = v215;
          char v488 = v326;
          uint64_t v489 = v321;
          char v490 = v316;
          double v491 = v371;
          double v492 = 1;
          uint64_t v493 = v136;
          uint64_t v494 = 0;
          char v496 = 0.0;
          double v495 = 0.0;
          unint64_t v499 = 0.0;
          unint64_t v497 = v216;
          char v498 = 0;
          char v500 = 1;
          char v502 = 1;
          uint64_t v501 = 0;
          uint64_t v503 = 0;
          uint64_t v504 = 1;
          uint64_t v506 = 0;
          uint64_t v505 = 0;
          uint64_t v507 = v389;
          uint64_t v508 = v386;
          uint64_t v509 = v381;
          uint64_t v510 = v393;
          uint64_t v511 = v398;
          uint64_t v512 = v417;
          uint64_t v513 = v413;
          uint64_t v239 = v408;
          goto LABEL_188;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v144 = 0;
      uint64_t v145 = 0;
      uint64_t v147 = 0;
      uint64_t v146 = 0;
      uint64_t v413 = 0;
      unint64_t v417 = 0;
      uint64_t v408 = 0;
      goto LABEL_143;
    default:
      if (a4 != 128) {
        goto LABEL_186;
      }
      uint64_t v14 = *(void *)a2;
      uint64_t v13 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 40);
      unint64_t v400 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        unint64_t v217 = specialized static Entity.entityInfoType(_:)(v14);
        if (v217)
        {
          char v218 = (*(uint64_t (**)(void))(v217 + 232))();
          uint64_t v219 = *(void *)(v218 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v219, 0);
          *(void *)(v218 + 16) = v14;
          MEMORY[0x22A68E750](v14, v218);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v220 = swift_allocObject();
      swift_weakInit();
      *(void *)(v220 + 16) = v13;
      swift_beginAccess();
      swift_weakAssign();
      if (v16 && REBindPointBoundComponent())
      {
        uint64_t v221 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v222 = swift_dynamicCastClassUnconditional();
LABEL_152:
          uint64_t v136 = v222;
          goto LABEL_154;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          JUMPOUT(0x227FB5C54);
        }
        uint64_t v257 = specialized static Entity.entityInfoType(_:)(v221);
        if (!v257)
        {
          uint64_t v222 = makeEntity(for:)(v221);
          goto LABEL_152;
        }
        uint64_t v136 = (*(uint64_t (**)(void))(v257 + 232))();
        uint64_t v258 = *(void *)(v136 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v258, 0);
        *(void *)(v136 + 16) = v221;
        MEMORY[0x22A68E750](v221, v136);
        swift_release();
      }
      else
      {
        uint64_t v136 = 0;
      }
LABEL_154:
      uint64_t v223 = String.init(cString:)();
      uint64_t v225 = v224;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v226 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v227 = specialized __RawDictionaryStorage.find<A>(_:)(v223, v225);
        if (v228)
        {
          uint64_t v229 = (uint64_t *)(*(void *)(v226 + 56) + 56 * v227);
          uint64_t v230 = *v229;
          uint64_t v231 = v229[1];
          uint64_t v233 = v229[2];
          uint64_t v232 = v229[3];
          uint64_t v413 = v229[5];
          unint64_t v417 = v229[4];
          uint64_t v408 = v229[6];
          swift_bridgeObjectRelease();
LABEL_161:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v519 = 0;
          BYTE8(v519) = 0;
          *(void *)&uint64_t v520 = v15;
          *((void *)&v520 + 1) = v230;
          *(void *)&uint64_t v521 = v231;
          *((void *)&v521 + 1) = v233;
          uint64_t v398 = v232;
          *(void *)&uint64_t v522 = v232;
          *((void *)&v522 + 1) = v417;
          *(void *)&char v523 = v413;
          *((void *)&v523 + 1) = v408;
          specialized ActionEventData.action<A>()((uint64_t)v516);
          outlined init with take of Transform?((uint64_t)v516, (uint64_t)v517, &demangling cache variable for type metadata for BillboardAction?);
          outlined init with take of Transform?((uint64_t)v517, (uint64_t)v518, &demangling cache variable for type metadata for BillboardAction?);
          if (_s17RealityFoundation15BillboardActionVSgWOg((uint64_t)v518) == 1) {
            goto LABEL_185;
          }
          outlined init with take of Transform?((uint64_t)v517, (uint64_t)&v457, &demangling cache variable for type metadata for BillboardAction?);
          uint64_t v310 = v457;
          uint64_t v234 = v458;
          uint64_t v389 = v15;
          uint64_t v393 = v233;
          uint64_t v235 = v459;
          uint64_t v365 = v460;
          unint64_t v381 = v231;
          uint64_t v236 = v461;
          uint64_t v359 = v462;
          uint64_t v353 = v463;
          unint64_t v237 = v464;
          uint64_t v386 = v230;
          uint64_t v346 = v465;
          char v238 = v466;
          uint64_t v339 = v467;
          uint64_t v332 = v468;
          uint64_t v215 = v469;
          uint64_t v321 = v471;
          uint64_t v326 = v470;
          uint64_t v316 = v472;
          uint64_t v371 = v473;
          uint64_t v421 = v457;
          uint64_t v422 = v458;
          uint64_t v423 = v459;
          unint64_t v424 = v460;
          uint64_t v425 = v461;
          uint64_t v426 = v462;
          uint64_t v427 = v463;
          uint64_t v428 = v464;
          uint64_t v429 = v465;
          uint64_t v430 = v466;
          uint64_t v431 = v467;
          uint64_t v432 = v468;
          uint64_t v433 = v469;
          uint64_t v434 = v470;
          uint64_t v435 = v471;
          uint64_t v436 = v472;
          uint64_t v437 = v473;
          uint64_t v216 = Strong;
          uint64_t v438 = 1;
          v420[0] = v220;
          uint64_t v439 = v136;
          uint64_t v440 = 0;
          v442 = 0.0;
          v441 = 0.0;
          uint64_t v445 = 0.0;
          v443 = Strong;
          uint64_t v444 = 0;
          char v446 = 1;
          uint64_t v448 = 1;
          uint64_t v447 = 0;
          uint64_t v449 = 0;
          uint64_t v450 = 1;
          uint64_t v453 = v521;
          uint64_t v454 = v522;
          char v455 = v523;
          uint64_t v451 = v519;
          uint64_t v452 = v520;
          char v456 = v400;
          swift_retain();
          swift_retain();
          swift_retain();
          a5(v420);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v474 = v220;
          uint64_t v475 = v310;
          uint64_t v476 = v234;
          uint64_t v477 = v235;
          char v478 = v365;
          uint64_t v479 = v236;
          uint64_t v480 = v359;
          uint64_t v481 = v353;
          uint64_t v482 = v237;
          uint64_t v483 = v346;
          uint64_t v484 = v238;
          uint64_t v485 = v339;
          goto LABEL_164;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v230 = 0;
      uint64_t v231 = 0;
      uint64_t v233 = 0;
      uint64_t v232 = 0;
      uint64_t v413 = 0;
      unint64_t v417 = 0;
      uint64_t v408 = 0;
      goto LABEL_161;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t Entity;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  double v212;
  double v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  double v223;
  double v224;
  double v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  double v234;
  double v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  double v244;
  double v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int v261;
  int v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  unint64_t v297;
  char v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t Strong;
  void v346[2];
  int v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int v352;
  char v353;
  char v354;
  char v355;
  uint64_t v356;
  char v357;
  double v358;
  double v359;
  uint64_t v360;
  uint64_t v361;
  double v362;
  char v363;
  unint64_t v364;
  char v365;
  unint64_t v366;
  char v367;
  long long v368;
  long long v369;
  long long v370;
  long long v371;
  long long v372;
  uint64_t v373;
  uint64_t v374;
  int v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  char v381;
  char v382;
  char v383;
  uint64_t v384;
  char v385;
  double v386;
  double v387;
  uint64_t v388;
  uint64_t v389;
  double v390;
  char v391;
  unint64_t v392;
  char v393;
  unint64_t v394;
  char v395;
  uint64_t v396;
  char v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  _DWORD v407[4];
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  unsigned int v412;
  unsigned __int16 v413;
  long long v414;
  long long v415;
  long long v416;
  long long v417;
  long long v418;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v8 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v333 = *(void *)(a2 + 32);
      uint64_t v338 = *(void *)(a2 + 40);
      uint64_t v308 = *(void *)(a2 + 48);
      uint64_t v9 = *(void *)(a2 + 64);
      float v10 = *(float *)(a2 + 72);
      float v11 = *(float *)(a2 + 76);
      uint64_t v284 = *(unsigned char *)(a2 + 80);
      char v290 = *(void *)(a2 + 88);
      uint64_t v296 = *(void *)(a2 + 96);
      char v302 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v43 = specialized static Entity.entityInfoType(_:)(v8);
        if (v43)
        {
          uint64_t v44 = (*(uint64_t (**)(void))(v43 + 232))();
          uint64_t v45 = *(void *)(v44 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v45, 0);
          *(void *)(v44 + 16) = v8;
          MEMORY[0x22A68E750](v8, v44);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v8);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v46 = swift_allocObject();
        swift_weakInit();
        uint64_t v313 = v46;
        *(void *)(v46 + 16) = v7;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v47 = String.init(cString:)();
        unint64_t v49 = v48;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        char v50 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v51 = specialized __RawDictionaryStorage.find<A>(_:)(v47, v49);
          if (v52)
          {
            uint64_t v53 = (uint64_t *)(*(void *)(v50 + 56) + 56 * v51);
            uint64_t v54 = v53[2];
            uint64_t v325 = *v53;
            uint64_t v330 = v53[1];
            uint64_t v55 = v53[3];
            uint64_t v320 = v53[4];
            uint64_t v57 = v53[5];
            uint64_t v56 = v53[6];
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v325 = 0;
        uint64_t v330 = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v320 = 0;
        uint64_t v57 = 0;
        uint64_t v56 = 0;
LABEL_86:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v414 = v333;
        BYTE8(v414) = 0;
        *(void *)&uint64_t v415 = v338;
        *((void *)&v415 + 1) = v325;
        *(void *)&uint64_t v416 = v330;
        *((void *)&v416 + 1) = v54;
        *(void *)&unint64_t v417 = v55;
        *((void *)&v417 + 1) = v320;
        *(void *)&uint64_t v418 = v57;
        *((void *)&v418 + 1) = v56;
        uint64_t v276 = v55;
        uint64_t v280 = v54;
        if (!v9 || !REBindPointBoundComponent())
        {
          double v155 = 0;
          goto LABEL_162;
        }
        uint64_t v152 = v57;
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          double v154 = swift_dynamicCastClassUnconditional();
          goto LABEL_90;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v204 = specialized static Entity.entityInfoType(_:)(Entity);
          if (v204)
          {
            double v155 = (*(uint64_t (**)(void))(v204 + 232))();
            uint64_t v205 = *(void *)(v155 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v205, 0);
            *(void *)(v155 + 16) = Entity;
            MEMORY[0x22A68E750](Entity, v155);
            swift_release();
            goto LABEL_161;
          }
          double v154 = makeEntity(for:)(Entity);
LABEL_90:
          double v155 = v154;
LABEL_161:
          uint64_t v57 = v152;
LABEL_162:
          specialized ActionEventData.action<A>()((uint64_t)v407);
          uint64_t v206 = v412 | ((unint64_t)v413 << 32);
          if ((v206 & 0xFF0000000000) != 0x20000000000)
          {
            uint64_t v271 = v56;
            uint64_t v273 = v411;
            uint64_t v207 = v410;
            uint64_t v208 = v407[0];
            uint64_t v261 = v407[0];
            uint64_t v255 = v410;
            uint64_t v209 = v408;
            uint64_t v258 = v408;
            uint64_t v210 = v409;
            uint64_t v264 = v409;
            swift_retain();
            uint64_t v211 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SpinAction>);
            uint64_t v369 = v415;
            uint64_t v370 = v416;
            uint64_t v371 = v417;
            uint64_t v372 = v418;
            uint64_t v212 = v10;
            uint64_t v213 = v11;
            char v347 = v208;
            char v348 = v209;
            char v349 = v210;
            uint64_t v350 = v207;
            uint64_t v351 = v273;
            uint64_t v352 = v206;
            uint64_t v353 = BYTE4(v206);
            uint64_t v268 = v57;
            char v354 = BYTE5(v206) & 1;
            LOBYTE(v207) = v211 & 1;
            char v355 = v211 & 1;
            v346[0] = v313;
            char v356 = v155;
            uint64_t v357 = v284;
            uint64_t v358 = v212;
            uint64_t v359 = v213;
            uint64_t v214 = v296;
            uint64_t v360 = Strong;
            char v361 = v302;
            uint64_t v362 = -1.0;
            uint64_t v363 = 0;
            uint64_t v364 = v290;
            uint64_t v365 = 0;
            uint64_t v366 = v296;
            uint64_t v367 = 0;
            uint64_t v368 = v414;
            uint64_t v373 = v308;
            swift_retain();
            swift_retain();
            a5(v346);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v374 = v313;
            uint64_t v375 = v261;
            uint64_t v376 = v258;
            char v377 = v264;
            char v378 = v255;
            uint64_t v379 = v273;
            uint64_t v380 = v206;
            unint64_t v381 = BYTE4(v206);
            uint64_t v382 = BYTE5(v206) & 1;
            char v383 = v207;
            uint64_t v384 = v155;
            uint64_t v385 = v284;
            uint64_t v386 = v212;
            unint64_t v387 = v213;
            unint64_t v388 = Strong;
            uint64_t v389 = v302;
            char v390 = -1.0;
            uint64_t v391 = 0;
            uint64_t v392 = v290;
LABEL_170:
            uint64_t v393 = 0;
            unint64_t v394 = v214;
            uint64_t v395 = 0;
            unint64_t v396 = v333;
            uint64_t v397 = 0;
            uint64_t v398 = v338;
            uint64_t v399 = v325;
            unint64_t v400 = v330;
            uint64_t v401 = v280;
            uint64_t v402 = v276;
            uint64_t v403 = v320;
            uint64_t v404 = v268;
            uint64_t v405 = v271;
            uint64_t v201 = v308;
            goto LABEL_192;
          }
          goto LABEL_189;
        }
        goto LABEL_221;
      }
      __break(1u);
      goto LABEL_213;
    case 2:
      uint64_t v18 = *(void *)a2;
      uint64_t v17 = *(void *)(a2 + 8);
      uint64_t v333 = *(void *)(a2 + 32);
      uint64_t v338 = *(void *)(a2 + 40);
      float v19 = *(float *)(a2 + 56);
      char v291 = *(void *)(a2 + 72);
      uint64_t v297 = *(void *)(a2 + 64);
      uint64_t v20 = *(void *)(a2 + 88);
      uint64_t v308 = *(void *)(a2 + 80);
      float v21 = *(float *)(a2 + 96);
      float v22 = *(float *)(a2 + 100);
      char v285 = *(unsigned char *)(a2 + 104);
      uint64_t v303 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v58 = specialized static Entity.entityInfoType(_:)(v18);
        if (v58)
        {
          uint64_t v59 = (*(uint64_t (**)(void))(v58 + 232))();
          uint64_t v60 = *(void *)(v59 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v60, 0);
          *(void *)(v59 + 16) = v18;
          MEMORY[0x22A68E750](v18, v59);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v18);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v61 = swift_allocObject();
        swift_weakInit();
        uint64_t v314 = v61;
        *(void *)(v61 + 16) = v17;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v62 = String.init(cString:)();
        unint64_t v64 = v63;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        char v65 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v66 = specialized __RawDictionaryStorage.find<A>(_:)(v62, v64);
          if (v67)
          {
            uint64_t v68 = (uint64_t *)(*(void *)(v65 + 56) + 56 * v66);
            uint64_t v69 = v68[2];
            uint64_t v325 = *v68;
            uint64_t v330 = v68[1];
            uint64_t v70 = v68[3];
            uint64_t v320 = v68[4];
            uint64_t v72 = v68[5];
            uint64_t v71 = v68[6];
            swift_bridgeObjectRelease();
LABEL_94:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&uint64_t v414 = v333;
            BYTE8(v414) = 0;
            *(void *)&uint64_t v415 = v338;
            *((void *)&v415 + 1) = v325;
            *(void *)&uint64_t v416 = v330;
            *((void *)&v416 + 1) = v69;
            *(void *)&unint64_t v417 = v70;
            *((void *)&v417 + 1) = v320;
            *(void *)&uint64_t v418 = v72;
            *((void *)&v418 + 1) = v71;
            uint64_t v276 = v70;
            uint64_t v280 = v69;
            if (!v20 || !REBindPointBoundComponent())
            {
              uint64_t v159 = 0;
              goto LABEL_168;
            }
            uint64_t v156 = v72;
            uint64_t v157 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v158 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_222:
                __break(1u);
                goto LABEL_223;
              }
              uint64_t v215 = specialized static Entity.entityInfoType(_:)(v157);
              if (v215)
              {
                uint64_t v159 = (*(uint64_t (**)(void))(v215 + 232))();
                uint64_t v216 = *(void *)(v159 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v216, 0);
                *(void *)(v159 + 16) = v157;
                MEMORY[0x22A68E750](v157, v159);
                swift_release();
                goto LABEL_167;
              }
              uint64_t v158 = makeEntity(for:)(v157);
            }
            uint64_t v159 = v158;
LABEL_167:
            uint64_t v72 = v156;
LABEL_168:
            specialized ActionEventData.action<A>()((uint64_t)v407);
            unint64_t v217 = v412 | ((unint64_t)v413 << 32);
            if ((v217 & 0xFF0000000000) != 0x20000000000)
            {
              uint64_t v271 = v71;
              uint64_t v274 = v411;
              char v218 = v410;
              uint64_t v219 = v407[0];
              uint64_t v262 = v407[0];
              uint64_t v256 = v410;
              uint64_t v220 = v408;
              uint64_t v259 = v408;
              uint64_t v221 = v409;
              uint64_t v265 = v409;
              swift_retain();
              uint64_t v222 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SpinAction>);
              uint64_t v369 = v415;
              uint64_t v370 = v416;
              uint64_t v371 = v417;
              uint64_t v372 = v418;
              uint64_t v223 = v21;
              uint64_t v224 = v22;
              uint64_t v225 = v19;
              char v347 = v219;
              char v348 = v220;
              char v349 = v221;
              uint64_t v350 = v218;
              uint64_t v351 = v274;
              uint64_t v352 = v217;
              uint64_t v353 = BYTE4(v217);
              uint64_t v268 = v72;
              char v354 = BYTE5(v217) & 1;
              LOBYTE(v218) = v222 & 1;
              char v355 = v222 & 1;
              v346[0] = v314;
              char v356 = v159;
              uint64_t v357 = v285;
              uint64_t v358 = v223;
              uint64_t v359 = v224;
              uint64_t v214 = v297;
              uint64_t v360 = Strong;
              char v361 = v291;
              uint64_t v362 = v225;
              uint64_t v363 = 0;
              uint64_t v364 = v303;
              uint64_t v365 = 0;
              uint64_t v366 = v297;
              uint64_t v367 = 0;
              uint64_t v368 = v414;
              uint64_t v373 = v308;
              swift_retain();
              swift_retain();
              a5(v346);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v374 = v314;
              uint64_t v375 = v262;
              uint64_t v376 = v259;
              char v377 = v265;
              char v378 = v256;
              uint64_t v379 = v274;
              uint64_t v380 = v217;
              unint64_t v381 = BYTE4(v217);
              uint64_t v382 = BYTE5(v217) & 1;
              char v383 = v218;
              uint64_t v384 = v159;
              uint64_t v385 = v285;
              uint64_t v386 = v223;
              unint64_t v387 = v224;
              unint64_t v388 = Strong;
              uint64_t v389 = v291;
              char v390 = v225;
              uint64_t v391 = 0;
              uint64_t v392 = v303;
              goto LABEL_170;
            }
LABEL_189:
            swift_release();
            swift_release();
            swift_release();
LABEL_190:
            swift_release();
            return 0;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v325 = 0;
        uint64_t v330 = 0;
        uint64_t v69 = 0;
        uint64_t v70 = 0;
        uint64_t v320 = 0;
        uint64_t v72 = 0;
        uint64_t v71 = 0;
        goto LABEL_94;
      }
LABEL_213:
      __break(1u);
      goto LABEL_214;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_190;
    case 4:
      uint64_t v24 = *(void *)a2;
      uint64_t v23 = *(void *)(a2 + 8);
      uint64_t v334 = *(void *)(a2 + 32);
      uint64_t v339 = *(void *)(a2 + 40);
      uint64_t v312 = *(void *)(a2 + 48);
      uint64_t v25 = *(void *)(a2 + 64);
      uint64_t v304 = *(void *)(a2 + 56);
      float v26 = *(float *)(a2 + 72);
      float v27 = *(float *)(a2 + 76);
      uint64_t v298 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v73 = specialized static Entity.entityInfoType(_:)(v24);
        if (v73)
        {
          uint64_t v74 = (*(uint64_t (**)(void))(v73 + 232))();
          uint64_t v75 = *(void *)(v74 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v75, 0);
          *(void *)(v74 + 16) = v24;
          MEMORY[0x22A68E750](v24, v74);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v24);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v76 = swift_allocObject();
        swift_weakInit();
        uint64_t v310 = v76;
        *(void *)(v76 + 16) = v23;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v77 = String.init(cString:)();
        unint64_t v79 = v78;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        char v80 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v81 = specialized __RawDictionaryStorage.find<A>(_:)(v77, v79);
          if (v82)
          {
            uint64_t v83 = (uint64_t *)(*(void *)(v80 + 56) + 56 * v81);
            uint64_t v84 = v83[2];
            uint64_t v326 = *v83;
            uint64_t v331 = v83[1];
            uint64_t v85 = v83[3];
            uint64_t v321 = v83[4];
            uint64_t v87 = v83[5];
            uint64_t v86 = v83[6];
            swift_bridgeObjectRelease();
LABEL_102:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&uint64_t v414 = v334;
            BYTE8(v414) = 0;
            *(void *)&uint64_t v415 = v339;
            *((void *)&v415 + 1) = v326;
            *(void *)&uint64_t v416 = v331;
            *((void *)&v416 + 1) = v84;
            *(void *)&unint64_t v417 = v85;
            *((void *)&v417 + 1) = v321;
            *(void *)&uint64_t v418 = v87;
            *((void *)&v418 + 1) = v86;
            uint64_t v286 = v85;
            uint64_t v292 = v84;
            if (!v25 || !REBindPointBoundComponent())
            {
              uint64_t v163 = 0;
              goto LABEL_175;
            }
            uint64_t v160 = v87;
            uint64_t v161 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v162 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_223:
                __break(1u);
                goto LABEL_224;
              }
              uint64_t v226 = specialized static Entity.entityInfoType(_:)(v161);
              if (v226)
              {
                uint64_t v163 = (*(uint64_t (**)(void))(v226 + 232))();
                uint64_t v227 = *(void *)(v163 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v227, 0);
                *(void *)(v163 + 16) = v161;
                MEMORY[0x22A68E750](v161, v163);
                swift_release();
                goto LABEL_174;
              }
              uint64_t v162 = makeEntity(for:)(v161);
            }
            uint64_t v163 = v162;
LABEL_174:
            uint64_t v87 = v160;
LABEL_175:
            specialized ActionEventData.action<A>()((uint64_t)v407);
            uint64_t v228 = v412 | ((unint64_t)v413 << 32);
            if ((v228 & 0xFF0000000000) != 0x20000000000)
            {
              uint64_t v277 = v86;
              uint64_t v282 = v411;
              uint64_t v229 = v410;
              uint64_t v230 = v407[0];
              uint64_t v269 = v407[0];
              uint64_t v260 = v410;
              uint64_t v231 = v408;
              uint64_t v266 = v408;
              uint64_t v232 = v409;
              uint64_t v272 = v409;
              swift_retain();
              uint64_t v233 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SpinAction>);
              uint64_t v369 = v415;
              uint64_t v370 = v416;
              uint64_t v371 = v417;
              uint64_t v372 = v418;
              uint64_t v234 = v26;
              uint64_t v235 = v27;
              char v347 = v230;
              char v348 = v231;
              char v349 = v232;
              uint64_t v350 = v229;
              uint64_t v351 = v282;
              uint64_t v352 = v228;
              uint64_t v353 = BYTE4(v228);
              char v354 = BYTE5(v228) & 1;
              LOBYTE(v229) = v233 & 1;
              char v355 = v233 & 1;
              v346[0] = v310;
              char v356 = v163;
              uint64_t v357 = v298;
              uint64_t v358 = v234;
              uint64_t v359 = v235;
              uint64_t v360 = Strong;
              char v361 = v304;
              uint64_t v362 = -1.0;
              uint64_t v363 = 0;
              uint64_t v364 = 0xBFF0000000000000;
              uint64_t v365 = 0;
              uint64_t v366 = 0xBFF0000000000000;
              uint64_t v367 = 0;
              uint64_t v368 = v414;
              uint64_t v373 = v312;
              swift_retain();
              swift_retain();
              a5(v346);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v374 = v310;
              uint64_t v375 = v269;
              uint64_t v376 = v266;
              char v377 = v272;
              char v378 = v260;
              uint64_t v379 = v282;
              uint64_t v380 = v228;
              unint64_t v381 = BYTE4(v228);
              uint64_t v382 = BYTE5(v228) & 1;
              char v383 = v229;
              uint64_t v384 = v163;
              uint64_t v385 = v298;
              uint64_t v386 = v234;
              unint64_t v387 = v235;
              unint64_t v388 = Strong;
              uint64_t v389 = v304;
              char v390 = -1.0;
              uint64_t v391 = 0;
              uint64_t v392 = 0xBFF0000000000000;
              uint64_t v393 = 0;
              unint64_t v394 = 0xBFF0000000000000;
              uint64_t v395 = 0;
              unint64_t v396 = v334;
              uint64_t v397 = 0;
              uint64_t v398 = v339;
              uint64_t v399 = v326;
              unint64_t v400 = v331;
              uint64_t v401 = v292;
              uint64_t v402 = v286;
              uint64_t v403 = v321;
              uint64_t v404 = v87;
              uint64_t v405 = v277;
              uint64_t v201 = v312;
              goto LABEL_192;
            }
            goto LABEL_189;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v326 = 0;
        uint64_t v331 = 0;
        uint64_t v84 = 0;
        uint64_t v85 = 0;
        uint64_t v321 = 0;
        uint64_t v87 = 0;
        uint64_t v86 = 0;
        goto LABEL_102;
      }
LABEL_214:
      __break(1u);
      goto LABEL_215;
    case 8:
      uint64_t v29 = *(void *)a2;
      uint64_t v28 = *(void *)(a2 + 8);
      uint64_t v335 = *(void *)(a2 + 32);
      uint64_t v340 = *(void *)(a2 + 40);
      uint64_t v30 = *(void *)(a2 + 56);
      uint64_t v319 = *(void *)(a2 + 48);
      float v31 = *(float *)(a2 + 64);
      float v32 = *(float *)(a2 + 68);
      uint64_t v299 = *(unsigned char *)(a2 + 72);
      uint64_t v305 = *(void *)(a2 + 80);
      uint64_t v309 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v88 = specialized static Entity.entityInfoType(_:)(v29);
        if (v88)
        {
          uint64_t v89 = (*(uint64_t (**)(void))(v88 + 232))();
          uint64_t v90 = *(void *)(v89 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v90, 0);
          *(void *)(v89 + 16) = v29;
          MEMORY[0x22A68E750](v29, v89);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v29);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v91 = swift_allocObject();
        swift_weakInit();
        char v315 = v91;
        *(void *)(v91 + 16) = v28;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v92 = String.init(cString:)();
        uint64_t v94 = v93;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v95 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          char v96 = specialized __RawDictionaryStorage.find<A>(_:)(v92, v94);
          if (v97)
          {
            uint64_t v98 = (uint64_t *)(*(void *)(v95 + 56) + 56 * v96);
            uint64_t v99 = v98[2];
            uint64_t v327 = *v98;
            uint64_t v332 = v98[1];
            uint64_t v100 = v98[3];
            uint64_t v101 = v98[4];
            uint64_t v103 = v98[5];
            uint64_t v102 = v98[6];
            swift_bridgeObjectRelease();
LABEL_110:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&uint64_t v414 = v335;
            BYTE8(v414) = 0;
            *(void *)&uint64_t v415 = v340;
            *((void *)&v415 + 1) = v327;
            *(void *)&uint64_t v416 = v332;
            *((void *)&v416 + 1) = v99;
            *(void *)&unint64_t v417 = v100;
            *((void *)&v417 + 1) = v101;
            *(void *)&uint64_t v418 = v103;
            *((void *)&v418 + 1) = v102;
            uint64_t v287 = v100;
            uint64_t v293 = v99;
            if (!v30 || !REBindPointBoundComponent())
            {
              double v167 = 0;
              goto LABEL_181;
            }
            uint64_t v164 = v101;
            char v165 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              double v166 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_224:
                __break(1u);
                goto LABEL_225;
              }
              uint64_t v236 = specialized static Entity.entityInfoType(_:)(v165);
              if (v236)
              {
                double v167 = (*(uint64_t (**)(void))(v236 + 232))();
                unint64_t v237 = *(void *)(v167 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v237, 0);
                *(void *)(v167 + 16) = v165;
                MEMORY[0x22A68E750](v165, v167);
                swift_release();
                goto LABEL_180;
              }
              double v166 = makeEntity(for:)(v165);
            }
            double v167 = v166;
LABEL_180:
            uint64_t v101 = v164;
LABEL_181:
            specialized ActionEventData.action<A>()((uint64_t)v407);
            char v238 = v412 | ((unint64_t)v413 << 32);
            if ((v238 & 0xFF0000000000) != 0x20000000000)
            {
              uint64_t v275 = v102;
              uint64_t v278 = v103;
              char v283 = v411;
              uint64_t v239 = v410;
              uint64_t v240 = v407[0];
              uint64_t v267 = v407[0];
              uint64_t v257 = v410;
              uint64_t v241 = v408;
              uint64_t v263 = v408;
              uint64_t v242 = v409;
              uint64_t v270 = v409;
              swift_retain();
              uint64_t v243 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<SpinAction>);
              uint64_t v369 = v415;
              uint64_t v370 = v416;
              uint64_t v371 = v417;
              uint64_t v372 = v418;
              uint64_t v244 = v31;
              uint64_t v245 = v32;
              char v347 = v240;
              char v348 = v241;
              char v349 = v242;
              uint64_t v350 = v239;
              uint64_t v351 = v283;
              uint64_t v352 = v238;
              uint64_t v353 = BYTE4(v238);
              char v354 = BYTE5(v238) & 1;
              LOBYTE(v239) = v243 & 1;
              char v355 = v243 & 1;
              v346[0] = v315;
              char v356 = v167;
              uint64_t v357 = v299;
              uint64_t v358 = v244;
              uint64_t v359 = v245;
              char v361 = 0;
              uint64_t v362 = 0.0;
              uint64_t v360 = Strong;
              uint64_t v363 = 1;
              uint64_t v364 = v305;
              uint64_t v365 = 0;
              uint64_t v366 = v309;
              uint64_t v367 = 0;
              uint64_t v368 = v414;
              uint64_t v373 = v319;
              swift_retain();
              swift_retain();
              a5(v346);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v374 = v315;
              uint64_t v375 = v267;
              uint64_t v376 = v263;
              char v377 = v270;
              char v378 = v257;
              uint64_t v379 = v283;
              uint64_t v380 = v238;
              unint64_t v381 = BYTE4(v238);
              uint64_t v382 = BYTE5(v238) & 1;
              char v383 = v239;
              uint64_t v384 = v167;
              uint64_t v385 = v299;
              uint64_t v386 = v244;
              unint64_t v387 = v245;
              char v390 = 0.0;
              unint64_t v388 = Strong;
              uint64_t v389 = 0;
              uint64_t v391 = 1;
              uint64_t v392 = v305;
              uint64_t v393 = 0;
              unint64_t v394 = v309;
              uint64_t v395 = 0;
              unint64_t v396 = v335;
              uint64_t v397 = 0;
              uint64_t v398 = v340;
              uint64_t v399 = v327;
              unint64_t v400 = v332;
              uint64_t v401 = v293;
              uint64_t v402 = v287;
              uint64_t v403 = v101;
              uint64_t v404 = v278;
              uint64_t v405 = v275;
              uint64_t v201 = v319;
              goto LABEL_192;
            }
            goto LABEL_189;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v327 = 0;
        uint64_t v332 = 0;
        uint64_t v99 = 0;
        uint64_t v100 = 0;
        uint64_t v101 = 0;
        uint64_t v103 = 0;
        uint64_t v102 = 0;
        goto LABEL_110;
      }
LABEL_215:
      __break(1u);
      goto LABEL_216;
    case 16:
      uint64_t v34 = *(void *)a2;
      uint64_t v33 = *(void *)(a2 + 8);
      char v341 = *(void *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 56);
      uint64_t v324 = *(void *)(a2 + 48);
      uint64_t v329 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v104 = specialized static Entity.entityInfoType(_:)(v34);
        if (v104)
        {
          uint64_t v105 = (*(uint64_t (**)(void))(v104 + 232))();
          uint64_t v106 = *(void *)(v105 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v106, 0);
          *(void *)(v105 + 16) = v34;
          MEMORY[0x22A68E750](v34, v105);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
LABEL_57:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v107 = swift_allocObject();
        swift_weakInit();
        *(void *)(v107 + 16) = v33;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v108 = String.init(cString:)();
        uint64_t v110 = v109;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v111 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v112 = specialized __RawDictionaryStorage.find<A>(_:)(v108, v110);
          if (v113)
          {
            uint64_t v114 = (uint64_t *)(*(void *)(v111 + 56) + 56 * v112);
            uint64_t v115 = *v114;
            uint64_t v116 = v114[1];
            uint64_t v117 = v114[3];
            uint64_t v336 = v114[2];
            uint64_t v118 = v114[4];
            uint64_t v119 = v114[5];
            uint64_t v120 = v114[6];
            swift_bridgeObjectRelease();
            goto LABEL_118;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v115 = 0;
        uint64_t v116 = 0;
        uint64_t v336 = 0;
        uint64_t v117 = 0;
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        uint64_t v120 = 0;
LABEL_118:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v414 = 0;
        BYTE8(v414) = 0;
        *(void *)&uint64_t v415 = v341;
        *((void *)&v415 + 1) = v115;
        *(void *)&uint64_t v416 = v116;
        *((void *)&v416 + 1) = v336;
        *(void *)&unint64_t v417 = v117;
        *((void *)&v417 + 1) = v118;
        *(void *)&uint64_t v418 = v119;
        *((void *)&v418 + 1) = v120;
        uint64_t v316 = v118;
        uint64_t v322 = v117;
        if (!v35 || !REBindPointBoundComponent()) {
          goto LABEL_130;
        }
        uint64_t v38 = v119;
        double v168 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_128:
          type metadata accessor for Entity();
          uint64_t v169 = swift_dynamicCastClassUnconditional();
          goto LABEL_129;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
LABEL_185:
          uint64_t v246 = specialized static Entity.entityInfoType(_:)(v168);
          if (v246)
          {
            uint64_t v170 = (*(uint64_t (**)(void))(v246 + 232))();
            uint64_t v247 = *(void *)(v170 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v247, 0);
            *(void *)(v170 + 16) = v168;
            MEMORY[0x22A68E750](v168, v170);
            swift_release();
            goto LABEL_187;
          }
          uint64_t v169 = makeEntity(for:)(v168);
LABEL_129:
          uint64_t v170 = v169;
LABEL_187:
          uint64_t v119 = v38;
LABEL_188:
          specialized ActionEventData.action<A>()((uint64_t)v407);
          uint64_t v248 = v412 | ((unint64_t)v413 << 32);
          if ((v248 & 0xFF0000000000) != 0x20000000000)
          {
            uint64_t v369 = v415;
            uint64_t v370 = v416;
            uint64_t v371 = v417;
            uint64_t v372 = v418;
            uint64_t v279 = v410;
            uint64_t v307 = v115;
            uint64_t v311 = v119;
            uint64_t v249 = v407[0];
            uint64_t v250 = v107;
            uint64_t v251 = v408;
            char v301 = v116;
            uint64_t v252 = v409;
            uint64_t v289 = v411;
            char v347 = v407[0];
            char v348 = v408;
            char v349 = v409;
            uint64_t v350 = v410;
            uint64_t v351 = v411;
            uint64_t v352 = v412;
            uint64_t v353 = BYTE4(v248);
            char v354 = BYTE5(v248) & 1;
            char v355 = 1;
            v346[0] = v250;
            char v356 = v170;
            uint64_t v357 = 0;
            uint64_t v358 = 0.0;
            uint64_t v359 = 0.0;
            char v361 = 0;
            uint64_t v362 = 0.0;
            uint64_t v360 = Strong;
            uint64_t v363 = 1;
            uint64_t v364 = v329;
            uint64_t v365 = 0;
            uint64_t v366 = 0;
            uint64_t v367 = 1;
            uint64_t v368 = v414;
            uint64_t v373 = v324;
            swift_retain();
            swift_retain();
            a5(v346);
            swift_release();
            swift_release();
            swift_release();
            uint64_t v374 = v250;
            uint64_t v375 = v249;
            uint64_t v376 = v251;
            char v377 = v252;
            char v378 = v279;
            uint64_t v379 = v289;
            uint64_t v380 = v248;
            unint64_t v381 = BYTE4(v248);
            uint64_t v382 = BYTE5(v248) & 1;
            char v383 = 1;
            uint64_t v384 = v170;
            uint64_t v385 = 0;
            unint64_t v387 = 0.0;
            uint64_t v386 = 0.0;
            char v390 = 0.0;
            unint64_t v388 = Strong;
            uint64_t v389 = 0;
            uint64_t v391 = 1;
            uint64_t v392 = v329;
            uint64_t v393 = 0;
            unint64_t v394 = 0;
            uint64_t v395 = 1;
            unint64_t v396 = 0;
            uint64_t v397 = 0;
            uint64_t v398 = v341;
            uint64_t v399 = v307;
            unint64_t v400 = v301;
            uint64_t v401 = v336;
            uint64_t v402 = v322;
            uint64_t v403 = v316;
            uint64_t v404 = v311;
            uint64_t v405 = v120;
            uint64_t v201 = v324;
            goto LABEL_192;
          }
          goto LABEL_189;
        }
        __break(1u);
        goto LABEL_123;
      }
LABEL_216:
      __break(1u);
      goto LABEL_217;
    case 32:
      uint64_t v37 = *(void *)a2;
      uint64_t v36 = *(void *)(a2 + 8);
      char v341 = *(void *)(a2 + 40);
      uint64_t v38 = *(void *)(a2 + 56);
      uint64_t v324 = *(void *)(a2 + 48);
      uint64_t v329 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
LABEL_65:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v107 = swift_allocObject();
        swift_weakInit();
        *(void *)(v107 + 16) = v36;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v124 = String.init(cString:)();
        uint64_t v126 = v125;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v127 = static AnimationResource.codableActionTypeMap;
        if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
          goto LABEL_124;
        }
        swift_bridgeObjectRetain();
        uint64_t v128 = specialized __RawDictionaryStorage.find<A>(_:)(v124, v126);
        if (v129)
        {
          unint64_t v130 = (uint64_t *)(*(void *)(v127 + 56) + 56 * v128);
          uint64_t v115 = *v130;
          uint64_t v116 = v130[1];
          char v131 = v130[3];
          uint64_t v336 = v130[2];
          uint64_t v132 = v130[4];
          uint64_t v119 = v130[5];
          uint64_t v120 = v130[6];
          swift_bridgeObjectRelease();
LABEL_125:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v414 = 0;
          BYTE8(v414) = 0;
          *(void *)&uint64_t v415 = v341;
          *((void *)&v415 + 1) = v115;
          *(void *)&uint64_t v416 = v116;
          *((void *)&v416 + 1) = v336;
          *(void *)&unint64_t v417 = v131;
          *((void *)&v417 + 1) = v132;
          *(void *)&uint64_t v418 = v119;
          *((void *)&v418 + 1) = v120;
          uint64_t v316 = v132;
          uint64_t v322 = v131;
          if (v38 && REBindPointBoundComponent())
          {
            uint64_t v38 = v119;
            double v168 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject()) {
              goto LABEL_128;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_225:
              __break(1u);
              goto LABEL_226;
            }
            goto LABEL_185;
          }
LABEL_130:
          uint64_t v170 = 0;
          goto LABEL_188;
        }
LABEL_123:
        swift_bridgeObjectRelease();
LABEL_124:
        uint64_t v115 = 0;
        uint64_t v116 = 0;
        uint64_t v336 = 0;
        char v131 = 0;
        uint64_t v132 = 0;
        uint64_t v119 = 0;
        uint64_t v120 = 0;
        goto LABEL_125;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v121 = specialized static Entity.entityInfoType(_:)(v37);
        if (v121)
        {
          uint64_t v122 = (*(uint64_t (**)(void))(v121 + 232))();
          uint64_t v123 = *(void *)(v122 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v123, 0);
          *(void *)(v122 + 16) = v37;
          MEMORY[0x22A68E750](v37, v122);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v37);
        }
        goto LABEL_65;
      }
LABEL_217:
      __break(1u);
      goto LABEL_218;
    case 64:
      uint64_t v40 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v41 = *(void *)(a2 + 24);
      uint64_t v42 = *(void *)(a2 + 40);
      uint64_t v328 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
LABEL_73:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v136 = swift_allocObject();
        swift_weakInit();
        *(void *)(v136 + 16) = v39;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v137 = v41;
        if (!v42 || !REBindPointBoundComponent())
        {
          uint64_t v140 = 0;
          goto LABEL_79;
        }
        uint64_t v138 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v139 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v140 = v139;
          goto LABEL_79;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v202 = specialized static Entity.entityInfoType(_:)(v138);
          if (!v202)
          {
            uint64_t v139 = makeEntity(for:)(v138);
            goto LABEL_77;
          }
          uint64_t v140 = (*(uint64_t (**)(void))(v202 + 232))();
          uint64_t v203 = *(void *)(v140 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v203, 0);
          *(void *)(v140 + 16) = v138;
          MEMORY[0x22A68E750](v138, v140);
          swift_release();
LABEL_79:
          uint64_t v141 = String.init(cString:)();
          uint64_t v143 = v142;
          if (one-time initialization token for codableActionTypeMap != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v144 = static AnimationResource.codableActionTypeMap;
          if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v145 = specialized __RawDictionaryStorage.find<A>(_:)(v141, v143);
            if (v146)
            {
              uint64_t v147 = (uint64_t *)(*(void *)(v144 + 56) + 56 * v145);
              uint64_t v148 = *v147;
              uint64_t v149 = v147[1];
              uint64_t v151 = v147[2];
              uint64_t v150 = v147[3];
              uint64_t v342 = v147[5];
              uint64_t v343 = v147[4];
              uint64_t v337 = v147[6];
              swift_bridgeObjectRelease();
LABEL_133:
              swift_endAccess();
              swift_bridgeObjectRelease();
              *(void *)&uint64_t v414 = 0;
              BYTE8(v414) = 0;
              *(void *)&uint64_t v415 = v137;
              *((void *)&v415 + 1) = v148;
              *(void *)&uint64_t v416 = v149;
              *((void *)&v416 + 1) = v151;
              *(void *)&unint64_t v417 = v150;
              *((void *)&v417 + 1) = v343;
              *(void *)&uint64_t v418 = v342;
              *((void *)&v418 + 1) = v337;
              specialized ActionEventData.action<A>()((uint64_t)v407);
              uint64_t v171 = v412 | ((unint64_t)v413 << 32);
              if ((v171 & 0xFF0000000000) == 0x20000000000) {
                goto LABEL_189;
              }
              uint64_t v369 = v415;
              uint64_t v370 = v416;
              uint64_t v371 = v417;
              uint64_t v372 = v418;
              uint64_t v172 = v136;
              uint64_t v281 = v136;
              uint64_t v294 = v411;
              uint64_t v300 = v410;
              uint64_t v317 = v151;
              uint64_t v323 = v149;
              uint64_t v173 = v407[0];
              uint64_t v174 = v408;
              uint64_t v175 = v409;
              char v347 = v407[0];
              char v348 = v408;
              char v349 = v409;
              uint64_t v350 = v410;
              uint64_t v351 = v411;
              uint64_t v352 = v412;
              uint64_t v353 = BYTE4(v171);
              char v354 = BYTE5(v171) & 1;
              char v355 = 1;
              v346[0] = v172;
              char v356 = v140;
              uint64_t v357 = 0;
              uint64_t v358 = 0.0;
              uint64_t v359 = 0.0;
              char v361 = 0;
              uint64_t v362 = 0.0;
              uint64_t v360 = Strong;
              uint64_t v363 = 1;
              uint64_t v364 = 0;
              uint64_t v365 = 1;
              uint64_t v366 = 0;
              uint64_t v367 = 1;
              uint64_t v368 = v414;
              uint64_t v373 = v328;
              swift_retain();
              swift_retain();
              a5(v346);
              swift_release();
              swift_release();
              swift_release();
              uint64_t v374 = v281;
              uint64_t v375 = v173;
              uint64_t v376 = v174;
              char v377 = v175;
              char v378 = v300;
              uint64_t v379 = v294;
              uint64_t v380 = v171;
              unint64_t v381 = BYTE4(v171);
              uint64_t v382 = BYTE5(v171) & 1;
              char v383 = 1;
              uint64_t v384 = v140;
              uint64_t v385 = 0;
              unint64_t v387 = 0.0;
              uint64_t v386 = 0.0;
              char v390 = 0.0;
              unint64_t v388 = Strong;
              uint64_t v389 = 0;
              uint64_t v391 = 1;
              uint64_t v392 = 0;
              uint64_t v393 = 1;
              unint64_t v394 = 0;
              uint64_t v395 = 1;
              unint64_t v396 = 0;
              uint64_t v397 = 0;
              uint64_t v398 = v137;
              uint64_t v399 = v148;
              unint64_t v400 = v323;
              uint64_t v401 = v317;
              uint64_t v176 = v150;
              goto LABEL_154;
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v148 = 0;
          uint64_t v149 = 0;
          uint64_t v151 = 0;
          uint64_t v150 = 0;
          uint64_t v342 = 0;
          uint64_t v343 = 0;
          uint64_t v337 = 0;
          goto LABEL_133;
        }
LABEL_220:
        __break(1u);
LABEL_221:
        __break(1u);
        goto LABEL_222;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v133 = specialized static Entity.entityInfoType(_:)(v40);
        if (v133)
        {
          uint64_t v134 = (*(uint64_t (**)(void))(v133 + 232))();
          uint64_t v135 = *(void *)(v134 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v135, 0);
          *(void *)(v134 + 16) = v40;
          MEMORY[0x22A68E750](v40, v134);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v40);
        }
        goto LABEL_73;
      }
LABEL_218:
      __break(1u);
      goto LABEL_219;
    default:
      if (a4 != 128) {
        goto LABEL_190;
      }
      uint64_t v14 = *(void *)a2;
      uint64_t v13 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 40);
      uint64_t v328 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        char v177 = specialized static Entity.entityInfoType(_:)(v14);
        if (v177)
        {
          double v178 = (*(uint64_t (**)(void))(v177 + 232))();
          double v179 = *(void *)(v178 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v179, 0);
          *(void *)(v178 + 16) = v14;
          MEMORY[0x22A68E750](v14, v178);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v180 = swift_allocObject();
      swift_weakInit();
      *(void *)(v180 + 16) = v13;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v181 = v15;
      if (v16 && REBindPointBoundComponent())
      {
        uint64_t v182 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v183 = swift_dynamicCastClassUnconditional();
LABEL_143:
          uint64_t v184 = v183;
          goto LABEL_145;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          JUMPOUT(0x227FB8364);
        }
        uint64_t v253 = specialized static Entity.entityInfoType(_:)(v182);
        if (!v253)
        {
          uint64_t v183 = makeEntity(for:)(v182);
          goto LABEL_143;
        }
        uint64_t v184 = (*(uint64_t (**)(void))(v253 + 232))();
        uint64_t v254 = *(void *)(v184 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v254, 0);
        *(void *)(v184 + 16) = v182;
        MEMORY[0x22A68E750](v182, v184);
        swift_release();
      }
      else
      {
        uint64_t v184 = 0;
      }
LABEL_145:
      uint64_t v185 = String.init(cString:)();
      uint64_t v187 = v186;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v188 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_151;
      }
      swift_bridgeObjectRetain();
      uint64_t v189 = specialized __RawDictionaryStorage.find<A>(_:)(v185, v187);
      if (v190)
      {
        uint64_t v191 = (uint64_t *)(*(void *)(v188 + 56) + 56 * v189);
        char v192 = *v191;
        double v193 = v191[1];
        uint64_t v195 = v191[2];
        double v194 = v191[3];
        uint64_t v342 = v191[5];
        uint64_t v343 = v191[4];
        uint64_t v337 = v191[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_151:
        char v192 = 0;
        double v193 = 0;
        uint64_t v195 = 0;
        double v194 = 0;
        uint64_t v342 = 0;
        uint64_t v343 = 0;
        uint64_t v337 = 0;
      }
      uint64_t v196 = v181;
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v414 = 0;
      BYTE8(v414) = 0;
      *(void *)&uint64_t v415 = v181;
      *((void *)&v415 + 1) = v192;
      *(void *)&uint64_t v416 = v193;
      *((void *)&v416 + 1) = v195;
      *(void *)&unint64_t v417 = v194;
      *((void *)&v417 + 1) = v343;
      *(void *)&uint64_t v418 = v342;
      *((void *)&v418 + 1) = v337;
      specialized ActionEventData.action<A>()((uint64_t)v407);
      uint64_t v197 = v412 | ((unint64_t)v413 << 32);
      if ((v197 & 0xFF0000000000) == 0x20000000000) {
        goto LABEL_189;
      }
      uint64_t v369 = v415;
      uint64_t v370 = v416;
      uint64_t v371 = v417;
      uint64_t v372 = v418;
      uint64_t v318 = v195;
      uint64_t v288 = v410;
      char v295 = v411;
      uint64_t v198 = v407[0];
      uint64_t v306 = v193;
      uint64_t v199 = v408;
      uint64_t v200 = v409;
      char v347 = v407[0];
      char v348 = v408;
      char v349 = v409;
      uint64_t v350 = v410;
      uint64_t v351 = v411;
      uint64_t v352 = v412;
      uint64_t v353 = BYTE4(v197);
      char v354 = BYTE5(v197) & 1;
      char v355 = 1;
      v346[0] = v180;
      char v356 = v184;
      uint64_t v357 = 0;
      uint64_t v358 = 0.0;
      uint64_t v359 = 0.0;
      char v361 = 0;
      uint64_t v362 = 0.0;
      uint64_t v360 = Strong;
      uint64_t v363 = 1;
      uint64_t v364 = 0;
      uint64_t v365 = 1;
      uint64_t v366 = 0;
      uint64_t v367 = 1;
      uint64_t v368 = v414;
      uint64_t v373 = v328;
      swift_retain();
      swift_retain();
      swift_retain();
      a5(v346);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v374 = v180;
      uint64_t v375 = v198;
      uint64_t v376 = v199;
      char v377 = v200;
      char v378 = v288;
      uint64_t v379 = v295;
      uint64_t v380 = v197;
      unint64_t v381 = BYTE4(v197);
      uint64_t v382 = BYTE5(v197) & 1;
      char v383 = 1;
      uint64_t v384 = v184;
      uint64_t v385 = 0;
      unint64_t v387 = 0.0;
      uint64_t v386 = 0.0;
      char v390 = 0.0;
      unint64_t v388 = Strong;
      uint64_t v389 = 0;
      uint64_t v391 = 1;
      uint64_t v392 = 0;
      uint64_t v393 = 1;
      unint64_t v394 = 0;
      uint64_t v395 = 1;
      unint64_t v396 = 0;
      uint64_t v397 = 0;
      uint64_t v398 = v196;
      uint64_t v399 = v192;
      unint64_t v400 = v306;
      uint64_t v401 = v318;
      uint64_t v176 = v194;
LABEL_154:
      uint64_t v402 = v176;
      uint64_t v403 = v343;
      uint64_t v404 = v342;
      uint64_t v405 = v337;
      uint64_t v201 = v328;
LABEL_192:
      uint64_t v406 = v201;
      outlined release of ActionEvent<SpinAction>((uint64_t)&v374);
      return 0;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  float v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  float v21;
  uint64_t v22;
  float v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  float v34;
  float v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t Entity;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unsigned __int16 v165;
  char v166;
  double v167;
  double v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  char v179;
  double v180;
  double v181;
  double v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unsigned __int16 v192;
  char v193;
  double v194;
  double v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unsigned __int16 v205;
  char v206;
  double v207;
  double v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  char v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  char v262;
  char v263;
  char v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  unsigned __int16 v270;
  uint64_t v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  char v277;
  char v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  int v283;
  unint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char v290;
  int v291;
  int v292;
  char v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char v297;
  char v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  unint64_t v324;
  uint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t Strong;
  void v357[2];
  uint64_t v358;
  uint64_t v359;
  char v360;
  int v361;
  uint64_t v362;
  uint64_t v363;
  __int16 v364;
  char v365;
  uint64_t v366;
  char v367;
  double v368;
  double v369;
  uint64_t v370;
  uint64_t v371;
  double v372;
  char v373;
  unint64_t v374;
  char v375;
  unint64_t v376;
  char v377;
  long long v378;
  long long v379;
  long long v380;
  long long v381;
  long long v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char v387;
  int v388;
  uint64_t v389;
  uint64_t v390;
  __int16 v391;
  char v392;
  uint64_t v393;
  char v394;
  double v395;
  double v396;
  uint64_t v397;
  uint64_t v398;
  double v399;
  char v400;
  unint64_t v401;
  char v402;
  unint64_t v403;
  char v404;
  uint64_t v405;
  char v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  unint64_t v418;
  uint64_t v419;
  uint64_t v420;
  unsigned __int16 v421;
  long long v422;
  long long v423;
  long long v424;
  long long v425;
  long long v426;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      char v348 = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 40);
      float v10 = *(void *)(a2 + 64);
      float v11 = *(float *)(a2 + 72);
      uint64_t v12 = *(float *)(a2 + 76);
      uint64_t v305 = *(unsigned char *)(a2 + 80);
      uint64_t v313 = *(void *)(a2 + 48);
      uint64_t v317 = *(void *)(a2 + 88);
      uint64_t v323 = *(void *)(a2 + 96);
      uint64_t v328 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v44 = specialized static Entity.entityInfoType(_:)(v7);
        if (v44)
        {
          uint64_t v45 = (*(uint64_t (**)(void))(v44 + 232))();
          uint64_t v46 = *(void *)(v45 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v46, 0);
          *(void *)(v45 + 16) = v7;
          MEMORY[0x22A68E750](v7, v45);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v7);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v47 = swift_allocObject();
        swift_weakInit();
        *(void *)(v47 + 16) = v8;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v48 = String.init(cString:)();
        char v50 = v49;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v51 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v52 = specialized __RawDictionaryStorage.find<A>(_:)(v48, v50);
          if (v53)
          {
            uint64_t v54 = (uint64_t *)(*(void *)(v51 + 56) + 56 * v52);
            uint64_t v55 = v54[2];
            uint64_t v335 = v54[1];
            uint64_t v342 = *v54;
            uint64_t v56 = v54[3];
            uint64_t v57 = v54[4];
            uint64_t v59 = v54[5];
            uint64_t v58 = v54[6];
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v335 = 0;
        uint64_t v342 = 0;
        uint64_t v55 = 0;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v59 = 0;
        uint64_t v58 = 0;
LABEL_86:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v422 = v348;
        BYTE8(v422) = 0;
        *(void *)&uint64_t v423 = v9;
        *((void *)&v423 + 1) = v342;
        *(void *)&unint64_t v424 = v335;
        *((void *)&v424 + 1) = v55;
        *(void *)&uint64_t v425 = v56;
        *((void *)&v425 + 1) = v57;
        uint64_t v279 = v57;
        uint64_t v286 = v56;
        *(void *)&uint64_t v426 = v59;
        *((void *)&v426 + 1) = v58;
        double v155 = v59;
        uint64_t v294 = v55;
        char v301 = v9;
        if (!v10 || !REBindPointBoundComponent())
        {
          uint64_t v158 = 0;
          goto LABEL_92;
        }
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v157 = swift_dynamicCastClassUnconditional();
LABEL_90:
          uint64_t v158 = v157;
          goto LABEL_92;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v248 = specialized static Entity.entityInfoType(_:)(Entity);
          if (!v248)
          {
            uint64_t v157 = makeEntity(for:)(Entity);
            goto LABEL_90;
          }
          uint64_t v158 = (*(uint64_t (**)(void))(v248 + 232))();
          uint64_t v249 = *(void *)(v158 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v249, 0);
          *(void *)(v158 + 16) = Entity;
          MEMORY[0x22A68E750](Entity, v158);
          swift_release();
LABEL_92:
          specialized ActionEventData.action<A>()((uint64_t)&v416);
          uint64_t v159 = v418;
          if ((_BYTE)v418 != 0xFF)
          {
            uint64_t v160 = v419;
            uint64_t v271 = v58;
            uint64_t v161 = v417;
            uint64_t v162 = v416;
            uint64_t v268 = v416;
            uint64_t v163 = HIDWORD(v418);
            uint64_t v261 = HIDWORD(v418);
            uint64_t v164 = v420;
            char v165 = v421;
            swift_retain();
            outlined copy of OrbitEntityAction?(v162, v161, v159);
            double v166 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<OrbitEntityAction>);
            uint64_t v379 = v423;
            uint64_t v380 = v424;
            unint64_t v381 = v425;
            uint64_t v382 = v426;
            double v167 = v11;
            double v168 = v12;
            uint64_t v359 = v161;
            uint64_t v360 = v159 & 1;
            char v361 = v163;
            uint64_t v362 = v160;
            uint64_t v363 = v164;
            uint64_t v364 = v165 & 0x101;
            uint64_t v264 = v166 & 1;
            uint64_t v365 = v166 & 1;
            uint64_t v358 = v268;
            v357[0] = v47;
            uint64_t v366 = v158;
            uint64_t v367 = v305;
            uint64_t v368 = v167;
            uint64_t v369 = v168;
            uint64_t v370 = Strong;
            uint64_t v371 = v328;
            uint64_t v372 = -1.0;
            uint64_t v373 = 0;
            uint64_t v374 = v317;
            uint64_t v375 = 0;
            uint64_t v376 = v323;
            char v377 = 0;
            char v378 = v422;
            char v383 = v313;
            swift_retain();
            swift_retain();
            a5(v357);
            outlined consume of OrbitEntityAction?(v268, v161, v159);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v384 = v47;
            uint64_t v385 = v268;
            uint64_t v386 = v161;
            unint64_t v387 = v159 & 1;
            unint64_t v388 = v261;
            char v390 = v164;
            uint64_t v389 = v160;
            uint64_t v391 = v165 & 0x101;
            uint64_t v392 = v264;
            uint64_t v393 = v158;
            unint64_t v394 = v305;
            uint64_t v395 = v167;
            unint64_t v396 = v168;
            uint64_t v397 = Strong;
            uint64_t v398 = v328;
            uint64_t v399 = -1.0;
            unint64_t v400 = 0;
            uint64_t v401 = v317;
            uint64_t v402 = 0;
            uint64_t v403 = v323;
            uint64_t v404 = 0;
            uint64_t v405 = v348;
            uint64_t v406 = 0;
            uint64_t v407 = v301;
            uint64_t v408 = v342;
            uint64_t v409 = v335;
            uint64_t v410 = v294;
            uint64_t v411 = v286;
            uint64_t v412 = v279;
            uint64_t v413 = v155;
            uint64_t v169 = v271;
LABEL_126:
            uint64_t v414 = v169;
            uint64_t v183 = v313;
            goto LABEL_149;
          }
          goto LABEL_167;
        }
        goto LABEL_216;
      }
      __break(1u);
      goto LABEL_208;
    case 2:
      uint64_t v18 = *(void *)a2;
      float v19 = *(void *)(a2 + 8);
      char v349 = *(void *)(a2 + 32);
      uint64_t v20 = *(void *)(a2 + 40);
      float v21 = *(float *)(a2 + 56);
      uint64_t v318 = *(void *)(a2 + 64);
      uint64_t v324 = *(void *)(a2 + 48);
      float v22 = *(void *)(a2 + 88);
      uint64_t v309 = *(void *)(a2 + 80);
      uint64_t v314 = *(void *)(a2 + 72);
      uint64_t v23 = *(float *)(a2 + 96);
      uint64_t v24 = *(float *)(a2 + 100);
      uint64_t v293 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_208:
        __break(1u);
        goto LABEL_209;
      }
      uint64_t v60 = specialized static Entity.entityInfoType(_:)(v18);
      if (v60)
      {
        uint64_t v61 = (*(uint64_t (**)(void))(v60 + 232))();
        uint64_t v62 = *(void *)(v61 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v62, 0);
        *(void *)(v61 + 16) = v18;
        MEMORY[0x22A68E750](v18, v61);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v18);
      }
LABEL_33:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v63 = swift_allocObject();
      swift_weakInit();
      uint64_t v300 = v63;
      *(void *)(v63 + 16) = v19;
      swift_beginAccess();
      swift_weakAssign();
      unint64_t v64 = String.init(cString:)();
      uint64_t v66 = v65;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v67 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_95;
      }
      swift_bridgeObjectRetain();
      uint64_t v68 = specialized __RawDictionaryStorage.find<A>(_:)(v64, v66);
      if ((v69 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_95:
        uint64_t v336 = 0;
        uint64_t v343 = 0;
        uint64_t v71 = 0;
        uint64_t v72 = 0;
        uint64_t v330 = 0;
        uint64_t v74 = 0;
        uint64_t v73 = 0;
        goto LABEL_96;
      }
      uint64_t v70 = (uint64_t *)(*(void *)(v67 + 56) + 56 * v68);
      uint64_t v71 = v70[2];
      uint64_t v336 = v70[1];
      uint64_t v343 = *v70;
      uint64_t v72 = v70[3];
      uint64_t v330 = v70[4];
      uint64_t v74 = v70[5];
      uint64_t v73 = v70[6];
      swift_bridgeObjectRelease();
LABEL_96:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v422 = v349;
      BYTE8(v422) = 0;
      *(void *)&uint64_t v423 = v20;
      *((void *)&v423 + 1) = v343;
      *(void *)&unint64_t v424 = v336;
      *((void *)&v424 + 1) = v71;
      *(void *)&uint64_t v425 = v72;
      *((void *)&v425 + 1) = v330;
      *(void *)&uint64_t v426 = v74;
      *((void *)&v426 + 1) = v73;
      uint64_t v280 = v71;
      uint64_t v287 = v20;
      uint64_t v274 = v72;
      if (v22 && REBindPointBoundComponent())
      {
        uint64_t v170 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v171 = swift_dynamicCastClassUnconditional();
LABEL_100:
          uint64_t v172 = v171;
          goto LABEL_102;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        uint64_t v250 = specialized static Entity.entityInfoType(_:)(v170);
        if (!v250)
        {
          uint64_t v171 = makeEntity(for:)(v170);
          goto LABEL_100;
        }
        uint64_t v172 = (*(uint64_t (**)(void))(v250 + 232))();
        uint64_t v251 = *(void *)(v172 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v251, 0);
        *(void *)(v172 + 16) = v170;
        MEMORY[0x22A68E750](v170, v172);
        swift_release();
      }
      else
      {
        uint64_t v172 = 0;
      }
LABEL_102:
      specialized ActionEventData.action<A>()((uint64_t)&v416);
      uint64_t v173 = v418;
      if ((_BYTE)v418 == 0xFF) {
        goto LABEL_167;
      }
      uint64_t v174 = v419;
      uint64_t v266 = v74;
      uint64_t v175 = v417;
      uint64_t v176 = v416;
      uint64_t v265 = v416;
      char v177 = HIDWORD(v418);
      uint64_t v260 = HIDWORD(v418);
      double v178 = v420;
      uint64_t v270 = v421;
      swift_retain();
      outlined copy of OrbitEntityAction?(v176, v175, v173);
      double v179 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<OrbitEntityAction>);
      uint64_t v379 = v423;
      uint64_t v380 = v424;
      unint64_t v381 = v425;
      uint64_t v382 = v426;
      uint64_t v180 = v23;
      uint64_t v181 = v24;
      uint64_t v182 = v21;
      uint64_t v360 = v173 & 1;
      char v361 = v177;
      uint64_t v362 = v174;
      uint64_t v363 = v178;
      uint64_t v364 = v270 & 0x101;
      uint64_t v262 = v179 & 1;
      uint64_t v365 = v179 & 1;
      uint64_t v358 = v265;
      uint64_t v359 = v175;
      v357[0] = v300;
      uint64_t v366 = v172;
      uint64_t v367 = v293;
      uint64_t v368 = v180;
      uint64_t v369 = v181;
      uint64_t v370 = Strong;
      uint64_t v371 = v314;
      uint64_t v372 = v182;
      uint64_t v373 = 0;
      uint64_t v374 = v324;
      uint64_t v375 = 0;
      uint64_t v376 = v318;
      char v377 = 0;
      char v378 = v422;
      char v383 = v309;
      swift_retain();
      swift_retain();
      a5(v357);
      outlined consume of OrbitEntityAction?(v265, v175, v173);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v384 = v300;
      uint64_t v385 = v265;
      uint64_t v386 = v175;
      unint64_t v387 = v173 & 1;
      unint64_t v388 = v260;
      char v390 = v178;
      uint64_t v389 = v174;
      uint64_t v391 = v270 & 0x101;
      uint64_t v392 = v262;
      uint64_t v393 = v172;
      unint64_t v394 = v293;
      uint64_t v395 = v180;
      unint64_t v396 = v181;
      uint64_t v397 = Strong;
      uint64_t v398 = v314;
      uint64_t v399 = v182;
      unint64_t v400 = 0;
      uint64_t v401 = v324;
      uint64_t v402 = 0;
      uint64_t v403 = v318;
      uint64_t v404 = 0;
      uint64_t v405 = v349;
      uint64_t v406 = 0;
      uint64_t v407 = v287;
      uint64_t v408 = v343;
      uint64_t v409 = v336;
      uint64_t v410 = v280;
      uint64_t v411 = v274;
      uint64_t v412 = v330;
      uint64_t v413 = v266;
      uint64_t v414 = v73;
      uint64_t v183 = v309;
LABEL_149:
      uint64_t v415 = v183;
      outlined release of ActionEvent<OrbitEntityAction>((uint64_t)&v384);
      return 0;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_168;
    case 4:
      uint64_t v25 = *(void *)a2;
      float v26 = *(void *)(a2 + 8);
      uint64_t v340 = *(void *)(a2 + 32);
      uint64_t v350 = *(void *)(a2 + 40);
      float v27 = *(void *)(a2 + 64);
      uint64_t v325 = *(void *)(a2 + 56);
      uint64_t v28 = *(float *)(a2 + 72);
      uint64_t v29 = *(float *)(a2 + 76);
      uint64_t v310 = *(unsigned char *)(a2 + 80);
      uint64_t v329 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_209:
          __break(1u);
          goto LABEL_210;
        }
        uint64_t v75 = specialized static Entity.entityInfoType(_:)(v25);
        if (v75)
        {
          uint64_t v76 = (*(uint64_t (**)(void))(v75 + 232))();
          uint64_t v77 = *(void *)(v76 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v77, 0);
          *(void *)(v76 + 16) = v25;
          MEMORY[0x22A68E750](v25, v76);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v25);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v78 = swift_allocObject();
      swift_weakInit();
      char v315 = v78;
      *(void *)(v78 + 16) = v26;
      swift_beginAccess();
      swift_weakAssign();
      unint64_t v79 = String.init(cString:)();
      uint64_t v81 = v80;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v82 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_105;
      }
      swift_bridgeObjectRetain();
      uint64_t v83 = specialized __RawDictionaryStorage.find<A>(_:)(v79, v81);
      if (v84)
      {
        uint64_t v85 = (uint64_t *)(*(void *)(v82 + 56) + 56 * v83);
        uint64_t v86 = v85[1];
        uint64_t v337 = *v85;
        uint64_t v87 = v85[2];
        uint64_t v88 = v85[3];
        uint64_t v89 = v85[4];
        uint64_t v90 = v85[5];
        uint64_t v91 = v85[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_105:
        uint64_t v337 = 0;
        uint64_t v86 = 0;
        uint64_t v87 = 0;
        uint64_t v88 = 0;
        uint64_t v89 = 0;
        uint64_t v90 = 0;
        uint64_t v91 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v422 = v340;
      BYTE8(v422) = 0;
      *(void *)&uint64_t v423 = v350;
      *((void *)&v423 + 1) = v337;
      *(void *)&unint64_t v424 = v86;
      *((void *)&v424 + 1) = v87;
      *(void *)&uint64_t v425 = v88;
      *((void *)&v425 + 1) = v89;
      *(void *)&uint64_t v426 = v90;
      *((void *)&v426 + 1) = v91;
      char v302 = v87;
      uint64_t v307 = v86;
      uint64_t v288 = v91;
      char v295 = v90;
      if (v27 && REBindPointBoundComponent())
      {
        uint64_t v184 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v185 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_218:
            __break(1u);
            goto LABEL_219;
          }
          uint64_t v252 = specialized static Entity.entityInfoType(_:)(v184);
          if (v252)
          {
            uint64_t v186 = (*(uint64_t (**)(void))(v252 + 232))();
            uint64_t v253 = *(void *)(v186 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v253, 0);
            *(void *)(v186 + 16) = v184;
            MEMORY[0x22A68E750](v184, v186);
            swift_release();
            goto LABEL_112;
          }
          uint64_t v185 = makeEntity(for:)(v184);
        }
        uint64_t v186 = v185;
      }
      else
      {
        uint64_t v186 = 0;
      }
LABEL_112:
      specialized ActionEventData.action<A>()((uint64_t)&v416);
      uint64_t v187 = v418;
      if ((_BYTE)v418 == 0xFF) {
        goto LABEL_167;
      }
      uint64_t v188 = v419;
      uint64_t v272 = v88;
      uint64_t v189 = v417;
      uint64_t v190 = v416;
      uint64_t v281 = HIDWORD(v418);
      uint64_t v191 = v420;
      char v192 = v421;
      swift_retain();
      outlined copy of OrbitEntityAction?(v190, v189, v187);
      double v193 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<OrbitEntityAction>);
      uint64_t v379 = v423;
      uint64_t v380 = v424;
      unint64_t v381 = v425;
      uint64_t v382 = v426;
      double v194 = v28;
      uint64_t v195 = v29;
      uint64_t v358 = v190;
      uint64_t v359 = v189;
      uint64_t v360 = v187 & 1;
      char v361 = v281;
      uint64_t v362 = v188;
      uint64_t v363 = v191;
      uint64_t v364 = v192 & 0x101;
      uint64_t v269 = v193 & 1;
      uint64_t v365 = v193 & 1;
      v357[0] = v315;
      uint64_t v366 = v186;
      uint64_t v367 = v310;
      uint64_t v368 = v194;
      uint64_t v369 = v195;
      uint64_t v370 = Strong;
      uint64_t v371 = v325;
      uint64_t v372 = -1.0;
      uint64_t v373 = 0;
      uint64_t v374 = 0xBFF0000000000000;
      uint64_t v375 = 0;
      uint64_t v376 = 0xBFF0000000000000;
      char v377 = 0;
      char v378 = v422;
      char v383 = v329;
      swift_retain();
      swift_retain();
      a5(v357);
      outlined consume of OrbitEntityAction?(v190, v189, v187);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v384 = v315;
      uint64_t v385 = v190;
      uint64_t v386 = v189;
      unint64_t v387 = v187 & 1;
      unint64_t v388 = v281;
      char v390 = v191;
      uint64_t v389 = v188;
      uint64_t v391 = v192 & 0x101;
      uint64_t v392 = v269;
      uint64_t v393 = v186;
      unint64_t v394 = v310;
      uint64_t v395 = v194;
      unint64_t v396 = v195;
      uint64_t v397 = Strong;
      uint64_t v398 = v325;
      uint64_t v399 = -1.0;
      unint64_t v400 = 0;
      uint64_t v401 = 0xBFF0000000000000;
      uint64_t v402 = 0;
      uint64_t v403 = 0xBFF0000000000000;
      uint64_t v404 = 0;
      uint64_t v405 = v340;
      uint64_t v406 = 0;
      uint64_t v407 = v350;
      uint64_t v408 = v337;
      uint64_t v409 = v307;
      uint64_t v410 = v302;
      uint64_t v411 = v272;
      uint64_t v412 = v89;
      uint64_t v413 = v295;
      uint64_t v196 = v288;
      goto LABEL_148;
    case 8:
      uint64_t v30 = *(void *)a2;
      float v31 = *(void *)(a2 + 8);
      uint64_t v351 = *(void *)(a2 + 32);
      float v32 = *(void *)(a2 + 40);
      uint64_t v33 = *(void *)(a2 + 56);
      uint64_t v34 = *(float *)(a2 + 64);
      uint64_t v35 = *(float *)(a2 + 68);
      uint64_t v299 = *(unsigned char *)(a2 + 72);
      uint64_t v313 = *(void *)(a2 + 48);
      uint64_t v319 = *(void *)(a2 + 80);
      uint64_t v326 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_210:
          __break(1u);
          goto LABEL_211;
        }
        uint64_t v92 = specialized static Entity.entityInfoType(_:)(v30);
        if (v92)
        {
          uint64_t v93 = (*(uint64_t (**)(void))(v92 + 232))();
          uint64_t v94 = *(void *)(v93 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v94, 0);
          *(void *)(v93 + 16) = v30;
          MEMORY[0x22A68E750](v30, v93);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v30);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      unint64_t v95 = swift_allocObject();
      swift_weakInit();
      uint64_t v306 = v95;
      *(void *)(v95 + 16) = v31;
      swift_beginAccess();
      swift_weakAssign();
      char v96 = String.init(cString:)();
      uint64_t v98 = v97;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v99 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_116;
      }
      swift_bridgeObjectRetain();
      uint64_t v100 = specialized __RawDictionaryStorage.find<A>(_:)(v96, v98);
      if (v101)
      {
        uint64_t v102 = (uint64_t *)(*(void *)(v99 + 56) + 56 * v100);
        uint64_t v103 = v102[2];
        uint64_t v338 = v102[1];
        uint64_t v344 = *v102;
        uint64_t v104 = v102[3];
        uint64_t v331 = v102[4];
        uint64_t v106 = v102[5];
        uint64_t v105 = v102[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_116:
        uint64_t v338 = 0;
        uint64_t v344 = 0;
        uint64_t v103 = 0;
        uint64_t v104 = 0;
        uint64_t v331 = 0;
        uint64_t v106 = 0;
        uint64_t v105 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v422 = v351;
      BYTE8(v422) = 0;
      *(void *)&uint64_t v423 = v32;
      *((void *)&v423 + 1) = v344;
      *(void *)&unint64_t v424 = v338;
      *((void *)&v424 + 1) = v103;
      *(void *)&uint64_t v425 = v104;
      *((void *)&v425 + 1) = v331;
      *(void *)&uint64_t v426 = v106;
      *((void *)&v426 + 1) = v105;
      uint64_t v289 = v103;
      uint64_t v296 = v32;
      uint64_t v282 = v104;
      if (v33 && REBindPointBoundComponent())
      {
        uint64_t v197 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v198 = swift_dynamicCastClassUnconditional();
LABEL_121:
          uint64_t v199 = v198;
          goto LABEL_123;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v254 = specialized static Entity.entityInfoType(_:)(v197);
        if (!v254)
        {
          uint64_t v198 = makeEntity(for:)(v197);
          goto LABEL_121;
        }
        uint64_t v199 = (*(uint64_t (**)(void))(v254 + 232))();
        uint64_t v255 = *(void *)(v199 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v255, 0);
        *(void *)(v199 + 16) = v197;
        MEMORY[0x22A68E750](v197, v199);
        swift_release();
      }
      else
      {
        uint64_t v199 = 0;
      }
LABEL_123:
      specialized ActionEventData.action<A>()((uint64_t)&v416);
      uint64_t v200 = v418;
      if ((_BYTE)v418 != 0xFF)
      {
        uint64_t v201 = v419;
        uint64_t v202 = v417;
        uint64_t v203 = v416;
        uint64_t v267 = v416;
        uint64_t v275 = HIDWORD(v418);
        uint64_t v204 = v420;
        uint64_t v205 = v421;
        swift_retain();
        outlined copy of OrbitEntityAction?(v203, v202, v200);
        uint64_t v206 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<OrbitEntityAction>);
        uint64_t v379 = v423;
        uint64_t v380 = v424;
        unint64_t v381 = v425;
        uint64_t v382 = v426;
        uint64_t v207 = v34;
        uint64_t v208 = v35;
        uint64_t v360 = v200 & 1;
        char v361 = v275;
        uint64_t v362 = v201;
        uint64_t v363 = v204;
        uint64_t v364 = v205 & 0x101;
        uint64_t v263 = v206 & 1;
        uint64_t v365 = v206 & 1;
        uint64_t v358 = v267;
        uint64_t v359 = v202;
        v357[0] = v306;
        uint64_t v366 = v199;
        uint64_t v367 = v299;
        uint64_t v368 = v207;
        uint64_t v369 = v208;
        uint64_t v371 = 0;
        uint64_t v372 = 0.0;
        uint64_t v370 = Strong;
        uint64_t v373 = 1;
        uint64_t v374 = v319;
        uint64_t v375 = 0;
        uint64_t v376 = v326;
        char v377 = 0;
        char v378 = v422;
        char v383 = v313;
        swift_retain();
        swift_retain();
        a5(v357);
        outlined consume of OrbitEntityAction?(v267, v202, v200);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v384 = v306;
        uint64_t v385 = v267;
        uint64_t v386 = v202;
        unint64_t v387 = v200 & 1;
        unint64_t v388 = v275;
        char v390 = v204;
        uint64_t v389 = v201;
        uint64_t v391 = v205 & 0x101;
        uint64_t v392 = v263;
        uint64_t v393 = v199;
        unint64_t v394 = v299;
        uint64_t v395 = v207;
        unint64_t v396 = v208;
        uint64_t v399 = 0.0;
        uint64_t v397 = Strong;
        uint64_t v398 = 0;
        unint64_t v400 = 1;
        uint64_t v401 = v319;
        uint64_t v402 = 0;
        uint64_t v403 = v326;
        uint64_t v404 = 0;
        uint64_t v405 = v351;
        uint64_t v406 = 0;
        uint64_t v407 = v296;
        uint64_t v408 = v344;
        uint64_t v409 = v338;
        uint64_t v410 = v289;
        uint64_t v411 = v282;
        uint64_t v412 = v331;
        uint64_t v413 = v106;
        uint64_t v169 = v105;
        goto LABEL_126;
      }
LABEL_167:
      swift_release();
      swift_release();
      swift_release();
LABEL_168:
      swift_release();
      return 0;
    case 16:
      uint64_t v36 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      uint64_t v352 = *(void *)(a2 + 40);
      uint64_t v329 = *(void *)(a2 + 48);
      uint64_t v334 = *(void *)(a2 + 32);
      char v341 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_211:
          __break(1u);
          goto LABEL_212;
        }
        uint64_t v107 = specialized static Entity.entityInfoType(_:)(v36);
        if (v107)
        {
          uint64_t v108 = (*(uint64_t (**)(void))(v107 + 232))();
          uint64_t v109 = *(void *)(v108 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v109, 0);
          *(void *)(v108 + 16) = v36;
          MEMORY[0x22A68E750](v36, v108);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v110 = swift_allocObject();
      swift_weakInit();
      *(void *)(v110 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v111 = String.init(cString:)();
      char v113 = v112;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v114 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_128;
      }
      swift_bridgeObjectRetain();
      uint64_t v115 = specialized __RawDictionaryStorage.find<A>(_:)(v111, v113);
      if (v116)
      {
        uint64_t v117 = (uint64_t *)(*(void *)(v114 + 56) + 56 * v115);
        uint64_t v118 = *v117;
        uint64_t v119 = v117[1];
        uint64_t v120 = v117[2];
        uint64_t v121 = v117[3];
        uint64_t v122 = v117[4];
        uint64_t v123 = v117[5];
        uint64_t v124 = v117[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_128:
        uint64_t v118 = 0;
        uint64_t v119 = 0;
        uint64_t v120 = 0;
        uint64_t v121 = 0;
        uint64_t v122 = 0;
        uint64_t v123 = 0;
        uint64_t v124 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v422 = 0;
      BYTE8(v422) = 0;
      *(void *)&uint64_t v423 = v352;
      *((void *)&v423 + 1) = v118;
      *(void *)&unint64_t v424 = v119;
      *((void *)&v424 + 1) = v120;
      *(void *)&uint64_t v425 = v121;
      *((void *)&v425 + 1) = v122;
      *(void *)&uint64_t v426 = v123;
      *((void *)&v426 + 1) = v124;
      uint64_t v316 = v123;
      uint64_t v320 = v122;
      if (!v341 || !REBindPointBoundComponent()) {
        goto LABEL_141;
      }
      uint64_t v209 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_139;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_187;
      }
      __break(1u);
LABEL_134:
      swift_bridgeObjectRelease();
LABEL_135:
      uint64_t v118 = 0;
      uint64_t v119 = 0;
      uint64_t v120 = 0;
      uint64_t v121 = 0;
      uint64_t v135 = 0;
      uint64_t v136 = 0;
      uint64_t v124 = 0;
LABEL_136:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v422 = 0;
      BYTE8(v422) = 0;
      *(void *)&uint64_t v423 = v352;
      *((void *)&v423 + 1) = v118;
      *(void *)&unint64_t v424 = v119;
      *((void *)&v424 + 1) = v120;
      *(void *)&uint64_t v425 = v121;
      *((void *)&v425 + 1) = v135;
      *(void *)&uint64_t v426 = v136;
      *((void *)&v426 + 1) = v124;
      uint64_t v316 = v136;
      uint64_t v320 = v135;
      if (v341 && REBindPointBoundComponent())
      {
        uint64_t v209 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_139:
          type metadata accessor for Entity();
          uint64_t v210 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_220:
            __break(1u);
            goto LABEL_221;
          }
LABEL_187:
          uint64_t v256 = specialized static Entity.entityInfoType(_:)(v209);
          if (v256)
          {
            uint64_t v211 = (*(uint64_t (**)(void))(v256 + 232))();
            uint64_t v257 = *(void *)(v211 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v257, 0);
            *(void *)(v211 + 16) = v209;
            MEMORY[0x22A68E750](v209, v211);
            swift_release();
            goto LABEL_142;
          }
          uint64_t v210 = makeEntity(for:)(v209);
        }
        uint64_t v211 = v210;
      }
      else
      {
LABEL_141:
        uint64_t v211 = 0;
      }
LABEL_142:
      specialized ActionEventData.action<A>()((uint64_t)&v416);
      uint64_t v212 = v418;
      if ((_BYTE)v418 == 0xFF) {
        goto LABEL_167;
      }
      uint64_t v379 = v423;
      uint64_t v380 = v424;
      unint64_t v381 = v425;
      uint64_t v382 = v426;
      uint64_t v311 = v118;
      uint64_t v213 = v419;
      uint64_t v346 = v124;
      uint64_t v214 = v417;
      uint64_t v215 = v416;
      uint64_t v276 = HIDWORD(v418);
      uint64_t v303 = v121;
      uint64_t v216 = v420;
      uint64_t v358 = v416;
      uint64_t v359 = v417;
      uint64_t v273 = v418 & 1;
      uint64_t v360 = v418 & 1;
      char v361 = HIDWORD(v418);
      uint64_t v362 = v419;
      uint64_t v363 = v420;
      char v290 = v421 & 1;
      uint64_t v364 = v421 & 0x101;
      char v283 = HIBYTE(v421) & 1;
      uint64_t v365 = 1;
      v357[0] = v110;
      uint64_t v366 = v211;
      uint64_t v367 = 0;
      uint64_t v368 = 0.0;
      uint64_t v369 = 0.0;
      uint64_t v371 = 0;
      uint64_t v372 = 0.0;
      uint64_t v370 = Strong;
      uint64_t v373 = 1;
      uint64_t v374 = v334;
      uint64_t v375 = 0;
      uint64_t v376 = 0;
      char v377 = 1;
      char v378 = v422;
      char v383 = v329;
      swift_retain();
      swift_retain();
      outlined copy of OrbitEntityAction?(v215, v214, v212);
      swift_retain();
      a5(v357);
      outlined consume of OrbitEntityAction?(v215, v214, v212);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v384 = v110;
      uint64_t v385 = v215;
      uint64_t v386 = v214;
      unint64_t v387 = v273;
      unint64_t v388 = v276;
      char v390 = v216;
      uint64_t v389 = v213;
      LOBYTE(v391) = v290;
      HIBYTE(v391) = v283;
      uint64_t v392 = 1;
      uint64_t v393 = v211;
      unint64_t v394 = 0;
      unint64_t v396 = 0.0;
      uint64_t v395 = 0.0;
      uint64_t v399 = 0.0;
      uint64_t v397 = Strong;
      uint64_t v398 = 0;
      unint64_t v400 = 1;
      uint64_t v401 = v334;
      uint64_t v402 = 0;
      uint64_t v403 = 0;
      uint64_t v404 = 1;
      uint64_t v405 = 0;
      uint64_t v406 = 0;
      uint64_t v407 = v352;
      uint64_t v408 = v311;
      uint64_t v409 = v119;
      uint64_t v410 = v120;
      uint64_t v411 = v303;
      uint64_t v412 = v320;
      uint64_t v413 = v316;
      uint64_t v196 = v346;
LABEL_148:
      uint64_t v414 = v196;
      uint64_t v183 = v329;
      goto LABEL_149;
    case 32:
      uint64_t v38 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v352 = *(void *)(a2 + 40);
      uint64_t v329 = *(void *)(a2 + 48);
      uint64_t v334 = *(void *)(a2 + 32);
      char v341 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_212:
          __break(1u);
          goto LABEL_213;
        }
        uint64_t v125 = specialized static Entity.entityInfoType(_:)(v38);
        if (v125)
        {
          uint64_t v126 = (*(uint64_t (**)(void))(v125 + 232))();
          uint64_t v127 = *(void *)(v126 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v127, 0);
          *(void *)(v126 + 16) = v38;
          MEMORY[0x22A68E750](v38, v126);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v110 = swift_allocObject();
      swift_weakInit();
      *(void *)(v110 + 16) = v39;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v128 = String.init(cString:)();
      unint64_t v130 = v129;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      char v131 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_135;
      }
      swift_bridgeObjectRetain();
      uint64_t v132 = specialized __RawDictionaryStorage.find<A>(_:)(v128, v130);
      if ((v133 & 1) == 0) {
        goto LABEL_134;
      }
      uint64_t v134 = (uint64_t *)(*(void *)(v131 + 56) + 56 * v132);
      uint64_t v118 = *v134;
      uint64_t v119 = v134[1];
      uint64_t v120 = v134[2];
      uint64_t v121 = v134[3];
      uint64_t v135 = v134[4];
      uint64_t v136 = v134[5];
      uint64_t v124 = v134[6];
      swift_bridgeObjectRelease();
      goto LABEL_136;
    case 64:
      uint64_t v40 = *(void *)a2;
      uint64_t v41 = *(void *)(a2 + 8);
      uint64_t v42 = *(void *)(a2 + 24);
      uint64_t v43 = *(void *)(a2 + 40);
      uint64_t v329 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_213:
          __break(1u);
          goto LABEL_214;
        }
        uint64_t v137 = specialized static Entity.entityInfoType(_:)(v40);
        if (v137)
        {
          uint64_t v138 = (*(uint64_t (**)(void))(v137 + 232))();
          uint64_t v139 = *(void *)(v138 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v139, 0);
          *(void *)(v138 + 16) = v40;
          MEMORY[0x22A68E750](v40, v138);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v40);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v140 = swift_allocObject();
      swift_weakInit();
      uint64_t v327 = v140;
      *(void *)(v140 + 16) = v41;
      swift_beginAccess();
      swift_weakAssign();
      if (v43 && REBindPointBoundComponent())
      {
        uint64_t v141 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v142 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v143 = v142;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        uint64_t v246 = specialized static Entity.entityInfoType(_:)(v141);
        if (!v246)
        {
          uint64_t v142 = makeEntity(for:)(v141);
          goto LABEL_77;
        }
        uint64_t v143 = (*(uint64_t (**)(void))(v246 + 232))();
        uint64_t v247 = *(void *)(v143 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v247, 0);
        *(void *)(v143 + 16) = v141;
        MEMORY[0x22A68E750](v141, v143);
        swift_release();
      }
      else
      {
        uint64_t v143 = 0;
      }
LABEL_79:
      uint64_t v144 = String.init(cString:)();
      uint64_t v146 = v145;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v147 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v148 = specialized __RawDictionaryStorage.find<A>(_:)(v144, v146);
        if (v149)
        {
          uint64_t v150 = (uint64_t *)(*(void *)(v147 + 56) + 56 * v148);
          uint64_t v151 = *v150;
          uint64_t v152 = v150[1];
          char v153 = v150[2];
          double v154 = v150[3];
          uint64_t v345 = v150[5];
          uint64_t v353 = v150[4];
          uint64_t v339 = v150[6];
          swift_bridgeObjectRelease();
LABEL_146:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v422 = 0;
          BYTE8(v422) = 0;
          *(void *)&uint64_t v423 = v42;
          *((void *)&v423 + 1) = v151;
          *(void *)&unint64_t v424 = v152;
          *((void *)&v424 + 1) = v153;
          uint64_t v321 = v153;
          *(void *)&uint64_t v425 = v154;
          *((void *)&v425 + 1) = v353;
          *(void *)&uint64_t v426 = v345;
          *((void *)&v426 + 1) = v339;
          specialized ActionEventData.action<A>()((uint64_t)&v416);
          unint64_t v217 = v418;
          if ((_BYTE)v418 == 0xFF) {
            goto LABEL_167;
          }
          uint64_t v379 = v423;
          uint64_t v380 = v424;
          unint64_t v381 = v425;
          uint64_t v382 = v426;
          char v218 = v419;
          uint64_t v219 = v417;
          uint64_t v220 = v416;
          uint64_t v284 = HIDWORD(v418);
          uint64_t v304 = v152;
          uint64_t v221 = v420;
          uint64_t v358 = v416;
          uint64_t v359 = v417;
          uint64_t v277 = v418 & 1;
          uint64_t v360 = v418 & 1;
          char v361 = HIDWORD(v418);
          uint64_t v362 = v419;
          uint64_t v363 = v420;
          uint64_t v297 = v421 & 1;
          uint64_t v364 = v421 & 0x101;
          char v291 = HIBYTE(v421) & 1;
          uint64_t v365 = 1;
          v357[0] = v327;
          uint64_t v366 = v143;
          uint64_t v367 = 0;
          uint64_t v368 = 0.0;
          uint64_t v369 = 0.0;
          uint64_t v371 = 0;
          uint64_t v372 = 0.0;
          uint64_t v370 = Strong;
          uint64_t v373 = 1;
          uint64_t v374 = 0;
          uint64_t v375 = 1;
          uint64_t v376 = 0;
          char v377 = 1;
          char v378 = v422;
          char v383 = v329;
          swift_retain();
          swift_retain();
          outlined copy of OrbitEntityAction?(v220, v219, v217);
          swift_retain();
          a5(v357);
          outlined consume of OrbitEntityAction?(v220, v219, v217);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v384 = v327;
          uint64_t v385 = v220;
          uint64_t v386 = v219;
          unint64_t v387 = v277;
          unint64_t v388 = v284;
          char v390 = v221;
          uint64_t v389 = v218;
          LOBYTE(v391) = v297;
          HIBYTE(v391) = v291;
          uint64_t v392 = 1;
          uint64_t v393 = v143;
          unint64_t v394 = 0;
          unint64_t v396 = 0.0;
          uint64_t v395 = 0.0;
          uint64_t v399 = 0.0;
          uint64_t v397 = Strong;
          uint64_t v398 = 0;
          unint64_t v400 = 1;
          uint64_t v401 = 0;
          uint64_t v402 = 1;
          uint64_t v403 = 0;
          uint64_t v404 = 1;
          uint64_t v405 = 0;
          uint64_t v406 = 0;
          uint64_t v407 = v42;
          uint64_t v408 = v151;
          uint64_t v409 = v304;
          uint64_t v410 = v321;
          uint64_t v411 = v154;
          uint64_t v412 = v353;
          uint64_t v413 = v345;
          uint64_t v196 = v339;
          goto LABEL_148;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v151 = 0;
      uint64_t v152 = 0;
      char v153 = 0;
      double v154 = 0;
      uint64_t v345 = 0;
      uint64_t v353 = 0;
      uint64_t v339 = 0;
      goto LABEL_146;
    default:
      if (a4 != 128) {
        goto LABEL_168;
      }
      uint64_t v14 = *(void *)a2;
      uint64_t v15 = *(void *)(a2 + 8);
      uint64_t v16 = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 40);
      uint64_t v333 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_214:
          __break(1u);
          goto LABEL_215;
        }
        uint64_t v222 = specialized static Entity.entityInfoType(_:)(v14);
        if (v222)
        {
          uint64_t v223 = (*(uint64_t (**)(void))(v222 + 232))();
          uint64_t v224 = *(void *)(v223 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v224, 0);
          *(void *)(v223 + 16) = v14;
          MEMORY[0x22A68E750](v14, v223);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v225 = swift_allocObject();
      swift_weakInit();
      uint64_t v332 = v225;
      *(void *)(v225 + 16) = v15;
      swift_beginAccess();
      swift_weakAssign();
      if (v17 && REBindPointBoundComponent())
      {
        uint64_t v226 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v227 = swift_dynamicCastClassUnconditional();
LABEL_157:
          uint64_t v228 = v227;
          goto LABEL_159;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
          JUMPOUT(0x227FBAD34);
        }
        uint64_t v258 = specialized static Entity.entityInfoType(_:)(v226);
        if (!v258)
        {
          uint64_t v227 = makeEntity(for:)(v226);
          goto LABEL_157;
        }
        uint64_t v228 = (*(uint64_t (**)(void))(v258 + 232))();
        uint64_t v259 = *(void *)(v228 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v259, 0);
        *(void *)(v228 + 16) = v226;
        MEMORY[0x22A68E750](v226, v228);
        swift_release();
      }
      else
      {
        uint64_t v228 = 0;
      }
LABEL_159:
      uint64_t v229 = String.init(cString:)();
      uint64_t v231 = v230;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v232 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v233 = specialized __RawDictionaryStorage.find<A>(_:)(v229, v231);
        if (v234)
        {
          uint64_t v235 = (uint64_t *)(*(void *)(v232 + 56) + 56 * v233);
          uint64_t v236 = *v235;
          unint64_t v237 = v235[1];
          uint64_t v239 = v235[2];
          char v238 = v235[3];
          uint64_t v240 = v235[4];
          char v347 = v235[6];
          char v354 = v235[5];
          swift_bridgeObjectRelease();
          goto LABEL_166;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v236 = 0;
      unint64_t v237 = 0;
      uint64_t v239 = 0;
      char v238 = 0;
      uint64_t v240 = 0;
      char v347 = 0;
      char v354 = 0;
LABEL_166:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v422 = 0;
      BYTE8(v422) = 0;
      *(void *)&uint64_t v423 = v16;
      *((void *)&v423 + 1) = v236;
      *(void *)&unint64_t v424 = v237;
      *((void *)&v424 + 1) = v239;
      uint64_t v322 = v240;
      *(void *)&uint64_t v425 = v238;
      *((void *)&v425 + 1) = v240;
      *(void *)&uint64_t v426 = v354;
      *((void *)&v426 + 1) = v347;
      specialized ActionEventData.action<A>()((uint64_t)&v416);
      uint64_t v241 = v418;
      if ((_BYTE)v418 != 0xFF)
      {
        uint64_t v379 = v423;
        uint64_t v380 = v424;
        unint64_t v381 = v425;
        uint64_t v382 = v426;
        uint64_t v312 = v236;
        uint64_t v242 = v419;
        uint64_t v243 = v417;
        uint64_t v244 = v416;
        char v285 = HIDWORD(v418);
        uint64_t v308 = v239;
        uint64_t v245 = v420;
        uint64_t v358 = v416;
        uint64_t v359 = v417;
        uint64_t v278 = v418 & 1;
        uint64_t v360 = v418 & 1;
        char v361 = HIDWORD(v418);
        uint64_t v362 = v419;
        uint64_t v363 = v420;
        uint64_t v298 = v421 & 1;
        uint64_t v364 = v421 & 0x101;
        uint64_t v292 = HIBYTE(v421) & 1;
        uint64_t v365 = 1;
        v357[0] = v332;
        uint64_t v366 = v228;
        uint64_t v367 = 0;
        uint64_t v368 = 0.0;
        uint64_t v369 = 0.0;
        uint64_t v371 = 0;
        uint64_t v372 = 0.0;
        uint64_t v370 = Strong;
        uint64_t v373 = 1;
        uint64_t v374 = 0;
        uint64_t v375 = 1;
        uint64_t v376 = 0;
        char v377 = 1;
        char v378 = v422;
        char v383 = v333;
        swift_retain();
        swift_retain();
        outlined copy of OrbitEntityAction?(v244, v243, v241);
        swift_retain();
        a5(v357);
        swift_release();
        outlined consume of OrbitEntityAction?(v244, v243, v241);
        swift_release();
        swift_release();
        swift_release();
        uint64_t v384 = v332;
        uint64_t v385 = v244;
        uint64_t v386 = v243;
        unint64_t v387 = v278;
        unint64_t v388 = v285;
        char v390 = v245;
        uint64_t v389 = v242;
        LOBYTE(v391) = v298;
        HIBYTE(v391) = v292;
        uint64_t v392 = 1;
        uint64_t v393 = v228;
        unint64_t v394 = 0;
        unint64_t v396 = 0.0;
        uint64_t v395 = 0.0;
        uint64_t v399 = 0.0;
        uint64_t v397 = Strong;
        uint64_t v398 = 0;
        unint64_t v400 = 1;
        uint64_t v401 = 0;
        uint64_t v402 = 1;
        uint64_t v403 = 0;
        uint64_t v404 = 1;
        uint64_t v405 = 0;
        uint64_t v406 = 0;
        uint64_t v407 = v16;
        uint64_t v408 = v312;
        uint64_t v409 = v237;
        uint64_t v410 = v308;
        uint64_t v411 = v238;
        uint64_t v412 = v322;
        uint64_t v413 = v354;
        uint64_t v414 = v347;
        uint64_t v183 = v333;
        goto LABEL_149;
      }
      goto LABEL_167;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  float v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  float v21;
  uint64_t v22;
  float v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  float v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  float v34;
  float v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t Entity;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  char v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  double v229;
  double v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;
  double v240;
  double v241;
  double v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char v250;
  double v251;
  double v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  double v263;
  double v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  char v272;
  char v273;
  uint64_t v274;
  char v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char v283;
  char v284;
  char v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  uint64_t v289;
  char v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  unint64_t v312;
  char v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t Strong;
  void v352[2];
  uint64_t v353;
  uint64_t v354;
  char v355;
  uint64_t v356;
  uint64_t v357;
  char v358;
  uint64_t v359;
  char v360;
  double v361;
  double v362;
  uint64_t v363;
  uint64_t v364;
  double v365;
  char v366;
  unint64_t v367;
  char v368;
  unint64_t v369;
  char v370;
  long long v371;
  long long v372;
  long long v373;
  long long v374;
  long long v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  char v380;
  uint64_t v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  char v385;
  double v386;
  double v387;
  uint64_t v388;
  uint64_t v389;
  double v390;
  char v391;
  unint64_t v392;
  char v393;
  unint64_t v394;
  char v395;
  uint64_t v396;
  char v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  long long v412;
  long long v413;
  long long v414;
  long long v415;
  long long v416;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v8 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v343 = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 40);
      float v10 = *(void *)(a2 + 64);
      float v11 = *(float *)(a2 + 72);
      uint64_t v12 = *(float *)(a2 + 76);
      char v290 = *(unsigned char *)(a2 + 80);
      char v302 = *(void *)(a2 + 48);
      uint64_t v305 = *(void *)(a2 + 88);
      uint64_t v311 = *(void *)(a2 + 96);
      uint64_t v318 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v44 = specialized static Entity.entityInfoType(_:)(v8);
        if (v44)
        {
          uint64_t v45 = (*(uint64_t (**)(void))(v44 + 232))();
          uint64_t v46 = *(void *)(v45 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v46, 0);
          *(void *)(v45 + 16) = v8;
          MEMORY[0x22A68E750](v8, v45);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v8);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v47 = swift_allocObject();
        swift_weakInit();
        *(void *)(v47 + 16) = v7;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v48 = String.init(cString:)();
        char v50 = v49;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v51 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v52 = specialized __RawDictionaryStorage.find<A>(_:)(v48, v50);
          if (v53)
          {
            uint64_t v54 = (uint64_t *)(*(void *)(v51 + 56) + 56 * v52);
            uint64_t v55 = v54[2];
            uint64_t v331 = *v54;
            uint64_t v338 = v54[1];
            uint64_t v56 = v54[3];
            uint64_t v324 = v54[4];
            uint64_t v57 = v54[5];
            uint64_t v58 = v54[6];
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v331 = 0;
        uint64_t v338 = 0;
        uint64_t v55 = 0;
        uint64_t v56 = 0;
        uint64_t v324 = 0;
        uint64_t v57 = 0;
        uint64_t v58 = 0;
LABEL_86:
        uint64_t v279 = v57;
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v412 = v343;
        BYTE8(v412) = 0;
        *(void *)&uint64_t v413 = v9;
        *((void *)&v413 + 1) = v331;
        *(void *)&uint64_t v414 = v338;
        *((void *)&v414 + 1) = v55;
        *(void *)&uint64_t v415 = v56;
        *((void *)&v415 + 1) = v324;
        *(void *)&uint64_t v416 = v57;
        *((void *)&v416 + 1) = v58;
        uint64_t v281 = v55;
        uint64_t v286 = v9;
        if (!v10 || !REBindPointBoundComponent())
        {
          uint64_t v163 = 0;
          goto LABEL_169;
        }
        uint64_t v160 = v56;
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v162 = swift_dynamicCastClassUnconditional();
          goto LABEL_90;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v221 = specialized static Entity.entityInfoType(_:)(Entity);
          if (v221)
          {
            uint64_t v163 = (*(uint64_t (**)(void))(v221 + 232))();
            uint64_t v222 = *(void *)(v163 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v222, 0);
            *(void *)(v163 + 16) = Entity;
            MEMORY[0x22A68E750](Entity, v163);
            swift_release();
            goto LABEL_168;
          }
          uint64_t v162 = makeEntity(for:)(Entity);
LABEL_90:
          uint64_t v163 = v162;
LABEL_168:
          uint64_t v56 = v160;
LABEL_169:
          specialized ActionEventData.action<A>()((uint64_t)&v407);
          uint64_t v223 = v409;
          if ((_BYTE)v409 != 0xFF)
          {
            uint64_t v224 = v410;
            uint64_t v277 = v56;
            uint64_t v225 = v408;
            uint64_t v226 = v407;
            uint64_t v227 = v411;
            swift_retain();
            outlined copy of OrbitEntityAction?(v226, v225, v223);
            uint64_t v228 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<ImpulseAction>);
            uint64_t v372 = v413;
            uint64_t v373 = v414;
            uint64_t v374 = v415;
            uint64_t v375 = v416;
            uint64_t v229 = v11;
            uint64_t v230 = v12;
            uint64_t v353 = v226;
            char v354 = v225;
            char v355 = v223 & 1;
            char v356 = v224;
            uint64_t v357 = v227;
            uint64_t v272 = v228 & 1;
            uint64_t v358 = v228 & 1;
            v352[0] = v47;
            uint64_t v359 = v163;
            uint64_t v360 = v290;
            char v361 = v229;
            uint64_t v362 = v230;
            uint64_t v363 = Strong;
            uint64_t v364 = v318;
            uint64_t v365 = -1.0;
            uint64_t v366 = 0;
            uint64_t v367 = v305;
            uint64_t v368 = 0;
            uint64_t v369 = v311;
            uint64_t v370 = 0;
            uint64_t v371 = v412;
            uint64_t v376 = v302;
            swift_retain();
            swift_retain();
            a5(v352);
            outlined consume of OrbitEntityAction?(v226, v225, v223);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            char v377 = v47;
            char v378 = v226;
            uint64_t v379 = v225;
            uint64_t v380 = v223 & 1;
            unint64_t v381 = v224;
            uint64_t v382 = v227;
            char v383 = v272;
            uint64_t v384 = v163;
            uint64_t v385 = v290;
            uint64_t v386 = v229;
            unint64_t v387 = v230;
            unint64_t v388 = Strong;
            uint64_t v389 = v318;
            char v390 = -1.0;
            uint64_t v391 = 0;
            uint64_t v392 = v305;
            uint64_t v393 = 0;
            unint64_t v394 = v311;
            uint64_t v395 = 0;
            unint64_t v396 = v343;
            uint64_t v397 = 0;
            uint64_t v398 = v286;
            uint64_t v399 = v331;
            unint64_t v400 = v338;
            uint64_t v401 = v281;
            uint64_t v402 = v277;
            uint64_t v403 = v324;
            uint64_t v404 = v279;
            uint64_t v231 = v58;
LABEL_177:
            uint64_t v405 = v231;
            char v192 = v302;
            goto LABEL_193;
          }
          goto LABEL_189;
        }
        goto LABEL_229;
      }
      __break(1u);
      goto LABEL_221;
    case 2:
      float v19 = *(void *)a2;
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v344 = *(void *)(a2 + 32);
      uint64_t v20 = *(void *)(a2 + 40);
      float v21 = *(float *)(a2 + 56);
      uint64_t v312 = *(void *)(a2 + 64);
      uint64_t v319 = *(void *)(a2 + 48);
      float v22 = *(void *)(a2 + 88);
      char v302 = *(void *)(a2 + 80);
      uint64_t v306 = *(void *)(a2 + 72);
      uint64_t v23 = *(float *)(a2 + 96);
      uint64_t v24 = *(float *)(a2 + 100);
      char v285 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v59 = specialized static Entity.entityInfoType(_:)(v19);
        if (v59)
        {
          uint64_t v60 = (*(uint64_t (**)(void))(v59 + 232))();
          uint64_t v61 = *(void *)(v60 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v61, 0);
          *(void *)(v60 + 16) = v19;
          MEMORY[0x22A68E750](v19, v60);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v19);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v62 = swift_allocObject();
        swift_weakInit();
        char v291 = v62;
        *(void *)(v62 + 16) = v18;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v63 = String.init(cString:)();
        char v65 = v64;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v66 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v67 = specialized __RawDictionaryStorage.find<A>(_:)(v63, v65);
          if (v68)
          {
            uint64_t v69 = (uint64_t *)(*(void *)(v66 + 56) + 56 * v67);
            uint64_t v70 = v69[2];
            uint64_t v332 = *v69;
            uint64_t v339 = v69[1];
            uint64_t v71 = v69[3];
            uint64_t v325 = v69[4];
            uint64_t v72 = v69[5];
            uint64_t v73 = v69[6];
            swift_bridgeObjectRelease();
LABEL_94:
            uint64_t v276 = v72;
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&uint64_t v412 = v344;
            BYTE8(v412) = 0;
            *(void *)&uint64_t v413 = v20;
            *((void *)&v413 + 1) = v332;
            *(void *)&uint64_t v414 = v339;
            *((void *)&v414 + 1) = v70;
            *(void *)&uint64_t v415 = v71;
            *((void *)&v415 + 1) = v325;
            *(void *)&uint64_t v416 = v72;
            *((void *)&v416 + 1) = v73;
            uint64_t v280 = v70;
            uint64_t v282 = v20;
            if (!v22 || !REBindPointBoundComponent())
            {
              double v167 = 0;
              goto LABEL_175;
            }
            uint64_t v164 = v71;
            char v165 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              double v166 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_230:
                __break(1u);
                goto LABEL_231;
              }
              uint64_t v232 = specialized static Entity.entityInfoType(_:)(v165);
              if (v232)
              {
                double v167 = (*(uint64_t (**)(void))(v232 + 232))();
                uint64_t v233 = *(void *)(v167 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v233, 0);
                *(void *)(v167 + 16) = v165;
                MEMORY[0x22A68E750](v165, v167);
                swift_release();
                goto LABEL_174;
              }
              double v166 = makeEntity(for:)(v165);
            }
            double v167 = v166;
LABEL_174:
            uint64_t v71 = v164;
LABEL_175:
            specialized ActionEventData.action<A>()((uint64_t)&v407);
            uint64_t v234 = v409;
            if ((_BYTE)v409 != 0xFF)
            {
              uint64_t v235 = v410;
              uint64_t v274 = v71;
              uint64_t v236 = v408;
              unint64_t v237 = v407;
              char v238 = v411;
              swift_retain();
              outlined copy of OrbitEntityAction?(v237, v236, v234);
              uint64_t v239 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<ImpulseAction>);
              uint64_t v372 = v413;
              uint64_t v373 = v414;
              uint64_t v374 = v415;
              uint64_t v375 = v416;
              uint64_t v240 = v23;
              uint64_t v241 = v24;
              uint64_t v242 = v21;
              uint64_t v353 = v237;
              char v354 = v236;
              char v355 = v234 & 1;
              char v356 = v235;
              uint64_t v357 = v238;
              uint64_t v271 = v239 & 1;
              uint64_t v358 = v239 & 1;
              v352[0] = v291;
              uint64_t v359 = v167;
              uint64_t v360 = v285;
              char v361 = v240;
              uint64_t v362 = v241;
              uint64_t v363 = Strong;
              uint64_t v364 = v306;
              uint64_t v365 = v242;
              uint64_t v366 = 0;
              uint64_t v367 = v319;
              uint64_t v368 = 0;
              uint64_t v369 = v312;
              uint64_t v370 = 0;
              uint64_t v371 = v412;
              uint64_t v376 = v302;
              swift_retain();
              swift_retain();
              a5(v352);
              outlined consume of OrbitEntityAction?(v237, v236, v234);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              char v377 = v291;
              char v378 = v237;
              uint64_t v379 = v236;
              uint64_t v380 = v234 & 1;
              unint64_t v381 = v235;
              uint64_t v382 = v238;
              char v383 = v271;
              uint64_t v384 = v167;
              uint64_t v385 = v285;
              uint64_t v386 = v240;
              unint64_t v387 = v241;
              unint64_t v388 = Strong;
              uint64_t v389 = v306;
              char v390 = v242;
              uint64_t v391 = 0;
              uint64_t v392 = v319;
              uint64_t v393 = 0;
              unint64_t v394 = v312;
              uint64_t v395 = 0;
              unint64_t v396 = v344;
              uint64_t v397 = 0;
              uint64_t v398 = v282;
              uint64_t v399 = v332;
              unint64_t v400 = v339;
              uint64_t v401 = v280;
              uint64_t v402 = v274;
              uint64_t v403 = v325;
              uint64_t v404 = v276;
              uint64_t v231 = v73;
              goto LABEL_177;
            }
LABEL_189:
            swift_release();
            swift_release();
            swift_release();
LABEL_190:
            swift_release();
            return 0;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v332 = 0;
        uint64_t v339 = 0;
        uint64_t v70 = 0;
        uint64_t v71 = 0;
        uint64_t v325 = 0;
        uint64_t v72 = 0;
        uint64_t v73 = 0;
        goto LABEL_94;
      }
LABEL_221:
      __break(1u);
      goto LABEL_222;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_190;
    case 4:
      float v26 = *(void *)a2;
      uint64_t v25 = *(void *)(a2 + 8);
      uint64_t v345 = *(void *)(a2 + 32);
      float v27 = *(void *)(a2 + 40);
      uint64_t v307 = *(void *)(a2 + 48);
      uint64_t v28 = *(void *)(a2 + 64);
      uint64_t v320 = *(void *)(a2 + 56);
      uint64_t v29 = *(float *)(a2 + 72);
      uint64_t v30 = *(float *)(a2 + 76);
      uint64_t v313 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v74 = specialized static Entity.entityInfoType(_:)(v26);
        if (v74)
        {
          uint64_t v75 = (*(uint64_t (**)(void))(v74 + 232))();
          uint64_t v76 = *(void *)(v75 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v76, 0);
          *(void *)(v75 + 16) = v26;
          MEMORY[0x22A68E750](v26, v75);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v26);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v77 = swift_allocObject();
        swift_weakInit();
        *(void *)(v77 + 16) = v25;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v78 = String.init(cString:)();
        char v80 = v79;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v81 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v82 = specialized __RawDictionaryStorage.find<A>(_:)(v78, v80);
          if (v83)
          {
            uint64_t v84 = (uint64_t *)(*(void *)(v81 + 56) + 56 * v82);
            uint64_t v85 = v84[2];
            uint64_t v333 = *v84;
            uint64_t v340 = v84[1];
            uint64_t v86 = v84[3];
            uint64_t v326 = v84[4];
            uint64_t v87 = v84[5];
            uint64_t v88 = v84[6];
            swift_bridgeObjectRelease();
LABEL_102:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&uint64_t v412 = v345;
            BYTE8(v412) = 0;
            *(void *)&uint64_t v413 = v27;
            *((void *)&v413 + 1) = v333;
            *(void *)&uint64_t v414 = v340;
            *((void *)&v414 + 1) = v85;
            *(void *)&uint64_t v415 = v86;
            *((void *)&v415 + 1) = v326;
            *(void *)&uint64_t v416 = v87;
            *((void *)&v416 + 1) = v88;
            uint64_t v292 = v85;
            uint64_t v298 = v27;
            if (!v28 || !REBindPointBoundComponent())
            {
              uint64_t v171 = 0;
LABEL_182:
              specialized ActionEventData.action<A>()((uint64_t)&v407);
              uint64_t v245 = v409;
              if ((_BYTE)v409 == 0xFF) {
                goto LABEL_189;
              }
              uint64_t v246 = v410;
              uint64_t v288 = v86;
              uint64_t v247 = v408;
              uint64_t v248 = v407;
              uint64_t v249 = v411;
              swift_retain();
              outlined copy of OrbitEntityAction?(v248, v247, v245);
              uint64_t v250 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<ImpulseAction>);
              uint64_t v372 = v413;
              uint64_t v373 = v414;
              uint64_t v374 = v415;
              uint64_t v375 = v416;
              uint64_t v251 = v29;
              uint64_t v252 = v30;
              uint64_t v353 = v248;
              char v354 = v247;
              uint64_t v278 = v88;
              char v355 = v245 & 1;
              char v356 = v246;
              uint64_t v357 = v249;
              uint64_t v275 = v250 & 1;
              uint64_t v358 = v250 & 1;
              v352[0] = v77;
              uint64_t v359 = v171;
              uint64_t v360 = v313;
              char v361 = v251;
              uint64_t v362 = v252;
              uint64_t v363 = Strong;
              uint64_t v364 = v320;
              uint64_t v365 = -1.0;
              uint64_t v366 = 0;
              uint64_t v367 = 0xBFF0000000000000;
              uint64_t v368 = 0;
              uint64_t v369 = 0xBFF0000000000000;
              uint64_t v370 = 0;
              uint64_t v371 = v412;
              uint64_t v376 = v307;
              swift_retain();
              swift_retain();
              a5(v352);
              outlined consume of OrbitEntityAction?(v248, v247, v245);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              char v377 = v77;
              char v378 = v248;
              uint64_t v379 = v247;
              uint64_t v380 = v245 & 1;
              unint64_t v381 = v246;
              uint64_t v382 = v249;
              char v383 = v275;
              uint64_t v384 = v171;
              uint64_t v385 = v313;
              uint64_t v386 = v251;
              unint64_t v387 = v252;
              unint64_t v388 = Strong;
              uint64_t v389 = v320;
              char v390 = -1.0;
              uint64_t v391 = 0;
              uint64_t v392 = 0xBFF0000000000000;
              uint64_t v393 = 0;
              unint64_t v394 = 0xBFF0000000000000;
              uint64_t v395 = 0;
              unint64_t v396 = v345;
              uint64_t v397 = 0;
              uint64_t v398 = v298;
              uint64_t v399 = v333;
              unint64_t v400 = v340;
              uint64_t v401 = v292;
              uint64_t v402 = v288;
              uint64_t v403 = v326;
              uint64_t v253 = v87;
LABEL_192:
              uint64_t v404 = v253;
              uint64_t v405 = v278;
              char v192 = v307;
              goto LABEL_193;
            }
            double v168 = v86;
            uint64_t v169 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v170 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_231:
                __break(1u);
                goto LABEL_232;
              }
              uint64_t v243 = specialized static Entity.entityInfoType(_:)(v169);
              if (v243)
              {
                uint64_t v171 = (*(uint64_t (**)(void))(v243 + 232))();
                uint64_t v244 = *(void *)(v171 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v244, 0);
                *(void *)(v171 + 16) = v169;
                MEMORY[0x22A68E750](v169, v171);
                swift_release();
                goto LABEL_181;
              }
              uint64_t v170 = makeEntity(for:)(v169);
            }
            uint64_t v171 = v170;
LABEL_181:
            uint64_t v86 = v168;
            goto LABEL_182;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v333 = 0;
        uint64_t v340 = 0;
        uint64_t v85 = 0;
        uint64_t v86 = 0;
        uint64_t v326 = 0;
        uint64_t v87 = 0;
        uint64_t v88 = 0;
        goto LABEL_102;
      }
LABEL_222:
      __break(1u);
      goto LABEL_223;
    case 8:
      float v32 = *(void *)a2;
      float v31 = *(void *)(a2 + 8);
      uint64_t v335 = *(void *)(a2 + 32);
      uint64_t v33 = *(void *)(a2 + 56);
      uint64_t v34 = *(float *)(a2 + 64);
      uint64_t v35 = *(float *)(a2 + 68);
      uint64_t v297 = *(unsigned char *)(a2 + 72);
      uint64_t v307 = *(void *)(a2 + 48);
      uint64_t v314 = *(void *)(a2 + 80);
      uint64_t v321 = *(void *)(a2 + 88);
      uint64_t v346 = *(void *)(a2 + 40);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v89 = specialized static Entity.entityInfoType(_:)(v32);
        if (v89)
        {
          uint64_t v90 = (*(uint64_t (**)(void))(v89 + 232))();
          uint64_t v91 = *(void *)(v90 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v91, 0);
          *(void *)(v90 + 16) = v32;
          MEMORY[0x22A68E750](v32, v90);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v32);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v92 = swift_allocObject();
        swift_weakInit();
        *(void *)(v92 + 16) = v31;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v93 = String.init(cString:)();
        unint64_t v95 = v94;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        char v96 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v97 = specialized __RawDictionaryStorage.find<A>(_:)(v93, v95);
          if (v98)
          {
            uint64_t v99 = (uint64_t *)(*(void *)(v96 + 56) + 56 * v97);
            uint64_t v100 = v99[2];
            uint64_t v327 = v99[1];
            uint64_t v334 = *v99;
            uint64_t v101 = v99[3];
            uint64_t v102 = v99[4];
            uint64_t v104 = v99[5];
            uint64_t v103 = v99[6];
            swift_bridgeObjectRelease();
            goto LABEL_110;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v327 = 0;
        uint64_t v334 = 0;
        uint64_t v100 = 0;
        uint64_t v101 = 0;
        uint64_t v102 = 0;
        uint64_t v104 = 0;
        uint64_t v103 = 0;
LABEL_110:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&uint64_t v412 = v335;
        BYTE8(v412) = 0;
        *(void *)&uint64_t v413 = v346;
        *((void *)&v413 + 1) = v334;
        *(void *)&uint64_t v414 = v327;
        *((void *)&v414 + 1) = v100;
        *(void *)&uint64_t v415 = v101;
        *((void *)&v415 + 1) = v102;
        *(void *)&uint64_t v416 = v104;
        *((void *)&v416 + 1) = v103;
        uint64_t v293 = v100;
        if (v33)
        {
          if (REBindPointBoundComponent())
          {
            uint64_t v172 = v101;
            uint64_t v173 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v174 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_232:
                __break(1u);
                goto LABEL_233;
              }
              uint64_t v254 = specialized static Entity.entityInfoType(_:)(v173);
              if (v254)
              {
                uint64_t v255 = (*(uint64_t (**)(void))(v254 + 232))();
                uint64_t v256 = *(void *)(v255 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v256, 0);
                *(void *)(v255 + 16) = v173;
                MEMORY[0x22A68E750](v173, v255);
                swift_release();
                uint64_t v101 = v172;
                uint64_t v33 = v255;
                goto LABEL_188;
              }
              uint64_t v174 = makeEntity(for:)(v173);
            }
            uint64_t v101 = v172;
            uint64_t v33 = v174;
          }
          else
          {
            uint64_t v33 = 0;
          }
        }
LABEL_188:
        specialized ActionEventData.action<A>()((uint64_t)&v407);
        uint64_t v257 = v409;
        if ((_BYTE)v409 == 0xFF) {
          goto LABEL_189;
        }
        uint64_t v258 = v410;
        uint64_t v289 = v101;
        uint64_t v259 = v408;
        uint64_t v260 = v407;
        uint64_t v261 = v411;
        swift_retain();
        outlined copy of OrbitEntityAction?(v260, v259, v257);
        uint64_t v262 = specialized ActionEventData.parameter<A>(type:)(&demangling cache variable for type metadata for EntityActionParameterWrapper<ImpulseAction>);
        uint64_t v372 = v413;
        uint64_t v373 = v414;
        uint64_t v374 = v415;
        uint64_t v375 = v416;
        uint64_t v263 = v34;
        uint64_t v264 = v35;
        uint64_t v353 = v260;
        char v354 = v259;
        uint64_t v278 = v103;
        char v355 = v257 & 1;
        char v356 = v258;
        uint64_t v357 = v261;
        uint64_t v273 = v262 & 1;
        uint64_t v358 = v262 & 1;
        v352[0] = v92;
        uint64_t v359 = v33;
        uint64_t v360 = v297;
        char v361 = v263;
        uint64_t v362 = v264;
        uint64_t v364 = 0;
        uint64_t v365 = 0.0;
        uint64_t v363 = Strong;
        uint64_t v366 = 1;
        uint64_t v367 = v314;
        uint64_t v368 = 0;
        uint64_t v369 = v321;
        uint64_t v370 = 0;
        uint64_t v371 = v412;
        uint64_t v376 = v307;
        swift_retain();
        swift_retain();
        a5(v352);
        outlined consume of OrbitEntityAction?(v260, v259, v257);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        char v377 = v92;
        char v378 = v260;
        uint64_t v379 = v259;
        uint64_t v380 = v257 & 1;
        unint64_t v381 = v258;
        uint64_t v382 = v261;
        char v383 = v273;
        uint64_t v384 = v33;
        uint64_t v385 = v297;
        uint64_t v386 = v263;
        unint64_t v387 = v264;
        char v390 = 0.0;
        unint64_t v388 = Strong;
        uint64_t v389 = 0;
        uint64_t v391 = 1;
        uint64_t v392 = v314;
        uint64_t v393 = 0;
        unint64_t v394 = v321;
        uint64_t v395 = 0;
        unint64_t v396 = v335;
        uint64_t v397 = 0;
        uint64_t v398 = v346;
        uint64_t v399 = v334;
        unint64_t v400 = v327;
        uint64_t v401 = v293;
        uint64_t v402 = v289;
        uint64_t v403 = v102;
        uint64_t v253 = v104;
        goto LABEL_192;
      }
LABEL_223:
      __break(1u);
      goto LABEL_224;
    case 16:
      uint64_t v37 = *(void *)a2;
      uint64_t v36 = *(void *)(a2 + 8);
      char v347 = *(void *)(a2 + 40);
      uint64_t v323 = *(void *)(a2 + 48);
      uint64_t v329 = *(void *)(a2 + 32);
      uint64_t v336 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_224:
        __break(1u);
        goto LABEL_225;
      }
      uint64_t v105 = specialized static Entity.entityInfoType(_:)(v37);
      if (v105)
      {
        uint64_t v106 = (*(uint64_t (**)(void))(v105 + 232))();
        uint64_t v107 = *(void *)(v106 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v107, 0);
        *(void *)(v106 + 16) = v37;
        MEMORY[0x22A68E750](v37, v106);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v37);
      }
LABEL_57:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v108 = swift_allocObject();
      swift_weakInit();
      *(void *)(v108 + 16) = v36;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v109 = String.init(cString:)();
      uint64_t v111 = v110;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v112 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_116;
      }
      swift_bridgeObjectRetain();
      char v113 = specialized __RawDictionaryStorage.find<A>(_:)(v109, v111);
      if ((v114 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_116:
        uint64_t v116 = 0;
        uint64_t v117 = 0;
        uint64_t v119 = 0;
        uint64_t v118 = 0;
        uint64_t v120 = 0;
        uint64_t v121 = 0;
        uint64_t v122 = 0;
        goto LABEL_117;
      }
      uint64_t v115 = (uint64_t *)(*(void *)(v112 + 56) + 56 * v113);
      uint64_t v116 = *v115;
      uint64_t v117 = v115[1];
      uint64_t v119 = v115[2];
      uint64_t v118 = v115[3];
      uint64_t v120 = v115[4];
      uint64_t v121 = v115[5];
      uint64_t v122 = v115[6];
      swift_bridgeObjectRelease();
LABEL_117:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v412 = 0;
      BYTE8(v412) = 0;
      *(void *)&uint64_t v413 = v347;
      *((void *)&v413 + 1) = v116;
      *(void *)&uint64_t v414 = v117;
      *((void *)&v414 + 1) = v119;
      *(void *)&uint64_t v415 = v118;
      *((void *)&v415 + 1) = v120;
      *(void *)&uint64_t v416 = v121;
      *((void *)&v416 + 1) = v122;
      uint64_t v308 = v120;
      char v315 = v118;
      uint64_t v303 = v122;
      if (v336 && REBindPointBoundComponent())
      {
        uint64_t v175 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v176 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_233:
            __break(1u);
            goto LABEL_234;
          }
          uint64_t v265 = specialized static Entity.entityInfoType(_:)(v175);
          if (v265)
          {
            char v177 = (*(uint64_t (**)(void))(v265 + 232))();
            uint64_t v266 = *(void *)(v177 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v266, 0);
            *(void *)(v177 + 16) = v175;
            MEMORY[0x22A68E750](v175, v177);
            swift_release();
            goto LABEL_123;
          }
          uint64_t v176 = makeEntity(for:)(v175);
        }
        char v177 = v176;
      }
      else
      {
        char v177 = 0;
      }
LABEL_123:
      specialized ActionEventData.action<A>()((uint64_t)&v407);
      double v178 = v409;
      if ((_BYTE)v409 == 0xFF) {
        goto LABEL_189;
      }
      uint64_t v372 = v413;
      uint64_t v373 = v414;
      uint64_t v374 = v415;
      uint64_t v375 = v416;
      double v179 = v410;
      uint64_t v294 = v119;
      uint64_t v299 = v117;
      uint64_t v180 = v408;
      uint64_t v181 = v407;
      uint64_t v182 = v411;
      uint64_t v353 = v407;
      char v354 = v408;
      char v283 = v409 & 1;
      char v355 = v409 & 1;
      char v356 = v410;
      uint64_t v357 = v411;
      uint64_t v358 = 1;
      v352[0] = v108;
      uint64_t v359 = v177;
      uint64_t v360 = 0;
      char v361 = 0.0;
      uint64_t v362 = 0.0;
      uint64_t v364 = 0;
      uint64_t v365 = 0.0;
      uint64_t v363 = Strong;
      uint64_t v366 = 1;
      uint64_t v367 = v329;
      uint64_t v368 = 0;
      uint64_t v369 = 0;
      uint64_t v370 = 1;
      uint64_t v371 = v412;
      uint64_t v376 = v323;
      swift_retain();
      swift_retain();
      outlined copy of OrbitEntityAction?(v181, v180, v178);
      swift_retain();
      a5(v352);
      outlined consume of OrbitEntityAction?(v181, v180, v178);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      char v377 = v108;
      char v378 = v181;
      uint64_t v379 = v180;
      uint64_t v380 = v283;
      unint64_t v381 = v179;
      uint64_t v382 = v182;
      char v383 = 1;
      uint64_t v384 = v177;
      uint64_t v385 = 0;
      unint64_t v387 = 0.0;
      uint64_t v386 = 0.0;
      char v390 = 0.0;
      unint64_t v388 = Strong;
      uint64_t v389 = 0;
      uint64_t v391 = 1;
      uint64_t v392 = v329;
      uint64_t v393 = 0;
      unint64_t v394 = 0;
      uint64_t v395 = 1;
      unint64_t v396 = 0;
      uint64_t v397 = 0;
      uint64_t v398 = v347;
      uint64_t v399 = v116;
      unint64_t v400 = v299;
      uint64_t v401 = v294;
      uint64_t v402 = v315;
      uint64_t v403 = v308;
      uint64_t v404 = v121;
      uint64_t v183 = v303;
LABEL_136:
      uint64_t v405 = v183;
      char v192 = v323;
LABEL_193:
      uint64_t v406 = v192;
      outlined release of ActionEvent<OrbitEntityAction>((uint64_t)&v377);
      return 0;
    case 32:
      uint64_t v39 = *(void *)a2;
      uint64_t v38 = *(void *)(a2 + 8);
      char v348 = *(void *)(a2 + 40);
      uint64_t v323 = *(void *)(a2 + 48);
      uint64_t v330 = *(void *)(a2 + 32);
      uint64_t v337 = *(void *)(a2 + 56);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          goto LABEL_226;
        }
        uint64_t v123 = specialized static Entity.entityInfoType(_:)(v39);
        if (v123)
        {
          uint64_t v124 = (*(uint64_t (**)(void))(v123 + 232))();
          uint64_t v125 = *(void *)(v124 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v125, 0);
          *(void *)(v124 + 16) = v39;
          MEMORY[0x22A68E750](v39, v124);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v39);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v126 = swift_allocObject();
      swift_weakInit();
      *(void *)(v126 + 16) = v38;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v127 = String.init(cString:)();
      uint64_t v129 = v128;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v130 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_126;
      }
      swift_bridgeObjectRetain();
      char v131 = specialized __RawDictionaryStorage.find<A>(_:)(v127, v129);
      if (v132)
      {
        uint64_t v133 = (uint64_t *)(*(void *)(v130 + 56) + 56 * v131);
        uint64_t v134 = *v133;
        uint64_t v135 = v133[1];
        uint64_t v137 = v133[2];
        uint64_t v136 = v133[3];
        uint64_t v138 = v133[4];
        uint64_t v139 = v133[5];
        uint64_t v140 = v133[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_126:
        uint64_t v134 = 0;
        uint64_t v135 = 0;
        uint64_t v137 = 0;
        uint64_t v136 = 0;
        uint64_t v138 = 0;
        uint64_t v139 = 0;
        uint64_t v140 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&uint64_t v412 = 0;
      BYTE8(v412) = 0;
      *(void *)&uint64_t v413 = v348;
      *((void *)&v413 + 1) = v134;
      *(void *)&uint64_t v414 = v135;
      *((void *)&v414 + 1) = v137;
      *(void *)&uint64_t v415 = v136;
      *((void *)&v415 + 1) = v138;
      *(void *)&uint64_t v416 = v139;
      *((void *)&v416 + 1) = v140;
      uint64_t v309 = v138;
      uint64_t v316 = v136;
      if (v337 && REBindPointBoundComponent())
      {
        uint64_t v184 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v185 = swift_dynamicCastClassUnconditional();
        }
        else
        {
          if (REEntityIsBeingDestroyed())
          {
LABEL_234:
            __break(1u);
            goto LABEL_235;
          }
          uint64_t v267 = specialized static Entity.entityInfoType(_:)(v184);
          if (v267)
          {
            uint64_t v186 = (*(uint64_t (**)(void))(v267 + 232))();
            uint64_t v268 = *(void *)(v186 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v268, 0);
            *(void *)(v186 + 16) = v184;
            MEMORY[0x22A68E750](v184, v186);
            swift_release();
            goto LABEL_133;
          }
          uint64_t v185 = makeEntity(for:)(v184);
        }
        uint64_t v186 = v185;
      }
      else
      {
        uint64_t v186 = 0;
      }
LABEL_133:
      specialized ActionEventData.action<A>()((uint64_t)&v407);
      uint64_t v187 = v409;
      if ((_BYTE)v409 == 0xFF) {
        goto LABEL_189;
      }
      uint64_t v372 = v413;
      uint64_t v373 = v414;
      uint64_t v374 = v415;
      uint64_t v375 = v416;
      uint64_t v342 = v140;
      uint64_t v188 = v410;
      uint64_t v300 = v135;
      uint64_t v189 = v408;
      char v295 = v137;
      uint64_t v190 = v407;
      uint64_t v191 = v411;
      uint64_t v353 = v407;
      char v354 = v408;
      uint64_t v284 = v409 & 1;
      char v355 = v409 & 1;
      char v356 = v410;
      uint64_t v357 = v411;
      uint64_t v358 = 1;
      v352[0] = v126;
      uint64_t v359 = v186;
      uint64_t v360 = 0;
      char v361 = 0.0;
      uint64_t v362 = 0.0;
      uint64_t v364 = 0;
      uint64_t v365 = 0.0;
      uint64_t v363 = Strong;
      uint64_t v366 = 1;
      uint64_t v367 = v330;
      uint64_t v368 = 0;
      uint64_t v369 = 0;
      uint64_t v370 = 1;
      uint64_t v371 = v412;
      uint64_t v376 = v323;
      swift_retain();
      swift_retain();
      outlined copy of OrbitEntityAction?(v190, v189, v187);
      swift_retain();
      a5(v352);
      outlined consume of OrbitEntityAction?(v190, v189, v187);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      char v377 = v126;
      char v378 = v190;
      uint64_t v379 = v189;
      uint64_t v380 = v284;
      unint64_t v381 = v188;
      uint64_t v382 = v191;
      char v383 = 1;
      uint64_t v384 = v186;
      uint64_t v385 = 0;
      unint64_t v387 = 0.0;
      uint64_t v386 = 0.0;
      char v390 = 0.0;
      unint64_t v388 = Strong;
      uint64_t v389 = 0;
      uint64_t v391 = 1;
      uint64_t v392 = v330;
      uint64_t v393 = 0;
      unint64_t v394 = 0;
      uint64_t v395 = 1;
      unint64_t v396 = 0;
      uint64_t v397 = 0;
      uint64_t v398 = v348;
      uint64_t v399 = v134;
      unint64_t v400 = v300;
      uint64_t v401 = v295;
      uint64_t v402 = v316;
      uint64_t v403 = v309;
      uint64_t v404 = v139;
      uint64_t v183 = v342;
      goto LABEL_136;
    case 64:
      uint64_t v41 = *(void *)a2;
      uint64_t v40 = *(void *)(a2 + 8);
      uint64_t v42 = *(void *)(a2 + 24);
      uint64_t v43 = *(void *)(a2 + 40);
      uint64_t v328 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          goto LABEL_227;
        }
        uint64_t v141 = specialized static Entity.entityInfoType(_:)(v41);
        if (v141)
        {
          uint64_t v142 = (*(uint64_t (**)(void))(v141 + 232))();
          uint64_t v143 = *(void *)(v142 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v143, 0);
          *(void *)(v142 + 16) = v41;
          MEMORY[0x22A68E750](v41, v142);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v41);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v144 = swift_allocObject();
      swift_weakInit();
      *(void *)(v144 + 16) = v40;
      swift_beginAccess();
      swift_weakAssign();
      if (v43 && REBindPointBoundComponent())
      {
        uint64_t v145 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v146 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v147 = v146;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_228:
          __break(1u);
LABEL_229:
          __break(1u);
          goto LABEL_230;
        }
        uint64_t v219 = specialized static Entity.entityInfoType(_:)(v145);
        if (!v219)
        {
          uint64_t v146 = makeEntity(for:)(v145);
          goto LABEL_77;
        }
        uint64_t v147 = (*(uint64_t (**)(void))(v219 + 232))();
        uint64_t v220 = *(void *)(v147 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v220, 0);
        *(void *)(v147 + 16) = v145;
        MEMORY[0x22A68E750](v145, v147);
        swift_release();
      }
      else
      {
        uint64_t v147 = 0;
      }
LABEL_79:
      uint64_t v148 = String.init(cString:)();
      uint64_t v150 = v149;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v151 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v152 = specialized __RawDictionaryStorage.find<A>(_:)(v148, v150);
        if (v153)
        {
          double v154 = (uint64_t *)(*(void *)(v151 + 56) + 56 * v152);
          double v155 = *v154;
          uint64_t v156 = v154[1];
          uint64_t v158 = v154[2];
          uint64_t v157 = v154[3];
          uint64_t v159 = v154[4];
          char v341 = v154[6];
          char v349 = v154[5];
          swift_bridgeObjectRelease();
LABEL_139:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v412 = 0;
          BYTE8(v412) = 0;
          *(void *)&uint64_t v413 = v42;
          *((void *)&v413 + 1) = v155;
          *(void *)&uint64_t v414 = v156;
          *((void *)&v414 + 1) = v158;
          uint64_t v317 = v159;
          uint64_t v322 = v157;
          *(void *)&uint64_t v415 = v157;
          *((void *)&v415 + 1) = v159;
          *(void *)&uint64_t v416 = v349;
          *((void *)&v416 + 1) = v341;
          specialized ActionEventData.action<A>()((uint64_t)&v407);
          double v193 = v409;
          if ((_BYTE)v409 == 0xFF) {
            goto LABEL_189;
          }
          uint64_t v372 = v413;
          uint64_t v373 = v414;
          uint64_t v374 = v415;
          uint64_t v375 = v416;
          char v301 = v42;
          uint64_t v304 = v155;
          double v194 = v410;
          uint64_t v310 = v158;
          uint64_t v195 = v408;
          uint64_t v196 = v407;
          uint64_t v296 = v156;
          uint64_t v197 = v144;
          uint64_t v198 = Strong;
          uint64_t v199 = v411;
          uint64_t v353 = v407;
          char v354 = v408;
          uint64_t v287 = v409 & 1;
          char v355 = v409 & 1;
          char v356 = v410;
          uint64_t v357 = v411;
          uint64_t v358 = 1;
          v352[0] = v197;
          uint64_t v359 = v147;
          uint64_t v360 = 0;
          char v361 = 0.0;
          uint64_t v362 = 0.0;
          uint64_t v364 = 0;
          uint64_t v365 = 0.0;
          uint64_t v363 = Strong;
          uint64_t v366 = 1;
          uint64_t v367 = 0;
          uint64_t v368 = 1;
          uint64_t v369 = 0;
          uint64_t v370 = 1;
          uint64_t v371 = v412;
          uint64_t v376 = v328;
          swift_retain();
          swift_retain();
          outlined copy of OrbitEntityAction?(v196, v195, v193);
          swift_retain();
          a5(v352);
          outlined consume of OrbitEntityAction?(v196, v195, v193);
          swift_release();
LABEL_161:
          swift_release();
          swift_release();
          swift_release();
          char v377 = v197;
          char v378 = v196;
          uint64_t v379 = v195;
          uint64_t v380 = v287;
          unint64_t v381 = v194;
          uint64_t v382 = v199;
          char v383 = 1;
          uint64_t v384 = v147;
          uint64_t v385 = 0;
          unint64_t v387 = 0.0;
          uint64_t v386 = 0.0;
          char v390 = 0.0;
          unint64_t v388 = v198;
          uint64_t v389 = 0;
          uint64_t v391 = 1;
          uint64_t v392 = 0;
          uint64_t v393 = 1;
          unint64_t v394 = 0;
          uint64_t v395 = 1;
          unint64_t v396 = 0;
          uint64_t v397 = 0;
          uint64_t v398 = v301;
          uint64_t v399 = v304;
          unint64_t v400 = v296;
          uint64_t v401 = v310;
          uint64_t v402 = v322;
          uint64_t v403 = v317;
          uint64_t v404 = v349;
          uint64_t v405 = v341;
          char v192 = v328;
          goto LABEL_193;
        }
        swift_bridgeObjectRelease();
      }
      double v155 = 0;
      uint64_t v156 = 0;
      uint64_t v158 = 0;
      uint64_t v157 = 0;
      uint64_t v159 = 0;
      char v341 = 0;
      char v349 = 0;
      goto LABEL_139;
    default:
      if (a4 != 128) {
        goto LABEL_190;
      }
      uint64_t v15 = *(void *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v16 = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 40);
      uint64_t v328 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_227:
          __break(1u);
          goto LABEL_228;
        }
        uint64_t v200 = specialized static Entity.entityInfoType(_:)(v15);
        if (v200)
        {
          uint64_t v201 = (*(uint64_t (**)(void))(v200 + 232))();
          uint64_t v202 = *(void *)(v201 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v202, 0);
          *(void *)(v201 + 16) = v15;
          MEMORY[0x22A68E750](v15, v201);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v15);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v203 = swift_allocObject();
      swift_weakInit();
      *(void *)(v203 + 16) = v14;
      swift_beginAccess();
      swift_weakAssign();
      if (v17 && REBindPointBoundComponent())
      {
        uint64_t v204 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v205 = swift_dynamicCastClassUnconditional();
LABEL_148:
          uint64_t v147 = v205;
          goto LABEL_150;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_235:
          __break(1u);
          JUMPOUT(0x227FBD68CLL);
        }
        uint64_t v269 = specialized static Entity.entityInfoType(_:)(v204);
        if (!v269)
        {
          uint64_t v205 = makeEntity(for:)(v204);
          goto LABEL_148;
        }
        uint64_t v147 = (*(uint64_t (**)(void))(v269 + 232))();
        uint64_t v270 = *(void *)(v147 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v270, 0);
        *(void *)(v147 + 16) = v204;
        MEMORY[0x22A68E750](v204, v147);
        swift_release();
      }
      else
      {
        uint64_t v147 = 0;
      }
LABEL_150:
      uint64_t v206 = String.init(cString:)();
      uint64_t v208 = v207;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v209 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v210 = specialized __RawDictionaryStorage.find<A>(_:)(v206, v208);
        if (v211)
        {
          uint64_t v212 = (uint64_t *)(*(void *)(v209 + 56) + 56 * v210);
          uint64_t v213 = *v212;
          uint64_t v214 = v212[1];
          uint64_t v216 = v212[2];
          uint64_t v215 = v212[3];
          unint64_t v217 = v212[4];
          char v341 = v212[6];
          char v349 = v212[5];
          swift_bridgeObjectRelease();
LABEL_158:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v412 = 0;
          BYTE8(v412) = 0;
          *(void *)&uint64_t v413 = v16;
          *((void *)&v413 + 1) = v213;
          *(void *)&uint64_t v414 = v214;
          *((void *)&v414 + 1) = v216;
          uint64_t v317 = v217;
          uint64_t v322 = v215;
          *(void *)&uint64_t v415 = v215;
          *((void *)&v415 + 1) = v217;
          *(void *)&uint64_t v416 = v349;
          *((void *)&v416 + 1) = v341;
          specialized ActionEventData.action<A>()((uint64_t)&v407);
          char v218 = v409;
          if ((_BYTE)v409 == 0xFF) {
            goto LABEL_189;
          }
          uint64_t v372 = v413;
          uint64_t v373 = v414;
          uint64_t v374 = v415;
          uint64_t v375 = v416;
          char v301 = v16;
          uint64_t v304 = v213;
          double v194 = v410;
          uint64_t v310 = v216;
          uint64_t v195 = v408;
          uint64_t v196 = v407;
          uint64_t v296 = v214;
          uint64_t v197 = v203;
          uint64_t v198 = Strong;
          uint64_t v199 = v411;
          uint64_t v353 = v407;
          char v354 = v408;
          uint64_t v287 = v409 & 1;
          char v355 = v409 & 1;
          char v356 = v410;
          uint64_t v357 = v411;
          uint64_t v358 = 1;
          v352[0] = v197;
          uint64_t v359 = v147;
          uint64_t v360 = 0;
          char v361 = 0.0;
          uint64_t v362 = 0.0;
          uint64_t v364 = 0;
          uint64_t v365 = 0.0;
          uint64_t v363 = Strong;
          uint64_t v366 = 1;
          uint64_t v367 = 0;
          uint64_t v368 = 1;
          uint64_t v369 = 0;
          uint64_t v370 = 1;
          uint64_t v371 = v412;
          uint64_t v376 = v328;
          swift_retain();
          swift_retain();
          outlined copy of OrbitEntityAction?(v196, v195, v218);
          swift_retain();
          a5(v352);
          swift_release();
          outlined consume of OrbitEntityAction?(v196, v195, v218);
          goto LABEL_161;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v213 = 0;
      uint64_t v214 = 0;
      uint64_t v216 = 0;
      uint64_t v215 = 0;
      unint64_t v217 = 0;
      char v341 = 0;
      char v349 = 0;
      goto LABEL_158;
  }
}

uint64_t specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t *a9)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v13 = *(void *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v350 = *(void *)(a2 + 32);
      uint64_t v356 = *(void *)(a2 + 40);
      uint64_t v15 = *(void *)(a2 + 64);
      uint64_t v332 = *(void *)(a2 + 56);
      uint64_t v338 = *(void *)(a2 + 48);
      float v16 = *(float *)(a2 + 72);
      float v17 = *(float *)(a2 + 76);
      char v312 = *(unsigned char *)(a2 + 80);
      unint64_t v318 = *(void *)(a2 + 88);
      unint64_t v324 = *(void *)(a2 + 96);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_214;
      }
      uint64_t v44 = specialized static Entity.entityInfoType(_:)(v13);
      if (v44)
      {
        uint64_t v45 = (*(uint64_t (**)(void))(v44 + 232))();
        uint64_t v46 = *(void *)(v45 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v46, 0);
        *(void *)(v45 + 16) = v13;
        MEMORY[0x22A68E750](v13, v45);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v13);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v47 = swift_allocObject();
      swift_weakInit();
      *(void *)(v47 + 16) = v14;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v48 = String.init(cString:)();
      uint64_t v50 = v49;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v51 = static AnimationResource.codableActionTypeMap;
      uint64_t v366 = a8;
      uint64_t v375 = a7;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_85;
      }
      swift_bridgeObjectRetain();
      unint64_t v52 = specialized __RawDictionaryStorage.find<A>(_:)(v48, v50);
      if ((v53 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_85:
        uint64_t v347 = 0;
        uint64_t v55 = 0;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v59 = 0;
        uint64_t v58 = 0;
        uint64_t v60 = 0;
        goto LABEL_86;
      }
      uint64_t v54 = (uint64_t *)(*(void *)(v51 + 56) + 56 * v52);
      uint64_t v55 = v54[1];
      uint64_t v347 = *v54;
      uint64_t v56 = v54[2];
      uint64_t v57 = v54[3];
      uint64_t v59 = v54[4];
      uint64_t v58 = v54[5];
      uint64_t v60 = v54[6];
      swift_bridgeObjectRelease();
LABEL_86:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v453 = v350;
      BYTE8(v453) = 0;
      *(void *)&long long v454 = v356;
      *((void *)&v454 + 1) = v347;
      *(void *)&long long v455 = v55;
      *((void *)&v455 + 1) = v56;
      *(void *)&long long v456 = v57;
      *((void *)&v456 + 1) = v59;
      *(void *)&long long v457 = v58;
      *((void *)&v457 + 1) = v60;
      uint64_t v296 = v56;
      uint64_t v301 = v55;
      uint64_t v285 = v59;
      uint64_t v291 = v57;
      uint64_t v282 = v58;
      if (!v15 || !REBindPointBoundComponent())
      {
        uint64_t v162 = 0;
        goto LABEL_92;
      }
      uint64_t Entity = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v161 = swift_dynamicCastClassUnconditional();
LABEL_90:
        uint64_t v162 = v161;
        goto LABEL_92;
      }
      if (REEntityIsBeingDestroyed()) {
        goto LABEL_222;
      }
      uint64_t v249 = specialized static Entity.entityInfoType(_:)(Entity);
      if (!v249)
      {
        uint64_t v161 = makeEntity(for:)(Entity);
        goto LABEL_90;
      }
      uint64_t v162 = (*(uint64_t (**)(void))(v249 + 232))();
      uint64_t v250 = *(void *)(v162 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v250, 0);
      *(void *)(v162 + 16) = Entity;
      MEMORY[0x22A68E750](Entity, v162);
      swift_release();
LABEL_92:
      specialized ActionEventData.action<A>()(v375, v366, (uint64_t)&v445);
      uint64_t v163 = v449;
      if (!v449) {
        goto LABEL_192;
      }
      char v273 = v452;
      uint64_t v164 = v451;
      uint64_t v165 = v450;
      uint64_t v166 = v448;
      uint64_t v167 = v447;
      uint64_t v168 = v446;
      uint64_t v276 = v47;
      uint64_t v169 = v445;
      uint64_t v370 = v445;
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v169, v168, v167, v166, v163);
      char v170 = specialized ActionEventData.parameter<A>(type:)(a9);
      long long v407 = v454;
      long long v408 = v455;
      long long v409 = v456;
      long long v410 = v457;
      double v171 = v16;
      double v172 = v17;
      char v387 = v167 & 1;
      uint64_t v388 = v166;
      uint64_t v389 = v163;
      uint64_t v390 = v165;
      uint64_t v391 = v164;
      char v392 = v273 & 1;
      char v270 = v170 & 1;
      char v393 = v170 & 1;
      uint64_t v385 = v370;
      uint64_t v386 = v168;
      v384[0] = v276;
      uint64_t v394 = v162;
      char v395 = v312;
      double v396 = v171;
      double v397 = v172;
      uint64_t v398 = Strong;
      uint64_t v399 = v332;
      double v400 = -1.0;
      char v401 = 0;
      unint64_t v402 = v318;
      char v403 = 0;
      unint64_t v404 = v324;
      char v405 = 0;
      long long v406 = v453;
      uint64_t v411 = v338;
      swift_retain();
      swift_retain();
      a5(v384);
      outlined consume of SetEntityPropertyAction<Transform>?(v370, v168, v167, v166, v163);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v412 = v276;
      uint64_t v413 = v370;
      uint64_t v414 = v168;
      char v415 = v167 & 1;
      uint64_t v416 = v166;
      uint64_t v417 = v163;
      uint64_t v418 = v165;
      uint64_t v419 = v164;
      char v420 = v273 & 1;
      char v421 = v270;
      uint64_t v422 = v162;
      char v423 = v312;
      double v424 = v171;
      double v425 = v172;
      uint64_t v426 = Strong;
      uint64_t v427 = v332;
      double v428 = -1.0;
      char v429 = 0;
      unint64_t v430 = v318;
      char v431 = 0;
      unint64_t v432 = v324;
      char v433 = 0;
      uint64_t v434 = v350;
      char v435 = 0;
      uint64_t v436 = v356;
      uint64_t v437 = v347;
      uint64_t v438 = v301;
      uint64_t v439 = v296;
      uint64_t v440 = v291;
      uint64_t v441 = v285;
      uint64_t v442 = v282;
      uint64_t v443 = v60;
      uint64_t v173 = v338;
LABEL_191:
      uint64_t v444 = v173;
      outlined release of ActionEvent<SetEntityPropertyAction<simd_quatf>>((uint64_t)&v412);
      return 0;
    case 2:
      uint64_t v22 = *(void *)a2;
      uint64_t v23 = *(void *)(a2 + 8);
      uint64_t v351 = *(void *)(a2 + 32);
      uint64_t v357 = *(void *)(a2 + 40);
      float v24 = *(float *)(a2 + 56);
      unint64_t v334 = *(void *)(a2 + 64);
      unint64_t v339 = *(void *)(a2 + 48);
      uint64_t v325 = *(void *)(a2 + 72);
      uint64_t v25 = *(void *)(a2 + 88);
      uint64_t v344 = *(void *)(a2 + 80);
      float v26 = *(float *)(a2 + 96);
      float v27 = *(float *)(a2 + 100);
      char v319 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_214:
          __break(1u);
          goto LABEL_215;
        }
        uint64_t v61 = specialized static Entity.entityInfoType(_:)(v22);
        if (v61)
        {
          uint64_t v62 = (*(uint64_t (**)(void))(v61 + 232))();
          uint64_t v63 = *(void *)(v62 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v63, 0);
          *(void *)(v62 + 16) = v22;
          MEMORY[0x22A68E750](v22, v62);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v22);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v313 = swift_allocObject();
      swift_weakInit();
      *(void *)(v313 + 16) = v23;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v64 = String.init(cString:)();
      uint64_t v66 = v65;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      uint64_t v376 = a7;
      swift_beginAccess();
      uint64_t v67 = static AnimationResource.codableActionTypeMap;
      uint64_t v367 = a8;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_96;
      }
      swift_bridgeObjectRetain();
      unint64_t v68 = specialized __RawDictionaryStorage.find<A>(_:)(v64, v66);
      if (v69)
      {
        uint64_t v70 = (uint64_t *)(*(void *)(v67 + 56) + 56 * v68);
        uint64_t v71 = *v70;
        uint64_t v72 = v70[1];
        uint64_t v73 = v70[2];
        uint64_t v74 = v70[3];
        uint64_t v75 = v70[4];
        uint64_t v76 = v70[5];
        uint64_t v77 = v70[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_96:
        uint64_t v71 = 0;
        uint64_t v72 = 0;
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        uint64_t v76 = 0;
        uint64_t v77 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v453 = v351;
      BYTE8(v453) = 0;
      *(void *)&long long v454 = v357;
      *((void *)&v454 + 1) = v71;
      *(void *)&long long v455 = v72;
      *((void *)&v455 + 1) = v73;
      *(void *)&long long v456 = v74;
      *((void *)&v456 + 1) = v75;
      *(void *)&long long v457 = v76;
      *((void *)&v457 + 1) = v77;
      uint64_t v297 = v72;
      uint64_t v302 = v71;
      uint64_t v286 = v74;
      uint64_t v280 = v76;
      uint64_t v277 = v77;
      if (v25 && REBindPointBoundComponent())
      {
        uint64_t v174 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v175 = swift_dynamicCastClassUnconditional();
LABEL_101:
          uint64_t v306 = v175;
          goto LABEL_103;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        uint64_t v251 = specialized static Entity.entityInfoType(_:)(v174);
        if (!v251)
        {
          uint64_t v175 = makeEntity(for:)(v174);
          goto LABEL_101;
        }
        uint64_t v252 = (*(uint64_t (**)(void))(v251 + 232))();
        uint64_t v253 = *(void *)(v252 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v253, 0);
        *(void *)(v252 + 16) = v174;
        MEMORY[0x22A68E750](v174, v252);
        uint64_t v306 = v252;
        swift_release();
      }
      else
      {
        uint64_t v306 = 0;
      }
LABEL_103:
      specialized ActionEventData.action<A>()(v376, v367, (uint64_t)&v445);
      uint64_t v176 = v449;
      if (v449)
      {
        char v177 = v452;
        uint64_t v178 = v451;
        uint64_t v179 = v450;
        uint64_t v180 = v448;
        uint64_t v181 = v447;
        uint64_t v182 = v446;
        uint64_t v183 = v445;
        uint64_t v274 = v445;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v183, v182, v181, v180, v176);
        char v184 = specialized ActionEventData.parameter<A>(type:)(a9);
        long long v407 = v454;
        long long v408 = v455;
        long long v409 = v456;
        long long v410 = v457;
        double v185 = v26;
        double v186 = v27;
        double v187 = v24;
        char v387 = v181 & 1;
        uint64_t v388 = v180;
        uint64_t v389 = v176;
        uint64_t v390 = v179;
        uint64_t v391 = v178;
        char v392 = v177 & 1;
        char v271 = v184 & 1;
        char v393 = v184 & 1;
        uint64_t v385 = v274;
        uint64_t v386 = v182;
        v384[0] = v313;
        uint64_t v394 = v306;
        char v395 = v319;
        double v396 = v185;
        double v397 = v186;
        uint64_t v398 = Strong;
        uint64_t v399 = v325;
        double v400 = v187;
        char v401 = 0;
        unint64_t v402 = v339;
        char v403 = 0;
        unint64_t v404 = v334;
        char v405 = 0;
        long long v406 = v453;
        uint64_t v411 = v344;
        swift_retain();
        swift_retain();
        a5(v384);
        outlined consume of SetEntityPropertyAction<Transform>?(v274, v182, v181, v180, v176);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v412 = v313;
        uint64_t v413 = v274;
        uint64_t v414 = v182;
        char v415 = v181 & 1;
        uint64_t v416 = v180;
        uint64_t v417 = v176;
        uint64_t v418 = v179;
        uint64_t v419 = v178;
        char v420 = v177 & 1;
        char v421 = v271;
        uint64_t v422 = v306;
        char v423 = v319;
        double v424 = v185;
        double v425 = v186;
        uint64_t v426 = Strong;
        uint64_t v427 = v325;
        double v428 = v187;
        char v429 = 0;
        unint64_t v430 = v339;
        char v431 = 0;
        unint64_t v432 = v334;
        char v433 = 0;
        uint64_t v434 = v351;
        char v435 = 0;
        uint64_t v436 = v357;
        uint64_t v437 = v302;
        uint64_t v438 = v297;
        uint64_t v439 = v73;
        uint64_t v440 = v286;
        uint64_t v441 = v75;
        uint64_t v442 = v280;
        uint64_t v188 = v277;
LABEL_127:
        uint64_t v443 = v188;
        uint64_t v173 = v344;
        goto LABEL_191;
      }
      goto LABEL_192;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_193;
    case 4:
      uint64_t v28 = *(void *)a2;
      uint64_t v29 = *(void *)(a2 + 8);
      uint64_t v352 = *(void *)(a2 + 32);
      uint64_t v358 = *(void *)(a2 + 40);
      uint64_t v340 = *(void *)(a2 + 56);
      uint64_t v344 = *(void *)(a2 + 48);
      uint64_t v326 = *(void *)(a2 + 64);
      float v30 = *(float *)(a2 + 72);
      float v31 = *(float *)(a2 + 76);
      char v335 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        uint64_t v78 = specialized static Entity.entityInfoType(_:)(v28);
        if (v78)
        {
          uint64_t v79 = (*(uint64_t (**)(void))(v78 + 232))();
          uint64_t v80 = *(void *)(v79 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v80, 0);
          *(void *)(v79 + 16) = v28;
          MEMORY[0x22A68E750](v28, v79);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v28);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v320 = swift_allocObject();
      swift_weakInit();
      *(void *)(v320 + 16) = v29;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v81 = String.init(cString:)();
      uint64_t v83 = v82;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      char v377 = a7;
      swift_beginAccess();
      uint64_t v84 = static AnimationResource.codableActionTypeMap;
      uint64_t v368 = a8;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_107;
      }
      swift_bridgeObjectRetain();
      unint64_t v85 = specialized __RawDictionaryStorage.find<A>(_:)(v81, v83);
      if (v86)
      {
        uint64_t v87 = (uint64_t *)(*(void *)(v84 + 56) + 56 * v85);
        uint64_t v88 = *v87;
        uint64_t v89 = v87[1];
        uint64_t v90 = v87[2];
        uint64_t v91 = v87[3];
        uint64_t v92 = v87[4];
        uint64_t v93 = v87[5];
        uint64_t v94 = v87[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_107:
        uint64_t v88 = 0;
        uint64_t v89 = 0;
        uint64_t v90 = 0;
        uint64_t v91 = 0;
        uint64_t v92 = 0;
        uint64_t v93 = 0;
        uint64_t v94 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v453 = v352;
      BYTE8(v453) = 0;
      *(void *)&long long v454 = v358;
      *((void *)&v454 + 1) = v88;
      *(void *)&long long v455 = v89;
      *((void *)&v455 + 1) = v90;
      *(void *)&long long v456 = v91;
      *((void *)&v456 + 1) = v92;
      *(void *)&long long v457 = v93;
      *((void *)&v457 + 1) = v94;
      uint64_t v307 = v89;
      uint64_t v314 = v88;
      uint64_t v303 = v90;
      uint64_t v287 = v93;
      uint64_t v283 = v94;
      if (v326 && REBindPointBoundComponent())
      {
        uint64_t v189 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v190 = swift_dynamicCastClassUnconditional();
LABEL_112:
          uint64_t v329 = v190;
          goto LABEL_114;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          goto LABEL_225;
        }
        uint64_t v254 = specialized static Entity.entityInfoType(_:)(v189);
        if (!v254)
        {
          uint64_t v190 = makeEntity(for:)(v189);
          goto LABEL_112;
        }
        uint64_t v255 = (*(uint64_t (**)(void))(v254 + 232))();
        uint64_t v256 = *(void *)(v255 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v256, 0);
        *(void *)(v255 + 16) = v189;
        MEMORY[0x22A68E750](v189, v255);
        uint64_t v329 = v255;
        swift_release();
      }
      else
      {
        uint64_t v329 = 0;
      }
LABEL_114:
      specialized ActionEventData.action<A>()(v377, v368, (uint64_t)&v445);
      uint64_t v191 = v449;
      if (v449)
      {
        char v278 = v452;
        uint64_t v192 = v451;
        uint64_t v193 = v450;
        uint64_t v194 = v448;
        uint64_t v195 = v447;
        uint64_t v196 = v446;
        uint64_t v197 = v445;
        uint64_t v281 = v445;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v197, v196, v195, v194, v191);
        char v198 = specialized ActionEventData.parameter<A>(type:)(a9);
        long long v407 = v454;
        long long v408 = v455;
        long long v409 = v456;
        long long v410 = v457;
        double v199 = v30;
        double v200 = v31;
        char v387 = v195 & 1;
        uint64_t v388 = v194;
        uint64_t v389 = v191;
        uint64_t v390 = v193;
        uint64_t v391 = v192;
        char v392 = v278 & 1;
        char v272 = v198 & 1;
        char v393 = v198 & 1;
        uint64_t v385 = v281;
        uint64_t v386 = v196;
        v384[0] = v320;
        uint64_t v394 = v329;
        char v395 = v335;
        double v396 = v199;
        double v397 = v200;
        uint64_t v398 = Strong;
        uint64_t v399 = v340;
        double v400 = -1.0;
        char v401 = 0;
        unint64_t v402 = 0xBFF0000000000000;
        char v403 = 0;
        unint64_t v404 = 0xBFF0000000000000;
        char v405 = 0;
        long long v406 = v453;
        uint64_t v411 = v344;
        swift_retain();
        swift_retain();
        a5(v384);
        outlined consume of SetEntityPropertyAction<Transform>?(v281, v196, v195, v194, v191);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v412 = v320;
        uint64_t v413 = v281;
        uint64_t v414 = v196;
        char v415 = v195 & 1;
        uint64_t v416 = v194;
        uint64_t v417 = v191;
        uint64_t v418 = v193;
        uint64_t v419 = v192;
        char v420 = v278 & 1;
        char v421 = v272;
        uint64_t v422 = v329;
        char v423 = v335;
        double v424 = v199;
        double v425 = v200;
        uint64_t v426 = Strong;
        uint64_t v427 = v340;
        double v428 = -1.0;
        char v429 = 0;
        unint64_t v430 = 0xBFF0000000000000;
        char v431 = 0;
        unint64_t v432 = 0xBFF0000000000000;
        char v433 = 0;
        uint64_t v434 = v352;
        char v435 = 0;
        uint64_t v436 = v358;
        uint64_t v437 = v314;
        uint64_t v438 = v307;
        uint64_t v439 = v303;
        uint64_t v440 = v91;
        uint64_t v441 = v92;
        uint64_t v442 = v287;
        uint64_t v188 = v283;
        goto LABEL_127;
      }
LABEL_192:
      swift_release();
      swift_release();
      swift_release();
LABEL_193:
      swift_release();
      return 0;
    case 8:
      uint64_t v32 = *(void *)a2;
      uint64_t v33 = *(void *)(a2 + 8);
      uint64_t v353 = *(void *)(a2 + 32);
      uint64_t v359 = *(void *)(a2 + 40);
      uint64_t v34 = *(void *)(a2 + 56);
      float v35 = *(float *)(a2 + 64);
      float v36 = *(float *)(a2 + 68);
      char v327 = *(unsigned char *)(a2 + 72);
      unint64_t v336 = *(void *)(a2 + 80);
      unint64_t v341 = *(void *)(a2 + 88);
      uint64_t v344 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        uint64_t v95 = specialized static Entity.entityInfoType(_:)(v32);
        if (v95)
        {
          uint64_t v96 = (*(uint64_t (**)(void))(v95 + 232))();
          uint64_t v97 = *(void *)(v96 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v97, 0);
          *(void *)(v96 + 16) = v32;
          MEMORY[0x22A68E750](v32, v96);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v32);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v321 = swift_allocObject();
      swift_weakInit();
      *(void *)(v321 + 16) = v33;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v98 = String.init(cString:)();
      uint64_t v100 = v99;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      char v378 = a7;
      swift_beginAccess();
      uint64_t v101 = static AnimationResource.codableActionTypeMap;
      uint64_t v369 = a8;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_118;
      }
      swift_bridgeObjectRetain();
      unint64_t v102 = specialized __RawDictionaryStorage.find<A>(_:)(v98, v100);
      if (v103)
      {
        uint64_t v104 = (uint64_t *)(*(void *)(v101 + 56) + 56 * v102);
        uint64_t v105 = *v104;
        uint64_t v106 = v104[1];
        uint64_t v107 = v104[2];
        uint64_t v108 = v104[3];
        uint64_t v110 = v104[4];
        uint64_t v109 = v104[5];
        uint64_t v111 = v104[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_118:
        uint64_t v105 = 0;
        uint64_t v106 = 0;
        uint64_t v107 = 0;
        uint64_t v108 = 0;
        uint64_t v110 = 0;
        uint64_t v109 = 0;
        uint64_t v111 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v453 = v353;
      BYTE8(v453) = 0;
      *(void *)&long long v454 = v359;
      *((void *)&v454 + 1) = v105;
      *(void *)&long long v455 = v106;
      *((void *)&v455 + 1) = v107;
      *(void *)&long long v456 = v108;
      *((void *)&v456 + 1) = v110;
      *(void *)&long long v457 = v109;
      *((void *)&v457 + 1) = v111;
      uint64_t v304 = v106;
      uint64_t v308 = v105;
      uint64_t v292 = v108;
      uint64_t v298 = v107;
      uint64_t v288 = v110;
      if (v34 && REBindPointBoundComponent())
      {
        uint64_t v201 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v202 = swift_dynamicCastClassUnconditional();
LABEL_123:
          uint64_t v315 = v202;
          goto LABEL_125;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          goto LABEL_226;
        }
        uint64_t v257 = specialized static Entity.entityInfoType(_:)(v201);
        if (!v257)
        {
          uint64_t v202 = makeEntity(for:)(v201);
          goto LABEL_123;
        }
        uint64_t v258 = (*(uint64_t (**)(void))(v257 + 232))();
        uint64_t v259 = *(void *)(v258 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v259, 0);
        *(void *)(v258 + 16) = v201;
        MEMORY[0x22A68E750](v201, v258);
        uint64_t v315 = v258;
        swift_release();
      }
      else
      {
        uint64_t v315 = 0;
      }
LABEL_125:
      specialized ActionEventData.action<A>()(v378, v369, (uint64_t)&v445);
      uint64_t v203 = v449;
      if (v449)
      {
        char v204 = v452;
        uint64_t v205 = v451;
        uint64_t v206 = v450;
        uint64_t v207 = v448;
        uint64_t v208 = v447;
        uint64_t v209 = v446;
        uint64_t v210 = v445;
        uint64_t v279 = v445;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v210, v209, v208, v207, v203);
        char v211 = specialized ActionEventData.parameter<A>(type:)(a9);
        long long v407 = v454;
        long long v408 = v455;
        long long v409 = v456;
        long long v410 = v457;
        double v212 = v35;
        double v213 = v36;
        char v387 = v208 & 1;
        uint64_t v388 = v207;
        uint64_t v389 = v203;
        uint64_t v390 = v206;
        uint64_t v391 = v205;
        char v392 = v204 & 1;
        char v275 = v211 & 1;
        char v393 = v211 & 1;
        uint64_t v385 = v279;
        uint64_t v386 = v209;
        v384[0] = v321;
        uint64_t v394 = v315;
        char v395 = v327;
        double v396 = v212;
        double v397 = v213;
        uint64_t v399 = 0;
        double v400 = 0.0;
        uint64_t v398 = Strong;
        char v401 = 1;
        unint64_t v402 = v336;
        char v403 = 0;
        unint64_t v404 = v341;
        char v405 = 0;
        long long v406 = v453;
        uint64_t v411 = v344;
        swift_retain();
        swift_retain();
        a5(v384);
        outlined consume of SetEntityPropertyAction<Transform>?(v279, v209, v208, v207, v203);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v412 = v321;
        uint64_t v413 = v279;
        uint64_t v414 = v209;
        char v415 = v208 & 1;
        uint64_t v416 = v207;
        uint64_t v417 = v203;
        uint64_t v418 = v206;
        uint64_t v419 = v205;
        char v420 = v204 & 1;
        char v421 = v275;
        uint64_t v422 = v315;
        char v423 = v327;
        double v424 = v212;
        double v425 = v213;
        double v428 = 0.0;
        uint64_t v426 = Strong;
        uint64_t v427 = 0;
        char v429 = 1;
        unint64_t v430 = v336;
        char v431 = 0;
        unint64_t v432 = v341;
        char v433 = 0;
        uint64_t v434 = v353;
        char v435 = 0;
        uint64_t v436 = v359;
        uint64_t v437 = v308;
        uint64_t v438 = v304;
        uint64_t v439 = v298;
        uint64_t v440 = v292;
        uint64_t v441 = v288;
        uint64_t v442 = v109;
        uint64_t v188 = v111;
        goto LABEL_127;
      }
      goto LABEL_192;
    case 16:
      uint64_t v37 = *(void *)a2;
      uint64_t v38 = *(void *)(a2 + 8);
      unint64_t v360 = *(void *)(a2 + 32);
      uint64_t v363 = *(void *)(a2 + 40);
      uint64_t v345 = *(void *)(a2 + 56);
      uint64_t v354 = *(void *)(a2 + 48);
      uint64_t v365 = a8;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        uint64_t v112 = specialized static Entity.entityInfoType(_:)(v37);
        if (v112)
        {
          uint64_t v113 = (*(uint64_t (**)(void))(v112 + 232))();
          uint64_t v114 = *(void *)(v113 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v114, 0);
          *(void *)(v113 + 16) = v37;
          MEMORY[0x22A68E750](v37, v113);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v37);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v115 = swift_allocObject();
      swift_weakInit();
      uint64_t v342 = v115;
      *(void *)(v115 + 16) = v38;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v116 = String.init(cString:)();
      uint64_t v118 = v117;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v119 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_130;
      }
      swift_bridgeObjectRetain();
      unint64_t v120 = specialized __RawDictionaryStorage.find<A>(_:)(v116, v118);
      if (v121)
      {
        uint64_t v122 = (uint64_t *)(*(void *)(v119 + 56) + 56 * v120);
        uint64_t v124 = *v122;
        uint64_t v123 = v122[1];
        uint64_t v126 = v122[2];
        uint64_t v125 = v122[3];
        uint64_t v127 = v122[4];
        uint64_t v128 = v122[5];
        uint64_t v129 = v122[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_130:
        uint64_t v124 = 0;
        uint64_t v123 = 0;
        uint64_t v126 = 0;
        uint64_t v125 = 0;
        uint64_t v127 = 0;
        uint64_t v128 = 0;
        uint64_t v129 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v453 = 0;
      BYTE8(v453) = 0;
      *(void *)&long long v454 = v363;
      *((void *)&v454 + 1) = v124;
      *(void *)&long long v455 = v123;
      *((void *)&v455 + 1) = v126;
      *(void *)&long long v456 = v125;
      *((void *)&v456 + 1) = v127;
      *(void *)&long long v457 = v128;
      *((void *)&v457 + 1) = v129;
      uint64_t v330 = v125;
      uint64_t v337 = v123;
      if (!v345) {
        goto LABEL_136;
      }
      a8 = v365;
      if (!REBindPointBoundComponent()) {
        goto LABEL_144;
      }
      uint64_t v214 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_142;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_187;
      }
      __break(1u);
LABEL_136:
      uint64_t v215 = 0;
      a8 = v365;
      goto LABEL_189;
    case 32:
      uint64_t v39 = *(void *)a2;
      uint64_t v40 = *(void *)(a2 + 8);
      unint64_t v360 = *(void *)(a2 + 32);
      uint64_t v363 = *(void *)(a2 + 40);
      uint64_t v346 = *(void *)(a2 + 56);
      uint64_t v354 = *(void *)(a2 + 48);
      uint64_t v374 = a7;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
        uint64_t v130 = specialized static Entity.entityInfoType(_:)(v39);
        if (v130)
        {
          uint64_t v131 = (*(uint64_t (**)(void))(v130 + 232))();
          uint64_t v132 = *(void *)(v131 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v132, 0);
          *(void *)(v131 + 16) = v39;
          MEMORY[0x22A68E750](v39, v131);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v39);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v133 = swift_allocObject();
      swift_weakInit();
      uint64_t v342 = v133;
      *(void *)(v133 + 16) = v40;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v134 = String.init(cString:)();
      uint64_t v136 = v135;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v137 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_138;
      }
      swift_bridgeObjectRetain();
      unint64_t v138 = specialized __RawDictionaryStorage.find<A>(_:)(v134, v136);
      if (v139)
      {
        uint64_t v140 = (uint64_t *)(*(void *)(v137 + 56) + 56 * v138);
        uint64_t v124 = *v140;
        uint64_t v141 = v140[1];
        uint64_t v126 = v140[2];
        uint64_t v142 = v140[3];
        uint64_t v127 = v140[4];
        uint64_t v128 = v140[5];
        uint64_t v129 = v140[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_138:
        uint64_t v124 = 0;
        uint64_t v141 = 0;
        uint64_t v126 = 0;
        uint64_t v142 = 0;
        uint64_t v127 = 0;
        uint64_t v128 = 0;
        uint64_t v129 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v453 = 0;
      BYTE8(v453) = 0;
      *(void *)&long long v454 = v363;
      *((void *)&v454 + 1) = v124;
      *(void *)&long long v455 = v141;
      *((void *)&v455 + 1) = v126;
      *(void *)&long long v456 = v142;
      *((void *)&v456 + 1) = v127;
      *(void *)&long long v457 = v128;
      *((void *)&v457 + 1) = v129;
      uint64_t v330 = v142;
      uint64_t v337 = v141;
      if (v346)
      {
        a7 = v374;
        if (REBindPointBoundComponent())
        {
          uint64_t v214 = REComponentGetEntity();
          if ((id)REEntityGetSwiftObject())
          {
LABEL_142:
            type metadata accessor for Entity();
            uint64_t v216 = swift_dynamicCastClassUnconditional();
LABEL_143:
            uint64_t v215 = v216;
            goto LABEL_189;
          }
          if (REEntityIsBeingDestroyed())
          {
LABEL_226:
            __break(1u);
            goto LABEL_227;
          }
LABEL_187:
          uint64_t v260 = specialized static Entity.entityInfoType(_:)(v214);
          if (!v260)
          {
            uint64_t v216 = makeEntity(for:)(v214);
            goto LABEL_143;
          }
          uint64_t v261 = (*(uint64_t (**)(void))(v260 + 232))();
          uint64_t v349 = *(void *)(v261 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v349, 0);
          *(void *)(v261 + 16) = v214;
          uint64_t v262 = v214;
          uint64_t v215 = v261;
          MEMORY[0x22A68E750](v262, v261);
          swift_release();
        }
        else
        {
LABEL_144:
          uint64_t v215 = 0;
        }
      }
      else
      {
        uint64_t v215 = 0;
        a7 = v374;
      }
LABEL_189:
      specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v445);
      uint64_t v263 = v449;
      if (v449)
      {
        long long v407 = v454;
        long long v408 = v455;
        long long v409 = v456;
        long long v410 = v457;
        uint64_t v373 = v128;
        uint64_t v381 = v129;
        uint64_t v295 = v450;
        uint64_t v264 = v448;
        uint64_t v265 = v447;
        uint64_t v323 = v126;
        uint64_t v266 = v446;
        uint64_t v267 = v445;
        uint64_t v385 = v445;
        uint64_t v386 = v446;
        char v305 = v447 & 1;
        char v387 = v447 & 1;
        uint64_t v388 = v448;
        uint64_t v389 = v449;
        uint64_t v284 = v448;
        uint64_t v290 = v451;
        uint64_t v390 = v450;
        uint64_t v391 = v451;
        char v311 = v452 & 1;
        char v392 = v452 & 1;
        char v393 = 1;
        v384[0] = v342;
        uint64_t v394 = v215;
        char v395 = 0;
        double v396 = 0.0;
        double v397 = 0.0;
        uint64_t v399 = 0;
        double v400 = 0.0;
        uint64_t v398 = Strong;
        char v401 = 1;
        unint64_t v402 = v360;
        char v403 = 0;
        unint64_t v404 = 0;
        char v405 = 1;
        long long v406 = v453;
        uint64_t v411 = v354;
        swift_retain();
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v267, v266, v265, v264, v263);
        swift_retain();
        a5(v384);
        outlined consume of SetEntityPropertyAction<Transform>?(v267, v266, v265, v284, v263);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v412 = v342;
        uint64_t v413 = v267;
        uint64_t v414 = v266;
        char v415 = v305;
        uint64_t v416 = v284;
        uint64_t v417 = v263;
        uint64_t v418 = v295;
        uint64_t v419 = v290;
        char v420 = v311;
        char v421 = 1;
        uint64_t v422 = v215;
        char v423 = 0;
        double v425 = 0.0;
        double v424 = 0.0;
        double v428 = 0.0;
        uint64_t v426 = Strong;
        uint64_t v427 = 0;
        char v429 = 1;
        unint64_t v430 = v360;
        char v431 = 0;
        unint64_t v432 = 0;
        char v433 = 1;
        uint64_t v434 = 0;
        char v435 = 0;
        uint64_t v436 = v363;
        uint64_t v437 = v124;
        uint64_t v438 = v337;
        uint64_t v439 = v323;
        uint64_t v440 = v330;
        uint64_t v441 = v127;
        uint64_t v442 = v373;
        uint64_t v443 = v381;
        uint64_t v173 = v354;
        goto LABEL_191;
      }
      goto LABEL_192;
    case 64:
      uint64_t v41 = *(void *)a2;
      uint64_t v42 = *(void *)(a2 + 8);
      uint64_t v364 = *(void *)(a2 + 24);
      uint64_t v43 = *(void *)(a2 + 40);
      uint64_t v333 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v143 = specialized static Entity.entityInfoType(_:)(v41);
        if (v143)
        {
          uint64_t v144 = (*(uint64_t (**)(void))(v143 + 232))();
          uint64_t v145 = *(void *)(v144 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v145, 0);
          *(void *)(v144 + 16) = v41;
          MEMORY[0x22A68E750](v41, v144);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v41);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v146 = swift_allocObject();
      swift_weakInit();
      uint64_t v328 = v146;
      *(void *)(v146 + 16) = v42;
      swift_beginAccess();
      swift_weakAssign();
      if (v43 && REBindPointBoundComponent())
      {
        uint64_t v147 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v148 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v149 = v148;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
LABEL_222:
          __break(1u);
          goto LABEL_223;
        }
        uint64_t v247 = specialized static Entity.entityInfoType(_:)(v147);
        if (!v247)
        {
          uint64_t v148 = makeEntity(for:)(v147);
          goto LABEL_77;
        }
        uint64_t v149 = (*(uint64_t (**)(void))(v247 + 232))();
        uint64_t v248 = *(void *)(v149 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v248, 0);
        *(void *)(v149 + 16) = v147;
        MEMORY[0x22A68E750](v147, v149);
        swift_release();
      }
      else
      {
        uint64_t v149 = 0;
      }
LABEL_79:
      uint64_t v150 = String.init(cString:)();
      uint64_t v152 = v151;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v153 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v154 = specialized __RawDictionaryStorage.find<A>(_:)(v150, v152);
        if (v155)
        {
          uint64_t v156 = (uint64_t *)(*(void *)(v153 + 56) + 56 * v154);
          uint64_t v157 = *v156;
          uint64_t v158 = v156[1];
          uint64_t v159 = v156[2];
          uint64_t v355 = v156[4];
          uint64_t v361 = v156[3];
          uint64_t v343 = v156[6];
          uint64_t v348 = v156[5];
          swift_bridgeObjectRelease();
LABEL_148:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v453 = 0;
          BYTE8(v453) = 0;
          *(void *)&long long v454 = v364;
          *((void *)&v454 + 1) = v157;
          *(void *)&long long v455 = v158;
          *((void *)&v455 + 1) = v159;
          uint64_t v322 = v159;
          *(void *)&long long v456 = v361;
          *((void *)&v456 + 1) = v355;
          *(void *)&long long v457 = v348;
          *((void *)&v457 + 1) = v343;
          specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v445);
          uint64_t v217 = v449;
          if (!v449) {
            goto LABEL_192;
          }
          long long v407 = v454;
          long long v408 = v455;
          long long v409 = v456;
          long long v410 = v457;
          uint64_t v299 = v451;
          uint64_t v218 = v149;
          uint64_t v219 = v450;
          uint64_t v220 = v448;
          uint64_t v371 = v157;
          uint64_t v379 = v158;
          uint64_t v221 = v447;
          uint64_t v222 = v446;
          uint64_t v223 = v445;
          uint64_t v385 = v445;
          uint64_t v386 = v446;
          char v309 = v447 & 1;
          char v387 = v447 & 1;
          uint64_t v388 = v448;
          uint64_t v389 = v449;
          uint64_t v390 = v450;
          uint64_t v391 = v451;
          char v316 = v452 & 1;
          char v392 = v452 & 1;
          char v393 = 1;
          uint64_t v289 = v449;
          uint64_t v293 = v445;
          v384[0] = v328;
          uint64_t v394 = v218;
          char v395 = 0;
          double v396 = 0.0;
          double v397 = 0.0;
          uint64_t v399 = 0;
          double v400 = 0.0;
          uint64_t v398 = Strong;
          char v401 = 1;
          unint64_t v402 = 0;
          char v403 = 1;
          unint64_t v404 = 0;
          char v405 = 1;
          long long v406 = v453;
          uint64_t v411 = v333;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v223, v222, v221, v220, v217);
          swift_retain();
          a5(v384);
          outlined consume of SetEntityPropertyAction<Transform>?(v293, v222, v221, v220, v289);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v412 = v328;
          uint64_t v413 = v293;
          uint64_t v414 = v222;
          char v415 = v309;
          uint64_t v416 = v220;
          uint64_t v417 = v289;
          uint64_t v418 = v219;
          uint64_t v419 = v299;
          char v420 = v316;
          char v421 = 1;
          uint64_t v422 = v218;
          char v423 = 0;
          double v425 = 0.0;
          double v424 = 0.0;
          double v428 = 0.0;
          uint64_t v426 = Strong;
          uint64_t v427 = 0;
          char v429 = 1;
          unint64_t v430 = 0;
          char v431 = 1;
          unint64_t v432 = 0;
          char v433 = 1;
          uint64_t v434 = 0;
          char v435 = 0;
          uint64_t v436 = v364;
          uint64_t v437 = v371;
          uint64_t v224 = v379;
          goto LABEL_169;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v157 = 0;
      uint64_t v158 = 0;
      uint64_t v159 = 0;
      uint64_t v355 = 0;
      uint64_t v361 = 0;
      uint64_t v343 = 0;
      uint64_t v348 = 0;
      goto LABEL_148;
    default:
      if (a4 != 128) {
        goto LABEL_193;
      }
      uint64_t v19 = *(void *)a2;
      uint64_t v20 = *(void *)(a2 + 8);
      uint64_t v362 = *(void *)(a2 + 24);
      uint64_t v21 = *(void *)(a2 + 40);
      uint64_t v333 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        uint64_t v225 = specialized static Entity.entityInfoType(_:)(v19);
        if (v225)
        {
          uint64_t v226 = (*(uint64_t (**)(void))(v225 + 232))();
          uint64_t v227 = *(void *)(v226 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v227, 0);
          *(void *)(v226 + 16) = v19;
          MEMORY[0x22A68E750](v19, v226);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v19);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v228 = swift_allocObject();
      swift_weakInit();
      uint64_t v331 = v228;
      *(void *)(v228 + 16) = v20;
      swift_beginAccess();
      swift_weakAssign();
      if (v21 && REBindPointBoundComponent())
      {
        uint64_t v229 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v230 = swift_dynamicCastClassUnconditional();
LABEL_158:
          uint64_t v231 = v230;
          goto LABEL_160;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_227:
          __break(1u);
          JUMPOUT(0x227F9F478);
        }
        uint64_t v268 = specialized static Entity.entityInfoType(_:)(v229);
        if (!v268)
        {
          uint64_t v230 = makeEntity(for:)(v229);
          goto LABEL_158;
        }
        uint64_t v231 = (*(uint64_t (**)(void))(v268 + 232))();
        uint64_t v269 = *(void *)(v231 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v269, 0);
        *(void *)(v231 + 16) = v229;
        MEMORY[0x22A68E750](v229, v231);
        swift_release();
      }
      else
      {
        uint64_t v231 = 0;
      }
LABEL_160:
      uint64_t v232 = String.init(cString:)();
      uint64_t v234 = v233;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v235 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v236 = specialized __RawDictionaryStorage.find<A>(_:)(v232, v234);
        if (v237)
        {
          char v238 = (uint64_t *)(*(void *)(v235 + 56) + 56 * v236);
          uint64_t v239 = *v238;
          uint64_t v240 = v238[1];
          uint64_t v241 = v238[2];
          uint64_t v355 = v238[4];
          uint64_t v361 = v238[3];
          uint64_t v343 = v238[6];
          uint64_t v348 = v238[5];
          swift_bridgeObjectRelease();
LABEL_167:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v453 = 0;
          BYTE8(v453) = 0;
          *(void *)&long long v454 = v362;
          *((void *)&v454 + 1) = v239;
          *(void *)&long long v455 = v240;
          *((void *)&v455 + 1) = v241;
          uint64_t v322 = v241;
          *(void *)&long long v456 = v361;
          *((void *)&v456 + 1) = v355;
          *(void *)&long long v457 = v348;
          *((void *)&v457 + 1) = v343;
          specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v445);
          if (!v449) {
            goto LABEL_192;
          }
          long long v407 = v454;
          long long v408 = v455;
          long long v409 = v456;
          long long v410 = v457;
          uint64_t v300 = v451;
          uint64_t v372 = v240;
          uint64_t v380 = v239;
          uint64_t v242 = v448;
          uint64_t v243 = v447;
          uint64_t v244 = v446;
          uint64_t v245 = v445;
          uint64_t v385 = v445;
          uint64_t v386 = v446;
          char v310 = v447 & 1;
          char v387 = v447 & 1;
          uint64_t v388 = v448;
          uint64_t v389 = v449;
          uint64_t v390 = v450;
          uint64_t v391 = v451;
          uint64_t v294 = v450;
          char v317 = v452 & 1;
          char v392 = v452 & 1;
          char v393 = 1;
          v384[0] = v331;
          uint64_t v394 = v231;
          char v395 = 0;
          double v396 = 0.0;
          double v397 = 0.0;
          uint64_t v399 = 0;
          double v400 = 0.0;
          uint64_t v398 = Strong;
          char v401 = 1;
          unint64_t v402 = 0;
          char v403 = 1;
          unint64_t v404 = 0;
          char v405 = 1;
          long long v406 = v453;
          uint64_t v411 = v333;
          uint64_t v246 = v449;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v245, v244, v243, v242, v246);
          swift_retain();
          a5(v384);
          swift_release();
          outlined consume of SetEntityPropertyAction<Transform>?(v245, v244, v243, v242, v246);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v412 = v331;
          uint64_t v413 = v245;
          uint64_t v414 = v244;
          char v415 = v310;
          uint64_t v416 = v242;
          uint64_t v417 = v246;
          uint64_t v418 = v294;
          uint64_t v419 = v300;
          char v420 = v317;
          char v421 = 1;
          uint64_t v422 = v231;
          char v423 = 0;
          double v425 = 0.0;
          double v424 = 0.0;
          double v428 = 0.0;
          uint64_t v426 = Strong;
          uint64_t v427 = 0;
          char v429 = 1;
          unint64_t v430 = 0;
          char v431 = 1;
          unint64_t v432 = 0;
          char v433 = 1;
          uint64_t v434 = 0;
          char v435 = 0;
          uint64_t v436 = v362;
          uint64_t v437 = v380;
          uint64_t v224 = v372;
LABEL_169:
          uint64_t v438 = v224;
          uint64_t v439 = v322;
          uint64_t v440 = v361;
          uint64_t v441 = v355;
          uint64_t v442 = v348;
          uint64_t v443 = v343;
          uint64_t v173 = v333;
          goto LABEL_191;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v239 = 0;
      uint64_t v240 = 0;
      uint64_t v241 = 0;
      uint64_t v355 = 0;
      uint64_t v361 = 0;
      uint64_t v343 = 0;
      uint64_t v348 = 0;
      goto LABEL_167;
  }
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  float v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  float v36;
  float v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(void *);
  unint64_t v73;
  char v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t Entity;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  void (*v170)(void *);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  uint64_t *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unsigned __int8 v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  double v234;
  double v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  int v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  double v249;
  double v250;
  double v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unsigned __int8 v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char v265;
  double v266;
  double v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char v280;
  double v281;
  double v282;
  uint64_t v283;
  uint64_t v284;
  unsigned __int8 v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char v295;
  uint64_t v296;
  uint64_t v297;
  char v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  int v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  int v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  char v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char v379;
  unint64_t v380;
  char v381;
  uint64_t v382;
  unint64_t v383;
  unint64_t v384;
  uint64_t v385;
  char v386;
  uint64_t v387;
  uint64_t v388;
  unint64_t v389;
  uint64_t v390;
  unint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  unint64_t v397;
  unint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t *v431;
  uint64_t *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t *v440;
  uint64_t *v441;
  uint64_t *v442;
  uint64_t v443;
  uint64_t v444;
  unint64_t v445;
  unint64_t v446;
  unint64_t v447;
  unint64_t v448;
  uint64_t v449;
  void (*v450)(void *);
  void (*v451)(void *);
  void (*v452)(void *);
  void (*v453)(void *);
  void (*v454)(void *);
  void (*v455)(void *);
  uint64_t Strong;
  void v457[2];
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  int v463;
  char v464;
  uint64_t v465;
  uint64_t v466;
  __int16 v467;
  char v468;
  uint64_t v469;
  uint64_t v470;
  char v471;
  uint64_t v472;
  char v473;
  double v474;
  double v475;
  uint64_t v476;
  uint64_t v477;
  double v478;
  char v479;
  unint64_t v480;
  char v481;
  unint64_t v482;
  char v483;
  long long v484;
  long long v485;
  long long v486;
  long long v487;
  long long v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  int v496;
  char v497;
  uint64_t v498;
  uint64_t v499;
  __int16 v500;
  char v501;
  uint64_t v502;
  uint64_t v503;
  char v504;
  uint64_t v505;
  char v506;
  double v507;
  double v508;
  uint64_t v509;
  uint64_t v510;
  double v511;
  char v512;
  unint64_t v513;
  char v514;
  unint64_t v515;
  char v516;
  uint64_t v517;
  char v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  unint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  long long v540;
  long long v541;
  long long v542;
  long long v543;
  long long v544;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v14 = *(void *)a2;
      uint64_t v15 = *(void *)(a2 + 8);
      uint64_t v414 = *(void *)(a2 + 32);
      char v421 = *(void *)(a2 + 40);
      float v16 = *(void *)(a2 + 64);
      char v395 = *(void *)(a2 + 56);
      char v403 = *(void *)(a2 + 48);
      float v17 = *(float *)(a2 + 72);
      uint64_t v18 = *(float *)(a2 + 76);
      uint64_t v379 = *(unsigned char *)(a2 + 80);
      char v383 = *(void *)(a2 + 88);
      uint64_t v389 = *(void *)(a2 + 96);
      uint64_t v450 = a5;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v47 = specialized static Entity.entityInfoType(_:)(v14);
        if (v47)
        {
          uint64_t v48 = (*(uint64_t (**)(void))(v47 + 232))();
          uint64_t v49 = *(void *)(v48 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v49, 0);
          *(void *)(v48 + 16) = v14;
          MEMORY[0x22A68E750](v14, v48);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v14);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        long long v408 = swift_allocObject();
        swift_weakInit();
        *(void *)(v408 + 16) = v15;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v50 = String.init(cString:)();
        unint64_t v52 = v51;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        uint64_t v442 = a7;
        swift_beginAccess();
        char v53 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          uint64_t v54 = a8;
          swift_bridgeObjectRetain();
          uint64_t v55 = specialized __RawDictionaryStorage.find<A>(_:)(v50, v52);
          if (v56)
          {
            uint64_t v57 = (uint64_t *)(*(void *)(v53 + 56) + 56 * v55);
            uint64_t v59 = *v57;
            uint64_t v58 = v57[1];
            uint64_t v60 = v57[2];
            uint64_t v61 = v57[3];
            uint64_t v63 = v57[4];
            uint64_t v62 = v57[5];
            uint64_t v64 = v57[6];
            swift_bridgeObjectRelease();
LABEL_88:
            uint64_t v340 = v61;
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&v540 = v414;
            BYTE8(v540) = 0;
            *(void *)&v541 = v421;
            *((void *)&v541 + 1) = v59;
            *(void *)&v542 = v58;
            *((void *)&v542 + 1) = v60;
            *(void *)&v543 = v61;
            *((void *)&v543 + 1) = v63;
            uint64_t v345 = v63;
            uint64_t v352 = v58;
            *(void *)&v544 = v62;
            *((void *)&v544 + 1) = v64;
            uint64_t v162 = v62;
            uint64_t v358 = v59;
            if (!v16)
            {
              uint64_t v373 = 0;
              uint64_t v163 = v54;
              uint64_t v166 = v442;
              goto LABEL_167;
            }
            uint64_t v163 = v54;
            if (!REBindPointBoundComponent())
            {
              uint64_t v373 = 0;
              uint64_t v166 = v442;
              goto LABEL_167;
            }
            uint64_t v366 = v64;
            uint64_t v164 = v60;
            uint64_t Entity = REComponentGetEntity();
            uint64_t v166 = v442;
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v167 = swift_dynamicCastClassUnconditional();
              goto LABEL_92;
            }
            if ((REEntityIsBeingDestroyed() & 1) == 0)
            {
              uint64_t v222 = specialized static Entity.entityInfoType(_:)(Entity);
              if (v222)
              {
                uint64_t v223 = (*(uint64_t (**)(void))(v222 + 232))();
                uint64_t v224 = *(void *)(v223 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v224, 0);
                *(void *)(v223 + 16) = Entity;
                MEMORY[0x22A68E750](Entity, v223);
                uint64_t v373 = v223;
                swift_release();
                goto LABEL_166;
              }
              uint64_t v167 = makeEntity(for:)(Entity);
LABEL_92:
              uint64_t v373 = v167;
LABEL_166:
              uint64_t v60 = v164;
              uint64_t v64 = v366;
LABEL_167:
              specialized ActionEventData.action<A>()(v166, v163, (uint64_t)&v528);
              if (v528 != 1)
              {
                uint64_t v225 = v528;
                uint64_t v226 = v537;
                uint64_t v328 = v537;
                char v335 = v538;
                uint64_t v227 = v536;
                uint64_t v371 = v64;
                uint64_t v308 = v535;
                uint64_t v315 = v534;
                uint64_t v321 = v536;
                uint64_t v228 = v533;
                uint64_t v297 = v162;
                uint64_t v229 = v532;
                uint64_t v230 = v531;
                uint64_t v301 = v531;
                char v435 = v539;
                uint64_t v445 = HIDWORD(v534);
                uint64_t v231 = v530;
                uint64_t v232 = v529;
                swift_retain();
                outlined copy of FromToByAction<BlendShapeWeights>?(v225, v232, v231, v230, v229, v228, v315, v308, v227, v226);
                uint64_t v233 = specialized ActionEventData.parameter<A>(type:)(a9);
                char v487 = v543;
                char v488 = v544;
                uint64_t v485 = v541;
                uint64_t v486 = v542;
                uint64_t v234 = v17;
                uint64_t v235 = v18;
                double v459 = v232;
                double v460 = v231;
                uint64_t v461 = v229;
                uint64_t v462 = v228;
                double v463 = v315;
                char v464 = v445;
                unint64_t v465 = v308;
                char v466 = v321;
                unint64_t v467 = v328 & 0x1FF;
                char v468 = BYTE2(v328) & 1;
                long long v469 = v335;
                long long v470 = v435;
                uint64_t v295 = v233 & 1;
                long long v471 = v233 & 1;
                char v458 = v225;
                v457[0] = v408;
                long long v472 = v373;
                long long v473 = v379;
                uint64_t v474 = v234;
                uint64_t v475 = v235;
                uint64_t v476 = Strong;
                uint64_t v477 = v395;
                char v478 = -1.0;
                uint64_t v479 = 0;
                uint64_t v480 = v383;
                uint64_t v481 = 0;
                uint64_t v482 = v389;
                uint64_t v483 = 0;
                uint64_t v484 = v540;
                uint64_t v489 = v403;
                swift_retain();
                swift_retain();
                v450(v457);
                outlined consume of FromToByAction<BlendShapeWeights>?(v225, v232, v231, v301, v229, v228, v315, v308, v321, v328);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                char v490 = v408;
                double v491 = v225;
                double v492 = v232;
                uint64_t v493 = v231;
                uint64_t v494 = v229;
                double v495 = v228;
                char v496 = v315;
                unint64_t v497 = v445;
                char v498 = v308;
                unint64_t v499 = v321;
                char v500 = v328 & 0x1FF;
                uint64_t v501 = BYTE2(v328) & 1;
                char v502 = v335;
                uint64_t v503 = v435;
                uint64_t v504 = v295;
                uint64_t v505 = v373;
                uint64_t v506 = v379;
                uint64_t v507 = v234;
                uint64_t v508 = v235;
                uint64_t v509 = Strong;
                uint64_t v510 = v395;
                uint64_t v511 = -1.0;
                uint64_t v512 = 0;
                uint64_t v513 = v383;
                uint64_t v514 = 0;
                uint64_t v515 = v389;
                uint64_t v516 = 0;
                uint64_t v517 = v414;
                uint64_t v518 = 0;
                uint64_t v519 = v421;
                uint64_t v520 = v358;
                uint64_t v521 = v352;
                uint64_t v522 = v60;
                char v523 = v340;
                long long v524 = v345;
                unint64_t v236 = v297;
LABEL_197:
                long long v525 = v236;
                uint64_t v219 = v371;
                goto LABEL_198;
              }
              goto LABEL_194;
            }
            goto LABEL_228;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v54 = a8;
        }
        uint64_t v59 = 0;
        uint64_t v58 = 0;
        uint64_t v60 = 0;
        uint64_t v61 = 0;
        uint64_t v63 = 0;
        uint64_t v62 = 0;
        uint64_t v64 = 0;
        goto LABEL_88;
      }
      __break(1u);
      goto LABEL_220;
    case 2:
      uint64_t v23 = *(void *)a2;
      float v24 = *(void *)(a2 + 8);
      char v415 = *(void *)(a2 + 32);
      uint64_t v422 = *(void *)(a2 + 40);
      uint64_t v25 = *(float *)(a2 + 56);
      uint64_t v380 = *(void *)(a2 + 64);
      uint64_t v384 = *(void *)(a2 + 48);
      uint64_t v372 = *(void *)(a2 + 72);
      uint64_t v390 = *(void *)(a2 + 80);
      double v396 = *(void *)(a2 + 88);
      float v26 = *(float *)(a2 + 96);
      float v27 = *(float *)(a2 + 100);
      uint64_t v365 = *(unsigned char *)(a2 + 104);
      char v431 = a8;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v65 = specialized static Entity.entityInfoType(_:)(v23);
        if (v65)
        {
          uint64_t v66 = (*(uint64_t (**)(void))(v65 + 232))();
          uint64_t v67 = *(void *)(v66 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v67, 0);
          *(void *)(v66 + 16) = v23;
          MEMORY[0x22A68E750](v23, v66);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v23);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        unint64_t v404 = swift_allocObject();
        swift_weakInit();
        *(void *)(v404 + 16) = v24;
        swift_beginAccess();
        swift_weakAssign();
        unint64_t v68 = String.init(cString:)();
        uint64_t v70 = v69;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v71 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          uint64_t v72 = a5;
          swift_bridgeObjectRetain();
          uint64_t v73 = specialized __RawDictionaryStorage.find<A>(_:)(v68, v70);
          if (v74)
          {
            uint64_t v75 = (uint64_t *)(*(void *)(v71 + 56) + 56 * v73);
            uint64_t v77 = *v75;
            uint64_t v76 = v75[1];
            uint64_t v78 = v75[2];
            uint64_t v79 = v75[3];
            uint64_t v80 = v75[4];
            uint64_t v81 = v75[5];
            long long v409 = v75[6];
            swift_bridgeObjectRelease();
            goto LABEL_96;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v72 = a5;
        }
        uint64_t v77 = 0;
        uint64_t v76 = 0;
        uint64_t v78 = 0;
        uint64_t v79 = 0;
        uint64_t v80 = 0;
        uint64_t v81 = 0;
        long long v409 = 0;
LABEL_96:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v540 = v415;
        BYTE8(v540) = 0;
        *(void *)&v541 = v422;
        *((void *)&v541 + 1) = v77;
        *(void *)&v542 = v76;
        *((void *)&v542 + 1) = v78;
        *(void *)&v543 = v79;
        *((void *)&v543 + 1) = v80;
        uint64_t v346 = v80;
        uint64_t v353 = v76;
        *(void *)&v544 = v81;
        *((void *)&v544 + 1) = v409;
        uint64_t v168 = v81;
        uint64_t v359 = v77;
        if (v396)
        {
          uint64_t v169 = v431;
          char v170 = v72;
          if (REBindPointBoundComponent())
          {
            double v171 = v78;
            double v172 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v173 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_229:
                __break(1u);
                goto LABEL_230;
              }
              char v237 = specialized static Entity.entityInfoType(_:)(v172);
              if (v237)
              {
                char v238 = (*(uint64_t (**)(void))(v237 + 232))();
                uint64_t v239 = *(void *)(v238 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v239, 0);
                *(void *)(v238 + 16) = v172;
                MEMORY[0x22A68E750](v172, v238);
                char v401 = v238;
                swift_release();
                goto LABEL_172;
              }
              uint64_t v173 = makeEntity(for:)(v172);
            }
            char v401 = v173;
LABEL_172:
            uint64_t v78 = v171;
            goto LABEL_173;
          }
          char v401 = 0;
        }
        else
        {
          char v401 = 0;
          uint64_t v169 = v431;
          char v170 = v72;
        }
LABEL_173:
        specialized ActionEventData.action<A>()(a7, v169, (uint64_t)&v528);
        uint64_t v240 = v528;
        if (v528 == 1) {
          goto LABEL_194;
        }
        long long v453 = v170;
        uint64_t v241 = v537;
        uint64_t v242 = v536;
        uint64_t v322 = v79;
        uint64_t v329 = v535;
        unint64_t v336 = v534;
        unint64_t v341 = v539;
        uint64_t v243 = v533;
        char v305 = v168;
        char v309 = v78;
        uint64_t v244 = v532;
        uint64_t v245 = v531;
        char v316 = v531;
        uint64_t v436 = v538;
        uint64_t v446 = HIDWORD(v534);
        uint64_t v246 = v530;
        uint64_t v247 = v529;
        swift_retain();
        outlined copy of FromToByAction<BlendShapeWeights>?(v240, v247, v246, v245, v244, v243, v336, v329, v242, v241);
        uint64_t v248 = specialized ActionEventData.parameter<A>(type:)(a9);
        char v487 = v543;
        char v488 = v544;
        uint64_t v485 = v541;
        uint64_t v486 = v542;
        uint64_t v249 = v26;
        uint64_t v250 = v27;
        uint64_t v251 = v25;
        double v459 = v247;
        double v460 = v246;
        uint64_t v461 = v244;
        uint64_t v462 = v243;
        double v463 = v336;
        char v464 = v446;
        unint64_t v465 = v329;
        char v466 = v242;
        unint64_t v467 = v241 & 0x1FF;
        char v468 = BYTE2(v241) & 1;
        long long v469 = v436;
        long long v470 = v341;
        uint64_t v298 = v248 & 1;
        long long v471 = v248 & 1;
        char v458 = v240;
        v457[0] = v404;
        long long v472 = v401;
        long long v473 = v365;
        uint64_t v474 = v249;
        uint64_t v475 = v250;
        uint64_t v476 = Strong;
        uint64_t v477 = v372;
        char v478 = v251;
        uint64_t v479 = 0;
        uint64_t v480 = v384;
        uint64_t v481 = 0;
        uint64_t v482 = v380;
        uint64_t v483 = 0;
        uint64_t v484 = v540;
        uint64_t v489 = v390;
        swift_retain();
        swift_retain();
        v453(v457);
        outlined consume of FromToByAction<BlendShapeWeights>?(v240, v247, v246, v316, v244, v243, v336, v329, v242, v241);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        char v490 = v404;
        double v491 = v240;
        double v492 = v247;
        uint64_t v493 = v246;
        uint64_t v494 = v244;
        double v495 = v243;
        char v496 = v336;
        unint64_t v497 = v446;
        char v498 = v329;
        unint64_t v499 = v242;
        char v500 = v241 & 0x1FF;
        uint64_t v501 = BYTE2(v241) & 1;
        char v502 = v436;
        uint64_t v503 = v341;
        uint64_t v504 = v298;
        uint64_t v505 = v401;
        uint64_t v506 = v365;
        uint64_t v507 = v249;
        uint64_t v508 = v250;
        uint64_t v509 = Strong;
        uint64_t v510 = v372;
        uint64_t v511 = v251;
        uint64_t v512 = 0;
        uint64_t v513 = v384;
        uint64_t v514 = 0;
        uint64_t v515 = v380;
        uint64_t v516 = 0;
        uint64_t v517 = v415;
        uint64_t v518 = 0;
        uint64_t v519 = v422;
        uint64_t v520 = v359;
        uint64_t v521 = v353;
        uint64_t v522 = v309;
        char v523 = v322;
        long long v524 = v346;
        long long v525 = v305;
        uint64_t v252 = v409;
LABEL_181:
        long long v526 = v252;
        uint64_t v194 = v390;
        goto LABEL_199;
      }
LABEL_220:
      __break(1u);
      goto LABEL_221;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_195;
    case 4:
      uint64_t v28 = *(void *)a2;
      uint64_t v29 = *(void *)(a2 + 8);
      long long v407 = *(void *)(a2 + 32);
      uint64_t v416 = *(void *)(a2 + 40);
      float v30 = *(void *)(a2 + 64);
      uint64_t v385 = *(void *)(a2 + 56);
      uint64_t v390 = *(void *)(a2 + 48);
      float v31 = *(float *)(a2 + 72);
      uint64_t v32 = *(float *)(a2 + 76);
      uint64_t v381 = *(unsigned char *)(a2 + 80);
      uint64_t v440 = a7;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v82 = specialized static Entity.entityInfoType(_:)(v28);
        if (v82)
        {
          uint64_t v83 = (*(uint64_t (**)(void))(v82 + 232))();
          uint64_t v84 = *(void *)(v83 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v84, 0);
          *(void *)(v83 + 16) = v28;
          MEMORY[0x22A68E750](v28, v83);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v28);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        double v400 = swift_allocObject();
        swift_weakInit();
        *(void *)(v400 + 16) = v29;
        swift_beginAccess();
        swift_weakAssign();
        unint64_t v85 = String.init(cString:)();
        uint64_t v87 = v86;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v88 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v89 = specialized __RawDictionaryStorage.find<A>(_:)(v85, v87);
          if (v90)
          {
            uint64_t v91 = (uint64_t *)(*(void *)(v88 + 56) + 56 * v89);
            uint64_t v93 = *v91;
            uint64_t v92 = v91[1];
            uint64_t v94 = v91[2];
            uint64_t v95 = v91[3];
            uint64_t v96 = v91[4];
            uint64_t v97 = v91[5];
            char v405 = v91[6];
            swift_bridgeObjectRelease();
            goto LABEL_104;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v93 = 0;
        uint64_t v92 = 0;
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        uint64_t v96 = 0;
        uint64_t v97 = 0;
        char v405 = 0;
LABEL_104:
        uint64_t v354 = v94;
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v540 = v407;
        BYTE8(v540) = 0;
        *(void *)&v541 = v416;
        *((void *)&v541 + 1) = v93;
        *(void *)&v542 = v92;
        *((void *)&v542 + 1) = v94;
        *(void *)&v543 = v95;
        *((void *)&v543 + 1) = v96;
        unint64_t v360 = v96;
        uint64_t v367 = v92;
        *(void *)&v544 = v97;
        *((void *)&v544 + 1) = v405;
        uint64_t v174 = v97;
        uint64_t v374 = v93;
        if (v30)
        {
          uint64_t v175 = v440;
          if (REBindPointBoundComponent())
          {
            uint64_t v176 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              char v177 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_230:
                __break(1u);
                goto LABEL_231;
              }
              uint64_t v253 = specialized static Entity.entityInfoType(_:)(v176);
              if (v253)
              {
                uint64_t v254 = (*(uint64_t (**)(void))(v253 + 232))();
                uint64_t v255 = *(void *)(v254 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v255, 0);
                *(void *)(v254 + 16) = v176;
                MEMORY[0x22A68E750](v176, v254);
                uint64_t v426 = v254;
                swift_release();
                goto LABEL_179;
              }
              char v177 = makeEntity(for:)(v176);
            }
            uint64_t v426 = v177;
          }
          else
          {
            uint64_t v426 = 0;
          }
        }
        else
        {
          uint64_t v426 = 0;
          uint64_t v175 = v440;
        }
LABEL_179:
        specialized ActionEventData.action<A>()(v175, a8, (uint64_t)&v528);
        uint64_t v256 = v528;
        if (v528 == 1) {
          goto LABEL_194;
        }
        long long v454 = a5;
        uint64_t v257 = v537;
        uint64_t v342 = v537;
        uint64_t v350 = v538;
        uint64_t v258 = v536;
        uint64_t v259 = v95;
        uint64_t v330 = v535;
        uint64_t v337 = v536;
        uint64_t v260 = v534;
        char v310 = v174;
        uint64_t v261 = v533;
        uint64_t v294 = v532;
        uint64_t v262 = v531;
        char v317 = v531;
        uint64_t v323 = v259;
        uint64_t v437 = v539;
        uint64_t v447 = HIDWORD(v534);
        uint64_t v263 = v530;
        uint64_t v264 = v529;
        swift_retain();
        outlined copy of FromToByAction<BlendShapeWeights>?(v256, v264, v263, v262, v294, v261, v260, v330, v258, v257);
        uint64_t v265 = specialized ActionEventData.parameter<A>(type:)(a9);
        char v487 = v543;
        char v488 = v544;
        uint64_t v485 = v541;
        uint64_t v486 = v542;
        uint64_t v266 = v31;
        uint64_t v267 = v32;
        double v459 = v264;
        double v460 = v263;
        uint64_t v461 = v294;
        uint64_t v462 = v261;
        double v463 = v260;
        char v464 = v447;
        unint64_t v465 = v330;
        char v466 = v337;
        unint64_t v467 = v342 & 0x1FF;
        char v468 = BYTE2(v342) & 1;
        long long v469 = v350;
        long long v470 = v437;
        uint64_t v302 = v265 & 1;
        long long v471 = v265 & 1;
        char v458 = v256;
        v457[0] = v400;
        long long v472 = v426;
        long long v473 = v381;
        uint64_t v474 = v266;
        uint64_t v475 = v267;
        uint64_t v476 = Strong;
        uint64_t v477 = v385;
        char v478 = -1.0;
        uint64_t v479 = 0;
        uint64_t v480 = 0xBFF0000000000000;
        uint64_t v481 = 0;
        uint64_t v482 = 0xBFF0000000000000;
        uint64_t v483 = 0;
        uint64_t v484 = v540;
        uint64_t v489 = v390;
        swift_retain();
        swift_retain();
        v454(v457);
        outlined consume of FromToByAction<BlendShapeWeights>?(v256, v264, v263, v317, v294, v261, v260, v330, v337, v342);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        char v490 = v400;
        double v491 = v256;
        double v492 = v264;
        uint64_t v493 = v263;
        uint64_t v494 = v294;
        double v495 = v261;
        char v496 = v260;
        unint64_t v497 = v447;
        char v498 = v330;
        unint64_t v499 = v337;
        char v500 = v342 & 0x1FF;
        uint64_t v501 = BYTE2(v342) & 1;
        char v502 = v350;
        uint64_t v503 = v437;
        uint64_t v504 = v302;
        uint64_t v505 = v426;
        uint64_t v506 = v381;
        uint64_t v507 = v266;
        uint64_t v508 = v267;
        uint64_t v509 = Strong;
        uint64_t v510 = v385;
        uint64_t v511 = -1.0;
        uint64_t v512 = 0;
        uint64_t v513 = 0xBFF0000000000000;
        uint64_t v514 = 0;
        uint64_t v515 = 0xBFF0000000000000;
        uint64_t v516 = 0;
        uint64_t v517 = v407;
        uint64_t v518 = 0;
        uint64_t v519 = v416;
        uint64_t v520 = v374;
        uint64_t v521 = v367;
        uint64_t v522 = v354;
        char v523 = v323;
        long long v524 = v360;
        long long v525 = v310;
        uint64_t v252 = v405;
        goto LABEL_181;
      }
LABEL_221:
      __break(1u);
      goto LABEL_222;
    case 8:
      uint64_t v33 = *(void *)a2;
      uint64_t v34 = *(void *)(a2 + 8);
      uint64_t v417 = *(void *)(a2 + 32);
      char v423 = *(void *)(a2 + 40);
      float v35 = *(void *)(a2 + 56);
      float v36 = *(float *)(a2 + 64);
      uint64_t v37 = *(float *)(a2 + 68);
      uint64_t v386 = *(unsigned char *)(a2 + 72);
      uint64_t v391 = *(void *)(a2 + 80);
      double v397 = *(void *)(a2 + 88);
      char v403 = *(void *)(a2 + 48);
      unint64_t v432 = a8;
      uint64_t v441 = a7;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v98 = specialized static Entity.entityInfoType(_:)(v33);
        if (v98)
        {
          uint64_t v99 = (*(uint64_t (**)(void))(v98 + 232))();
          uint64_t v100 = *(void *)(v99 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v100, 0);
          *(void *)(v99 + 16) = v33;
          MEMORY[0x22A68E750](v33, v99);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v33);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        long long v410 = swift_allocObject();
        swift_weakInit();
        *(void *)(v410 + 16) = v34;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v101 = String.init(cString:)();
        char v103 = v102;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v104 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v105 = specialized __RawDictionaryStorage.find<A>(_:)(v101, v103);
          if (v106)
          {
            uint64_t v107 = (uint64_t *)(*(void *)(v104 + 56) + 56 * v105);
            uint64_t v109 = *v107;
            uint64_t v108 = v107[1];
            uint64_t v110 = v107[2];
            uint64_t v111 = v107[3];
            uint64_t v113 = v107[4];
            uint64_t v112 = v107[5];
            uint64_t v114 = v107[6];
            swift_bridgeObjectRelease();
            goto LABEL_112;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v109 = 0;
        uint64_t v108 = 0;
        uint64_t v110 = 0;
        uint64_t v111 = 0;
        uint64_t v113 = 0;
        uint64_t v112 = 0;
        uint64_t v114 = 0;
LABEL_112:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v540 = v417;
        BYTE8(v540) = 0;
        *(void *)&v541 = v423;
        *((void *)&v541 + 1) = v109;
        *(void *)&v542 = v108;
        *((void *)&v542 + 1) = v110;
        *(void *)&v543 = v111;
        *((void *)&v543 + 1) = v113;
        uint64_t v361 = v113;
        uint64_t v368 = v108;
        *(void *)&v544 = v112;
        *((void *)&v544 + 1) = v114;
        uint64_t v375 = v109;
        uint64_t v347 = v114;
        if (v35)
        {
          uint64_t v178 = v432;
          if (REBindPointBoundComponent())
          {
            uint64_t v179 = v110;
            uint64_t v180 = REComponentGetEntity();
            uint64_t v181 = v441;
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v182 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_231:
                __break(1u);
                goto LABEL_232;
              }
              uint64_t v268 = specialized static Entity.entityInfoType(_:)(v180);
              if (v268)
              {
                uint64_t v269 = (*(uint64_t (**)(void))(v268 + 232))();
                char v270 = *(void *)(v269 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v270, 0);
                *(void *)(v269 + 16) = v180;
                MEMORY[0x22A68E750](v180, v269);
                uint64_t v382 = v269;
                swift_release();
                goto LABEL_185;
              }
              uint64_t v182 = makeEntity(for:)(v180);
            }
            uint64_t v382 = v182;
LABEL_185:
            uint64_t v110 = v179;
            goto LABEL_186;
          }
          uint64_t v382 = 0;
          uint64_t v181 = v441;
        }
        else
        {
          uint64_t v382 = 0;
          uint64_t v178 = v432;
          uint64_t v181 = v441;
        }
LABEL_186:
        specialized ActionEventData.action<A>()(v181, v178, (uint64_t)&v528);
        char v271 = v528;
        if (v528 == 1) {
          goto LABEL_194;
        }
        long long v455 = a5;
        char v272 = v537;
        char v273 = v536;
        uint64_t v338 = v536;
        uint64_t v343 = v538;
        uint64_t v274 = v111;
        unint64_t v324 = v535;
        uint64_t v331 = v534;
        char v275 = v533;
        uint64_t v276 = v532;
        uint64_t v277 = v531;
        uint64_t v306 = v110;
        char v311 = v531;
        uint64_t v438 = v539;
        uint64_t v448 = HIDWORD(v534);
        char v278 = v530;
        uint64_t v279 = v529;
        unint64_t v318 = v274;
        swift_retain();
        outlined copy of FromToByAction<BlendShapeWeights>?(v271, v279, v278, v277, v276, v275, v331, v324, v273, v272);
        uint64_t v280 = specialized ActionEventData.parameter<A>(type:)(a9);
        char v487 = v543;
        char v488 = v544;
        uint64_t v485 = v541;
        uint64_t v486 = v542;
        uint64_t v281 = v36;
        uint64_t v282 = v37;
        double v459 = v279;
        double v460 = v278;
        uint64_t v461 = v276;
        uint64_t v462 = v275;
        double v463 = v331;
        char v464 = v448;
        unint64_t v465 = v324;
        char v466 = v338;
        unint64_t v467 = v272 & 0x1FF;
        char v468 = BYTE2(v272) & 1;
        long long v469 = v343;
        long long v470 = v438;
        uint64_t v299 = v280 & 1;
        long long v471 = v280 & 1;
        char v458 = v271;
        v457[0] = v410;
        long long v472 = v382;
        long long v473 = v386;
        uint64_t v474 = v281;
        uint64_t v475 = v282;
        uint64_t v477 = 0;
        char v478 = 0.0;
        uint64_t v476 = Strong;
        uint64_t v479 = 1;
        uint64_t v480 = v391;
        uint64_t v481 = 0;
        uint64_t v482 = v397;
        uint64_t v483 = 0;
        uint64_t v484 = v540;
        uint64_t v489 = v403;
        swift_retain();
        swift_retain();
        v455(v457);
        outlined consume of FromToByAction<BlendShapeWeights>?(v271, v279, v278, v311, v276, v275, v331, v324, v338, v272);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        char v490 = v410;
        double v491 = v271;
        double v492 = v279;
        uint64_t v493 = v278;
        uint64_t v494 = v276;
        double v495 = v275;
        char v496 = v331;
        unint64_t v497 = v448;
        char v498 = v324;
        unint64_t v499 = v338;
        char v500 = v272 & 0x1FF;
        uint64_t v501 = BYTE2(v272) & 1;
        char v502 = v343;
        uint64_t v503 = v438;
        uint64_t v504 = v299;
        uint64_t v505 = v382;
        uint64_t v506 = v386;
        uint64_t v507 = v281;
        uint64_t v508 = v282;
        uint64_t v511 = 0.0;
        uint64_t v509 = Strong;
        uint64_t v510 = 0;
        uint64_t v512 = 1;
        uint64_t v513 = v391;
        uint64_t v514 = 0;
        uint64_t v515 = v397;
        uint64_t v516 = 0;
        uint64_t v517 = v417;
        uint64_t v518 = 0;
        uint64_t v519 = v423;
        uint64_t v520 = v375;
        uint64_t v521 = v368;
        uint64_t v522 = v306;
        char v523 = v318;
        long long v524 = v361;
        long long v525 = v112;
        uint64_t v219 = v347;
LABEL_198:
        long long v526 = v219;
        uint64_t v194 = v403;
        goto LABEL_199;
      }
LABEL_222:
      __break(1u);
      goto LABEL_223;
    case 16:
      uint64_t v451 = a5;
      uint64_t v38 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      char v429 = *(void *)(a2 + 40);
      uint64_t v40 = *(void *)(a2 + 56);
      uint64_t v398 = *(void *)(a2 + 32);
      char v403 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v115 = specialized static Entity.entityInfoType(_:)(v38);
        if (v115)
        {
          uint64_t v116 = (*(uint64_t (**)(void))(v115 + 232))();
          uint64_t v117 = *(void *)(v116 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v117, 0);
          *(void *)(v116 + 16) = v38;
          MEMORY[0x22A68E750](v38, v116);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
LABEL_57:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v118 = swift_allocObject();
        swift_weakInit();
        uint64_t v411 = v118;
        *(void *)(v118 + 16) = v39;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v119 = String.init(cString:)();
        char v121 = v120;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v122 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v123 = specialized __RawDictionaryStorage.find<A>(_:)(v119, v121);
          if (v124)
          {
            uint64_t v125 = (uint64_t *)(*(void *)(v122 + 56) + 56 * v123);
            uint64_t v126 = v125[1];
            uint64_t v127 = v125[3];
            uint64_t v418 = *v125;
            double v424 = v125[2];
            uint64_t v128 = v125[4];
            uint64_t v129 = v125[5];
            uint64_t v130 = v125[6];
            swift_bridgeObjectRelease();
            goto LABEL_120;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v418 = 0;
        double v424 = 0;
        uint64_t v126 = 0;
        uint64_t v127 = 0;
        uint64_t v128 = 0;
        uint64_t v129 = 0;
        uint64_t v130 = 0;
LABEL_120:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&v540 = 0;
        BYTE8(v540) = 0;
        *(void *)&v541 = v429;
        *((void *)&v541 + 1) = v418;
        *(void *)&v542 = v126;
        *((void *)&v542 + 1) = v424;
        *(void *)&v543 = v127;
        *((void *)&v543 + 1) = v128;
        *(void *)&v544 = v129;
        *((void *)&v544 + 1) = v130;
        char v387 = v127;
        char v392 = v126;
        if (!v40 || !REBindPointBoundComponent()) {
          goto LABEL_132;
        }
        uint64_t v43 = v128;
        uint64_t v183 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_130:
          type metadata accessor for Entity();
          char v184 = swift_dynamicCastClassUnconditional();
          goto LABEL_131;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
LABEL_190:
          uint64_t v283 = specialized static Entity.entityInfoType(_:)(v183);
          if (v283)
          {
            double v185 = (*(uint64_t (**)(void))(v283 + 232))();
            uint64_t v284 = *(void *)(v185 + 16);
            swift_retain();
            MEMORY[0x22A68E750](v284, 0);
            *(void *)(v185 + 16) = v183;
            MEMORY[0x22A68E750](v183, v185);
            swift_release();
            goto LABEL_192;
          }
          char v184 = makeEntity(for:)(v183);
LABEL_131:
          double v185 = v184;
LABEL_192:
          uint64_t v128 = v43;
LABEL_193:
          specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v528);
          if (v528 != 1)
          {
            char v487 = v543;
            char v488 = v544;
            uint64_t v485 = v541;
            uint64_t v486 = v542;
            uint64_t v285 = v537;
            uint64_t v286 = v536;
            char v378 = v129;
            uint64_t v332 = v534;
            unint64_t v339 = v532;
            uint64_t v287 = v531;
            uint64_t v303 = v531;
            uint64_t v325 = v530;
            uint64_t v288 = v185;
            uint64_t v289 = v529;
            uint64_t v344 = v533;
            uint64_t v351 = HIDWORD(v534);
            double v459 = v529;
            double v460 = v530;
            uint64_t v461 = v532;
            uint64_t v462 = v533;
            double v463 = v534;
            char v464 = BYTE4(v534);
            unint64_t v465 = v535;
            char v466 = v536;
            uint64_t v290 = v535;
            unint64_t v467 = v537 & 0x1FF;
            uint64_t v364 = (v537 >> 8) & 1;
            uint64_t v357 = WORD1(v537) & 1;
            char v468 = BYTE2(v537) & 1;
            long long v469 = v538;
            long long v470 = v539;
            uint64_t v439 = v538;
            uint64_t v449 = v539;
            long long v471 = 1;
            char v458 = v528;
            uint64_t v371 = v130;
            v457[0] = v411;
            long long v472 = v185;
            long long v473 = 0;
            uint64_t v474 = 0.0;
            uint64_t v475 = 0.0;
            uint64_t v477 = 0;
            char v478 = 0.0;
            uint64_t v476 = Strong;
            uint64_t v479 = 1;
            uint64_t v480 = v398;
            uint64_t v481 = 0;
            uint64_t v482 = 0;
            uint64_t v483 = 1;
            uint64_t v484 = v540;
            uint64_t v489 = v403;
            uint64_t v291 = v528;
            char v312 = v528;
            swift_retain();
            swift_retain();
            outlined copy of FromToByAction<BlendShapeWeights>?(v291, v289, v325, v287, v339, v344, v332, v290, v286, v285);
            swift_retain();
            v451(v457);
            outlined consume of FromToByAction<BlendShapeWeights>?(v312, v289, v325, v303, v339, v344, v332, v290, v286, v285);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            char v490 = v411;
            double v491 = v312;
            double v492 = v289;
            uint64_t v493 = v325;
            uint64_t v494 = v339;
            double v495 = v344;
            char v496 = v332;
            unint64_t v497 = v351;
            char v498 = v290;
            unint64_t v499 = v286;
            LOBYTE(v500) = v285;
            HIBYTE(v500) = v364;
            uint64_t v501 = v357;
            char v502 = v439;
            uint64_t v503 = v449;
            uint64_t v504 = 1;
            uint64_t v505 = v288;
            uint64_t v506 = 0;
            uint64_t v508 = 0.0;
            uint64_t v507 = 0.0;
            uint64_t v511 = 0.0;
            uint64_t v509 = Strong;
            uint64_t v510 = 0;
            uint64_t v512 = 1;
            uint64_t v513 = v398;
            uint64_t v514 = 0;
            uint64_t v515 = 0;
            uint64_t v516 = 1;
            uint64_t v517 = 0;
            uint64_t v518 = 0;
            uint64_t v519 = v429;
            uint64_t v520 = v418;
            uint64_t v521 = v392;
            uint64_t v522 = v424;
            char v523 = v387;
            long long v524 = v128;
            unint64_t v236 = v378;
            goto LABEL_197;
          }
LABEL_194:
          swift_release();
          swift_release();
          swift_release();
LABEL_195:
          swift_release();
          return 0;
        }
        __break(1u);
        goto LABEL_125;
      }
LABEL_223:
      __break(1u);
      goto LABEL_224;
    case 32:
      uint64_t v451 = a5;
      uint64_t v41 = *(void *)a2;
      uint64_t v42 = *(void *)(a2 + 8);
      char v429 = *(void *)(a2 + 40);
      uint64_t v43 = *(void *)(a2 + 56);
      uint64_t v398 = *(void *)(a2 + 32);
      char v403 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
LABEL_65:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v134 = swift_allocObject();
        swift_weakInit();
        uint64_t v411 = v134;
        *(void *)(v134 + 16) = v42;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v135 = String.init(cString:)();
        uint64_t v137 = v136;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v138 = static AnimationResource.codableActionTypeMap;
        if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
          goto LABEL_126;
        }
        swift_bridgeObjectRetain();
        char v139 = specialized __RawDictionaryStorage.find<A>(_:)(v135, v137);
        if (v140)
        {
          uint64_t v141 = (uint64_t *)(*(void *)(v138 + 56) + 56 * v139);
          uint64_t v142 = v141[1];
          uint64_t v143 = v141[3];
          uint64_t v418 = *v141;
          double v424 = v141[2];
          uint64_t v128 = v141[4];
          uint64_t v129 = v141[5];
          uint64_t v130 = v141[6];
          swift_bridgeObjectRelease();
LABEL_127:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v540 = 0;
          BYTE8(v540) = 0;
          *(void *)&v541 = v429;
          *((void *)&v541 + 1) = v418;
          *(void *)&v542 = v142;
          *((void *)&v542 + 1) = v424;
          *(void *)&v543 = v143;
          *((void *)&v543 + 1) = v128;
          *(void *)&v544 = v129;
          *((void *)&v544 + 1) = v130;
          char v387 = v143;
          char v392 = v142;
          if (v43 && REBindPointBoundComponent())
          {
            uint64_t v43 = v128;
            uint64_t v183 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject()) {
              goto LABEL_130;
            }
            if (REEntityIsBeingDestroyed())
            {
LABEL_232:
              __break(1u);
              goto LABEL_233;
            }
            goto LABEL_190;
          }
LABEL_132:
          double v185 = 0;
          goto LABEL_193;
        }
LABEL_125:
        swift_bridgeObjectRelease();
LABEL_126:
        uint64_t v418 = 0;
        double v424 = 0;
        uint64_t v142 = 0;
        uint64_t v143 = 0;
        uint64_t v128 = 0;
        uint64_t v129 = 0;
        uint64_t v130 = 0;
        goto LABEL_127;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v131 = specialized static Entity.entityInfoType(_:)(v41);
        if (v131)
        {
          uint64_t v132 = (*(uint64_t (**)(void))(v131 + 232))();
          uint64_t v133 = *(void *)(v132 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v133, 0);
          *(void *)(v132 + 16) = v41;
          MEMORY[0x22A68E750](v41, v132);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v41);
        }
        goto LABEL_65;
      }
LABEL_224:
      __break(1u);
      goto LABEL_225;
    case 64:
      uint64_t v44 = *(void *)a2;
      uint64_t v45 = *(void *)(a2 + 8);
      unint64_t v430 = *(void *)(a2 + 24);
      uint64_t v46 = *(void *)(a2 + 40);
      uint64_t v399 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_73;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_225:
        __break(1u);
        goto LABEL_226;
      }
      uint64_t v144 = specialized static Entity.entityInfoType(_:)(v44);
      if (v144)
      {
        uint64_t v145 = (*(uint64_t (**)(void))(v144 + 232))();
        uint64_t v146 = *(void *)(v145 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v146, 0);
        *(void *)(v145 + 16) = v44;
        MEMORY[0x22A68E750](v44, v145);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v44);
      }
LABEL_73:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v147 = swift_allocObject();
      swift_weakInit();
      double v425 = v147;
      *(void *)(v147 + 16) = v45;
      swift_beginAccess();
      swift_weakAssign();
      if (!v46 || !REBindPointBoundComponent())
      {
        uint64_t v150 = 0;
        goto LABEL_79;
      }
      uint64_t v148 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v149 = swift_dynamicCastClassUnconditional();
LABEL_77:
        uint64_t v150 = v149;
        goto LABEL_79;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_227:
        __break(1u);
LABEL_228:
        __break(1u);
        goto LABEL_229;
      }
      uint64_t v220 = specialized static Entity.entityInfoType(_:)(v148);
      if (!v220)
      {
        uint64_t v149 = makeEntity(for:)(v148);
        goto LABEL_77;
      }
      uint64_t v150 = (*(uint64_t (**)(void))(v220 + 232))();
      uint64_t v221 = *(void *)(v150 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v221, 0);
      *(void *)(v150 + 16) = v148;
      MEMORY[0x22A68E750](v148, v150);
      swift_release();
LABEL_79:
      uint64_t v151 = String.init(cString:)();
      uint64_t v153 = v152;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v154 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_134;
      }
      swift_bridgeObjectRetain();
      char v155 = specialized __RawDictionaryStorage.find<A>(_:)(v151, v153);
      if ((v156 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_134:
        uint64_t v158 = 0;
        uint64_t v159 = 0;
        uint64_t v160 = 0;
        uint64_t v161 = 0;
        uint64_t v412 = 0;
        uint64_t v419 = 0;
        long long v406 = 0;
        goto LABEL_135;
      }
      uint64_t v157 = (uint64_t *)(*(void *)(v154 + 56) + 56 * v155);
      uint64_t v158 = *v157;
      uint64_t v159 = v157[1];
      uint64_t v160 = v157[2];
      uint64_t v161 = v157[3];
      uint64_t v412 = v157[5];
      uint64_t v419 = v157[4];
      long long v406 = v157[6];
      swift_bridgeObjectRelease();
LABEL_135:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&v540 = 0;
      BYTE8(v540) = 0;
      *(void *)&v541 = v430;
      *((void *)&v541 + 1) = v158;
      *(void *)&v542 = v159;
      *((void *)&v542 + 1) = v160;
      uint64_t v388 = v161;
      char v393 = v160;
      *(void *)&v543 = v161;
      *((void *)&v543 + 1) = v419;
      *(void *)&v544 = v412;
      *((void *)&v544 + 1) = v406;
      specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v528);
      if (v528 == 1) {
        goto LABEL_194;
      }
      char v487 = v543;
      char v488 = v544;
      uint64_t v485 = v541;
      uint64_t v486 = v542;
      uint64_t v369 = v159;
      uint64_t v376 = v158;
      double v186 = v537;
      char v452 = a5;
      uint64_t v443 = v536;
      double v187 = v535;
      uint64_t v326 = v532;
      uint64_t v333 = v534;
      uint64_t v188 = v531;
      uint64_t v313 = v531;
      uint64_t v189 = v530;
      uint64_t v190 = v529;
      uint64_t v348 = HIDWORD(v534);
      double v459 = v529;
      double v460 = v530;
      uint64_t v461 = v532;
      uint64_t v462 = v533;
      uint64_t v191 = v533;
      double v463 = v534;
      char v464 = BYTE4(v534);
      unint64_t v465 = v535;
      char v466 = v536;
      unint64_t v467 = v537 & 0x1FF;
      uint64_t v362 = (v537 >> 8) & 1;
      uint64_t v355 = WORD1(v537) & 1;
      char v468 = BYTE2(v537) & 1;
      long long v469 = v538;
      long long v470 = v539;
      char v433 = v538;
      uint64_t v192 = v539;
      long long v471 = 1;
      char v458 = v528;
      v457[0] = v425;
      long long v472 = v150;
      long long v473 = 0;
      uint64_t v474 = 0.0;
      uint64_t v475 = 0.0;
      uint64_t v477 = 0;
      char v478 = 0.0;
      uint64_t v476 = Strong;
      uint64_t v479 = 1;
      uint64_t v480 = 0;
      uint64_t v481 = 1;
      uint64_t v482 = 0;
      uint64_t v483 = 1;
      uint64_t v484 = v540;
      uint64_t v489 = v399;
      uint64_t v193 = v528;
      char v319 = v528;
      swift_retain();
      swift_retain();
      outlined copy of FromToByAction<BlendShapeWeights>?(v193, v190, v189, v188, v326, v191, v333, v187, v443, v186);
      swift_retain();
      v452(v457);
      outlined consume of FromToByAction<BlendShapeWeights>?(v319, v190, v189, v313, v326, v191, v333, v187, v443, v186);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      char v490 = v425;
      double v491 = v319;
      double v492 = v190;
      uint64_t v493 = v189;
      uint64_t v494 = v326;
      double v495 = v191;
      char v496 = v333;
      unint64_t v497 = v348;
      char v498 = v187;
      unint64_t v499 = v443;
      LOBYTE(v500) = v186;
      HIBYTE(v500) = v362;
      uint64_t v501 = v355;
      char v502 = v433;
      uint64_t v503 = v192;
      uint64_t v504 = 1;
      uint64_t v505 = v150;
      uint64_t v506 = 0;
      uint64_t v508 = 0.0;
      uint64_t v507 = 0.0;
      uint64_t v511 = 0.0;
      uint64_t v509 = Strong;
      uint64_t v510 = 0;
      uint64_t v512 = 1;
      uint64_t v513 = 0;
      uint64_t v514 = 1;
      uint64_t v515 = 0;
      uint64_t v516 = 1;
      uint64_t v517 = 0;
      uint64_t v518 = 0;
      uint64_t v519 = v430;
      uint64_t v520 = v376;
      uint64_t v521 = v369;
      uint64_t v522 = v393;
      char v523 = v388;
      long long v524 = v419;
      long long v525 = v412;
      long long v526 = v406;
      uint64_t v194 = v399;
LABEL_199:
      long long v527 = v194;
      outlined release of ActionEvent<FromToByAction<BlendShapeWeights>>((uint64_t)&v490);
      return 0;
    default:
      if (a4 != 128) {
        goto LABEL_195;
      }
      uint64_t v20 = *(void *)a2;
      uint64_t v21 = *(void *)(a2 + 8);
      double v428 = *(void *)(a2 + 24);
      uint64_t v22 = *(void *)(a2 + 40);
      char v403 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          goto LABEL_227;
        }
        uint64_t v195 = specialized static Entity.entityInfoType(_:)(v20);
        if (v195)
        {
          uint64_t v196 = (*(uint64_t (**)(void))(v195 + 232))();
          uint64_t v197 = *(void *)(v196 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v197, 0);
          *(void *)(v196 + 16) = v20;
          MEMORY[0x22A68E750](v20, v196);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v20);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      char v198 = swift_allocObject();
      swift_weakInit();
      unint64_t v402 = v198;
      *(void *)(v198 + 16) = v21;
      swift_beginAccess();
      swift_weakAssign();
      if (v22 && REBindPointBoundComponent())
      {
        double v199 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          double v200 = swift_dynamicCastClassUnconditional();
LABEL_144:
          uint64_t v201 = v200;
          goto LABEL_146;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_233:
          __break(1u);
          JUMPOUT(0x227FA7510);
        }
        uint64_t v292 = specialized static Entity.entityInfoType(_:)(v199);
        if (!v292)
        {
          double v200 = makeEntity(for:)(v199);
          goto LABEL_144;
        }
        uint64_t v201 = (*(uint64_t (**)(void))(v292 + 232))();
        uint64_t v293 = *(void *)(v201 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v293, 0);
        *(void *)(v201 + 16) = v199;
        MEMORY[0x22A68E750](v199, v201);
        swift_release();
      }
      else
      {
        uint64_t v201 = 0;
      }
LABEL_146:
      uint64_t v202 = String.init(cString:)();
      char v204 = v203;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v205 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v206 = specialized __RawDictionaryStorage.find<A>(_:)(v202, v204);
        if (v207)
        {
          uint64_t v208 = (uint64_t *)(*(void *)(v205 + 56) + 56 * v206);
          uint64_t v209 = *v208;
          uint64_t v210 = v208[1];
          char v211 = v208[2];
          double v212 = v208[3];
          char v420 = v208[5];
          uint64_t v427 = v208[4];
          uint64_t v413 = v208[6];
          swift_bridgeObjectRelease();
LABEL_157:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&v540 = 0;
          BYTE8(v540) = 0;
          *(void *)&v541 = v428;
          *((void *)&v541 + 1) = v209;
          *(void *)&v542 = v210;
          *((void *)&v542 + 1) = v211;
          uint64_t v394 = v211;
          *(void *)&v543 = v212;
          *((void *)&v543 + 1) = v427;
          *(void *)&v544 = v420;
          *((void *)&v544 + 1) = v413;
          specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v528);
          if (v528 == 1) {
            goto LABEL_194;
          }
          char v487 = v543;
          char v488 = v544;
          uint64_t v485 = v541;
          uint64_t v486 = v542;
          uint64_t v370 = v210;
          char v377 = v209;
          double v213 = v537;
          uint64_t v434 = v536;
          uint64_t v214 = v534;
          unint64_t v334 = v533;
          uint64_t v320 = v535;
          char v327 = v532;
          uint64_t v215 = v531;
          uint64_t v216 = v530;
          uint64_t v314 = v529;
          uint64_t v349 = HIDWORD(v534);
          double v459 = v529;
          double v460 = v530;
          uint64_t v300 = v530;
          uint64_t v304 = v531;
          uint64_t v461 = v532;
          uint64_t v462 = v533;
          double v463 = v534;
          uint64_t v296 = v534;
          char v464 = BYTE4(v534);
          unint64_t v465 = v535;
          char v466 = v536;
          unint64_t v467 = v537 & 0x1FF;
          uint64_t v363 = (v537 >> 8) & 1;
          uint64_t v356 = WORD1(v537) & 1;
          char v468 = BYTE2(v537) & 1;
          long long v469 = v538;
          long long v470 = v539;
          uint64_t v444 = v538;
          uint64_t v217 = v539;
          long long v471 = 1;
          char v458 = v528;
          v457[0] = v402;
          long long v472 = v201;
          long long v473 = 0;
          uint64_t v474 = 0.0;
          uint64_t v475 = 0.0;
          uint64_t v477 = 0;
          char v478 = 0.0;
          uint64_t v476 = Strong;
          uint64_t v479 = 1;
          uint64_t v480 = 0;
          uint64_t v481 = 1;
          uint64_t v482 = 0;
          uint64_t v483 = 1;
          uint64_t v484 = v540;
          uint64_t v489 = v403;
          uint64_t v218 = v528;
          uint64_t v307 = v528;
          swift_retain();
          swift_retain();
          outlined copy of FromToByAction<BlendShapeWeights>?(v218, v314, v216, v215, v327, v334, v214, v320, v434, v213);
          swift_retain();
          a5(v457);
          swift_release();
          outlined consume of FromToByAction<BlendShapeWeights>?(v307, v314, v300, v304, v327, v334, v296, v320, v434, v213);
          swift_release();
          swift_release();
          swift_release();
          char v490 = v402;
          double v491 = v307;
          double v492 = v314;
          uint64_t v493 = v300;
          uint64_t v494 = v327;
          double v495 = v334;
          char v496 = v296;
          unint64_t v497 = v349;
          char v498 = v320;
          unint64_t v499 = v434;
          LOBYTE(v500) = v213;
          HIBYTE(v500) = v363;
          uint64_t v501 = v356;
          char v502 = v444;
          uint64_t v503 = v217;
          uint64_t v504 = 1;
          uint64_t v505 = v201;
          uint64_t v506 = 0;
          uint64_t v508 = 0.0;
          uint64_t v507 = 0.0;
          uint64_t v511 = 0.0;
          uint64_t v509 = Strong;
          uint64_t v510 = 0;
          uint64_t v512 = 1;
          uint64_t v513 = 0;
          uint64_t v514 = 1;
          uint64_t v515 = 0;
          uint64_t v516 = 1;
          uint64_t v517 = 0;
          uint64_t v518 = 0;
          uint64_t v519 = v428;
          uint64_t v520 = v377;
          uint64_t v521 = v370;
          uint64_t v522 = v394;
          char v523 = v212;
          long long v524 = v427;
          long long v525 = v420;
          uint64_t v219 = v413;
          goto LABEL_198;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v209 = 0;
      uint64_t v210 = 0;
      char v211 = 0;
      double v212 = 0;
      char v420 = 0;
      uint64_t v427 = 0;
      uint64_t v413 = 0;
      goto LABEL_157;
  }
}

uint64_t specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t *a9)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      uint64_t v13 = *(void *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v335 = *(void *)(a2 + 32);
      uint64_t v341 = *(void *)(a2 + 40);
      uint64_t v325 = *(void *)(a2 + 56);
      uint64_t v331 = *(void *)(a2 + 48);
      uint64_t v299 = *(void *)(a2 + 64);
      float v16 = *(float *)(a2 + 72);
      float v15 = *(float *)(a2 + 76);
      char v306 = *(unsigned char *)(a2 + 80);
      unint64_t v312 = *(void *)(a2 + 88);
      unint64_t v319 = *(void *)(a2 + 96);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if (REEntityIsBeingDestroyed())
      {
        __break(1u);
        goto LABEL_211;
      }
      uint64_t v41 = specialized static Entity.entityInfoType(_:)(v13);
      if (v41)
      {
        uint64_t v42 = (*(uint64_t (**)(void))(v41 + 232))();
        uint64_t v43 = *(void *)(v42 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v43, 0);
        *(void *)(v42 + 16) = v13;
        MEMORY[0x22A68E750](v13, v42);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v13);
      }
LABEL_25:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v44 = swift_allocObject();
      swift_weakInit();
      *(void *)(v44 + 16) = v14;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v45 = String.init(cString:)();
      uint64_t v47 = v46;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      uint64_t v358 = a7;
      swift_beginAccess();
      uint64_t v48 = static AnimationResource.codableActionTypeMap;
      uint64_t v349 = a8;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_85;
      }
      swift_bridgeObjectRetain();
      unint64_t v49 = specialized __RawDictionaryStorage.find<A>(_:)(v45, v47);
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_85:
        uint64_t v53 = 0;
        uint64_t v52 = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v57 = 0;
        uint64_t v56 = 0;
        uint64_t v58 = 0;
        goto LABEL_86;
      }
      uint64_t v51 = (uint64_t *)(*(void *)(v48 + 56) + 56 * v49);
      uint64_t v53 = *v51;
      uint64_t v52 = v51[1];
      uint64_t v54 = v51[2];
      uint64_t v55 = v51[3];
      uint64_t v57 = v51[4];
      uint64_t v56 = v51[5];
      uint64_t v58 = v51[6];
      swift_bridgeObjectRelease();
LABEL_86:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v436 = v335;
      BYTE8(v436) = 0;
      *(void *)&long long v437 = v341;
      *((void *)&v437 + 1) = v53;
      *(void *)&long long v438 = v52;
      *((void *)&v438 + 1) = v54;
      *(void *)&long long v439 = v55;
      *((void *)&v439 + 1) = v57;
      *(void *)&long long v440 = v56;
      *((void *)&v440 + 1) = v58;
      uint64_t v285 = v54;
      uint64_t v288 = v52;
      uint64_t v281 = v56;
      uint64_t v283 = v55;
      uint64_t v278 = v58;
      if (!v299 || !REBindPointBoundComponent())
      {
        uint64_t v167 = 0;
        goto LABEL_92;
      }
      uint64_t Entity = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v166 = swift_dynamicCastClassUnconditional();
LABEL_90:
        uint64_t v167 = v166;
        goto LABEL_92;
      }
      if (REEntityIsBeingDestroyed()) {
        goto LABEL_219;
      }
      uint64_t v262 = specialized static Entity.entityInfoType(_:)(Entity);
      if (!v262)
      {
        uint64_t v166 = makeEntity(for:)(Entity);
        goto LABEL_90;
      }
      uint64_t v167 = (*(uint64_t (**)(void))(v262 + 232))();
      uint64_t v263 = *(void *)(v167 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v263, 0);
      *(void *)(v167 + 16) = Entity;
      MEMORY[0x22A68E750](Entity, v167);
      swift_release();
LABEL_92:
      specialized ActionEventData.action<A>()(v358, v349, (uint64_t)&v429);
      uint64_t v168 = v433;
      if (!v433) {
        goto LABEL_171;
      }
      uint64_t v169 = v434;
      uint64_t v170 = v432;
      uint64_t v171 = v431;
      uint64_t v354 = v53;
      uint64_t v172 = v430;
      uint64_t v173 = v429;
      char v174 = v435;
      swift_retain();
      outlined copy of SetEntityPropertyAction<Transform>?(v173, v172, v171, v170, v168);
      char v175 = specialized ActionEventData.parameter<A>(type:)(a9);
      uint64_t v371 = v173;
      uint64_t v372 = v172;
      double v176 = v16;
      char v373 = v171 & 1;
      double v177 = v15;
      uint64_t v374 = v170;
      uint64_t v375 = v168;
      uint64_t v376 = v169;
      char v377 = v174 & 1;
      char v276 = v175 & 1;
      char v378 = v175 & 1;
      uint64_t v370 = v44;
      uint64_t v379 = v167;
      char v380 = v306;
      double v381 = v176;
      double v382 = v177;
      uint64_t v383 = Strong;
      uint64_t v384 = v325;
      double v385 = -1.0;
      char v386 = 0;
      unint64_t v387 = v312;
      char v388 = 0;
      unint64_t v389 = v319;
      char v390 = 0;
      long long v393 = v438;
      long long v394 = v439;
      long long v395 = v440;
      long long v391 = v436;
      long long v392 = v437;
      uint64_t v396 = v331;
      swift_retain();
      swift_retain();
      a5(&v370);
      outlined consume of SetEntityPropertyAction<Transform>?(v173, v172, v171, v170, v168);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v397 = v44;
      uint64_t v398 = v173;
      uint64_t v399 = v172;
      char v400 = v171 & 1;
      uint64_t v401 = v170;
      uint64_t v402 = v168;
      uint64_t v403 = v169;
      char v404 = v174 & 1;
      char v405 = v276;
      uint64_t v406 = v167;
      char v407 = v306;
      double v408 = v176;
      double v409 = v177;
      uint64_t v410 = Strong;
      uint64_t v411 = v325;
      double v412 = -1.0;
      char v413 = 0;
      unint64_t v414 = v312;
      char v415 = 0;
      unint64_t v416 = v319;
      char v417 = 0;
      uint64_t v418 = v335;
      char v419 = 0;
      uint64_t v420 = v341;
      uint64_t v421 = v354;
      uint64_t v422 = v288;
      uint64_t v423 = v285;
      uint64_t v424 = v283;
      uint64_t v425 = v57;
      uint64_t v426 = v281;
      uint64_t v178 = v278;
LABEL_127:
      uint64_t v427 = v178;
      uint64_t v219 = v331;
LABEL_170:
      uint64_t v428 = v219;
      outlined release of ActionEvent<PlayAudioAction>((uint64_t)&v397);
      return 0;
    case 2:
      uint64_t v21 = *(void *)a2;
      uint64_t v22 = *(void *)(a2 + 8);
      uint64_t v336 = *(void *)(a2 + 32);
      uint64_t v342 = *(void *)(a2 + 40);
      float v23 = *(float *)(a2 + 56);
      unint64_t v321 = *(void *)(a2 + 64);
      unint64_t v326 = *(void *)(a2 + 48);
      uint64_t v313 = *(void *)(a2 + 72);
      uint64_t v331 = *(void *)(a2 + 80);
      uint64_t v300 = *(void *)(a2 + 88);
      float v25 = *(float *)(a2 + 96);
      float v24 = *(float *)(a2 + 100);
      char v307 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_211:
          __break(1u);
          goto LABEL_212;
        }
        uint64_t v59 = specialized static Entity.entityInfoType(_:)(v21);
        if (v59)
        {
          uint64_t v60 = (*(uint64_t (**)(void))(v59 + 232))();
          uint64_t v61 = *(void *)(v60 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v61, 0);
          *(void *)(v60 + 16) = v21;
          MEMORY[0x22A68E750](v21, v60);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v21);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v62 = swift_allocObject();
      swift_weakInit();
      uint64_t v293 = v62;
      *(void *)(v62 + 16) = v22;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v63 = String.init(cString:)();
      uint64_t v65 = v64;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      uint64_t v359 = a7;
      swift_beginAccess();
      uint64_t v66 = static AnimationResource.codableActionTypeMap;
      uint64_t v350 = a8;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_96;
      }
      swift_bridgeObjectRetain();
      unint64_t v67 = specialized __RawDictionaryStorage.find<A>(_:)(v63, v65);
      if (v68)
      {
        char v69 = (uint64_t *)(*(void *)(v66 + 56) + 56 * v67);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        uint64_t v72 = v69[2];
        uint64_t v73 = v69[3];
        uint64_t v74 = v69[4];
        uint64_t v75 = v69[5];
        uint64_t v76 = v69[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_96:
        uint64_t v71 = 0;
        uint64_t v70 = 0;
        uint64_t v72 = 0;
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        uint64_t v76 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v436 = v336;
      BYTE8(v436) = 0;
      *(void *)&long long v437 = v342;
      *((void *)&v437 + 1) = v71;
      *(void *)&long long v438 = v70;
      *((void *)&v438 + 1) = v72;
      *(void *)&long long v439 = v73;
      *((void *)&v439 + 1) = v74;
      *(void *)&long long v440 = v75;
      *((void *)&v440 + 1) = v76;
      uint64_t v286 = v72;
      uint64_t v289 = v70;
      uint64_t v282 = v74;
      uint64_t v279 = v75;
      if (v300 && REBindPointBoundComponent())
      {
        uint64_t v179 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v180 = swift_dynamicCastClassUnconditional();
LABEL_101:
          uint64_t v181 = v180;
          goto LABEL_103;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        uint64_t v264 = specialized static Entity.entityInfoType(_:)(v179);
        if (!v264)
        {
          uint64_t v180 = makeEntity(for:)(v179);
          goto LABEL_101;
        }
        uint64_t v181 = (*(uint64_t (**)(void))(v264 + 232))();
        uint64_t v265 = *(void *)(v181 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v265, 0);
        *(void *)(v181 + 16) = v179;
        MEMORY[0x22A68E750](v179, v181);
        swift_release();
      }
      else
      {
        uint64_t v181 = 0;
      }
LABEL_103:
      specialized ActionEventData.action<A>()(v359, v350, (uint64_t)&v429);
      uint64_t v182 = v433;
      if (v433)
      {
        uint64_t v183 = v434;
        uint64_t v184 = v432;
        uint64_t v363 = v71;
        uint64_t v185 = v431;
        uint64_t v186 = v430;
        uint64_t v187 = v429;
        char v188 = v435;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v187, v186, v185, v184, v182);
        char v189 = specialized ActionEventData.parameter<A>(type:)(a9);
        uint64_t v371 = v187;
        uint64_t v372 = v186;
        double v190 = v25;
        char v373 = v185 & 1;
        double v191 = v24;
        double v192 = v23;
        uint64_t v374 = v184;
        uint64_t v375 = v182;
        uint64_t v376 = v183;
        char v377 = v188 & 1;
        char v274 = v189 & 1;
        char v378 = v189 & 1;
        uint64_t v370 = v293;
        uint64_t v379 = v181;
        char v380 = v307;
        double v381 = v190;
        double v382 = v191;
        uint64_t v383 = Strong;
        uint64_t v384 = v313;
        double v385 = v192;
        char v386 = 0;
        unint64_t v387 = v326;
        char v388 = 0;
        unint64_t v389 = v321;
        char v390 = 0;
        long long v393 = v438;
        long long v394 = v439;
        long long v395 = v440;
        long long v391 = v436;
        long long v392 = v437;
        uint64_t v396 = v331;
        swift_retain();
        swift_retain();
        a5(&v370);
        outlined consume of SetEntityPropertyAction<Transform>?(v187, v186, v185, v184, v182);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v397 = v293;
        uint64_t v398 = v187;
        uint64_t v399 = v186;
        char v400 = v185 & 1;
        uint64_t v401 = v184;
        uint64_t v402 = v182;
        uint64_t v403 = v183;
        char v404 = v188 & 1;
        char v405 = v274;
        uint64_t v406 = v181;
        char v407 = v307;
        double v408 = v190;
        double v409 = v191;
        uint64_t v410 = Strong;
        uint64_t v411 = v313;
        double v412 = v192;
        char v413 = 0;
        unint64_t v414 = v326;
        char v415 = 0;
        unint64_t v416 = v321;
        char v417 = 0;
        uint64_t v418 = v336;
        char v419 = 0;
        uint64_t v420 = v342;
        uint64_t v421 = v363;
        uint64_t v422 = v289;
        uint64_t v423 = v286;
        uint64_t v424 = v73;
        uint64_t v425 = v282;
        uint64_t v426 = v279;
        uint64_t v178 = v76;
        goto LABEL_127;
      }
LABEL_171:
      swift_release();
      swift_release();
      swift_release();
LABEL_172:
      swift_release();
      return 0;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_172;
    case 4:
      uint64_t v26 = *(void *)a2;
      uint64_t v27 = *(void *)(a2 + 8);
      uint64_t v337 = *(void *)(a2 + 32);
      uint64_t v343 = *(void *)(a2 + 40);
      uint64_t v327 = *(void *)(a2 + 56);
      uint64_t v331 = *(void *)(a2 + 48);
      uint64_t v314 = *(void *)(a2 + 64);
      float v29 = *(float *)(a2 + 72);
      float v28 = *(float *)(a2 + 76);
      char v322 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_212:
          __break(1u);
          goto LABEL_213;
        }
        uint64_t v77 = specialized static Entity.entityInfoType(_:)(v26);
        if (v77)
        {
          uint64_t v78 = (*(uint64_t (**)(void))(v77 + 232))();
          uint64_t v79 = *(void *)(v78 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v79, 0);
          *(void *)(v78 + 16) = v26;
          MEMORY[0x22A68E750](v26, v78);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v26);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v80 = swift_allocObject();
      swift_weakInit();
      uint64_t v309 = v80;
      *(void *)(v80 + 16) = v27;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v81 = String.init(cString:)();
      uint64_t v83 = v82;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v84 = static AnimationResource.codableActionTypeMap;
      uint64_t v351 = a8;
      unint64_t v360 = a7;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_107;
      }
      swift_bridgeObjectRetain();
      unint64_t v85 = specialized __RawDictionaryStorage.find<A>(_:)(v81, v83);
      if (v86)
      {
        uint64_t v87 = (uint64_t *)(*(void *)(v84 + 56) + 56 * v85);
        uint64_t v89 = *v87;
        uint64_t v88 = v87[1];
        uint64_t v90 = v87[2];
        uint64_t v91 = v87[3];
        uint64_t v92 = v87[4];
        uint64_t v93 = v87[5];
        uint64_t v94 = v87[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_107:
        uint64_t v89 = 0;
        uint64_t v88 = 0;
        uint64_t v90 = 0;
        uint64_t v91 = 0;
        uint64_t v92 = 0;
        uint64_t v93 = 0;
        uint64_t v94 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v436 = v337;
      BYTE8(v436) = 0;
      *(void *)&long long v437 = v343;
      *((void *)&v437 + 1) = v89;
      *(void *)&long long v438 = v88;
      *((void *)&v438 + 1) = v90;
      *(void *)&long long v439 = v91;
      *((void *)&v439 + 1) = v92;
      *(void *)&long long v440 = v93;
      *((void *)&v440 + 1) = v94;
      uint64_t v294 = v90;
      uint64_t v302 = v88;
      uint64_t v287 = v93;
      uint64_t v290 = v92;
      if (v314 && REBindPointBoundComponent())
      {
        uint64_t v193 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v194 = swift_dynamicCastClassUnconditional();
LABEL_112:
          uint64_t v195 = v194;
          goto LABEL_114;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v266 = specialized static Entity.entityInfoType(_:)(v193);
        if (!v266)
        {
          uint64_t v194 = makeEntity(for:)(v193);
          goto LABEL_112;
        }
        uint64_t v195 = (*(uint64_t (**)(void))(v266 + 232))();
        uint64_t v267 = *(void *)(v195 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v267, 0);
        *(void *)(v195 + 16) = v193;
        MEMORY[0x22A68E750](v193, v195);
        swift_release();
      }
      else
      {
        uint64_t v195 = 0;
      }
LABEL_114:
      specialized ActionEventData.action<A>()(v360, v351, (uint64_t)&v429);
      uint64_t v196 = v433;
      if (v433)
      {
        uint64_t v275 = v195;
        uint64_t v197 = v434;
        uint64_t v198 = v432;
        uint64_t v199 = v431;
        uint64_t v364 = v89;
        uint64_t v200 = v430;
        uint64_t v201 = v429;
        char v202 = v435;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v201, v200, v199, v198, v196);
        char v203 = specialized ActionEventData.parameter<A>(type:)(a9);
        uint64_t v371 = v201;
        uint64_t v372 = v200;
        double v204 = v29;
        char v373 = v199 & 1;
        double v205 = v28;
        uint64_t v374 = v198;
        uint64_t v375 = v196;
        uint64_t v376 = v197;
        char v377 = v202 & 1;
        char v280 = v203 & 1;
        char v378 = v203 & 1;
        uint64_t v370 = v309;
        uint64_t v379 = v275;
        char v380 = v322;
        double v381 = v204;
        double v382 = v205;
        uint64_t v383 = Strong;
        uint64_t v384 = v327;
        double v385 = -1.0;
        char v386 = 0;
        unint64_t v387 = 0xBFF0000000000000;
        char v388 = 0;
        unint64_t v389 = 0xBFF0000000000000;
        char v390 = 0;
        long long v393 = v438;
        long long v394 = v439;
        long long v395 = v440;
        long long v391 = v436;
        long long v392 = v437;
        uint64_t v396 = v331;
        swift_retain();
        swift_retain();
        a5(&v370);
        outlined consume of SetEntityPropertyAction<Transform>?(v201, v200, v199, v198, v196);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v397 = v309;
        uint64_t v398 = v201;
        uint64_t v399 = v200;
        char v400 = v199 & 1;
        uint64_t v401 = v198;
        uint64_t v402 = v196;
        uint64_t v403 = v197;
        char v404 = v202 & 1;
        char v405 = v280;
        uint64_t v406 = v275;
        char v407 = v322;
        double v408 = v204;
        double v409 = v205;
        uint64_t v410 = Strong;
        uint64_t v411 = v327;
        double v412 = -1.0;
        char v413 = 0;
        unint64_t v414 = 0xBFF0000000000000;
        char v415 = 0;
        unint64_t v416 = 0xBFF0000000000000;
        char v417 = 0;
        uint64_t v418 = v337;
        char v419 = 0;
        uint64_t v420 = v343;
        uint64_t v421 = v364;
        uint64_t v422 = v302;
        uint64_t v423 = v294;
        uint64_t v424 = v91;
        uint64_t v425 = v290;
        uint64_t v426 = v287;
        uint64_t v178 = v94;
        goto LABEL_127;
      }
      goto LABEL_171;
    case 8:
      uint64_t v30 = *(void *)a2;
      uint64_t v31 = *(void *)(a2 + 8);
      uint64_t v338 = *(void *)(a2 + 32);
      uint64_t v344 = *(void *)(a2 + 40);
      uint64_t v308 = *(void *)(a2 + 56);
      float v33 = *(float *)(a2 + 64);
      float v32 = *(float *)(a2 + 68);
      char v315 = *(unsigned char *)(a2 + 72);
      unint64_t v323 = *(void *)(a2 + 80);
      unint64_t v328 = *(void *)(a2 + 88);
      uint64_t v331 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_213:
          __break(1u);
          goto LABEL_214;
        }
        uint64_t v95 = specialized static Entity.entityInfoType(_:)(v30);
        if (v95)
        {
          uint64_t v96 = (*(uint64_t (**)(void))(v95 + 232))();
          uint64_t v97 = *(void *)(v96 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v97, 0);
          *(void *)(v96 + 16) = v30;
          MEMORY[0x22A68E750](v30, v96);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v30);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v98 = swift_allocObject();
      swift_weakInit();
      uint64_t v301 = v98;
      *(void *)(v98 + 16) = v31;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v99 = String.init(cString:)();
      uint64_t v101 = v100;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      uint64_t v361 = a7;
      swift_beginAccess();
      uint64_t v102 = static AnimationResource.codableActionTypeMap;
      uint64_t v352 = a8;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_118;
      }
      swift_bridgeObjectRetain();
      unint64_t v103 = specialized __RawDictionaryStorage.find<A>(_:)(v99, v101);
      if (v104)
      {
        uint64_t v105 = (uint64_t *)(*(void *)(v102 + 56) + 56 * v103);
        uint64_t v107 = *v105;
        uint64_t v106 = v105[1];
        uint64_t v108 = v105[2];
        uint64_t v109 = v105[3];
        uint64_t v111 = v105[4];
        uint64_t v110 = v105[5];
        uint64_t v112 = v105[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_118:
        uint64_t v107 = 0;
        uint64_t v106 = 0;
        uint64_t v108 = 0;
        uint64_t v109 = 0;
        uint64_t v111 = 0;
        uint64_t v110 = 0;
        uint64_t v112 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v436 = v338;
      BYTE8(v436) = 0;
      *(void *)&long long v437 = v344;
      *((void *)&v437 + 1) = v107;
      *(void *)&long long v438 = v106;
      *((void *)&v438 + 1) = v108;
      *(void *)&long long v439 = v109;
      *((void *)&v439 + 1) = v111;
      *(void *)&long long v440 = v110;
      *((void *)&v440 + 1) = v112;
      uint64_t v291 = v108;
      uint64_t v295 = v106;
      uint64_t v284 = v110;
      if (v308 && REBindPointBoundComponent())
      {
        uint64_t v206 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v207 = swift_dynamicCastClassUnconditional();
LABEL_123:
          uint64_t v208 = v207;
          goto LABEL_125;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_222:
          __break(1u);
          goto LABEL_223;
        }
        uint64_t v268 = specialized static Entity.entityInfoType(_:)(v206);
        if (!v268)
        {
          uint64_t v207 = makeEntity(for:)(v206);
          goto LABEL_123;
        }
        uint64_t v208 = (*(uint64_t (**)(void))(v268 + 232))();
        uint64_t v269 = *(void *)(v208 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v269, 0);
        *(void *)(v208 + 16) = v206;
        MEMORY[0x22A68E750](v206, v208);
        swift_release();
      }
      else
      {
        uint64_t v208 = 0;
      }
LABEL_125:
      specialized ActionEventData.action<A>()(v361, v352, (uint64_t)&v429);
      uint64_t v209 = v433;
      if (v433)
      {
        uint64_t v210 = v434;
        uint64_t v211 = v432;
        uint64_t v212 = v431;
        uint64_t v355 = v107;
        uint64_t v365 = v111;
        uint64_t v213 = v430;
        uint64_t v214 = v429;
        char v215 = v435;
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v214, v213, v212, v211, v209);
        char v216 = specialized ActionEventData.parameter<A>(type:)(a9);
        uint64_t v371 = v214;
        uint64_t v372 = v213;
        double v217 = v33;
        char v373 = v212 & 1;
        double v218 = v32;
        uint64_t v374 = v211;
        uint64_t v375 = v209;
        uint64_t v376 = v210;
        char v377 = v215 & 1;
        char v277 = v216 & 1;
        char v378 = v216 & 1;
        uint64_t v370 = v301;
        uint64_t v379 = v208;
        char v380 = v315;
        double v381 = v217;
        double v382 = v218;
        uint64_t v384 = 0;
        double v385 = 0.0;
        uint64_t v383 = Strong;
        char v386 = 1;
        unint64_t v387 = v323;
        char v388 = 0;
        unint64_t v389 = v328;
        char v390 = 0;
        long long v393 = v438;
        long long v394 = v439;
        long long v395 = v440;
        long long v391 = v436;
        long long v392 = v437;
        uint64_t v396 = v331;
        swift_retain();
        swift_retain();
        a5(&v370);
        outlined consume of SetEntityPropertyAction<Transform>?(v214, v213, v212, v211, v209);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v397 = v301;
        uint64_t v398 = v214;
        uint64_t v399 = v213;
        char v400 = v212 & 1;
        uint64_t v401 = v211;
        uint64_t v402 = v209;
        uint64_t v403 = v210;
        char v404 = v215 & 1;
        char v405 = v277;
        uint64_t v406 = v208;
        char v407 = v315;
        double v408 = v217;
        double v409 = v218;
        double v412 = 0.0;
        uint64_t v410 = Strong;
        uint64_t v411 = 0;
        char v413 = 1;
        unint64_t v414 = v323;
        char v415 = 0;
        unint64_t v416 = v328;
        char v417 = 0;
        uint64_t v418 = v338;
        char v419 = 0;
        uint64_t v420 = v344;
        uint64_t v421 = v355;
        uint64_t v422 = v295;
        uint64_t v423 = v291;
        uint64_t v424 = v109;
        uint64_t v425 = v365;
        uint64_t v426 = v284;
        uint64_t v178 = v112;
        goto LABEL_127;
      }
      goto LABEL_171;
    case 16:
      uint64_t v34 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      unint64_t v345 = *(void *)(a2 + 32);
      uint64_t v348 = *(void *)(a2 + 40);
      uint64_t v332 = *(void *)(a2 + 56);
      uint64_t v339 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_214:
          __break(1u);
          goto LABEL_215;
        }
        uint64_t v113 = specialized static Entity.entityInfoType(_:)(v34);
        if (v113)
        {
          uint64_t v114 = (*(uint64_t (**)(void))(v113 + 232))();
          uint64_t v115 = *(void *)(v114 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v115, 0);
          *(void *)(v114 + 16) = v34;
          MEMORY[0x22A68E750](v34, v114);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v116 = swift_allocObject();
      swift_weakInit();
      uint64_t v329 = v116;
      *(void *)(v116 + 16) = v35;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v117 = String.init(cString:)();
      uint64_t v119 = v118;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v120 = static AnimationResource.codableActionTypeMap;
      uint64_t v353 = a8;
      uint64_t v362 = a7;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_130;
      }
      swift_bridgeObjectRetain();
      unint64_t v121 = specialized __RawDictionaryStorage.find<A>(_:)(v117, v119);
      if (v122)
      {
        uint64_t v123 = (uint64_t *)(*(void *)(v120 + 56) + 56 * v121);
        uint64_t v125 = *v123;
        uint64_t v124 = v123[1];
        uint64_t v126 = v123[2];
        uint64_t v127 = v123[3];
        uint64_t v129 = v123[4];
        uint64_t v128 = v123[5];
        uint64_t v130 = v123[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_130:
        uint64_t v125 = 0;
        uint64_t v124 = 0;
        uint64_t v126 = 0;
        uint64_t v127 = 0;
        uint64_t v129 = 0;
        uint64_t v128 = 0;
        uint64_t v130 = 0;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v436 = 0;
      BYTE8(v436) = 0;
      *(void *)&long long v437 = v348;
      *((void *)&v437 + 1) = v125;
      *(void *)&long long v438 = v124;
      *((void *)&v438 + 1) = v126;
      *(void *)&long long v439 = v127;
      *((void *)&v439 + 1) = v129;
      *(void *)&long long v440 = v128;
      *((void *)&v440 + 1) = v130;
      uint64_t v317 = v126;
      uint64_t v324 = v124;
      uint64_t v303 = v129;
      uint64_t v310 = v127;
      uint64_t v292 = v130;
      uint64_t v296 = v128;
      if (!v332 || !REBindPointBoundComponent()) {
        goto LABEL_143;
      }
      uint64_t v220 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_141;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_190;
      }
      __break(1u);
LABEL_136:
      swift_bridgeObjectRelease();
LABEL_137:
      uint64_t v125 = 0;
      uint64_t v142 = 0;
      uint64_t v143 = 0;
      uint64_t v144 = 0;
      uint64_t v146 = 0;
      uint64_t v145 = 0;
      uint64_t v147 = 0;
LABEL_138:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v436 = 0;
      BYTE8(v436) = 0;
      *(void *)&long long v437 = v348;
      *((void *)&v437 + 1) = v125;
      *(void *)&long long v438 = v142;
      *((void *)&v438 + 1) = v143;
      *(void *)&long long v439 = v144;
      *((void *)&v439 + 1) = v146;
      *(void *)&long long v440 = v145;
      *((void *)&v440 + 1) = v147;
      uint64_t v317 = v143;
      uint64_t v324 = v142;
      uint64_t v303 = v146;
      uint64_t v310 = v144;
      uint64_t v292 = v147;
      uint64_t v296 = v145;
      if (v332 && REBindPointBoundComponent())
      {
        uint64_t v220 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
LABEL_141:
          type metadata accessor for Entity();
          uint64_t v221 = swift_dynamicCastClassUnconditional();
LABEL_142:
          uint64_t v222 = v221;
          goto LABEL_144;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
LABEL_190:
        uint64_t v270 = specialized static Entity.entityInfoType(_:)(v220);
        if (!v270)
        {
          uint64_t v221 = makeEntity(for:)(v220);
          goto LABEL_142;
        }
        uint64_t v222 = (*(uint64_t (**)(void))(v270 + 232))();
        uint64_t v271 = *(void *)(v222 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v271, 0);
        *(void *)(v222 + 16) = v220;
        MEMORY[0x22A68E750](v220, v222);
        swift_release();
      }
      else
      {
LABEL_143:
        uint64_t v222 = 0;
      }
LABEL_144:
      specialized ActionEventData.action<A>()(v362, v353, (uint64_t)&v429);
      uint64_t v223 = v433;
      if (v433)
      {
        uint64_t v366 = v125;
        uint64_t v224 = v434;
        uint64_t v225 = v432;
        uint64_t v226 = v431;
        uint64_t v227 = v430;
        uint64_t v228 = v429;
        uint64_t v371 = v429;
        uint64_t v372 = v430;
        char v356 = v431 & 1;
        char v373 = v431 & 1;
        uint64_t v374 = v432;
        uint64_t v375 = v433;
        uint64_t v376 = v434;
        char v334 = v435 & 1;
        char v377 = v435 & 1;
        char v378 = 1;
        uint64_t v370 = v329;
        uint64_t v379 = v222;
        char v380 = 0;
        double v381 = 0.0;
        double v382 = 0.0;
        uint64_t v384 = 0;
        double v385 = 0.0;
        uint64_t v383 = Strong;
        char v386 = 1;
        unint64_t v387 = v345;
        char v388 = 0;
        unint64_t v389 = 0;
        char v390 = 1;
        long long v393 = v438;
        long long v394 = v439;
        long long v395 = v440;
        long long v391 = v436;
        long long v392 = v437;
        uint64_t v396 = v339;
        swift_retain();
        swift_retain();
        outlined copy of SetEntityPropertyAction<Transform>?(v228, v227, v226, v225, v223);
        swift_retain();
        a5(&v370);
        outlined consume of SetEntityPropertyAction<Transform>?(v228, v227, v226, v225, v223);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v397 = v329;
        uint64_t v398 = v228;
        uint64_t v399 = v227;
        char v400 = v356;
        uint64_t v401 = v225;
        uint64_t v402 = v223;
        uint64_t v403 = v224;
        char v404 = v334;
        char v405 = 1;
        uint64_t v406 = v222;
        char v407 = 0;
        double v409 = 0.0;
        double v408 = 0.0;
        double v412 = 0.0;
        uint64_t v410 = Strong;
        uint64_t v411 = 0;
        char v413 = 1;
        unint64_t v414 = v345;
        char v415 = 0;
        unint64_t v416 = 0;
        char v417 = 1;
        uint64_t v418 = 0;
        char v419 = 0;
        uint64_t v420 = v348;
        uint64_t v421 = v366;
        uint64_t v422 = v324;
        uint64_t v423 = v317;
        uint64_t v424 = v310;
        uint64_t v425 = v303;
        uint64_t v426 = v296;
        uint64_t v427 = v292;
        uint64_t v219 = v339;
        goto LABEL_170;
      }
      goto LABEL_171;
    case 32:
      uint64_t v36 = *(void *)a2;
      uint64_t v37 = *(void *)(a2 + 8);
      unint64_t v345 = *(void *)(a2 + 32);
      uint64_t v348 = *(void *)(a2 + 40);
      uint64_t v332 = *(void *)(a2 + 56);
      uint64_t v339 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        uint64_t v131 = specialized static Entity.entityInfoType(_:)(v36);
        if (v131)
        {
          uint64_t v132 = (*(uint64_t (**)(void))(v131 + 232))();
          uint64_t v133 = *(void *)(v132 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v133, 0);
          *(void *)(v132 + 16) = v36;
          MEMORY[0x22A68E750](v36, v132);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v36);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v134 = swift_allocObject();
      swift_weakInit();
      uint64_t v329 = v134;
      *(void *)(v134 + 16) = v37;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v135 = String.init(cString:)();
      uint64_t v137 = v136;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v138 = static AnimationResource.codableActionTypeMap;
      uint64_t v353 = a8;
      uint64_t v362 = a7;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_137;
      }
      swift_bridgeObjectRetain();
      unint64_t v139 = specialized __RawDictionaryStorage.find<A>(_:)(v135, v137);
      if ((v140 & 1) == 0) {
        goto LABEL_136;
      }
      uint64_t v141 = (uint64_t *)(*(void *)(v138 + 56) + 56 * v139);
      uint64_t v125 = *v141;
      uint64_t v142 = v141[1];
      uint64_t v143 = v141[2];
      uint64_t v144 = v141[3];
      uint64_t v146 = v141[4];
      uint64_t v145 = v141[5];
      uint64_t v147 = v141[6];
      swift_bridgeObjectRelease();
      goto LABEL_138;
    case 64:
      uint64_t v38 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v347 = *(void *)(a2 + 24);
      uint64_t v40 = *(void *)(a2 + 40);
      uint64_t v320 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        uint64_t v148 = specialized static Entity.entityInfoType(_:)(v38);
        if (v148)
        {
          uint64_t v149 = (*(uint64_t (**)(void))(v148 + 232))();
          uint64_t v150 = *(void *)(v149 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v150, 0);
          *(void *)(v149 + 16) = v38;
          MEMORY[0x22A68E750](v38, v149);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v151 = swift_allocObject();
      swift_weakInit();
      uint64_t v316 = v151;
      *(void *)(v151 + 16) = v39;
      swift_beginAccess();
      swift_weakAssign();
      if (v40 && REBindPointBoundComponent())
      {
        uint64_t v152 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v153 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v154 = v153;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v260 = specialized static Entity.entityInfoType(_:)(v152);
        if (!v260)
        {
          uint64_t v153 = makeEntity(for:)(v152);
          goto LABEL_77;
        }
        uint64_t v154 = (*(uint64_t (**)(void))(v260 + 232))();
        uint64_t v261 = *(void *)(v154 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v261, 0);
        *(void *)(v154 + 16) = v152;
        MEMORY[0x22A68E750](v152, v154);
        swift_release();
      }
      else
      {
        uint64_t v154 = 0;
      }
LABEL_79:
      uint64_t v155 = String.init(cString:)();
      uint64_t v157 = v156;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v158 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v159 = specialized __RawDictionaryStorage.find<A>(_:)(v155, v157);
        if (v160)
        {
          uint64_t v161 = (uint64_t *)(*(void *)(v158 + 56) + 56 * v159);
          uint64_t v162 = *v161;
          uint64_t v163 = v161[1];
          uint64_t v164 = v161[2];
          uint64_t v340 = v161[4];
          uint64_t v346 = v161[3];
          uint64_t v330 = v161[6];
          uint64_t v333 = v161[5];
          swift_bridgeObjectRelease();
LABEL_149:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v436 = 0;
          BYTE8(v436) = 0;
          *(void *)&long long v437 = v347;
          *((void *)&v437 + 1) = v162;
          *(void *)&long long v438 = v163;
          *((void *)&v438 + 1) = v164;
          uint64_t v311 = v164;
          *(void *)&long long v439 = v346;
          *((void *)&v439 + 1) = v340;
          *(void *)&long long v440 = v333;
          *((void *)&v440 + 1) = v330;
          specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v429);
          uint64_t v229 = v433;
          if (!v433) {
            goto LABEL_171;
          }
          uint64_t v357 = v163;
          uint64_t v367 = v162;
          uint64_t v230 = v154;
          uint64_t v231 = v434;
          uint64_t v232 = v432;
          uint64_t v233 = v431;
          uint64_t v234 = v430;
          uint64_t v235 = v429;
          uint64_t v371 = v429;
          uint64_t v372 = v430;
          char v304 = v431 & 1;
          char v373 = v431 & 1;
          uint64_t v374 = v432;
          uint64_t v375 = v433;
          uint64_t v376 = v434;
          char v297 = v435 & 1;
          char v377 = v435 & 1;
          char v378 = 1;
          uint64_t v370 = v316;
          uint64_t v379 = v230;
          char v380 = 0;
          double v381 = 0.0;
          double v382 = 0.0;
          uint64_t v384 = 0;
          double v385 = 0.0;
          uint64_t v383 = Strong;
          char v386 = 1;
          unint64_t v387 = 0;
          char v388 = 1;
          unint64_t v389 = 0;
          char v390 = 1;
          long long v393 = v438;
          long long v394 = v439;
          long long v395 = v440;
          long long v391 = v436;
          long long v392 = v437;
          uint64_t v396 = v320;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v235, v234, v233, v232, v229);
          swift_retain();
          a5(&v370);
          outlined consume of SetEntityPropertyAction<Transform>?(v235, v234, v233, v232, v229);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v397 = v316;
          uint64_t v398 = v235;
          uint64_t v399 = v234;
          char v400 = v304;
          uint64_t v401 = v232;
          uint64_t v402 = v229;
          uint64_t v403 = v231;
          char v404 = v297;
          char v405 = 1;
          uint64_t v406 = v230;
          char v407 = 0;
          double v409 = 0.0;
          double v408 = 0.0;
          double v412 = 0.0;
          uint64_t v410 = Strong;
          goto LABEL_169;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v162 = 0;
      uint64_t v163 = 0;
      uint64_t v164 = 0;
      uint64_t v340 = 0;
      uint64_t v346 = 0;
      uint64_t v330 = 0;
      uint64_t v333 = 0;
      goto LABEL_149;
    default:
      if (a4 != 128) {
        goto LABEL_172;
      }
      uint64_t v18 = *(void *)a2;
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v347 = *(void *)(a2 + 24);
      uint64_t v20 = *(void *)(a2 + 40);
      uint64_t v320 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        uint64_t v236 = specialized static Entity.entityInfoType(_:)(v18);
        if (v236)
        {
          uint64_t v237 = (*(uint64_t (**)(void))(v236 + 232))();
          uint64_t v238 = *(void *)(v237 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v238, 0);
          *(void *)(v237 + 16) = v18;
          MEMORY[0x22A68E750](v18, v237);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v18);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v239 = swift_allocObject();
      swift_weakInit();
      uint64_t v318 = v239;
      *(void *)(v239 + 16) = v19;
      swift_beginAccess();
      swift_weakAssign();
      if (v20 && REBindPointBoundComponent())
      {
        uint64_t v240 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v241 = swift_dynamicCastClassUnconditional();
LABEL_158:
          uint64_t v242 = v241;
          goto LABEL_160;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          JUMPOUT(0x227FA1CD8);
        }
        uint64_t v272 = specialized static Entity.entityInfoType(_:)(v240);
        if (!v272)
        {
          uint64_t v241 = makeEntity(for:)(v240);
          goto LABEL_158;
        }
        uint64_t v242 = (*(uint64_t (**)(void))(v272 + 232))();
        uint64_t v273 = *(void *)(v242 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v273, 0);
        *(void *)(v242 + 16) = v240;
        MEMORY[0x22A68E750](v240, v242);
        swift_release();
      }
      else
      {
        uint64_t v242 = 0;
      }
LABEL_160:
      uint64_t v243 = String.init(cString:)();
      uint64_t v245 = v244;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v246 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v247 = specialized __RawDictionaryStorage.find<A>(_:)(v243, v245);
        if (v248)
        {
          uint64_t v249 = (uint64_t *)(*(void *)(v246 + 56) + 56 * v247);
          uint64_t v250 = *v249;
          uint64_t v251 = v249[1];
          uint64_t v252 = v249[2];
          uint64_t v340 = v249[4];
          uint64_t v346 = v249[3];
          uint64_t v330 = v249[6];
          uint64_t v333 = v249[5];
          swift_bridgeObjectRelease();
LABEL_167:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v436 = 0;
          BYTE8(v436) = 0;
          *(void *)&long long v437 = v347;
          *((void *)&v437 + 1) = v250;
          *(void *)&long long v438 = v251;
          *((void *)&v438 + 1) = v252;
          uint64_t v311 = v252;
          *(void *)&long long v439 = v346;
          *((void *)&v439 + 1) = v340;
          *(void *)&long long v440 = v333;
          *((void *)&v440 + 1) = v330;
          specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v429);
          uint64_t v253 = v433;
          if (!v433) {
            goto LABEL_171;
          }
          uint64_t v357 = v251;
          uint64_t v367 = v250;
          uint64_t v254 = v242;
          uint64_t v255 = v434;
          uint64_t v256 = v432;
          uint64_t v257 = v431;
          uint64_t v258 = v430;
          uint64_t v259 = v429;
          uint64_t v371 = v429;
          uint64_t v372 = v430;
          char v305 = v431 & 1;
          char v373 = v431 & 1;
          uint64_t v374 = v432;
          uint64_t v375 = v433;
          uint64_t v376 = v434;
          char v298 = v435 & 1;
          char v377 = v435 & 1;
          char v378 = 1;
          uint64_t v370 = v318;
          uint64_t v379 = v254;
          char v380 = 0;
          double v381 = 0.0;
          double v382 = 0.0;
          uint64_t v384 = 0;
          double v385 = 0.0;
          uint64_t v383 = Strong;
          char v386 = 1;
          unint64_t v387 = 0;
          char v388 = 1;
          unint64_t v389 = 0;
          char v390 = 1;
          long long v393 = v438;
          long long v394 = v439;
          long long v395 = v440;
          long long v391 = v436;
          long long v392 = v437;
          uint64_t v396 = v320;
          swift_retain();
          swift_retain();
          outlined copy of SetEntityPropertyAction<Transform>?(v259, v258, v257, v256, v253);
          swift_retain();
          a5(&v370);
          swift_release();
          outlined consume of SetEntityPropertyAction<Transform>?(v259, v258, v257, v256, v253);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v397 = v318;
          uint64_t v398 = v259;
          uint64_t v399 = v258;
          char v400 = v305;
          uint64_t v401 = v256;
          uint64_t v402 = v253;
          uint64_t v403 = v255;
          char v404 = v298;
          char v405 = 1;
          uint64_t v406 = v254;
          char v407 = 0;
          double v409 = 0.0;
          double v408 = 0.0;
          double v412 = 0.0;
          uint64_t v410 = Strong;
LABEL_169:
          uint64_t v411 = 0;
          char v413 = 1;
          unint64_t v414 = 0;
          char v415 = 1;
          unint64_t v416 = 0;
          char v417 = 1;
          uint64_t v418 = 0;
          char v419 = 0;
          uint64_t v420 = v347;
          uint64_t v421 = v367;
          uint64_t v422 = v357;
          uint64_t v423 = v311;
          uint64_t v424 = v346;
          uint64_t v425 = v340;
          uint64_t v426 = v333;
          uint64_t v427 = v330;
          uint64_t v219 = v320;
          goto LABEL_170;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v250 = 0;
      uint64_t v251 = 0;
      uint64_t v252 = 0;
      uint64_t v340 = 0;
      uint64_t v346 = 0;
      uint64_t v330 = 0;
      uint64_t v333 = 0;
      goto LABEL_167;
  }
}

uint64_t specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, void (*a7)(void *__return_ptr, uint64_t), uint64_t *a8, unsigned int (*a9)(unsigned char *), void (*a10)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void), uint64_t *a11, void (*a12)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  void (*v277)(void *__return_ptr, uint64_t);
  uint64_t v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t Strong;
  void v284[2];
  long long v285;
  long long v286;
  long long v287;
  long long v288;
  long long v289;
  long long v290;
  long long v291;
  long long v292;
  long long v293;
  long long v294;
  char v295;
  uint64_t v296;
  char v297;
  double v298;
  double v299;
  uint64_t v300;
  uint64_t v301;
  double v302;
  char v303;
  unint64_t v304;
  char v305;
  unint64_t v306;
  char v307;
  long long v308;
  long long v309;
  long long v310;
  long long v311;
  long long v312;
  uint64_t v313;
  long long v314;
  long long v315;
  long long v316;
  long long v317;
  long long v318;
  long long v319;
  long long v320;
  long long v321;
  long long v322;
  long long v323;
  uint64_t v324;
  long long v325;
  long long v326;
  long long v327;
  long long v328;
  long long v329;
  long long v330;
  long long v331;
  long long v332;
  long long v333;
  long long v334;
  char v335;
  uint64_t v336;
  char v337;
  double v338;
  double v339;
  uint64_t v340;
  uint64_t v341;
  double v342;
  char v343;
  unint64_t v344;
  char v345;
  unint64_t v346;
  char v347;
  uint64_t v348;
  char v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void v359[20];
  void v360[20];
  unsigned char v361[168];
  long long v362;
  long long v363;
  long long v364;
  long long v365;
  long long v366;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  char v276 = a5;
  char v280 = a8;
  char v277 = a7;
  switch(a4)
  {
    case 1:
      uint64_t v17 = *(void *)a2;
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v261 = *(void *)(a2 + 32);
      uint64_t v267 = *(void *)(a2 + 40);
      uint64_t v19 = *(void *)(a2 + 64);
      uint64_t v241 = *(void *)(a2 + 56);
      uint64_t v245 = *(void *)(a2 + 48);
      float v20 = *(float *)(a2 + 72);
      float v21 = *(float *)(a2 + 76);
      char v230 = *(unsigned char *)(a2 + 80);
      unint64_t v233 = *(void *)(a2 + 96);
      unint64_t v237 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v51 = specialized static Entity.entityInfoType(_:)(v17);
        if (v51)
        {
          uint64_t v52 = (*(uint64_t (**)(void))(v51 + 232))();
          uint64_t v53 = *(void *)(v52 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v53, 0);
          *(void *)(v52 + 16) = v17;
          MEMORY[0x22A68E750](v17, v52);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v17);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v54 = swift_allocObject();
        swift_weakInit();
        *(void *)(v54 + 16) = v18;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v55 = String.init(cString:)();
        uint64_t v57 = v56;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v58 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v59 = specialized __RawDictionaryStorage.find<A>(_:)(v55, v57);
          if (v60)
          {
            uint64_t v61 = (uint64_t *)(*(void *)(v58 + 56) + 56 * v59);
            uint64_t v62 = v61[2];
            uint64_t v248 = *v61;
            uint64_t v257 = v61[1];
            uint64_t v64 = v61[3];
            uint64_t v63 = v61[4];
            uint64_t v66 = v61[5];
            uint64_t v65 = v61[6];
            swift_bridgeObjectRelease();
LABEL_86:
            swift_endAccess();
            uint64_t v165 = swift_bridgeObjectRelease();
            *(void *)&uint64_t v362 = v261;
            BYTE8(v362) = 0;
            *(void *)&uint64_t v363 = v267;
            *((void *)&v363 + 1) = v248;
            *(void *)&uint64_t v364 = v257;
            *((void *)&v364 + 1) = v62;
            *(void *)&uint64_t v365 = v64;
            *((void *)&v365 + 1) = v63;
            uint64_t v228 = v62;
            *(void *)&uint64_t v366 = v66;
            *((void *)&v366 + 1) = v65;
            if (!v19) {
              goto LABEL_161;
            }
            uint64_t v165 = REBindPointBoundComponent();
            if (!v165)
            {
              uint64_t v19 = 0;
              goto LABEL_161;
            }
            uint64_t Entity = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v165 = swift_dynamicCastClassUnconditional();
LABEL_90:
              uint64_t v19 = v165;
              goto LABEL_161;
            }
            if ((REEntityIsBeingDestroyed() & 1) == 0)
            {
              uint64_t v197 = specialized static Entity.entityInfoType(_:)(Entity);
              if (!v197)
              {
                uint64_t v165 = makeEntity(for:)(Entity);
                goto LABEL_90;
              }
              uint64_t v19 = (*(uint64_t (**)(void))(v197 + 232))();
              uint64_t v198 = *(void *)(v19 + 16);
              swift_retain();
              MEMORY[0x22A68E750](v198, 0);
              *(void *)(v19 + 16) = Entity;
              MEMORY[0x22A68E750](Entity, v19);
              uint64_t v165 = swift_release();
LABEL_161:
              v277(v359, v165);
              outlined init with take of Transform?((uint64_t)v359, (uint64_t)v360, v280);
              outlined init with take of Transform?((uint64_t)v360, (uint64_t)v361, v280);
              if (a9(v361) != 1)
              {
                outlined init with take of Transform?((uint64_t)v360, (uint64_t)&v314, v280);
                swift_retain();
                outlined retain of FromToByAction<simd_quatf>?(v360, a10);
                char v199 = specialized ActionEventData.parameter<A>(type:)(a11);
                double v200 = v20;
                double v201 = v21;
                uint64_t v291 = v320;
                uint64_t v292 = v321;
                uint64_t v293 = v322;
                uint64_t v294 = v323;
                uint64_t v287 = v316;
                uint64_t v288 = v317;
                uint64_t v289 = v318;
                uint64_t v290 = v319;
                uint64_t v285 = v314;
                uint64_t v286 = v315;
                uint64_t v279 = v66;
                char v202 = v199 & 1;
                uint64_t v295 = v199 & 1;
                v284[0] = v54;
                uint64_t v296 = v19;
                char v297 = v230;
                char v298 = v200;
                uint64_t v299 = v201;
                uint64_t v300 = Strong;
                uint64_t v301 = v241;
                uint64_t v302 = -1.0;
                uint64_t v303 = 0;
                char v305 = 0;
                char v304 = v237;
                uint64_t v278 = v65;
                char v306 = v233;
                char v307 = 0;
                uint64_t v310 = v364;
                uint64_t v311 = v365;
                unint64_t v312 = v366;
                uint64_t v308 = v362;
                uint64_t v309 = v363;
                uint64_t v313 = v245;
                swift_retain();
                swift_retain();
                v276(v284);
                outlined retain of FromToByAction<simd_quatf>?(v360, a12);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v324 = v54;
                uint64_t v331 = v320;
                uint64_t v332 = v321;
                uint64_t v333 = v322;
                char v334 = v323;
                uint64_t v327 = v316;
                unint64_t v328 = v317;
                uint64_t v329 = v318;
                uint64_t v330 = v319;
                uint64_t v325 = v314;
                unint64_t v326 = v315;
                uint64_t v335 = v202;
                uint64_t v336 = v19;
                uint64_t v337 = v230;
                uint64_t v338 = v200;
                uint64_t v339 = v201;
                uint64_t v340 = Strong;
                uint64_t v341 = v241;
                uint64_t v342 = -1.0;
                uint64_t v343 = 0;
                unint64_t v345 = 0;
                uint64_t v344 = v237;
                uint64_t v346 = v233;
                uint64_t v347 = 0;
                uint64_t v349 = 0;
                uint64_t v348 = v261;
                uint64_t v350 = v267;
                uint64_t v351 = v248;
                uint64_t v352 = v257;
                uint64_t v353 = v228;
                uint64_t v354 = v64;
                uint64_t v203 = v63;
LABEL_181:
                uint64_t v355 = v203;
                char v356 = v279;
                uint64_t v217 = v278;
                goto LABEL_182;
              }
              goto LABEL_188;
            }
            goto LABEL_221;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v248 = 0;
        uint64_t v257 = 0;
        uint64_t v62 = 0;
        uint64_t v64 = 0;
        uint64_t v63 = 0;
        uint64_t v66 = 0;
        uint64_t v65 = 0;
        goto LABEL_86;
      }
      __break(1u);
      goto LABEL_213;
    case 2:
      uint64_t v26 = *(void *)a2;
      uint64_t v27 = *(void *)(a2 + 8);
      uint64_t v262 = *(void *)(a2 + 40);
      uint64_t v268 = *(void *)(a2 + 32);
      float v28 = *(float *)(a2 + 56);
      unint64_t v242 = *(void *)(a2 + 64);
      unint64_t v246 = *(void *)(a2 + 48);
      uint64_t v29 = *(void *)(a2 + 80);
      uint64_t v238 = *(void *)(a2 + 72);
      uint64_t v30 = *(void *)(a2 + 88);
      float v31 = *(float *)(a2 + 96);
      float v32 = *(float *)(a2 + 100);
      char v234 = *(unsigned char *)(a2 + 104);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v67 = specialized static Entity.entityInfoType(_:)(v26);
        if (v67)
        {
          uint64_t v68 = (*(uint64_t (**)(void))(v67 + 232))();
          uint64_t v69 = *(void *)(v68 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v69, 0);
          *(void *)(v68 + 16) = v26;
          MEMORY[0x22A68E750](v26, v68);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v26);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v70 = swift_allocObject();
        swift_weakInit();
        *(void *)(v70 + 16) = v27;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v71 = String.init(cString:)();
        uint64_t v73 = v72;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        uint64_t v231 = v29;
        swift_beginAccess();
        uint64_t v74 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v75 = specialized __RawDictionaryStorage.find<A>(_:)(v71, v73);
          if (v76)
          {
            uint64_t v77 = (uint64_t *)(*(void *)(v74 + 56) + 56 * v75);
            uint64_t v79 = *v77;
            uint64_t v78 = v77[1];
            uint64_t v80 = v77[2];
            uint64_t v258 = v77[3];
            uint64_t v82 = v77[4];
            uint64_t v81 = v77[5];
            uint64_t v83 = v77[6];
            swift_bridgeObjectRelease();
            goto LABEL_93;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v79 = 0;
        uint64_t v78 = 0;
        uint64_t v80 = 0;
        uint64_t v258 = 0;
        uint64_t v82 = 0;
        uint64_t v81 = 0;
        uint64_t v83 = 0;
LABEL_93:
        swift_endAccess();
        uint64_t v167 = swift_bridgeObjectRelease();
        *(void *)&uint64_t v362 = v268;
        BYTE8(v362) = 0;
        *(void *)&uint64_t v363 = v262;
        *((void *)&v363 + 1) = v79;
        *(void *)&uint64_t v364 = v78;
        *((void *)&v364 + 1) = v80;
        *(void *)&uint64_t v365 = v258;
        *((void *)&v365 + 1) = v82;
        *(void *)&uint64_t v366 = v81;
        *((void *)&v366 + 1) = v83;
        uint64_t v229 = v81;
        if (v30)
        {
          uint64_t v167 = REBindPointBoundComponent();
          if (v167)
          {
            uint64_t v251 = v83;
            uint64_t v168 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v167 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_222:
                __break(1u);
                goto LABEL_223;
              }
              uint64_t v204 = specialized static Entity.entityInfoType(_:)(v168);
              if (v204)
              {
                uint64_t v30 = (*(uint64_t (**)(void))(v204 + 232))();
                uint64_t v205 = *(void *)(v30 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v205, 0);
                *(void *)(v30 + 16) = v168;
                MEMORY[0x22A68E750](v168, v30);
                uint64_t v167 = swift_release();
                goto LABEL_166;
              }
              uint64_t v167 = makeEntity(for:)(v168);
            }
            uint64_t v30 = v167;
LABEL_166:
            uint64_t v83 = v251;
            goto LABEL_167;
          }
          uint64_t v30 = 0;
        }
LABEL_167:
        v277(v359, v167);
        outlined init with take of Transform?((uint64_t)v359, (uint64_t)v360, v280);
        outlined init with take of Transform?((uint64_t)v360, (uint64_t)v361, v280);
        if (a9(v361) == 1) {
          goto LABEL_188;
        }
        outlined init with take of Transform?((uint64_t)v360, (uint64_t)&v314, v280);
        swift_retain();
        outlined retain of FromToByAction<simd_quatf>?(v360, a10);
        char v206 = specialized ActionEventData.parameter<A>(type:)(a11);
        double v207 = v31;
        double v208 = v32;
        double v209 = v28;
        uint64_t v291 = v320;
        uint64_t v292 = v321;
        uint64_t v293 = v322;
        uint64_t v294 = v323;
        uint64_t v287 = v316;
        uint64_t v288 = v317;
        uint64_t v289 = v318;
        uint64_t v290 = v319;
        uint64_t v285 = v314;
        uint64_t v286 = v315;
        uint64_t v253 = v83;
        char v210 = v206 & 1;
        uint64_t v295 = v206 & 1;
        v284[0] = v70;
        uint64_t v296 = v30;
        char v297 = v234;
        char v298 = v207;
        uint64_t v299 = v208;
        uint64_t v281 = v79;
        uint64_t v300 = Strong;
        uint64_t v301 = v238;
        uint64_t v302 = v209;
        uint64_t v303 = 0;
        char v305 = 0;
        char v304 = v246;
        char v306 = v242;
        char v307 = 0;
        uint64_t v310 = v364;
        uint64_t v311 = v365;
        unint64_t v312 = v366;
        uint64_t v308 = v362;
        uint64_t v309 = v363;
        uint64_t v177 = v231;
        uint64_t v313 = v231;
        swift_retain();
        swift_retain();
        v276(v284);
        outlined retain of FromToByAction<simd_quatf>?(v360, a12);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v324 = v70;
        uint64_t v331 = v320;
        uint64_t v332 = v321;
        uint64_t v333 = v322;
        char v334 = v323;
        uint64_t v327 = v316;
        unint64_t v328 = v317;
        uint64_t v329 = v318;
        uint64_t v330 = v319;
        uint64_t v325 = v314;
        unint64_t v326 = v315;
        uint64_t v335 = v210;
        uint64_t v336 = v30;
        uint64_t v337 = v234;
        uint64_t v338 = v207;
        uint64_t v339 = v208;
        uint64_t v340 = Strong;
        uint64_t v341 = v238;
        uint64_t v342 = v209;
        uint64_t v343 = 0;
        unint64_t v345 = 0;
        uint64_t v344 = v246;
        uint64_t v346 = v242;
        uint64_t v347 = 0;
        uint64_t v349 = 0;
        uint64_t v348 = v268;
        uint64_t v350 = v262;
        uint64_t v351 = v281;
        uint64_t v352 = v78;
        uint64_t v353 = v80;
        uint64_t v354 = v258;
        uint64_t v355 = v82;
        char v356 = v229;
        uint64_t v357 = v253;
LABEL_191:
        uint64_t v358 = v177;
        goto LABEL_192;
      }
LABEL_213:
      __break(1u);
      goto LABEL_214;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_189;
    case 4:
      uint64_t v33 = *(void *)a2;
      uint64_t v34 = *(void *)(a2 + 8);
      uint64_t v263 = *(void *)(a2 + 32);
      uint64_t v269 = *(void *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 64);
      uint64_t v243 = *(void *)(a2 + 56);
      uint64_t v245 = *(void *)(a2 + 48);
      float v36 = *(float *)(a2 + 72);
      float v37 = *(float *)(a2 + 76);
      char v239 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_214:
        __break(1u);
        goto LABEL_215;
      }
      uint64_t v84 = specialized static Entity.entityInfoType(_:)(v33);
      if (v84)
      {
        uint64_t v85 = (*(uint64_t (**)(void))(v84 + 232))();
        uint64_t v86 = *(void *)(v85 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v86, 0);
        *(void *)(v85 + 16) = v33;
        MEMORY[0x22A68E750](v33, v85);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v33);
      }
LABEL_41:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v87 = swift_allocObject();
      swift_weakInit();
      *(void *)(v87 + 16) = v34;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v88 = String.init(cString:)();
      uint64_t v90 = v89;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v91 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v92 = specialized __RawDictionaryStorage.find<A>(_:)(v88, v90);
        if (v93)
        {
          uint64_t v94 = (uint64_t *)(*(void *)(v91 + 56) + 56 * v92);
          uint64_t v95 = v94[2];
          uint64_t v249 = v94[1];
          uint64_t v259 = *v94;
          uint64_t v97 = v94[3];
          uint64_t v96 = v94[4];
          uint64_t v99 = v94[5];
          uint64_t v98 = v94[6];
          swift_bridgeObjectRelease();
          goto LABEL_100;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v249 = 0;
      uint64_t v259 = 0;
      uint64_t v95 = 0;
      uint64_t v97 = 0;
      uint64_t v96 = 0;
      uint64_t v99 = 0;
      uint64_t v98 = 0;
LABEL_100:
      swift_endAccess();
      uint64_t v169 = swift_bridgeObjectRelease();
      *(void *)&uint64_t v362 = v263;
      BYTE8(v362) = 0;
      *(void *)&uint64_t v363 = v269;
      *((void *)&v363 + 1) = v259;
      *(void *)&uint64_t v364 = v249;
      *((void *)&v364 + 1) = v95;
      *(void *)&uint64_t v365 = v97;
      *((void *)&v365 + 1) = v96;
      uint64_t v236 = v95;
      *(void *)&uint64_t v366 = v99;
      *((void *)&v366 + 1) = v98;
      uint64_t v170 = v97;
      if (!v35) {
        goto LABEL_173;
      }
      uint64_t v169 = REBindPointBoundComponent();
      if (!v169)
      {
        uint64_t v35 = 0;
        goto LABEL_173;
      }
      uint64_t v171 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v169 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_223:
          __break(1u);
          goto LABEL_224;
        }
        uint64_t v211 = specialized static Entity.entityInfoType(_:)(v171);
        if (v211)
        {
          uint64_t v35 = (*(uint64_t (**)(void))(v211 + 232))();
          uint64_t v212 = *(void *)(v35 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v212, 0);
          *(void *)(v35 + 16) = v171;
          MEMORY[0x22A68E750](v171, v35);
          uint64_t v169 = swift_release();
          goto LABEL_172;
        }
        uint64_t v169 = makeEntity(for:)(v171);
      }
      uint64_t v35 = v169;
LABEL_172:
      uint64_t v170 = v97;
LABEL_173:
      v277(v359, v169);
      outlined init with take of Transform?((uint64_t)v359, (uint64_t)v360, v280);
      outlined init with take of Transform?((uint64_t)v360, (uint64_t)v361, v280);
      if (a9(v361) == 1) {
        goto LABEL_188;
      }
      outlined init with take of Transform?((uint64_t)v360, (uint64_t)&v314, v280);
      swift_retain();
      outlined retain of FromToByAction<simd_quatf>?(v360, a10);
      char v213 = specialized ActionEventData.parameter<A>(type:)(a11);
      double v214 = v36;
      double v215 = v37;
      uint64_t v291 = v320;
      uint64_t v292 = v321;
      uint64_t v293 = v322;
      uint64_t v294 = v323;
      uint64_t v287 = v316;
      uint64_t v288 = v317;
      uint64_t v289 = v318;
      uint64_t v290 = v319;
      uint64_t v285 = v314;
      uint64_t v286 = v315;
      char v216 = v213 & 1;
      uint64_t v295 = v213 & 1;
      v284[0] = v87;
      uint64_t v296 = v35;
      char v297 = v239;
      char v298 = v214;
      uint64_t v299 = v215;
      uint64_t v300 = Strong;
      uint64_t v301 = v243;
      uint64_t v302 = -1.0;
      uint64_t v303 = 0;
      char v305 = 0;
      char v304 = 0xBFF0000000000000;
      char v306 = 0xBFF0000000000000;
      char v307 = 0;
      uint64_t v310 = v364;
      uint64_t v311 = v365;
      unint64_t v312 = v366;
      uint64_t v308 = v362;
      uint64_t v309 = v363;
      uint64_t v313 = v245;
      swift_retain();
      swift_retain();
      v276(v284);
      outlined retain of FromToByAction<simd_quatf>?(v360, a12);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v324 = v87;
      uint64_t v331 = v320;
      uint64_t v332 = v321;
      uint64_t v333 = v322;
      char v334 = v323;
      uint64_t v327 = v316;
      unint64_t v328 = v317;
      uint64_t v329 = v318;
      uint64_t v330 = v319;
      uint64_t v325 = v314;
      unint64_t v326 = v315;
      uint64_t v335 = v216;
      uint64_t v336 = v35;
      uint64_t v337 = v239;
      uint64_t v338 = v214;
      uint64_t v339 = v215;
      uint64_t v340 = Strong;
      uint64_t v341 = v243;
      uint64_t v342 = -1.0;
      uint64_t v343 = 0;
      unint64_t v345 = 0;
      uint64_t v344 = 0xBFF0000000000000;
      uint64_t v346 = 0xBFF0000000000000;
      uint64_t v347 = 0;
      uint64_t v349 = 0;
      uint64_t v348 = v263;
      uint64_t v350 = v269;
      uint64_t v351 = v259;
      uint64_t v352 = v249;
      uint64_t v353 = v236;
      uint64_t v354 = v170;
      uint64_t v355 = v96;
      char v356 = v99;
      uint64_t v217 = v98;
LABEL_182:
      uint64_t v357 = v217;
      uint64_t v358 = v245;
LABEL_192:
      outlined release of ActionEvent<FromToByAction<simd_quatf>>((uint64_t)&v324);
      return 0;
    case 8:
      uint64_t v38 = *(void *)a2;
      uint64_t v39 = *(void *)(a2 + 8);
      uint64_t v264 = *(void *)(a2 + 32);
      uint64_t v270 = *(void *)(a2 + 40);
      uint64_t v40 = *(void *)(a2 + 56);
      float v41 = *(float *)(a2 + 64);
      float v42 = *(float *)(a2 + 68);
      char v235 = *(unsigned char *)(a2 + 72);
      unint64_t v244 = *(void *)(a2 + 80);
      uint64_t v245 = *(void *)(a2 + 48);
      unint64_t v240 = *(void *)(a2 + 88);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        uint64_t v100 = specialized static Entity.entityInfoType(_:)(v38);
        if (v100)
        {
          uint64_t v101 = (*(uint64_t (**)(void))(v100 + 232))();
          uint64_t v102 = *(void *)(v101 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v102, 0);
          *(void *)(v101 + 16) = v38;
          MEMORY[0x22A68E750](v38, v101);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v38);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v103 = swift_allocObject();
      swift_weakInit();
      *(void *)(v103 + 16) = v39;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v104 = String.init(cString:)();
      uint64_t v106 = v105;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v107 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_106;
      }
      swift_bridgeObjectRetain();
      unint64_t v108 = specialized __RawDictionaryStorage.find<A>(_:)(v104, v106);
      if (v109)
      {
        uint64_t v110 = (uint64_t *)(*(void *)(v107 + 56) + 56 * v108);
        uint64_t v111 = v110[2];
        uint64_t v250 = v110[1];
        uint64_t v260 = *v110;
        uint64_t v113 = v110[3];
        uint64_t v112 = v110[4];
        uint64_t v115 = v110[5];
        uint64_t v114 = v110[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_106:
        uint64_t v250 = 0;
        uint64_t v260 = 0;
        uint64_t v111 = 0;
        uint64_t v113 = 0;
        uint64_t v112 = 0;
        uint64_t v115 = 0;
        uint64_t v114 = 0;
      }
      swift_endAccess();
      uint64_t v172 = swift_bridgeObjectRelease();
      *(void *)&uint64_t v362 = v264;
      BYTE8(v362) = 0;
      *(void *)&uint64_t v363 = v270;
      *((void *)&v363 + 1) = v260;
      *(void *)&uint64_t v364 = v250;
      *((void *)&v364 + 1) = v111;
      *(void *)&uint64_t v365 = v113;
      *((void *)&v365 + 1) = v112;
      uint64_t v232 = v111;
      *(void *)&uint64_t v366 = v115;
      *((void *)&v366 + 1) = v114;
      if (!v40) {
        goto LABEL_178;
      }
      uint64_t v172 = REBindPointBoundComponent();
      if (v172)
      {
        uint64_t v173 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v172 = swift_dynamicCastClassUnconditional();
LABEL_111:
          uint64_t v40 = v172;
          goto LABEL_178;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_224:
          __break(1u);
          goto LABEL_225;
        }
        uint64_t v218 = specialized static Entity.entityInfoType(_:)(v173);
        if (!v218)
        {
          uint64_t v172 = makeEntity(for:)(v173);
          goto LABEL_111;
        }
        uint64_t v40 = (*(uint64_t (**)(void))(v218 + 232))();
        uint64_t v219 = *(void *)(v40 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v219, 0);
        *(void *)(v40 + 16) = v173;
        MEMORY[0x22A68E750](v173, v40);
        uint64_t v172 = swift_release();
      }
      else
      {
        uint64_t v40 = 0;
      }
LABEL_178:
      v277(v359, v172);
      outlined init with take of Transform?((uint64_t)v359, (uint64_t)v360, v280);
      outlined init with take of Transform?((uint64_t)v360, (uint64_t)v361, v280);
      if (a9(v361) != 1)
      {
        outlined init with take of Transform?((uint64_t)v360, (uint64_t)&v314, v280);
        swift_retain();
        outlined retain of FromToByAction<simd_quatf>?(v360, a10);
        char v220 = specialized ActionEventData.parameter<A>(type:)(a11);
        double v221 = v41;
        double v222 = v42;
        uint64_t v291 = v320;
        uint64_t v292 = v321;
        uint64_t v293 = v322;
        uint64_t v294 = v323;
        uint64_t v287 = v316;
        uint64_t v288 = v317;
        uint64_t v289 = v318;
        uint64_t v290 = v319;
        uint64_t v285 = v314;
        uint64_t v286 = v315;
        uint64_t v279 = v115;
        char v223 = v220 & 1;
        uint64_t v295 = v220 & 1;
        v284[0] = v103;
        uint64_t v296 = v40;
        char v297 = v235;
        char v298 = v221;
        uint64_t v299 = v222;
        uint64_t v301 = 0;
        uint64_t v302 = 0.0;
        uint64_t v300 = Strong;
        uint64_t v303 = 1;
        char v305 = 0;
        char v304 = v244;
        uint64_t v278 = v114;
        char v306 = v240;
        char v307 = 0;
        uint64_t v311 = v365;
        unint64_t v312 = v366;
        uint64_t v309 = v363;
        uint64_t v310 = v364;
        uint64_t v308 = v362;
        uint64_t v313 = v245;
        swift_retain();
        swift_retain();
        v276(v284);
        outlined retain of FromToByAction<simd_quatf>?(v360, a12);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v324 = v103;
        uint64_t v331 = v320;
        uint64_t v332 = v321;
        uint64_t v333 = v322;
        char v334 = v323;
        uint64_t v327 = v316;
        unint64_t v328 = v317;
        uint64_t v329 = v318;
        uint64_t v330 = v319;
        uint64_t v325 = v314;
        unint64_t v326 = v315;
        uint64_t v335 = v223;
        uint64_t v336 = v40;
        uint64_t v337 = v235;
        uint64_t v338 = v221;
        uint64_t v339 = v222;
        uint64_t v342 = 0.0;
        uint64_t v340 = Strong;
        uint64_t v341 = 0;
        uint64_t v343 = 1;
        unint64_t v345 = 0;
        uint64_t v344 = v244;
        uint64_t v346 = v240;
        uint64_t v347 = 0;
        uint64_t v349 = 0;
        uint64_t v348 = v264;
        uint64_t v350 = v270;
        uint64_t v351 = v260;
        uint64_t v352 = v250;
        uint64_t v353 = v232;
        uint64_t v354 = v113;
        uint64_t v203 = v112;
        goto LABEL_181;
      }
LABEL_188:
      swift_release();
      swift_release();
      swift_release();
LABEL_189:
      swift_release();
      return 0;
    case 16:
      uint64_t v43 = *(void *)a2;
      uint64_t v44 = *(void *)(a2 + 8);
      uint64_t v274 = *(void *)(a2 + 40);
      uint64_t v45 = *(void *)(a2 + 56);
      uint64_t v255 = *(void *)(a2 + 48);
      unint64_t v265 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_216:
          __break(1u);
          goto LABEL_217;
        }
        uint64_t v116 = specialized static Entity.entityInfoType(_:)(v43);
        if (v116)
        {
          uint64_t v117 = (*(uint64_t (**)(void))(v116 + 232))();
          uint64_t v118 = *(void *)(v117 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v118, 0);
          *(void *)(v117 + 16) = v43;
          MEMORY[0x22A68E750](v43, v117);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v43);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v119 = swift_allocObject();
      swift_weakInit();
      *(void *)(v119 + 16) = v44;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v120 = String.init(cString:)();
      uint64_t v122 = v121;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v123 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_113;
      }
      swift_bridgeObjectRetain();
      unint64_t v124 = specialized __RawDictionaryStorage.find<A>(_:)(v120, v122);
      if (v125)
      {
        uint64_t v126 = (uint64_t *)(*(void *)(v123 + 56) + 56 * v124);
        uint64_t v127 = *v126;
        uint64_t v128 = v126[1];
        uint64_t v130 = v126[2];
        uint64_t v129 = v126[3];
        uint64_t v131 = v126[4];
        uint64_t v132 = v126[5];
        uint64_t v133 = v126[6];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_113:
        uint64_t v127 = 0;
        uint64_t v128 = 0;
        uint64_t v130 = 0;
        uint64_t v129 = 0;
        uint64_t v131 = 0;
        uint64_t v132 = 0;
        uint64_t v133 = 0;
      }
      swift_endAccess();
      uint64_t v174 = swift_bridgeObjectRelease();
      *(void *)&uint64_t v362 = 0;
      BYTE8(v362) = 0;
      *(void *)&uint64_t v363 = v274;
      *((void *)&v363 + 1) = v127;
      *(void *)&uint64_t v364 = v128;
      *((void *)&v364 + 1) = v130;
      *(void *)&uint64_t v365 = v129;
      *((void *)&v365 + 1) = v131;
      *(void *)&uint64_t v366 = v132;
      *((void *)&v366 + 1) = v133;
      uint64_t v252 = v129;
      if (!v45) {
        goto LABEL_187;
      }
      uint64_t v174 = REBindPointBoundComponent();
      if (!v174) {
        goto LABEL_126;
      }
      uint64_t v247 = v133;
      uint64_t v175 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject()) {
        goto LABEL_124;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0) {
        goto LABEL_184;
      }
      __break(1u);
LABEL_119:
      swift_bridgeObjectRelease();
LABEL_120:
      uint64_t v127 = 0;
      uint64_t v128 = 0;
      uint64_t v130 = 0;
      uint64_t v144 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      uint64_t v133 = 0;
LABEL_121:
      swift_endAccess();
      uint64_t v174 = swift_bridgeObjectRelease();
      *(void *)&uint64_t v362 = 0;
      BYTE8(v362) = 0;
      *(void *)&uint64_t v363 = v274;
      *((void *)&v363 + 1) = v127;
      *(void *)&uint64_t v364 = v128;
      *((void *)&v364 + 1) = v130;
      *(void *)&uint64_t v365 = v144;
      *((void *)&v365 + 1) = v131;
      *(void *)&uint64_t v366 = v132;
      *((void *)&v366 + 1) = v133;
      uint64_t v252 = v144;
      if (!v45) {
        goto LABEL_187;
      }
      uint64_t v174 = REBindPointBoundComponent();
      if (!v174)
      {
LABEL_126:
        uint64_t v45 = 0;
LABEL_187:
        v277(v359, v174);
        outlined init with take of Transform?((uint64_t)v359, (uint64_t)v360, v280);
        outlined init with take of Transform?((uint64_t)v360, (uint64_t)v361, v280);
        if (a9(v361) == 1) {
          goto LABEL_188;
        }
        outlined init with take of Transform?((uint64_t)v360, (uint64_t)&v314, v280);
        uint64_t v291 = v320;
        uint64_t v292 = v321;
        uint64_t v293 = v322;
        uint64_t v294 = v323;
        uint64_t v287 = v316;
        uint64_t v288 = v317;
        uint64_t v289 = v318;
        uint64_t v290 = v319;
        uint64_t v285 = v314;
        uint64_t v286 = v315;
        uint64_t v282 = v132;
        uint64_t v295 = 1;
        v284[0] = v119;
        uint64_t v296 = v45;
        char v297 = 0;
        char v298 = 0.0;
        uint64_t v299 = 0.0;
        uint64_t v301 = 0;
        uint64_t v302 = 0.0;
        uint64_t v300 = Strong;
        uint64_t v303 = 1;
        char v305 = 0;
        uint64_t v177 = v255;
        char v304 = v265;
        char v306 = 0;
        char v307 = 1;
        uint64_t v311 = v365;
        unint64_t v312 = v366;
        uint64_t v309 = v363;
        uint64_t v310 = v364;
        uint64_t v308 = v362;
        uint64_t v313 = v255;
        swift_retain();
        swift_retain();
        outlined retain of FromToByAction<simd_quatf>?(v360, a10);
        swift_retain();
        v276(v284);
        outlined retain of FromToByAction<simd_quatf>?(v360, a12);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v324 = v119;
        uint64_t v331 = v320;
        uint64_t v332 = v321;
        uint64_t v333 = v322;
        char v334 = v323;
        uint64_t v327 = v316;
        unint64_t v328 = v317;
        uint64_t v329 = v318;
        uint64_t v330 = v319;
        uint64_t v325 = v314;
        unint64_t v326 = v315;
        uint64_t v335 = 1;
        uint64_t v336 = v45;
        uint64_t v337 = 0;
        uint64_t v339 = 0.0;
        uint64_t v338 = 0.0;
        uint64_t v342 = 0.0;
        uint64_t v340 = Strong;
        uint64_t v341 = 0;
        uint64_t v343 = 1;
        unint64_t v345 = 0;
        uint64_t v344 = v265;
        uint64_t v346 = 0;
        uint64_t v347 = 1;
        uint64_t v349 = 0;
        uint64_t v348 = 0;
        uint64_t v350 = v274;
        uint64_t v351 = v127;
        uint64_t v352 = v128;
        uint64_t v353 = v130;
        uint64_t v354 = v252;
        uint64_t v355 = v131;
        char v356 = v282;
        uint64_t v357 = v133;
        goto LABEL_191;
      }
      uint64_t v247 = v133;
      uint64_t v175 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
LABEL_124:
        type metadata accessor for Entity();
        uint64_t v174 = swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_225:
          __break(1u);
          goto LABEL_226;
        }
LABEL_184:
        uint64_t v224 = specialized static Entity.entityInfoType(_:)(v175);
        if (v224)
        {
          uint64_t v45 = (*(uint64_t (**)(void))(v224 + 232))();
          uint64_t v225 = *(void *)(v45 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v225, 0);
          *(void *)(v45 + 16) = v175;
          MEMORY[0x22A68E750](v175, v45);
          uint64_t v174 = swift_release();
          goto LABEL_186;
        }
        uint64_t v174 = makeEntity(for:)(v175);
      }
      uint64_t v45 = v174;
LABEL_186:
      uint64_t v133 = v247;
      goto LABEL_187;
    case 32:
      uint64_t v46 = *(void *)a2;
      uint64_t v47 = *(void *)(a2 + 8);
      uint64_t v274 = *(void *)(a2 + 40);
      uint64_t v45 = *(void *)(a2 + 56);
      uint64_t v255 = *(void *)(a2 + 48);
      unint64_t v265 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_217:
          __break(1u);
          goto LABEL_218;
        }
        uint64_t v134 = specialized static Entity.entityInfoType(_:)(v46);
        if (v134)
        {
          uint64_t v135 = (*(uint64_t (**)(void))(v134 + 232))();
          uint64_t v136 = *(void *)(v135 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v136, 0);
          *(void *)(v135 + 16) = v46;
          MEMORY[0x22A68E750](v46, v135);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v46);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v119 = swift_allocObject();
      swift_weakInit();
      *(void *)(v119 + 16) = v47;
      swift_beginAccess();
      swift_weakAssign();
      uint64_t v137 = String.init(cString:)();
      uint64_t v139 = v138;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v140 = static AnimationResource.codableActionTypeMap;
      if (!*(void *)(static AnimationResource.codableActionTypeMap + 16)) {
        goto LABEL_120;
      }
      swift_bridgeObjectRetain();
      unint64_t v141 = specialized __RawDictionaryStorage.find<A>(_:)(v137, v139);
      if ((v142 & 1) == 0) {
        goto LABEL_119;
      }
      uint64_t v143 = (uint64_t *)(*(void *)(v140 + 56) + 56 * v141);
      uint64_t v127 = *v143;
      uint64_t v128 = v143[1];
      uint64_t v130 = v143[2];
      uint64_t v144 = v143[3];
      uint64_t v131 = v143[4];
      uint64_t v132 = v143[5];
      uint64_t v133 = v143[6];
      swift_bridgeObjectRelease();
      goto LABEL_121;
    case 64:
      uint64_t v48 = *(void *)a2;
      uint64_t v49 = *(void *)(a2 + 8);
      uint64_t v275 = *(void *)(a2 + 24);
      uint64_t v50 = *(void *)(a2 + 40);
      uint64_t v256 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_218:
          __break(1u);
          goto LABEL_219;
        }
        uint64_t v145 = specialized static Entity.entityInfoType(_:)(v48);
        if (v145)
        {
          uint64_t v146 = (*(uint64_t (**)(void))(v145 + 232))();
          uint64_t v147 = *(void *)(v146 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v147, 0);
          *(void *)(v146 + 16) = v48;
          MEMORY[0x22A68E750](v48, v146);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v48);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v148 = swift_allocObject();
      swift_weakInit();
      *(void *)(v148 + 16) = v49;
      swift_beginAccess();
      swift_weakAssign();
      if (v50 && REBindPointBoundComponent())
      {
        uint64_t v149 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v150 = swift_dynamicCastClassUnconditional();
LABEL_77:
          uint64_t v151 = v150;
          goto LABEL_79;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_220:
          __break(1u);
LABEL_221:
          __break(1u);
          goto LABEL_222;
        }
        uint64_t v195 = specialized static Entity.entityInfoType(_:)(v149);
        if (!v195)
        {
          uint64_t v150 = makeEntity(for:)(v149);
          goto LABEL_77;
        }
        uint64_t v151 = (*(uint64_t (**)(void))(v195 + 232))();
        uint64_t v196 = *(void *)(v151 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v196, 0);
        *(void *)(v151 + 16) = v149;
        MEMORY[0x22A68E750](v149, v151);
        swift_release();
      }
      else
      {
        uint64_t v151 = 0;
      }
LABEL_79:
      uint64_t v152 = String.init(cString:)();
      uint64_t v154 = v153;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v155 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v156 = specialized __RawDictionaryStorage.find<A>(_:)(v152, v154);
        if (v157)
        {
          uint64_t v158 = (uint64_t *)(*(void *)(v155 + 56) + 56 * v156);
          uint64_t v159 = *v158;
          uint64_t v160 = v158[1];
          uint64_t v161 = v158[3];
          uint64_t v271 = v158[2];
          uint64_t v163 = v158[4];
          uint64_t v162 = v158[5];
          uint64_t v164 = v158[6];
          swift_bridgeObjectRelease();
LABEL_129:
          swift_endAccess();
          uint64_t v176 = swift_bridgeObjectRelease();
          *(void *)&uint64_t v362 = 0;
          BYTE8(v362) = 0;
          *(void *)&uint64_t v363 = v275;
          *((void *)&v363 + 1) = v159;
          *(void *)&uint64_t v364 = v160;
          *((void *)&v364 + 1) = v271;
          *(void *)&uint64_t v365 = v161;
          *((void *)&v365 + 1) = v163;
          *(void *)&uint64_t v366 = v162;
          *((void *)&v366 + 1) = v164;
          v277(v359, v176);
          outlined init with take of Transform?((uint64_t)v359, (uint64_t)v360, v280);
          outlined init with take of Transform?((uint64_t)v360, (uint64_t)v361, v280);
          if (a9(v361) == 1) {
            goto LABEL_188;
          }
          outlined init with take of Transform?((uint64_t)v360, (uint64_t)&v314, v280);
          uint64_t v291 = v320;
          uint64_t v292 = v321;
          uint64_t v293 = v322;
          uint64_t v294 = v323;
          uint64_t v287 = v316;
          uint64_t v288 = v317;
          uint64_t v289 = v318;
          uint64_t v290 = v319;
          uint64_t v285 = v314;
          uint64_t v286 = v315;
          uint64_t v295 = 1;
          v284[0] = v148;
          uint64_t v296 = v151;
          char v297 = 0;
          char v298 = 0.0;
          uint64_t v299 = 0.0;
          uint64_t v301 = 0;
          uint64_t v302 = 0.0;
          uint64_t v300 = Strong;
          uint64_t v303 = 1;
          char v305 = 1;
          char v304 = 0;
          char v306 = 0;
          char v307 = 1;
          uint64_t v311 = v365;
          unint64_t v312 = v366;
          uint64_t v309 = v363;
          uint64_t v310 = v364;
          uint64_t v308 = v362;
          uint64_t v177 = v256;
          uint64_t v313 = v256;
          swift_retain();
          swift_retain();
          outlined retain of FromToByAction<simd_quatf>?(v360, a10);
          swift_retain();
          v276(v284);
          outlined retain of FromToByAction<simd_quatf>?(v360, a12);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v324 = v148;
          uint64_t v331 = v320;
          uint64_t v332 = v321;
          uint64_t v333 = v322;
          char v334 = v323;
          uint64_t v327 = v316;
          unint64_t v328 = v317;
          uint64_t v329 = v318;
          uint64_t v330 = v319;
          uint64_t v325 = v314;
          unint64_t v326 = v315;
          uint64_t v335 = 1;
          uint64_t v336 = v151;
          uint64_t v337 = 0;
          uint64_t v339 = 0.0;
          uint64_t v338 = 0.0;
          uint64_t v342 = 0.0;
          uint64_t v340 = Strong;
          uint64_t v341 = 0;
          uint64_t v343 = 1;
          unint64_t v345 = 1;
          uint64_t v344 = 0;
          uint64_t v346 = 0;
          uint64_t v347 = 1;
          uint64_t v349 = 0;
          uint64_t v348 = 0;
          uint64_t v350 = v275;
          uint64_t v351 = v159;
          uint64_t v352 = v160;
          uint64_t v353 = v271;
          uint64_t v354 = v161;
LABEL_154:
          uint64_t v355 = v163;
          char v356 = v162;
          uint64_t v357 = v164;
          goto LABEL_191;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v159 = 0;
      uint64_t v160 = 0;
      uint64_t v271 = 0;
      uint64_t v161 = 0;
      uint64_t v163 = 0;
      uint64_t v162 = 0;
      uint64_t v164 = 0;
      goto LABEL_129;
    default:
      if (a4 != 128) {
        goto LABEL_189;
      }
      uint64_t v23 = *(void *)a2;
      uint64_t v24 = *(void *)(a2 + 8);
      uint64_t v273 = *(void *)(a2 + 24);
      uint64_t v25 = *(void *)(a2 + 40);
      uint64_t v254 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_219:
          __break(1u);
          goto LABEL_220;
        }
        uint64_t v178 = specialized static Entity.entityInfoType(_:)(v23);
        if (v178)
        {
          uint64_t v179 = (*(uint64_t (**)(void))(v178 + 232))();
          uint64_t v180 = *(void *)(v179 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v180, 0);
          *(void *)(v179 + 16) = v23;
          MEMORY[0x22A68E750](v23, v179);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v23);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v181 = swift_allocObject();
      swift_weakInit();
      *(void *)(v181 + 16) = v24;
      swift_beginAccess();
      swift_weakAssign();
      if (v25 && REBindPointBoundComponent())
      {
        uint64_t v182 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v183 = swift_dynamicCastClassUnconditional();
LABEL_138:
          uint64_t v184 = v183;
          goto LABEL_140;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_226:
          __break(1u);
          JUMPOUT(0x227FAC7F4);
        }
        uint64_t v226 = specialized static Entity.entityInfoType(_:)(v182);
        if (!v226)
        {
          uint64_t v183 = makeEntity(for:)(v182);
          goto LABEL_138;
        }
        uint64_t v184 = (*(uint64_t (**)(void))(v226 + 232))();
        uint64_t v227 = *(void *)(v184 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v227, 0);
        *(void *)(v184 + 16) = v182;
        MEMORY[0x22A68E750](v182, v184);
        swift_release();
      }
      else
      {
        uint64_t v184 = 0;
      }
LABEL_140:
      uint64_t v185 = String.init(cString:)();
      uint64_t v187 = v186;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v188 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v189 = specialized __RawDictionaryStorage.find<A>(_:)(v185, v187);
        if (v190)
        {
          double v191 = (uint64_t *)(*(void *)(v188 + 56) + 56 * v189);
          uint64_t v193 = *v191;
          uint64_t v192 = v191[1];
          uint64_t v163 = v191[4];
          uint64_t v266 = v191[3];
          uint64_t v272 = v191[2];
          uint64_t v162 = v191[5];
          uint64_t v164 = v191[6];
          swift_bridgeObjectRelease();
LABEL_151:
          swift_endAccess();
          uint64_t v194 = swift_bridgeObjectRelease();
          *(void *)&uint64_t v362 = 0;
          BYTE8(v362) = 0;
          *(void *)&uint64_t v363 = v273;
          *((void *)&v363 + 1) = v193;
          *(void *)&uint64_t v364 = v192;
          *((void *)&v364 + 1) = v272;
          *(void *)&uint64_t v365 = v266;
          *((void *)&v365 + 1) = v163;
          *(void *)&uint64_t v366 = v162;
          *((void *)&v366 + 1) = v164;
          v277(v359, v194);
          outlined init with take of Transform?((uint64_t)v359, (uint64_t)v360, v280);
          outlined init with take of Transform?((uint64_t)v360, (uint64_t)v361, v280);
          if (a9(v361) == 1) {
            goto LABEL_188;
          }
          outlined init with take of Transform?((uint64_t)v360, (uint64_t)&v314, v280);
          uint64_t v291 = v320;
          uint64_t v292 = v321;
          uint64_t v293 = v322;
          uint64_t v294 = v323;
          uint64_t v287 = v316;
          uint64_t v288 = v317;
          uint64_t v289 = v318;
          uint64_t v290 = v319;
          uint64_t v285 = v314;
          uint64_t v286 = v315;
          uint64_t v295 = 1;
          v284[0] = v181;
          uint64_t v296 = v184;
          char v297 = 0;
          char v298 = 0.0;
          uint64_t v299 = 0.0;
          uint64_t v301 = 0;
          uint64_t v302 = 0.0;
          uint64_t v300 = Strong;
          uint64_t v303 = 1;
          char v305 = 1;
          char v304 = 0;
          char v306 = 0;
          char v307 = 1;
          uint64_t v311 = v365;
          unint64_t v312 = v366;
          uint64_t v309 = v363;
          uint64_t v310 = v364;
          uint64_t v308 = v362;
          uint64_t v177 = v254;
          uint64_t v313 = v254;
          swift_retain();
          swift_retain();
          outlined retain of FromToByAction<simd_quatf>?(v360, a10);
          swift_retain();
          v276(v284);
          swift_release();
          outlined retain of FromToByAction<simd_quatf>?(v360, a12);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v324 = v181;
          uint64_t v331 = v320;
          uint64_t v332 = v321;
          uint64_t v333 = v322;
          char v334 = v323;
          uint64_t v327 = v316;
          unint64_t v328 = v317;
          uint64_t v329 = v318;
          uint64_t v330 = v319;
          uint64_t v325 = v314;
          unint64_t v326 = v315;
          uint64_t v335 = 1;
          uint64_t v336 = v184;
          uint64_t v337 = 0;
          uint64_t v339 = 0.0;
          uint64_t v338 = 0.0;
          uint64_t v342 = 0.0;
          uint64_t v340 = Strong;
          uint64_t v341 = 0;
          uint64_t v343 = 1;
          unint64_t v345 = 1;
          uint64_t v344 = 0;
          uint64_t v346 = 0;
          uint64_t v347 = 1;
          uint64_t v349 = 0;
          uint64_t v348 = 0;
          uint64_t v350 = v273;
          uint64_t v351 = v193;
          uint64_t v352 = v192;
          uint64_t v353 = v272;
          uint64_t v354 = v266;
          goto LABEL_154;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v193 = 0;
      uint64_t v192 = 0;
      uint64_t v266 = 0;
      uint64_t v272 = 0;
      uint64_t v163 = 0;
      uint64_t v162 = 0;
      uint64_t v164 = 0;
      goto LABEL_151;
  }
}

uint64_t specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static EntityAction.__subscribe(to:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t *a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a10, void (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    specialized static AnimationLogger.logError(_:)(0xD00000000000002FLL, 0x8000000228353DB0);
    return 1;
  }
  switch(a4)
  {
    case 1:
      long long v524 = a5;
      uint64_t v16 = *(void *)a2;
      uint64_t v17 = *(void *)(a2 + 8);
      uint64_t v474 = *(void *)(a2 + 32);
      uint64_t v481 = *(void *)(a2 + 40);
      uint64_t v445 = *(void *)(a2 + 56);
      uint64_t v452 = *(void *)(a2 + 48);
      uint64_t v458 = *(void *)(a2 + 64);
      float v18 = *(float *)(a2 + 72);
      float v19 = *(float *)(a2 + 76);
      char v421 = *(unsigned char *)(a2 + 80);
      unint64_t v429 = *(void *)(a2 + 88);
      unint64_t v437 = *(void *)(a2 + 96);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_25;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v49 = specialized static Entity.entityInfoType(_:)(v16);
        if (v49)
        {
          uint64_t v50 = (*(uint64_t (**)(void))(v49 + 232))();
          uint64_t v51 = *(void *)(v50 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v51, 0);
          *(void *)(v50 + 16) = v16;
          MEMORY[0x22A68E750](v16, v50);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v16);
        }
LABEL_25:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v492 = swift_allocObject();
        swift_weakInit();
        *(void *)(v492 + 16) = v17;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v52 = String.init(cString:)();
        uint64_t v54 = v53;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        uint64_t v513 = a7;
        swift_beginAccess();
        uint64_t v55 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          uint64_t v56 = a8;
          uint64_t v57 = a11;
          swift_bridgeObjectRetain();
          unint64_t v58 = specialized __RawDictionaryStorage.find<A>(_:)(v52, v54);
          if (v59)
          {
            char v60 = (uint64_t *)(*(void *)(v55 + 56) + 56 * v58);
            uint64_t v61 = v60[1];
            uint64_t v469 = *v60;
            uint64_t v63 = v60[2];
            uint64_t v62 = v60[3];
            uint64_t v65 = v60[4];
            uint64_t v64 = v60[5];
            uint64_t v66 = v60[6];
            swift_bridgeObjectRelease();
            goto LABEL_87;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v56 = a8;
          uint64_t v57 = a11;
        }
        uint64_t v469 = 0;
        uint64_t v61 = 0;
        uint64_t v63 = 0;
        uint64_t v62 = 0;
        uint64_t v65 = 0;
        uint64_t v64 = 0;
        uint64_t v66 = 0;
LABEL_87:
        uint64_t v384 = v65;
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&long long v625 = v474;
        BYTE8(v625) = 0;
        *(void *)&long long v626 = v481;
        *((void *)&v626 + 1) = v469;
        *(void *)&long long v627 = v61;
        *((void *)&v627 + 1) = v63;
        uint64_t v399 = v64;
        uint64_t v406 = v62;
        *(void *)&long long v628 = v62;
        *((void *)&v628 + 1) = v65;
        *(void *)&long long v629 = v64;
        *((void *)&v629 + 1) = v66;
        uint64_t v392 = v66;
        v532 = v57;
        uint64_t v413 = v61;
        if (!v458 || !REBindPointBoundComponent())
        {
          uint64_t v464 = 0;
          goto LABEL_93;
        }
        uint64_t Entity = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v164 = swift_dynamicCastClassUnconditional();
LABEL_91:
          uint64_t v464 = v164;
          goto LABEL_93;
        }
        if ((REEntityIsBeingDestroyed() & 1) == 0)
        {
          uint64_t v232 = specialized static Entity.entityInfoType(_:)(Entity);
          if (!v232)
          {
            uint64_t v164 = makeEntity(for:)(Entity);
            goto LABEL_91;
          }
          uint64_t v233 = (*(uint64_t (**)(void))(v232 + 232))();
          uint64_t v234 = *(void *)(v233 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v234, 0);
          *(void *)(v233 + 16) = Entity;
          MEMORY[0x22A68E750](Entity, v233);
          uint64_t v464 = v233;
          swift_release();
LABEL_93:
          specialized ActionEventData.action<A>()(v513, v56, (uint64_t)&v611);
          uint64_t v165 = v623;
          if (v623 != 1)
          {
            uint64_t v166 = v624;
            uint64_t v328 = v63;
            uint64_t v167 = v622;
            uint64_t v370 = v622;
            uint64_t v377 = v624;
            uint64_t v168 = v621;
            uint64_t v169 = v620;
            unint64_t v170 = v619;
            uint64_t v171 = v618;
            uint64_t v172 = v617;
            uint64_t v173 = v615;
            uint64_t v334 = v616;
            uint64_t v339 = v614;
            uint64_t v355 = v613;
            uint64_t v362 = v620;
            uint64_t v503 = v623;
            unint64_t v514 = HIDWORD(v619);
            uint64_t v347 = v612;
            uint64_t v174 = v611;
            uint64_t v318 = v621;
            uint64_t v323 = v611;
            swift_retain();
            a9(v174, v347, v355, v339, v173, v334, v172, v171, v170, v169, v168, v167, v165, v166);
            char v175 = specialized ActionEventData.parameter<A>(type:)(a10);
            long long v566 = v627;
            long long v567 = v628;
            long long v568 = v629;
            long long v565 = v626;
            char v536 = v347 & 1;
            uint64_t v537 = v355;
            char v538 = v339 & 1;
            uint64_t v539 = v173;
            char v540 = v334 & 1;
            uint64_t v541 = v172;
            uint64_t v542 = v171;
            int v543 = v170;
            char v544 = v514;
            uint64_t v545 = v362;
            uint64_t v546 = v318;
            __int16 v547 = v370 & 0x1FF;
            char v548 = BYTE2(v370) & 1;
            uint64_t v549 = v503;
            uint64_t v550 = v377;
            char v311 = v175 & 1;
            char v551 = v175 & 1;
            uint64_t v535 = v323;
            v534[0] = v492;
            uint64_t v552 = v464;
            char v553 = v421;
            double v554 = v18;
            double v555 = v19;
            uint64_t v556 = Strong;
            uint64_t v557 = v445;
            long long v564 = v625;
            double v558 = -1.0;
            char v559 = 0;
            unint64_t v560 = v429;
            char v561 = 0;
            unint64_t v562 = v437;
            char v563 = 0;
            uint64_t v569 = v452;
            swift_retain();
            swift_retain();
            v524(v534);
            v532(v323, v347, v355, v339, v173, v334, v172, v171, v170, v362, v318, v370, v503, v377);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v570 = v492;
            uint64_t v571 = v323;
            char v572 = v347 & 1;
            uint64_t v573 = v355;
            char v574 = v339 & 1;
            uint64_t v575 = v173;
            char v576 = v334 & 1;
            uint64_t v577 = v172;
            uint64_t v578 = v171;
            int v579 = v170;
            char v580 = v514;
            uint64_t v581 = v362;
            uint64_t v582 = v318;
            __int16 v583 = v370 & 0x1FF;
            char v584 = BYTE2(v370) & 1;
            uint64_t v585 = v503;
            uint64_t v586 = v377;
            char v587 = v311;
            uint64_t v588 = v464;
            char v589 = v421;
            double v590 = v18;
            double v591 = v19;
            uint64_t v592 = Strong;
            uint64_t v593 = v445;
            double v594 = -1.0;
            char v595 = 0;
            unint64_t v596 = v429;
            char v597 = 0;
            unint64_t v598 = v437;
            char v599 = 0;
            uint64_t v600 = v474;
            char v601 = 0;
            uint64_t v602 = v481;
            uint64_t v603 = v469;
            uint64_t v604 = v413;
            uint64_t v605 = v328;
            uint64_t v606 = v406;
            uint64_t v176 = v384;
LABEL_172:
            uint64_t v607 = v176;
            uint64_t v608 = v399;
            uint64_t v609 = v392;
            uint64_t v204 = v452;
            goto LABEL_202;
          }
          goto LABEL_198;
        }
        goto LABEL_232;
      }
      __break(1u);
      goto LABEL_224;
    case 2:
      long long v526 = a5;
      uint64_t v24 = *(void *)a2;
      uint64_t v25 = *(void *)(a2 + 8);
      uint64_t v482 = *(void *)(a2 + 32);
      uint64_t v489 = *(void *)(a2 + 40);
      float v26 = *(float *)(a2 + 56);
      unint64_t v438 = *(void *)(a2 + 64);
      unint64_t v446 = *(void *)(a2 + 48);
      uint64_t v430 = *(void *)(a2 + 72);
      uint64_t v452 = *(void *)(a2 + 80);
      uint64_t v460 = *(void *)(a2 + 88);
      float v27 = *(float *)(a2 + 96);
      float v28 = *(float *)(a2 + 100);
      char v422 = *(unsigned char *)(a2 + 104);
      uint64_t v511 = a7;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_33;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v67 = specialized static Entity.entityInfoType(_:)(v24);
        if (v67)
        {
          uint64_t v68 = (*(uint64_t (**)(void))(v67 + 232))();
          uint64_t v69 = *(void *)(v68 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v69, 0);
          *(void *)(v68 + 16) = v24;
          MEMORY[0x22A68E750](v24, v68);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v24);
        }
LABEL_33:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v470 = swift_allocObject();
        swift_weakInit();
        *(void *)(v470 + 16) = v25;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v70 = String.init(cString:)();
        uint64_t v72 = v71;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v73 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v74 = specialized __RawDictionaryStorage.find<A>(_:)(v70, v72);
          if (v75)
          {
            char v76 = (uint64_t *)(*(void *)(v73 + 56) + 56 * v74);
            uint64_t v77 = v76[1];
            uint64_t v476 = *v76;
            uint64_t v78 = v76[2];
            uint64_t v79 = v76[3];
            uint64_t v81 = v76[4];
            uint64_t v80 = v76[5];
            uint64_t v82 = v76[6];
            swift_bridgeObjectRelease();
LABEL_97:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v625 = v482;
            BYTE8(v625) = 0;
            *(void *)&long long v626 = v489;
            *((void *)&v626 + 1) = v476;
            *(void *)&long long v627 = v77;
            *((void *)&v627 + 1) = v78;
            *(void *)&long long v628 = v79;
            *((void *)&v628 + 1) = v81;
            *(void *)&long long v629 = v80;
            *((void *)&v629 + 1) = v82;
            uint64_t v407 = v81;
            uint64_t v414 = v77;
            uint64_t v392 = v82;
            uint64_t v399 = v80;
            if (!v460 || !REBindPointBoundComponent())
            {
              uint64_t v465 = 0;
              goto LABEL_169;
            }
            uint64_t v177 = v78;
            uint64_t v178 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v179 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_233:
                __break(1u);
                goto LABEL_234;
              }
              uint64_t v235 = specialized static Entity.entityInfoType(_:)(v178);
              if (v235)
              {
                uint64_t v236 = (*(uint64_t (**)(void))(v235 + 232))();
                uint64_t v237 = *(void *)(v236 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v237, 0);
                *(void *)(v236 + 16) = v178;
                MEMORY[0x22A68E750](v178, v236);
                uint64_t v465 = v236;
                swift_release();
                goto LABEL_168;
              }
              uint64_t v179 = makeEntity(for:)(v178);
            }
            uint64_t v465 = v179;
LABEL_168:
            uint64_t v78 = v177;
LABEL_169:
            specialized ActionEventData.action<A>()(v511, a8, (uint64_t)&v611);
            uint64_t v238 = v623;
            if (v623 != 1)
            {
              uint64_t v329 = v78;
              uint64_t v239 = v624;
              uint64_t v240 = v622;
              uint64_t v380 = v622;
              uint64_t v387 = v624;
              uint64_t v241 = v621;
              uint64_t v242 = v620;
              uint64_t v243 = v618;
              uint64_t v244 = v617;
              uint64_t v245 = v79;
              uint64_t v246 = v615;
              uint64_t v342 = v616;
              uint64_t v350 = v614;
              uint64_t v365 = v613;
              uint64_t v372 = v620;
              uint64_t v506 = v623;
              unint64_t v517 = HIDWORD(v619);
              unint64_t v247 = v619;
              uint64_t v357 = v612;
              uint64_t v248 = v611;
              uint64_t v326 = v611;
              uint64_t v336 = v245;
              swift_retain();
              a9(v248, v357, v365, v350, v246, v342, v244, v243, v247, v242, v241, v240, v238, v239);
              char v249 = specialized ActionEventData.parameter<A>(type:)(a10);
              long long v566 = v627;
              long long v567 = v628;
              long long v568 = v629;
              long long v565 = v626;
              double v250 = v26;
              char v536 = v357 & 1;
              uint64_t v537 = v365;
              char v538 = v350 & 1;
              uint64_t v539 = v246;
              char v540 = v342 & 1;
              uint64_t v541 = v244;
              uint64_t v542 = v243;
              int v543 = v247;
              char v544 = v517;
              uint64_t v545 = v372;
              uint64_t v546 = v241;
              __int16 v547 = v380 & 0x1FF;
              char v548 = BYTE2(v380) & 1;
              uint64_t v549 = v506;
              uint64_t v550 = v387;
              char v308 = v249 & 1;
              char v551 = v249 & 1;
              uint64_t v535 = v326;
              v534[0] = v470;
              uint64_t v552 = v465;
              char v553 = v422;
              double v554 = v27;
              double v555 = v28;
              uint64_t v556 = Strong;
              uint64_t v557 = v430;
              double v558 = v250;
              char v559 = 0;
              unint64_t v560 = v446;
              char v561 = 0;
              unint64_t v562 = v438;
              char v563 = 0;
              long long v564 = v625;
              uint64_t v569 = v452;
              swift_retain();
              swift_retain();
              v526(v534);
              a11(v326, v357, v365, v350, v246, v342, v244, v243, v247, v372, v241, v380, v506, v387);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v570 = v470;
              uint64_t v571 = v326;
              char v572 = v357 & 1;
              uint64_t v573 = v365;
              char v574 = v350 & 1;
              uint64_t v575 = v246;
              char v576 = v342 & 1;
              uint64_t v577 = v244;
              uint64_t v578 = v243;
              int v579 = v247;
              char v580 = v517;
              uint64_t v581 = v372;
              uint64_t v582 = v241;
              __int16 v583 = v380 & 0x1FF;
              char v584 = BYTE2(v380) & 1;
              uint64_t v585 = v506;
              uint64_t v586 = v387;
              char v587 = v308;
              uint64_t v588 = v465;
              char v589 = v422;
              double v590 = v27;
              double v591 = v28;
              uint64_t v592 = Strong;
              uint64_t v593 = v430;
              double v594 = v250;
              char v595 = 0;
              unint64_t v596 = v446;
              char v597 = 0;
              unint64_t v598 = v438;
              char v599 = 0;
              uint64_t v600 = v482;
              char v601 = 0;
              uint64_t v602 = v489;
              uint64_t v603 = v476;
              uint64_t v604 = v414;
              uint64_t v605 = v329;
              uint64_t v606 = v336;
              uint64_t v176 = v407;
              goto LABEL_172;
            }
LABEL_198:
            swift_release();
            swift_release();
            swift_release();
LABEL_199:
            swift_release();
            return 0;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v476 = 0;
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        uint64_t v79 = 0;
        uint64_t v81 = 0;
        uint64_t v80 = 0;
        uint64_t v82 = 0;
        goto LABEL_97;
      }
LABEL_224:
      __break(1u);
      goto LABEL_225;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
      goto LABEL_199;
    case 4:
      long long v527 = a5;
      uint64_t v29 = *(void *)a2;
      uint64_t v30 = *(void *)(a2 + 8);
      uint64_t v483 = *(void *)(a2 + 32);
      uint64_t v490 = *(void *)(a2 + 40);
      uint64_t v31 = *(void *)(a2 + 64);
      uint64_t v453 = *(void *)(a2 + 56);
      uint64_t v459 = *(void *)(a2 + 48);
      float v32 = *(float *)(a2 + 72);
      float v33 = *(float *)(a2 + 76);
      char v447 = *(unsigned char *)(a2 + 80);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_41;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v83 = specialized static Entity.entityInfoType(_:)(v29);
        if (v83)
        {
          uint64_t v84 = (*(uint64_t (**)(void))(v83 + 232))();
          uint64_t v85 = *(void *)(v84 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v85, 0);
          *(void *)(v84 + 16) = v29;
          MEMORY[0x22A68E750](v29, v84);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v29);
        }
LABEL_41:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v471 = swift_allocObject();
        swift_weakInit();
        *(void *)(v471 + 16) = v30;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v86 = String.init(cString:)();
        uint64_t v88 = v87;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v89 = static AnimationResource.codableActionTypeMap;
        char v502 = a8;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v90 = specialized __RawDictionaryStorage.find<A>(_:)(v86, v88);
          if (v91)
          {
            unint64_t v92 = (uint64_t *)(*(void *)(v89 + 56) + 56 * v90);
            uint64_t v93 = v92[1];
            uint64_t v477 = *v92;
            uint64_t v94 = v92[2];
            uint64_t v95 = v92[3];
            uint64_t v97 = v92[4];
            uint64_t v96 = v92[5];
            uint64_t v98 = v92[6];
            swift_bridgeObjectRelease();
LABEL_105:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v625 = v483;
            BYTE8(v625) = 0;
            *(void *)&long long v626 = v490;
            *((void *)&v626 + 1) = v477;
            *(void *)&long long v627 = v93;
            *((void *)&v627 + 1) = v94;
            *(void *)&long long v628 = v95;
            *((void *)&v628 + 1) = v97;
            *(void *)&long long v629 = v96;
            *((void *)&v629 + 1) = v98;
            uint64_t v423 = v97;
            uint64_t v431 = v93;
            uint64_t v408 = v98;
            uint64_t v415 = v96;
            if (!v31 || !REBindPointBoundComponent())
            {
              uint64_t v440 = 0;
LABEL_177:
              specialized ActionEventData.action<A>()(a7, v502, (uint64_t)&v611);
              if (v623 == 1) {
                goto LABEL_198;
              }
              uint64_t v254 = v623;
              uint64_t v255 = v624;
              uint64_t v507 = v624;
              uint64_t v256 = v622;
              uint64_t v337 = v94;
              uint64_t v257 = v621;
              uint64_t v396 = v621;
              uint64_t v403 = v622;
              uint64_t v258 = v620;
              uint64_t v388 = v620;
              unint64_t v259 = v619;
              uint64_t v260 = v95;
              uint64_t v261 = v617;
              uint64_t v351 = v618;
              uint64_t v358 = v616;
              uint64_t v262 = v615;
              uint64_t v366 = v614;
              uint64_t v373 = v613;
              unint64_t v518 = HIDWORD(v619);
              uint64_t v263 = v612;
              uint64_t v264 = v611;
              uint64_t v330 = v611;
              uint64_t v343 = v260;
              swift_retain();
              a9(v264, v263, v373, v366, v262, v358, v261, v351, v259, v258, v257, v256, v254, v255);
              char v265 = specialized ActionEventData.parameter<A>(type:)(a10);
              long long v566 = v627;
              long long v567 = v628;
              long long v568 = v629;
              long long v565 = v626;
              char v536 = v263 & 1;
              uint64_t v537 = v373;
              char v538 = v366 & 1;
              uint64_t v539 = v262;
              char v540 = v358 & 1;
              uint64_t v541 = v261;
              uint64_t v542 = v351;
              int v543 = v259;
              char v544 = v518;
              uint64_t v545 = v388;
              uint64_t v546 = v396;
              __int16 v547 = v403 & 0x1FF;
              char v548 = BYTE2(v403) & 1;
              uint64_t v549 = v254;
              uint64_t v550 = v507;
              char v314 = v265 & 1;
              char v551 = v265 & 1;
              uint64_t v535 = v330;
              v534[0] = v471;
              uint64_t v552 = v440;
              char v553 = v447;
              double v554 = v32;
              double v555 = v33;
              uint64_t v556 = Strong;
              uint64_t v557 = v453;
              double v558 = -1.0;
              char v559 = 0;
              unint64_t v560 = 0xBFF0000000000000;
              char v561 = 0;
              unint64_t v562 = 0xBFF0000000000000;
              char v563 = 0;
              long long v564 = v625;
              uint64_t v569 = v459;
              swift_retain();
              swift_retain();
              v527(v534);
              a11(v330, v263, v373, v366, v262, v358, v261, v351, v259, v388, v396, v403, v254, v507);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v570 = v471;
              uint64_t v571 = v330;
              char v572 = v263 & 1;
              uint64_t v573 = v373;
              char v574 = v366 & 1;
              uint64_t v575 = v262;
              char v576 = v358 & 1;
              uint64_t v577 = v261;
              uint64_t v578 = v351;
              int v579 = v259;
              char v580 = v518;
              uint64_t v581 = v388;
              uint64_t v582 = v396;
              __int16 v583 = v403 & 0x1FF;
              char v584 = BYTE2(v403) & 1;
              uint64_t v585 = v254;
              uint64_t v586 = v507;
              char v587 = v314;
              uint64_t v588 = v440;
              char v589 = v447;
              double v590 = v32;
              double v591 = v33;
              uint64_t v592 = Strong;
              uint64_t v593 = v453;
              double v594 = -1.0;
              char v595 = 0;
              unint64_t v596 = 0xBFF0000000000000;
              char v597 = 0;
              unint64_t v598 = 0xBFF0000000000000;
              char v599 = 0;
              uint64_t v600 = v483;
              char v601 = 0;
              uint64_t v602 = v490;
              uint64_t v603 = v477;
              uint64_t v604 = v431;
              uint64_t v605 = v337;
              uint64_t v606 = v343;
              uint64_t v607 = v423;
              uint64_t v608 = v415;
              uint64_t v229 = v408;
              goto LABEL_186;
            }
            uint64_t v180 = v94;
            uint64_t v181 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v182 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_234:
                __break(1u);
                goto LABEL_235;
              }
              uint64_t v251 = specialized static Entity.entityInfoType(_:)(v181);
              if (v251)
              {
                uint64_t v252 = (*(uint64_t (**)(void))(v251 + 232))();
                uint64_t v253 = *(void *)(v252 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v253, 0);
                *(void *)(v252 + 16) = v181;
                MEMORY[0x22A68E750](v181, v252);
                uint64_t v440 = v252;
                swift_release();
                goto LABEL_176;
              }
              uint64_t v182 = makeEntity(for:)(v181);
            }
            uint64_t v440 = v182;
LABEL_176:
            uint64_t v94 = v180;
            goto LABEL_177;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v477 = 0;
        uint64_t v93 = 0;
        uint64_t v94 = 0;
        uint64_t v95 = 0;
        uint64_t v97 = 0;
        uint64_t v96 = 0;
        uint64_t v98 = 0;
        goto LABEL_105;
      }
LABEL_225:
      __break(1u);
      goto LABEL_226;
    case 8:
      long long v528 = a5;
      uint64_t v34 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      uint64_t v484 = *(void *)(a2 + 32);
      uint64_t v491 = *(void *)(a2 + 40);
      uint64_t v36 = *(void *)(a2 + 56);
      float v37 = *(float *)(a2 + 64);
      float v38 = *(float *)(a2 + 68);
      char v439 = *(unsigned char *)(a2 + 72);
      unint64_t v448 = *(void *)(a2 + 80);
      unint64_t v454 = *(void *)(a2 + 88);
      uint64_t v459 = *(void *)(a2 + 48);
      uint64_t v501 = a8;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_49;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v99 = specialized static Entity.entityInfoType(_:)(v34);
        if (v99)
        {
          uint64_t v100 = (*(uint64_t (**)(void))(v99 + 232))();
          uint64_t v101 = *(void *)(v100 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v101, 0);
          *(void *)(v100 + 16) = v34;
          MEMORY[0x22A68E750](v34, v100);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v34);
        }
LABEL_49:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v472 = swift_allocObject();
        swift_weakInit();
        *(void *)(v472 + 16) = v35;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v102 = String.init(cString:)();
        uint64_t v104 = v103;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v105 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v106 = specialized __RawDictionaryStorage.find<A>(_:)(v102, v104);
          if (v107)
          {
            unint64_t v108 = (uint64_t *)(*(void *)(v105 + 56) + 56 * v106);
            uint64_t v109 = v108[1];
            uint64_t v478 = *v108;
            uint64_t v110 = v108[2];
            uint64_t v111 = v108[3];
            uint64_t v113 = v108[4];
            uint64_t v112 = v108[5];
            uint64_t v114 = v108[6];
            swift_bridgeObjectRelease();
LABEL_113:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v625 = v484;
            BYTE8(v625) = 0;
            *(void *)&long long v626 = v491;
            *((void *)&v626 + 1) = v478;
            *(void *)&long long v627 = v109;
            *((void *)&v627 + 1) = v110;
            *(void *)&long long v628 = v111;
            *((void *)&v628 + 1) = v113;
            *(void *)&long long v629 = v112;
            *((void *)&v629 + 1) = v114;
            uint64_t v416 = v111;
            uint64_t v424 = v109;
            uint64_t v400 = v112;
            uint64_t v409 = v113;
            uint64_t v393 = v114;
            if (!v36 || !REBindPointBoundComponent())
            {
              uint64_t v432 = 0;
LABEL_184:
              specialized ActionEventData.action<A>()(a7, v501, (uint64_t)&v611);
              uint64_t v269 = v623;
              if (v623 == 1) {
                goto LABEL_198;
              }
              uint64_t v338 = v110;
              uint64_t v270 = v624;
              uint64_t v271 = v622;
              uint64_t v272 = v621;
              uint64_t v374 = v621;
              uint64_t v381 = v622;
              uint64_t v273 = v620;
              uint64_t v389 = v623;
              unint64_t v274 = v619;
              uint64_t v275 = v618;
              uint64_t v276 = v617;
              uint64_t v277 = v615;
              uint64_t v344 = v616;
              uint64_t v352 = v614;
              uint64_t v508 = v624;
              unint64_t v519 = HIDWORD(v619);
              uint64_t v359 = v612;
              uint64_t v367 = v613;
              uint64_t v278 = v611;
              uint64_t v327 = v620;
              uint64_t v331 = v611;
              swift_retain();
              a9(v278, v359, v367, v352, v277, v344, v276, v275, v274, v273, v272, v271, v269, v270);
              char v279 = specialized ActionEventData.parameter<A>(type:)(a10);
              long long v567 = v628;
              long long v568 = v629;
              long long v566 = v627;
              long long v565 = v626;
              char v536 = v359 & 1;
              uint64_t v537 = v367;
              char v538 = v352 & 1;
              uint64_t v539 = v277;
              char v540 = v344 & 1;
              uint64_t v541 = v276;
              uint64_t v542 = v275;
              int v543 = v274;
              char v544 = v519;
              uint64_t v545 = v327;
              uint64_t v546 = v374;
              __int16 v547 = v381 & 0x1FF;
              char v548 = BYTE2(v381) & 1;
              uint64_t v549 = v389;
              uint64_t v550 = v508;
              char v315 = v279 & 1;
              char v551 = v279 & 1;
              uint64_t v535 = v331;
              v534[0] = v472;
              uint64_t v552 = v432;
              char v553 = v439;
              double v554 = v37;
              double v555 = v38;
              double v558 = 0.0;
              uint64_t v556 = Strong;
              uint64_t v557 = 0;
              char v559 = 1;
              unint64_t v560 = v448;
              char v561 = 0;
              unint64_t v562 = v454;
              char v563 = 0;
              long long v564 = v625;
              uint64_t v569 = v459;
              swift_retain();
              swift_retain();
              v528(v534);
              a11(v331, v359, v367, v352, v277, v344, v276, v275, v274, v327, v374, v381, v389, v508);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v570 = v472;
              uint64_t v571 = v331;
              char v572 = v359 & 1;
              uint64_t v573 = v367;
              char v574 = v352 & 1;
              uint64_t v575 = v277;
              char v576 = v344 & 1;
              uint64_t v577 = v276;
              uint64_t v578 = v275;
              int v579 = v274;
              char v580 = v519;
              uint64_t v581 = v327;
              uint64_t v582 = v374;
              __int16 v583 = v381 & 0x1FF;
              char v584 = BYTE2(v381) & 1;
              uint64_t v585 = v389;
              uint64_t v586 = v508;
              char v587 = v315;
              uint64_t v588 = v432;
              char v589 = v439;
              double v590 = v37;
              double v591 = v38;
              double v594 = 0.0;
              uint64_t v592 = Strong;
              uint64_t v593 = 0;
              char v595 = 1;
              unint64_t v596 = v448;
              char v597 = 0;
              unint64_t v598 = v454;
              char v599 = 0;
              uint64_t v600 = v484;
              char v601 = 0;
              uint64_t v602 = v491;
              uint64_t v603 = v478;
              uint64_t v604 = v424;
              uint64_t v605 = v338;
              uint64_t v606 = v416;
              uint64_t v607 = v409;
              uint64_t v608 = v400;
              uint64_t v229 = v393;
LABEL_186:
              uint64_t v609 = v229;
              uint64_t v204 = v459;
              goto LABEL_202;
            }
            uint64_t v183 = v110;
            uint64_t v184 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v185 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_235:
                __break(1u);
                goto LABEL_236;
              }
              uint64_t v266 = specialized static Entity.entityInfoType(_:)(v184);
              if (v266)
              {
                uint64_t v267 = (*(uint64_t (**)(void))(v266 + 232))();
                uint64_t v268 = *(void *)(v267 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v268, 0);
                *(void *)(v267 + 16) = v184;
                MEMORY[0x22A68E750](v184, v267);
                uint64_t v432 = v267;
                swift_release();
                goto LABEL_183;
              }
              uint64_t v185 = makeEntity(for:)(v184);
            }
            uint64_t v432 = v185;
LABEL_183:
            uint64_t v110 = v183;
            goto LABEL_184;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v478 = 0;
        uint64_t v109 = 0;
        uint64_t v110 = 0;
        uint64_t v111 = 0;
        uint64_t v113 = 0;
        uint64_t v112 = 0;
        uint64_t v114 = 0;
        goto LABEL_113;
      }
LABEL_226:
      __break(1u);
      goto LABEL_227;
    case 16:
      uint64_t v39 = *(void *)a2;
      uint64_t v40 = *(void *)(a2 + 8);
      uint64_t v497 = *(void *)(a2 + 40);
      uint64_t v41 = *(void *)(a2 + 56);
      unint64_t v466 = *(void *)(a2 + 32);
      uint64_t v475 = *(void *)(a2 + 48);
      uint64_t v512 = a7;
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_57;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v115 = specialized static Entity.entityInfoType(_:)(v39);
        if (v115)
        {
          uint64_t v116 = (*(uint64_t (**)(void))(v115 + 232))();
          uint64_t v117 = *(void *)(v116 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v117, 0);
          *(void *)(v116 + 16) = v39;
          MEMORY[0x22A68E750](v39, v116);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v39);
        }
LABEL_57:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v118 = swift_allocObject();
        swift_weakInit();
        uint64_t v461 = v118;
        *(void *)(v118 + 16) = v40;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v119 = String.init(cString:)();
        uint64_t v121 = v120;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v122 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v123 = specialized __RawDictionaryStorage.find<A>(_:)(v119, v121);
          if (v124)
          {
            char v125 = (uint64_t *)(*(void *)(v122 + 56) + 56 * v123);
            uint64_t v126 = v125[2];
            uint64_t v485 = v125[1];
            uint64_t v493 = *v125;
            uint64_t v127 = v125[3];
            uint64_t v128 = v125[4];
            uint64_t v130 = v125[5];
            uint64_t v129 = v125[6];
            swift_bridgeObjectRelease();
            goto LABEL_121;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v485 = 0;
        uint64_t v493 = 0;
        uint64_t v126 = 0;
        uint64_t v127 = 0;
        uint64_t v128 = 0;
        uint64_t v130 = 0;
        uint64_t v129 = 0;
LABEL_121:
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)&long long v625 = 0;
        BYTE8(v625) = 0;
        *(void *)&long long v626 = v497;
        *((void *)&v626 + 1) = v493;
        *(void *)&long long v627 = v485;
        *((void *)&v627 + 1) = v126;
        *(void *)&long long v628 = v127;
        *((void *)&v628 + 1) = v128;
        uint64_t v449 = v130;
        uint64_t v455 = v126;
        *(void *)&long long v629 = v130;
        *((void *)&v629 + 1) = v129;
        if (v41)
        {
          uint64_t v186 = v512;
          if (REBindPointBoundComponent())
          {
            uint64_t v187 = v127;
            uint64_t v188 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v189 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_236:
                __break(1u);
                goto LABEL_237;
              }
              uint64_t v280 = specialized static Entity.entityInfoType(_:)(v188);
              if (v280)
              {
                uint64_t v190 = (*(uint64_t (**)(void))(v280 + 232))();
                uint64_t v281 = *(void *)(v190 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v281, 0);
                *(void *)(v190 + 16) = v188;
                MEMORY[0x22A68E750](v188, v190);
                swift_release();
                goto LABEL_190;
              }
              uint64_t v189 = makeEntity(for:)(v188);
            }
            uint64_t v190 = v189;
LABEL_190:
            uint64_t v127 = v187;
            goto LABEL_191;
          }
          uint64_t v190 = 0;
        }
        else
        {
          uint64_t v190 = 0;
          uint64_t v186 = v512;
        }
LABEL_191:
        specialized ActionEventData.action<A>()(v186, a8, (uint64_t)&v611);
        if (v623 == 1) {
          goto LABEL_198;
        }
        long long v566 = v627;
        long long v567 = v628;
        long long v568 = v629;
        long long v565 = v626;
        uint64_t v282 = v624;
        uint64_t v427 = v127;
        uint64_t v435 = v621;
        unint64_t v283 = v619;
        uint64_t v345 = v618;
        uint64_t v353 = v617;
        v530 = a5;
        uint64_t v284 = v616;
        uint64_t v419 = v128;
        uint64_t v360 = v615;
        uint64_t v285 = v190;
        uint64_t v443 = v190;
        uint64_t v286 = v614;
        uint64_t v332 = v613;
        uint64_t v509 = v612;
        uint64_t v287 = v611;
        unint64_t v390 = HIDWORD(v619);
        char v368 = v612 & 1;
        char v536 = v612 & 1;
        uint64_t v537 = v613;
        uint64_t v305 = v616;
        uint64_t v309 = v614;
        char v375 = v614 & 1;
        char v538 = v614 & 1;
        uint64_t v539 = v615;
        char v382 = v616 & 1;
        char v540 = v616 & 1;
        uint64_t v541 = v617;
        uint64_t v542 = v618;
        int v543 = v619;
        char v544 = BYTE4(v619);
        uint64_t v545 = v620;
        uint64_t v546 = v621;
        uint64_t v288 = v620;
        __int16 v547 = v622 & 0x1FF;
        unsigned int v404 = (v622 >> 8) & 1;
        uint64_t v289 = v622;
        uint64_t v316 = v611;
        uint64_t v321 = v622;
        unsigned int v397 = WORD1(v622) & 1;
        char v548 = BYTE2(v622) & 1;
        uint64_t v549 = v623;
        uint64_t v550 = v624;
        char v551 = 1;
        uint64_t v535 = v611;
        v534[0] = v461;
        uint64_t v552 = v285;
        char v553 = 0;
        double v555 = 0.0;
        double v554 = 0.0;
        double v558 = 0.0;
        uint64_t v556 = Strong;
        uint64_t v557 = 0;
        char v559 = 1;
        unint64_t v560 = v466;
        char v561 = 0;
        unint64_t v562 = 0;
        char v563 = 1;
        long long v564 = v625;
        uint64_t v569 = v475;
        uint64_t v290 = v623;
        uint64_t v520 = v623;
        swift_retain();
        swift_retain();
        a9(v287, v509, v332, v286, v360, v284, v353, v345, v283, v288, v435, v289, v290, v282);
        swift_retain();
        v530(v534);
        a11(v316, v509, v332, v309, v360, v305, v353, v345, v283, v288, v435, v321, v520, v282);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v570 = v461;
        uint64_t v571 = v316;
        char v572 = v368;
        uint64_t v573 = v332;
        char v574 = v375;
        uint64_t v575 = v360;
        char v576 = v382;
        uint64_t v577 = v353;
        uint64_t v578 = v345;
        int v579 = v283;
        char v580 = v390;
        uint64_t v581 = v288;
        uint64_t v582 = v435;
        LOBYTE(v583) = v321;
        HIBYTE(v583) = v404;
        char v584 = v397;
        uint64_t v585 = v520;
        uint64_t v586 = v282;
        char v587 = 1;
        uint64_t v588 = v443;
        char v589 = 0;
        double v591 = 0.0;
        double v590 = 0.0;
        double v594 = 0.0;
        uint64_t v592 = Strong;
        uint64_t v593 = 0;
        char v595 = 1;
        unint64_t v596 = v466;
        char v597 = 0;
        unint64_t v598 = 0;
        char v599 = 1;
        uint64_t v600 = 0;
        char v601 = 0;
        uint64_t v602 = v497;
        uint64_t v603 = v493;
        uint64_t v604 = v485;
        uint64_t v605 = v455;
        uint64_t v606 = v427;
        uint64_t v607 = v419;
        uint64_t v608 = v449;
        uint64_t v291 = v129;
LABEL_201:
        uint64_t v609 = v291;
        uint64_t v204 = v475;
        goto LABEL_202;
      }
LABEL_227:
      __break(1u);
      goto LABEL_228;
    case 32:
      uint64_t v42 = *(void *)a2;
      uint64_t v43 = *(void *)(a2 + 8);
      uint64_t v498 = *(void *)(a2 + 40);
      uint64_t v44 = *(void *)(a2 + 56);
      unint64_t v467 = *(void *)(a2 + 32);
      uint64_t v475 = *(void *)(a2 + 48);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_65;
      }
      if ((REEntityIsBeingDestroyed() & 1) == 0)
      {
        uint64_t v131 = specialized static Entity.entityInfoType(_:)(v42);
        if (v131)
        {
          uint64_t v132 = (*(uint64_t (**)(void))(v131 + 232))();
          uint64_t v133 = *(void *)(v132 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v133, 0);
          *(void *)(v132 + 16) = v42;
          MEMORY[0x22A68E750](v42, v132);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v42);
        }
LABEL_65:
        type metadata accessor for AnimationPlaybackController();
        uint64_t v134 = swift_allocObject();
        swift_weakInit();
        uint64_t v462 = v134;
        *(void *)(v134 + 16) = v43;
        swift_beginAccess();
        swift_weakAssign();
        uint64_t v135 = String.init(cString:)();
        uint64_t v137 = v136;
        if (one-time initialization token for codableActionTypeMap != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v138 = static AnimationResource.codableActionTypeMap;
        if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v139 = specialized __RawDictionaryStorage.find<A>(_:)(v135, v137);
          if (v140)
          {
            unint64_t v141 = (uint64_t *)(*(void *)(v138 + 56) + 56 * v139);
            uint64_t v142 = v141[2];
            uint64_t v486 = v141[1];
            uint64_t v494 = *v141;
            uint64_t v143 = v141[3];
            uint64_t v144 = v141[4];
            uint64_t v146 = v141[5];
            uint64_t v145 = v141[6];
            swift_bridgeObjectRelease();
LABEL_129:
            swift_endAccess();
            swift_bridgeObjectRelease();
            *(void *)&long long v625 = 0;
            BYTE8(v625) = 0;
            *(void *)&long long v626 = v498;
            *((void *)&v626 + 1) = v494;
            *(void *)&long long v627 = v486;
            *((void *)&v627 + 1) = v142;
            *(void *)&long long v628 = v143;
            *((void *)&v628 + 1) = v144;
            *(void *)&long long v629 = v146;
            *((void *)&v629 + 1) = v145;
            uint64_t v450 = v145;
            uint64_t v456 = v142;
            if (!v44 || !REBindPointBoundComponent())
            {
              uint64_t v194 = 0;
LABEL_197:
              specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v611);
              if (v623 == 1) {
                goto LABEL_198;
              }
              long long v566 = v627;
              long long v567 = v628;
              long long v568 = v629;
              long long v565 = v626;
              uint64_t v294 = v624;
              uint64_t v322 = v620;
              uint64_t v428 = v144;
              uint64_t v436 = v143;
              unint64_t v346 = v619;
              uint64_t v354 = v618;
              v531 = a5;
              uint64_t v361 = v617;
              uint64_t v369 = v615;
              uint64_t v420 = v146;
              uint64_t v295 = v614;
              uint64_t v333 = v613;
              uint64_t v510 = v612;
              uint64_t v296 = v611;
              unint64_t v398 = HIDWORD(v619);
              char v376 = v612 & 1;
              char v536 = v612 & 1;
              uint64_t v537 = v613;
              uint64_t v310 = v614;
              char v383 = v614 & 1;
              char v538 = v614 & 1;
              uint64_t v539 = v615;
              uint64_t v297 = v616;
              uint64_t v303 = v616;
              uint64_t v306 = v622;
              char v391 = v616 & 1;
              char v540 = v616 & 1;
              uint64_t v541 = v617;
              uint64_t v542 = v618;
              int v543 = v619;
              char v544 = BYTE4(v619);
              uint64_t v545 = v620;
              uint64_t v546 = v621;
              uint64_t v298 = v621;
              uint64_t v444 = v621;
              __int16 v547 = v622 & 0x1FF;
              unsigned int v412 = (v622 >> 8) & 1;
              uint64_t v299 = v622;
              unsigned int v405 = WORD1(v622) & 1;
              char v548 = BYTE2(v622) & 1;
              uint64_t v549 = v623;
              uint64_t v550 = v624;
              char v551 = 1;
              uint64_t v535 = v611;
              uint64_t v317 = v611;
              v534[0] = v462;
              uint64_t v552 = v194;
              char v553 = 0;
              double v555 = 0.0;
              double v554 = 0.0;
              double v558 = 0.0;
              uint64_t v556 = Strong;
              uint64_t v557 = 0;
              char v559 = 1;
              unint64_t v560 = v467;
              char v561 = 0;
              unint64_t v562 = 0;
              char v563 = 1;
              long long v564 = v625;
              uint64_t v569 = v475;
              uint64_t v300 = v623;
              uint64_t v521 = v623;
              swift_retain();
              swift_retain();
              a9(v296, v510, v333, v295, v369, v297, v361, v354, v346, v322, v298, v299, v300, v294);
              swift_retain();
              v531(v534);
              a11(v317, v510, v333, v310, v369, v303, v361, v354, v346, v322, v444, v306, v521, v294);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v570 = v462;
              uint64_t v571 = v317;
              char v572 = v376;
              uint64_t v573 = v333;
              char v574 = v383;
              uint64_t v575 = v369;
              char v576 = v391;
              uint64_t v577 = v361;
              uint64_t v578 = v354;
              int v579 = v346;
              char v580 = v398;
              uint64_t v581 = v322;
              uint64_t v582 = v444;
              LOBYTE(v583) = v306;
              HIBYTE(v583) = v412;
              char v584 = v405;
              uint64_t v585 = v521;
              uint64_t v586 = v294;
              char v587 = 1;
              uint64_t v588 = v194;
              char v589 = 0;
              double v591 = 0.0;
              double v590 = 0.0;
              double v594 = 0.0;
              uint64_t v592 = Strong;
              uint64_t v593 = 0;
              char v595 = 1;
              unint64_t v596 = v467;
              char v597 = 0;
              unint64_t v598 = 0;
              char v599 = 1;
              uint64_t v600 = 0;
              char v601 = 0;
              uint64_t v602 = v498;
              uint64_t v603 = v494;
              uint64_t v604 = v486;
              uint64_t v605 = v456;
              uint64_t v606 = v436;
              uint64_t v607 = v428;
              uint64_t v608 = v420;
              uint64_t v291 = v450;
              goto LABEL_201;
            }
            uint64_t v191 = v143;
            uint64_t v192 = REComponentGetEntity();
            if ((id)REEntityGetSwiftObject())
            {
              type metadata accessor for Entity();
              uint64_t v193 = swift_dynamicCastClassUnconditional();
            }
            else
            {
              if (REEntityIsBeingDestroyed())
              {
LABEL_237:
                __break(1u);
                goto LABEL_238;
              }
              uint64_t v292 = specialized static Entity.entityInfoType(_:)(v192);
              if (v292)
              {
                uint64_t v194 = (*(uint64_t (**)(void))(v292 + 232))();
                uint64_t v293 = *(void *)(v194 + 16);
                swift_retain();
                MEMORY[0x22A68E750](v293, 0);
                *(void *)(v194 + 16) = v192;
                MEMORY[0x22A68E750](v192, v194);
                swift_release();
                goto LABEL_196;
              }
              uint64_t v193 = makeEntity(for:)(v192);
            }
            uint64_t v194 = v193;
LABEL_196:
            uint64_t v143 = v191;
            goto LABEL_197;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v486 = 0;
        uint64_t v494 = 0;
        uint64_t v142 = 0;
        uint64_t v143 = 0;
        uint64_t v144 = 0;
        uint64_t v146 = 0;
        uint64_t v145 = 0;
        goto LABEL_129;
      }
LABEL_228:
      __break(1u);
      goto LABEL_229;
    case 64:
      v529 = a5;
      uint64_t v45 = *(void *)a2;
      uint64_t v46 = *(void *)(a2 + 8);
      uint64_t v47 = *(void *)(a2 + 24);
      uint64_t v48 = *(void *)(a2 + 40);
      uint64_t v468 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
        goto LABEL_73;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_229:
        __break(1u);
        goto LABEL_230;
      }
      uint64_t v147 = specialized static Entity.entityInfoType(_:)(v45);
      if (v147)
      {
        uint64_t v148 = (*(uint64_t (**)(void))(v147 + 232))();
        uint64_t v149 = *(void *)(v148 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v149, 0);
        *(void *)(v148 + 16) = v45;
        MEMORY[0x22A68E750](v45, v148);
        swift_release();
      }
      else
      {
        makeEntity(for:)(v45);
      }
LABEL_73:
      type metadata accessor for AnimationPlaybackController();
      uint64_t v150 = swift_allocObject();
      swift_weakInit();
      uint64_t v463 = v150;
      *(void *)(v150 + 16) = v46;
      swift_beginAccess();
      swift_weakAssign();
      if (!v48 || !REBindPointBoundComponent())
      {
        uint64_t v153 = 0;
        goto LABEL_79;
      }
      uint64_t v151 = REComponentGetEntity();
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        uint64_t v152 = swift_dynamicCastClassUnconditional();
LABEL_77:
        uint64_t v153 = v152;
        goto LABEL_79;
      }
      if (REEntityIsBeingDestroyed())
      {
LABEL_231:
        __break(1u);
LABEL_232:
        __break(1u);
        goto LABEL_233;
      }
      uint64_t v230 = specialized static Entity.entityInfoType(_:)(v151);
      if (!v230)
      {
        uint64_t v152 = makeEntity(for:)(v151);
        goto LABEL_77;
      }
      uint64_t v153 = (*(uint64_t (**)(void))(v230 + 232))();
      uint64_t v231 = *(void *)(v153 + 16);
      swift_retain();
      MEMORY[0x22A68E750](v231, 0);
      *(void *)(v153 + 16) = v151;
      MEMORY[0x22A68E750](v151, v153);
      swift_release();
LABEL_79:
      uint64_t v154 = String.init(cString:)();
      uint64_t v156 = v155;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v157 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v158 = specialized __RawDictionaryStorage.find<A>(_:)(v154, v156);
        if (v159)
        {
          uint64_t v160 = (uint64_t *)(*(void *)(v157 + 56) + 56 * v158);
          uint64_t v162 = *v160;
          uint64_t v161 = v160[1];
          uint64_t v523 = v160[2];
          uint64_t v495 = v160[4];
          uint64_t v499 = v160[3];
          uint64_t v479 = v160[6];
          uint64_t v487 = v160[5];
          swift_bridgeObjectRelease();
          goto LABEL_137;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v162 = 0;
      uint64_t v161 = 0;
      uint64_t v523 = 0;
      uint64_t v495 = 0;
      uint64_t v499 = 0;
      uint64_t v479 = 0;
      uint64_t v487 = 0;
LABEL_137:
      swift_endAccess();
      swift_bridgeObjectRelease();
      *(void *)&long long v625 = 0;
      BYTE8(v625) = 0;
      *(void *)&long long v626 = v47;
      *((void *)&v626 + 1) = v162;
      *(void *)&long long v627 = v161;
      *((void *)&v627 + 1) = v523;
      *(void *)&long long v628 = v499;
      *((void *)&v628 + 1) = v495;
      *(void *)&long long v629 = v487;
      *((void *)&v629 + 1) = v479;
      specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v611);
      if (v623 == 1) {
        goto LABEL_198;
      }
      long long v566 = v627;
      long long v567 = v628;
      long long v568 = v629;
      long long v565 = v626;
      uint64_t v504 = v621;
      uint64_t v433 = v162;
      uint64_t v441 = v620;
      unint64_t v195 = v619;
      uint64_t v425 = v47;
      uint64_t v356 = v617;
      uint64_t v363 = v618;
      uint64_t v196 = v616;
      uint64_t v197 = v153;
      uint64_t v451 = v153;
      uint64_t v340 = v615;
      uint64_t v348 = v614;
      uint64_t v198 = v613;
      uint64_t v199 = v612;
      uint64_t v200 = v611;
      unint64_t v401 = HIDWORD(v619);
      uint64_t v304 = v613;
      uint64_t v307 = v612;
      char v378 = v612 & 1;
      char v536 = v612 & 1;
      uint64_t v537 = v613;
      char v385 = v614 & 1;
      char v538 = v614 & 1;
      uint64_t v539 = v615;
      uint64_t v312 = v622;
      uint64_t v319 = v616;
      char v394 = v616 & 1;
      char v540 = v616 & 1;
      uint64_t v541 = v617;
      uint64_t v542 = v618;
      int v543 = v619;
      char v544 = BYTE4(v619);
      uint64_t v545 = v620;
      uint64_t v546 = v621;
      __int16 v547 = v622 & 0x1FF;
      unsigned int v417 = (v622 >> 8) & 1;
      uint64_t v201 = v622;
      unsigned int v410 = WORD1(v622) & 1;
      char v548 = BYTE2(v622) & 1;
      uint64_t v549 = v623;
      uint64_t v550 = v624;
      uint64_t v202 = v624;
      char v551 = 1;
      uint64_t v535 = v611;
      uint64_t v324 = v611;
      v534[0] = v463;
      uint64_t v552 = v197;
      char v553 = 0;
      double v555 = 0.0;
      double v554 = 0.0;
      double v558 = 0.0;
      uint64_t v556 = Strong;
      uint64_t v557 = 0;
      char v559 = 1;
      unint64_t v560 = 0;
      char v561 = 1;
      unint64_t v562 = 0;
      char v563 = 1;
      long long v564 = v625;
      uint64_t v569 = v468;
      uint64_t v203 = v623;
      uint64_t v515 = v623;
      swift_retain();
      swift_retain();
      a9(v200, v199, v198, v348, v340, v196, v356, v363, v195, v441, v504, v201, v203, v202);
      swift_retain();
      v529(v534);
      a11(v324, v307, v304, v348, v340, v319, v356, v363, v195, v441, v504, v312, v515, v202);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v570 = v463;
      uint64_t v571 = v324;
      char v572 = v378;
      uint64_t v573 = v304;
      char v574 = v385;
      uint64_t v575 = v340;
      char v576 = v394;
      uint64_t v577 = v356;
      uint64_t v578 = v363;
      int v579 = v195;
      char v580 = v401;
      uint64_t v581 = v441;
      uint64_t v582 = v504;
      LOBYTE(v583) = v312;
      HIBYTE(v583) = v417;
      char v584 = v410;
      uint64_t v585 = v515;
      uint64_t v586 = v202;
      char v587 = 1;
      uint64_t v588 = v451;
      char v589 = 0;
      double v591 = 0.0;
      double v590 = 0.0;
      double v594 = 0.0;
      uint64_t v592 = Strong;
      uint64_t v593 = 0;
      char v595 = 1;
      unint64_t v596 = 0;
      char v597 = 1;
      unint64_t v598 = 0;
      char v599 = 1;
      uint64_t v600 = 0;
      char v601 = 0;
      uint64_t v602 = v425;
      uint64_t v603 = v433;
      uint64_t v604 = v161;
      uint64_t v605 = v523;
      uint64_t v606 = v499;
      uint64_t v607 = v495;
      uint64_t v608 = v487;
      uint64_t v609 = v479;
      uint64_t v204 = v468;
LABEL_202:
      uint64_t v610 = v204;
      outlined release of ActionEvent<FromToByAction<SIMD2<Float>>>((uint64_t)&v570);
      return 0;
    default:
      if (a4 != 128) {
        goto LABEL_199;
      }
      long long v525 = a5;
      uint64_t v21 = *(void *)a2;
      uint64_t v22 = *(void *)(a2 + 8);
      uint64_t v522 = *(void *)(a2 + 24);
      uint64_t v23 = *(void *)(a2 + 40);
      uint64_t v459 = *(void *)(a2 + 32);
      if ((id)REEntityGetSwiftObject())
      {
        type metadata accessor for Entity();
        swift_dynamicCastClassUnconditional();
      }
      else
      {
        if (REEntityIsBeingDestroyed())
        {
LABEL_230:
          __break(1u);
          goto LABEL_231;
        }
        uint64_t v205 = specialized static Entity.entityInfoType(_:)(v21);
        if (v205)
        {
          uint64_t v206 = (*(uint64_t (**)(void))(v205 + 232))();
          uint64_t v207 = *(void *)(v206 + 16);
          swift_retain();
          MEMORY[0x22A68E750](v207, 0);
          *(void *)(v206 + 16) = v21;
          MEMORY[0x22A68E750](v21, v206);
          swift_release();
        }
        else
        {
          makeEntity(for:)(v21);
        }
      }
      type metadata accessor for AnimationPlaybackController();
      uint64_t v208 = swift_allocObject();
      swift_weakInit();
      uint64_t v457 = v208;
      *(void *)(v208 + 16) = v22;
      swift_beginAccess();
      swift_weakAssign();
      if (v23 && REBindPointBoundComponent())
      {
        uint64_t v209 = REComponentGetEntity();
        if ((id)REEntityGetSwiftObject())
        {
          type metadata accessor for Entity();
          uint64_t v210 = swift_dynamicCastClassUnconditional();
LABEL_146:
          uint64_t v211 = v210;
          goto LABEL_148;
        }
        if (REEntityIsBeingDestroyed())
        {
LABEL_238:
          __break(1u);
          JUMPOUT(0x227FAFE54);
        }
        uint64_t v301 = specialized static Entity.entityInfoType(_:)(v209);
        if (!v301)
        {
          uint64_t v210 = makeEntity(for:)(v209);
          goto LABEL_146;
        }
        uint64_t v211 = (*(uint64_t (**)(void))(v301 + 232))();
        uint64_t v302 = *(void *)(v211 + 16);
        swift_retain();
        MEMORY[0x22A68E750](v302, 0);
        *(void *)(v211 + 16) = v209;
        MEMORY[0x22A68E750](v209, v211);
        swift_release();
      }
      else
      {
        uint64_t v211 = 0;
      }
LABEL_148:
      uint64_t v212 = String.init(cString:)();
      uint64_t v214 = v213;
      if (one-time initialization token for codableActionTypeMap != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v215 = static AnimationResource.codableActionTypeMap;
      if (*(void *)(static AnimationResource.codableActionTypeMap + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v216 = specialized __RawDictionaryStorage.find<A>(_:)(v212, v214);
        if (v217)
        {
          uint64_t v218 = (uint64_t *)(*(void *)(v215 + 56) + 56 * v216);
          uint64_t v220 = *v218;
          uint64_t v219 = v218[1];
          uint64_t v496 = v218[3];
          uint64_t v500 = v218[2];
          uint64_t v480 = v218[5];
          uint64_t v488 = v218[4];
          uint64_t v473 = v218[6];
          swift_bridgeObjectRelease();
LABEL_156:
          swift_endAccess();
          swift_bridgeObjectRelease();
          *(void *)&long long v625 = 0;
          BYTE8(v625) = 0;
          *(void *)&long long v626 = v522;
          *((void *)&v626 + 1) = v220;
          *(void *)&long long v627 = v219;
          *((void *)&v627 + 1) = v500;
          *(void *)&long long v628 = v496;
          *((void *)&v628 + 1) = v488;
          *(void *)&long long v629 = v480;
          *((void *)&v629 + 1) = v473;
          specialized ActionEventData.action<A>()(a7, a8, (uint64_t)&v611);
          if (v623 == 1) {
            goto LABEL_198;
          }
          long long v566 = v627;
          long long v567 = v628;
          long long v568 = v629;
          long long v565 = v626;
          uint64_t v221 = v624;
          uint64_t v222 = v622;
          uint64_t v411 = v220;
          uint64_t v418 = v621;
          unint64_t v223 = v619;
          uint64_t v335 = v618;
          uint64_t v341 = v617;
          uint64_t v224 = v616;
          uint64_t v225 = v211;
          uint64_t v426 = v211;
          uint64_t v516 = v614;
          uint64_t v434 = v613;
          uint64_t v442 = v615;
          uint64_t v349 = v612;
          uint64_t v226 = v611;
          unint64_t v386 = HIDWORD(v619);
          char v364 = v612 & 1;
          char v536 = v612 & 1;
          uint64_t v537 = v613;
          char v371 = v614 & 1;
          char v538 = v614 & 1;
          uint64_t v539 = v615;
          unint64_t v313 = v619;
          uint64_t v320 = v616;
          char v379 = v616 & 1;
          char v540 = v616 & 1;
          uint64_t v541 = v617;
          uint64_t v542 = v618;
          int v543 = v619;
          char v544 = BYTE4(v619);
          uint64_t v545 = v620;
          uint64_t v546 = v621;
          uint64_t v227 = v620;
          __int16 v547 = v622 & 0x1FF;
          unsigned int v402 = (v622 >> 8) & 1;
          unsigned int v395 = WORD1(v622) & 1;
          char v548 = BYTE2(v622) & 1;
          uint64_t v549 = v623;
          uint64_t v550 = v624;
          char v551 = 1;
          uint64_t v535 = v611;
          uint64_t v325 = v611;
          v534[0] = v457;
          uint64_t v552 = v225;
          char v553 = 0;
          double v555 = 0.0;
          double v554 = 0.0;
          double v558 = 0.0;
          uint64_t v556 = Strong;
          uint64_t v557 = 0;
          char v559 = 1;
          unint64_t v560 = 0;
          char v561 = 1;
          unint64_t v562 = 0;
          char v563 = 1;
          long long v564 = v625;
          uint64_t v569 = v459;
          uint64_t v228 = v623;
          uint64_t v505 = v623;
          swift_retain();
          swift_retain();
          a9(v226, v349, v434, v516, v442, v224, v341, v335, v223, v227, v418, v222, v228, v221);
          swift_retain();
          v525(v534);
          swift_release();
          a11(v325, v349, v434, v516, v442, v320, v341, v335, v313, v227, v418, v222, v505, v221);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v570 = v457;
          uint64_t v571 = v325;
          char v572 = v364;
          uint64_t v573 = v434;
          char v574 = v371;
          uint64_t v575 = v442;
          char v576 = v379;
          uint64_t v577 = v341;
          uint64_t v578 = v335;
          int v579 = v313;
          char v580 = v386;
          uint64_t v581 = v227;
          uint64_t v582 = v418;
          LOBYTE(v583) = v222;
          HIBYTE(v583) = v402;
          char v584 = v395;
          uint64_t v585 = v505;
          uint64_t v586 = v221;
          char v587 = 1;
          uint64_t v588 = v426;
          char v589 = 0;
          double v591 = 0.0;
          double v590 = 0.0;
          double v594 = 0.0;
          uint64_t v592 = Strong;
          uint64_t v593 = 0;
          char v595 = 1;
          unint64_t v596 = 0;
          char v597 = 1;
          unint64_t v598 = 0;
          char v599 = 1;
          uint64_t v600 = 0;
          char v601 = 0;
          uint64_t v602 = v522;
          uint64_t v603 = v411;
          uint64_t v604 = v219;
          uint64_t v605 = v500;
          uint64_t v606 = v496;
          uint64_t v607 = v488;
          uint64_t v608 = v480;
          uint64_t v229 = v473;
          goto LABEL_186;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v220 = 0;
      uint64_t v219 = 0;
      uint64_t v496 = 0;
      uint64_t v500 = 0;
      uint64_t v480 = 0;
      uint64_t v488 = 0;
      uint64_t v473 = 0;
      goto LABEL_156;
  }
}

uint64_t specialized dispatchEvent #1 <A>(sourceObject:payloadRef:) in static ForceEffectProtocol<>.__register(engine:_:)(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  static ForceEffectParameters.__fromCore(_:)(a2, (uint64_t)v16);
  uint64_t v5 = specialized Data.init(bytes:count:)(*(unsigned char **)(a2 + 120), *(void *)(a2 + 128));
  unint64_t v7 = v6;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  outlined retain of OrbitEntityActionHandler((uint64_t)v16);
  JSONDecoder.init()();
  lazy protocol witness table accessor for type TurbulenceForceEffect and conformance TurbulenceForceEffect();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  *(_OWORD *)&v9[179] = v16[11];
  *(_OWORD *)&v9[195] = v16[12];
  *(_OWORD *)&v9[211] = v16[13];
  *(_OWORD *)&v9[115] = v16[7];
  *(_OWORD *)&v9[131] = v16[8];
  *(_OWORD *)&v9[147] = v16[9];
  *(_OWORD *)&v9[163] = v16[10];
  *(_OWORD *)&v9[51] = v16[3];
  *(_OWORD *)&v9[67] = v16[4];
  *(void *)&v9[227] = v17;
  *(_OWORD *)&v9[83] = v16[5];
  *(_OWORD *)&v9[99] = v16[6];
  *(_OWORD *)&v9[3] = v16[0];
  *(_OWORD *)&v9[19] = v16[1];
  *(_OWORD *)&v9[35] = v16[2];
  *(void *)float v15 = v12;
  *(_DWORD *)&v15[8] = v13;
  *(_OWORD *)&v15[189] = *(_OWORD *)&v9[176];
  *(_OWORD *)&v15[205] = *(_OWORD *)&v9[192];
  *(_OWORD *)&v15[221] = *(_OWORD *)&v9[208];
  *(_OWORD *)&v15[232] = *(_OWORD *)&v9[219];
  *(_OWORD *)&v15[125] = *(_OWORD *)&v9[112];
  *(_OWORD *)&v15[141] = *(_OWORD *)&v9[128];
  *(_OWORD *)&v15[157] = *(_OWORD *)&v9[144];
  *(_OWORD *)&v15[173] = *(_OWORD *)&v9[160];
  *(_OWORD *)&v15[61] = *(_OWORD *)&v9[48];
  *(_OWORD *)&v15[77] = *(_OWORD *)&v9[64];
  *(_OWORD *)&v15[93] = *(_OWORD *)&v9[80];
  *(_OWORD *)&v15[109] = *(_OWORD *)&v9[96];
  *(_OWORD *)&v15[13] = *(_OWORD *)v9;
  v15[12] = v14;
  *(_OWORD *)&v15[29] = *(_OWORD *)&v9[16];
  *(_OWORD *)&v15[45] = *(_OWORD *)&v9[32];
  a3(v15);
  outlined release of TimelineDefinition?((uint64_t)v16);
  outlined consume of Data._Representation(v5, v7);
  v10[12] = *(_OWORD *)&v15[192];
  v10[13] = *(_OWORD *)&v15[208];
  v10[14] = *(_OWORD *)&v15[224];
  uint64_t v11 = *(void *)&v15[240];
  v10[8] = *(_OWORD *)&v15[128];
  v10[9] = *(_OWORD *)&v15[144];
  v10[10] = *(_OWORD *)&v15[160];
  v10[11] = *(_OWORD *)&v15[176];
  v10[4] = *(_OWORD *)&v15[64];
  v10[5] = *(_OWORD *)&v15[80];
  v10[6] = *(_OWORD *)&v15[96];
  v10[7] = *(_OWORD *)&v15[112];
  v10[0] = *(_OWORD *)v15;
  v10[1] = *(_OWORD *)&v15[16];
  v10[2] = *(_OWORD *)&v15[32];
  v10[3] = *(_OWORD *)&v15[48];
  outlined release of ForceEffectEvent<TurbulenceForceEffect>((uint64_t)v10);
  return 0;
}

{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned char v9[239];
  _OWORD v10[15];
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned char v14[248];
  _OWORD v15[14];
  uint64_t v16;

  static ForceEffectParameters.__fromCore(_:)(a2, (uint64_t)v15);
  uint64_t v5 = specialized Data.init(bytes:count:)(*(unsigned char **)(a2 + 120), *(void *)(a2 + 128));
  unint64_t v7 = v6;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  outlined retain of OrbitEntityActionHandler((uint64_t)v15);
  JSONDecoder.init()();
  lazy protocol witness table accessor for type RadialForceEffect and conformance RadialForceEffect();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  *(_OWORD *)&v9[183] = v15[11];
  *(_OWORD *)&v9[199] = v15[12];
  *(_OWORD *)&v9[215] = v15[13];
  *(void *)&v9[231] = v16;
  *(_OWORD *)&v9[119] = v15[7];
  *(_OWORD *)&v9[135] = v15[8];
  *(_OWORD *)&v9[151] = v15[9];
  *(_OWORD *)&v9[167] = v15[10];
  *(_OWORD *)&v9[55] = v15[3];
  *(_OWORD *)&v9[71] = v15[4];
  *(_OWORD *)&v9[87] = v15[5];
  *(_OWORD *)&v9[103] = v15[6];
  *(_OWORD *)&v9[7] = v15[0];
  *(_OWORD *)&v9[23] = v15[1];
  *(_OWORD *)&v9[39] = v15[2];
  *(void *)char v14 = v12;
  *(_OWORD *)&v14[185] = *(_OWORD *)&v9[176];
  *(_OWORD *)&v14[201] = *(_OWORD *)&v9[192];
  *(_OWORD *)&v14[217] = *(_OWORD *)&v9[208];
  *(_OWORD *)&v14[232] = *(_OWORD *)&v9[223];
  *(_OWORD *)&v14[121] = *(_OWORD *)&v9[112];
  *(_OWORD *)&v14[137] = *(_OWORD *)&v9[128];
  *(_OWORD *)&v14[153] = *(_OWORD *)&v9[144];
  *(_OWORD *)&v14[169] = *(_OWORD *)&v9[160];
  *(_OWORD *)&v14[57] = *(_OWORD *)&v9[48];
  *(_OWORD *)&v14[73] = *(_OWORD *)&v9[64];
  *(_OWORD *)&v14[89] = *(_OWORD *)&v9[80];
  *(_OWORD *)&v14[105] = *(_OWORD *)&v9[96];
  *(_OWORD *)&v14[9] = *(_OWORD *)v9;
  *(_OWORD *)&v14[25] = *(_OWORD *)&v9[16];
  v14[8] = v13;
  *(_OWORD *)&v14[41] = *(_OWORD *)&v9[32];
  a3(v14);
  outlined release of TimelineDefinition?((uint64_t)v15);
  outlined consume of Data._Representation(v5, v7);
  v10[12] = *(_OWORD *)&v14[192];
  v10[13] = *(_OWORD *)&v14[208];
  v10[14] = *(_OWORD *)&v14[224];
  uint64_t v11 = *(void *)&v14[240];
  v10[8] = *(_OWORD *)&v14[128];
  v10[9] = *(_OWORD *)&v14[144];
  v10[10] = *(_OWORD *)&v14[160];
  v10[11] = *(_OWORD *)&v14[176];
  v10[4] = *(_OWORD *)&v14[64];
  v10[5] = *(_OWORD *)&v14[80];
  v10[6] = *(_OWORD *)&v14[96];
  v10[7] = *(_OWORD *)&v14[112];
  v10[0] = *(_OWORD *)v14;
  v10[1] = *(_OWORD *)&v14[16];
  v10[2] = *(_OWORD *)&v14[32];
  v10[3] = *(_OWORD *)&v14[48];
  outlined release of ForceEffectEvent<TurbulenceForceEffect>((uint64_t)v10);
  return 0;
}