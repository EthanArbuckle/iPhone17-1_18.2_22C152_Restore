void ___ZL35isProcessAllowedToFetchWebsiteNamesv_block_invoke()
{
  void *v0;
  id v1;
  uint64_t vars8;

  v1 = [MEMORY[0x263F086E0] mainBundle];
  v0 = [v1 bundleIdentifier];
  isProcessAllowedToFetchWebsiteNames(void)::isProcessAllowedToFetchWebsiteNames = [v0 isEqualToString:*MEMORY[0x263F664C8]];
}

void sub_219191B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_219191CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_219191DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_219191F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191923D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t WBS_LOG_CHANNEL_PREFIXWebsiteNameProvider()
{
  if (WBS_LOG_CHANNEL_PREFIXWebsiteNameProvider_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXWebsiteNameProvider_onceToken, &__block_literal_global_28_0);
  }
  return WBS_LOG_CHANNEL_PREFIXWebsiteNameProvider_log;
}

void sub_21919277C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219192E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219193258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getWBSPrivacyProxyChangeNotification()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2020000000;
  v0 = (void **)getWBSPrivacyProxyChangeNotificationSymbolLoc_ptr;
  uint64_t v7 = getWBSPrivacyProxyChangeNotificationSymbolLoc_ptr;
  if (!getWBSPrivacyProxyChangeNotificationSymbolLoc_ptr)
  {
    v1 = (void *)SafariSharedUILibrary();
    v5[3] = (uint64_t)dlsym(v1, "WBSPrivacyProxyChangeNotification");
    getWBSPrivacyProxyChangeNotificationSymbolLoc_ptr = v5[3];
    v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    getWBSPrivacyProxyChangeNotification_cold_1();
  }
  v2 = *v0;

  return v2;
}

void sub_219193364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219193568(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 48));
  _Unwind_Resume(a1);
}

void sub_2191937E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

id getWBUHistoryClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getWBUHistoryClass_softClass;
  uint64_t v7 = getWBUHistoryClass_softClass;
  if (!getWBUHistoryClass_softClass)
  {
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __getWBUHistoryClass_block_invoke;
    v3[3] = &unk_2643956C0;
    v3[4] = &v4;
    __getWBUHistoryClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_2191938CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219193978(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id get_SFAccountManagerAppearanceValuesClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)get_SFAccountManagerAppearanceValuesClass_softClass;
  uint64_t v7 = get_SFAccountManagerAppearanceValuesClass_softClass;
  if (!get_SFAccountManagerAppearanceValuesClass_softClass)
  {
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __get_SFAccountManagerAppearanceValuesClass_block_invoke;
    v3[3] = &unk_2643956C0;
    v3[4] = &v4;
    __get_SFAccountManagerAppearanceValuesClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_219193DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getWBSHistoryClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getWBSHistoryClass_softClass;
  uint64_t v7 = getWBSHistoryClass_softClass;
  if (!getWBSHistoryClass_softClass)
  {
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __getWBSHistoryClass_block_invoke;
    v3[3] = &unk_2643956C0;
    v3[4] = &v4;
    __getWBSHistoryClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_219193F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21919443C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getWBSImageUtilitiesClass()
{
  uint64_t v4 = 0;
  v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getWBSImageUtilitiesClass_softClass;
  uint64_t v7 = getWBSImageUtilitiesClass_softClass;
  if (!getWBSImageUtilitiesClass_softClass)
  {
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = __getWBSImageUtilitiesClass_block_invoke;
    v3[3] = &unk_2643956C0;
    v3[4] = &v4;
    __getWBSImageUtilitiesClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_2191945F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219194738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_2191956E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t getSFScreenScale()
{
  uint64_t v3 = 0;
  uint64_t v4 = &v3;
  uint64_t v5 = 0x2020000000;
  v0 = (uint64_t (*)(void))get_SFScreenScaleSymbolLoc_ptr;
  uint64_t v6 = get_SFScreenScaleSymbolLoc_ptr;
  if (!get_SFScreenScaleSymbolLoc_ptr)
  {
    id v1 = (void *)MobileSafariLibrary();
    v4[3] = (uint64_t)dlsym(v1, "_SFScreenScale");
    get_SFScreenScaleSymbolLoc_ptr = (_UNKNOWN *)v4[3];
    v0 = (uint64_t (*)(void))v4[3];
  }
  _Block_object_dispose(&v3, 8);
  if (!v0) {
    getSFScreenScale_cold_1();
  }
  return v0();
}

void sub_219195808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219195BA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_219196040(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_2191964FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_2191965DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id iconForApplicationProxy(void *a1)
{
  id v1 = a1;
  getSFScreenScale();
  double v3 = v2;
  if (v2 >= 2.0) {
    unsigned int v4 = 15;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v2 >= 3.0) {
    uint64_t v5 = 32;
  }
  else {
    uint64_t v5 = v4;
  }
  uint64_t v6 = [v1 iconDataForVariant:v5];
  if (v6)
  {
    uint64_t v7 = (CGImage *)LICreateIconFromCachedBitmap();
    if (v7)
    {
      v8 = [MEMORY[0x263F827E8] imageWithCGImage:v7 scale:0 orientation:v3];
    }
    else
    {
      v8 = 0;
    }
    CGImageRelease(v7);
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

uint64_t MobileSafariLibrary()
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  v2[0] = 0;
  if (!MobileSafariLibraryCore_frameworkLibrary)
  {
    v2[1] = (void *)MEMORY[0x263EF8330];
    v2[2] = (void *)3221225472;
    v2[3] = __MobileSafariLibraryCore_block_invoke;
    v2[4] = &__block_descriptor_40_e5_v8__0l;
    v2[5] = v2;
    long long v3 = xmmword_2643956E0;
    uint64_t v4 = 0;
    MobileSafariLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = MobileSafariLibraryCore_frameworkLibrary;
  if (!MobileSafariLibraryCore_frameworkLibrary) {
    MobileSafariLibrary_cold_1(v2);
  }
  if (v2[0]) {
    free(v2[0]);
  }
  return v0;
}

uint64_t __MobileSafariLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MobileSafariLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getWBSCacheClass_block_invoke(uint64_t a1)
{
  SafariSharedLibrary();
  Class result = objc_getClass("WBSCache");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWBSCacheClass_block_invoke_cold_1();
  }
  getWBSCacheClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void SafariSharedLibrary()
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  v0[0] = 0;
  if (!SafariSharedLibraryCore_frameworkLibrary)
  {
    v0[1] = (void *)MEMORY[0x263EF8330];
    v0[2] = (void *)3221225472;
    v0[3] = __SafariSharedLibraryCore_block_invoke;
    v0[4] = &__block_descriptor_40_e5_v8__0l;
    v0[5] = v0;
    long long v1 = xmmword_264395718;
    uint64_t v2 = 0;
    SafariSharedLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!SafariSharedLibraryCore_frameworkLibrary) {
    SafariSharedLibrary_cold_1(v0);
  }
  if (v0[0]) {
    free(v0[0]);
  }
}

uint64_t __SafariSharedLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SafariSharedLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getWBSPrivacyProxyAvailabilityManagerClass_block_invoke(uint64_t a1)
{
  SafariSharedUILibrary();
  Class result = objc_getClass("WBSPrivacyProxyAvailabilityManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWBSPrivacyProxyAvailabilityManagerClass_block_invoke_cold_1();
  }
  getWBSPrivacyProxyAvailabilityManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t SafariSharedUILibrary()
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  v2[0] = 0;
  if (!SafariSharedUILibraryCore_frameworkLibrary)
  {
    v2[1] = (void *)MEMORY[0x263EF8330];
    v2[2] = (void *)3221225472;
    v2[3] = __SafariSharedUILibraryCore_block_invoke;
    v2[4] = &__block_descriptor_40_e5_v8__0l;
    v2[5] = v2;
    long long v3 = xmmword_264395730;
    uint64_t v4 = 0;
    SafariSharedUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = SafariSharedUILibraryCore_frameworkLibrary;
  if (!SafariSharedUILibraryCore_frameworkLibrary) {
    SafariSharedUILibrary_cold_1(v2);
  }
  if (v2[0]) {
    free(v2[0]);
  }
  return v0;
}

uint64_t __SafariSharedUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SafariSharedUILibraryCore_frameworkLibrary = result;
  return result;
}

void *__getWBSPrivacyProxyChangeNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)SafariSharedUILibrary();
  uint64_t result = dlsym(v2, "WBSPrivacyProxyChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getWBSPrivacyProxyChangeNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getWBUHistoryClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  v3[0] = 0;
  if (!WebUILibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x263EF8330];
    v3[2] = (void *)3221225472;
    v3[3] = __WebUILibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_264395748;
    uint64_t v5 = 0;
    WebUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!WebUILibraryCore_frameworkLibrary) {
    __getWBUHistoryClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("WBUHistory");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWBUHistoryClass_block_invoke_cold_2();
  }
  getWBUHistoryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __WebUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  WebUILibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __SafariServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SafariServicesLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getWBSHistoryClass_block_invoke(uint64_t a1)
{
  SafariSharedLibrary();
  Class result = objc_getClass("WBSHistory");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWBSHistoryClass_block_invoke_cold_1();
  }
  getWBSHistoryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getWBSImageUtilitiesClass_block_invoke(uint64_t a1)
{
  SafariSharedUILibrary();
  Class result = objc_getClass("WBSImageUtilities");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWBSImageUtilitiesClass_block_invoke_cold_1();
  }
  getWBSImageUtilitiesClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getWBSTouchIconResponseClass_block_invoke(uint64_t a1)
{
  SafariSharedUILibrary();
  Class result = objc_getClass("WBSTouchIconResponse");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWBSTouchIconResponseClass_block_invoke_cold_1();
  }
  getWBSTouchIconResponseClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_2191979A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_219198C1C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_219198D90(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_219199A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return v0;
}

void sub_21919D030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAAUIProfilePictureStoreClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  v3[0] = 0;
  if (!AppleAccountUILibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x263EF8330];
    v3[2] = (void *)3221225472;
    v3[3] = __AppleAccountUILibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_264395AC0;
    uint64_t v5 = 0;
    AppleAccountUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!AppleAccountUILibraryCore_frameworkLibrary) {
    __getAAUIProfilePictureStoreClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("AAUIProfilePictureStore");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getAAUIProfilePictureStoreClass_block_invoke_cold_2();
  }
  getAAUIProfilePictureStoreClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AppleAccountUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AppleAccountUILibraryCore_frameworkLibrary = result;
  return result;
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_2191A1FFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 120));
  _Unwind_Resume(a1);
}

void sub_2191A2350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2191A2428(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2191A26E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2191A3850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2191A39B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_2191A3B5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2191A3E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2191A3FE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2191A5000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2191A7AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2191A7B9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A7C10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A7C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id getWBSPrivacyProxyAvailabilityManagerClass(void)
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getWBSPrivacyProxyAvailabilityManagerClass(void)::softClass;
  uint64_t v7 = getWBSPrivacyProxyAvailabilityManagerClass(void)::softClass;
  if (!getWBSPrivacyProxyAvailabilityManagerClass(void)::softClass)
  {
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    v3[2] = ___ZL42getWBSPrivacyProxyAvailabilityManagerClassv_block_invoke;
    v3[3] = &unk_2643960E8;
    v3[4] = &v4;
    ___ZL42getWBSPrivacyProxyAvailabilityManagerClassv_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_2191A7D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2191A7E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)_ASWebsiteNameProvider;
  [(_Unwind_Exception *)&a10 dealloc];
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

void sub_2191A8084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_2191A8148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2191A8358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_2191A8458(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_2191A8530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A8778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_2191A8998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_2191A8BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A8D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A8EDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A91F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_2191A9308(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A9388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191A99C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_2191A9D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191AA17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v36 - 144), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_2191AA304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  v12 = v11;

  _Unwind_Resume(a1);
}

id SafariShared::WBSSQLiteDatabaseFetch<NSString * const {__strong}&>(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = (void *)[objc_alloc(MEMORY[0x263F66370]) initWithDatabase:v5 query:v6];
  [v7 bindString:*a3 atParameterIndex:1];
  v8 = [v7 fetch];

  return v8;
}

void sub_2191AA3C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191AA694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_2191AA8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_2191AA9C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2191AAB38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2191AACA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void ___ZL42getWBSPrivacyProxyAvailabilityManagerClassv_block_invoke(uint64_t a1)
{
  SafariSharedUILibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WBSPrivacyProxyAvailabilityManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWBSPrivacyProxyAvailabilityManagerClass(void)::softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                            + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getWBSPrivacyProxyAvailabilityManagerClass()_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"_ASSafariSharedUISoftLinking.h", 23, @"Unable to find class %s", "WBSPrivacyProxyAvailabilityManager");

    __break(1u);
  }
}

void sub_2191AAE48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *SafariSharedUILibrary(void)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  v4[0] = 0;
  if (!SafariSharedUILibraryCore(char **)::frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x263EF8330];
    v4[2] = (void *)3221225472;
    v4[3] = ___ZL25SafariSharedUILibraryCorePPc_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_264396108;
    uint64_t v6 = 0;
    SafariSharedUILibraryCore(char **)::frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)SafariSharedUILibraryCore(char **)::frameworkLibrary;
  if (!SafariSharedUILibraryCore(char **)::frameworkLibrary)
  {
    uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"void *SafariSharedUILibrary()"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"_ASSafariSharedUISoftLinking.h", 6, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_2191AAFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL25SafariSharedUILibraryCorePPc_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SafariSharedUILibraryCore(char **)::frameworkLibrary = result;
  return result;
}

void *___ZL45getWBSPrivacyProxyChangeNotificationSymbolLocv_block_invoke(uint64_t a1)
{
  uint64_t v2 = SafariSharedUILibrary();
  uint64_t result = dlsym(v2, "WBSPrivacyProxyChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getWBSPrivacyProxyChangeNotificationSymbolLoc(void)::ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __deviceAlertStyle_block_invoke()
{
  uint64_t result = [MEMORY[0x263F29440] isPad];
  deviceAlertStyle_style = result;
  return result;
}

void sub_2191ADB14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_2191AE2A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_3(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void _ASAuthorizationButtonInitialize(void *a1)
{
  v14[4] = *MEMORY[0x263EF8340];
  id v1 = (void *)MEMORY[0x263F825C8];
  id v2 = a1;
  uint64_t v3 = [v1 clearColor];
  [v2 setBackgroundColor:v3];

  uint64_t v4 = (void *)MEMORY[0x263F08938];
  long long v5 = [v2 widthAnchor];
  uint64_t v6 = [v5 constraintGreaterThanOrEqualToConstant:130.0];
  v14[0] = v6;
  uint64_t v7 = [v2 widthAnchor];
  v8 = [v7 constraintLessThanOrEqualToConstant:375.0];
  v14[1] = v8;
  uint64_t v9 = [v2 heightAnchor];
  uint64_t v10 = [v9 constraintGreaterThanOrEqualToConstant:30.0];
  v14[2] = v10;
  v11 = [v2 heightAnchor];

  v12 = [v11 constraintLessThanOrEqualToConstant:64.0];
  v14[3] = v12;
  v13 = [MEMORY[0x263EFF8C0] arrayWithObjects:v14 count:4];
  [v4 activateConstraints:v13];
}

void sub_2191B2E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_2191B469C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSArray *ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports(void)
{
  v2[3] = *MEMORY[0x263EF8340];
  v2[0] = @"usb";
  v2[1] = @"nfc";
  v2[2] = @"ble";
  uint64_t v0 = [MEMORY[0x263EFF8C0] arrayWithObjects:v2 count:3];

  return (NSArray *)v0;
}

id safariCredentialIdentitiesFromCredentialIdentities(void *a1)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v25 = [MEMORY[0x263EFF980] array];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id obj = v1;
  uint64_t v26 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v26)
  {
    uint64_t v2 = *(void *)v29;
    uint64_t v20 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v26; ++i)
      {
        if (*(void *)v29 != v2) {
          objc_enumerationMutation(obj);
        }
        id v4 = *(id *)(*((void *)&v28 + 1) + 8 * i);
        long long v5 = [v4 serviceIdentifier];
        BOOL v6 = [v5 type] == 1;
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          v27 = v5;
          uint64_t v7 = (objc_class *)MEMORY[0x263F66588];
          id v8 = v4;
          id v24 = [v7 alloc];
          uint64_t v23 = [v27 identifier];
          uint64_t v9 = [v8 recordIdentifier];
          uint64_t v10 = [v8 user];
          uint64_t v22 = [v8 rank];
          v11 = [v8 credentialID];
          v12 = [v11 base64EncodedStringWithOptions:0];
          v13 = [v8 userHandle];

          v14 = [v13 base64EncodedStringWithOptions:0];
          v15 = (void *)v23;
          v16 = (void *)[v24 initWithServiceIdentifier:v23 serviceIdentifierType:v6 externalRecordIdentifier:v9 user:v10 rank:v22 credentialID:v12 userHandle:v14];

          uint64_t v2 = v20;
          long long v5 = v27;
        }
        else
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            v17 = (objc_class *)MEMORY[0x263F66578];
          }
          else {
            v17 = (objc_class *)MEMORY[0x263F66590];
          }
          id v18 = [v17 alloc];
          v15 = [v5 identifier];
          uint64_t v9 = [v4 recordIdentifier];
          uint64_t v10 = [v4 user];
          v16 = objc_msgSend(v18, "initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:", v15, v6, v9, v10, objc_msgSend(v4, "rank"));
        }

        [v25 addObject:v16];
      }
      uint64_t v26 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v26);
  }

  return v25;
}

id credentialIdentityStoreErrorFromSFExternalCredentialIdentityStoreError(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = [v1 code];
    if (v2 == 1) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = 2 * (v2 == 2);
    }
    id v4 = (void *)MEMORY[0x263F087E8];
    long long v5 = [v1 userInfo];

    BOOL v6 = [v4 errorWithDomain:@"ASCredentialIdentityStoreErrorDomain" code:v3 userInfo:v5];
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void OUTLINED_FUNCTION_0_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void sub_2191BE438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
}

void sub_2191BE4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_2191BE5EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2191BE6D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_2191C4688(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id OUTLINED_FUNCTION_6(uint64_t a1, void *a2)
{
  return a2;
}

id qrCodeContentsColor()
{
  uint64_t v0 = (void *)MEMORY[0x263F825C8];
  id v1 = objc_msgSend(MEMORY[0x263F086E0], "as_authenticationServicesBundle");
  uint64_t v2 = [v0 colorNamed:@"CABLEQRCodeContentsColor" inBundle:v1 compatibleWithTraitCollection:0];

  return v2;
}

void sub_2191CBE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t isUserVerificationConfigured()
{
  id v0 = objc_alloc_init(MEMORY[0x263F10468]);
  uint64_t v3 = 0;
  uint64_t v1 = [v0 canEvaluatePolicy:2 error:&v3];

  return v1;
}

void sub_2191D8748(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent()
{
  if (WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent_onceToken, &__block_literal_global_26);
  }
  return WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXAuthenticationSession()
{
  if (WBS_LOG_CHANNEL_PREFIXAuthenticationSession_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXAuthenticationSession_onceToken, &__block_literal_global_4_0);
  }
  return WBS_LOG_CHANNEL_PREFIXAuthenticationSession_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXAuthorization()
{
  if (WBS_LOG_CHANNEL_PREFIXAuthorization_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXAuthorization_onceToken, &__block_literal_global_7);
  }
  return WBS_LOG_CHANNEL_PREFIXAuthorization_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXCredentialProviderExtension()
{
  if (WBS_LOG_CHANNEL_PREFIXCredentialProviderExtension_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXCredentialProviderExtension_onceToken, &__block_literal_global_10);
  }
  return WBS_LOG_CHANNEL_PREFIXCredentialProviderExtension_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXPasswordManager()
{
  if (WBS_LOG_CHANNEL_PREFIXPasswordManager_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXPasswordManager_onceToken, &__block_literal_global_19);
  }
  return WBS_LOG_CHANNEL_PREFIXPasswordManager_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXPasswordsIcons()
{
  if (WBS_LOG_CHANNEL_PREFIXPasswordsIcons_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXPasswordsIcons_onceToken, &__block_literal_global_22);
  }
  return WBS_LOG_CHANNEL_PREFIXPasswordsIcons_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension()
{
  if (WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension_onceToken, &__block_literal_global_31);
  }
  return WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension_log;
}

void sub_2191E20B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
}

Class __getSFAuthenticationSessionClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  v3[0] = 0;
  if (!SafariServicesLibraryCore_frameworkLibrary_0)
  {
    v3[1] = (void *)MEMORY[0x263EF8330];
    v3[2] = (void *)3221225472;
    v3[3] = __SafariServicesLibraryCore_block_invoke_0;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_264396BD8;
    uint64_t v5 = 0;
    SafariServicesLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  }
  if (!SafariServicesLibraryCore_frameworkLibrary_0) {
    __getSFAuthenticationSessionClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("SFAuthenticationSession");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getSFAuthenticationSessionClass_block_invoke_cold_2();
  }
  getSFAuthenticationSessionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SafariServicesLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  SafariServicesLibraryCore_frameworkLibrary_0 = result;
  return result;
}

uint64_t ASPasskeyAssertionCredentialExtensionInput.largeBlob.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_21922B0D8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_21922B108();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A10);
  MEMORY[0x270FA5388](v13 - 8);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B118();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v15, &qword_267C10A10);
    uint64_t v17 = 0;
    unint64_t v18 = 0xB000000000000000;
LABEL_8:
    *a1 = v17;
    a1[1] = v18;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_2191E36D4((uint64_t)v15, &qword_267C10A10);
  sub_21922B0F8();
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  int v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v6, v2);
  if (v19 == *MEMORY[0x263F29350])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v17 = *v6;
    unint64_t v18 = v6[1];
LABEL_7:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_8;
  }
  if (v19 == *MEMORY[0x263F29348])
  {
    uint64_t v17 = 0;
    unint64_t v18 = 0xF000000000000000;
    goto LABEL_7;
  }
  uint64_t result = sub_21922B738();
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t ASPasskeyAssertionCredentialExtensionInput.prf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21922B0A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B0B8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v11, &qword_267C10A20);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_2191E36D4((uint64_t)v11, &qword_267C10A20);
    sub_21922B098();
    uint64_t v13 = sub_21922B078();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      sub_2191E36D4((uint64_t)v4, &qword_267C10A18);
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      v24[0] = 0;
      unint64_t v17 = 0xF000000000000000;
    }
    else
    {
      uint64_t v15 = sub_21922B058();
      unint64_t v17 = v18;
      uint64_t v19 = sub_21922B068();
      v24[0] = v20;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
      uint64_t v16 = v19;
    }
    uint64_t v21 = sub_21922B038();
    if (v21)
    {
      uint64_t v22 = sub_2191E4710(v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = 0;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a1 = v15;
    *(void *)(a1 + 8) = v17;
    uint64_t v23 = v24[0];
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v23;
    *(void *)(a1 + 32) = v22;
  }
  return result;
}

uint64_t sub_2191E36D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void ASPasskeyAssertionCredentialExtensionInput.init(largeBlob:prf:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  v39 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v5 - 8);
  v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A20);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21922B0D8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (unint64_t *)((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A10);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  unint64_t v17 = a1[1];
  uint64_t v19 = *a2;
  unint64_t v20 = a2[1];
  uint64_t v37 = a2[2];
  uint64_t v38 = v19;
  uint64_t v21 = a2[4];
  unint64_t v36 = a2[3];
  id v22 = objc_msgSend(objc_allocWithZone((Class)sub_21922B138()), sel_init);
  if (v17 >> 60 == 11)
  {
    uint64_t v23 = sub_21922B108();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 1, 1, v23);
    id v24 = v22;
    id v25 = v39;
    unint64_t v26 = v20;
  }
  else
  {
    if (v17 >> 60 == 15)
    {
      v27 = (unsigned int *)MEMORY[0x263F29348];
    }
    else
    {
      void *v13 = v18;
      v13[1] = v17;
      v27 = (unsigned int *)MEMORY[0x263F29350];
    }
    id v25 = v39;
    unint64_t v26 = v20;
    (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, *v27, v10);
    id v28 = v22;
    sub_21922B0E8();
    uint64_t v29 = sub_21922B108();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 0, 1, v29);
  }
  sub_21922B128();
  if (v21 != 1)
  {
    if (v26 >> 60 == 15)
    {
      uint64_t v31 = sub_21922B078();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v40, 1, 1, v31);
      unint64_t v32 = v36;
      if (!v21)
      {
LABEL_13:
        sub_21922B088();
        sub_2191E4A18(v38, v26, v37, v32, v21);
        uint64_t v35 = sub_21922B0A8();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v9, 0, 1, v35);
        goto LABEL_14;
      }
    }
    else
    {
      sub_2191E4E14(v38, v26);
      unint64_t v32 = v36;
      sub_2191E4E6C(v37, v36);
      uint64_t v33 = v40;
      sub_21922B048();
      uint64_t v34 = sub_21922B078();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
      if (!v21) {
        goto LABEL_13;
      }
    }
    sub_2191E4B18(v21);
    goto LABEL_13;
  }
  uint64_t v30 = sub_21922B0A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 1, 1, v30);
LABEL_14:
  sub_21922B0C8();

  *id v25 = v22;
}

uint64_t ASPasskeyAssertionCredentialExtensionInput.init(coreExtensions:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void __swiftcall ASPasskeyAssertionCredentialExtensionInput.toObjC()(ASPasskeyAssertionCredentialExtensionInput *__return_ptr retstr)
{
  uint64_t v2 = *v1;
  id v3 = objc_allocWithZone((Class)ASPasskeyAssertionCredentialExtensionInput);

  objc_msgSend(v3, sel_initWithCoreExtensions_, v2);
}

uint64_t static ASPasskeyAssertionCredentialExtensionInput.supportsSecureCoding.getter()
{
  return 1;
}

id sub_2191E3C3C()
{
  uint64_t v1 = sub_21922B0D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_21922B108();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A10);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(id *)(v0 + OBJC_IVAR___ASPasskeyAssertionCredentialExtensionInput_coreExtensions);
  sub_21922B118();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    sub_2191E36D4((uint64_t)v14, &qword_267C10A10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_2191E36D4((uint64_t)v14, &qword_267C10A10);
  sub_21922B0F8();
  (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  int v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v5, v1);
  if (v17 == *MEMORY[0x263F29350])
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v5, v1);
    uint64_t v18 = *v5;
    unint64_t v19 = v5[1];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v20 = objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput);
    sub_2191E4E14(v18, v19);
    id v16 = objc_msgSend(v20, sel_initWithOperation_, 1);
    uint64_t v21 = (void *)sub_21922ADF8();
    objc_msgSend(v16, sel_setDataToWrite_, v21);

    sub_2191E4AAC(v18, v19);
    sub_2191E4AAC(v18, v19);
    return v16;
  }
  if (v17 == *MEMORY[0x263F29348])
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput), sel_initWithOperation_, 0);
  }
  id result = (id)sub_21922B738();
  __break(1u);
  return result;
}

void __swiftcall ASPasskeyAssertionCredentialExtensionInput.init(coder:)(ASPasskeyAssertionCredentialExtensionInput_optional *__return_ptr retstr, NSCoder coder)
{
}

id ASPasskeyAssertionCredentialExtensionInput.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  sub_21922B138();
  uint64_t v4 = sub_21922B5D8();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = objc_msgSend(v2, sel_initWithCoreExtensions_, v4);
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v6;
}

Swift::Void __swiftcall ASPasskeyAssertionCredentialExtensionInput.encode(with:)(NSCoder with)
{
  id v3 = *(id *)(v1 + OBJC_IVAR___ASPasskeyAssertionCredentialExtensionInput_coreExtensions);
  id v4 = (id)sub_21922B458();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
}

void __swiftcall ASPasskeyAssertionCredentialExtensionInput.init()(ASPasskeyAssertionCredentialExtensionInput *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

id ASPasskeyAssertionCredentialExtensionInput.init()()
{
  uint64_t v1 = OBJC_IVAR___ASPasskeyAssertionCredentialExtensionInput_coreExtensions;
  id v2 = objc_allocWithZone((Class)sub_21922B138());
  id v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)ASPasskeyAssertionCredentialExtensionInput;
  return objc_msgSendSuper2(&v5, sel_init);
}

BOOL sub_2191E4528(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_2191E453C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_2191E454C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2191E4558()
{
  return MEMORY[0x270EF1CE0](*v0);
}

uint64_t sub_2191E4560(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x21D483520](a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_2191E45B4(uint64_t a1, uint64_t a2)
{
  char v3 = sub_21922B578();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_2191E460C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_21922B588();
  *a1 = result;
  return result;
}

uint64_t sub_2191E4634()
{
  return sub_21922B788();
}

uint64_t sub_2191E46D4()
{
  return MEMORY[0x270F9E010](*v0);
}

uint64_t sub_2191E46DC()
{
  return sub_21922B8C8();
}

uint64_t sub_2191E4708(uint64_t a1)
{
  return MEMORY[0x270F9FC40](a1, *v1);
}

uint64_t sub_2191E4710(uint64_t a1)
{
  uint64_t v42 = sub_21922B078();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  v40 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10BD8);
  uint64_t result = sub_21922B758();
  int64_t v5 = 0;
  uint64_t v43 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  uint64_t v34 = v7;
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v41 = v2;
  uint64_t v37 = v2 + 8;
  uint64_t v38 = v2 + 16;
  uint64_t v36 = result + 64;
  uint64_t v39 = result;
  uint64_t v12 = v2;
  uint64_t v13 = v40;
  uint64_t v14 = v42;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v44 = (v11 - 1) & v11;
  int64_t v45 = v5;
  for (unint64_t i = __clz(__rbit64(v11)) | (v5 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    id v20 = (uint64_t *)(*(void *)(v43 + 48) + 16 * i);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v13, *(void *)(v43 + 56) + *(void *)(v12 + 72) * i, v14);
    sub_2191E4E14(v21, v22);
    uint64_t v47 = sub_21922B058();
    uint64_t v46 = v23;
    uint64_t v24 = sub_21922B068();
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v14);
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = v39;
    v27 = (uint64_t *)(*(void *)(v39 + 48) + 16 * i);
    uint64_t *v27 = v21;
    v27[1] = v22;
    id v28 = (uint64_t *)(*(void *)(result + 56) + 32 * i);
    uint64_t v29 = v46;
    *id v28 = v47;
    v28[1] = v29;
    v28[2] = v24;
    v28[3] = v26;
    uint64_t v30 = *(void *)(result + 16);
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(result + 16) = v32;
    unint64_t v11 = v44;
    int64_t v5 = v45;
    if (v44) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v16 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_24;
    }
    if (v16 >= v35) {
      return result;
    }
    unint64_t v17 = *(void *)(v34 + 8 * v16);
    int64_t v18 = v5 + 1;
    if (!v17)
    {
      int64_t v18 = v5 + 2;
      if (v5 + 2 >= v35) {
        return result;
      }
      unint64_t v17 = *(void *)(v34 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v5 + 3;
        if (v5 + 3 >= v35) {
          return result;
        }
        unint64_t v17 = *(void *)(v34 + 8 * v18);
        if (!v17) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v44 = (v17 - 1) & v17;
    int64_t v45 = v18;
  }
  uint64_t v19 = v5 + 4;
  if (v5 + 4 >= v35) {
    return result;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v19);
  if (v17)
  {
    int64_t v18 = v5 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v35) {
      return result;
    }
    unint64_t v17 = *(void *)(v34 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2191E4A18(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (a5 != 1)
  {
    sub_2191E4A5C(result, a2, a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2191E4A5C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_2191E4AAC(result, a2);
    return sub_2191E4B04(a3, a4);
  }
  return result;
}

uint64_t sub_2191E4AAC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_2191E4B04(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2191E4AAC(a1, a2);
  }
  return a1;
}

uint64_t sub_2191E4B18(uint64_t a1)
{
  uint64_t v39 = sub_21922B078();
  uint64_t v2 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v37 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10BD0);
  uint64_t result = sub_21922B758();
  uint64_t v5 = (void *)result;
  int64_t v6 = 0;
  uint64_t v40 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v32 = v8;
  int64_t v33 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v38 = v2;
  uint64_t v34 = v2 + 32;
  uint64_t v35 = result + 64;
  uint64_t v36 = (void *)result;
  uint64_t v13 = v37;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v41 = (v12 - 1) & v12;
  int64_t v42 = v6;
  for (unint64_t i = __clz(__rbit64(v12)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v40 + 48) + 16 * i);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    unint64_t v22 = (uint64_t *)(*(void *)(v40 + 56) + 32 * i);
    uint64_t v24 = *v22;
    unint64_t v23 = v22[1];
    uint64_t v26 = v22[2];
    unint64_t v25 = v22[3];
    sub_2191E4E14(v20, v21);
    sub_2191E4E14(v24, v23);
    sub_2191E4E6C(v26, v25);
    sub_21922B048();
    uint64_t v5 = v36;
    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v27 = (uint64_t *)(v5[6] + 16 * i);
    uint64_t *v27 = v20;
    v27[1] = v21;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v38 + 32))(v5[7] + *(void *)(v38 + 72) * i, v13, v39);
    uint64_t v28 = v5[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v5[2] = v30;
    int64_t v6 = v42;
    unint64_t v12 = v41;
    if (v41) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_24;
    }
    if (v15 >= v33) {
      return (uint64_t)v5;
    }
    unint64_t v16 = *(void *)(v32 + 8 * v15);
    int64_t v17 = v6 + 1;
    if (!v16)
    {
      int64_t v17 = v6 + 2;
      if (v6 + 2 >= v33) {
        return (uint64_t)v5;
      }
      unint64_t v16 = *(void *)(v32 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v6 + 3;
        if (v6 + 3 >= v33) {
          return (uint64_t)v5;
        }
        unint64_t v16 = *(void *)(v32 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v41 = (v16 - 1) & v16;
    int64_t v42 = v17;
  }
  uint64_t v18 = v6 + 4;
  if (v6 + 4 >= v33) {
    return (uint64_t)v5;
  }
  unint64_t v16 = *(void *)(v32 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v33) {
      return (uint64_t)v5;
    }
    unint64_t v16 = *(void *)(v32 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2191E4E14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_2191E4E6C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2191E4E14(a1, a2);
  }
  return a1;
}

ValueMetadata *type metadata accessor for ASPasskeyAssertionCredentialExtensionInput()
{
  return &type metadata for ASPasskeyAssertionCredentialExtensionInput;
}

unint64_t type metadata accessor for ASPasskeyAssertionCredentialExtensionInput()
{
  unint64_t result = qword_267C10B50;
  if (!qword_267C10B50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C10B50);
  }
  return result;
}

void type metadata accessor for LABiometryType(uint64_t a1)
{
}

void type metadata accessor for ASPublicKeyCredentialOperationType(uint64_t a1)
{
}

void type metadata accessor for __ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement(uint64_t a1)
{
}

void type metadata accessor for ASCOSEAlgorithmIdentifier(uint64_t a1)
{
}

void sub_2191E4F20(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_2191E4F68()
{
  return sub_2191E4FD0(&qword_267C10BE8);
}

uint64_t sub_2191E4F9C()
{
  return sub_2191E4FD0(&qword_267C10BF0);
}

uint64_t sub_2191E4FD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ASCOSEAlgorithmIdentifier(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2191E5014()
{
  return sub_2191E4FD0(&qword_267C10BF8);
}

uint64_t ASPasskeyAssertionCredentialExtensionOutput.largeBlob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_21922B1A8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  int64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_21922B1D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C70);
  MEMORY[0x270FA5388](v13 - 8);
  int64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B1E8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v15, &qword_267C10C70);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = -1;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_2191E36D4((uint64_t)v15, &qword_267C10C70);
  sub_21922B1C8();
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  int v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v6, v2);
  int v18 = v17;
  int v19 = *MEMORY[0x263F29368];
  if (v17 == *MEMORY[0x263F29368])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v21 = *v6;
    uint64_t v24 = v6[1];
    uint64_t v20 = v21;
  }
  else
  {
    if (v17 != *MEMORY[0x263F29370])
    {
      uint64_t result = sub_21922B738();
      __break(1u);
      return result;
    }
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v24 = 0;
    uint64_t v20 = *(unsigned __int8 *)v6;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v22 = v24;
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = v22;
  *(unsigned char *)(a1 + 16) = v18 != v19;
  return result;
}

uint64_t ASPasskeyAssertionCredentialExtensionOutput.prf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_21922B178();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C78);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B188();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_2191E36D4((uint64_t)v8, &qword_267C10C78);
    uint64_t v9 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_2191E36D4((uint64_t)v8, &qword_267C10C78);
    sub_21922B158();
    uint64_t v11 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0);
    sub_21922B168();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
}

uint64_t ASPasskeyAssertionCredentialExtensionOutput.init(largeBlob:prf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v38 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_21922B3F8();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v36 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C88);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C78);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21922B1A8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C70);
  MEMORY[0x270FA5388](v17 - 8);
  int v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)a1;
  unint64_t v20 = *(void *)(a1 + 8);
  int v22 = *(unsigned __int8 *)(a1 + 16);
  id v23 = objc_msgSend(objc_allocWithZone((Class)sub_21922B208()), sel_init);
  if (v22 == 255)
  {
    uint64_t v25 = sub_21922B1D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 1, 1, v25);
    id v26 = v23;
  }
  else
  {
    uint64_t v24 = (void (**)(char *, void, uint64_t))(v14 + 104);
    if (v22)
    {
      char *v16 = v21 & 1;
      (*v24)(v16, *MEMORY[0x263F29370], v13);
    }
    else
    {
      *(void *)unint64_t v16 = v21;
      *((void *)v16 + 1) = v20;
      (*v24)(v16, *MEMORY[0x263F29368], v13);
      sub_2191E4E6C(v21, v20);
    }
    id v27 = v23;
    sub_21922B1B8();
    sub_2191E66AC(v21, v20, v22);
    uint64_t v28 = sub_21922B1D8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v19, 0, 1, v28);
  }
  sub_21922B1F8();
  uint64_t v29 = v40;
  sub_2191E65EC(v40, (uint64_t)v9, &qword_267C10C88);
  uint64_t v30 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v9, 1, v30) == 1)
  {
    sub_2191E36D4((uint64_t)v9, &qword_267C10C88);
    uint64_t v31 = sub_21922B178();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v12, 1, 1, v31);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v36, v9, v37);
    sub_2191E65EC((uint64_t)&v9[*(int *)(v30 + 20)], v38, &qword_267C10C80);
    sub_21922B148();
    sub_2191E6650((uint64_t)v9);
    uint64_t v32 = sub_21922B178();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 0, 1, v32);
  }
  int64_t v33 = v39;
  sub_21922B198();

  uint64_t result = sub_2191E36D4(v29, &qword_267C10C88);
  *int64_t v33 = v23;
  return result;
}

uint64_t static ASPasskeyAssertionCredentialExtensionOutput.supportsSecureCoding.getter()
{
  return 1;
}

char *sub_2191E5AE8(void *a1)
{
  uint64_t v3 = sub_21922B1A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C70);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_allocWithZone((Class)sub_21922B208());
  id v11 = v1;
  uint64_t v12 = &selRef_groupName;
  id v13 = objc_msgSend(v10, sel_init);
  if (a1)
  {
    id v14 = a1;
    if (objc_msgSend(v14, sel_didWrite))
    {
      *uint64_t v6 = 1;
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F29370], v3);
      sub_21922B1B8();
      uint64_t v15 = sub_21922B1D8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
      sub_21922B1F8();
    }
    else
    {
      id v30 = v13;
      id v16 = objc_msgSend(v14, sel_readData);
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = sub_21922AE08();
        unint64_t v20 = v19;

        uint64_t v21 = v18;
        *(void *)uint64_t v6 = v18;
        *((void *)v6 + 1) = v20;
        unint64_t v22 = v20;
        (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F29368], v3);
        sub_2191E4E14(v21, v20);
        sub_21922B1B8();
        uint64_t v23 = sub_21922B1D8();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 0, 1, v23);
        id v13 = v30;
        sub_21922B1F8();
        unint64_t v24 = v22;
        uint64_t v12 = &selRef_groupName;
        sub_2191E4AAC(v21, v24);
      }
      else
      {

        id v13 = v30;
      }
    }
  }
  ObjCClassFromObject = (objc_class *)swift_getObjCClassFromObject();

  id v26 = (char *)[objc_allocWithZone(ObjCClassFromObject) v12[75]];
  id v27 = *(void **)&v26[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions];
  *(void *)&v26[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions] = v13;

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v26;
}

id sub_2191E5E78()
{
  uint64_t v1 = sub_21922B1A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_21922B1D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C70);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(id *)(v0 + OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions);
  sub_21922B1E8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    sub_2191E36D4((uint64_t)v14, &qword_267C10C70);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_2191E36D4((uint64_t)v14, &qword_267C10C70);
  sub_21922B1C8();
  (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  int v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v5, v1);
  if (v17 == *MEMORY[0x263F29368])
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v5, v1);
    uint64_t v18 = *v5;
    unint64_t v19 = v5[1];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v19 >> 60 == 15)
    {
      unint64_t v20 = 0;
    }
    else
    {
      sub_2191E4E6C(v18, v19);
      unint64_t v20 = (void *)sub_21922ADF8();
    }
    id v16 = objc_msgSend(self, sel__outputWithData_didWrite_, v20, 0);

    sub_2191E4B04(v18, v19);
    sub_2191E4B04(v18, v19);
    return v16;
  }
  if (v17 == *MEMORY[0x263F29370])
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v5, v1);
    uint64_t v21 = *(unsigned __int8 *)v5;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return objc_msgSend(self, sel__outputWithData_didWrite_, 0, v21);
  }
  id result = (id)sub_21922B738();
  __break(1u);
  return result;
}

void __swiftcall ASPasskeyAssertionCredentialExtensionOutput.init(coder:)(ASPasskeyAssertionCredentialExtensionOutput_optional *__return_ptr retstr, NSCoder coder)
{
}

char *ASPasskeyAssertionCredentialExtensionOutput.init(coder:)(void *a1)
{
  sub_21922B208();
  id v3 = v1;
  uint64_t v4 = sub_21922B5D8();
  if (v4)
  {
    uint64_t v5 = v4;
    ObjCClassFromObject = (objc_class *)swift_getObjCClassFromObject();

    uint64_t v7 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromObject), sel_init);
    uint64_t v8 = *(void **)&v7[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions];
    *(void *)&v7[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions] = v5;

    swift_getObjectType();
    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v7;
}

Swift::Void __swiftcall ASPasskeyAssertionCredentialExtensionOutput.encode(with:)(NSCoder with)
{
  id v3 = *(id *)(v1 + OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions);
  id v4 = (id)sub_21922B458();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
}

uint64_t sub_2191E65EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2191E6650(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2191E66AC(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_2191E66C4(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_2191E66C4(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return sub_2191E4B04(a1, a2);
  }
  return a1;
}

ValueMetadata *type metadata accessor for ASPasskeyAssertionCredentialExtensionOutput()
{
  return &type metadata for ASPasskeyAssertionCredentialExtensionOutput;
}

unint64_t type metadata accessor for ASPasskeyAssertionCredentialExtensionOutput()
{
  unint64_t result = qword_267C10D00;
  if (!qword_267C10D00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C10D00);
  }
  return result;
}

uint64_t ASPasskeyRegistrationCredentialExtensionOutput.largeBlob.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21922B378();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B388();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v8, &qword_267C10D10);
    char v10 = 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_2191E36D4((uint64_t)v8, &qword_267C10D10);
    char v11 = sub_21922B368();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    char v10 = v11 & 1;
  }
  *a1 = v10;
  return result;
}

uint64_t ASPasskeyRegistrationCredentialExtensionOutput.prf.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_21922B328();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10D18);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B338();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_2191E36D4((uint64_t)v8, (uint64_t *)&unk_267C10D18);
    uint64_t v9 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_2191E36D4((uint64_t)v8, (uint64_t *)&unk_267C10D18);
    sub_2191F2638(a1);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v11 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
}

uint64_t ASPasskeyRegistrationCredentialExtensionOutput.init(largeBlob:prf:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D28);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10D18);
  MEMORY[0x270FA5388](v15 - 8);
  int v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D10);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *a1;
  id v22 = objc_msgSend(objc_allocWithZone((Class)sub_21922B3A8()), sel_init);
  uint64_t v23 = v22;
  if (v21 == 2)
  {
    uint64_t v24 = sub_21922B378();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 1, 1, v24);
    id v25 = v23;
  }
  else
  {
    id v26 = v22;
    sub_21922B358();
    uint64_t v27 = sub_21922B378();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v20, 0, 1, v27);
  }
  sub_21922B398();
  sub_2191E65EC(a2, (uint64_t)v14, &qword_267C10D28);
  uint64_t v28 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v14, 1, v28) == 1)
  {
    sub_2191E36D4((uint64_t)v14, &qword_267C10D28);
    uint64_t v29 = sub_21922B328();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
  }
  else
  {
    sub_2191E65EC((uint64_t)&v14[*(int *)(v28 + 20)], (uint64_t)v11, &qword_267C10C80);
    sub_2191E65EC((uint64_t)&v14[*(int *)(v28 + 24)], (uint64_t)v9, &qword_267C10C80);
    sub_21922B2E8();
    sub_2191E6E5C((uint64_t)v14);
    uint64_t v30 = sub_21922B328();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 0, 1, v30);
  }
  sub_21922B348();

  uint64_t result = sub_2191E36D4(a2, &qword_267C10D28);
  *a3 = v23;
  return result;
}

uint64_t sub_2191E6E5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static ASPasskeyRegistrationCredentialExtensionOutput.supportsSecureCoding.getter()
{
  return 1;
}

char *sub_2191E6EC8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D10);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_allocWithZone((Class)sub_21922B3A8());
  id v7 = v1;
  id v8 = objc_msgSend(v6, sel_init);
  if (a1)
  {
    id v9 = a1;
    objc_msgSend(v9, sel_isSupported);
    sub_21922B358();
    uint64_t v10 = sub_21922B378();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
    sub_21922B398();
  }
  ObjCClassFromObject = (objc_class *)swift_getObjCClassFromObject();

  uint64_t v12 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromObject), sel_init);
  uint64_t v13 = *(void **)&v12[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions];
  *(void *)&v12[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions] = v8;

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v12;
}

id sub_2191E70AC()
{
  uint64_t v1 = sub_21922B378();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D10);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(id *)(v0 + OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions);
  sub_21922B388();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_2191E36D4((uint64_t)v7, &qword_267C10D10);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_2191E36D4((uint64_t)v7, &qword_267C10D10);
    char v10 = sub_21922B368();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return objc_msgSend(self, sel__outputWithIsSupported_, v10 & 1);
  }
}

void __swiftcall ASPasskeyRegistrationCredentialExtensionOutput.init(coder:)(ASPasskeyRegistrationCredentialExtensionOutput_optional *__return_ptr retstr, NSCoder coder)
{
}

char *ASPasskeyRegistrationCredentialExtensionOutput.init(coder:)(void *a1)
{
  sub_21922B3A8();
  id v3 = v1;
  uint64_t v4 = sub_21922B5D8();
  if (v4)
  {
    uint64_t v5 = v4;
    ObjCClassFromObject = (objc_class *)swift_getObjCClassFromObject();

    id v7 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromObject), sel_init);
    id v8 = *(void **)&v7[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions];
    *(void *)&v7[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions] = v5;

    swift_getObjectType();
    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v7;
}

Swift::Void __swiftcall ASPasskeyRegistrationCredentialExtensionOutput.encode(with:)(NSCoder with)
{
  id v3 = *(id *)(v1 + OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions);
  id v4 = (id)sub_21922B458();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
}

ValueMetadata *type metadata accessor for ASPasskeyRegistrationCredentialExtensionOutput()
{
  return &type metadata for ASPasskeyRegistrationCredentialExtensionOutput;
}

unint64_t type metadata accessor for ASPasskeyRegistrationCredentialExtensionOutput()
{
  unint64_t result = qword_267C10D40;
  if (!qword_267C10D40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C10D40);
  }
  return result;
}

uint64_t ASAuthorizationPlatformPublicKeyCredentialRegistration.prf.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_21922B328();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10D18);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v1, sel_coreCredential);
  id v11 = objc_msgSend(v10, sel_extensions);

  if (!v11) {
    goto LABEL_4;
  }
  sub_21922B338();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_2191E36D4((uint64_t)v9, (uint64_t *)&unk_267C10D18);
LABEL_4:
    uint64_t v12 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_2191E36D4((uint64_t)v9, (uint64_t *)&unk_267C10D18);
  sub_2191F2638(a1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);
}

id ASAuthorizationPlatformPublicKeyCredentialRegistration.__largeBlobSwift.getter()
{
  uint64_t v1 = sub_21922B378();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D10);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v0, sel_coreCredential);
  id v9 = objc_msgSend(v8, sel_extensions);

  if (!v9) {
    return 0;
  }
  sub_21922B388();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_2191E36D4((uint64_t)v7, &qword_267C10D10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_2191E36D4((uint64_t)v7, &qword_267C10D10);
  char v11 = sub_21922B368();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return objc_msgSend(self, sel__outputWithIsSupported_, v11 & 1);
}

id ASAuthorizationPlatformPublicKeyCredentialRegistration.__prfSwift.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v36 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v31 - v4;
  uint64_t v6 = sub_21922B3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  uint64_t v35 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int64_t v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_21922B328();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10D18);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  MEMORY[0x270FA5388](v19);
  int v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(v0, sel_coreCredential);
  id v23 = objc_msgSend(v22, sel_extensions);

  if (!v23) {
    return 0;
  }
  sub_21922B338();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12))
  {
    sub_2191E36D4((uint64_t)v18, (uint64_t *)&unk_267C10D18);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_2191E36D4((uint64_t)v18, (uint64_t *)&unk_267C10D18);
  sub_21922B308();
  uint64_t v26 = v34;
  uint64_t v25 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34) == 1)
  {
    sub_2191E36D4((uint64_t)v5, &qword_267C10C80);
    unsigned char *v21 = sub_21922B2F8() & 1;
    uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v27(&v21[*(int *)(v19 + 20)], 1, 1, v26);
    v27(&v21[*(int *)(v19 + 24)], 1, 1, v26);
  }
  else
  {
    uint64_t v32 = v13;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v31(v11, v5, v26);
    uint64_t v28 = v33;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v33, v11, v26);
    sub_21922B318();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v26);
    unsigned char *v21 = 1;
    uint64_t v29 = &v21[*(int *)(v19 + 20)];
    v31(v29, v28, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v26);
    uint64_t v13 = v32;
    sub_2191E7F74(v36, (uint64_t)&v21[*(int *)(v19 + 24)]);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v24 = sub_2191F28DC();
  sub_2191E6E5C((uint64_t)v21);
  return v24;
}

uint64_t sub_2191E7F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2191E7FDC()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v23[0] = *(_OWORD *)v0;
  v23[1] = v1;
  long long v24 = *(_OWORD *)(v0 + 32);
  __int16 v25 = *(_WORD *)(v0 + 48);
  uint64_t v2 = *(void **)&v23[0];
  sub_2191E95A0((id *)v23);
  uint64_t v3 = &selRef_groupName;
  id v4 = objc_msgSend(v2, sel_loginChoices);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
  unint64_t v6 = sub_21922B4E8();

  unint64_t v7 = sub_2191FD2F0(v6, (uint64_t)v23);
  sub_2191E95EC((id *)v23);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v2, sel_loginChoices);
  unint64_t v9 = sub_21922B4E8();

  unint64_t v22 = MEMORY[0x263F8EE78];
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21922B748();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v13 = MEMORY[0x263F8EE78];
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_14;
  }
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v20 = 0;
  uint64_t v21 = v5;
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = (void *)MEMORY[0x21D483640](i, v9);
    }
    else
    {
      uint64_t v12 = *(void **)(v9 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v12, sel_loginChoiceKind, v20, v21))
    {
      swift_unknownObjectRelease();
    }
    else
    {
      sub_21922B6D8();
      sub_21922B708();
      sub_21922B718();
      sub_21922B6E8();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v13 = v22;
  uint64_t v3 = &selRef_groupName;
LABEL_15:
  id v14 = [v2 v3[266]];
  unint64_t v15 = sub_21922B4E8();

  sub_2191E95A0((id *)v23);
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_2191E9214(v15, v7, (uint64_t)v23);
  sub_2191E95EC((id *)v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2191F8BDC(v13);
  sub_2191F8BDC(v16);
  if (BYTE9(v24))
  {
    sub_2191E95A0((id *)v23);
    id v17 = [v2 v3[266]];
    unint64_t v18 = sub_21922B4E8();

    unint64_t v19 = sub_2191E93E4(v18, (uint64_t)&unk_26CA8EC18);
    swift_bridgeObjectRelease();
    sub_2191E95EC((id *)v23);
    sub_2191F8BDC(v19);
  }
}

void sub_2191E82EC(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  int v4 = *(unsigned __int8 *)(v1 + 41);
  if (sub_2191F7FBC())
  {
LABEL_2:
    id v5 = objc_msgSend(v3, sel_appIdentifier);
    uint64_t v6 = sub_21922B468();
    uint64_t v8 = v7;

    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 24) = 1;
    return;
  }
  if (v4)
  {
    if ((objc_msgSend(v3, sel_isCABLEAuthenticatorRequest) & 1) == 0)
    {
      unint64_t v9 = ASAuthorizationUIContext.loginChoicesToShow.getter();
      unint64_t v10 = sub_2191E93E4(v9, (uint64_t)&unk_26CA8ED18);
      swift_bridgeObjectRelease();
      uint64_t v11 = v10 >> 62 ? sub_21922B748() : *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (!v11) {
        goto LABEL_2;
      }
    }
    goto LABEL_12;
  }
  id v12 = objc_msgSend(v3, sel_serviceType);
  if (v12 == (id)1)
  {
LABEL_12:
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 1;
    *(unsigned char *)(a1 + 24) = 4;
    return;
  }
  if (v12)
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 1;
    *(unsigned char *)(a1 + 24) = 4;
  }
  else
  {
    sub_2191F83D0((uint64_t *)a1);
  }
}

id sub_2191E8590@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = *(void **)v2;
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v22 = *(void *)(v2 + 8);
  unint64_t v8 = ASAuthorizationUIContext.loginChoicesToShow.getter();
  unint64_t v9 = v8;
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_37;
    }
    goto LABEL_17;
  }
  uint64_t v10 = sub_21922B748();
  if (!v10) {
    goto LABEL_16;
  }
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v21 = v6;
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      id v12 = (void *)MEMORY[0x21D483640](i, v9);
    }
    else
    {
      id v12 = *(void **)(v9 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v12, sel_loginChoiceKind, v21) == (id)5 || objc_msgSend(v12, sel_loginChoiceKind) == (id)6)
    {
      sub_21922B6D8();
      sub_21922B708();
      sub_21922B718();
      sub_21922B6E8();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v23;
  uint64_t v6 = v21;
  if (v23 < 0) {
    goto LABEL_37;
  }
LABEL_17:
  if ((v13 & 0x4000000000000000) == 0)
  {
    uint64_t v14 = *(void *)(v13 + 16);
    goto LABEL_19;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_21922B748();
  swift_release();
LABEL_19:
  unint64_t v15 = ASAuthorizationUIContext.loginChoicesToShow.getter();
  if (v15 >> 62) {
    uint64_t v16 = sub_21922B748();
  }
  else {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v14 == v16)
  {
    unsigned int v17 = objc_msgSend(v5, sel_isCABLEAuthenticatorRequest);
    id result = (id)swift_release();
    *(void *)a2 = v17 | ((unint64_t)(v14 > 1) << 8);
    *(_OWORD *)(a2 + 8) = xmmword_219232D40;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    return result;
  }
  swift_release();
  unint64_t v19 = ASAuthorizationUIContext.loginChoicesToShow.getter();
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_25;
  }
LABEL_39:
  uint64_t v20 = sub_21922B748();
LABEL_25:
  swift_bridgeObjectRelease();
  if (v20 == 1)
  {
    id result = objc_msgSend(a1, sel_loginChoiceKind);
    switch((unint64_t)result)
    {
      case 0uLL:
        *(_OWORD *)a2 = xmmword_219232D30;
        goto LABEL_28;
      case 1uLL:
        id result = (id)sub_2191EAC98((void *)a2);
        break;
      case 2uLL:
        id result = (id)sub_2191E9640((void *)a2);
        break;
      default:
        *(void *)a2 = 0;
        *(void *)(a2 + 8) = 0;
LABEL_28:
        *(void *)(a2 + 24) = 0;
        *(void *)(a2 + 32) = 0;
        *(void *)(a2 + 16) = 0x8000000000000000;
        break;
    }
  }
  else
  {
    *(void *)a2 = v22;
    *(void *)(a2 + 8) = v6;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 16) = v7 | 0x4000000000000000;
    return (id)sub_2191E8EA0();
  }
  return result;
}

id sub_2191E8B14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v19 = *(id *)v2;
  uint64_t v20 = *(void *)(v2 + 32);
  char v21 = *(unsigned char *)(v2 + 48);
  int v22 = *(unsigned __int8 *)(v2 + 44);
  char v18 = *(unsigned char *)(v2 + 49);
  id result = objc_msgSend(a1, sel_loginChoiceKind);
  switch((unint64_t)result)
  {
    case 0uLL:
      id result = (id)sub_2191F8850((uint64_t)&v24);
      char v4 = v25;
      uint64_t v5 = a2;
      *(_OWORD *)a2 = v24;
      goto LABEL_20;
    case 1uLL:
      self;
      id result = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_isExternal);
      if (result || (v21 & 1) == 0) {
        goto LABEL_21;
      }
      goto LABEL_16;
    case 2uLL:
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      id v7 = objc_msgSend(v6, sel_externalCredentialProviderName);
      if (v7)
      {
        unint64_t v8 = v7;
        swift_unknownObjectRelease();

        goto LABEL_21;
      }
      id v9 = objc_msgSend(v19, sel_platformUserVerificationPreference);
      uint64_t v10 = sub_21922B468();
      uint64_t v12 = v11;

      if (v10 == sub_21922B468() && v12 == v13)
      {
        swift_bridgeObjectRelease_n();
        id result = (id)swift_unknownObjectRelease();
      }
      else
      {
        char v15 = sub_21922B868();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id result = (id)swift_unknownObjectRelease();
        if ((v15 & 1) == 0 && (v18 & 1) == 0) {
          goto LABEL_21;
        }
      }
LABEL_16:
      if (!v22)
      {
LABEL_21:
        if (qword_267C109E8 != -1) {
          swift_once();
        }
        uint64_t v16 = *(void *)algn_267C16258;
        *(void *)a2 = qword_267C16250;
        *(void *)(a2 + 8) = v16;
        *(unsigned char *)(a2 + 16) = 0;
LABEL_27:
        return (id)swift_bridgeObjectRetain();
      }
      if (v22 == 1 || v20 != 1)
      {
        if (qword_267C109E8 != -1) {
          swift_once();
        }
        uint64_t v17 = *(void *)algn_267C16258;
        *(void *)a2 = qword_267C16250;
        *(void *)(a2 + 8) = v17;
        *(unsigned char *)(a2 + 16) = 1;
        goto LABEL_27;
      }
      uint64_t v5 = a2;
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      char v4 = 3;
LABEL_20:
      *(unsigned char *)(v5 + 16) = v4;
      return result;
    case 5uLL:
      goto LABEL_16;
    default:
      goto LABEL_21;
  }
}

uint64_t sub_2191E8EA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2191E8EA8(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21922B748();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v33 = v3;
      uint64_t v34 = v5;
      unint64_t v37 = v4 & 0xC000000000000001;
      uint64_t v6 = 4;
      unint64_t v35 = v4;
      while (1)
      {
        uint64_t v7 = v6 - 4;
        if (v37)
        {
          MEMORY[0x21D483640](v6 - 4, v4);
          uint64_t v3 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_31;
          }
        }
        else
        {
          swift_unknownObjectRetain();
          uint64_t v3 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
        }
        self;
        uint64_t v8 = swift_dynamicCastObjCClass();
        if (v8)
        {
          id v9 = (void *)v8;
          swift_unknownObjectRetain();
          id v10 = objc_msgSend(v9, sel_relyingPartyIdentifier);
          if (v10)
          {
            uint64_t v11 = v10;
            id v12 = objc_msgSend(v10, sel_safari_highLevelDomainForPasswordManager);

            uint64_t v13 = sub_21922B468();
            uint64_t v15 = v14;
          }
          else
          {
            uint64_t v13 = 0;
            uint64_t v15 = 0;
          }
          id v16 = objc_msgSend(a2, sel_site, v33);
          if (!v16)
          {
            sub_21922B468();
            id v16 = (id)sub_21922B458();
            swift_bridgeObjectRelease();
          }
          id v17 = objc_msgSend(v16, sel_safari_highLevelDomainForPasswordManager);

          uint64_t v18 = sub_21922B468();
          uint64_t v20 = v19;

          if (!v15)
          {
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
LABEL_28:
            uint64_t v5 = v34;
            unint64_t v4 = v35;
            goto LABEL_5;
          }
          if (v13 == v18 && v15 == v20)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v21 = sub_21922B868();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v21 & 1) == 0)
            {
              swift_unknownObjectRelease_n();
              goto LABEL_28;
            }
          }
          id v22 = objc_msgSend(v9, sel_userVisibleName);
          uint64_t v23 = sub_21922B468();
          uint64_t v25 = v24;

          id v26 = objc_msgSend(a2, sel_username);
          uint64_t v27 = sub_21922B468();
          uint64_t v29 = v28;

          if (v23 == v27 && v25 == v29)
          {
            swift_bridgeObjectRelease_n();
            swift_unknownObjectRelease_n();
            uint64_t v31 = 1;
            goto LABEL_34;
          }
          char v30 = sub_21922B868();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease_n();
          uint64_t v5 = v34;
          unint64_t v4 = v35;
          if (v30)
          {
            uint64_t v31 = 1;
            goto LABEL_34;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
LABEL_5:
        ++v6;
        if (v3 == v5)
        {
          uint64_t v31 = 0;
          goto LABEL_34;
        }
      }
    }
  }
  uint64_t v31 = 0;
LABEL_34:
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_2191E9214(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_18:
    uint64_t v6 = sub_21922B748();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      unint64_t v7 = 0;
      char v12 = *(unsigned char *)(a3 + 41);
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x21D483640](v7, a1);
          unint64_t v8 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
LABEL_15:
            __break(1u);
            return v13;
          }
        }
        else
        {
          if (v7 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_18;
          }
          swift_unknownObjectRetain();
          unint64_t v8 = v7 + 1;
          if (__OFADD__(v7, 1)) {
            goto LABEL_15;
          }
        }
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (v9
          && ((id v10 = (void *)v9,
               swift_unknownObjectRetain(),
               a3 = sub_2191E8EA8(a2, v10),
               swift_unknownObjectRelease(),
               (v12 & 1) != 0)
           || (a3 & 1) == 0))
        {
          sub_21922B6D8();
          sub_21922B708();
          sub_21922B718();
          a3 = (uint64_t)&v13;
          sub_21922B6E8();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v7;
        if (v8 == v6) {
          return v13;
        }
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2191E93E4(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_24;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_21922B748())
  {
    unint64_t v16 = v3;
    unint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v8 = (char **)(v3 + 32);
    unint64_t v3 = (unint64_t)&selRef_groupName;
    while (1)
    {
      if (v6)
      {
        uint64_t v9 = (char *)MEMORY[0x21D483640](v5, v16);
        BOOL v10 = __OFADD__(v5++, 1);
        if (v10) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v5 >= *(void *)(v7 + 16)) {
          goto LABEL_23;
        }
        uint64_t v9 = v8[v5];
        swift_unknownObjectRetain();
        BOOL v10 = __OFADD__(v5++, 1);
        if (v10)
        {
LABEL_20:
          __break(1u);
          return v17;
        }
      }
      id v11 = objc_msgSend(v9, *(SEL *)(v3 + 2120), v16);
      uint64_t v12 = *(void *)(a2 + 16);
      if (v12)
      {
        if (*(id *)(a2 + 32) == v11)
        {
LABEL_11:
          sub_21922B6D8();
          sub_21922B708();
          sub_21922B718();
          sub_21922B6E8();
          unint64_t v3 = 0x264399000;
          goto LABEL_5;
        }
        if (v12 != 1) {
          break;
        }
      }
LABEL_4:
      swift_unknownObjectRelease();
LABEL_5:
      if (v5 == i) {
        return v17;
      }
    }
    uint64_t v13 = 5;
    while (1)
    {
      uint64_t v14 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      if (*(id *)(a2 + 8 * v13) == v11) {
        goto LABEL_11;
      }
      ++v13;
      if (v14 == v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    ;
  }
  return MEMORY[0x263F8EE78];
}

id *sub_2191E95A0(id *a1)
{
  id v2 = *a1;
  sub_2191E8EA0();
  return a1;
}

id *sub_2191E95EC(id *a1)
{
  sub_2191E9638();
  return a1;
}

uint64_t sub_2191E9638()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2191E9640@<X0>(void *a1@<X8>)
{
  long long v3 = v1[1];
  long long v40 = *v1;
  long long v41 = v3;
  long long v42 = v1[2];
  __int16 v43 = *((_WORD *)v1 + 24);
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4 && (BYTE9(v42) & 1) == 0)
  {
    unint64_t v5 = (void *)v4;
    unint64_t v6 = (void *)v40;
    swift_unknownObjectRetain();
    sub_2191E95A0((id *)&v40);
    id v7 = objc_msgSend(v6, sel_loginChoices);
    __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
    unint64_t v8 = sub_21922B4E8();

    unint64_t v9 = sub_2191FD2F0(v8, (uint64_t)&v40);
    sub_2191E95EC((id *)&v40);
    swift_bridgeObjectRelease();
    if (v9 >> 62) {
      uint64_t v10 = sub_21922B748();
    }
    else {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    unsigned int v11 = objc_msgSend(v6, sel_isRegistrationRequest);
    unsigned int v12 = v11;
    if (v10 >= 2)
    {
      uint64_t result = swift_unknownObjectRelease();
      if (v12)
      {
        uint64_t v14 = *((void *)&v40 + 1);
        uint64_t v15 = v41;
        uint64_t v16 = BYTE8(v41) | 0x7000000000000000;
        uint64_t result = sub_2191E8EA0();
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0x8000000000000000;
      }
      *a1 = v14;
      a1[1] = v15;
      a1[4] = 0;
      a1[2] = v16;
      goto LABEL_18;
    }
    if (v11)
    {
      unsigned int v19 = objc_msgSend(v5, sel_isExternal);
      uint64_t result = swift_unknownObjectRelease();
      if (v19) {
        long long v20 = xmmword_219232D70;
      }
      else {
        long long v20 = xmmword_219232D60;
      }
      *(_OWORD *)a1 = v20;
      a1[2] = 0x8000000000000000;
      a1[3] = 0;
      a1[4] = 0;
      return result;
    }
    if (objc_msgSend(v6, sel_shouldUseFallbackPasskeyUI))
    {
      uint64_t result = swift_unknownObjectRelease();
      *(_OWORD *)a1 = xmmword_219232D50;
      a1[4] = 0;
      a1[2] = 0x8000000000000000;
LABEL_18:
      a1[3] = 0;
      return result;
    }
    id v21 = objc_msgSend(v6, sel_destinationSiteForCrossSiteAssertion);
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = sub_21922B468();
      uint64_t v25 = v24;

      unsigned int v26 = objc_msgSend(v5, sel_isSharedCredential);
      swift_unknownObjectRelease();
      uint64_t v27 = v41;
      uint64_t v28 = BYTE8(v41);
      *a1 = *((void *)&v40 + 1);
      a1[1] = v27;
      if (!v26)
      {
        uint64_t v35 = v28 | 0x1000000000000000;
        goto LABEL_32;
      }
      uint64_t v29 = 0x5800000000000000;
    }
    else
    {
      id v30 = objc_msgSend(v6, sel_proxiedOriginDeviceName);
      if (!v30)
      {
        unsigned int v36 = objc_msgSend(v5, sel_isSharedCredential);
        swift_unknownObjectRelease();
        uint64_t v37 = v41;
        uint64_t v38 = BYTE8(v41);
        *a1 = *((void *)&v40 + 1);
        a1[1] = v37;
        if (v36) {
          uint64_t v39 = v38 | 0x5000000000000000;
        }
        else {
          uint64_t v39 = v38 | 0x800000000000000;
        }
        a1[2] = v39;
        a1[3] = 0;
        a1[4] = 0;
        return sub_2191E8EA0();
      }
      uint64_t v31 = v30;
      uint64_t v23 = sub_21922B468();
      uint64_t v25 = v32;

      unsigned int v33 = objc_msgSend(v5, sel_isSharedCredential);
      swift_unknownObjectRelease();
      uint64_t v34 = v41;
      uint64_t v28 = BYTE8(v41);
      *a1 = *((void *)&v40 + 1);
      a1[1] = v34;
      if (!v33)
      {
        uint64_t v35 = v28 | 0x2000000000000000;
        goto LABEL_32;
      }
      uint64_t v29 = 0x6800000000000000;
    }
    uint64_t v35 = v28 | v29;
LABEL_32:
    a1[2] = v35;
    a1[3] = v23;
    a1[4] = v25;
    return sub_2191E8EA0();
  }
  uint64_t v17 = v41;
  uint64_t v18 = BYTE8(v41) | 0x4000000000000000;
  *a1 = *((void *)&v40 + 1);
  a1[1] = v17;
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = v18;

  return sub_2191E8EA0();
}

void sub_2191E99C8(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 41) == 1) {
    goto LABEL_61;
  }
  long long v3 = *(void **)v1;
  id v4 = *(id *)(v1 + 16);
  LODWORD(v5) = *(unsigned __int8 *)(v1 + 24);
  uint64_t v40 = *(void *)(v1 + 32);
  int v41 = *(unsigned __int8 *)(v1 + 42);
  int v45 = *(unsigned __int8 *)(v1 + 44);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 45);
  uint64_t v49 = MEMORY[0x263F8EE88];
  long long v42 = v3;
  id v7 = objc_msgSend(v3, sel_loginChoices);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
  unint64_t v8 = sub_21922B4E8();

  if (v8 >> 62)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_21922B748();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_56:
    swift_bridgeObjectRelease();
LABEL_57:
    if (v45 != 2) {
      goto LABEL_60;
    }
    switch(v40)
    {
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v34 = 2;
        goto LABEL_62;
      case 2:
        swift_bridgeObjectRelease();
        long long v35 = xmmword_219232D90;
        break;
      case 4:
        swift_bridgeObjectRelease();
        long long v35 = xmmword_219232D80;
        break;
      default:
        swift_bridgeObjectRelease();
        *a1 = 0;
        a1[1] = 0;
        a1[2] = 0;
        goto LABEL_63;
    }
    *(_OWORD *)a1 = v35;
    a1[2] = 0;
    *((unsigned char *)a1 + 24) = 0;
    return;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_56;
  }
LABEL_4:
  int v43 = v5;
  id v44 = v4;
  uint64_t v39 = a1;
  uint64_t v10 = 0;
  a1 = 0;
  unint64_t v47 = v8 & 0xC000000000000001;
  uint64_t v46 = 0;
  char v38 = v6;
  char v36 = 0;
  int v37 = v6 ^ 1;
  do
  {
    char v11 = 0;
    unsigned int v12 = a1;
LABEL_9:
    if (v47)
    {
      LODWORD(v5) = MEMORY[0x21D483640](v12, v8);
      a1 = (uint64_t *)((char *)v12 + 1);
      if (__OFADD__(v12, 1)) {
        goto LABEL_53;
      }
    }
    else
    {
      if ((unint64_t)v12 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_54;
      }
      uint64_t v5 = *(void *)(v8 + 32 + 8 * (void)v12);
      swift_unknownObjectRetain();
      a1 = (uint64_t *)((char *)v12 + 1);
      if (__OFADD__(v12, 1))
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    self;
    uint64_t v13 = swift_dynamicCastObjCClass();
    if (!v13)
    {
LABEL_7:
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
    uint64_t v6 = v13;
    swift_unknownObjectRetain();
    id v14 = objc_msgSend((id)v6, sel_externalCredentialProviderName);
    if (!v14) {
      goto LABEL_38;
    }
    uint64_t v15 = v14;
    uint64_t v16 = sub_21922B468();
    id v4 = v17;

    sub_2191EA208(&v48, v16, (uint64_t)v4);
    swift_bridgeObjectRelease();
    if (!v10)
    {
      id v18 = objc_msgSend((id)v6, sel_externalCredentialProviderBundleID);
      if (!v18)
      {
        swift_unknownObjectRelease_n();
        uint64_t v46 = 0;
        uint64_t v10 = 0;
        if (a1 == (uint64_t *)v9) {
          break;
        }
        goto LABEL_21;
      }
      unsigned int v19 = v18;
      uint64_t v46 = sub_21922B468();
      uint64_t v10 = v20;
    }
    swift_unknownObjectRelease_n();
    if (a1 == (uint64_t *)v9) {
      break;
    }
LABEL_21:
    uint64_t v21 = (uint64_t)v12 + 5;
    while (1)
    {
      unint64_t v22 = v21 - 4;
      if (v47)
      {
        LODWORD(v5) = MEMORY[0x21D483640](v21 - 4, v8);
        a1 = (uint64_t *)(v21 - 3);
        if (__OFADD__(v22, 1)) {
          goto LABEL_53;
        }
      }
      else
      {
        if (v22 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_54;
        }
        uint64_t v5 = *(void *)(v8 + 8 * v21);
        swift_unknownObjectRetain();
        a1 = (uint64_t *)(v21 - 3);
        if (__OFADD__(v22, 1)) {
          goto LABEL_53;
        }
      }
      self;
      uint64_t v23 = swift_dynamicCastObjCClass();
      if (!v23)
      {
        char v11 = 1;
        goto LABEL_7;
      }
      uint64_t v24 = (void *)v23;
      swift_unknownObjectRetain();
      id v25 = objc_msgSend(v24, sel_externalCredentialProviderName);
      if (!v25) {
        break;
      }
      unsigned int v26 = v25;
      id v4 = (id)sub_21922B468();
      uint64_t v6 = v27;

      sub_2191EA208(&v48, (uint64_t)v4, v6);
      swift_bridgeObjectRelease();
      if (!v10)
      {
        id v28 = objc_msgSend(v24, sel_externalCredentialProviderBundleID);
        if (!v28)
        {
          swift_unknownObjectRelease_n();
          uint64_t v46 = 0;
          uint64_t v10 = 0;
          goto LABEL_34;
        }
        uint64_t v29 = v28;
        uint64_t v46 = sub_21922B468();
        uint64_t v10 = v30;
      }
      swift_unknownObjectRelease_n();
LABEL_34:
      ++v21;
      if (a1 == (uint64_t *)v9) {
        goto LABEL_48;
      }
    }
    char v11 = 1;
LABEL_38:
    id v31 = v42;
    id v4 = v44;
    LODWORD(v6) = v43;
    sub_2191E8EA0();
    if (!v45)
    {

      swift_unknownObjectRelease_n();
      sub_2191E9638();
      goto LABEL_8;
    }
    if (v41)
    {

      swift_unknownObjectRelease_n();
      sub_2191E9638();
      if (v38) {
        goto LABEL_47;
      }
LABEL_8:
      unsigned int v12 = a1;
      if (a1 == (uint64_t *)v9) {
        break;
      }
      goto LABEL_9;
    }
    id v4 = objc_msgSend(v31, sel_isRegistrationRequest);

    swift_unknownObjectRelease_n();
    sub_2191E9638();
    if ((v4 | v37)) {
      goto LABEL_8;
    }
LABEL_47:
    char v36 = 1;
  }
  while (!(v11 & 1 | (a1 == (uint64_t *)v9)));
LABEL_48:
  swift_bridgeObjectRelease();
  a1 = v39;
  if (!v10) {
    goto LABEL_57;
  }
  if (v36)
  {
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  unint64_t v32 = *(void *)(v49 + 16);
  swift_bridgeObjectRelease();
  if (v32 < 2)
  {
    uint64_t *v39 = v46;
    v39[1] = v10;
    v39[2] = 0;
    char v33 = 1;
    goto LABEL_64;
  }
LABEL_60:
  swift_bridgeObjectRelease();
LABEL_61:
  uint64_t v34 = 1;
LABEL_62:
  a1[1] = 0;
  a1[2] = 0;
  *a1 = v34;
LABEL_63:
  char v33 = 4;
LABEL_64:
  *((unsigned char *)a1 + 24) = v33;
}

uint64_t sub_2191E9F88@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 44);
  char v6 = *(unsigned char *)(v1 + 49);
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    unint64_t v8 = (void *)v7;
    swift_unknownObjectRetain();
    if (objc_msgSend(v8, sel_isExternal))
    {
      if (qword_267C109E8 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_267C16250;
      uint64_t v9 = *(void *)algn_267C16258;
      swift_bridgeObjectRetain();
      uint64_t result = swift_unknownObjectRelease();
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v9;
      goto LABEL_23;
    }
    id v13 = objc_msgSend(v3, sel_platformUserVerificationPreference);
    uint64_t v14 = sub_21922B468();
    uint64_t v16 = v15;

    if (v14 == sub_21922B468() && v16 == v17)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = sub_21922B868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        if (v5)
        {
LABEL_17:
          if (v5 == 1 || v4 != 1)
          {
            if (qword_267C109E8 != -1) {
              swift_once();
            }
            uint64_t v21 = qword_267C16250;
            uint64_t v20 = *(void *)algn_267C16258;
            swift_bridgeObjectRetain();
            uint64_t result = swift_unknownObjectRelease();
            *(void *)a1 = v21;
            *(void *)(a1 + 8) = v20;
            *(unsigned char *)(a1 + 16) = v6;
          }
          else
          {
            uint64_t result = swift_unknownObjectRelease();
            *(void *)a1 = 0;
            *(void *)(a1 + 8) = 0;
            *(unsigned char *)(a1 + 16) = 3;
          }
          return result;
        }
LABEL_22:
        uint64_t result = swift_unknownObjectRelease();
        *(_OWORD *)a1 = xmmword_219232DA0;
LABEL_23:
        *(unsigned char *)(a1 + 16) = 0;
        return result;
      }
    }
    char v6 = 1;
    if (v5) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (qword_267C109E8 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)algn_267C16258;
  *(void *)a1 = qword_267C16250;
  *(void *)(a1 + 8) = v12;
  *(unsigned char *)(a1 + 16) = 0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2191EA208(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_21922B8B8();
  swift_bridgeObjectRetain();
  sub_21922B488();
  uint64_t v8 = sub_21922B8F8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21922B868() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      id v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21922B868() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2191EA698(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2191EA3B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D68);
  uint64_t v3 = sub_21922B658();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_21922B8B8();
      sub_21922B488();
      uint64_t result = sub_21922B8F8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_2191EA698(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2191EA3B8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2191EA834();
      goto LABEL_22;
    }
    sub_2191EA9E8();
  }
  uint64_t v11 = *v4;
  sub_21922B8B8();
  sub_21922B488();
  uint64_t result = sub_21922B8F8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_21922B868(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_21922B888();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_21922B868();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_2191EA834()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21922B648();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2191EA9E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D68);
  uint64_t v3 = sub_21922B658();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_21922B8B8();
    swift_bridgeObjectRetain();
    sub_21922B488();
    uint64_t result = sub_21922B8F8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2191EAC98@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 24);
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    id v28 = (id)result;
    swift_unknownObjectRetain();
    unint64_t v8 = ASAuthorizationUIContext.loginChoicesToShow.getter();
    if (v8 >> 62) {
      uint64_t v9 = sub_21922B748();
    }
    else {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v4, sel_proxiedOriginDeviceName);
    int64_t v11 = v10;
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v12 = sub_21922B468();
        uint64_t v14 = v13;

        unsigned int v15 = objc_msgSend(v28, sel_isSharedCredential);
        swift_unknownObjectRelease();
        *a1 = v3;
        a1[1] = v5;
        if (v15) {
          uint64_t v16 = v6 | 0x6000000000000000;
        }
        else {
          uint64_t v16 = v6 | 0x1800000000000000;
        }
        a1[2] = v16;
        a1[3] = v12;
        a1[4] = v14;
      }
      else
      {
        unsigned int v20 = objc_msgSend(v28, sel_isSharedCredential);
        swift_unknownObjectRelease();
        *a1 = v3;
        a1[1] = v5;
        a1[4] = 0;
        if (v20) {
          a1[2] = v6 | 0x4800000000000000;
        }
        else {
          a1[2] = v6;
        }
        a1[3] = 0;
      }
    }
    else if (v10)
    {
      uint64_t v17 = sub_21922B468();
      uint64_t v19 = v18;
      swift_unknownObjectRelease();

      *a1 = v3;
      a1[1] = v5;
      a1[2] = v6 | 0x3000000000000000;
      a1[3] = v17;
      a1[4] = v19;
    }
    else
    {
      id v21 = objc_msgSend(v4, sel_localAccountLoginChoices);
      __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
      unint64_t v22 = sub_21922B4E8();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_21922B748();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(v4, sel_loginChoices);
      unint64_t v25 = sub_21922B4E8();

      if (v25 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_21922B748();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      *a1 = v3;
      a1[1] = v5;
      if (v23 == v26) {
        uint64_t v27 = v6 | 0x3800000000000000;
      }
      else {
        uint64_t v27 = v6 | 0x4000000000000000;
      }
      a1[2] = v27;
      a1[3] = 0;
      a1[4] = 0;
    }
    return sub_2191E8EA0();
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[3] = 0;
    a1[4] = 0;
    a1[2] = 0x8000000000000000;
  }
  return result;
}

void sub_2191EB080(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 40))
  {
    __break(1u);
  }
  else
  {
    id v3 = *(id *)v1;
    int v4 = *(unsigned __int8 *)(v1 + 41);
    id v5 = objc_msgSend(*(id *)v1, sel_proxiedIconData);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = sub_21922AE08();
      unint64_t v9 = v8;

      id v10 = objc_msgSend(v3, sel_proxiedIconScale);
      if (v10)
      {
        int64_t v11 = v10;
        objc_msgSend(v10, sel_doubleValue);
        uint64_t v13 = v12;

        *(void *)a1 = v7;
        *(void *)(a1 + 8) = v9;
        *(void *)(a1 + 16) = v13;
        *(unsigned char *)(a1 + 24) = 2;
        return;
      }
      sub_2191E4AAC(v7, v9);
    }
    if (v4)
    {
      id v14 = objc_msgSend(v3, sel_appIdentifier);
      uint64_t v15 = sub_21922B468();
      uint64_t v17 = v16;

      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      sub_2191F83D0((uint64_t *)a1);
    }
  }
}

uint64_t ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21922B248();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F30);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(v1, sel_extensions);
  sub_21922B258();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v12, &qword_267C10F30);
    *(void *)a1 = 2;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_2191E36D4((uint64_t)v12, &qword_267C10F30);
    int v26 = sub_21922B238();
    sub_21922B218();
    uint64_t v15 = sub_21922B078();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
    {
      sub_2191E36D4((uint64_t)v5, &qword_267C10A18);
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      unint64_t v20 = 0xF000000000000000;
    }
    else
    {
      uint64_t v25 = sub_21922B058();
      unint64_t v20 = v21;
      uint64_t v18 = sub_21922B068();
      uint64_t v19 = v22;
      uint64_t v23 = v5;
      uint64_t v17 = v25;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
    }
    unsigned __int8 v27 = v26 & 1;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(void *)a1 = v27;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v20;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
  }
  return result;
}

void sub_2191EB53C(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  unint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  unint64_t v4 = a1[4];
  v5[0] = *a1;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  v5[4] = v4;
  sub_2191EC54C(v5[0], v1, v2, v3, v4);
  ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.setter(v5);
}

void ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.setter(uint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F30);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  unint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  unint64_t v13 = a1[4];
  id v14 = objc_msgSend(v1, sel_extensions);
  if (v9 == 2)
  {
    uint64_t v15 = sub_21922B248();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  else
  {
    if (v11 >> 60 == 15)
    {
      uint64_t v16 = sub_21922B078();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    }
    else
    {
      sub_2191E4E14(v10, v11);
      sub_2191E4E6C(v12, v13);
      sub_21922B048();
      uint64_t v17 = sub_21922B078();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 0, 1, v17);
    }
    sub_21922B228();
    sub_2191EC528(v9, v10, v11, v12, v13);
    uint64_t v18 = sub_21922B248();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
  }
  sub_21922B268();
}

void (*ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[5] = v1;
  ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.getter((uint64_t)v3);
  return sub_2191EB84C;
}

void sub_2191EB84C(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  uint64_t v5 = v3[1];
  unint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  unint64_t v8 = v3[4];
  v9[0] = v4;
  v9[1] = v5;
  v9[2] = v6;
  v9[3] = v7;
  v9[4] = v8;
  if (a2)
  {
    sub_2191EC54C(v4, v5, v6, v7, v8);
    ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.setter(v9);
    sub_2191EC528(*v3, v3[1], v3[2], v3[3], v3[4]);
  }
  else
  {
    ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.setter(v9);
  }

  free(v3);
}

id ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.__largeBlobSwift.getter()
{
  uint64_t v1 = sub_21922B278();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = sub_21922B2A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F20);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(v0, sel_extensions);
  sub_21922B2B8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    sub_2191E36D4((uint64_t)v14, (uint64_t *)&unk_267C10F20);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_2191E36D4((uint64_t)v14, (uint64_t *)&unk_267C10F20);
  sub_21922B298();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v17 == *MEMORY[0x263F29378])
  {
    uint64_t v18 = 0;
  }
  else
  {
    if (v17 != *MEMORY[0x263F29380])
    {
      id result = (id)sub_21922B738();
      __break(1u);
      return result;
    }
    uint64_t v18 = 1;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput), sel_initWithSupportRequirement_, v18);
}

void ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.__largeBlobSwift.setter(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21922B278();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v2, sel_extensions);
  if (!a1)
  {
    uint64_t v14 = sub_21922B2A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 1, 1, v14);
LABEL_8:
    sub_21922B2C8();

    return;
  }
  a1 = a1;
  id v12 = objc_msgSend(a1, sel_supportRequirement);
  if (!v12)
  {
    uint64_t v13 = (unsigned int *)MEMORY[0x263F29378];
LABEL_7:
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v13, v4);
    sub_21922B288();

    uint64_t v15 = sub_21922B2A8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
    goto LABEL_8;
  }
  if (v12 == (id)1)
  {
    uint64_t v13 = (unsigned int *)MEMORY[0x263F29380];
    goto LABEL_7;
  }
  sub_21922B738();
  __break(1u);
}

id ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.__prfSwift.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21922B248();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v0, sel_extensions);
  sub_21922B258();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_2191E36D4((uint64_t)v10, &qword_267C10F30);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_2191E36D4((uint64_t)v10, &qword_267C10F30);
    sub_21922B238();
    sub_21922B218();
    uint64_t v13 = sub_21922B078();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) == 1)
    {
      sub_2191E36D4((uint64_t)v3, &qword_267C10A18);
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 0;
      unint64_t v18 = 0xF000000000000000;
    }
    else
    {
      uint64_t v15 = sub_21922B058();
      unint64_t v18 = v19;
      uint64_t v16 = sub_21922B068();
      unint64_t v17 = v20;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v13);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v12 = objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialPRFRegistrationInput), sel_initWithInputValues_, 0);
    sub_2191E4A5C(v15, v18, v16, v17);
  }
  return v12;
}

void ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.__prfSwift.setter(id a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F30);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v1, sel_extensions);
  if (a1)
  {
    a1 = a1;
    sub_2191F2BAC();

    uint64_t v7 = sub_21922B248();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  }
  else
  {
    uint64_t v8 = sub_21922B248();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  sub_21922B268();
}

id static ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.emptyExtensions()()
{
  id v0 = objc_allocWithZone((Class)sub_21922B2D8());

  return objc_msgSend(v0, sel_init);
}

uint64_t sub_2191EC528(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result != 2) {
    return sub_2191E4A5C(a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_2191EC54C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result != 2) {
    return sub_2191EC570(a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_2191EC570(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_2191E4E14(result, a2);
    return sub_2191E4E6C(a3, a4);
  }
  return result;
}

double sub_2191EC5C0@<D0>(uint64_t a1@<X8>)
{
  ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.prf.getter((uint64_t)v5);
  uint64_t v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

char *keypath_get_selector___largeBlobSwift()
{
  return sel___largeBlobSwift;
}

id sub_2191EC614@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel___largeBlobSwift);
  *a2 = result;
  return result;
}

id sub_2191EC650(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel___setLargeBlobSwift_, *a1);
}

char *keypath_get_selector___prfSwift()
{
  return sel___prfSwift;
}

id sub_2191EC670@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel___prfSwift);
  *a2 = result;
  return result;
}

id sub_2191EC6AC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel___setPRFSwift_, *a1);
}

double static ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.read.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_219232DB0;
  return result;
}

uint64_t static ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.write(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_2191E4E14(a1, a2);
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.operation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2191E4E6C(v2, v3);
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.operation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_2191E4B04(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.operation.modify())()
{
  return nullsub_1;
}

void static ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.supportRequired.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.supportPreferred.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

BOOL static ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.SupportRequirement.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.SupportRequirement.hash(into:)()
{
  return sub_21922B8C8();
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.SupportRequirement.hashValue.getter()
{
  return sub_21922B8F8();
}

BOOL sub_2191EC7DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2191EC7F4()
{
  return sub_21922B8F8();
}

uint64_t sub_2191EC83C()
{
  return sub_21922B8C8();
}

uint64_t sub_2191EC868()
{
  return sub_21922B8F8();
}

void ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.supportRequirement.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.supportRequirement.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.supportRequirement.modify())()
{
  return nullsub_1;
}

uint64_t static ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.read(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 0;
  return sub_2191E4E6C(a1, a2);
}

uint64_t static ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.write(success:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result & 1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  return result;
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_2191EC918(v2, v3, v4);
}

uint64_t sub_2191EC918(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return sub_2191E4E6C(a1, a2);
  }
  return a1;
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.result.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_2191E66C4(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  return result;
}

uint64_t (*ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.result.modify())()
{
  return nullsub_1;
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput.isSupported.getter()
{
  return *v0;
}

uint64_t ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput.isSupported.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput.isSupported.modify())()
{
  return nullsub_1;
}

uint64_t ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.largeBlob.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_21922B278();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = sub_21922B2A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F20);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(v1, sel_extensions);
  sub_21922B2B8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v16, (uint64_t *)&unk_267C10F20);
    char v19 = 2;
LABEL_6:
    *a1 = v19;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  sub_2191E36D4((uint64_t)v16, (uint64_t *)&unk_267C10F20);
  sub_21922B298();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v20 == *MEMORY[0x263F29378] || v20 == *MEMORY[0x263F29380])
  {
    char v19 = v20 != *MEMORY[0x263F29378];
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
  uint64_t result = sub_21922B738();
  __break(1u);
  return result;
}

void ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.largeBlob.setter(unsigned __int8 *a1)
{
  uint64_t v3 = sub_21922B278();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F20);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a1;
  id v11 = objc_msgSend(v1, sel_extensions);
  if (v10 == 2)
  {
    uint64_t v12 = sub_21922B2A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
  }
  else
  {
    uint64_t v13 = (unsigned int *)MEMORY[0x263F29378];
    if (v10) {
      uint64_t v13 = (unsigned int *)MEMORY[0x263F29380];
    }
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v13, v3);
    sub_21922B288();
    uint64_t v14 = sub_21922B2A8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  }
  sub_21922B2C8();
}

void (*ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.largeBlob.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  *(void *)uint64_t v3 = v1;
  uint64_t v4 = sub_21922B278();
  *((void *)v3 + 1) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *((void *)v3 + 2) = v5;
  size_t v6 = *(void *)(v5 + 64);
  *((void *)v3 + 3) = malloc(v6);
  *((void *)v3 + 4) = malloc(v6);
  size_t v7 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F20) - 8) + 64);
  *((void *)v3 + 5) = malloc(v7);
  *((void *)v3 + 6) = malloc(v7);
  ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.largeBlob.getter((char *)v3 + 56);
  return sub_2191ECFB8;
}

void sub_2191ECFB8(id **a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *((unsigned __int8 *)*a1 + 56);
  id v5 = objc_msgSend(**a1, sel_extensions);
  if (a2)
  {
    if (v4 == 2)
    {
      uint64_t v6 = 1;
    }
    else
    {
      uint64_t v8 = (unsigned int *)MEMORY[0x263F29378];
      if (v4) {
        uint64_t v8 = (unsigned int *)MEMORY[0x263F29380];
      }
      (*((void (**)(id, void, id))v3[2] + 13))(v3[3], *v8, v3[1]);
      sub_21922B288();
      uint64_t v6 = 0;
    }
    id v9 = v3[5];
    id v10 = v3[6];
    id v12 = v3[3];
    id v11 = v3[4];
    uint64_t v13 = sub_21922B2A8();
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, v6, 1, v13);
    id v14 = v9;
  }
  else
  {
    if (v4 == 2)
    {
      uint64_t v7 = 1;
    }
    else
    {
      uint64_t v15 = (unsigned int *)MEMORY[0x263F29378];
      if (v4) {
        uint64_t v15 = (unsigned int *)MEMORY[0x263F29380];
      }
      (*((void (**)(id, void, id))v3[2] + 13))(v3[4], *v15, v3[1]);
      sub_21922B288();
      uint64_t v7 = 0;
    }
    id v14 = v3[5];
    id v16 = v3[6];
    id v12 = v3[3];
    id v11 = v3[4];
    uint64_t v17 = sub_21922B2A8();
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, v7, 1, v17);
    id v10 = v16;
  }
  sub_21922B2C8();

  free(v10);
  free(v14);
  free(v11);
  free(v12);

  free(v3);
}

uint64_t ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.largeBlob.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_21922B0D8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_21922B108();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A10);
  MEMORY[0x270FA5388](v14 - 8);
  id v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(v1, sel_extensions);
  sub_21922B118();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v16, &qword_267C10A10);
    uint64_t v19 = 0;
    unint64_t v20 = 0xB000000000000000;
LABEL_8:
    *a1 = v19;
    a1[1] = v20;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  sub_2191E36D4((uint64_t)v16, &qword_267C10A10);
  sub_21922B0F8();
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  int v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v7, v3);
  if (v21 == *MEMORY[0x263F29350])
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
    uint64_t v19 = *v7;
    unint64_t v20 = v7[1];
LABEL_7:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_8;
  }
  if (v21 == *MEMORY[0x263F29348])
  {
    uint64_t v19 = 0;
    unint64_t v20 = 0xF000000000000000;
    goto LABEL_7;
  }
  uint64_t result = sub_21922B738();
  __break(1u);
  return result;
}

void ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.largeBlob.setter(uint64_t *a1)
{
  uint64_t v3 = sub_21922B0D8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A10);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  unint64_t v10 = a1[1];
  id v12 = objc_msgSend(v1, sel_extensions);
  if (v10 >> 60 == 11)
  {
    uint64_t v13 = sub_21922B108();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  else
  {
    if (v10 >> 60 == 15)
    {
      uint64_t v14 = (unsigned int *)MEMORY[0x263F29348];
    }
    else
    {
      *uint64_t v6 = v11;
      v6[1] = v10;
      uint64_t v14 = (unsigned int *)MEMORY[0x263F29350];
    }
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *v14, v3);
    sub_21922B0E8();
    uint64_t v15 = sub_21922B108();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  sub_21922B128();
}

void (*ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.largeBlob.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[2] = v1;
  uint64_t v4 = sub_21922B0D8();
  v3[3] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[4] = v5;
  size_t v6 = *(void *)(v5 + 64);
  void v3[5] = malloc(v6);
  v3[6] = malloc(v6);
  size_t v7 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C10A10) - 8) + 64);
  v3[7] = malloc(v7);
  v3[8] = malloc(v7);
  ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.largeBlob.getter(v3);
  return sub_2191ED7E0;
}

void sub_2191ED7E0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  unint64_t v3 = (*a1)[1];
  uint64_t v5 = (void *)(*a1)[2];
  if (a2)
  {
    sub_2191EDA10(**a1, v3);
    id v6 = objc_msgSend(v5, sel_extensions);
    if (v3 >> 60 == 11)
    {
      uint64_t v7 = 1;
    }
    else
    {
      uint64_t v11 = v2[4];
      unint64_t v10 = (uint64_t *)v2[5];
      uint64_t v12 = v2[3];
      if (v3 >> 60 == 15)
      {
        uint64_t v13 = (unsigned int *)MEMORY[0x263F29348];
      }
      else
      {
        uint64_t *v10 = v4;
        v10[1] = v3;
        uint64_t v13 = (unsigned int *)MEMORY[0x263F29350];
      }
      (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v10, *v13, v12);
      sub_21922B0E8();
      uint64_t v7 = 0;
    }
    uint64_t v19 = (void *)v2[7];
    unint64_t v18 = (void *)v2[8];
    int v21 = (void *)v2[5];
    unint64_t v20 = (void *)v2[6];
    uint64_t v22 = sub_21922B108();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, v7, 1, v22);
    sub_21922B128();

    sub_2191EDA24(*v2, v2[1]);
  }
  else
  {
    id v8 = objc_msgSend((id)(*a1)[2], sel_extensions);
    if (v3 >> 60 == 11)
    {
      uint64_t v9 = 1;
    }
    else
    {
      uint64_t v14 = (uint64_t *)v2[6];
      uint64_t v15 = v2[3];
      uint64_t v16 = v2[4];
      if (v3 >> 60 == 15)
      {
        id v17 = (unsigned int *)MEMORY[0x263F29348];
      }
      else
      {
        uint64_t *v14 = v4;
        v14[1] = v3;
        id v17 = (unsigned int *)MEMORY[0x263F29350];
      }
      (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v14, *v17, v15);
      sub_21922B0E8();
      uint64_t v9 = 0;
    }
    uint64_t v19 = (void *)v2[7];
    unint64_t v18 = (void *)v2[8];
    int v21 = (void *)v2[5];
    unint64_t v20 = (void *)v2[6];
    uint64_t v23 = sub_21922B108();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, v9, 1, v23);
    sub_21922B128();
  }
  free(v18);
  free(v19);
  free(v20);
  free(v21);

  free(v2);
}

uint64_t sub_2191EDA10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_2191E4E6C(a1, a2);
  }
  return a1;
}

uint64_t sub_2191EDA24(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_2191E4B04(a1, a2);
  }
  return a1;
}

void ASAuthorizationPlatformPublicKeyCredentialRegistration.largeBlob.getter(char *a1@<X8>)
{
  uint64_t v3 = sub_21922B378();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D10);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v1, sel_coreCredential);
  id v11 = objc_msgSend(v10, sel_extensions);

  if (v11)
  {
    sub_21922B388();

    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
      sub_2191E36D4((uint64_t)v9, &qword_267C10D10);
      char v13 = sub_21922B368();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      char v12 = v13 & 1;
      goto LABEL_6;
    }
    sub_2191E36D4((uint64_t)v9, &qword_267C10D10);
  }
  char v12 = 2;
LABEL_6:
  *a1 = v12;
}

void ASAuthorizationPlatformPublicKeyCredentialAssertion.largeBlob.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21922B1A8();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  id v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_21922B1D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C70);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(v1, sel_coreCredential);
  id v17 = objc_msgSend(v16, sel_extensions);

  if (!v17) {
    goto LABEL_4;
  }
  sub_21922B1E8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    sub_2191E36D4((uint64_t)v15, &qword_267C10C70);
LABEL_4:
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = -1;
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_2191E36D4((uint64_t)v15, &qword_267C10C70);
  sub_21922B1C8();
  uint64_t v18 = v26;
  (*(void (**)(uint64_t *, char *, uint64_t))(v26 + 16))(v6, v8, v3);
  int v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 88))(v6, v3);
  int v20 = v19;
  int v21 = *MEMORY[0x263F29368];
  if (v19 == *MEMORY[0x263F29368])
  {
    (*(void (**)(uint64_t *, uint64_t))(v18 + 96))(v6, v3);
    uint64_t v22 = v18;
    uint64_t v23 = v6[1];
    uint64_t v24 = *v6;
  }
  else
  {
    if (v19 != *MEMORY[0x263F29370])
    {
      sub_21922B738();
      __break(1u);
      return;
    }
    (*(void (**)(uint64_t *, uint64_t))(v18 + 96))(v6, v3);
    uint64_t v22 = v18;
    uint64_t v23 = 0;
    uint64_t v24 = *(unsigned __int8 *)v6;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)a1 = v24;
  *(void *)(a1 + 8) = v23;
  *(unsigned char *)(a1 + 16) = v20 != v21;
}

unint64_t sub_2191EDFC4()
{
  unint64_t result = qword_267C10D70;
  if (!qword_267C10D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10D70);
  }
  return result;
}

uint64_t sub_2191EE018@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.largeBlob.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_2191EE054(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.largeBlob.setter(&v1);
}

double sub_2191EE08C@<D0>(_OWORD *a1@<X8>)
{
  ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.largeBlob.getter(&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

void sub_2191EE0C8(uint64_t *a1)
{
  unint64_t v1 = a1[1];
  v2[0] = *a1;
  v2[1] = v1;
  sub_2191EDA10(v2[0], v1);
  ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.largeBlob.setter(v2);
}

uint64_t *destroy for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_2191E4AAC(*result, v1);
  }
  return result;
}

uint64_t _s22AuthenticationServices57ASAuthorizationPublicKeyCredentialLargeBlobAssertionInputVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_2191E4E14(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_2191E4E14(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_2191E4AAC(v7, v8);
      return a1;
    }
    sub_2191EE22C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_2191E4E14(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t sub_2191EE22C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *assignWithTake for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_2191E4AAC(v6, v4);
      return a1;
    }
    sub_2191EE22C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput;
}

uint64_t *destroy for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation(uint64_t *result)
{
  unint64_t v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0) {
    return (uint64_t *)sub_2191E4AAC(*result, v1);
  }
  return result;
}

uint64_t _s22AuthenticationServices57ASAuthorizationPublicKeyCredentialLargeBlobAssertionInputV9OperationOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2[1];
  if ((v3 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_2191E4E14(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  unint64_t v5 = a2[1];
  uint64_t v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) == 0)
  {
    if (!v6)
    {
      uint64_t v9 = *a2;
      sub_2191E4E14(v9, v5);
      uint64_t v10 = *a1;
      unint64_t v11 = a1[1];
      *a1 = v9;
      a1[1] = v5;
      sub_2191E4AAC(v10, v11);
      return a1;
    }
    sub_2191E4AAC(*a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v7 = *a2;
  sub_2191E4E14(v7, v5);
  *a1 = v7;
  a1[1] = v5;
  return a1;
}

uint64_t *assignWithTake for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if ((v4 & 0x3000000000000000) == 0)
  {
    uint64_t v5 = a2[1];
    if ((v5 & 0x3000000000000000) == 0)
    {
      uint64_t v7 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_2191E4AAC(v7, v4);
      return a1;
    }
    sub_2191E4AAC(*a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_2191EE5C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 60;
  if (((4 * v1) & 0xC) != 0) {
    return 16 - ((4 * v1) & 0xC | (v1 >> 2));
  }
  else {
    return 0;
  }
}

void *sub_2191EE5E8(void *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *__n128 result = a2 - 13;
    result[1] = 0;
  }
  else if (a2)
  {
    *__n128 result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput;
}

uint64_t getEnumTagSinglePayload for ASPublicKeyCredentialClientData.CrossOriginValue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22AuthenticationServices60ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInputV18SupportRequirementOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2191EE7ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2191EE7D4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2191EE7DC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.SupportRequirement()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.SupportRequirement;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput;
}

uint64_t destroy for ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.OperationResult(uint64_t a1)
{
  return sub_2191E66C4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s22AuthenticationServices58ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutputV15OperationResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2191EC918(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s22AuthenticationServices58ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutputV15OperationResultOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_2191EC918(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_2191E66C4(v6, v7, v8);
  return a1;
}

uint64_t _s22AuthenticationServices58ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutputV15OperationResultOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_2191E66C4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.Service(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext.Service(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2191EE9B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2191EE9C0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.OperationResult()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.OperationResult;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2191EEB48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput;
}

uint64_t sub_2191EEB8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21922B0D8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unsigned int v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v16 - v7;
  id v9 = objc_msgSend(v1, sel_operation);
  if (v9 == (id)1)
  {
    id v10 = objc_msgSend(v1, sel_dataToWrite);
    if (v10)
    {
      unint64_t v11 = v10;
      uint64_t v12 = sub_21922AE08();
      uint64_t v14 = v13;

      *unsigned int v6 = v12;
      v6[1] = v14;
      (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F29350], v2);
      return sub_21922B0E8();
    }
    __break(1u);
  }
  else if (!v9)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v8, *MEMORY[0x263F29348], v2);
    return sub_21922B0E8();
  }
  uint64_t result = sub_21922B738();
  __break(1u);
  return result;
}

uint64_t WBSSavedAccountStore.importableItems(for:)(uint64_t a1)
{
  v2[68] = v1;
  v2[67] = a1;
  uint64_t v3 = type metadata accessor for ASImportableItem(0);
  v2[69] = v3;
  v2[70] = *(void *)(v3 - 8);
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D80);
  v2[73] = swift_task_alloc();
  v2[74] = swift_task_alloc();
  uint64_t v4 = sub_21922AE58();
  v2[75] = v4;
  v2[76] = *(void *)(v4 - 8);
  v2[77] = swift_task_alloc();
  v2[78] = swift_task_alloc();
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  uint64_t v5 = sub_21922AEA8();
  v2[81] = v5;
  v2[82] = *(void *)(v5 - 8);
  v2[83] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2191EEF4C, 0, 0);
}

uint64_t sub_2191EEF4C()
{
  unint64_t v1 = *(void *)(v0 + 536);
  if (v1 >> 62)
  {
LABEL_80:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_21922B748();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  *(void *)(v0 + 672) = v2;
  if (v2)
  {
    unint64_t v3 = MEMORY[0x263F8EE78];
    uint64_t v4 = 0;
    uint64_t v138 = v0 + 16;
    uint64_t v139 = v0 + 272;
    v140 = (uint64_t *)(v0 + 528);
    uint64_t v141 = v0 + 400;
    while (1)
    {
      *(void *)(v0 + 680) = v3;
      uint64_t v5 = *(void *)(v0 + 536);
      if ((v5 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x21D483640](v4);
      }
      else {
        id v6 = *(id *)(v5 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      *(void *)(v0 + 688) = v6;
      *(void *)(v0 + 696) = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
        return sub_21922B728();
      }
      id v8 = objc_msgSend(v6, sel_user);
      if (!v8)
      {

        goto LABEL_6;
      }
      id v9 = v8;
      uint64_t v10 = *(void *)(v0 + 664);
      uint64_t v11 = *(void *)(v0 + 656);
      uint64_t v12 = *(void *)(v0 + 648);
      uint64_t v13 = sub_21922B468();
      uint64_t v15 = v14;

      uint64_t v148 = v13;
      *(void *)(v0 + 704) = v13;
      uint64_t v151 = v15;
      *(void *)(v0 + 712) = v15;
      sub_21922AE98();
      uint64_t v16 = sub_21922AE68();
      unint64_t v18 = v17;
      int v19 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      uint64_t v146 = v16;
      *(void *)(v0 + 720) = v16;
      *(void *)(v0 + 728) = v17;
      v19(v10, v12);
      id v20 = objc_msgSend(v7, sel_lastModifiedDate);
      v149 = v7;
      if (!v20) {
        break;
      }
      int v21 = v20;
      uint64_t v22 = *(void *)(v0 + 632);
      uint64_t v23 = *(void *)(v0 + 608);
      uint64_t v24 = *(void *)(v0 + 600);
      uint64_t v25 = *(void *)(v0 + 592);
      sub_21922AE38();

      uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
      v26(v25, v22, v24);
      unsigned __int8 v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v27(v25, 0, 1, v24);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v24) == 1)
      {
        uint64_t v7 = v149;
LABEL_16:
        uint64_t v28 = *(void *)(v0 + 592);
        sub_21922AE48();
        sub_2191F0FBC(v28);
        goto LABEL_18;
      }
      v26(*(void *)(v0 + 640), *(void *)(v0 + 592), *(void *)(v0 + 600));
      uint64_t v7 = v149;
LABEL_18:
      id v29 = objc_msgSend(v7, sel_creationDate);
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v31 = *(void *)(v0 + 632);
        uint64_t v32 = *(void *)(v0 + 608);
        uint64_t v33 = *(void *)(v0 + 600);
        uint64_t v34 = *(void *)(v0 + 584);
        sub_21922AE38();

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34, v31, v33);
        uint64_t v35 = 0;
      }
      else
      {
        uint64_t v35 = 1;
      }
      uint64_t v36 = *(void *)(v0 + 640);
      uint64_t v37 = *(void *)(v0 + 616);
      uint64_t v38 = *(void *)(v0 + 608);
      uint64_t v39 = *(void *)(v0 + 600);
      uint64_t v40 = *(void *)(v0 + 584);
      v27(v40, v35, 1, v39);
      int v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
      v41(v37, v36, v39);
      int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v39);
      uint64_t v43 = *(void *)(v0 + 624);
      uint64_t v44 = *(void *)(v0 + 616);
      uint64_t v45 = *(void *)(v0 + 608);
      uint64_t v46 = *(void *)(v0 + 600);
      uint64_t v47 = *(void *)(v0 + 584);
      v143 = v19;
      if (v42 == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v44, v46);
        sub_2191F0FBC(v47);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v47, v46);
      }
      uint64_t v48 = v149;
      uint64_t v49 = *(void *)(v0 + 640);
      uint64_t v50 = *(void *)(v0 + 600);
      v51 = *(uint64_t **)(v0 + 576);
      v52 = *(int **)(v0 + 552);
      v41((uint64_t)v51 + v52[5], *(void *)(v0 + 624), v50);
      v41((uint64_t)v51 + v52[6], v49, v50);
      sub_2191E4E14(v146, v18);
      id v53 = objc_msgSend(v149, sel_effectiveTitle);
      uint64_t v54 = sub_21922B468();
      uint64_t v56 = v55;

      v57 = (uint64_t *)((char *)v51 + v52[9]);
      uint64_t *v51 = v146;
      v51[1] = v18;
      *((unsigned char *)v51 + v52[7]) = 0;
      v58 = (uint64_t *)((char *)v51 + v52[8]);
      uint64_t *v58 = v54;
      v58[1] = v56;
      void *v57 = 0;
      v57[1] = 0;
      uint64_t v59 = v52[10];
      *(_DWORD *)(v0 + 140) = v59;
      v60 = (void *)MEMORY[0x263F8EE78];
      uint64_t v145 = v59;
      v147 = v51;
      *(uint64_t *)((char *)v51 + v59) = MEMORY[0x263F8EE78];
      *(uint64_t *)((char *)v51 + v52[11]) = (uint64_t)v60;
      id v61 = objc_msgSend(v149, sel_password);
      if (v61)
      {
        v62 = v61;
        uint64_t v63 = *(void *)(v0 + 664);
        uint64_t v64 = *(void *)(v0 + 648);
        uint64_t v144 = sub_21922B468();
        uint64_t v142 = v65;

        sub_21922AE98();
        uint64_t v66 = sub_21922AE68();
        unint64_t v68 = v67;
        v143(v63, v64);
        sub_21922AE98();
        uint64_t v69 = sub_21922AE68();
        unint64_t v71 = v70;
        v143(v63, v64);
        uint64_t v72 = v69;
        swift_bridgeObjectRetain();
        sub_2191E4E14(v69, v71);
        sub_2191E4E14(v66, v68);
        id v73 = objc_msgSend(v149, sel_userVisibleSites);
        if (v73)
        {
          v74 = v73;
          uint64_t v75 = sub_21922B4E8();
        }
        else
        {
          uint64_t v75 = MEMORY[0x263F8EE78];
        }
        uint64_t *v140 = v75;
        id v77 = objc_msgSend(v149, sel_additionalSites);
        uint64_t v78 = sub_21922B4E8();

        sub_2191F8DA8(v78);
        uint64_t v79 = *v140;
        v76 = *(void **)((char *)v147 + v145);
        sub_2191E4E14(v66, v68);
        swift_bridgeObjectRetain();
        sub_2191E4E14(v72, v71);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2191F19B0(v66, v68, 0, v148, v151);
        sub_2191F19B0(v72, v71, 1, v144, v142);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v76 = sub_2191F16FC(0, v76[2] + 1, 1, v76);
        }
        unint64_t v81 = v76[2];
        unint64_t v80 = v76[3];
        if (v81 >= v80 >> 1) {
          v76 = sub_2191F16FC((void *)(v80 > 1), v81 + 1, 1, v76);
        }
        *(void *)(v0 + 400) = v79;
        *(void *)(v0 + 408) = v66;
        *(void *)(v0 + 416) = v68;
        *(void *)(v0 + 424) = 0;
        *(void *)(v0 + 432) = v148;
        *(void *)(v0 + 440) = v151;
        *(void *)(v0 + 448) = 0;
        *(void *)(v0 + 456) = 0;
        *(void *)(v0 + 464) = v72;
        *(void *)(v0 + 472) = v71;
        *(void *)(v0 + 480) = 1;
        *(void *)(v0 + 488) = v144;
        *(void *)(v0 + 496) = v142;
        *(void *)(v0 + 504) = 0;
        *(void *)(v0 + 512) = 0;
        sub_2191F19FC(v141);
        v76[2] = v81 + 1;
        sub_2191F1818(v141, (uint64_t)&v76[16 * v81 + 4]);
        sub_2191E4AAC(v66, v68);
        sub_2191E4AAC(v72, v71);
        sub_2191E4AAC(v66, v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2191E4AAC(v72, v71);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2191F1A04(v66, v68, 0, v148, v151);
        sub_2191F1A04(v72, v71, 1, v144, v142);
        *(uint64_t *)((char *)v147 + v145) = (uint64_t)v76;
        uint64_t v48 = v149;
      }
      else
      {
        v76 = v60;
      }
      id v82 = objc_msgSend(v48, sel_totpGenerators);
      sub_2191F101C();
      unint64_t v83 = sub_21922B4E8();

      if (v83 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v98 = sub_21922B748();
        swift_bridgeObjectRelease();
        if (v98)
        {
LABEL_36:
          if ((v83 & 0xC000000000000001) != 0)
          {
            id v84 = (id)MEMORY[0x21D483640](0, v83);
          }
          else
          {
            if (!*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_80;
            }
            id v84 = *(id *)(v83 + 32);
          }
          v85 = v84;
          swift_bridgeObjectRelease();
          id v86 = objc_msgSend(v85, sel_algorithm);
          if (v86 == (id)2) {
            char v87 = 2;
          }
          else {
            char v87 = v86 == (id)1;
          }
          id v88 = objc_msgSend(v85, sel_keyData);
          uint64_t v89 = sub_21922AE08();
          unint64_t v91 = v90;

          unint64_t v92 = (unint64_t)objc_msgSend(v85, sel_codeGenerationPeriod);
          if ((v92 & 0x8000000000000000) != 0) {
            return sub_21922B728();
          }
          __int16 v93 = v92;
          if (v92 >> 16) {
            return sub_21922B728();
          }
          unint64_t v94 = (unint64_t)objc_msgSend(v85, sel_numberOfDigitsInCode);
          if ((v94 & 0x8000000000000000) != 0) {
            return sub_21922B728();
          }
          __int16 v95 = v94;
          if (v94 >= 0x10000) {
            return sub_21922B728();
          }
          swift_bridgeObjectRetain();
          sub_2191E4E14(v89, v91);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v76 = sub_2191F16FC(0, v76[2] + 1, 1, v76);
          }
          unint64_t v97 = v76[2];
          unint64_t v96 = v76[3];
          if (v97 >= v96 >> 1) {
            v76 = sub_2191F16FC((void *)(v96 > 1), v97 + 1, 1, v76);
          }
          *(void *)(v0 + 16) = v89;
          *(void *)(v0 + 24) = v91;
          *(_WORD *)(v0 + 32) = v93;
          *(_WORD *)(v0 + 34) = v95;
          *(void *)(v0 + 40) = v148;
          *(void *)(v0 + 48) = v151;
          *(unsigned char *)(v0 + 56) = v87;
          *(void *)(v0 + 64) = 0;
          *(void *)(v0 + 72) = 0;
          sub_2191F180C(v138);
          v76[2] = v97 + 1;
          sub_2191F1818(v138, (uint64_t)&v76[16 * v97 + 4]);
          sub_2191E4AAC(v89, v91);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          *(uint64_t *)((char *)v147 + v145) = (uint64_t)v76;
          uint64_t v48 = v149;
          goto LABEL_53;
        }
      }
      else if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
LABEL_53:
      id v99 = objc_msgSend(v48, sel_notesEntry);
      if (v99)
      {
        v100 = v99;
        uint64_t v101 = sub_21922B468();
        uint64_t v103 = v102;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v76 = sub_2191F16FC(0, v76[2] + 1, 1, v76);
        }
        unint64_t v105 = v76[2];
        unint64_t v104 = v76[3];
        if (v105 >= v104 >> 1) {
          v76 = sub_2191F16FC((void *)(v104 > 1), v105 + 1, 1, v76);
        }
        *(void *)(v0 + 272) = v101;
        *(void *)(v0 + 280) = v103;
        sub_2191F19A4(v139);
        v76[2] = v105 + 1;
        sub_2191F1818(v139, (uint64_t)&v76[16 * v105 + 4]);
        *(uint64_t *)((char *)v147 + v145) = (uint64_t)v76;
      }
      id v106 = objc_msgSend(v48, sel_passkeyCredentialID);
      if (v106)
      {
        v107 = v106;
        uint64_t v108 = sub_21922B468();
        uint64_t v110 = v109;

        *(void *)(v0 + 736) = v108;
        *(void *)(v0 + 744) = v110;
        id v111 = objc_msgSend(v48, sel_passkeyRelyingPartyID);
        if (v111)
        {
          v112 = v111;
          uint64_t v113 = sub_21922B468();
          uint64_t v115 = v114;

          *(void *)(v0 + 752) = v113;
          *(void *)(v0 + 760) = v115;
          id v116 = objc_msgSend(v48, sel_passkeyUserHandle);
          if (v116)
          {
            v132 = v116;
            uint64_t v133 = sub_21922B468();
            uint64_t v135 = v134;

            *(void *)(v0 + 768) = v133;
            *(void *)(v0 + 776) = v135;
            v136 = (void *)swift_task_alloc();
            *(void *)(v0 + 784) = v136;
            void *v136 = v0;
            v136[1] = sub_2191EFDDC;
            uint64_t v137 = *(void *)(v0 + 544);
            v136[8] = v110;
            v136[9] = v137;
            v136[7] = v108;
            return MEMORY[0x270FA2498](sub_2191F1080, 0, 0);
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_2191F1874(*(void *)(v0 + 576), *(void *)(v0 + 568));
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v118 = *(void *)(v0 + 680);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v118 = sub_2191F1494(0, *(void *)(v118 + 16) + 1, 1, *(void *)(v0 + 680));
      }
      unint64_t v120 = *(void *)(v118 + 16);
      unint64_t v119 = *(void *)(v118 + 24);
      if (v120 >= v119 >> 1) {
        unint64_t v118 = sub_2191F1494(v119 > 1, v120 + 1, 1, v118);
      }
      unint64_t v121 = *(void *)(v0 + 728);
      uint64_t v122 = *(void *)(v0 + 720);
      v123 = *(void **)(v0 + 688);
      uint64_t v150 = *(void *)(v0 + 624);
      uint64_t v152 = *(void *)(v0 + 640);
      uint64_t v124 = *(void *)(v0 + 608);
      uint64_t v125 = *(void *)(v0 + 600);
      uint64_t v126 = *(void *)(v0 + 576);
      uint64_t v127 = *(void *)(v0 + 568);
      uint64_t v128 = *(void *)(v0 + 560);
      *(void *)(v118 + 16) = v120 + 1;
      sub_2191F18D8(v127, v118+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(void *)(v128 + 72) * v120);

      sub_2191E4AAC(v122, v121);
      sub_2191F193C(v126);
      v129 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
      v129(v150, v125);
      v129(v152, v125);
      unint64_t v3 = v118;
LABEL_6:
      uint64_t v4 = *(void *)(v0 + 696);
      if (v4 == *(void *)(v0 + 672)) {
        goto LABEL_71;
      }
    }
    unsigned __int8 v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 608) + 56);
    v27(*(void *)(v0 + 592), 1, 1, *(void *)(v0 + 600));
    goto LABEL_16;
  }
  unint64_t v3 = MEMORY[0x263F8EE78];
LABEL_71:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v130 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v130(v3);
}

uint64_t sub_2191EFDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 792) = a1;
  *(void *)(v3 + 800) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2191EFEE0, 0, 0);
}

uint64_t sub_2191EFEE0()
{
  uint64_t v141 = v0 + 16;
  uint64_t v142 = v0 + 272;
  uint64_t v144 = v0 + 400;
  if (*(void *)(v0 + 800) >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = sub_21922ADE8();
    unint64_t v3 = v2;
    swift_bridgeObjectRelease();
    if (v3 >> 60 == 15)
    {
      sub_2191E4B04(*(void *)(v0 + 792), *(void *)(v0 + 800));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = sub_21922ADE8();
      unint64_t v6 = v5;
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v0 + 800);
      uint64_t v8 = *(void *)(v0 + 792);
      if (v6 >> 60 == 15)
      {
        sub_2191E4B04(*(void *)(v0 + 792), *(void *)(v0 + 800));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2191E4B04(v1, v3);
      }
      else
      {
        uint64_t v158 = v0 + 144;
        id v9 = *(void **)(*(void *)(v0 + 576) + *(int *)(v0 + 140));
        swift_bridgeObjectRetain();
        sub_2191E4E6C(v1, v3);
        sub_2191E4E6C(v4, v6);
        sub_2191E4E6C(v8, v7);
        sub_2191E4E14(v1, v3);
        swift_bridgeObjectRetain();
        uint64_t v10 = v9;
        swift_bridgeObjectRetain_n();
        sub_2191E4E14(v4, v6);
        sub_2191E4E14(v8, v7);
        uint64_t v11 = v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_86:
        }
          uint64_t v10 = sub_2191F16FC(0, v10[2] + 1, 1, v10);
        unint64_t v13 = v10[2];
        unint64_t v12 = v10[3];
        if (v13 >= v12 >> 1) {
          v160 = sub_2191F16FC((void *)(v12 > 1), v13 + 1, 1, v10);
        }
        else {
          v160 = v10;
        }
        uint64_t v14 = *(void *)(v0 + 792);
        unint64_t v145 = *(void *)(v0 + 800);
        uint64_t v148 = *(void *)(v0 + 760);
        uint64_t v15 = *(void *)(v0 + 752);
        uint64_t v155 = *(int *)(v0 + 140);
        uint64_t v16 = *(void *)(v0 + 712);
        uint64_t v17 = *(void *)(v0 + 704);
        uint64_t v152 = *(void *)(v0 + 576);
        *(void *)(v0 + 144) = v1;
        *(void *)(v0 + 152) = v3;
        *(void *)(v0 + 160) = v15;
        *(void *)(v0 + 168) = v148;
        *(void *)(v0 + 176) = v17;
        *(void *)(v0 + 184) = v16;
        *(void *)(v0 + 192) = v17;
        *(void *)(v0 + 200) = v16;
        *(void *)(v0 + 208) = v11;
        *(void *)(v0 + 216) = v6;
        *(void *)(v0 + 224) = v14;
        *(void *)(v0 + 232) = v145;
        sub_2191F1998(v158);
        v160[2] = v13 + 1;
        sub_2191F1818(v158, (uint64_t)&v160[16 * v13 + 4]);
        sub_2191E4B04(v1, v3);
        sub_2191E4B04(v11, v6);
        sub_2191E4B04(v14, v145);
        sub_2191E4AAC(v1, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_2191E4AAC(v11, v6);
        sub_2191E4AAC(v14, v145);
        *(void *)(v152 + v155) = v160;
      }
    }
  }
  v143 = (uint64_t *)(v0 + 528);
  while (2)
  {
    sub_2191F1874(*(void *)(v0 + 576), *(void *)(v0 + 568));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = *(void *)(v0 + 680);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v19 = sub_2191F1494(0, *(void *)(v19 + 16) + 1, 1, *(void *)(v0 + 680));
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1) {
      unint64_t v19 = sub_2191F1494(v20 > 1, v21 + 1, 1, v19);
    }
    unint64_t v22 = *(void *)(v0 + 728);
    uint64_t v23 = *(void *)(v0 + 720);
    uint64_t v24 = *(void **)(v0 + 688);
    uint64_t v159 = *(void *)(v0 + 624);
    uint64_t v161 = *(void *)(v0 + 640);
    uint64_t v25 = *(void *)(v0 + 608);
    uint64_t v26 = *(void *)(v0 + 600);
    uint64_t v27 = *(void *)(v0 + 576);
    uint64_t v28 = *(void *)(v0 + 568);
    uint64_t v29 = *(void *)(v0 + 560);
    *(void *)(v19 + 16) = v21 + 1;
    sub_2191F18D8(v28, v19+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v21);

    sub_2191E4AAC(v23, v22);
    sub_2191F193C(v27);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v30(v159, v26);
    v30(v161, v26);
    uint64_t v31 = *(void *)(v0 + 696);
    if (v31 == *(void *)(v0 + 672))
    {
LABEL_77:
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v132 = *(uint64_t (**)(unint64_t))(v0 + 8);
      return v132(v19);
    }
    else
    {
      while (1)
      {
        *(void *)(v0 + 680) = v19;
        uint64_t v32 = *(void *)(v0 + 536);
        if ((v32 & 0xC000000000000001) != 0) {
          id v33 = (id)MEMORY[0x21D483640](v31);
        }
        else {
          id v33 = *(id *)(v32 + 8 * v31 + 32);
        }
        uint64_t v34 = v33;
        *(void *)(v0 + 688) = v33;
        *(void *)(v0 + 696) = v31 + 1;
        if (__OFADD__(v31, 1))
        {
          __break(1u);
LABEL_81:
          uint64_t v134 = v33;
          uint64_t v135 = sub_21922B468();
          uint64_t v137 = v136;

          *(void *)(v0 + 768) = v135;
          *(void *)(v0 + 776) = v137;
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 784) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_2191EFDDC;
          uint64_t v139 = *(void *)(v0 + 544);
          v138[8] = v19;
          v138[9] = v139;
          v138[7] = v31;
          return MEMORY[0x270FA2498](sub_2191F1080, 0, 0);
        }
        id v35 = objc_msgSend(v33, sel_user);
        if (v35) {
          break;
        }

        uint64_t v31 = *(void *)(v0 + 696);
        if (v31 == *(void *)(v0 + 672)) {
          goto LABEL_77;
        }
      }
      uint64_t v36 = v35;
      uint64_t v37 = *(void *)(v0 + 664);
      uint64_t v38 = *(void *)(v0 + 656);
      uint64_t v39 = *(void *)(v0 + 648);
      uint64_t v40 = sub_21922B468();
      uint64_t v42 = v41;
      uint64_t v162 = v41;

      uint64_t v158 = v40;
      *(void *)(v0 + 704) = v40;
      *(void *)(v0 + 712) = v42;
      sub_21922AE98();
      uint64_t v43 = sub_21922AE68();
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      unint64_t v153 = v45;
      uint64_t v156 = v43;
      *(void *)(v0 + 720) = v43;
      *(void *)(v0 + 728) = v45;
      uint64_t v146 = v44;
      v44(v37, v39);
      id v46 = objc_msgSend(v34, sel_lastModifiedDate);
      if (v46)
      {
        uint64_t v47 = v46;
        uint64_t v48 = *(void *)(v0 + 632);
        uint64_t v49 = *(void *)(v0 + 608);
        uint64_t v50 = *(void *)(v0 + 600);
        uint64_t v51 = *(void *)(v0 + 592);
        sub_21922AE38();

        v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
        v52(v51, v48, v50);
        id v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
        v53(v51, 0, 1, v50);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v51, 1, v50) != 1)
        {
          v52(*(void *)(v0 + 640), *(void *)(v0 + 592), *(void *)(v0 + 600));
          goto LABEL_29;
        }
      }
      else
      {
        id v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 608) + 56);
        v53(*(void *)(v0 + 592), 1, 1, *(void *)(v0 + 600));
      }
      uint64_t v54 = *(void *)(v0 + 592);
      sub_21922AE48();
      sub_2191F0FBC(v54);
LABEL_29:
      id v55 = objc_msgSend(v34, sel_creationDate);
      if (v55)
      {
        uint64_t v56 = v55;
        uint64_t v57 = *(void *)(v0 + 632);
        uint64_t v58 = *(void *)(v0 + 608);
        uint64_t v59 = *(void *)(v0 + 600);
        uint64_t v60 = *(void *)(v0 + 584);
        sub_21922AE38();

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v60, v57, v59);
        uint64_t v61 = 0;
      }
      else
      {
        uint64_t v61 = 1;
      }
      uint64_t v62 = *(void *)(v0 + 640);
      uint64_t v63 = *(void *)(v0 + 616);
      uint64_t v64 = *(void *)(v0 + 608);
      uint64_t v65 = *(void *)(v0 + 600);
      uint64_t v66 = *(void *)(v0 + 584);
      v53(v66, v61, 1, v65);
      unint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
      v67(v63, v62, v65);
      int v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v66, 1, v65);
      uint64_t v69 = *(void *)(v0 + 624);
      uint64_t v70 = *(void *)(v0 + 608);
      uint64_t v71 = *(void *)(v0 + 600);
      uint64_t v72 = *(void *)(v0 + 584);
      if (v68 == 1)
      {
        (*(void (**)(void, void, void))(v70 + 32))(*(void *)(v0 + 624), *(void *)(v0 + 616), *(void *)(v0 + 600));
        sub_2191F0FBC(v72);
      }
      else
      {
        (*(void (**)(void, void))(v70 + 8))(*(void *)(v0 + 616), *(void *)(v0 + 600));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v69, v72, v71);
      }
      unint64_t v3 = MEMORY[0x263F8EE78];
      uint64_t v73 = *(void *)(v0 + 640);
      uint64_t v74 = *(void *)(v0 + 600);
      uint64_t v75 = *(uint64_t **)(v0 + 576);
      uint64_t v10 = *(void **)(v0 + 552);
      v67((uint64_t)v75 + *((int *)v10 + 5), *(void *)(v0 + 624), v74);
      v67((uint64_t)v75 + *((int *)v10 + 6), v73, v74);
      sub_2191E4E14(v156, v153);
      id v76 = objc_msgSend(v34, sel_effectiveTitle);
      unint64_t v6 = sub_21922B468();
      uint64_t v11 = v77;

      uint64_t v78 = (uint64_t *)((char *)v75 + *((int *)v10 + 9));
      *uint64_t v75 = v156;
      v75[1] = v153;
      *((unsigned char *)v75 + *((int *)v10 + 7)) = 0;
      uint64_t v79 = (unint64_t *)((char *)v75 + *((int *)v10 + 8));
      *uint64_t v79 = v6;
      v79[1] = v11;
      *uint64_t v78 = 0;
      v78[1] = 0;
      uint64_t v80 = *((int *)v10 + 10);
      *(_DWORD *)(v0 + 140) = v80;
      uint64_t v154 = v80;
      v157 = v75;
      *(uint64_t *)((char *)v75 + v80) = v3;
      *(uint64_t *)((char *)v75 + *((int *)v10 + 11)) = v3;
      id v81 = objc_msgSend(v34, sel_password);
      if (v81)
      {
        id v82 = v81;
        uint64_t v83 = *(void *)(v0 + 664);
        uint64_t v84 = *(void *)(v0 + 648);
        uint64_t v150 = sub_21922B468();
        uint64_t v140 = v85;

        sub_21922AE98();
        uint64_t v86 = sub_21922AE68();
        unint64_t v88 = v87;
        v146(v83, v84);
        sub_21922AE98();
        uint64_t v89 = sub_21922AE68();
        unint64_t v91 = v90;
        v146(v83, v84);
        uint64_t v92 = v86;
        swift_bridgeObjectRetain();
        unint64_t v147 = v91;
        uint64_t v149 = v89;
        sub_2191E4E14(v89, v91);
        sub_2191E4E14(v86, v88);
        id v93 = objc_msgSend(v34, sel_userVisibleSites);
        if (v93)
        {
          unint64_t v94 = v93;
          uint64_t v95 = sub_21922B4E8();
        }
        else
        {
          uint64_t v95 = MEMORY[0x263F8EE78];
        }
        uint64_t *v143 = v95;
        id v96 = objc_msgSend(v34, sel_additionalSites);
        uint64_t v97 = sub_21922B4E8();

        sub_2191F8DA8(v97);
        uint64_t v98 = *v143;
        unint64_t v3 = *(uint64_t *)((char *)v157 + v154);
        sub_2191E4E14(v86, v88);
        swift_bridgeObjectRetain();
        sub_2191E4E14(v149, v91);
        uint64_t v10 = (void *)v140;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2191F19B0(v92, v88, 0, v158, v162);
        sub_2191F19B0(v149, v91, 1, v150, v140);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v3 = (unint64_t)sub_2191F16FC(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
        }
        unint64_t v100 = *(void *)(v3 + 16);
        unint64_t v99 = *(void *)(v3 + 24);
        if (v100 >= v99 >> 1) {
          unint64_t v3 = (unint64_t)sub_2191F16FC((void *)(v99 > 1), v100 + 1, 1, (void *)v3);
        }
        *(void *)(v0 + 400) = v98;
        *(void *)(v0 + 408) = v92;
        *(void *)(v0 + 416) = v88;
        *(void *)(v0 + 424) = 0;
        *(void *)(v0 + 432) = v158;
        *(void *)(v0 + 440) = v162;
        *(void *)(v0 + 448) = 0;
        *(void *)(v0 + 456) = 0;
        unint64_t v6 = v149;
        uint64_t v11 = v147;
        *(void *)(v0 + 464) = v149;
        *(void *)(v0 + 472) = v147;
        *(void *)(v0 + 480) = 1;
        *(void *)(v0 + 488) = v150;
        *(void *)(v0 + 496) = v140;
        *(void *)(v0 + 504) = 0;
        *(void *)(v0 + 512) = 0;
        sub_2191F19FC(v144);
        *(void *)(v3 + 16) = v100 + 1;
        sub_2191F1818(v144, v3 + (v100 << 7) + 32);
        sub_2191E4AAC(v92, v88);
        sub_2191E4AAC(v149, v147);
        sub_2191E4AAC(v92, v88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2191E4AAC(v149, v147);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2191F1A04(v92, v88, 0, v158, v162);
        sub_2191F1A04(v149, v147, 1, v150, v140);
        *(uint64_t *)((char *)v157 + v154) = v3;
      }
      id v101 = objc_msgSend(v34, sel_totpGenerators);
      sub_2191F101C();
      unint64_t v102 = sub_21922B4E8();

      if (!(v102 >> 62))
      {
        uint64_t v1 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v1) {
          goto LABEL_47;
        }
LABEL_63:
        swift_bridgeObjectRelease();
LABEL_64:
        id v117 = objc_msgSend(v34, sel_notesEntry);
        if (v117)
        {
          unint64_t v118 = v117;
          uint64_t v119 = sub_21922B468();
          uint64_t v121 = v120;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v3 = (unint64_t)sub_2191F16FC(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
          }
          unint64_t v123 = *(void *)(v3 + 16);
          unint64_t v122 = *(void *)(v3 + 24);
          if (v123 >= v122 >> 1) {
            unint64_t v3 = (unint64_t)sub_2191F16FC((void *)(v122 > 1), v123 + 1, 1, (void *)v3);
          }
          *(void *)(v0 + 272) = v119;
          *(void *)(v0 + 280) = v121;
          sub_2191F19A4(v142);
          *(void *)(v3 + 16) = v123 + 1;
          sub_2191F1818(v142, v3 + (v123 << 7) + 32);
          *(uint64_t *)((char *)v157 + v154) = v3;
        }
        id v124 = objc_msgSend(v34, sel_passkeyCredentialID);
        if (!v124) {
          goto LABEL_75;
        }
        uint64_t v125 = v124;
        uint64_t v31 = sub_21922B468();
        unint64_t v19 = v126;

        *(void *)(v0 + 736) = v31;
        *(void *)(v0 + 744) = v19;
        id v127 = objc_msgSend(v34, sel_passkeyRelyingPartyID);
        if (!v127) {
          goto LABEL_74;
        }
        uint64_t v128 = v127;
        uint64_t v129 = sub_21922B468();
        uint64_t v131 = v130;

        *(void *)(v0 + 752) = v129;
        *(void *)(v0 + 760) = v131;
        id v33 = objc_msgSend(v34, sel_passkeyUserHandle);
        if (!v33)
        {
          swift_bridgeObjectRelease();
LABEL_74:
          swift_bridgeObjectRelease();
LABEL_75:
          swift_bridgeObjectRelease();
          continue;
        }
        goto LABEL_81;
      }
      swift_bridgeObjectRetain();
      uint64_t v1 = sub_21922B748();
      swift_bridgeObjectRelease();
      if (!v1) {
        goto LABEL_63;
      }
LABEL_47:
      if ((v102 & 0xC000000000000001) != 0)
      {
        id v103 = (id)MEMORY[0x21D483640](0, v102);
      }
      else
      {
        if (!*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_86;
        }
        id v103 = *(id *)(v102 + 32);
      }
      unint64_t v104 = v103;
      swift_bridgeObjectRelease();
      id v105 = objc_msgSend(v104, sel_algorithm);
      if (v105 == (id)2) {
        char v106 = 2;
      }
      else {
        char v106 = v105 == (id)1;
      }
      id v107 = objc_msgSend(v104, sel_keyData);
      uint64_t v108 = sub_21922AE08();
      unint64_t v110 = v109;

      unint64_t v111 = (unint64_t)objc_msgSend(v104, sel_codeGenerationPeriod);
      if ((v111 & 0x8000000000000000) == 0)
      {
        __int16 v112 = v111;
        if (!(v111 >> 16))
        {
          uint64_t v151 = v104;
          unint64_t v113 = (unint64_t)objc_msgSend(v104, sel_numberOfDigitsInCode);
          if ((v113 & 0x8000000000000000) == 0)
          {
            __int16 v114 = v113;
            if (v113 < 0x10000)
            {
              swift_bridgeObjectRetain();
              sub_2191E4E14(v108, v110);
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v3 = (unint64_t)sub_2191F16FC(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
              }
              unint64_t v116 = *(void *)(v3 + 16);
              unint64_t v115 = *(void *)(v3 + 24);
              if (v116 >= v115 >> 1) {
                unint64_t v3 = (unint64_t)sub_2191F16FC((void *)(v115 > 1), v116 + 1, 1, (void *)v3);
              }
              *(void *)(v0 + 16) = v108;
              *(void *)(v0 + 24) = v110;
              *(_WORD *)(v0 + 32) = v112;
              *(_WORD *)(v0 + 34) = v114;
              *(void *)(v0 + 40) = v158;
              *(void *)(v0 + 48) = v162;
              *(unsigned char *)(v0 + 56) = v106;
              *(void *)(v0 + 64) = 0;
              *(void *)(v0 + 72) = 0;
              sub_2191F180C(v141);
              *(void *)(v3 + 16) = v116 + 1;
              sub_2191F1818(v141, v3 + (v116 << 7) + 32);
              sub_2191E4AAC(v108, v110);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              *(uint64_t *)((char *)v157 + v154) = v3;
              goto LABEL_64;
            }
          }
        }
      }
      return sub_21922B728();
    }
  }
}

uint64_t sub_2191F0FBC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10D80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2191F101C()
{
  unint64_t result = qword_267C10D88;
  if (!qword_267C10D88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C10D88);
  }
  return result;
}

uint64_t WBSSavedAccountStore.exportPasskeyPrivateKey(with:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return MEMORY[0x270FA2498](sub_2191F1080, 0, 0);
}

uint64_t sub_2191F1080()
{
  uint64_t v1 = sub_21922ADE8();
  *(void *)(v0 + 80) = v1;
  *(void *)(v0 + 88) = v2;
  if (v2 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 96) = objc_msgSend(*(id *)(v0 + 72), sel_passkeyStore);
    sub_21922AEC8();
    sub_2191F1A50();
    uint64_t v4 = sub_21922B508();
    uint64_t v6 = v5;
    uint64_t v1 = (uint64_t)sub_2191F1144;
    unint64_t v2 = v4;
    uint64_t v3 = v6;
  }
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_2191F1144()
{
  uint64_t v1 = sub_21922AEB8();
  v0[13] = 0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  swift_release();
  v0[14] = v4;
  v0[15] = v2;
  return MEMORY[0x270FA2498](sub_2191F11E8, 0, 0);
}

uint64_t sub_2191F11E8()
{
  sub_2191E4B04(v0[10], v0[11]);
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_2191F124C()
{
  unint64_t v18 = v0;
  unint64_t v1 = v0[11];
  uint64_t v2 = v0[10];
  swift_release();
  sub_2191E4B04(v2, v1);
  if (qword_267C10A08 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[13];
  uint64_t v4 = sub_21922B3D8();
  __swift_project_value_buffer(v4, (uint64_t)qword_267C16290);
  id v5 = v3;
  id v6 = v3;
  unint64_t v7 = sub_21922B3B8();
  os_log_type_t v8 = sub_21922B5A8();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[13];
  if (v9)
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    swift_getErrorValue();
    uint64_t v13 = sub_21922B898();
    v0[6] = sub_2191F1BF0(v13, v14, &v17);
    sub_21922B5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21918F000, v7, v8, "Failed to export passkey private key: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D484570](v12, -1, -1);
    MEMORY[0x21D484570](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (uint64_t (*)(void, unint64_t))v0[1];
  return v15(0, 0xF000000000000000);
}

uint64_t sub_2191F1494(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10DB0);
  uint64_t v10 = *(void *)(type metadata accessor for ASImportableItem(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_21922B728();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ASImportableItem(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2191F24E0(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_2191F16FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10DB8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 95;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 7);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2191F23EC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2191F180C(uint64_t result)
{
  *(unsigned char *)(result + 120) = 2;
  return result;
}

uint64_t sub_2191F1818(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2191F1874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ASImportableItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2191F18D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ASImportableItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2191F193C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ASImportableItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2191F1998(uint64_t result)
{
  *(unsigned char *)(result + 120) = 1;
  return result;
}

uint64_t sub_2191F19A4(uint64_t result)
{
  *(unsigned char *)(result + 120) = 3;
  return result;
}

uint64_t sub_2191F19B0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_2191E4E14(result, a2);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2191F19FC(uint64_t result)
{
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t sub_2191F1A04(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_2191E4AAC(result, a2);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2191F1A50()
{
  unint64_t result = qword_267C10D98;
  if (!qword_267C10D98)
  {
    sub_21922AEC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10D98);
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *sub_2191F1AE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10DA0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2191F2248(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2191F1BF0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2191F1CC4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2191F2390((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2191F2390((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_2191F1CC4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21922B608();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_2191F1E80(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_21922B6C8();
  if (!v8)
  {
    sub_21922B728();
    __break(1u);
LABEL_17:
    uint64_t result = sub_21922B778();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_2191F1E80(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2191F1F18(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2191F20F8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2191F20F8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2191F1F18(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2191F2090(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_21922B678();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_21922B728();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_21922B4A8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_21922B778();
    __break(1u);
LABEL_14:
    uint64_t result = sub_21922B728();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_2191F2090(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10DA8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2191F20F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10DA8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

uint64_t sub_2191F2248(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2191F2390(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2191F23EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 7) + 32;
    unint64_t v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

uint64_t sub_2191F24E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for ASImportableItem(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

uint64_t sub_2191F2638@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  unint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  int64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_21922B3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  size_t v14 = (char *)&v21 - v13;
  sub_21922B308();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2191F7850((uint64_t)v7);
    *a1 = sub_21922B2F8() & 1;
    uint64_t v15 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
    uint64_t v16 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v16(&a1[*(int *)(v15 + 20)], 1, 1, v8);
    return ((uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v16)(&a1[*(int *)(v15 + 24)], 1, 1, v8);
  }
  else
  {
    unint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v18(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    sub_21922B318();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    *a1 = 1;
    uint64_t v19 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
    unint64_t v20 = &a1[*(int *)(v19 + 20)];
    v18(v20, v12, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v8);
    return sub_2191E7F74((uint64_t)v5, (uint64_t)&a1[*(int *)(v19 + 24)]);
  }
}

id sub_2191F28DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  unint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  int64_t v7 = &v28[-v6];
  int v29 = *v1;
  uint64_t v8 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  sub_2191F31A8((uint64_t)&v1[*(int *)(v8 + 20)], (uint64_t)v7);
  uint64_t v9 = sub_21922B3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_2191F7850((uint64_t)v7);
    uint64_t v12 = 0;
    unint64_t v13 = 0xF000000000000000;
  }
  else
  {
    uint64_t v12 = sub_21922B3E8();
    unint64_t v13 = v14;
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
  }
  sub_2191F31A8((uint64_t)&v1[*(int *)(v8 + 24)], (uint64_t)v5);
  if (v11(v5, 1, v9) == 1)
  {
    sub_2191F7850((uint64_t)v5);
    uint64_t v15 = 0;
    unint64_t v16 = 0xF000000000000000;
  }
  else
  {
    uint64_t v15 = sub_21922B3E8();
    unint64_t v16 = v17;
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v5, v9);
  }
  unint64_t v18 = objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialPRFRegistrationOutput);
  uint64_t v19 = (uint64_t *)&v18[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_first];
  *(_OWORD *)&v18[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_first] = xmmword_219232DB0;
  unint64_t v20 = (uint64_t *)&v18[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_second];
  *(_OWORD *)&v18[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_second] = xmmword_219232DB0;
  v18[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_isSupported] = v29;
  swift_beginAccess();
  uint64_t v21 = *v19;
  unint64_t v22 = v19[1];
  uint64_t *v19 = v12;
  v19[1] = v13;
  uint64_t v23 = v18;
  sub_2191E4E6C(v12, v13);
  sub_2191E4B04(v21, v22);
  swift_beginAccess();
  uint64_t v24 = *v20;
  unint64_t v25 = v20[1];
  uint64_t *v20 = v15;
  v20[1] = v16;
  sub_2191E4E6C(v15, v16);
  sub_2191E4B04(v24, v25);

  v30.receiver = v23;
  v30.super_class = (Class)ASAuthorizationPublicKeyCredentialPRFRegistrationOutput;
  id v26 = objc_msgSendSuper2(&v30, sel_init);
  sub_2191E4B04(v15, v16);
  sub_2191E4B04(v12, v13);
  return v26;
}

uint64_t sub_2191F2BAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, sel_shouldCheckForSupport);
  id v5 = objc_msgSend(v1, sel_inputValues);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_saltInput1);
    sub_21922AE08();

    id v8 = objc_msgSend(v6, sel_saltInput2);
    if (v8)
    {
      uint64_t v9 = v8;
      sub_21922AE08();
    }
    sub_21922B048();

    uint64_t v11 = sub_21922B078();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
  }
  else
  {
    uint64_t v10 = sub_21922B078();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  return sub_21922B228();
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.init(saltInput1:saltInput2:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t static ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.saltInput1(_:saltInput2:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  sub_2191E4E14(a1, a2);

  return sub_2191E4E6C(a3, a4);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.saltInput1.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.saltInput1.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.saltInput1.modify())()
{
  return nullsub_1;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.saltInput2.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_2191E4E6C(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.saltInput2.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4B04(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues.saltInput2.modify())()
{
  return nullsub_1;
}

uint64_t static ASAuthorizationPublicKeyCredentialPRFAssertionInput.inputValues(_:perCredentialInputValues:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *a3 = *a1;
  a3[1] = v4;
  a3[2] = v6;
  a3[3] = v7;
  a3[4] = a2;
  sub_2191E4E14(v5, v4);
  sub_2191E4E6C(v6, v7);

  return swift_bridgeObjectRetain();
}

uint64_t static ASAuthorizationPublicKeyCredentialPRFAssertionInput.perCredentialInputValues(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = xmmword_219232DB0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInput.inputValues.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  unint64_t v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2191EC570(v2, v3, v4, v5);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInput.perCredentialInputValues.getter()
{
  return swift_bridgeObjectRetain();
}

{
  return swift_bridgeObjectRetain();
}

id sub_2191F2F78()
{
  id v1 = 0;
  unint64_t v2 = v0[1];
  unint64_t v3 = (void *)v0[4];
  if (v2 >> 60 != 15)
  {
    uint64_t v4 = *v0;
    uint64_t v5 = v0[2];
    unint64_t v6 = v0[3];
    sub_2191EC570(*v0, v0[1], v5, v6);
    sub_2191E4E14(v4, v2);
    sub_2191E4E6C(v5, v6);
    unint64_t v7 = (void *)sub_21922ADF8();
    if (v6 >> 60 == 15)
    {
      id v8 = 0;
    }
    else
    {
      id v8 = (void *)sub_21922ADF8();
      sub_2191E4B04(v5, v6);
    }
    id v1 = objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialPRFAssertionInputValues), sel_initWithSaltInput1_saltInput2_, v7, v8);
    sub_2191E4AAC(v4, v2);

    sub_2191E4A5C(v4, v2, v5, v6);
  }
  if (v3)
  {
    uint64_t v9 = sub_2191F723C((uint64_t)v3);
    type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionInputValues(v9);
    sub_2191F4688();
    unint64_t v3 = (void *)sub_21922B418();
    swift_release();
  }
  id v10 = objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialPRFAssertionInput), sel_initWithInputValues_perCredentialInputValues_, v1, v3);

  return v10;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionOutput.first.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21922B3F8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionOutput.second.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2191F356C(type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput, a1);
}

uint64_t type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(uint64_t a1)
{
  return sub_2191F3450(a1, (uint64_t *)&unk_267C10E20);
}

{
  return sub_2191F6FE8(a1, &qword_267C10E58);
}

uint64_t sub_2191F31A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionOutput.init(first:second:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_21922B3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0) + 20);

  return sub_2191E7F74(a2, v7);
}

double static ASAuthorizationPublicKeyCredentialPRFRegistrationInput.checkForSupport.getter@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_219232DB0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  return result;
}

uint64_t static ASAuthorizationPublicKeyCredentialPRFRegistrationInput.inputValues(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  *(unsigned char *)a2 = 1;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v2;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  sub_2191E4E14(v3, v2);

  return sub_2191E4E6C(v4, v5);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationInput.shouldCheckForSupport.getter()
{
  return *v0;
}

{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationInput_shouldCheckForSupport);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationInput.inputValues.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  unint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  unint64_t v5 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2191EC570(v2, v3, v4, v5);
}

id static ASAuthorizationPublicKeyCredentialPRFRegistrationInput.checkForSupport.getter()
{
  id v0 = objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialPRFRegistrationInput);

  return objc_msgSend(v0, sel_initWithInputValues_, 0);
}

uint64_t static ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.supported.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  unint64_t v3 = &a1[*(int *)(v2 + 20)];
  uint64_t v4 = sub_21922B3F8();
  uint64_t v7 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  ((void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))v7)((void *)(v4 - 8), v3, 1, 1, v4);
  unint64_t v5 = &a1[*(int *)(v2 + 24)];

  return v7(v5, 1, 1, v4);
}

uint64_t type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(uint64_t a1)
{
  return sub_2191F3450(a1, (uint64_t *)&unk_267C10E38);
}

{
  return sub_2191F6FE8(a1, &qword_267C10E50);
}

uint64_t sub_2191F3450(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.unsupported.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  unint64_t v3 = &a1[*(int *)(v2 + 20)];
  uint64_t v4 = sub_21922B3F8();
  uint64_t v7 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  ((void (*)(void *__return_ptr, unsigned char *, uint64_t, uint64_t, uint64_t))v7)((void *)(v4 - 8), v3, 1, 1, v4);
  unint64_t v5 = &a1[*(int *)(v2 + 24)];

  return v7(v5, 1, 1, v4);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.isSupported.getter()
{
  return *v0;
}

{
  uint64_t v0;
  unsigned __int8 *v1;

  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_isSupported);
  swift_beginAccess();
  return *v1;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.first.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2191F356C(type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput, a1);
}

uint64_t sub_2191F356C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);

  return sub_2191F31A8(v4, a2);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.second.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0) + 24);

  return sub_2191F31A8(v3, a1);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.init(first:second:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = 1;
  uint64_t v6 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(0);
  uint64_t v7 = &a3[*(int *)(v6 + 20)];
  uint64_t v8 = sub_21922B3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32))(v7, a1, v8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v10 = (uint64_t)&a3[*(int *)(v6 + 24)];

  return sub_2191E7F74(a2, v10);
}

void *ASAuthorizationPublicKeyCredentialPRFRegistrationInput.inputValues.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationInput_inputValues);
  id v2 = v1;
  return v1;
}

void __swiftcall ASAuthorizationPublicKeyCredentialPRFRegistrationInput.init(inputValues:)(ASAuthorizationPublicKeyCredentialPRFRegistrationInput *__return_ptr retstr, ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_optional *inputValues)
{
}

id ASAuthorizationPublicKeyCredentialPRFRegistrationInput.init(inputValues:)(uint64_t a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationInput_shouldCheckForSupport) = 1;
  *(void *)(v1 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationInput_objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithInputValues_, inputValues) = a1;
  v3.super_class = (Class)ASAuthorizationPublicKeyCredentialPRFRegistrationInput;
  return objc_msgSendSuper2(&v3, sel_init);
}

void ASAuthorizationPublicKeyCredentialPRFRegistrationInput.init()()
{
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.isSupported.setter(char a1)
{
  objc_super v3 = (unsigned char *)(v1 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_isSupported);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.first.getter()
{
  return sub_2191F3DD8(&OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_first, (void (*)(void, void))sub_2191E4E6C);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.first.setter(uint64_t a1, uint64_t a2)
{
  return sub_2191F3F08(a1, a2, &OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_first, (uint64_t (*)(uint64_t, uint64_t))sub_2191E4B04);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.second.getter()
{
  return sub_2191F3DD8(&OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_second, (void (*)(void, void))sub_2191E4E6C);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.second.setter(uint64_t a1, uint64_t a2)
{
  return sub_2191F3F08(a1, a2, &OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFRegistrationOutput_second, (uint64_t (*)(uint64_t, uint64_t))sub_2191E4B04);
}

void ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.init()()
{
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionOutput.first.getter()
{
  return sub_2191F3DD8(&OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionOutput_first, (void (*)(void, void))sub_2191E4E14);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionOutput.first.setter(uint64_t a1, uint64_t a2)
{
  return sub_2191F3F08(a1, a2, &OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionOutput_first, (uint64_t (*)(uint64_t, uint64_t))sub_2191E4AAC);
}

void sub_2191F3CB8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_first);
  uint64_t v4 = sub_21922AE08();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id sub_2191F3D1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (uint64_t *)(a1 + *a3);
  swift_beginAccess();
  uint64_t v4 = 0;
  unint64_t v5 = v3[1];
  if (v5 >> 60 != 15)
  {
    uint64_t v6 = *v3;
    sub_2191E4E14(v6, v5);
    uint64_t v4 = (void *)sub_21922ADF8();
    sub_2191E4B04(v6, v5);
  }

  return v4;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionOutput.second.getter()
{
  return sub_2191F3DD8(&OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionOutput_second, (void (*)(void, void))sub_2191E4E6C);
}

uint64_t sub_2191F3DD8(void *a1, void (*a2)(void, void))
{
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

void sub_2191F3E4C(char *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = a3;
  if (a3)
  {
    uint64_t v7 = a1;
    id v8 = v5;
    uint64_t v5 = (void *)sub_21922AE08();
    unint64_t v10 = v9;
  }
  else
  {
    uint64_t v11 = a1;
    unint64_t v10 = 0xF000000000000000;
  }
  uint64_t v12 = (uint64_t *)&a1[*a4];
  swift_beginAccess();
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  uint64_t *v12 = (uint64_t)v5;
  v12[1] = v10;
  sub_2191E4B04(v13, v14);
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionOutput.second.setter(uint64_t a1, uint64_t a2)
{
  return sub_2191F3F08(a1, a2, &OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionOutput_second, (uint64_t (*)(uint64_t, uint64_t))sub_2191E4B04);
}

uint64_t sub_2191F3F08(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  id v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t *v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

void sub_2191F3F6C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_21922AE08();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xF000000000000000;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_2191F3FD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = sub_21922ADF8();
  }
  id v8 = (id)v7;
  [v6 *a5];
}

void ASAuthorizationPublicKeyCredentialPRFAssertionOutput.init()()
{
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInputValues.saltInput1.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_saltInput1);
  sub_2191E4E14(v1, *(void *)(v0 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_saltInput1 + 8));
  return v1;
}

uint64_t ASAuthorizationPublicKeyCredentialPRFAssertionInputValues.saltInput2.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_saltInput2);
  sub_2191E4E6C(v1, *(void *)(v0 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_saltInput2 + 8));
  return v1;
}

id ASAuthorizationPublicKeyCredentialPRFAssertionInputValues.init(saltInput1:saltInput2:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8 = (void *)sub_21922ADF8();
  if (a4 >> 60 == 15)
  {
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = (void *)sub_21922ADF8();
    sub_2191E4B04(a3, a4);
  }
  id v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithSaltInput1_saltInput2_, v8, v9);
  sub_2191E4AAC(a1, a2);

  return v10;
}

id ASAuthorizationPublicKeyCredentialPRFAssertionInputValues.init(saltInput1:saltInput2:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)(v4 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_saltInput1);
  void *v5 = a1;
  v5[1] = a2;
  uint64_t v6 = (void *)(v4 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_saltInput2);
  *uint64_t v6 = a3;
  v6[1] = a4;
  v8.super_class = (Class)ASAuthorizationPublicKeyCredentialPRFAssertionInputValues;
  return objc_msgSendSuper2(&v8, sel_init);
}

void ASAuthorizationPublicKeyCredentialPRFAssertionInputValues.init()()
{
}

uint64_t sub_2191F44B0(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void, void), void *a5)
{
  a4(*(void *)(a1 + *a3), *(void *)(a1 + *a3 + 8));
  uint64_t v7 = (uint64_t *)(a1 + *a5);
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];

  return sub_2191E4B04(v8, v9);
}

void *ASAuthorizationPublicKeyCredentialPRFAssertionInput.inputValues.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInput_inputValues);
  id v2 = v1;
  return v1;
}

void __swiftcall ASAuthorizationPublicKeyCredentialPRFAssertionInput.init(inputValues:perCredentialInputValues:)(ASAuthorizationPublicKeyCredentialPRFAssertionInput *__return_ptr retstr, ASAuthorizationPublicKeyCredentialPRFAssertionInputValues_optional *inputValues, Swift::OpaquePointer_optional perCredentialInputValues)
{
  if (perCredentialInputValues.value._rawValue)
  {
    type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionInputValues((uint64_t)inputValues);
    sub_2191F4688();
    uint64_t v4 = (void *)sub_21922B418();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithInputValues_perCredentialInputValues_, inputValues, v4);
}

uint64_t type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionInputValues(uint64_t a1)
{
  return sub_2191F6FE8(a1, &qword_267C10E60);
}

unint64_t sub_2191F4688()
{
  unint64_t result = qword_267C10E18;
  if (!qword_267C10E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10E18);
  }
  return result;
}

id ASAuthorizationPublicKeyCredentialPRFAssertionInput.init(inputValues:perCredentialInputValues:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInput_objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithInputValues_, inputValues) = a1;
  *(void *)(v2 + OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionInput_perCredentialInputValues) = a2;
  v4.super_class = (Class)ASAuthorizationPublicKeyCredentialPRFAssertionInput;
  return objc_msgSendSuper2(&v4, sel_init);
}

id _sSo54ASAuthorizationPublicKeyCredentialPRFRegistrationInputC22AuthenticationServicesEABycfC_0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return objc_msgSend(v0, sel_init);
}

void ASAuthorizationPublicKeyCredentialPRFAssertionInput.init()()
{
}

char *keypath_get_selector_isSupported()
{
  return sel_isSupported;
}

id sub_2191F4848@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isSupported);
  *a2 = (_BYTE)result;
  return result;
}

id sub_2191F487C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsSupported_, *a1);
}

char *keypath_get_selector_first()
{
  return sel_first;
}

void sub_2191F489C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_2191F48BC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_second()
{
  return sel_second;
}

void sub_2191F48E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_2191F4908(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_2191F492C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_21922ADF8();
  objc_msgSend(v2, sel_setFirst_, v3);
}

void sub_2191F4990(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_2191F49B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t destroy for ASAuthorizationPublicKeyCredentialPRFAssertionInput(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15)
  {
    sub_2191E4AAC(*a1, v2);
    unint64_t v3 = a1[3];
    if (v3 >> 60 != 15) {
      sub_2191E4AAC(a1[2], v3);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASAuthorizationPublicKeyCredentialPRFAssertionInput(uint64_t a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    uint64_t v6 = *a2;
    sub_2191E4E14(*a2, a2[1]);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v4;
    uint64_t v7 = a2 + 2;
    unint64_t v8 = a2[3];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v9 = *v7;
      sub_2191E4E14(*v7, a2[3]);
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v8;
    }
  }
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ASAuthorizationPublicKeyCredentialPRFAssertionInput(uint64_t *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 == 15)
    {
      sub_2191F4C4C(a1);
      long long v6 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v6;
      goto LABEL_17;
    }
    uint64_t v10 = *a2;
    sub_2191E4E14(*a2, a2[1]);
    uint64_t v11 = *a1;
    unint64_t v12 = a1[1];
    *a1 = v10;
    a1[1] = v4;
    sub_2191E4AAC(v11, v12);
    uint64_t v13 = a2 + 2;
    unint64_t v9 = a2[3];
    if ((unint64_t)a1[3] >> 60 == 15)
    {
      if (v9 >> 60 != 15)
      {
        uint64_t v14 = *v13;
        goto LABEL_12;
      }
    }
    else
    {
      if (v9 >> 60 != 15)
      {
        uint64_t v15 = *v13;
        sub_2191E4E14(*v13, a2[3]);
        uint64_t v16 = a1[2];
        unint64_t v17 = a1[3];
        a1[2] = v15;
        a1[3] = v9;
        sub_2191E4AAC(v16, v17);
        goto LABEL_17;
      }
      sub_2191EE22C((uint64_t)(a1 + 2));
    }
    *((_OWORD *)a1 + 1) = *(_OWORD *)v13;
    goto LABEL_17;
  }
  if (v4 >> 60 != 15)
  {
    uint64_t v7 = *a2;
    sub_2191E4E14(*a2, a2[1]);
    *a1 = v7;
    a1[1] = v4;
    unint64_t v8 = a2 + 2;
    unint64_t v9 = a2[3];
    if (v9 >> 60 == 15)
    {
      *((_OWORD *)a1 + 1) = *v8;
      goto LABEL_17;
    }
    uint64_t v14 = *(void *)v8;
LABEL_12:
    sub_2191E4E14(v14, v9);
    a1[2] = v14;
    a1[3] = v9;
    goto LABEL_17;
  }
  long long v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v5;
LABEL_17:
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_2191F4C4C(uint64_t *a1)
{
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for ASAuthorizationPublicKeyCredentialPRFAssertionInput(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = a2[1];
  if (v5 >> 60 == 15)
  {
    sub_2191F4C4C(a1);
LABEL_4:
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    goto LABEL_10;
  }
  uint64_t v7 = *a1;
  *a1 = *a2;
  a1[1] = v5;
  sub_2191E4AAC(v7, v4);
  unint64_t v8 = a2 + 2;
  unint64_t v9 = a1[3];
  if (v9 >> 60 != 15)
  {
    unint64_t v10 = a2[3];
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = a1[2];
      a1[2] = *v8;
      a1[3] = v10;
      sub_2191E4AAC(v11, v9);
      goto LABEL_10;
    }
    sub_2191EE22C((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
LABEL_10:
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFAssertionInput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFAssertionInput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionInput()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialPRFAssertionInput;
}

uint64_t initializeBufferWithCopyOfBuffer for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues(uint64_t *a1)
{
  uint64_t result = sub_2191E4AAC(*a1, a1[1]);
  unint64_t v3 = a1[3];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[2];
    return sub_2191E4AAC(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  long long v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_2191E4E14(*v6, v7);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  return a1;
}

uint64_t *assignWithCopy for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2191E4AAC(v6, v7);
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if ((unint64_t)a1[3] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_2191E4E14(*v8, v9);
      uint64_t v12 = a1[2];
      unint64_t v13 = a1[3];
      a1[2] = v11;
      a1[3] = v9;
      sub_2191E4AAC(v12, v13);
      return a1;
    }
    sub_2191EE22C((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
    return a1;
  }
  uint64_t v10 = *v8;
  sub_2191E4E14(*v8, v9);
  a1[2] = v10;
  a1[3] = v9;
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t *assignWithTake for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v4, v5);
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_2191E4AAC(v9, v7);
      return a1;
    }
    sub_2191EE22C((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues;
}

uint64_t *initializeBufferWithCopyOfBuffer for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21922B3F8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21922B3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_21922B3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_21922B3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_21922B3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_21922B3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2191F59E8);
}

uint64_t sub_2191F59E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21922B3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2191F5AF8);
}

uint64_t sub_2191F5AF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_21922B3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_2191F5C00()
{
  sub_21922B3F8();
  if (v0 <= 0x3F)
  {
    sub_2191F5CC8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2191F5CC8()
{
  if (!qword_267C10E30)
  {
    sub_21922B3F8();
    unint64_t v0 = sub_21922B5E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C10E30);
    }
  }
}

uint64_t destroy for ASAuthorizationPublicKeyCredentialPRFRegistrationInput(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >> 60 != 15)
  {
    uint64_t v2 = result;
    uint64_t result = sub_2191E4AAC(*(void *)(result + 8), v1);
    unint64_t v3 = *(void *)(v2 + 32);
    if (v3 >> 60 != 15)
    {
      uint64_t v4 = *(void *)(v2 + 24);
      return sub_2191E4AAC(v4, v3);
    }
  }
  return result;
}

uint64_t initializeWithCopy for ASAuthorizationPublicKeyCredentialPRFRegistrationInput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >> 60 == 15)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    sub_2191E4E14(v6, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v4;
    uint64_t v7 = (uint64_t *)(a2 + 24);
    unint64_t v8 = *(void *)(a2 + 32);
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v9 = *v7;
      sub_2191E4E14(*v7, v8);
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = v8;
    }
  }
  return a1;
}

uint64_t assignWithCopy for ASAuthorizationPublicKeyCredentialPRFRegistrationInput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 != 15)
  {
    if (v6 >> 60 == 15)
    {
      sub_2191F4C4C((uint64_t *)(a1 + 8));
      long long v8 = v5[1];
      *unint64_t v4 = *v5;
      v4[1] = v8;
      return a1;
    }
    uint64_t v12 = *(void *)(a2 + 8);
    sub_2191E4E14(v12, *(void *)(a2 + 16));
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v6;
    sub_2191E4AAC(v13, v14);
    uint64_t v15 = (uint64_t *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 32);
    if (*(void *)(a1 + 32) >> 60 == 15)
    {
      if (v11 >> 60 != 15)
      {
        uint64_t v16 = *v15;
        goto LABEL_12;
      }
    }
    else
    {
      if (v11 >> 60 != 15)
      {
        uint64_t v17 = *v15;
        sub_2191E4E14(*v15, v11);
        uint64_t v18 = *(void *)(a1 + 24);
        unint64_t v19 = *(void *)(a1 + 32);
        *(void *)(a1 + 24) = v17;
        *(void *)(a1 + 32) = v11;
        sub_2191E4AAC(v18, v19);
        return a1;
      }
      sub_2191EE22C(a1 + 24);
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v15;
    return a1;
  }
  if (v6 >> 60 != 15)
  {
    uint64_t v9 = *(void *)(a2 + 8);
    sub_2191E4E14(v9, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v6;
    uint64_t v10 = (_OWORD *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 32);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *v10;
      return a1;
    }
    uint64_t v16 = *(void *)v10;
LABEL_12:
    sub_2191E4E14(v16, v11);
    *(void *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v11;
    return a1;
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *unint64_t v4 = *v5;
  *(_OWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithTake for ASAuthorizationPublicKeyCredentialPRFRegistrationInput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 >> 60 == 15)
  {
    sub_2191F4C4C((uint64_t *)(a1 + 8));
LABEL_4:
    long long v8 = v5[1];
    *unint64_t v4 = *v5;
    v4[1] = v8;
    return a1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  sub_2191E4AAC(v9, v6);
  uint64_t v10 = (void *)(a2 + 24);
  unint64_t v11 = *(void *)(a1 + 32);
  if (v11 >> 60 != 15)
  {
    unint64_t v12 = *(void *)(a2 + 32);
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v10;
      *(void *)(a1 + 32) = v12;
      sub_2191E4AAC(v13, v11);
      return a1;
    }
    sub_2191EE22C(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFRegistrationInput(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[40]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFRegistrationInput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationInput()
{
  return &type metadata for ASAuthorizationPublicKeyCredentialPRFRegistrationInput;
}

uint64_t *initializeBufferWithCopyOfBuffer for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    long long v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_21922B3F8();
    uint64_t v11 = *(void *)(v10 - 8);
    unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v12(v17, 1, v10))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t destroy for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_21922B3F8();
  uint64_t v10 = *(void *)(v5 - 8);
  unint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

unsigned char *initializeWithCopy for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_21922B3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

unsigned char *assignWithCopy for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_21922B3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

unsigned char *initializeWithTake for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_21922B3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

unsigned char *assignWithTake for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_21922B3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2191F6D14);
}

uint64_t sub_2191F6D14(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    int v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationPublicKeyCredentialPRFRegistrationOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2191F6DDC);
}

unsigned char *sub_2191F6DDC(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
    long long v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2191F6E84()
{
  sub_2191F5CC8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for ASAuthorizationPublicKeyCredentialPRFRegistrationInput(uint64_t a1)
{
  return sub_2191F6FE8(a1, &qword_267C10E48);
}

uint64_t type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionInput(uint64_t a1)
{
  return sub_2191F6FE8(a1, &qword_267C10E68);
}

uint64_t sub_2191F6FE8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2191F7024()
{
  unint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v1, sel_inputValues);
  if (v5)
  {
    int v6 = v5;
    id v7 = objc_msgSend(v5, sel_saltInput1);
    sub_21922AE08();

    id v8 = objc_msgSend(v6, sel_saltInput2);
    if (v8)
    {
      uint64_t v9 = v8;
      sub_21922AE08();
    }
    sub_21922B048();

    uint64_t v11 = sub_21922B078();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
  }
  else
  {
    uint64_t v10 = sub_21922B078();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  id v12 = objc_msgSend(v1, sel_perCredentialInputValues);
  int v13 = v12;
  if (v12)
  {
    type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionInputValues((uint64_t)v12);
    sub_2191F4688();
    uint64_t v14 = sub_21922B428();

    sub_2191F7504(v14);
    swift_bridgeObjectRelease();
  }
  return sub_21922B088();
}

uint64_t sub_2191F723C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10E70);
  uint64_t result = sub_21922B758();
  int64_t v3 = 0;
  uint64_t v34 = (void *)result;
  uint64_t v35 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v31 = v5;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v33 = result + 64;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  uint64_t v11 = (v9 - 1) & v9;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v3 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v35 + 48) + 16 * i);
    uint64_t v18 = *v16;
    unint64_t v17 = v16[1];
    int v19 = (uint64_t *)(*(void *)(v35 + 56) + 32 * i);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    uint64_t v22 = v19[2];
    unint64_t v23 = v19[3];
    unint64_t v38 = v17;
    sub_2191E4E14(v18, v17);
    sub_2191E4E14(v21, v20);
    sub_2191E4E6C(v22, v23);
    sub_2191E4E14(v21, v20);
    sub_2191E4E6C(v22, v23);
    uint64_t v24 = (void *)sub_21922ADF8();
    unint64_t v36 = v11;
    int64_t v37 = v3;
    if (v23 >> 60 == 15)
    {
      unint64_t v25 = 0;
    }
    else
    {
      unint64_t v25 = (void *)sub_21922ADF8();
      sub_2191E4B04(v22, v23);
    }
    id v26 = objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialPRFAssertionInputValues), sel_initWithSaltInput1_saltInput2_, v24, v25);
    sub_2191E4AAC(v21, v20);

    sub_2191E4AAC(v21, v20);
    sub_2191E4B04(v22, v23);
    uint64_t result = (uint64_t)v34;
    *(void *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v27 = (uint64_t *)(v34[6] + 16 * i);
    uint64_t *v27 = v18;
    v27[1] = v38;
    *(void *)(v34[7] + 8 * i) = v26;
    uint64_t v28 = v34[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v34[2] = v30;
    unint64_t v9 = v36;
    int64_t v3 = v37;
    if (v36) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_27;
    }
    if (v13 >= v32) {
      return result;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    ++v3;
    if (!v14)
    {
      int64_t v3 = v13 + 1;
      if (v13 + 1 >= v32) {
        return result;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v3);
      if (!v14)
      {
        int64_t v3 = v13 + 2;
        if (v13 + 2 >= v32) {
          return result;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v3);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v11 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v32) {
    return result;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v3 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v3 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v3 >= v32) {
      return result;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v3);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2191F7504(uint64_t a1)
{
  uint64_t v38 = sub_21922B078();
  uint64_t v2 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unint64_t v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10BD0);
  uint64_t result = sub_21922B758();
  uint64_t v5 = (void *)result;
  int64_t v6 = 0;
  uint64_t v39 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v31 = v8;
  int64_t v32 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v37 = v2;
  uint64_t v33 = v2 + 32;
  uint64_t v34 = result + 64;
  uint64_t v35 = (void *)result;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v40 = (v12 - 1) & v12;
  int64_t v41 = v6;
  for (unint64_t i = __clz(__rbit64(v12)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v39 + 48) + 16 * i);
    uint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    id v21 = *(id *)(*(void *)(v39 + 56) + 8 * i);
    sub_2191E4E14(v20, v19);
    id v22 = objc_msgSend(v21, sel_saltInput1);
    sub_21922AE08();

    id v23 = objc_msgSend(v21, sel_saltInput2);
    if (v23)
    {
      uint64_t v24 = v23;
      sub_21922AE08();
    }
    unint64_t v25 = v36;
    sub_21922B048();

    uint64_t v5 = v35;
    *(void *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    id v26 = (uint64_t *)(v5[6] + 16 * i);
    *id v26 = v20;
    v26[1] = v19;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32))(v5[7] + *(void *)(v37 + 72) * i, v25, v38);
    uint64_t v27 = v5[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    _OWORD v5[2] = v29;
    int64_t v6 = v41;
    unint64_t v12 = v40;
    if (v40) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_26;
    }
    if (v14 >= v32) {
      return (uint64_t)v5;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v14);
    int64_t v16 = v6 + 1;
    if (!v15)
    {
      int64_t v16 = v6 + 2;
      if (v6 + 2 >= v32) {
        return (uint64_t)v5;
      }
      unint64_t v15 = *(void *)(v31 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v6 + 3;
        if (v6 + 3 >= v32) {
          return (uint64_t)v5;
        }
        unint64_t v15 = *(void *)(v31 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v40 = (v15 - 1) & v15;
    int64_t v41 = v16;
  }
  uint64_t v17 = v6 + 4;
  if (v6 + 4 >= v32) {
    return (uint64_t)v5;
  }
  unint64_t v15 = *(void *)(v31 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v32) {
      return (uint64_t)v5;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2191F7850(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void ASPasskeyCredentialRequestParameters.extensionInput.getter(void *a1@<X8>)
{
  uint64_t v3 = (char *)objc_msgSend(v1, sel_extensionInput);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = *(id *)&v3[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionInput_coreExtensions];
  }
  else
  {
    id v5 = 0;
  }
  *a1 = v5;
}

uint64_t sub_2191F7924(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_21922B748();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v5 = a1 & 0xC000000000000001;
      uint64_t v6 = 4;
      uint64_t v25 = v4;
      do
      {
        uint64_t v7 = v6 - 4;
        if (v5)
        {
          uint64_t v8 = (void *)MEMORY[0x21D483640](v6 - 4, a1);
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t v8 = *(void **)(a1 + 8 * v6);
          swift_unknownObjectRetain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }
        }
        id v10 = objc_msgSend(v8, sel_loginChoiceKind);
        if (v10 == (id)1)
        {
          self;
          int64_t v14 = (void *)swift_dynamicCastObjCClass();
          if (!v14) {
            goto LABEL_5;
          }
          if (objc_msgSend(v14, sel_isExternal))
          {
LABEL_33:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            return 1;
          }
          int v15 = *(unsigned __int8 *)(a2 + 45);
          swift_unknownObjectRelease();
          if (v15 == 1) {
            goto LABEL_36;
          }
        }
        else
        {
          if (v10 != (id)2)
          {
            if (!v10) {
              goto LABEL_33;
            }
            goto LABEL_5;
          }
          self;
          uint64_t v11 = swift_dynamicCastObjCClass();
          if (!v11) {
            goto LABEL_5;
          }
          unint64_t v12 = (void *)v11;
          swift_unknownObjectRetain();
          if (objc_msgSend(v12, sel_isExternal)) {
            goto LABEL_35;
          }
          if (*(unsigned char *)(a2 + 44))
          {
            int v13 = *(unsigned __int8 *)(a2 + 45);
            if (*(unsigned char *)(a2 + 42))
            {
              if (v13) {
                goto LABEL_35;
              }
            }
            else if ((objc_msgSend(*(id *)a2, sel_isRegistrationRequest) & 1) == 0 {
                   && ((v13 ^ 1) & 1) == 0)
            }
            {
              goto LABEL_35;
            }
          }
          unint64_t v16 = v5;
          uint64_t v17 = a2;
          id v18 = objc_msgSend(v12, sel_relyingPartyIdentifier);
          if (!v18)
          {
            swift_unknownObjectRelease();
            unint64_t v5 = v16;
            uint64_t v4 = v25;
LABEL_5:
            swift_unknownObjectRelease();
            goto LABEL_6;
          }
          unint64_t v19 = v18;
          uint64_t v20 = sub_21922B468();
          uint64_t v22 = v21;

          if (v20 == 0x6F632E656C707061 && v22 == 0xE90000000000006DLL)
          {
            swift_bridgeObjectRelease();
LABEL_35:
            swift_unknownObjectRelease_n();
LABEL_36:
            swift_bridgeObjectRelease();
            return 1;
          }
          char v23 = sub_21922B868();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease_n();
          a2 = v17;
          unint64_t v5 = v16;
          uint64_t v4 = v25;
          if (v23) {
            goto LABEL_36;
          }
        }
LABEL_6:
        ++v6;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_2191F7C24(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21922B628();
    sub_2191F6FE8(0, &qword_267C10E78);
    sub_2191FEC6C();
    sub_21922B548();
    uint64_t v1 = v19;
    uint64_t v18 = v20;
    uint64_t v2 = v21;
    uint64_t v3 = v22;
    unint64_t v4 = v23;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v17 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v13 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_21922B638()) {
      goto LABEL_31;
    }
    sub_2191F6FE8(0, &qword_267C10E78);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v24;
    swift_unknownObjectRelease();
    if (!v24) {
      goto LABEL_31;
    }
LABEL_10:
    id v11 = objc_msgSend(self, sel_sharedManager);
    unsigned int v12 = objc_msgSend(v11, sel_extensionSupportsPasskeys_, v10);

    if (v12) {
      goto LABEL_31;
    }
  }
  if (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_9:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v10) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  int64_t v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 >= v17) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    ++v3;
    if (!v15)
    {
      uint64_t v3 = v13 + 2;
      if (v13 + 2 >= v17) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v3);
      if (!v15)
      {
        uint64_t v3 = v13 + 3;
        if (v13 + 3 >= v17) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v3);
        if (!v15)
        {
          uint64_t v3 = v13 + 4;
          if (v13 + 4 >= v17) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v3);
          if (!v15)
          {
            uint64_t v3 = v13 + 5;
            if (v13 + 5 >= v17) {
              goto LABEL_31;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v3);
            if (!v15)
            {
              uint64_t v16 = v13 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v3 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_2192005A0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v4 = (v15 - 1) & v15;
    unint64_t v9 = __clz(__rbit64(v15)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t ASAuthorizationUIContext.otherLoginChoices.getter()
{
  id v1 = objc_msgSend(*v0, sel_loginChoices);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
  unint64_t v2 = sub_21922B4E8();

  uint64_t v3 = sub_2191E93E4(v2, (uint64_t)&unk_26CA8EC58);
  swift_bridgeObjectRelease();
  return v3;
}

BOOL sub_2191F7FBC()
{
  unint64_t v0 = ASAuthorizationUIContext.loginChoicesToShow.getter();
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_21922B748();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      while (1)
      {
        uint64_t v4 = v3 - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = (void *)MEMORY[0x21D483640](v3 - 4, v1);
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v5 = *(void **)(v1 + 8 * v3);
          swift_unknownObjectRetain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        id v7 = objc_msgSend(v5, sel_loginChoiceKind);
        swift_unknownObjectRelease();
        BOOL v8 = v7 == 0;
        ++v3;
        if (v7) {
          BOOL v9 = 1;
        }
        else {
          BOOL v9 = v6 == v2;
        }
        if (v9) {
          goto LABEL_18;
        }
      }
    }
  }
  BOOL v8 = 1;
LABEL_18:
  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t ASAuthorizationUIContext.loginChoicesToShow.getter()
{
  long long v1 = *(_OWORD *)(v0 + 32);
  long long v19 = *(_OWORD *)(v0 + 16);
  long long v20 = v1;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v0;
  __int16 v21 = *(_WORD *)(v0 + 48);
  switch(BYTE8(v1))
  {
    case 2:
      char v9 = BYTE9(v20);
      id v10 = v18[0];
      sub_2191E95A0(v18);
      id v11 = objc_msgSend(v10, sel_loginChoices);
      __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
      unint64_t v12 = sub_21922B4E8();

      if (v9)
      {
        sub_2191E95A0(v18);
        uint64_t v14 = sub_2191FD2F0(v12, (uint64_t)v18);
        sub_2191E95EC(v18);
        swift_bridgeObjectRelease();
        id v15 = objc_msgSend(v10, sel_loginChoices);
        unint64_t v16 = sub_21922B4E8();

        unint64_t v17 = sub_2191E93E4(v16, (uint64_t)&unk_26CA8EC98);
        swift_bridgeObjectRelease();
        sub_2191E95EC(v18);
        sub_2191F8BDC(v17);
        uint64_t v2 = v14;
      }
      else
      {
        uint64_t v2 = sub_2191FD2F0(v12, (uint64_t)v18);
        sub_2191E95EC(v18);
        swift_bridgeObjectRelease();
      }
      goto LABEL_10;
    case 3:
    case 4:
    case 5:
      if (BYTE9(v20))
      {
        id v6 = v18[0];
        sub_2191E95A0(v18);
        id v7 = objc_msgSend(v6, sel_loginChoices);
        __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
        unint64_t v8 = sub_21922B4E8();

        uint64_t v2 = sub_2191E93E4(v8, (uint64_t)&unk_26CA8ECD8);
        swift_bridgeObjectRelease();
        sub_2191E95EC(v18);
      }
      else
      {
        uint64_t v2 = MEMORY[0x263F8EE78];
      }
      goto LABEL_10;
    case 6:
      sub_2191E7FDC();
      uint64_t v2 = v13;
LABEL_10:
      uint64_t result = v2;
      break;
    default:
      id v3 = objc_msgSend(v18[0], sel_loginChoices);
      __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
      uint64_t v4 = sub_21922B4E8();

      uint64_t result = v4;
      break;
  }
  return result;
}

void sub_2191F83D0(uint64_t *a1@<X8>)
{
  id v3 = *v1;
  unint64_t v4 = ASAuthorizationUIContext.loginChoicesToShow.getter();
  unint64_t v5 = v4;
  if (v4 >> 62) {
    goto LABEL_53;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_48;
  }
LABEL_3:
  id v32 = v3;
  uint64_t v33 = a1;
  unint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v36 = v6;
  unint64_t v37 = v5 & 0xC000000000000001;
  uint64_t v34 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v35 = v5;
  while (1)
  {
    while (1)
    {
      if (v37)
      {
        id v11 = (void *)MEMORY[0x21D483640](v7, v5);
        unint64_t v12 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_51;
        }
      }
      else
      {
        if (v7 >= *(void *)(v34 + 16)) {
          goto LABEL_52;
        }
        id v11 = *(void **)(v5 + 8 * v7 + 32);
        swift_unknownObjectRetain();
        unint64_t v12 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          uint64_t v6 = sub_21922B748();
          if (!v6) {
            goto LABEL_48;
          }
          goto LABEL_3;
        }
      }
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        uint64_t v14 = (void *)v13;
        swift_unknownObjectRetain();
        if (objc_msgSend(v14, sel_isExternal))
        {
          if (v10)
          {
            id v15 = objc_msgSend(v14, sel_providerBundleIdentifier);
            id v3 = (void *)sub_21922B468();
            uint64_t v17 = v16;

            if ((void *)v9 == v3 && v10 == v17)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v5 = v35;
            }
            else
            {
              char v18 = sub_21922B868();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v5 = v35;
              if ((v18 & 1) == 0)
              {
                swift_unknownObjectRelease_n();
                goto LABEL_42;
              }
            }
          }
          id v19 = objc_msgSend(v14, sel_providerBundleIdentifier);
          uint64_t v9 = sub_21922B468();
          uint64_t v10 = v20;

          swift_unknownObjectRelease();
          char v8 = 1;
        }
        else
        {
          swift_unknownObjectRelease();
          if (v8) {
            goto LABEL_40;
          }
          char v8 = 0;
        }
      }
      self;
      uint64_t v21 = swift_dynamicCastObjCClass();
      if (!v21) {
        goto LABEL_31;
      }
      id v3 = (void *)v21;
      swift_unknownObjectRetain();
      id v22 = objc_msgSend(v3, sel_externalCredentialProviderBundleID);
      if (!v22)
      {
        swift_unknownObjectRelease();
        if ((v8 & 1) == 0)
        {
          char v8 = 0;
          goto LABEL_31;
        }
LABEL_40:
        swift_unknownObjectRelease();
LABEL_41:
        swift_bridgeObjectRelease();
LABEL_42:
        uint64_t v27 = v33;
LABEL_43:
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      id v3 = v22;
      uint64_t v23 = sub_21922B468();
      uint64_t v25 = v24;

      if (v10)
      {
        if (v9 == v23 && v10 == v25)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v26 = sub_21922B868();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v27 = v33;
            goto LABEL_43;
          }
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
      char v8 = 1;
      uint64_t v9 = v23;
      uint64_t v10 = v25;
      unint64_t v5 = v35;
LABEL_31:
      a1 = (uint64_t *)objc_msgSend(v11, sel_loginChoiceKind);
      swift_unknownObjectRelease();
      if (!a1) {
        break;
      }
      if (v12 == v36)
      {
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0) {
          goto LABEL_47;
        }
        uint64_t v27 = v33;
        if (v10)
        {
          *uint64_t v33 = v9;
          v33[1] = v10;
LABEL_45:
          v27[2] = 0;
          *((unsigned char *)v27 + 24) = 1;
          return;
        }
LABEL_44:
        id v28 = objc_msgSend(v32, sel_appIdentifier);
        uint64_t v29 = sub_21922B468();
        uint64_t v31 = v30;

        uint64_t *v27 = v29;
        v27[1] = v31;
        goto LABEL_45;
      }
      ++v7;
    }
    if (v8) {
      goto LABEL_41;
    }
    if (v12 == v36) {
      break;
    }
    char v8 = 0;
    ++v7;
  }
  swift_bridgeObjectRelease();
LABEL_47:
  a1 = v33;
LABEL_48:
  swift_bridgeObjectRelease();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 2;
  *((unsigned char *)a1 + 24) = 4;
}

uint64_t sub_2191F8850@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 44))
  {
    if (*(unsigned char *)(v1 + 44) == 1)
    {
      if (qword_267C109F0 != -1) {
        swift_once();
      }
      char v3 = 1;
      unint64_t v4 = &qword_267C16260;
    }
    else if (*(void *)(v1 + 32) == 1)
    {
      if (qword_267C109F8 != -1) {
        swift_once();
      }
      char v3 = 3;
      unint64_t v4 = &qword_267C16270;
    }
    else
    {
      if (qword_267C109E0 != -1) {
        swift_once();
      }
      char v3 = 1;
      unint64_t v4 = &qword_267C16240;
    }
  }
  else
  {
    if (qword_267C10A00 != -1) {
      swift_once();
    }
    char v3 = 4;
    unint64_t v4 = &qword_267C16280;
  }
  uint64_t v5 = v4[1];
  *(void *)a1 = *v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v3;

  return swift_bridgeObjectRetain();
}

void ASAuthorizationUIContext.iconType.getter(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 41);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      id v4 = objc_msgSend(*(id *)v1, sel_appIdentifier, *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 16), *(void *)(v1 + 8));
      uint64_t v5 = sub_21922B468();
      uint64_t v7 = v6;

      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 24) = 1;
      break;
    case 2:
      sub_2191E99C8((uint64_t *)a1);
      break;
    case 3:
      BOOL v8 = v3 == 0;
      uint64_t v9 = 0x6C69662E6B636F6CLL;
      if (*(unsigned char *)(v1 + 41)) {
        uint64_t v9 = 1;
      }
      unint64_t v10 = 0xE90000000000006CLL;
      goto LABEL_11;
    case 4:
      BOOL v8 = v3 == 0;
      uint64_t v9 = 0x6F6C63692E79656BLL;
      if (*(unsigned char *)(v1 + 41)) {
        uint64_t v9 = 1;
      }
      unint64_t v10 = 0xEA00000000006475;
LABEL_11:
      if (!v8) {
        unint64_t v10 = 0;
      }
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v10;
      if (v3) {
        char v11 = 4;
      }
      else {
        char v11 = 3;
      }
      *(void *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 24) = v11;
      break;
    case 5:
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 1;
      *(unsigned char *)(a1 + 24) = 4;
      break;
    case 6:
      sub_2191E82EC(a1);
      break;
    default:
      sub_2191EB080(a1);
      break;
  }
}

uint64_t sub_2191F8BDC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_21922B748();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21922B748();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x21D483650](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    unint64_t *v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t v10 = sub_2191FCF90(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_21922B748();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return MEMORY[0x270F9DBB8](v10);
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  uint64_t v10 = swift_bridgeObjectRelease();

  return MEMORY[0x270F9DBB8](v10);
}

uint64_t sub_2191F8DA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_2191F1AE0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

uint64_t sub_2191F8EFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_2191F1494(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for ASImportableItem(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

BOOL sub_2191F90A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ASAuthorizationUIContext.Header.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASAuthorizationUIContext.Header.leadingSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASAuthorizationUIContext.MainButton.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void ASAuthorizationUIContext.MainButton.action.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t ASAuthorizationUIContext.OtherOptionsText.hash(into:)()
{
  return sub_21922B8C8();
}

BOOL static ASAuthorizationUIContext.OtherOptionsText.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ASAuthorizationUIContext.OtherOptionsText.hashValue.getter()
{
  return sub_21922B8F8();
}

id ASAuthorizationUIContext.presentationContext.getter()
{
  return *v0;
}

void ASAuthorizationUIContext.presentationContext.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*ASAuthorizationUIContext.presentationContext.modify())()
{
  return nullsub_1;
}

uint64_t ASAuthorizationUIContext.service.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  char v3 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 8);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return sub_2191E8EA0();
}

uint64_t ASAuthorizationUIContext.service.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_2191E9638();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v4;
  return result;
}

uint64_t (*ASAuthorizationUIContext.service.modify())()
{
  return nullsub_1;
}

uint64_t ASAuthorizationUIContext.biometryType.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ASAuthorizationUIContext.biometryType.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*ASAuthorizationUIContext.biometryType.modify())()
{
  return nullsub_1;
}

uint64_t sub_2191F9300(uint64_t a1)
{
  return sub_2191F93C0(a1, 0x6E49206E676953, 0xE700000000000000, &qword_267C16240, algn_267C16248);
}

uint64_t sub_2191F9324(uint64_t a1)
{
  return sub_2191F93C0(a1, 0x65756E69746E6F43, 0xE800000000000000, &qword_267C16250, algn_267C16258);
}

uint64_t sub_2191F9348(uint64_t a1)
{
  return sub_2191F93C0(a1, 0xD000000000000015, 0x800000021923C280, &qword_267C16260, algn_267C16268);
}

uint64_t sub_2191F9370(uint64_t a1)
{
  return sub_2191F93C0(a1, 0x1000000000000016, 0x800000021923C2A0, &qword_267C16270, algn_267C16278);
}

uint64_t sub_2191F9398(uint64_t a1)
{
  return sub_2191F93C0(a1, 0xD000000000000015, 0x800000021923C260, &qword_267C16280, algn_267C16288);
}

uint64_t sub_2191F93C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_21922AF08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922AEF8();
  uint64_t v11 = sub_21922AEE8();
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a4 = v11;
  *a5 = v13;
  return result;
}

uint64_t ASAuthorizationUIContext.header.getter@<X0>(uint64_t *a1@<X8>)
{
  id v81 = a1;
  uint64_t v2 = sub_21922AF08();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v9 = (char *)&v71 - v8;
  id v10 = *(id *)v1;
  uint64_t v11 = *(char ***)(v1 + 8);
  uint64_t v12 = *(void *)(v1 + 16);
  LOBYTE(v13) = *(unsigned char *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = *(unsigned __int8 *)(v1 + 40);
  LOBYTE(v16) = *(unsigned char *)(v1 + 41);
  char v17 = *(unsigned char *)(v1 + 42);
  LOBYTE(v18) = *(unsigned char *)(v1 + 43);
  int v19 = *(unsigned __int8 *)(v1 + 44);
  int v20 = *(unsigned __int8 *)(v1 + 45);
  int v21 = *(unsigned __int8 *)(v1 + 46);
  int v22 = *(unsigned __int8 *)(v1 + 47);
  int v23 = *(unsigned __int8 *)(v1 + 48);
  int v24 = *(unsigned __int8 *)(v1 + 49);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      if (objc_msgSend(self, sel_isAppleAccountBrandingEnabled))
      {
        sub_21922AEF8();
        sub_21922AEF8();
        uint64_t v33 = sub_21922AED8();
        uint64_t v35 = v34;
        goto LABEL_22;
      }
      sub_21922AEF8();
      uint64_t v33 = sub_21922AEE8();
      uint64_t v35 = v45;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v9, v32);
      goto LABEL_58;
    case 2:
      id v36 = *(id *)v1;
      id v85 = *(id *)v1;
      uint64_t v86 = v11;
      uint64_t v87 = v12;
      char v88 = v13;
      uint64_t v89 = v14;
      char v90 = 2;
      char v91 = v16;
      char v92 = v17;
      char v93 = v18;
      int v76 = v22;
      LODWORD(v77) = v19;
      char v94 = v19;
      int v79 = v20;
      int v80 = v21;
      char v95 = v20;
      char v96 = v21;
      char v97 = v22;
      int v78 = v23;
      char v98 = v23;
      char v37 = v24;
      char v99 = v24;
      ASAuthorizationUIContext.iconType.getter((uint64_t)&v82);
      if (v84 < 4u)
      {
        sub_2191FEC1C(v82, v83, *((uint64_t *)&v83 + 1), v84);
        goto LABEL_11;
      }
      if (!(*((void *)&v83 + 1) | (unint64_t)v83 | v82) || v82 == 1 && v83 == 0) {
        goto LABEL_69;
      }
      id v85 = v36;
      uint64_t v86 = v11;
      uint64_t v87 = v12;
      char v88 = v13;
      uint64_t v89 = v14;
      char v90 = 2;
      char v91 = v16;
      char v92 = v17;
      char v93 = v18;
      char v94 = v77;
      char v95 = v79;
      char v96 = v80;
      char v97 = v76;
      char v98 = v78;
      char v99 = v37;
      unint64_t v46 = ASAuthorizationUIContext.loginChoicesToShow.getter();
      if (v46 >> 62) {
        uint64_t v47 = sub_21922B748();
      }
      else {
        uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = qword_267C109E0;
      if (v47 >= 2) {
        goto LABEL_70;
      }
      goto LABEL_12;
    case 3:
      if (qword_267C109E0 != -1)
      {
        id v75 = *(id *)v1;
        int v79 = v20;
        int v80 = v21;
        char v68 = v24;
        char v69 = v23;
        char v70 = v22;
        LODWORD(v77) = v19;
        swift_once();
        LOBYTE(v19) = v77;
        LOBYTE(v20) = v79;
        LOBYTE(v21) = v80;
        LOBYTE(v22) = v70;
        LOBYTE(v23) = v69;
        LOBYTE(v24) = v68;
        id v10 = v75;
      }
      uint64_t v26 = qword_267C16240;
      uint64_t v25 = *(void *)algn_267C16248;
      id v85 = v10;
      uint64_t v86 = v11;
      uint64_t v87 = v12;
      char v88 = v13;
      uint64_t v89 = v14;
      char v90 = 3;
      char v91 = v16;
      char v92 = v17;
      char v93 = v18;
      char v94 = v19;
      char v95 = v20;
      char v96 = v21;
      char v97 = v22;
      char v98 = v23;
      char v99 = v24;
      swift_bridgeObjectRetain();
      ASAuthorizationUIContext.iconType.getter((uint64_t)&v82);
      uint64_t v27 = v82;
      uint64_t v29 = *((void *)&v83 + 1);
      unint64_t v28 = v83;
      switch(v84)
      {
        case 1u:
          goto LABEL_23;
        case 2u:
          goto LABEL_24;
        case 3u:
          goto LABEL_25;
        case 4u:
          uint64_t v30 = *((void *)&v83 + 1) | v83;
          if (!(*((void *)&v83 + 1) | (unint64_t)v83 | v82)) {
            goto LABEL_63;
          }
          if (v82 == 1) {
            goto LABEL_61;
          }
          goto LABEL_64;
        default:
          goto LABEL_18;
      }
    case 4:
    case 5:
      if (qword_267C109E0 == -1) {
        goto LABEL_3;
      }
      goto LABEL_80;
    case 6:
      uint64_t v72 = v7;
      uint64_t v73 = v6;
      id v85 = v10;
      uint64_t v86 = v11;
      uint64_t v87 = v12;
      char v88 = v13;
      uint64_t v89 = v14;
      char v90 = 6;
      char v91 = v16;
      char v92 = v17;
      char v93 = v18;
      char v94 = v19;
      char v95 = v20;
      char v96 = v21;
      char v97 = v22;
      char v98 = v23;
      char v99 = v24;
      id v75 = v10;
      int v74 = v24;
      int v78 = v23;
      int v79 = v20;
      int v76 = v22;
      LODWORD(v77) = v19;
      int v80 = v21;
      if (sub_2191F7FBC())
      {
        if (objc_msgSend(self, sel_isAppleAccountBrandingEnabled))
        {
          sub_21922AEF8();
          sub_21922AEF8();
          uint64_t v33 = sub_21922AED8();
          uint64_t v35 = v42;
          uint64_t v31 = v72;
          uint64_t v32 = v73;
LABEL_22:
          uint64_t v43 = *(void (**)(char *, uint64_t))(v31 + 8);
          v43(v5, v32);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v43)(v9, v32);
        }
        else
        {
          sub_21922AEF8();
          uint64_t v33 = sub_21922AEE8();
          uint64_t v35 = v58;
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v9, v73);
        }
LABEL_58:
        uint64_t v59 = v81;
        *id v81 = v33;
        v59[1] = v35;
        v59[2] = 0;
        v59[3] = 0;
        return result;
      }
      id v85 = v75;
      uint64_t v86 = v11;
      uint64_t v87 = v12;
      char v88 = v13;
      uint64_t v89 = v14;
      char v90 = 6;
      char v91 = v16;
      char v92 = v17;
      char v93 = v18;
      char v94 = v77;
      char v95 = v79;
      char v96 = v80;
      char v97 = v76;
      char v98 = v78;
      char v99 = v74;
      unint64_t v48 = ASAuthorizationUIContext.loginChoicesToShow.getter();
      unint64_t v49 = v48;
      if (v48 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_21922B748();
        uint64_t v11 = &selRef_groupName;
        if (v16) {
          goto LABEL_36;
        }
LABEL_44:
        swift_bridgeObjectRelease_n();
        id v53 = objc_msgSend(v75, sel_loginChoices);
        __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
        unint64_t v54 = sub_21922B4E8();

        if (v54 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = sub_21922B748();
          if (v16)
          {
LABEL_46:
            unint64_t v13 = v54 & 0xC000000000000001;
            uint64_t v12 = 4;
            while (1)
            {
              uint64_t v55 = v12 - 4;
              if (v13)
              {
                uint64_t v56 = (void *)MEMORY[0x21D483640](v12 - 4, v54);
                uint64_t v18 = v12 - 3;
                if (__OFADD__(v55, 1)) {
                  goto LABEL_79;
                }
              }
              else
              {
                uint64_t v56 = *(void **)(v54 + 8 * v12);
                swift_unknownObjectRetain();
                uint64_t v18 = v12 - 3;
                if (__OFADD__(v55, 1)) {
                  goto LABEL_79;
                }
              }
              if ([v56 v11[265]] == (id)4) {
                break;
              }
              id v57 = [v56 v11[265]];
              swift_unknownObjectRelease();
              if (v57 == (id)3)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_11;
              }
              ++v12;
              if (v18 == v16) {
                goto LABEL_55;
              }
            }
            swift_bridgeObjectRelease_n();
            swift_unknownObjectRelease();
LABEL_11:
            uint64_t v38 = qword_267C109E0;
LABEL_12:
            if (v38 != -1) {
              swift_once();
            }
            uint64_t v39 = *(void *)algn_267C16248;
            uint64_t v40 = v81;
            *id v81 = qword_267C16240;
            v40[1] = v39;
            v40[2] = 0xD000000000000015;
            v40[3] = 0x800000021923C0A0;
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v16 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v16) {
            goto LABEL_46;
          }
        }
LABEL_55:
        swift_bridgeObjectRelease_n();
        if ((objc_msgSend(v75, sel_isCABLEAuthenticatorRequest) & 1) == 0) {
          goto LABEL_69;
        }
        goto LABEL_11;
      }
      uint64_t v16 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v11 = &selRef_groupName;
      if (!v16) {
        goto LABEL_44;
      }
LABEL_36:
      unint64_t v13 = v49 & 0xC000000000000001;
      uint64_t v12 = 4;
      while (1)
      {
        uint64_t v50 = v12 - 4;
        if (!v13) {
          break;
        }
        uint64_t v51 = (void *)MEMORY[0x21D483640](v12 - 4, v49);
        uint64_t v18 = v12 - 3;
        if (__OFADD__(v50, 1)) {
          goto LABEL_78;
        }
LABEL_42:
        id v52 = [v51 v11[265]];
        swift_unknownObjectRelease();
        if (v52 == (id)2)
        {
          swift_bridgeObjectRelease_n();
LABEL_69:
          uint64_t v38 = qword_267C109E0;
LABEL_70:
          if (v38 != -1) {
            swift_once();
          }
          uint64_t v63 = *(void *)algn_267C16248;
          uint64_t v64 = v81;
          *id v81 = qword_267C16240;
          v64[1] = v63;
          v64[2] = 0;
          v64[3] = 0;
LABEL_73:
          return swift_bridgeObjectRetain();
        }
        ++v12;
        if (v18 == v16) {
          goto LABEL_44;
        }
      }
      uint64_t v51 = *(void **)(v49 + 8 * v12);
      swift_unknownObjectRetain();
      uint64_t v18 = v12 - 3;
      if (!__OFADD__(v50, 1)) {
        goto LABEL_42;
      }
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      id v75 = v10;
      int v78 = v23;
      int v79 = v20;
      uint64_t v77 = v15;
      char v65 = v24;
      char v66 = v22;
      int v80 = v21;
      char v67 = v19;
      swift_once();
      LOBYTE(v19) = v67;
      LOBYTE(v20) = v79;
      LOBYTE(v21) = v80;
      LOBYTE(v22) = v66;
      LOBYTE(v23) = v78;
      LOBYTE(v24) = v65;
      id v10 = v75;
      LOBYTE(v15) = v77;
LABEL_3:
      uint64_t v26 = qword_267C16240;
      uint64_t v25 = *(void *)algn_267C16248;
      id v85 = v10;
      uint64_t v86 = v11;
      uint64_t v87 = v12;
      char v88 = v13;
      uint64_t v89 = v14;
      char v90 = v15;
      char v91 = v16;
      char v92 = v17;
      char v93 = v18;
      char v94 = v19;
      char v95 = v20;
      char v96 = v21;
      char v97 = v22;
      char v98 = v23;
      char v99 = v24;
      swift_bridgeObjectRetain();
      ASAuthorizationUIContext.iconType.getter((uint64_t)&v82);
      uint64_t v27 = v82;
      uint64_t v29 = *((void *)&v83 + 1);
      unint64_t v28 = v83;
      switch(v84)
      {
        case 1u:
LABEL_23:
          char v41 = 1;
          goto LABEL_66;
        case 2u:
LABEL_24:
          char v41 = 2;
          goto LABEL_66;
        case 3u:
LABEL_25:
          char v41 = 3;
          goto LABEL_66;
        case 4u:
          uint64_t v30 = *((void *)&v83 + 1) | v83;
          if (*((void *)&v83 + 1) | (unint64_t)v83 | v82)
          {
            if (v82 == 1)
            {
LABEL_61:
              if (!v30)
              {
                sub_2191FEC1C(1, 0, 0, 4);
                uint64_t result = sub_2191FEC1C(1, 0, 0, 4);
                unint64_t v60 = 0;
                unint64_t v61 = 0;
                goto LABEL_67;
              }
            }
LABEL_64:
            uint64_t v27 = 2;
          }
          else
          {
LABEL_63:
            uint64_t v27 = 0;
          }
          unint64_t v28 = 0;
          uint64_t v29 = 0;
          char v41 = 4;
LABEL_66:
          sub_2191FEC1C(v27, v28, v29, v41);
          uint64_t result = sub_2191FEC1C(1, 0, 0, 4);
          unint64_t v61 = 0x800000021923C0A0;
          unint64_t v60 = 0xD000000000000015;
LABEL_67:
          uint64_t v62 = v81;
          *id v81 = v26;
          v62[1] = v25;
          v62[2] = v60;
          v62[3] = v61;
          break;
        default:
LABEL_18:
          char v41 = 0;
          goto LABEL_66;
      }
      return result;
    default:
      goto LABEL_69;
  }
}

double ASAuthorizationUIContext.title.getter@<D0>(void *a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 41);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 2:
      if (!*(unsigned char *)(v1 + 41))
      {
        id v4 = *(id *)v1;
        sub_2191E8EA0();
        ASAuthorizationUIContext.iconType.getter((uint64_t)&v10);
        switch(v12)
        {
          case 1:
            sub_2191FEC1C(v10, v11, *((uint64_t *)&v11 + 1), 1);
            goto LABEL_22;
          case 2:
            char v5 = 2;
            goto LABEL_16;
          case 3:
            sub_2191FEC1C(v10, v11, *((uint64_t *)&v11 + 1), 3);

            sub_2191E9638();
            goto LABEL_2;
          case 4:
            if (!(*((void *)&v11 + 1) | (unint64_t)v11 | v10) || v10 != 1 || v11 != 0) {
              goto LABEL_17;
            }
LABEL_22:
            unsigned int v9 = objc_msgSend(v4, sel_isRegistrationRequest);

            sub_2191E9638();
            *a1 = 0;
            if (v9) {
              uint64_t v7 = 2;
            }
            else {
              uint64_t v7 = 3;
            }
            goto LABEL_12;
          default:
            char v5 = 0;
LABEL_16:
            sub_2191FEC1C(v10, v11, *((uint64_t *)&v11 + 1), v5);
LABEL_17:

            sub_2191E9638();
            double result = 0.0;
            *(_OWORD *)a1 = xmmword_219232DA0;
            return result;
        }
      }
      goto LABEL_2;
    case 3:
      BOOL v6 = v3 == 0;
      uint64_t v7 = 5;
      goto LABEL_9;
    case 4:
      BOOL v6 = v3 == 0;
      uint64_t v7 = 6;
      goto LABEL_9;
    case 5:
      BOOL v6 = v3 == 0;
      uint64_t v7 = 7;
LABEL_9:
      if (!v6) {
        uint64_t v7 = 0;
      }
      *a1 = 0;
LABEL_12:
      a1[1] = v7;
      break;
    default:
LABEL_2:
      *a1 = 0;
      a1[1] = 0;
      break;
  }
  return result;
}

void ASAuthorizationUIContext.otherOptionsText.getter(char *a1@<X8>)
{
  if ((*(unsigned char *)(v1 + 41) & 1) != 0 || *(unsigned __int8 *)(v1 + 40) < 2u)
  {
LABEL_3:
    char v3 = 0;
LABEL_4:
    *a1 = v3;
    return;
  }
  id v4 = *(id *)v1;
  unsigned int v5 = objc_msgSend(*(id *)v1, sel_isRegistrationRequest);
  id v6 = v4;
  sub_2191E8EA0();
  id v7 = objc_msgSend(v6, sel_loginChoices);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
  unint64_t v8 = sub_21922B4E8();

  if (v5)
  {
    unint64_t v9 = sub_2191E93E4(v8, (uint64_t)&unk_26CA8ED50);

    swift_bridgeObjectRelease();
    sub_2191E9638();
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_21922B748();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v10 != 1)
    {
LABEL_22:
      id v24 = v6;
      sub_2191E8EA0();
      id v25 = objc_msgSend(v24, sel_loginChoices);
      unint64_t v26 = sub_21922B4E8();

      unint64_t v27 = sub_2191E93E4(v26, (uint64_t)&unk_26CA8EDD0);
      swift_bridgeObjectRelease();
      sub_2191E9638();
      if (v27 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_21922B748();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v28 >= 1)
      {
        char v3 = 4;
        goto LABEL_4;
      }
      goto LABEL_3;
    }
    id v11 = v6;
    sub_2191E8EA0();
    id v12 = objc_msgSend(v11, sel_loginChoices);
    unint64_t v13 = sub_21922B4E8();

    uint64_t v14 = sub_2191E93E4(v13, (uint64_t)&unk_26CA8ED90);
    swift_bridgeObjectRelease();
    sub_2191E9638();
    if ((v14 & 0xC000000000000001) != 0)
    {
      uint64_t v15 = (void *)MEMORY[0x21D483640](0, v14);
LABEL_12:
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(v15, sel_loginChoiceKind);
      swift_unknownObjectRelease();
      if (v16 == (id)4)
      {
        char v3 = 2;
        goto LABEL_4;
      }
      goto LABEL_22;
    }
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v15 = *(void **)(v14 + 32);
      swift_unknownObjectRetain();
      goto LABEL_12;
    }
    __break(1u);
LABEL_36:
    int v22 = (void *)MEMORY[0x21D483640](0, v14);
LABEL_20:
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v22, sel_loginChoiceKind);
    swift_unknownObjectRelease();
    if (v23 == (id)4)
    {
      char v3 = 1;
      goto LABEL_4;
    }
    goto LABEL_26;
  }
  unint64_t v17 = sub_2191E93E4(v8, (uint64_t)&unk_26CA8EE10);

  swift_bridgeObjectRelease();
  sub_2191E9638();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_21922B748();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v18 != 1)
  {
LABEL_26:
    id v29 = v6;
    sub_2191E8EA0();
    id v30 = objc_msgSend(v29, sel_loginChoices);
    unint64_t v31 = sub_21922B4E8();

    unint64_t v32 = sub_2191E93E4(v31, (uint64_t)&unk_26CA8EE90);
    swift_bridgeObjectRelease();
    sub_2191E9638();
    if (v32 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_21922B748();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v33 > 0)
    {
      char v3 = 3;
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v19 = v6;
  sub_2191E8EA0();
  id v20 = objc_msgSend(v19, sel_loginChoices);
  unint64_t v21 = sub_21922B4E8();

  uint64_t v14 = sub_2191E93E4(v21, (uint64_t)&unk_26CA8EE50);
  swift_bridgeObjectRelease();
  sub_2191E9638();
  if ((v14 & 0xC000000000000001) != 0) {
    goto LABEL_36;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    int v22 = *(void **)(v14 + 32);
    swift_unknownObjectRetain();
    goto LABEL_20;
  }
  __break(1u);
}

id ASAuthorizationUIContext.shouldShowManualPasswordEntryButton.getter()
{
  id v1 = *v0;
  id result = objc_msgSend(*v0, sel_isProxiedRequest);
  if (result) {
    return (id)((unint64_t)objc_msgSend(v1, sel_requestTypes) & 1);
  }
  return result;
}

double ASAuthorizationUIContext.message(for:)@<D0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(unsigned __int8 *)(v2 + 24);
  switch(*(unsigned char *)(v2 + 40))
  {
    case 1:
      *(void *)&double result = 1;
      *(_OWORD *)a2 = xmmword_219232D30;
      a2[3] = 0;
      a2[4] = 0;
      a2[2] = 0x8000000000000000;
      break;
    case 2:
      sub_2191E9640(a2);
      break;
    case 3:
      if (*(unsigned char *)(v2 + 41)) {
        goto LABEL_8;
      }
      uint64_t v5 = 0;
      uint64_t v8 = 0x8000000000000000;
      uint64_t v4 = 5;
      goto LABEL_15;
    case 4:
      if (*(unsigned char *)(v2 + 41))
      {
LABEL_8:
        uint64_t v8 = v6 | 0x4000000000000000;
        sub_2191E8EA0();
      }
      else
      {
        uint64_t v4 = 0;
        uint64_t v5 = 0;
        uint64_t v8 = 0x8000000000000000;
      }
LABEL_15:
      *a2 = v4;
      a2[1] = v5;
      a2[3] = 0;
      a2[4] = 0;
      a2[2] = v8;
      break;
    case 5:
      if (*(unsigned char *)(v2 + 41))
      {
        *a2 = v4;
        a2[1] = v5;
        a2[3] = 0;
        a2[4] = 0;
        a2[2] = v6 | 0x4000000000000000;
        sub_2191E8EA0();
      }
      else
      {
        uint64_t v9 = 6;
        if (*(unsigned char *)(v2 + 46)) {
          uint64_t v9 = 8;
        }
        *a2 = v9;
        double result = 0.0;
        *(_OWORD *)(a2 + 1) = xmmword_2192333C0;
        a2[3] = 0;
        a2[4] = 0;
      }
      break;
    case 6:
      sub_2191E8590(a1, (uint64_t)a2);
      break;
    default:
      sub_2191EAC98(a2);
      break;
  }
  return result;
}

id ASAuthorizationUIContext.mainButton(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_21922AF08();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v45 - v10;
  id result = (id)v2[1];
  uint64_t v13 = v2[2];
  char v14 = *((unsigned char *)v2 + 24);
  uint64_t v15 = v2[4];
  char v16 = *((unsigned char *)v2 + 41);
  char v17 = *((unsigned char *)v2 + 42);
  char v18 = *((unsigned char *)v2 + 43);
  int v19 = *((unsigned __int8 *)v2 + 44);
  char v20 = *((unsigned char *)v2 + 45);
  char v21 = *((unsigned char *)v2 + 46);
  char v22 = *((unsigned char *)v2 + 47);
  char v23 = *((unsigned char *)v2 + 48);
  char v24 = *((unsigned char *)v2 + 49);
  switch(*((unsigned char *)v2 + 40))
  {
    case 1:
      uint64_t v47 = *v2;
      id v48 = result;
      uint64_t v49 = v13;
      char v50 = v14;
      uint64_t v51 = v15;
      LOBYTE(v52) = 1;
      HIBYTE(v52) = v16;
      char v53 = v17;
      char v54 = v18;
      char v55 = v19;
      char v56 = v20;
      char v57 = v21;
      char v58 = v22;
      char v59 = v23;
      char v60 = v24;
      id result = (id)sub_2191F8850((uint64_t)&v45);
      char v27 = v46;
      *(_OWORD *)a2 = v45;
      goto LABEL_29;
    case 2:
      uint64_t v47 = *v2;
      id v48 = result;
      uint64_t v49 = v13;
      char v50 = v14;
      uint64_t v51 = v15;
      LOBYTE(v52) = 2;
      HIBYTE(v52) = v16;
      goto LABEL_16;
    case 3:
      if (*((unsigned char *)v2 + 41))
      {
        uint64_t v47 = *v2;
        id v48 = result;
        uint64_t v49 = v13;
        char v50 = v14;
        uint64_t v51 = v15;
        __int16 v28 = 259;
        goto LABEL_15;
      }
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      switch(v15)
      {
        case 0:
        case 1:
        case 2:
        case 4:
          sub_21922AEF8();
          uint64_t v29 = sub_21922AEE8();
          unint64_t v30 = v44;
          id result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
          break;
        default:
          break;
      }
      *(void *)a2 = v29;
      *(void *)(a2 + 8) = v30;
      char v27 = 5;
      goto LABEL_29;
    case 4:
      if (*((unsigned char *)v2 + 41))
      {
        uint64_t v47 = *v2;
        id v48 = result;
        uint64_t v49 = v13;
        char v50 = v14;
        uint64_t v51 = v15;
        __int16 v28 = 260;
        goto LABEL_15;
      }
      if (*((unsigned char *)v2 + 43))
      {
        sub_21922AEF8();
        sub_21922AEF8();
        uint64_t v31 = sub_21922AED8();
        uint64_t v33 = v32;
        uint64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
        v34(v9, v5);
        id result = (id)((uint64_t (*)(char *, uint64_t))v34)(v11, v5);
        *(void *)a2 = v31;
        *(void *)(a2 + 8) = v33;
        char v27 = 6;
      }
      else
      {
        sub_21922AEF8();
        uint64_t v41 = sub_21922AEE8();
        uint64_t v43 = v42;
        id result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        *(void *)a2 = v41;
        *(void *)(a2 + 8) = v43;
        char v27 = 2;
      }
      goto LABEL_29;
    case 5:
      if (!*((unsigned char *)v2 + 41))
      {
        sub_21922AEF8();
        uint64_t v35 = sub_21922AEE8();
        uint64_t v37 = v36;
        id result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        *(void *)a2 = v35;
        *(void *)(a2 + 8) = v37;
        char v27 = 7;
        goto LABEL_29;
      }
      uint64_t v47 = *v2;
      id v48 = result;
      uint64_t v49 = v13;
      char v50 = v14;
      uint64_t v51 = v15;
      __int16 v28 = 261;
LABEL_15:
      __int16 v52 = v28;
LABEL_16:
      char v53 = v17;
      char v54 = v18;
      char v55 = v19;
      char v56 = v20;
      char v57 = v21;
      char v58 = v22;
      char v59 = v23;
      char v60 = v24;
      id result = (id)sub_2191E9F88(a2);
      break;
    case 6:
      uint64_t v47 = *v2;
      id v48 = result;
      uint64_t v49 = v13;
      char v50 = v14;
      uint64_t v51 = v15;
      LOBYTE(v52) = 6;
      HIBYTE(v52) = v16;
      char v53 = v17;
      char v54 = v18;
      char v55 = v19;
      char v56 = v20;
      char v57 = v21;
      char v58 = v22;
      char v59 = v23;
      char v60 = v24;
      return sub_2191E8B14(a1, a2);
    default:
      self;
      id result = (id)swift_dynamicCastObjCClass();
      if (result)
      {
        id v25 = result;
        swift_unknownObjectRetain();
        unsigned __int8 v26 = objc_msgSend(v25, sel_isExternal);
        if ((v26 & 1) == 0 && v19 == 2 && v15 == 1)
        {
          id result = (id)swift_unknownObjectRelease();
          *(void *)a2 = 0;
          *(void *)(a2 + 8) = 0;
          char v27 = 3;
        }
        else
        {
          char v38 = v26 ^ 1;
          if (qword_267C109E8 != -1) {
            swift_once();
          }
          uint64_t v40 = qword_267C16250;
          uint64_t v39 = *(void *)algn_267C16258;
          swift_bridgeObjectRetain();
          id result = (id)swift_unknownObjectRelease();
          char v27 = v38 & v23;
          *(void *)a2 = v40;
          *(void *)(a2 + 8) = v39;
        }
LABEL_29:
        *(unsigned char *)(a2 + 16) = v27;
      }
      else
      {
        *(_OWORD *)a2 = xmmword_219232DA0;
        *(unsigned char *)(a2 + 16) = 0;
      }
      break;
  }
  return result;
}

unint64_t ASAuthorizationUIContext.onlyHasOtherAccountsLoginChoices.getter()
{
  unint64_t v0 = ASAuthorizationUIContext.loginChoicesToShow.getter();
  if (v0 >> 62) {
    uint64_t v1 = sub_21922B748();
  }
  else {
    uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v1) {
    return 0;
  }
  unint64_t result = ASAuthorizationUIContext.loginChoicesToShow.getter();
  unint64_t v3 = result;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (result >> 62)
  {
    unint64_t result = sub_21922B748();
    uint64_t v4 = result;
    if (result)
    {
LABEL_6:
      if (v4 < 1)
      {
        __break(1u);
        return result;
      }
      for (uint64_t i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = (void *)MEMORY[0x21D483640](i, v3);
        }
        else
        {
          uint64_t v6 = *(void **)(v3 + 8 * i + 32);
          swift_unknownObjectRetain();
        }
        if (objc_msgSend(v6, sel_loginChoiceKind) == (id)5 || objc_msgSend(v6, sel_loginChoiceKind) == (id)6)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_21922B6D8();
          sub_21922B708();
          sub_21922B718();
          sub_21922B6E8();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = v9;
      if (v9 < 0) {
        goto LABEL_26;
      }
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = MEMORY[0x263F8EE78];
  if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_21922B748();
    swift_release();
    goto LABEL_24;
  }
LABEL_22:
  if ((v7 & 0x4000000000000000) != 0) {
    goto LABEL_26;
  }
  uint64_t v8 = *(void *)(v7 + 16);
LABEL_24:
  swift_release();
  return v8 == 0;
}

double ASAuthorizationUIContext.init(presentationContext:shouldExpandLoginChoices:configurationOverrides:)@<D0>(void *a1@<X0>, char a2@<W1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6 = *a3;
  uint64_t v7 = (void *)a3[1];
  unint64_t v8 = *((unsigned int *)a3 + 4) | ((unint64_t)*((unsigned __int8 *)a3 + 20) << 32);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10468]), sel_init);
  unsigned __int8 v84 = objc_msgSend(v9, sel_canEvaluatePolicy_error_, 1, 0);
  id v86 = v9;
  unsigned int v82 = objc_msgSend(v9, sel_canEvaluatePolicy_error_, 2, 0);
  char v88 = a1;
  uint64_t v10 = v6;
  id v87 = a1;
  if ((v6 & 0xFE) == 2)
  {
    id v11 = self;
    id v12 = a1;
    id v13 = objc_msgSend(v11, sel_sharedMonitor);
    unsigned __int8 v14 = objc_msgSend(v13, sel_isKeychainSyncEnabled);

    unsigned __int8 v81 = v14;
    unsigned __int8 v94 = v14;
    if (v6 == 3)
    {
LABEL_6:
      id v16 = objc_msgSend(self, sel_sharedMonitor);
      unsigned __int8 v17 = objc_msgSend(v16, sel_canKeychainSyncBeEnabled);

      char v95 = v17;
      if (v6 == 3) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else
  {
    unsigned __int8 v81 = v6 & 1;
    unsigned __int8 v94 = v6 & 1;
    id v15 = a1;
  }
  if ((v6 & 0xFF00) == 0x200) {
    goto LABEL_6;
  }
  char v95 = BYTE1(v6) & 1;
LABEL_9:
  if ((v6 & 0xFF000000) != 0x2000000)
  {
    uint64_t v19 = (v6 >> 24) & 1;
    char v97 = BYTE3(v6) & 1;
    goto LABEL_13;
  }
LABEL_10:
  id v18 = objc_msgSend(self, sel_sharedFeatureManager);
  LODWORD(v19) = objc_msgSend(v18, sel_shouldAutoFillPasswordsFromKeychain);

  char v97 = v19;
  if (v6 == 3)
  {
    id v91 = objc_msgSend(v86, sel_biometryType);
    char v20 = v87;
    goto LABEL_17;
  }
LABEL_13:
  if (v8)
  {
    id v91 = objc_msgSend(v86, sel_biometryType);
    char v20 = v87;
    if (v6 == 3) {
      goto LABEL_17;
    }
  }
  else
  {
    id v91 = v7;
    char v20 = v87;
  }
  if ((v8 & 0xFF000000) >> 24 != 2)
  {
    unsigned __int8 v100 = BYTE3(v8) & 1;
    goto LABEL_20;
  }
LABEL_17:
  unsigned __int8 v100 = objc_msgSend(self, sel_shouldRequireLocalAuthenticationForPasswords);
  if (v6 == 3)
  {
LABEL_21:
    unsigned __int8 v101 = objc_msgSend(self, sel_shouldRequireLocalAuthenticationForPlatformCredentials);
    char v93 = a2 & 1;
    if (v6 == 3) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_20:
  if (BYTE4(v8) == 2) {
    goto LABEL_21;
  }
  unsigned __int8 v101 = BYTE4(v8) & 1;
  char v93 = a2 & 1;
LABEL_24:
  if (BYTE2(v6) != 3)
  {
    unint64_t v21 = v6 >> 16;
    unsigned __int8 v96 = v21;
    goto LABEL_31;
  }
LABEL_25:
  if (v84)
  {
    LOBYTE(v21) = 2;
    unsigned __int8 v96 = 2;
  }
  else if (v82)
  {
    LOBYTE(v21) = 1;
    unsigned __int8 v96 = 1;
  }
  else
  {
    LOBYTE(v21) = 0;
    unsigned __int8 v96 = 0;
  }
LABEL_31:
  id v22 = objc_msgSend(v20, sel_serviceType);
  if (v22 == (id)1)
  {
    id v26 = objc_msgSend(v20, sel_serviceName);
    if (v26)
    {
      id v24 = v26;
      char v79 = v21;
      int v83 = v19;
      char v25 = 0;
      goto LABEL_37;
    }
LABEL_40:

    *(_WORD *)(a4 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
    return result;
  }
  if (v22) {
    goto LABEL_40;
  }
  id v23 = objc_msgSend(v20, sel_serviceName);
  if (v23)
  {
    id v24 = v23;
    char v79 = v21;
    int v83 = v19;
    char v25 = 1;
  }
  else
  {
    sub_2191F6FE8(0, &qword_267C10E88);
    id v38 = objc_msgSend(v20, sel_appIdentifier);
    sub_21922B468();

    id v55 = sub_2191FBEC8();
    char v79 = v21;
    int v83 = v19;
    id v24 = objc_msgSend(v55, sel_localizedName);

    char v25 = 1;
    char v20 = v87;
  }
LABEL_37:
  uint64_t v27 = sub_21922B468();
  uint64_t v29 = v28;

  *(void *)&long long v89 = v27;
  *((void *)&v89 + 1) = v29;
  unsigned __int8 v90 = v25;
  if (v10 == 3 || (v8 & 0xFF0000) == 0x20000)
  {
    id v31 = objc_msgSend(self, sel_sharedManager);
    unsigned int v32 = objc_msgSend(v31, sel_atLeastOneEnabledExtensionSupportsPasskeys);

    LODWORD(v80) = v32;
    char v99 = v32;
    if (v10 == 3) {
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v80 = (v8 >> 16) & 1;
    char v99 = (v8 & 0x10000) >> 16;
  }
  if (BYTE1(v8) != 2)
  {
    char v98 = BYTE1(v8) & 1;
    goto LABEL_49;
  }
LABEL_43:
  id v33 = objc_msgSend(self, sel_sharedManager);
  id v34 = objc_msgSend(v33, sel_extensionsSync);

  if (v34)
  {
    sub_2191F6FE8(0, &qword_267C10E78);
    sub_2191FEC6C();
    uint64_t v35 = sub_21922B538();

    sub_2191F7C24(v35);
    char v37 = v36;
    swift_bridgeObjectRelease();
    char v98 = v37 & 1;
  }
  else
  {
    char v98 = 0;
  }
  char v20 = v87;
LABEL_49:
  id v39 = objc_msgSend(v20, sel_loginChoices);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
  unint64_t v40 = sub_21922B4E8();

  if (v40 >> 62) {
    goto LABEL_69;
  }
  uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v41)
  {
    uint64_t v42 = 4;
    while (1)
    {
      uint64_t v43 = v42 - 4;
      if ((v40 & 0xC000000000000001) == 0) {
        break;
      }
      unint64_t v44 = (void *)MEMORY[0x21D483640](v42 - 4, v40);
      uint64_t v45 = v42 - 3;
      if (__OFADD__(v43, 1)) {
        goto LABEL_68;
      }
LABEL_60:
      if (objc_msgSend(v44, sel_loginChoiceKind) != (id)2) {
        goto LABEL_53;
      }
      self;
      uint64_t v46 = swift_dynamicCastObjCClass();
      if (!v46) {
        goto LABEL_53;
      }
      uint64_t v47 = (void *)v46;
      swift_unknownObjectRetain();
      id v48 = objc_msgSend(v47, sel_relyingPartyIdentifier);
      if (!v48)
      {
        swift_unknownObjectRelease();
LABEL_53:
        swift_unknownObjectRelease();
        goto LABEL_54;
      }
      uint64_t v49 = v48;
      uint64_t v50 = sub_21922B468();
      uint64_t v52 = v51;

      if (v50 == 0x6F632E656C707061 && v52 == 0xE90000000000006DLL)
      {
        char v54 = 2;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        goto LABEL_85;
      }
      char v53 = sub_21922B868();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      if (v53)
      {
        char v54 = 2;
        swift_bridgeObjectRelease_n();
        goto LABEL_85;
      }
LABEL_54:
      ++v42;
      if (v45 == v41) {
        goto LABEL_70;
      }
    }
    unint64_t v44 = *(void **)(v40 + 8 * v42);
    swift_unknownObjectRetain();
    uint64_t v45 = v42 - 3;
    if (!__OFADD__(v43, 1)) {
      goto LABEL_60;
    }
LABEL_68:
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_21922B748();
  }
LABEL_70:
  swift_bridgeObjectRelease_n();
  char v56 = v87;
  if (objc_msgSend(v87, sel_requestTypes) != (id)2)
  {
    if (objc_msgSend(v87, sel_requestTypes) == (id)1)
    {
      char v54 = 0;
      goto LABEL_86;
    }
    id v57 = objc_msgSend(v87, sel_loginChoices);
    unint64_t v58 = sub_21922B4E8();

    if (v58 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_21922B748();
      if (v59)
      {
LABEL_76:
        uint64_t v60 = 4;
        while (1)
        {
          uint64_t v61 = v60 - 4;
          if ((v58 & 0xC000000000000001) != 0)
          {
            char v56 = (void *)MEMORY[0x21D483640](v60 - 4, v58);
            BOOL v62 = __OFADD__(v61, 1);
            uint64_t v63 = v60 - 3;
            if (v62) {
              goto LABEL_116;
            }
          }
          else
          {
            char v56 = *(void **)(v58 + 8 * v60);
            swift_unknownObjectRetain();
            BOOL v62 = __OFADD__(v61, 1);
            uint64_t v63 = v60 - 3;
            if (v62)
            {
LABEL_116:
              __break(1u);
              goto LABEL_117;
            }
          }
          id v64 = objc_msgSend(v56, sel_loginChoiceKind);
          swift_unknownObjectRelease();
          if (v64 == (id)2) {
            break;
          }
          ++v60;
          if (v63 == v59) {
            goto LABEL_84;
          }
        }
        swift_bridgeObjectRelease_n();
        char v56 = v87;
        if ((objc_msgSend(v87, sel_requestTypes) & 1) != 0
          || (objc_msgSend(v87, sel_requestTypes) & 2) != 0)
        {
          char v54 = 6;
          goto LABEL_86;
        }
        if ((v83 | v80) != 1)
        {
          char v54 = 5;
          goto LABEL_86;
        }
        if (v79) {
          int v78 = 1;
        }
        else {
          int v78 = v80;
        }
        if (v78 != 1)
        {
          char v54 = 3;
          goto LABEL_86;
        }
        if ((v81 & 1) != 0 || (objc_msgSend(v87, sel_isRegistrationRequest) ^ 1 | v80) == 1)
        {
          char v54 = 2;
          goto LABEL_86;
        }
LABEL_117:
        char v54 = 4;
        goto LABEL_86;
      }
    }
    else
    {
      uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v59) {
        goto LABEL_76;
      }
    }
LABEL_84:
    swift_bridgeObjectRelease_n();
    char v54 = 6;
LABEL_85:
    char v56 = v87;
    goto LABEL_86;
  }
  char v54 = 1;
LABEL_86:
  unsigned __int8 v92 = v54;
  sub_2191FBFA0(v56, (unsigned __int8 *)&v88);

  uint64_t v65 = v90;
  id v66 = v91;
  __int16 v67 = v100;
  if (v93) {
    uint64_t v68 = 256;
  }
  else {
    uint64_t v68 = 0;
  }
  uint64_t v69 = 0x10000;
  if (!v94) {
    uint64_t v69 = 0;
  }
  uint64_t v70 = 0x1000000;
  if (!v95) {
    uint64_t v70 = 0;
  }
  unint64_t v71 = v68 | v92 | v69 | v70 | ((unint64_t)v96 << 32);
  uint64_t v72 = 0x10000000000;
  if (!v97) {
    uint64_t v72 = 0;
  }
  uint64_t v73 = 0x1000000000000;
  if (!v98) {
    uint64_t v73 = 0;
  }
  uint64_t v74 = v72 | v73;
  uint64_t v75 = 0x100000000000000;
  if (!v99) {
    uint64_t v75 = 0;
  }
  unint64_t v76 = v71 | v74 | v75;
  if (v101) {
    __int16 v77 = 256;
  }
  else {
    __int16 v77 = 0;
  }
  *(void *)a4 = v88;
  double result = *(double *)&v89;
  *(_OWORD *)(a4 + 8) = v89;
  *(void *)(a4 + 24) = v65;
  *(void *)(a4 + 32) = v66;
  *(void *)(a4 + 40) = v76;
  *(_WORD *)(a4 + 48) = v77 | v67;
  return result;
}

id sub_2191FBEC8()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v0 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithApplicationIdentifier_error_, v0, v5);

  if (v1)
  {
    id v2 = v5[0];
  }
  else
  {
    id v3 = v5[0];
    sub_21922AD88();

    swift_willThrow();
  }
  return v1;
}

void sub_2191FBFA0(void *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_21922B3D8();
  unsigned __int8 v101 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v94 = a1;
  id v7 = objc_msgSend(a1, sel_loginChoices);
  __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
  unint64_t v8 = sub_21922B4E8();

  LOBYTE(v7) = sub_2191F7924(v8, (uint64_t)a2);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0 && a2[40] - 3 >= 3) {
    a2[41] = 1;
  }
  if (qword_267C10A08 != -1) {
    goto LABEL_48;
  }
  while (1)
  {
    uint64_t v9 = __swift_project_value_buffer(v4, (uint64_t)qword_267C16290);
    uint64_t v10 = sub_21922B3B8();
    os_log_type_t v11 = sub_21922B5C8();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl(&dword_21918F000, v10, v11, "ASAuthorizationUIContext configuration:", v12, 2u);
      MEMORY[0x21D484570](v12, -1, -1);
    }

    LOBYTE(v106[0]) = a2[44];
    uint64_t v13 = sub_21922B478();
    unint64_t v15 = v14;
    swift_bridgeObjectRetain();
    id v16 = sub_21922B3B8();
    os_log_type_t v17 = sub_21922B5C8();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v99 = v4;
    uint64_t v100 = v9;
    char v98 = v6;
    if (v18)
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      v106[0] = v20;
      *(_DWORD *)uint64_t v19 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_2191F1BF0(v13, v15, v106);
      uint64_t v9 = v100;
      sub_21922B5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21918F000, v16, v17, "\tUser verification: %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D484570](v20, -1, -1);
      MEMORY[0x21D484570](v19, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    int v21 = a2[42];
    unint64_t v22 = a2[42] ? 0xE200000000000000 : 0xE300000000000000;
    swift_bridgeObjectRetain();
    id v23 = sub_21922B3B8();
    os_log_type_t v24 = sub_21922B5C8();
    if (os_log_type_enabled(v23, v24))
    {
      if (v21) {
        uint64_t v25 = 28271;
      }
      else {
        uint64_t v25 = 6710895;
      }
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v106[0] = v27;
      *(_DWORD *)id v26 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_2191F1BF0(v25, v22, v106);
      uint64_t v9 = v100;
      sub_21922B5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21918F000, v23, v24, "\tKeychain sync: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D484570](v27, -1, -1);
      MEMORY[0x21D484570](v26, -1, -1);

      if (a2[43]) {
        goto LABEL_23;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (a2[43]) {
        goto LABEL_23;
      }
    }
    uint64_t v28 = sub_21922B3B8();
    os_log_type_t v29 = sub_21922B5C8();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v30 = 0;
      _os_log_impl(&dword_21918F000, v28, v29, "\tKeychain sync restricted by configuration profile", v30, 2u);
      MEMORY[0x21D484570](v30, -1, -1);
    }

LABEL_23:
    int v31 = a2[45];
    if (a2[45]) {
      unint64_t v32 = 0xE200000000000000;
    }
    else {
      unint64_t v32 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    id v33 = sub_21922B3B8();
    os_log_type_t v34 = sub_21922B5C8();
    if (os_log_type_enabled(v33, v34))
    {
      if (v31) {
        uint64_t v35 = 28271;
      }
      else {
        uint64_t v35 = 6710895;
      }
      char v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v106[0] = v37;
      *(_DWORD *)char v36 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_2191F1BF0(v35, v32, v106);
      sub_21922B5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21918F000, v33, v34, "\tiCloud Keychain AutoFill: %{public}s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D484570](v37, -1, -1);
      MEMORY[0x21D484570](v36, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v6 = v98;
    uint64_t v4 = v99;
    id v38 = objc_msgSend(self, sel_sharedManager);
    id v39 = objc_msgSend(v38, sel_getEnabledExtensionsSynchronously);

    if (!v39) {
      goto LABEL_51;
    }
    sub_2191F6FE8(0, &qword_267C10E78);
    unint64_t v40 = sub_21922B4E8();

    uint64_t v41 = sub_21922B3B8();
    os_log_type_t v42 = sub_21922B5C8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_21918F000, v41, v42, "\tEnabled credential provider extension:", v43, 2u);
      MEMORY[0x21D484570](v43, -1, -1);
    }

    if (v40 >> 62) {
      break;
    }
    uint64_t v45 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v45) {
      goto LABEL_50;
    }
LABEL_37:
    id v103 = (void (**)(char *, uint64_t, uint64_t))(v101 + 2);
    unint64_t v104 = v40 & 0xC000000000000001;
    ++v101;
    uint64_t v46 = 4;
    *(void *)&long long v44 = 136446210;
    long long v97 = v44;
    uint64_t v95 = MEMORY[0x263F8EE58] + 8;
    unint64_t v96 = v40;
    unint64_t v102 = (unsigned __int8 *)v45;
    while (1)
    {
      id v47 = v104 ? (id)MEMORY[0x21D483640](v46 - 4, v40) : *(id *)(v40 + 8 * v46);
      id v48 = v47;
      a2 = (unsigned __int8 *)(v46 - 3);
      if (__OFADD__(v46 - 4, 1)) {
        break;
      }
      (*v103)(v6, v9, v4);
      id v49 = v48;
      uint64_t v50 = sub_21922B3B8();
      os_log_type_t v51 = sub_21922B5C8();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        v106[0] = v53;
        *(_DWORD *)uint64_t v52 = v97;
        id v54 = objc_msgSend(v49, sel__localizedName);
        if (!v54)
        {

          __break(1u);
          JUMPOUT(0x2191FCE90);
        }
        id v55 = v54;
        uint64_t v56 = sub_21922B468();
        unint64_t v58 = v57;

        *(void *)(v52 + 4) = sub_2191F1BF0(v56, v58, v106);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21918F000, v50, v51, "\t\t%{public}s", (uint8_t *)v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D484570](v53, -1, -1);
        MEMORY[0x21D484570](v52, -1, -1);

        unint64_t v6 = v98;
        uint64_t v4 = v99;
        (*v101)(v98, v99);
        uint64_t v9 = v100;
        unint64_t v40 = v96;
      }
      else
      {

        (*v101)(v6, v4);
      }
      ++v46;
      if (a2 == v102) {
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_48:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_21922B748();
  swift_bridgeObjectRelease();
  if (v45) {
    goto LABEL_37;
  }
LABEL_50:
  swift_bridgeObjectRelease();
LABEL_51:
  id v59 = objc_msgSend(v94, sel_requestTypes);
  if (v59)
  {
    unint64_t v60 = (unint64_t)v59;
    uint64_t v61 = (void *)MEMORY[0x263F8EE78];
    for (uint64_t i = 1; ; i *= 2)
    {
      if ((v60 & i) != 0)
      {
        switch(i)
        {
          case 1:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v61 = sub_2191F1AE0(0, v61[2] + 1, 1, v61);
            }
            unint64_t v68 = v61[2];
            unint64_t v67 = v61[3];
            if (v68 >= v67 >> 1) {
              uint64_t v61 = sub_2191F1AE0((void *)(v67 > 1), v68 + 1, 1, v61);
            }
            v61[2] = v68 + 1;
            uint64_t v63 = &v61[2 * v68];
            uint64_t v64 = 0x64726F7773736150;
            goto LABEL_54;
          case 2:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v61 = sub_2191F1AE0(0, v61[2] + 1, 1, v61);
            }
            unint64_t v70 = v61[2];
            unint64_t v69 = v61[3];
            if (v70 >= v69 >> 1) {
              uint64_t v61 = sub_2191F1AE0((void *)(v69 > 1), v70 + 1, 1, v61);
            }
            v61[2] = v70 + 1;
            uint64_t v63 = &v61[2 * v70];
            uint64_t v64 = 0x444920656C707041;
LABEL_54:
            v63[4] = v64;
            uint64_t v65 = v63 + 4;
            unint64_t v66 = 0xE800000000000000;
            goto LABEL_55;
          case 4:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v61 = sub_2191F1AE0(0, v61[2] + 1, 1, v61);
            }
            unint64_t v72 = v61[2];
            unint64_t v71 = v61[3];
            if (v72 >= v71 >> 1) {
              uint64_t v61 = sub_2191F1AE0((void *)(v71 > 1), v72 + 1, 1, v61);
            }
            v61[2] = v72 + 1;
            uint64_t v73 = &v61[2 * v72];
            v73[4] = 0xD000000000000014;
            uint64_t v65 = v73 + 4;
            unint64_t v66 = 0x800000021923C240;
            goto LABEL_55;
          case 8:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v61 = sub_2191F1AE0(0, v61[2] + 1, 1, v61);
            }
            unint64_t v75 = v61[2];
            unint64_t v74 = v61[3];
            if (v75 >= v74 >> 1) {
              uint64_t v61 = sub_2191F1AE0((void *)(v74 > 1), v75 + 1, 1, v61);
            }
            v61[2] = v75 + 1;
            unint64_t v76 = &v61[2 * v75];
            v76[4] = 0xD000000000000011;
            uint64_t v65 = v76 + 4;
            unint64_t v66 = 0x800000021923C220;
            goto LABEL_55;
          case 16:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v61 = sub_2191F1AE0(0, v61[2] + 1, 1, v61);
            }
            unint64_t v78 = v61[2];
            unint64_t v77 = v61[3];
            if (v78 >= v77 >> 1) {
              uint64_t v61 = sub_2191F1AE0((void *)(v77 > 1), v78 + 1, 1, v61);
            }
            v61[2] = v78 + 1;
            char v79 = &v61[2 * v78];
            v79[4] = 0xD000000000000019;
            uint64_t v65 = v79 + 4;
            unint64_t v66 = 0x800000021923C200;
            goto LABEL_55;
          case 32:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v61 = sub_2191F1AE0(0, v61[2] + 1, 1, v61);
            }
            unint64_t v81 = v61[2];
            unint64_t v80 = v61[3];
            if (v81 >= v80 >> 1) {
              uint64_t v61 = sub_2191F1AE0((void *)(v80 > 1), v81 + 1, 1, v61);
            }
            v61[2] = v81 + 1;
            unsigned int v82 = &v61[2 * v81];
            v82[4] = 0xD000000000000016;
            uint64_t v65 = v82 + 4;
            unint64_t v66 = 0x800000021923C1E0;
            goto LABEL_55;
          case 64:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v61 = sub_2191F1AE0(0, v61[2] + 1, 1, v61);
            }
            unint64_t v84 = v61[2];
            unint64_t v83 = v61[3];
            if (v84 >= v83 >> 1) {
              uint64_t v61 = sub_2191F1AE0((void *)(v83 > 1), v84 + 1, 1, v61);
            }
            v61[2] = v84 + 1;
            id v85 = &v61[2 * v84];
            v85[4] = 0x454C426163;
            uint64_t v65 = v85 + 4;
            unint64_t v66 = 0xE500000000000000;
LABEL_55:
            v65[1] = v66;
            break;
          default:
            break;
        }
        v60 &= ~i;
        if (!v60) {
          break;
        }
      }
    }
  }
  else
  {
    uint64_t v61 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  id v86 = sub_21922B3B8();
  os_log_type_t v87 = sub_21922B5C8();
  if (os_log_type_enabled(v86, v87))
  {
    char v88 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    uint64_t v105 = (uint64_t)v61;
    v106[0] = v89;
    *(_DWORD *)char v88 = 136315138;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EA8);
    sub_219200618(&qword_267C10EB0, &qword_267C10EA8);
    uint64_t v90 = sub_21922B448();
    unint64_t v92 = v91;
    swift_bridgeObjectRelease();
    uint64_t v105 = sub_2191F1BF0(v90, v92, v106);
    sub_21922B5F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21918F000, v86, v87, "\tRequest types: %s", v88, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D484570](v89, -1, -1);
    MEMORY[0x21D484570](v88, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_2191FCF90(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_21922B748();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21922B748();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_219200618((unint64_t *)&unk_267C10EC0, &qword_267C10EB8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EB8);
          id v12 = sub_2191FD1B8(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_267C10D50);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

void (*sub_2191FD1B8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2191FD268(v6, a2, a3);
  return sub_2191FD220;
}

void sub_2191FD220(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_2191FD268(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x21D483640](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_2191FD2E8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2191FD2E8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_2191FD2F0(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v24 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_31:
    uint64_t v4 = sub_21922B748();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      uint64_t v22 = a2;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v8 = &selRef_groupName;
      unint64_t v23 = v3;
      while (1)
      {
        if (v6)
        {
          uint64_t v9 = (void *)MEMORY[0x21D483640](v5, v3);
          unint64_t v10 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
LABEL_28:
            __break(1u);
            return v24;
          }
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16))
          {
            __break(1u);
            goto LABEL_31;
          }
          uint64_t v9 = *(void **)(v3 + 8 * v5 + 32);
          swift_unknownObjectRetain();
          unint64_t v10 = v5 + 1;
          if (__OFADD__(v5, 1)) {
            goto LABEL_28;
          }
        }
        if ([v9 v8[265]] == (id)2) {
          break;
        }
        swift_unknownObjectRelease();
LABEL_5:
        ++v5;
        if (v10 == v4) {
          return v24;
        }
      }
      uint64_t v11 = v4;
      self;
      id v12 = (void *)swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      id v13 = objc_msgSend(v12, sel_externalCredentialProviderName);
      if (v13)
      {
        uint64_t v14 = v13;
        swift_unknownObjectRelease();
      }
      else if (*(unsigned char *)(a2 + 44) {
             && ((*(unsigned char *)(a2 + 42) & 1) != 0
      }
              || (objc_msgSend(*(id *)a2, sel_isRegistrationRequest) & 1) == 0)
             && (*(unsigned char *)(a2 + 45) & 1) != 0)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        id v15 = objc_msgSend(v12, sel_relyingPartyIdentifier);
        if (!v15)
        {
          swift_unknownObjectRelease_n();
          a2 = v22;
          goto LABEL_13;
        }
        id v16 = v15;
        uint64_t v17 = sub_21922B468();
        uint64_t v19 = v18;

        if (v17 == 0x6F632E656C707061 && v19 == 0xE90000000000006DLL)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          a2 = v22;
        }
        else
        {
          char v20 = sub_21922B868();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          a2 = v22;
          if ((v20 & 1) == 0)
          {
            swift_unknownObjectRelease();
            goto LABEL_13;
          }
        }
      }
      sub_21922B6D8();
      sub_21922B708();
      sub_21922B718();
      sub_21922B6E8();
LABEL_13:
      uint64_t v4 = v11;
      unint64_t v3 = v23;
      uint64_t v8 = &selRef_groupName;
      goto LABEL_5;
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV10MainButtonV0F6ActionO2eeoiySbAG_AGtFZ_0(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 3:
      if (v2 != 3) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 4:
      if (v2 != 4) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 5:
      if (v2 != 5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 6:
      if (v2 != 6) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 7:
      if (v2 != 7) {
        goto LABEL_15;
      }
LABEL_13:
      uint64_t result = 1;
      break;
    default:
      if ((v2 - 2) >= 6) {
        uint64_t result = (((*a1 & 1) == 0) ^ v2) & 1;
      }
      else {
LABEL_15:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV5TitleO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_19;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_19;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_19;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_19;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_19;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_19;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_19;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_19;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    default:
      if (v5 >= 8)
      {
        if (v2 == v4 && v3 == v5) {
          char v6 = 1;
        }
        else {
          char v6 = sub_21922B868();
        }
      }
      else
      {
LABEL_19:
        char v6 = 0;
      }
      sub_2192005F0(v4, v5);
      sub_2192005F0(v2, v3);
      break;
  }
  sub_219200604(v2, v3);
  sub_219200604(v4, v5);
  return v6 & 1;
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV7MessageO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  unint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v45 = a2[4];
  switch(v5 >> 59)
  {
    case 1uLL:
      if (v9 >> 59 == 1) {
        goto LABEL_7;
      }
      goto LABEL_21;
    case 2uLL:
      if (v9 >> 59 != 2) {
        goto LABEL_68;
      }
      if (v5)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_62;
        }
        if (v3 != v8 || v2 != v7) {
          goto LABEL_149;
        }
      }
      else
      {
        if (v9) {
          goto LABEL_62;
        }
        if (v3 != v8 || v2 != v7)
        {
LABEL_149:
          char v41 = sub_21922B868();
          sub_2191FF7D8(v8, v7, v9);
          sub_2191FF7D8(v3, v2, v5);
          sub_2191E8EA0();
          sub_2191E8EA0();
          sub_2191E9638();
          sub_2191E9638();
          if (v41) {
            goto LABEL_98;
          }
          uint64_t v23 = v3;
          uint64_t v24 = v2;
          unint64_t v25 = v5;
LABEL_64:
          sub_2191FF8BC(v23, v24, v25);
          uint64_t v12 = v8;
          uint64_t v13 = v7;
          unint64_t v14 = v9;
          goto LABEL_70;
        }
      }
      sub_2191FF7D8(v3, v2, v9);
      sub_2191FF7D8(v3, v2, v5);
      sub_2191E8EA0();
      sub_2191E8EA0();
      sub_2191E9638();
      sub_2191E9638();
      goto LABEL_98;
    case 3uLL:
      if (v9 >> 59 == 3) {
        goto LABEL_53;
      }
      goto LABEL_68;
    case 4uLL:
      if (v9 >> 59 == 4) {
        goto LABEL_53;
      }
      goto LABEL_68;
    case 5uLL:
      if (v9 >> 59 != 5) {
        goto LABEL_69;
      }
      sub_2191FF8BC(v3, v2, v5);
      sub_2191FF8BC(v8, v7, v9);
      char v26 = ((v3 & 1) == 0) ^ v8;
      return v26 & 1;
    case 6uLL:
      if (v9 >> 59 != 6) {
        goto LABEL_68;
      }
      goto LABEL_53;
    case 7uLL:
      if (v9 >> 59 != 7) {
        goto LABEL_21;
      }
      goto LABEL_7;
    case 8uLL:
      if (v9 >> 59 != 8) {
        goto LABEL_21;
      }
      goto LABEL_7;
    case 9uLL:
      if (v9 >> 59 == 9) {
        goto LABEL_7;
      }
      goto LABEL_21;
    case 0xAuLL:
      if (v9 >> 59 != 10) {
        goto LABEL_21;
      }
      goto LABEL_7;
    case 0xBuLL:
      if (v9 >> 59 != 11) {
        goto LABEL_68;
      }
      goto LABEL_53;
    case 0xCuLL:
      if (v9 >> 59 != 12) {
        goto LABEL_68;
      }
      goto LABEL_53;
    case 0xDuLL:
      if (v9 >> 59 != 13)
      {
LABEL_68:
        sub_2191E8EA0();
        swift_bridgeObjectRetain();
LABEL_69:
        sub_2191FF7D8(v8, v7, v9);
        sub_2191FF8BC(v3, v2, v5);
        uint64_t v12 = v8;
        uint64_t v13 = v7;
        unint64_t v14 = v9;
LABEL_70:
        sub_2191FF8BC(v12, v13, v14);
        goto LABEL_71;
      }
LABEL_53:
      uint64_t v44 = a1[3];
      if (v5)
      {
        if (v9)
        {
          if (v3 != v8 || v2 != v7)
          {
            char v22 = sub_21922B868();
            sub_2191FF7D8(v8, v7, v9);
            sub_2191FF7D8(v3, v2, v5);
            sub_2191E8EA0();
            sub_2191E8EA0();
            sub_2191E9638();
            sub_2191E9638();
            if (v22) {
              goto LABEL_97;
            }
LABEL_63:
            uint64_t v23 = v3;
            uint64_t v24 = v2;
            unint64_t v25 = v5;
            goto LABEL_64;
          }
          goto LABEL_96;
        }
LABEL_62:
        sub_2191FF7D8(v8, v7, v9);
        sub_2191FF7D8(v3, v2, v5);
        sub_2191E8EA0();
        sub_2191E8EA0();
        sub_2191E9638();
        sub_2191E9638();
        goto LABEL_63;
      }
      if (v9) {
        goto LABEL_62;
      }
      if (v3 != v8 || v2 != v7)
      {
        char v30 = sub_21922B868();
        sub_2191FF7D8(v8, v7, v9);
        sub_2191FF7D8(v3, v2, v5);
        sub_2191E8EA0();
        sub_2191E8EA0();
        sub_2191E9638();
        sub_2191E9638();
        if (v30) {
          goto LABEL_97;
        }
        goto LABEL_63;
      }
LABEL_96:
      sub_2191FF7D8(v3, v2, v9);
      sub_2191FF7D8(v3, v2, v5);
      sub_2191E8EA0();
      sub_2191E8EA0();
      sub_2191E9638();
      sub_2191E9638();
LABEL_97:
      uint64_t v4 = v44;
LABEL_98:
      if (v4 == v10 && v6 == v45)
      {
        sub_2191FF8BC(v3, v2, v5);
        uint64_t v19 = v8;
        uint64_t v31 = v7;
        unint64_t v32 = v9;
LABEL_112:
        sub_2191FF8BC(v19, v31, v32);
        char v26 = 1;
        return v26 & 1;
      }
      char v33 = sub_21922B868();
      sub_2191FF8BC(v3, v2, v5);
      sub_2191FF8BC(v8, v7, v9);
      return v33 & 1;
    case 0xEuLL:
      if (v9 >> 59 != 14) {
        goto LABEL_21;
      }
      goto LABEL_7;
    case 0xFuLL:
      if (v9 >> 59 != 15) {
        goto LABEL_69;
      }
      sub_2191FF8BC(v3, v2, v5);
      sub_2191FF8BC(v8, v7, v9);
      if (((v3 & 1) == 0) == (v8 & 1)) {
        char v26 = 0;
      }
      else {
        char v26 = ((v3 & 0x100) == 0) ^ BYTE1(v8) & 1;
      }
      return v26 & 1;
    case 0x10uLL:
      if (v5 == 0x8000000000000000 && (v4 | v2 | v3 | v6) == 0)
      {
        if (v9 >> 59 != 16 || v9 != 0x8000000000000000 || (v45 | v10 | v8 | v7) != 0) {
          goto LABEL_69;
        }
        sub_2191FF8BC(0, 0, 0x8000000000000000);
        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v16 = v4 | v2 | v6;
        if (v5 == 0x8000000000000000 && v3 == 1 && v16 == 0)
        {
          if (v9 >> 59 == 16 && v8 == 1 && v7 == 0 && v9 == 0x8000000000000000 && (v45 | v10) == 0)
          {
            char v26 = 1;
            sub_2191FF8BC(1, 0, 0x8000000000000000);
            sub_2191FF8BC(1, 0, 0x8000000000000000);
            return v26 & 1;
          }
          goto LABEL_69;
        }
        if (v5 == 0x8000000000000000 && v3 == 2 && !v16)
        {
          if (v9 >> 59 != 16 || v8 != 2 || v7 || v9 != 0x8000000000000000 || v45 | v10) {
            goto LABEL_69;
          }
          sub_2191FF8BC(2, 0, 0x8000000000000000);
          uint64_t v19 = 2;
        }
        else if (v5 == 0x8000000000000000 && v3 == 3 && !v16)
        {
          if (v9 >> 59 != 16 || v8 != 3 || v7 || v9 != 0x8000000000000000 || v45 | v10) {
            goto LABEL_69;
          }
          sub_2191FF8BC(3, 0, 0x8000000000000000);
          uint64_t v19 = 3;
        }
        else if (v5 == 0x8000000000000000 && v3 == 4 && !v16)
        {
          if (v9 >> 59 != 16 || v8 != 4 || v7 || v9 != 0x8000000000000000 || v45 | v10) {
            goto LABEL_69;
          }
          sub_2191FF8BC(4, 0, 0x8000000000000000);
          uint64_t v19 = 4;
        }
        else if (v5 == 0x8000000000000000 && v3 == 5 && !v16)
        {
          if (v9 >> 59 != 16 || v8 != 5 || v7 || v9 != 0x8000000000000000 || v45 | v10) {
            goto LABEL_69;
          }
          sub_2191FF8BC(5, 0, 0x8000000000000000);
          uint64_t v19 = 5;
        }
        else if (v5 == 0x8000000000000000 && v3 == 6 && !v16)
        {
          if (v9 >> 59 != 16 || v8 != 6 || v7 || v9 != 0x8000000000000000 || v45 | v10) {
            goto LABEL_69;
          }
          sub_2191FF8BC(6, 0, 0x8000000000000000);
          uint64_t v19 = 6;
        }
        else if (v5 == 0x8000000000000000 && v3 == 7 && !v16)
        {
          if (v9 >> 59 != 16 || v8 != 7 || v7 || v9 != 0x8000000000000000 || v45 | v10) {
            goto LABEL_69;
          }
          sub_2191FF8BC(7, 0, 0x8000000000000000);
          uint64_t v19 = 7;
        }
        else
        {
          if (v9 >> 59 != 16 || v8 != 8 || v7 || v9 != 0x8000000000000000 || v45 | v10) {
            goto LABEL_69;
          }
          sub_2191FF8BC(8, 0, 0x8000000000000000);
          uint64_t v19 = 8;
        }
      }
      uint64_t v31 = 0;
      unint64_t v32 = 0x8000000000000000;
      goto LABEL_112;
    default:
      if (!(v9 >> 59))
      {
LABEL_7:
        if (v5)
        {
          if (v9)
          {
            if (v3 == v8 && v2 == v7) {
              char v42 = 1;
            }
            else {
              char v42 = sub_21922B868();
            }
            sub_2191FF7D8(v8, v7, v9);
            sub_2191FF7D8(v3, v2, v5);
            sub_2191FF7D8(v8, v7, v9);
            sub_2191FF7D8(v3, v2, v5);
            sub_2191FF7D8(v8, v7, v9);
            sub_2191FF7D8(v3, v2, v5);
            char v26 = 1;
            sub_2191E9638();
            sub_2191E9638();
            sub_2191FF8BC(v3, v2, v5);
            sub_2191FF8BC(v8, v7, v9);
            sub_2191FF8BC(v8, v7, v9);
            sub_2191FF8BC(v3, v2, v5);
            if (v42) {
              return v26 & 1;
            }
            goto LABEL_71;
          }
        }
        else if ((v9 & 1) == 0)
        {
          if (v3 == v8 && v2 == v7) {
            char v43 = 1;
          }
          else {
            char v43 = sub_21922B868();
          }
          sub_2191FF7D8(v8, v7, v9);
          sub_2191FF7D8(v3, v2, v5);
          sub_2191FF7D8(v8, v7, v9);
          sub_2191FF7D8(v3, v2, v5);
          sub_2191FF7D8(v8, v7, v9);
          sub_2191FF7D8(v3, v2, v5);
          sub_2191E9638();
          sub_2191E9638();
          sub_2191FF8BC(v3, v2, v5);
          sub_2191FF8BC(v8, v7, v9);
          sub_2191FF8BC(v8, v7, v9);
          sub_2191FF8BC(v3, v2, v5);
          if (v43)
          {
            char v26 = 1;
            return v26 & 1;
          }
LABEL_71:
          char v26 = 0;
          return v26 & 1;
        }
        sub_2191FF7D8(v8, v7, v9);
        sub_2191FF7D8(v3, v2, v5);
        sub_2191FF7D8(v8, v7, v9);
        sub_2191FF7D8(v3, v2, v5);
        sub_2191FF7D8(v8, v7, v9);
        sub_2191FF7D8(v3, v2, v5);
        sub_2191E9638();
        sub_2191E9638();
        sub_2191FF8BC(v3, v2, v5);
        sub_2191FF8BC(v8, v7, v9);
        sub_2191FF8BC(v8, v7, v9);
        uint64_t v12 = v3;
        uint64_t v13 = v2;
        unint64_t v14 = v5;
        goto LABEL_70;
      }
LABEL_21:
      sub_2191E8EA0();
      goto LABEL_69;
  }
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV7ServiceO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_21922B868();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  sub_2191E8EA0();
  sub_2191E8EA0();
  sub_2191E9638();
  sub_2191E9638();
  return v7 & 1;
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV8IconTypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(uint64_t *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  unint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(uint64_t *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_51;
      }
      if (v3 == v7 && v2 == v6) {
        char v11 = 1;
      }
      else {
        char v11 = sub_21922B868();
      }
      sub_2191FF028(v7, v6, v8, 1);
      sub_2191FF028(v3, v2, v4, 1);
      sub_2191FEC1C(v3, v2, v4, 1);
      sub_2191FEC1C(v7, v6, v8, 1);
      return v11 & 1;
    case 2:
      if (v9 != 2) {
        goto LABEL_51;
      }
      sub_2191FF028(*(void *)a2, *(void *)(a2 + 8), v8, 2);
      sub_2191FF028(v3, v2, v4, 2);
      char v13 = sub_21921C6D4(v3, v2, v7, v6);
      sub_2191FEC1C(v3, v2, v4, 2);
      sub_2191FEC1C(v7, v6, v8, 2);
      if ((v13 & 1) == 0) {
        goto LABEL_52;
      }
      char v11 = *(double *)&v4 == *(double *)&v8;
      return v11 & 1;
    case 3:
      if (v9 != 3) {
        goto LABEL_51;
      }
      if (v3 == v7 && v2 == v6) {
        char v11 = 1;
      }
      else {
        char v11 = sub_21922B868();
      }
      sub_2191FF028(v7, v6, v8, 3);
      sub_2191FF028(v3, v2, v4, 3);
      sub_2191FEC1C(v3, v2, v4, 3);
      sub_2191FEC1C(v7, v6, v8, 3);
      return v11 & 1;
    case 4:
      if (!(v4 | v2 | v3))
      {
        if (v9 != 4 || (v8 | v6 | v7) != 0) {
          goto LABEL_51;
        }
        sub_2191FEC1C(0, 0, 0, 4);
        uint64_t v18 = 0;
        goto LABEL_43;
      }
      if (v3 != 1 || (v4 | v2) != 0)
      {
        if (v9 != 4 || v7 != 2 || (v8 | v6) != 0) {
          goto LABEL_51;
        }
        sub_2191FEC1C(2, 0, 0, 4);
        uint64_t v18 = 2;
LABEL_43:
        sub_2191FEC1C(v18, 0, 0, 4);
        char v11 = 1;
        return v11 & 1;
      }
      if (v9 != 4 || v7 != 1 || (v8 | v6) != 0) {
        goto LABEL_51;
      }
      char v11 = 1;
      sub_2191FEC1C(1, 0, 0, 4);
      sub_2191FEC1C(1, 0, 0, 4);
      return v11 & 1;
    default:
      if (*(unsigned char *)(a2 + 24))
      {
LABEL_51:
        sub_2191FF028(*(void *)a2, *(void *)(a2 + 8), v8, v9);
        sub_2191FF028(v3, v2, v4, v5);
        sub_2191FEC1C(v3, v2, v4, v5);
        sub_2191FEC1C(v7, v6, v8, v9);
LABEL_52:
        char v11 = 0;
      }
      else
      {
        if (v3 == v7 && v2 == v6) {
          char v11 = 1;
        }
        else {
          char v11 = sub_21922B868();
        }
        sub_2191FF028(v7, v6, v8, 0);
        sub_2191FF028(v3, v2, v4, 0);
        sub_2191FEC1C(v3, v2, v4, 0);
        sub_2191FEC1C(v7, v6, v8, 0);
      }
      return v11 & 1;
  }
}

uint64_t sub_2191FEC1C(uint64_t result, unint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      uint64_t result = sub_2191E4AAC(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2191FEC6C()
{
  unint64_t result = qword_267C10E80;
  if (!qword_267C10E80)
  {
    sub_2191F6FE8(255, &qword_267C10E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10E80);
  }
  return result;
}

unint64_t sub_2191FECD8()
{
  unint64_t result = qword_267C10E90;
  if (!qword_267C10E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10E90);
  }
  return result;
}

uint64_t destroy for ASAuthorizationUIContext(id *a1)
{
  return sub_2191E9638();
}

uint64_t initializeWithCopy for ASAuthorizationUIContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  id v8 = v4;
  sub_2191E8EA0();
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ASAuthorizationUIContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_2191E8EA0();
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  sub_2191E9638();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(unsigned char *)(a1 + 47) = *(unsigned char *)(a2 + 47);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASAuthorizationUIContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v5 = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v5;
  sub_2191E9638();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(unsigned char *)(a1 + 47) = *(unsigned char *)(a2 + 47);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 50)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext()
{
  return &type metadata for ASAuthorizationUIContext;
}

uint64_t sub_2191FF028(uint64_t result, unint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 3:
      __n128 result = swift_bridgeObjectRetain();
      break;
    case 2:
      __n128 result = sub_2191E4E14(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for ASAuthorizationUIContext.IconType(uint64_t a1)
{
  return sub_2191FEC1C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for ASAuthorizationUIContext.IconType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_2191FF028(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ASAuthorizationUIContext.IconType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_2191FF028(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_2191FEC1C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASAuthorizationUIContext.IconType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_2191FEC1C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.IconType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext.IconType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2191FF250(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 3u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_2191FF268(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 4;
  if (a2 >= 4)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 4;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.IconType()
{
  return &type metadata for ASAuthorizationUIContext.IconType;
}

uint64_t destroy for ASAuthorizationUIContext.Service()
{
  return sub_2191E9638();
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV7ServiceOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2191E8EA0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ASAuthorizationUIContext.Service(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2191E8EA0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_2191E9638();
  return a1;
}

uint64_t assignWithTake for ASAuthorizationUIContext.Service(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_2191E9638();
  return a1;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.Service()
{
  return &type metadata for ASAuthorizationUIContext.Service;
}

uint64_t destroy for ASAuthorizationUIContext.Header()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ASAuthorizationUIContext.Header(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASAuthorizationUIContext.Header(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ASAuthorizationUIContext.Header(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.Header(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext.Header(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.Header()
{
  return &type metadata for ASAuthorizationUIContext.Header;
}

unint64_t destroy for ASAuthorizationUIContext.Title(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV5TitleOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ASAuthorizationUIContext.Title(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ASAuthorizationUIContext.Title(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.Title(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFF8 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483640);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 7;
  if (v4 >= 9) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext.Title(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFF7)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483640;
    if (a3 >= 0x7FFFFFF8) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF8) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 7;
    }
  }
  return result;
}

uint64_t sub_2191FF790(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2191FF7A8(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.Title()
{
  return &type metadata for ASAuthorizationUIContext.Title;
}

uint64_t sub_2191FF7D8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xEuLL:
      uint64_t result = sub_2191E8EA0();
      break;
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 6uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
      sub_2191E8EA0();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for ASAuthorizationUIContext.Message(uint64_t a1)
{
  return sub_2191FF8BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t sub_2191FF8BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xEuLL:
      uint64_t result = sub_2191E9638();
      break;
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 6uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
      sub_2191E9638();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for ASAuthorizationUIContext.Message(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_2191FF7D8(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for ASAuthorizationUIContext.Message(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_2191FF7D8(*a2, v4, v5);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  unint64_t v10 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_2191FF8BC(v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for ASAuthorizationUIContext.Message(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v7;
  a1[4] = v3;
  sub_2191FF8BC(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.Message(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext.Message(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = 2 * -a2;
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_2191FFB50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16) >> 59;
  if (v1 <= 0xF) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 16);
  }
}

uint64_t sub_2191FFB6C(uint64_t result)
{
  *(void *)(result + 16) &= 0x7FFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_2191FFB7C(uint64_t result, uint64_t a2)
{
  if (a2 < 0x10)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 1 | (a2 << 59);
  }
  else
  {
    *(void *)uint64_t result = (a2 - 16);
    *(_OWORD *)(result + 8) = xmmword_2192333C0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.Message()
{
  return &type metadata for ASAuthorizationUIContext.Message;
}

uint64_t destroy for ASAuthorizationUIContext.MainButton()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s22AuthenticationServices24ASAuthorizationUIContextV10MainButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASAuthorizationUIContext.MainButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ASAuthorizationUIContext.MainButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.MainButton(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext.MainButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.MainButton()
{
  return &type metadata for ASAuthorizationUIContext.MainButton;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.MainButton.ButtonAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2191FFE0CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 5;
  if (v8 <= 5) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ASAuthorizationUIContext.MainButton.ButtonAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x2191FFEF4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_2191FFF1C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_2191FFF38(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.MainButton.ButtonAction()
{
  return &type metadata for ASAuthorizationUIContext.MainButton.ButtonAction;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.OtherOptionsText(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASAuthorizationUIContext.OtherOptionsText(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2192000BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_2192000E4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.OtherOptionsText()
{
  return &type metadata for ASAuthorizationUIContext.OtherOptionsText;
}

__n128 __swift_memcpy21_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.ConfigurationOverrides(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[21]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationUIContext.ConfigurationOverrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 21) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.ConfigurationOverrides()
{
  return &type metadata for ASAuthorizationUIContext.ConfigurationOverrides;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.UserVerificationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASAuthorizationUIContext.UserVerificationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219200324);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.UserVerificationType()
{
  return &type metadata for ASAuthorizationUIContext.UserVerificationType;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationUIContext.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASAuthorizationUIContext.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2192004B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationUIContext.Kind()
{
  return &type metadata for ASAuthorizationUIContext.Kind;
}

unint64_t sub_2192004F4()
{
  unint64_t result = qword_267C10E98;
  if (!qword_267C10E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10E98);
  }
  return result;
}

unint64_t sub_21920054C()
{
  unint64_t result = qword_267C10EA0;
  if (!qword_267C10EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10EA0);
  }
  return result;
}

uint64_t sub_2192005A0()
{
  return swift_release();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2192005F0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 8) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_219200604(uint64_t a1, unint64_t a2)
{
  if (a2 >= 8) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_219200618(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ASAuthorizationWebBrowserPlatformPublicKeyCredential.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASAuthorizationWebBrowserPlatformPublicKeyCredential.customTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASAuthorizationWebBrowserPlatformPublicKeyCredential.relyingParty.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASAuthorizationWebBrowserPlatformPublicKeyCredential.credentialID.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_2191E4E14(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t ASAuthorizationWebBrowserPlatformPublicKeyCredential.userHandle.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_2191E4E14(v1, *(void *)(v0 + 72));
  return v1;
}

uint64_t ASAuthorizationWebBrowserPlatformPublicKeyCredential.providerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for ASAuthorizationWebBrowserPlatformPublicKeyCredential(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2191E4AAC(*(void *)(a1 + 48), *(void *)(a1 + 56));
  sub_2191E4AAC(*(void *)(a1 + 64), *(void *)(a1 + 72));

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ASAuthorizationWebBrowserPlatformPublicKeyCredential(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[6];
  unint64_t v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2191E4E14(v7, v8);
  a1[6] = v7;
  a1[7] = v8;
  uint64_t v9 = a2[8];
  unint64_t v10 = a2[9];
  sub_2191E4E14(v9, v10);
  a1[8] = v9;
  a1[9] = v10;
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASAuthorizationWebBrowserPlatformPublicKeyCredential(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  unint64_t v5 = a2[7];
  sub_2191E4E14(v4, v5);
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  a1[6] = v4;
  a1[7] = v5;
  sub_2191E4AAC(v6, v7);
  uint64_t v8 = a2[8];
  unint64_t v9 = a2[9];
  sub_2191E4E14(v8, v9);
  uint64_t v10 = a1[8];
  unint64_t v11 = a1[9];
  a1[8] = v8;
  a1[9] = v9;
  sub_2191E4AAC(v10, v11);
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *assignWithTake for ASAuthorizationWebBrowserPlatformPublicKeyCredential(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[6];
  unint64_t v8 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_2191E4AAC(v7, v8);
  uint64_t v9 = a1[8];
  unint64_t v10 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_2191E4AAC(v9, v10);
  uint64_t v11 = *(void *)(a2 + 88);
  a1[10] = *(void *)(a2 + 80);
  a1[11] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASAuthorizationWebBrowserPlatformPublicKeyCredential(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASAuthorizationWebBrowserPlatformPublicKeyCredential(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASAuthorizationWebBrowserPlatformPublicKeyCredential()
{
  return &type metadata for ASAuthorizationWebBrowserPlatformPublicKeyCredential;
}

uint64_t ASAuthorizationWebBrowserPublicKeyCredentialManager.platformCredentials(forRelyingParty:)(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return MEMORY[0x270FA2498](sub_219200AE8, 0, 0);
}

uint64_t sub_219200AE8()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = sub_21922B458();
  v0[19] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_219200C00;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_219200FB0;
  v0[13] = &block_descriptor;
  v0[14] = v3;
  objc_msgSend(v1, sel_corePlatformCredentialsForRelyingParty_completionHandler_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_219200C00()
{
  return MEMORY[0x270FA2498](sub_219200CE0, 0, 0);
}

uint64_t sub_219200CE0()
{
  unint64_t v1 = *(void *)(v0 + 120);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_21922B748();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v43 = MEMORY[0x263F8EE78];
  uint64_t result = sub_219201018(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v43;
  uint64_t v33 = v0;
  unint64_t v34 = v1 & 0xC000000000000001;
  uint64_t v35 = v2;
  unint64_t v36 = v1;
  do
  {
    if (v34) {
      id v6 = (id)MEMORY[0x21D483640](v4, v1);
    }
    else {
      id v6 = *(id *)(v1 + 8 * v4 + 32);
    }
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_name, v33);
    uint64_t v9 = sub_21922B468();
    uint64_t v41 = v10;
    uint64_t v42 = v9;

    id v11 = objc_msgSend(v7, sel_customTitle);
    uint64_t v12 = sub_21922B468();
    uint64_t v39 = v13;
    uint64_t v40 = v12;

    id v14 = objc_msgSend(v7, sel_relyingParty);
    uint64_t v15 = sub_21922B468();
    uint64_t v37 = v16;
    uint64_t v38 = v15;

    id v17 = objc_msgSend(v7, sel_credentialID);
    uint64_t v18 = sub_21922AE08();
    uint64_t v20 = v19;

    id v21 = objc_msgSend(v7, sel_userHandle);
    uint64_t v22 = sub_21922AE08();
    uint64_t v24 = v23;

    id v25 = objc_msgSend(v7, sel_providerName);
    uint64_t v26 = sub_21922B468();
    uint64_t v28 = v27;

    unint64_t v30 = *(void *)(v43 + 16);
    unint64_t v29 = *(void *)(v43 + 24);
    if (v30 >= v29 >> 1) {
      sub_219201018(v29 > 1, v30 + 1, 1);
    }
    ++v4;
    *(void *)(v43 + 16) = v30 + 1;
    uint64_t v31 = (void *)(v43 + 96 * v30);
    v31[4] = v42;
    v31[5] = v41;
    v31[6] = v40;
    v31[7] = v39;
    unint64_t v1 = v36;
    v31[8] = v38;
    v31[9] = v37;
    v31[10] = v18;
    v31[11] = v20;
    v31[12] = v22;
    v31[13] = v24;
    v31[14] = v26;
    v31[15] = v28;
  }
  while (v35 != v4);
  swift_bridgeObjectRelease();
  uint64_t v0 = v33;
LABEL_14:

  unint64_t v32 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v32(v5);
}

uint64_t sub_219200FB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_2192014CC();
  **(void **)(*(void *)(v1 + 64) + 40) = sub_21922B4E8();

  return MEMORY[0x270FA2400](v1);
}

uint64_t sub_219201018(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_219201078(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_219201038(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_219201200(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_219201058(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_219201360(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_219201078(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EE0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[96 * v8]) {
      memmove(v12, v13, 96 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[96 * v8] || v12 >= &v13[96 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

uint64_t sub_219201200(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10ED8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

uint64_t sub_219201360(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10DA0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21922B778();
  __break(1u);
  return result;
}

unint64_t sub_2192014CC()
{
  unint64_t result = qword_267C10EE8;
  if (!qword_267C10EE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C10EE8);
  }
  return result;
}

id ASAuthorizationPlatformPublicKeyCredentialProvider.createCredentialRegistrationRequest(clientData:name:userID:)(long long *a1)
{
  uint64_t v2 = v1;
  long long v8 = *a1;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  long long v11 = a1[2];
  LOBYTE(v12) = *((unsigned char *)a1 + 48);
  id v3 = sub_219206C28();
  uint64_t v4 = (void *)sub_21922B458();
  uint64_t v5 = (void *)sub_21922ADF8();
  id v6 = objc_msgSend(v2, sel_createCredentialRegistrationRequestWithClientData_name_userID_, v3, v4, v5, v8, v9, v10, v11, v12);

  return v6;
}

id ASAuthorizationPlatformPublicKeyCredentialProvider.createCredentialRegistrationRequest(clientData:name:userID:requestStyle:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v7 = v6;
  long long v14 = *a1;
  uint64_t v15 = *((void *)a1 + 2);
  uint64_t v16 = *((void *)a1 + 3);
  long long v17 = a1[2];
  LOBYTE(v18) = *((unsigned char *)a1 + 48);
  id v9 = sub_219206C28();
  uint64_t v10 = (void *)sub_21922B458();
  long long v11 = (void *)sub_21922ADF8();
  id v12 = objc_msgSend(v7, sel_createCredentialRegistrationRequestWithClientData_name_userID_requestStyle_, v9, v10, v11, a6, v14, v15, v16, v17, v18);

  return v12;
}

id sub_2192016C0(long long *a1)
{
  uint64_t v2 = *v1;
  long long v8 = *a1;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  long long v11 = a1[2];
  LOBYTE(v12) = *((unsigned char *)a1 + 48);
  id v3 = sub_219206C28();
  uint64_t v4 = (void *)sub_21922B458();
  uint64_t v5 = (void *)sub_21922ADF8();
  id v6 = objc_msgSend(v2, sel_createCredentialRegistrationRequestWithClientData_name_userID_, v3, v4, v5, v8, v9, v10, v11, v12);

  return v6;
}

id sub_21920178C(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v8 = *v6;
  long long v14 = *a1;
  uint64_t v15 = *((void *)a1 + 2);
  uint64_t v16 = *((void *)a1 + 3);
  long long v17 = a1[2];
  LOBYTE(v18) = *((unsigned char *)a1 + 48);
  id v9 = sub_219206C28();
  uint64_t v10 = (void *)sub_21922B458();
  long long v11 = (void *)sub_21922ADF8();
  id v12 = objc_msgSend(v8, sel_createCredentialRegistrationRequestWithClientData_name_userID_requestStyle_, v9, v10, v11, a6, v14, v15, v16, v17, v18);

  return v12;
}

void _sSo71ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequestP22AuthenticationServicesE10clientDataAC08ASPublicfg6ClientM0VSgvg_0(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_clientData);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_challenge);
    uint64_t v6 = sub_21922AE08();
    uint64_t v8 = v7;

    id v9 = objc_msgSend(v4, sel_origin);
    uint64_t v10 = sub_21922B468();
    uint64_t v12 = v11;

    id v13 = objc_msgSend(v4, sel_topOrigin);
    if (v13)
    {
      long long v14 = v13;
      uint64_t v15 = sub_21922B468();
      uint64_t v17 = v16;
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v17 = 0;
    }
    id v18 = objc_msgSend(v4, sel_crossOrigin);

    char v19 = 2 * (v18 != (id)1);
    if (v18 == (id)2) {
      char v19 = 1;
    }
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v17;
    *(unsigned char *)(a1 + 48) = v19;
  }
  else
  {
    *(unsigned char *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

id ASAuthorizationSecurityKeyPublicKeyCredentialProvider.createCredentialRegistrationRequest(clientData:displayName:name:userID:)(long long *a1)
{
  uint64_t v2 = v1;
  long long v9 = *a1;
  uint64_t v10 = *((void *)a1 + 2);
  uint64_t v11 = *((void *)a1 + 3);
  long long v12 = a1[2];
  LOBYTE(v13) = *((unsigned char *)a1 + 48);
  id v3 = sub_219206C28();
  uint64_t v4 = (void *)sub_21922B458();
  id v5 = (void *)sub_21922B458();
  uint64_t v6 = (void *)sub_21922ADF8();
  id v7 = objc_msgSend(v2, sel_createCredentialRegistrationRequestWithClientData_displayName_name_userID_, v3, v4, v5, v6, v9, v10, v11, v12, v13);

  return v7;
}

id _sSo50ASAuthorizationPlatformPublicKeyCredentialProviderC22AuthenticationServicesE06createE16AssertionRequest10clientDataSo0abcdejK0CAC08ASPublicde6ClientM0V_tF_0(long long *a1)
{
  uint64_t v2 = v1;
  long long v6 = *a1;
  uint64_t v7 = *((void *)a1 + 2);
  uint64_t v8 = *((void *)a1 + 3);
  long long v9 = a1[2];
  LOBYTE(v10) = *((unsigned char *)a1 + 48);
  id v3 = sub_219206C28();
  id v4 = objc_msgSend(v2, sel_createCredentialAssertionRequestWithClientData_, v3, v6, v7, v8, v9, v10);

  return v4;
}

id sub_219201B28(long long *a1)
{
  uint64_t v2 = *v1;
  long long v9 = *a1;
  uint64_t v10 = *((void *)a1 + 2);
  uint64_t v11 = *((void *)a1 + 3);
  long long v12 = a1[2];
  LOBYTE(v13) = *((unsigned char *)a1 + 48);
  id v3 = sub_219206C28();
  id v4 = (void *)sub_21922B458();
  id v5 = (void *)sub_21922B458();
  long long v6 = (void *)sub_21922ADF8();
  id v7 = objc_msgSend(v2, sel_createCredentialRegistrationRequestWithClientData_displayName_name_userID_, v3, v4, v5, v6, v9, v10, v11, v12, v13);

  return v7;
}

id sub_219201C1C(long long *a1)
{
  uint64_t v2 = *v1;
  long long v6 = *a1;
  uint64_t v7 = *((void *)a1 + 2);
  uint64_t v8 = *((void *)a1 + 3);
  long long v9 = a1[2];
  LOBYTE(v10) = *((unsigned char *)a1 + 48);
  id v3 = sub_219206C28();
  id v4 = objc_msgSend(v2, sel_createCredentialAssertionRequestWithClientData_, v3, v6, v7, v8, v9, v10);

  return v4;
}

uint64_t dispatch thunk of ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider.createCredentialRegistrationRequest(clientData:name:userID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider.createCredentialRegistrationRequest(clientData:name:userID:requestStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider.createCredentialAssertionRequest(clientData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider.createCredentialRegistrationRequest(clientData:displayName:name:userID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t dispatch thunk of ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider.createCredentialAssertionRequest(clientData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t ASAuthorizationPlatformPublicKeyCredentialAssertion.prf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21922B178();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C78);
  MEMORY[0x270FA5388](v7 - 8);
  long long v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v1, sel_coreCredential);
  id v11 = objc_msgSend(v10, sel_extensions);

  if (!v11) {
    goto LABEL_4;
  }
  sub_21922B188();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_2191E36D4((uint64_t)v9, &qword_267C10C78);
LABEL_4:
    uint64_t v12 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_2191E36D4((uint64_t)v9, &qword_267C10C78);
  sub_21922B158();
  uint64_t v14 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0);
  sub_21922B168();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);
}

id ASAuthorizationPlatformPublicKeyCredentialAssertion.__largeBlobSwift.getter()
{
  uint64_t v1 = sub_21922B1A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_21922B1D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C70);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(v0, sel_coreCredential);
  id v16 = objc_msgSend(v15, sel_extensions);

  if (!v16) {
    return 0;
  }
  sub_21922B1E8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    sub_2191E36D4((uint64_t)v14, &qword_267C10C70);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_2191E36D4((uint64_t)v14, &qword_267C10C70);
  sub_21922B1C8();
  (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  int v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v5, v1);
  if (v19 == *MEMORY[0x263F29368])
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v5, v1);
    uint64_t v20 = *v5;
    unint64_t v21 = v5[1];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v21 >> 60 == 15)
    {
      uint64_t v22 = 0;
    }
    else
    {
      sub_2191E4E6C(v20, v21);
      uint64_t v22 = (void *)sub_21922ADF8();
    }
    id v17 = objc_msgSend(self, sel__outputWithData_didWrite_, v22, 0);

    sub_2191E4B04(v20, v21);
    sub_2191E4B04(v20, v21);
    return v17;
  }
  if (v19 == *MEMORY[0x263F29370])
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v5, v1);
    uint64_t v23 = *(unsigned __int8 *)v5;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return objc_msgSend(self, sel__outputWithData_didWrite_, 0, v23);
  }
  id result = (id)sub_21922B738();
  __break(1u);
  return result;
}

id ASAuthorizationPlatformPublicKeyCredentialAssertion.__prfSwift.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C80);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21922B178();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10C78);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ASAuthorizationPublicKeyCredentialPRFAssertionOutput(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(v0, sel_coreCredential);
  id v15 = objc_msgSend(v14, sel_extensions);

  if (!v15) {
    return 0;
  }
  sub_21922B188();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_2191E36D4((uint64_t)v10, &qword_267C10C78);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_2191E36D4((uint64_t)v10, &qword_267C10C78);
  sub_21922B158();
  uint64_t v17 = (uint64_t)&v13[*(int *)(v11 + 20)];
  sub_21922B168();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v18 = sub_21922B3E8();
  unint64_t v20 = v19;
  sub_2191F31A8(v17, (uint64_t)v3);
  uint64_t v21 = sub_21922B3F8();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v3, 1, v21) == 1)
  {
    sub_2191E36D4((uint64_t)v3, &qword_267C10C80);
    uint64_t v23 = 0;
    unint64_t v24 = 0xF000000000000000;
  }
  else
  {
    uint64_t v23 = sub_21922B3E8();
    unint64_t v24 = v25;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v21);
  }
  uint64_t v26 = (char *)objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialPRFAssertionOutput);
  uint64_t v27 = (uint64_t *)&v26[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionOutput_second];
  *(_OWORD *)&v26[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionOutput_second] = xmmword_219232DB0;
  uint64_t v28 = (uint64_t *)&v26[OBJC_IVAR___ASAuthorizationPublicKeyCredentialPRFAssertionOutput_first];
  *uint64_t v28 = v18;
  v28[1] = v20;
  swift_beginAccess();
  uint64_t v29 = *v27;
  unint64_t v30 = v27[1];
  uint64_t *v27 = v23;
  v27[1] = v24;
  sub_2191E4E14(v18, v20);
  sub_2191E4E6C(v23, v24);
  sub_2191E4B04(v29, v30);
  v33.receiver = v26;
  v33.super_class = (Class)ASAuthorizationPublicKeyCredentialPRFAssertionOutput;
  id v16 = objc_msgSendSuper2(&v33, sel_init);
  sub_2191E4B04(v23, v24);
  sub_2191E4AAC(v18, v20);
  sub_2191E6650((uint64_t)v13);
  return v16;
}

uint64_t sub_21920282C()
{
  uint64_t v0 = sub_21922B3D8();
  __swift_allocate_value_buffer(v0, qword_267C16290);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C16290);
  return sub_21922B3C8();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_219202914()
{
  uint64_t v1 = v0;
  uint64_t v67 = sub_21922AF68();
  uint64_t v2 = *(void *)(v67 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v67);
  uint64_t v65 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v66 = (char *)&v57 - v5;
  uint64_t v6 = sub_21922AF88();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v68 = (char *)&v57 - v11;
  uint64_t v12 = v1;
  id v13 = objc_msgSend(v1, sel_clientDataHash);
  uint64_t v14 = sub_21922AE08();
  unint64_t v16 = v15;

  switch(v16 >> 62)
  {
    case 1uLL:
      sub_2191E4AAC(v14, v16);
      if (__OFSUB__(HIDWORD(v14), v14))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x219203190);
      }
      uint64_t v17 = HIDWORD(v14) - (int)v14;
      break;
    case 2uLL:
      uint64_t v64 = v7;
      uint64_t v18 = v6;
      uint64_t v19 = v2;
      uint64_t v21 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v14 + 24);
      sub_2191E4AAC(v14, v16);
      uint64_t v17 = v20 - v21;
      if (__OFSUB__(v20, v21)) {
        goto LABEL_23;
      }
      uint64_t v2 = v19;
      uint64_t v6 = v18;
      uint64_t v7 = v64;
      break;
    case 3uLL:
      sub_2191E4AAC(v14, v16);
      uint64_t v17 = 0;
      break;
    default:
      sub_2191E4AAC(v14, v16);
      uint64_t v17 = BYTE6(v16);
      break;
  }
  if (v17 == sub_21922B408())
  {
    id v22 = objc_msgSend(v12, sel_authenticatorData);
    sub_21922AE08();

    uint64_t v23 = (void *)v69;
    sub_21922AF18();
    if (v23)
    {
      sub_21922B468();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2192339B0;
      *(void *)(inited + 32) = sub_21922B468();
      *(void *)(inited + 40) = v25;
      *(void *)(inited + 72) = MEMORY[0x263F8D310];
      *(void *)(inited + 48) = 0xD00000000000001ALL;
      *(void *)(inited + 56) = 0x800000021923C450;
      *(void *)(inited + 80) = sub_21922B468();
      *(void *)(inited + 88) = v26;
      swift_getErrorValue();
      uint64_t v27 = v70;
      uint64_t v28 = v71;
      *(void *)(inited + 120) = v71;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 96));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(boxed_opaque_existential_0, v27, v28);
      sub_219224D54(inited);
      id v30 = objc_allocWithZone(MEMORY[0x263F087E8]);
      uint64_t v31 = (void *)sub_21922B458();
      swift_bridgeObjectRelease();
      uint64_t v32 = (void *)sub_21922B418();
      swift_bridgeObjectRelease();
      objc_msgSend(v30, sel_initWithDomain_code_userInfo_, v31, 1002, v32);

      swift_willThrow();
    }
    else
    {
      uint64_t v64 = v7;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v68, v10, v6);
      id v40 = objc_msgSend(v12, sel_relyingParty);
      uint64_t v69 = sub_21922B468();
      uint64_t v63 = v41;

      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF8);
      uint64_t v58 = v2;
      uint64_t v59 = v6;
      uint64_t v61 = *(unsigned __int8 *)(v2 + 80) | 7;
      uint64_t v62 = v42;
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_2192339C0;
      sub_21922AF48();
      sub_21922AF58();
      sub_21922AF38();
      uint64_t v72 = v43;
      sub_219203884();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F08);
      uint64_t v60 = 0;
      sub_2192038DC();
      uint64_t v44 = v66;
      sub_21922B618();
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_2192339A0;
      sub_21922AF28();
      uint64_t v72 = v45;
      uint64_t v46 = v65;
      id v47 = v68;
      sub_21922B618();
      sub_21922AF78();
      swift_bridgeObjectRelease();
      id v48 = *(void (**)(char *, uint64_t))(v58 + 8);
      uint64_t v49 = v67;
      v48(v46, v67);
      v48(v44, v49);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v59);
    }
  }
  else
  {
    sub_21922B468();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_2192339A0;
    *(void *)(v33 + 32) = sub_21922B468();
    *(void *)(v33 + 40) = v34;
    uint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_21922B668();
    sub_21922B498();
    uint64_t v74 = sub_21922B408();
    sub_21922B858();
    sub_21922B498();
    swift_bridgeObjectRelease();
    sub_21922B498();
    id v35 = objc_msgSend(v12, sel_clientDataHash);
    uint64_t v36 = sub_21922AE08();
    unint64_t v38 = v37;

    switch(v38 >> 62)
    {
      case 1uLL:
        sub_2191E4AAC(v36, v38);
        LODWORD(v39) = HIDWORD(v36) - v36;
        if (__OFSUB__(HIDWORD(v36), v36)) {
          goto LABEL_24;
        }
        uint64_t v39 = (int)v39;
        break;
      case 2uLL:
        uint64_t v51 = *(void *)(v36 + 16);
        uint64_t v50 = *(void *)(v36 + 24);
        sub_2191E4AAC(v36, v38);
        uint64_t v39 = v50 - v51;
        if (!__OFSUB__(v50, v51)) {
          break;
        }
        __break(1u);
LABEL_19:
        sub_2191E4AAC(v36, v38);
        uint64_t v39 = 0;
        break;
      case 3uLL:
        goto LABEL_19;
      default:
        sub_2191E4AAC(v36, v38);
        uint64_t v39 = BYTE6(v38);
        break;
    }
    uint64_t v74 = v39;
    sub_21922B858();
    sub_21922B498();
    swift_bridgeObjectRelease();
    sub_21922B498();
    uint64_t v52 = v72;
    unint64_t v53 = v73;
    *(void *)(v33 + 72) = MEMORY[0x263F8D310];
    *(void *)(v33 + 48) = v52;
    *(void *)(v33 + 56) = v53;
    sub_219224D54(v33);
    id v54 = objc_allocWithZone(MEMORY[0x263F087E8]);
    id v55 = (void *)sub_21922B458();
    swift_bridgeObjectRelease();
    uint64_t v56 = (void *)sub_21922B418();
    swift_bridgeObjectRelease();
    objc_msgSend(v54, sel_initWithDomain_code_userInfo_, v55, 1002, v56);

    swift_willThrow();
  }
}

id ASPasskeyAssertionCredential.init(userHandle:relyingParty:signature:clientDataHash:authenticatorData:credentialID:extensionOutput:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12, void **a13)
{
  uint64_t v17 = *a13;
  id v30 = (void *)sub_21922ADF8();
  uint64_t v29 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  uint64_t v32 = a5;
  unint64_t v34 = a6;
  uint64_t v28 = (void *)sub_21922ADF8();
  unint64_t v31 = a8;
  uint64_t v18 = (void *)sub_21922ADF8();
  uint64_t v19 = (void *)sub_21922ADF8();
  uint64_t v20 = (void *)sub_21922ADF8();
  if (v17)
  {
    id v21 = objc_allocWithZone((Class)ASPasskeyAssertionCredentialExtensionOutput);
    id v22 = v17;
    uint64_t v23 = (char *)objc_msgSend(v21, sel_init);
    unint64_t v24 = *(void **)&v23[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions];
    *(void *)&v23[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions] = v22;
  }
  else
  {
    uint64_t v23 = 0;
  }
  id v25 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithUserHandle_relyingParty_signature_clientDataHash_authenticatorData_credentialID_extensionOutput_, v30, v29, v28, v18, v19, v20, v23);
  sub_2191E4AAC(a11, a12);
  sub_2191E4AAC(a9, a10);
  sub_2191E4AAC(a7, v31);
  sub_2191E4AAC(v32, v34);
  sub_2191E4AAC(a1, a2);

  return v25;
}

void ASPasskeyAssertionCredential.extensionOutput.getter(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_extensionOutput);

  if (!v3) {
    goto LABEL_4;
  }
  uint64_t v4 = (char *)objc_msgSend(v1, sel_extensionOutput);
  if (v4)
  {
    uint64_t v5 = v4;
    id v3 = *(id *)&v4[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions];

LABEL_4:
    *a1 = v3;
    return;
  }
  __break(1u);
}

void ASPasskeyAssertionCredential.extensionOutput.setter(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    id v3 = objc_allocWithZone((Class)ASPasskeyAssertionCredentialExtensionOutput);
    id v4 = v2;
    uint64_t v5 = (char *)objc_msgSend(v3, sel_init);
    uint64_t v6 = *(void **)&v5[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions];
    id v7 = v5;
    *(void *)&v5[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions] = v4;
  }
  else
  {
    id v7 = 0;
  }
  objc_msgSend(v1, sel_setExtensionOutput_, v7);
}

void (*ASPasskeyAssertionCredential.extensionOutput.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_extensionOutput);

  if (!v3) {
    goto LABEL_4;
  }
  id result = (void (*)(void **, char))objc_msgSend(v1, sel_extensionOutput);
  if (result)
  {
    uint64_t v5 = result;
    id v3 = *(id *)((char *)result + OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions);

LABEL_4:
    *a1 = v3;
    return sub_219203680;
  }
  __break(1u);
  return result;
}

void sub_219203680(void **a1, char a2)
{
  id v3 = *a1;
  if (a2)
  {
    if (v3)
    {
      id v4 = objc_allocWithZone((Class)ASPasskeyAssertionCredentialExtensionOutput);
      id v5 = v3;
      uint64_t v6 = (char *)objc_msgSend(v4, sel_init);
      id v7 = *(void **)&v6[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions];
      id v12 = v6;
      *(void *)&v6[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions] = v5;
    }
    else
    {
      id v12 = 0;
    }
    objc_msgSend(a1[1], sel_setExtensionOutput_, v12);
  }
  else if (v3)
  {
    id v8 = objc_allocWithZone((Class)ASPasskeyAssertionCredentialExtensionOutput);
    id v9 = v3;
    uint64_t v10 = (char *)objc_msgSend(v8, sel_init);
    uint64_t v11 = *(void **)&v10[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions];
    id v12 = v10;
    *(void *)&v10[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionOutput_coreExtensions] = v9;

    objc_msgSend(a1[1], sel_setExtensionOutput_, v12);
  }
  else
  {
    id v12 = 0;
    objc_msgSend(a1[1], sel_setExtensionOutput_, 0);
  }
}

void sub_2192037A8(void *a1@<X8>)
{
  ASPasskeyAssertionCredential.extensionOutput.getter(&v2);
  *a1 = v2;
}

void sub_2192037E4(void **a1)
{
  uint64_t v2 = *a1;
  id v1 = v2;
  ASPasskeyAssertionCredential.extensionOutput.setter(&v2);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_219203884()
{
  unint64_t result = qword_267C10F00;
  if (!qword_267C10F00)
  {
    sub_21922AF68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10F00);
  }
  return result;
}

unint64_t sub_2192038DC()
{
  unint64_t result = qword_267C10F10;
  if (!qword_267C10F10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C10F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10F10);
  }
  return result;
}

id ASPasskeyCredentialIdentity.init(relyingPartyIdentifier:userName:credentialID:userHandle:recordIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  unint64_t v15 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  unint64_t v16 = (void *)sub_21922ADF8();
  uint64_t v17 = (void *)sub_21922ADF8();
  if (a10)
  {
    uint64_t v18 = (void *)sub_21922B458();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  id v19 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRelyingPartyIdentifier_userName_credentialID_userHandle_recordIdentifier_, v14, v15, v16, v17, v18);
  sub_2191E4AAC(a7, a8);
  sub_2191E4AAC(a5, a6);

  return v19;
}

uint64_t ASPasskeyRegistrationCredentialExtensionInput.largeBlob.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_21922B278();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_21922B2A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F20);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B2B8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v15, (uint64_t *)&unk_267C10F20);
    char v17 = 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    sub_2191E36D4((uint64_t)v15, (uint64_t *)&unk_267C10F20);
    sub_21922B298();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v18 != *MEMORY[0x263F29378] && v18 != *MEMORY[0x263F29380])
    {
      uint64_t result = sub_21922B738();
      __break(1u);
      return result;
    }
    char v17 = v18 != *MEMORY[0x263F29378];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *a1 = v17;
  return result;
}

uint64_t ASPasskeyRegistrationCredentialExtensionInput.prf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_21922B248();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F30);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21922B258();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v11, &qword_267C10F30);
    *(void *)a1 = 2;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_2191E36D4((uint64_t)v11, &qword_267C10F30);
    int v24 = sub_21922B238();
    sub_21922B218();
    uint64_t v13 = sub_21922B078();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      sub_2191E36D4((uint64_t)v4, &qword_267C10A18);
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      unint64_t v18 = 0xF000000000000000;
    }
    else
    {
      uint64_t v23 = sub_21922B058();
      unint64_t v18 = v19;
      uint64_t v16 = sub_21922B068();
      uint64_t v17 = v20;
      id v21 = v4;
      uint64_t v15 = v23;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    }
    unsigned __int8 v25 = v24 & 1;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a1 = v25;
    *(void *)(a1 + 8) = v15;
    *(void *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v17;
  }
  return result;
}

uint64_t ASPasskeyRegistrationCredentialExtensionInput.init(coreExtensions:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void __swiftcall ASPasskeyRegistrationCredentialExtensionInput.toObjC()(ASPasskeyRegistrationCredentialExtensionInput *__return_ptr retstr)
{
  if (!objc_msgSend(objc_allocWithZone((Class)ASPasskeyRegistrationCredentialExtensionInput), sel_initWithCoreExtensions_, *v1))__break(1u); {
}
  }

uint64_t static ASPasskeyRegistrationCredentialExtensionInput.supportsSecureCoding.getter()
{
  return 1;
}

id sub_2192040E8()
{
  uint64_t v1 = sub_21922B278();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = sub_21922B2A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F20);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(id *)(v0 + OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionInput_coreExtensions);
  sub_21922B2B8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    sub_2191E36D4((uint64_t)v14, (uint64_t *)&unk_267C10F20);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_2191E36D4((uint64_t)v14, (uint64_t *)&unk_267C10F20);
  sub_21922B298();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v17 == *MEMORY[0x263F29378])
  {
    uint64_t v18 = 0;
  }
  else
  {
    if (v17 != *MEMORY[0x263F29380])
    {
      id result = (id)sub_21922B738();
      __break(1u);
      return result;
    }
    uint64_t v18 = 1;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput), sel_initWithSupportRequirement_, v18);
}

void __swiftcall ASPasskeyRegistrationCredentialExtensionInput.init(coder:)(ASPasskeyRegistrationCredentialExtensionInput_optional *__return_ptr retstr, NSCoder coder)
{
}

id ASPasskeyRegistrationCredentialExtensionInput.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  sub_21922B2D8();
  uint64_t v4 = (void *)sub_21922B5D8();
  if (v4)
  {
    id v5 = v4;
    id v6 = objc_msgSend(v2, sel_initWithCoreExtensions_, v5);

    id v7 = v6;
    if (v7) {
  }
    }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v7;
}

Swift::Void __swiftcall ASPasskeyRegistrationCredentialExtensionInput.encode(with:)(NSCoder with)
{
  id v3 = *(id *)(v1 + OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionInput_coreExtensions);
  id v4 = (id)sub_21922B458();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
}

void __swiftcall ASPasskeyRegistrationCredentialExtensionInput.init()(ASPasskeyRegistrationCredentialExtensionInput *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

id ASPasskeyRegistrationCredentialExtensionInput.init()()
{
  uint64_t v1 = OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionInput_coreExtensions;
  id v2 = objc_allocWithZone((Class)sub_21922B2D8());
  id v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);

  v5.receiver = v3;
  v5.super_class = (Class)ASPasskeyRegistrationCredentialExtensionInput;
  return objc_msgSendSuper2(&v5, sel_init);
}

ValueMetadata *type metadata accessor for ASPasskeyRegistrationCredentialExtensionInput()
{
  return &type metadata for ASPasskeyRegistrationCredentialExtensionInput;
}

unint64_t type metadata accessor for ASPasskeyRegistrationCredentialExtensionInput()
{
  unint64_t result = qword_267C10F40;
  if (!qword_267C10F40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C10F40);
  }
  return result;
}

id ASPasskeyCredentialRequest.init(credentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:)(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = (void *)sub_21922ADF8();
  sub_2192049DC(a5);
  swift_bridgeObjectRelease();
  sub_219204ABC();
  uint64_t v12 = (void *)sub_21922B4D8();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v10, sel_initWithCredentialIdentity_clientDataHash_userVerificationPreference_supportedAlgorithms_, a1, v11, a4, v12);

  sub_2191E4AAC(a2, a3);
  return v13;
}

uint64_t sub_2192049DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_21922B6F8();
    uint64_t v4 = a1 + 32;
    type metadata accessor for ASCOSEAlgorithmIdentifier(0);
    sub_219204ABC();
    do
    {
      v4 += 8;
      swift_dynamicCast();
      sub_21922B6D8();
      sub_21922B708();
      sub_21922B718();
      sub_21922B6E8();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

unint64_t sub_219204ABC()
{
  unint64_t result = qword_267C10F50;
  if (!qword_267C10F50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C10F50);
  }
  return result;
}

uint64_t sub_219204AFC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_21922B748();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t result = sub_219201038(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) == 0)
    {
      for (unint64_t i = (void **)(a1 + 32); ; ++i)
      {
        id v10 = *i;
        uint64_t v15 = 0;
        char v16 = 1;
        id v11 = v10;
        uint64_t result = MEMORY[0x21D483520]();
        if (v16 == 1) {
          break;
        }
        uint64_t v12 = v15;

        uint64_t v17 = v3;
        unint64_t v14 = *(void *)(v3 + 16);
        unint64_t v13 = *(void *)(v3 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_219201038(v13 > 1, v14 + 1, 1);
          uint64_t v3 = v17;
        }
        *(void *)(v3 + 16) = v14 + 1;
        *(void *)(v3 + 8 * v14 + 32) = v12;
        if (!--v2) {
          return v3;
        }
      }
      goto LABEL_21;
    }
    uint64_t v5 = 0;
    while (1)
    {
      MEMORY[0x21D483640](v5, a1);
      uint64_t v15 = 0;
      char v16 = 1;
      uint64_t result = MEMORY[0x21D483520]();
      if (v16 == 1) {
        break;
      }
      uint64_t v6 = v15;
      swift_unknownObjectRelease();
      uint64_t v17 = v3;
      unint64_t v8 = *(void *)(v3 + 16);
      unint64_t v7 = *(void *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_219201038(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v17;
      }
      ++v5;
      *(void *)(v3 + 16) = v8 + 1;
      *(void *)(v3 + 8 * v8 + 32) = v6;
      if (v2 == v5) {
        return v3;
      }
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

id ASPasskeyCredentialRequest.init(credentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:extensionInput:)(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, void **a6)
{
  id v11 = *a6;
  uint64_t v12 = (void *)sub_21922ADF8();
  sub_2192049DC(a5);
  swift_bridgeObjectRelease();
  sub_219204ABC();
  unint64_t v13 = (void *)sub_21922B4D8();
  swift_bridgeObjectRelease();
  if (!v11)
  {
    uint64_t v15 = 0;
    goto LABEL_5;
  }
  id result = objc_msgSend(objc_allocWithZone((Class)ASPasskeyRegistrationCredentialExtensionInput), sel_initWithCoreExtensions_, v11);
  if (result)
  {
    uint64_t v15 = result;

LABEL_5:
    id v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCredentialIdentity_clientDataHash_userVerificationPreference_supportedAlgorithms_registrationExtensionInput_, a1, v12, a4, v13, v15);

    sub_2191E4AAC(a2, a3);
    return v16;
  }
  __break(1u);
  return result;
}

{
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;

  id v11 = *a6;
  uint64_t v12 = (void *)sub_21922ADF8();
  sub_2192049DC(a5);
  swift_bridgeObjectRelease();
  sub_219204ABC();
  unint64_t v13 = (void *)sub_21922B4D8();
  swift_bridgeObjectRelease();
  if (v11)
  {
    unint64_t v14 = objc_msgSend(objc_allocWithZone((Class)ASPasskeyAssertionCredentialExtensionInput), sel_initWithCoreExtensions_, v11);
  }
  else
  {
    unint64_t v14 = 0;
  }
  uint64_t v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCredentialIdentity_clientDataHash_userVerificationPreference_supportedAlgorithms_assertionExtensionInput_, a1, v12, a4, v13, v14);

  sub_2191E4AAC(a2, a3);
  return v15;
}

uint64_t ASPasskeyCredentialRequest.supportedAlgorithms.getter()
{
  id v1 = objc_msgSend(v0, sel_supportedAlgorithms);
  sub_219204ABC();
  unint64_t v2 = sub_21922B4E8();

  uint64_t v3 = sub_219204AFC(v2);
  swift_bridgeObjectRelease();
  return v3;
}

void ASPasskeyCredentialRequest.extensionInput.getter(void *a1@<X8>)
{
  uint64_t v3 = (char *)objc_msgSend(v1, sel_assertionExtensionInput);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = *(id *)&v3[OBJC_IVAR___ASPasskeyAssertionCredentialExtensionInput_coreExtensions];
  }
  else
  {
    uint64_t v6 = (char *)objc_msgSend(v1, sel_registrationExtensionInput);
    if (v6)
    {
      unint64_t v7 = v6;
      unint64_t v8 = (unint64_t)*(id *)&v6[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionInput_coreExtensions];

      id v5 = (id)(v8 | 0x4000000000000000);
    }
    else
    {
      id v5 = (id)0x8000000000000000;
    }
  }
  *a1 = v5;
}

void *initializeBufferWithCopyOfBuffer for ASPasskeyCredentialExtensionInput(void *a1, void *a2)
{
  uint64_t v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for ASPasskeyCredentialExtensionInput(void *a1)
{
}

uint64_t *assignWithCopy for ASPasskeyCredentialExtensionInput(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  uint64_t v4 = *a1;
  *a1 = *a2;
  id v5 = (void *)(v4 & 0x3FFFFFFFFFFFFFFFLL);
  id v6 = v3;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *id result = *a2;
  return result;
}

uint64_t *assignWithTake for ASPasskeyCredentialExtensionInput(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ASPasskeyCredentialExtensionInput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ASPasskeyCredentialExtensionInput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)id result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)id result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2192051A8(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_2192051C4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_2192051D4(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *id result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ASPasskeyCredentialExtensionInput()
{
  return &type metadata for ASPasskeyCredentialExtensionInput;
}

uint64_t sub_219205214(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_219201058(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_21922AFA8() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_21922AF98();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_219201058(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2192054A0()
{
  int64_t v1 = v0;
  uint64_t v95 = sub_21922AF68();
  uint64_t v100 = *(void *)(v95 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v95);
  uint64_t v93 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  id v94 = (char *)&v93 - v4;
  uint64_t v5 = sub_21922AF88();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v101 = v5;
  uint64_t v102 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  char v98 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v96 = (char *)&v93 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F60);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21922B028();
  long long v97 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v13 - 8);
  unint64_t v104 = v97;
  uint64_t v105 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v103 = (char *)&v93 - v17;
  id v18 = objc_msgSend(v1, sel_attestationObject);
  uint64_t v19 = sub_21922AE08();
  unint64_t v21 = v20;

  switch(v21 >> 62)
  {
    case 1uLL:
      sub_2191E4AAC(v19, v21);
      LODWORD(v22) = HIDWORD(v19) - v19;
      if (__OFSUB__(HIDWORD(v19), v19))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        JUMPOUT(0x2192062F4);
      }
      uint64_t v22 = (int)v22;
LABEL_6:
      if (v22 < 1)
      {
LABEL_10:
        sub_21922B468();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2192339A0;
        *(void *)(inited + 32) = sub_21922B468();
        *(void *)(inited + 40) = v31;
        *(void *)(inited + 72) = MEMORY[0x263F8D310];
        unint64_t v32 = 0xD000000000000043;
        uint64_t v33 = "The provided passkey registration is missing an attestation object.";
LABEL_11:
        *(void *)(inited + 48) = v32;
        *(void *)(inited + 56) = (unint64_t)(v33 - 32) | 0x8000000000000000;
        sub_219224D54(inited);
        id v34 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v35 = (void *)sub_21922B458();
        swift_bridgeObjectRelease();
        uint64_t v36 = (void *)sub_21922B418();
        swift_bridgeObjectRelease();
        objc_msgSend(v34, sel_initWithDomain_code_userInfo_, v35, 1002, v36);

LABEL_33:
        return swift_willThrow();
      }
      id v25 = objc_msgSend(v1, sel_clientDataHash);
      uint64_t v26 = sub_21922AE08();
      unint64_t v28 = v27;

      switch(v28 >> 62)
      {
        case 1uLL:
          sub_2191E4AAC(v26, v28);
          if (__OFSUB__(HIDWORD(v26), v26)) {
            goto LABEL_48;
          }
          uint64_t v29 = HIDWORD(v26) - (int)v26;
          break;
        case 2uLL:
          uint64_t v38 = *(void *)(v26 + 16);
          uint64_t v37 = *(void *)(v26 + 24);
          sub_2191E4AAC(v26, v28);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v29 = v37 - v38;
          if (!v39) {
            break;
          }
          __break(1u);
LABEL_17:
          sub_2191E4AAC(v26, v28);
          uint64_t v29 = 0;
          break;
        case 3uLL:
          goto LABEL_17;
        default:
          sub_2191E4AAC(v26, v28);
          uint64_t v29 = BYTE6(v28);
          break;
      }
      if (v29 != sub_21922B408())
      {
        sub_21922B468();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
        uint64_t v44 = swift_initStackObject();
        *(_OWORD *)(v44 + 16) = xmmword_2192339A0;
        *(void *)(v44 + 32) = sub_21922B468();
        *(void *)(v44 + 40) = v45;
        uint64_t v108 = 0;
        unint64_t v109 = 0xE000000000000000;
        sub_21922B668();
        sub_21922B498();
        uint64_t v110 = sub_21922B408();
        sub_21922B858();
        sub_21922B498();
        swift_bridgeObjectRelease();
        sub_21922B498();
        id v46 = objc_msgSend(v1, sel_clientDataHash);
        uint64_t v47 = sub_21922AE08();
        unint64_t v49 = v48;

        switch(v49 >> 62)
        {
          case 1uLL:
            sub_2191E4AAC(v47, v49);
            LODWORD(v50) = HIDWORD(v47) - v47;
            if (__OFSUB__(HIDWORD(v47), v47)) {
              goto LABEL_49;
            }
            uint64_t v50 = (int)v50;
            break;
          case 2uLL:
            uint64_t v56 = *(void *)(v47 + 16);
            uint64_t v55 = *(void *)(v47 + 24);
            sub_2191E4AAC(v47, v49);
            uint64_t v50 = v55 - v56;
            if (!__OFSUB__(v55, v56)) {
              break;
            }
            __break(1u);
LABEL_31:
            sub_2191E4AAC(v47, v49);
            uint64_t v50 = 0;
            break;
          case 3uLL:
            goto LABEL_31;
          default:
            sub_2191E4AAC(v47, v49);
            uint64_t v50 = BYTE6(v49);
            break;
        }
        uint64_t v110 = v50;
        sub_21922B858();
        sub_21922B498();
        swift_bridgeObjectRelease();
        sub_21922B498();
        uint64_t v57 = v108;
        unint64_t v58 = v109;
        *(void *)(v44 + 72) = MEMORY[0x263F8D310];
        *(void *)(v44 + 48) = v57;
        *(void *)(v44 + 56) = v58;
        sub_219224D54(v44);
        id v59 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v60 = (void *)sub_21922B458();
        swift_bridgeObjectRelease();
        uint64_t v36 = (void *)sub_21922B418();
        swift_bridgeObjectRelease();
        objc_msgSend(v59, sel_initWithDomain_code_userInfo_, v60, 1002, v36);

        goto LABEL_33;
      }
      id v40 = objc_msgSend(v1, sel_attestationObject);
      sub_21922AE08();

      sub_21922B008();
      uint64_t v41 = v104;
      uint64_t v42 = v105;
      if (v104[6](v12, 1, v105) == 1)
      {
        sub_219206428((uint64_t)v12);
        sub_21922B468();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2192339A0;
        *(void *)(inited + 32) = sub_21922B468();
        *(void *)(inited + 40) = v43;
        *(void *)(inited + 72) = MEMORY[0x263F8D310];
        unint64_t v32 = 0xD000000000000024;
        uint64_t v33 = "Could not decode attestation object.";
        goto LABEL_11;
      }
      uint64_t v51 = v103;
      v41[4](v103, (uint64_t)v12, v42);
      if (sub_21922AFF8() == 1701736302 && v52 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        v41[2](v16, (uint64_t)v51, v42);
        unint64_t v53 = v41;
        uint64_t v54 = v102;
LABEL_39:
        unint64_t v104 = (unsigned int (**)(char *, uint64_t, uint64_t))v53[1];
        ((void (*)(char *, uint64_t))v104)(v16, v42);
        goto LABEL_40;
      }
      char v62 = sub_21922B868();
      swift_bridgeObjectRelease();
      v41[2](v16, (uint64_t)v51, v42);
      unint64_t v53 = v41;
      uint64_t v54 = v102;
      if (v62) {
        goto LABEL_39;
      }
      if (sub_21922AFF8() == 0x6972707265746E65 && v63 == 0xEA00000000006573)
      {
        swift_bridgeObjectRelease();
        uint64_t v54 = v102;
        unint64_t v53 = v104;
        goto LABEL_39;
      }
      char v86 = sub_21922B868();
      swift_bridgeObjectRelease();
      os_log_type_t v87 = (unsigned int (**)(char *, uint64_t, uint64_t))v104[1];
      ((void (*)(char *, uint64_t))v87)(v16, v42);
      uint64_t v54 = v102;
      unint64_t v104 = v87;
      if ((v86 & 1) == 0)
      {
        sub_21922B468();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
        uint64_t v88 = swift_initStackObject();
        *(_OWORD *)(v88 + 16) = xmmword_2192339A0;
        *(void *)(v88 + 32) = sub_21922B468();
        *(void *)(v88 + 40) = v89;
        *(void *)(v88 + 72) = MEMORY[0x263F8D310];
        *(void *)(v88 + 48) = 0xD000000000000023;
        *(void *)(v88 + 56) = 0x800000021923C5D0;
        sub_219224D54(v88);
        id v90 = objc_allocWithZone(MEMORY[0x263F087E8]);
        unint64_t v91 = (void *)sub_21922B458();
        swift_bridgeObjectRelease();
        unint64_t v92 = (void *)sub_21922B418();
        swift_bridgeObjectRelease();
        objc_msgSend(v90, sel_initWithDomain_code_userInfo_, v91, 1002, v92);

        swift_willThrow();
        return ((uint64_t (*)(char *, uint64_t))v104)(v103, v42);
      }
LABEL_40:
      sub_21922B018();
      uint64_t v64 = v98;
      uint64_t v65 = v99;
      sub_21922AF18();
      uint64_t v66 = v100;
      if (v65)
      {
        sub_21922B468();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
        uint64_t v67 = swift_initStackObject();
        *(_OWORD *)(v67 + 16) = xmmword_2192339B0;
        *(void *)(v67 + 32) = sub_21922B468();
        *(void *)(v67 + 40) = v68;
        *(void *)(v67 + 72) = MEMORY[0x263F8D310];
        *(void *)(v67 + 48) = 0xD00000000000001ALL;
        *(void *)(v67 + 56) = 0x800000021923C450;
        *(void *)(v67 + 80) = sub_21922B468();
        *(void *)(v67 + 88) = v69;
        swift_getErrorValue();
        uint64_t v70 = v106;
        uint64_t v71 = v107;
        *(void *)(v67 + 120) = v107;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v67 + 96));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(boxed_opaque_existential_0, v70, v71);
        sub_219224D54(v67);
        id v73 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v74 = (void *)sub_21922B458();
        swift_bridgeObjectRelease();
        unint64_t v75 = (void *)sub_21922B418();
        swift_bridgeObjectRelease();
        objc_msgSend(v73, sel_initWithDomain_code_userInfo_, v74, 1002, v75);

        swift_willThrow();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v96, v64, v101);
        id v76 = objc_msgSend(v1, sel_relyingParty);
        uint64_t v77 = sub_21922B468();
        char v98 = v78;
        uint64_t v99 = (void *)v77;

        __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF8);
        uint64_t v79 = v66;
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_219233A50;
        sub_21922AF48();
        sub_21922AF58();
        sub_21922AF38();
        sub_21922AF28();
        uint64_t v108 = v80;
        sub_219203884();
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F08);
        sub_2192038DC();
        unsigned int v82 = v94;
        uint64_t v81 = v95;
        sub_21922B618();
        uint64_t v108 = MEMORY[0x263F8EE78];
        unint64_t v83 = v93;
        unint64_t v84 = v96;
        sub_21922B618();
        sub_21922AF78();
        swift_bridgeObjectRelease();
        id v85 = *(void (**)(char *, uint64_t))(v79 + 8);
        v85(v83, v81);
        v85(v82, v81);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v84, v101);
      }
      return ((uint64_t (*)(char *, uint64_t))v104)(v103, v105);
    case 2uLL:
      uint64_t v23 = *(void *)(v19 + 16);
      uint64_t v24 = *(void *)(v19 + 24);
      sub_2191E4AAC(v19, v21);
      uint64_t v22 = v24 - v23;
      if (!__OFSUB__(v24, v23)) {
        goto LABEL_6;
      }
      goto LABEL_47;
    case 3uLL:
      sub_2191E4AAC(v19, v21);
      goto LABEL_10;
    default:
      sub_2191E4AAC(v19, v21);
      uint64_t v22 = BYTE6(v21);
      goto LABEL_6;
  }
}

uint64_t sub_219206428(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C10F60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ASCredentialIdentityStore.credentialIdentities(forService:credentialIdentityTypes:)(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return MEMORY[0x270FA2498](sub_2192064AC, 0, 0);
}

uint64_t sub_2192064AC()
{
  uint64_t v2 = v0[17];
  int64_t v1 = (void *)v0[18];
  uint64_t v3 = v0[16];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2192065BC;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2192066B4;
  v0[13] = &block_descriptor_0;
  v0[14] = v4;
  objc_msgSend(v1, sel_getCredentialIdentitiesForService_credentialIdentityTypes_completionHandler_, v3, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2192065BC()
{
  return MEMORY[0x270FA2498](sub_21920669C, 0, 0);
}

uint64_t sub_21920669C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 120));
}

uint64_t sub_2192066B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F78);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_21922B4E8();

  return MEMORY[0x270FA2400](v1);
}

id ASPasskeyRegistrationCredential.init(relyingParty:clientDataHash:credentialID:attestationObject:extensionOutput:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, void **a9)
{
  uint64_t v15 = *a9;
  id v16 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  unint64_t v25 = a4;
  uint64_t v17 = (void *)sub_21922ADF8();
  uint64_t v26 = (void *)sub_21922ADF8();
  uint64_t v24 = (void *)sub_21922ADF8();
  if (v15)
  {
    id v18 = objc_allocWithZone((Class)ASPasskeyRegistrationCredentialExtensionOutput);
    id v19 = v15;
    unint64_t v20 = (char *)objc_msgSend(v18, sel_init);
    unint64_t v21 = *(void **)&v20[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions];
    *(void *)&v20[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions] = v19;
  }
  else
  {
    unint64_t v20 = 0;
  }
  id v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRelyingParty_clientDataHash_credentialID_attestationObject_extensionOutput_, v16, v17, v26, v24, v20);
  sub_2191E4AAC(a7, a8);
  sub_2191E4AAC(a5, a6);
  sub_2191E4AAC(a3, v25);

  return v22;
}

void ASPasskeyRegistrationCredential.extensionOutput.getter(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_extensionOutput);

  if (!v3) {
    goto LABEL_4;
  }
  uint64_t v4 = (char *)objc_msgSend(v1, sel_extensionOutput);
  if (v4)
  {
    uint64_t v5 = v4;
    id v3 = *(id *)&v4[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions];

LABEL_4:
    *a1 = v3;
    return;
  }
  __break(1u);
}

void ASPasskeyRegistrationCredential.extensionOutput.setter(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    id v3 = objc_allocWithZone((Class)ASPasskeyRegistrationCredentialExtensionOutput);
    id v4 = v2;
    uint64_t v5 = (char *)objc_msgSend(v3, sel_init);
    uint64_t v6 = *(void **)&v5[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions];
    id v7 = v5;
    *(void *)&v5[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions] = v4;
  }
  else
  {
    id v7 = 0;
  }
  objc_msgSend(v1, sel_setExtensionOutput_, v7);
}

void (*ASPasskeyRegistrationCredential.extensionOutput.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_extensionOutput);

  if (!v3) {
    goto LABEL_4;
  }
  id result = (void (*)(void **, char))objc_msgSend(v1, sel_extensionOutput);
  if (result)
  {
    uint64_t v5 = result;
    id v3 = *(id *)((char *)result + OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions);

LABEL_4:
    *a1 = v3;
    return sub_219206A88;
  }
  __break(1u);
  return result;
}

void sub_219206A88(void **a1, char a2)
{
  id v3 = *a1;
  if (a2)
  {
    if (v3)
    {
      id v4 = objc_allocWithZone((Class)ASPasskeyRegistrationCredentialExtensionOutput);
      id v5 = v3;
      uint64_t v6 = (char *)objc_msgSend(v4, sel_init);
      id v7 = *(void **)&v6[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions];
      id v12 = v6;
      *(void *)&v6[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions] = v5;
    }
    else
    {
      id v12 = 0;
    }
    objc_msgSend(a1[1], sel_setExtensionOutput_, v12);
  }
  else if (v3)
  {
    id v8 = objc_allocWithZone((Class)ASPasskeyRegistrationCredentialExtensionOutput);
    id v9 = v3;
    uint64_t v10 = (char *)objc_msgSend(v8, sel_init);
    uint64_t v11 = *(void **)&v10[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions];
    id v12 = v10;
    *(void *)&v10[OBJC_IVAR___ASPasskeyRegistrationCredentialExtensionOutput_coreExtensions] = v9;

    objc_msgSend(a1[1], sel_setExtensionOutput_, v12);
  }
  else
  {
    id v12 = 0;
    objc_msgSend(a1[1], sel_setExtensionOutput_, 0);
  }
}

void sub_219206BB0(void *a1@<X8>)
{
  ASPasskeyRegistrationCredential.extensionOutput.getter(&v2);
  *a1 = v2;
}

void sub_219206BEC(void **a1)
{
  uint64_t v2 = *a1;
  id v1 = v2;
  ASPasskeyRegistrationCredential.extensionOutput.setter(&v2);
}

id sub_219206C28()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 40);
  int v4 = *(unsigned __int8 *)(v0 + 48);
  id v5 = objc_allocWithZone((Class)ASPublicKeyCredentialClientData);
  swift_bridgeObjectRetain();
  sub_2191E4E14(v1, v2);
  uint64_t v6 = (void *)sub_21922ADF8();
  id v7 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithChallenge_origin_, v6, v7);
  sub_2191E4AAC(v1, v2);

  if (v3) {
    id v9 = (void *)sub_21922B458();
  }
  else {
    id v9 = 0;
  }
  objc_msgSend(v8, sel_setTopOrigin_, v9);

  uint64_t v10 = 1;
  if (v4) {
    uint64_t v10 = 2;
  }
  if (v4 == 2) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10;
  }
  objc_msgSend(v8, sel_setCrossOrigin_, v11);
  return v8;
}

BOOL static ASPublicKeyCredentialClientData.CrossOriginValue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ASPublicKeyCredentialClientData.CrossOriginValue.hash(into:)()
{
  return sub_21922B8C8();
}

uint64_t ASPublicKeyCredentialClientData.CrossOriginValue.hashValue.getter()
{
  return sub_21922B8F8();
}

uint64_t ASPublicKeyCredentialClientData.challenge.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASPublicKeyCredentialClientData.challenge.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASPublicKeyCredentialClientData.challenge.modify())()
{
  return nullsub_1;
}

uint64_t ASPublicKeyCredentialClientData.origin.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASPublicKeyCredentialClientData.origin.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASPublicKeyCredentialClientData.origin.modify())()
{
  return nullsub_1;
}

uint64_t ASPublicKeyCredentialClientData.topOrigin.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASPublicKeyCredentialClientData.topOrigin.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ASPublicKeyCredentialClientData.topOrigin.modify())()
{
  return nullsub_1;
}

void ASPublicKeyCredentialClientData.crossOrigin.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *ASPublicKeyCredentialClientData.crossOrigin.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ASPublicKeyCredentialClientData.crossOrigin.modify())()
{
  return nullsub_1;
}

uint64_t ASPublicKeyCredentialClientData.init(challenge:origin:topOrigin:crossOrigin:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v8 = *a7;
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = v8;
  return result;
}

unint64_t sub_219206FC8()
{
  unint64_t result = qword_267C10F80;
  if (!qword_267C10F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10F80);
  }
  return result;
}

uint64_t destroy for ASPublicKeyCredentialClientData(uint64_t a1)
{
  sub_2191E4AAC(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASPublicKeyCredentialClientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2191E4E14(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASPublicKeyCredentialClientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2191E4E14(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_2191E4AAC(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASPublicKeyCredentialClientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASPublicKeyCredentialClientData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASPublicKeyCredentialClientData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASPublicKeyCredentialClientData()
{
  return &type metadata for ASPublicKeyCredentialClientData;
}

unsigned char *storeEnumTagSinglePayload for ASPublicKeyCredentialClientData.CrossOriginValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219207354);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASPublicKeyCredentialClientData.CrossOriginValue()
{
  return &type metadata for ASPublicKeyCredentialClientData.CrossOriginValue;
}

uint64_t sub_21920738C(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_21922AFB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21922AFE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)objc_msgSend(v2, sel_crossOrigin) < 3)
  {
    if (!a1)
    {
      id v12 = (unsigned int *)MEMORY[0x263F29330];
LABEL_6:
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v12, v4);
      id v13 = objc_msgSend(v2, sel_challenge);
      sub_21922AE08();

      id v14 = objc_msgSend(v2, sel_origin);
      sub_21922B468();

      sub_21922AFC8();
      uint64_t v15 = sub_21922AFD8();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return v15;
    }
    if (a1 == 1)
    {
      id v12 = (unsigned int *)MEMORY[0x263F29328];
      goto LABEL_6;
    }
  }
  uint64_t result = sub_21922B738();
  __break(1u);
  return result;
}

uint64_t sub_2192076B0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x676E69727473;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x676E69727473;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x800000021923B610;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6C69616D65;
      break;
    case 3:
      unint64_t v5 = 0x7265626D756ELL;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E61656C6F6F62;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1702125924;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x800000021923B610;
      if (v5 == 0xD000000000000010) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6C69616D65) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x7265626D756ELL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x6E61656C6F6F62;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702125924) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_21922B868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_219207894(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x363532616873;
    }
    else {
      uint64_t v2 = 0x323135616873;
    }
    unint64_t v3 = 0xE600000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x363532616873;
      }
      else {
        uint64_t v5 = 0x323135616873;
      }
      unint64_t v6 = 0xE600000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE400000000000000;
    uint64_t v2 = 828467315;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE400000000000000;
  if (v2 != 828467315)
  {
LABEL_15:
    char v7 = sub_21922B868();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_219207990(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006874;
  uint64_t v3 = 0x75612D6369736162;
  uint64_t v4 = a1;
  uint64_t v5 = 0x75612D6369736162;
  unint64_t v6 = 0xEA00000000006874;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x79656B73736170;
      break;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1886678900;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1702129518;
      break;
    case 4:
      uint64_t v5 = 0x632D746964657263;
      unint64_t v6 = 0xEB00000000647261;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x79656B73736170) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1886678900) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702129518;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xEB00000000647261;
      if (v5 != 0x632D746964657263) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_21922B868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_219207B54(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x746E656D75636F64;
    }
    else {
      uint64_t v2 = 0x797469746E656469;
    }
    unint64_t v3 = 0xE800000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x746E656D75636F64;
      }
      else {
        uint64_t v5 = 0x797469746E656469;
      }
      unint64_t v6 = 0xE800000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE500000000000000;
    uint64_t v2 = 0x6E69676F6CLL;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE500000000000000;
  if (v2 != 0x6E69676F6CLL)
  {
LABEL_15:
    char v7 = sub_21922B868();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t ASImportableItem.init(id:created:lastModified:type:title:subtitle:credentials:tags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v17 = *a5;
  id v18 = (int *)type metadata accessor for ASImportableItem(0);
  id v19 = (void *)((char *)a9 + v18[9]);
  *a9 = a1;
  a9[1] = a2;
  unint64_t v20 = (char *)a9 + v18[5];
  uint64_t v21 = sub_21922AE58();
  id v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v20, a3, v21);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)((char *)a9 + v18[6], a4, v21);
  *((unsigned char *)a9 + v18[7]) = v17;
  uint64_t v24 = (void *)((char *)a9 + v18[8]);
  *uint64_t v24 = a6;
  v24[1] = a7;
  void *v19 = a8;
  v19[1] = a10;
  *(void *)((char *)a9 + v18[10]) = a11;
  *(void *)((char *)a9 + v18[11]) = a12;
  return result;
}

uint64_t type metadata accessor for ASImportableItem(uint64_t a1)
{
  return sub_2191F3450(a1, (uint64_t *)&unk_267C11298);
}

uint64_t ASImportableEditableField.init(id:fieldType:value:label:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v8 = *a3;
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 16) = v8;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  return result;
}

__n128 ASImportableCredential.BasicAuthentication.init(urls:username:password:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a3 + 48);
  *(void *)a4 = a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a4 + 24) = v6;
  *(_OWORD *)(a4 + 40) = *(_OWORD *)(a2 + 32);
  *(void *)(a4 + 56) = v4;
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 80) = v7;
  __n128 result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a4 + 96) = result;
  *(void *)(a4 + 112) = v5;
  return result;
}

uint64_t ASImportableCredential.TOTP.init(secret:period:digits:username:algorithm:issuer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, __int16 a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v10 = *a7;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(_WORD *)(a9 + 16) = a3;
  *(_WORD *)(a9 + 18) = a4;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 40) = v10;
  *(void *)(a9 + 48) = a8;
  *(void *)(a9 + 56) = a10;
  return result;
}

AuthenticationServices::ASImportableCredential::Note __swiftcall ASImportableCredential.Note.init(content:)(AuthenticationServices::ASImportableCredential::Note content)
{
  AuthenticationServices::ASImportableCredential::Note *v1 = content;
  return content;
}

__n128 ASImportableCredential.Passkey.init(credentialID:relyingPartyIdentifier:userName:userDisplayName:userHandle:key:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unint64_t a12)
{
  __n128 result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u64[1] = a12;
  return result;
}

unint64_t ASCredentialExchangeActivity.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t ASCredentialImportToken.getter()
{
  return 0xD000000000000017;
}

uint64_t ASExportedCredentialData.accounts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ASExportedCredentialData.accounts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ASExportedCredentialData.accounts.modify())()
{
  return nullsub_1;
}

uint64_t ASExportedCredentialData.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_219211D04(type metadata accessor for ASExportedCredentialData, MEMORY[0x263F07508], a1);
}

uint64_t type metadata accessor for ASExportedCredentialData(uint64_t a1)
{
  return sub_2191F3450(a1, (uint64_t *)&unk_267C11288);
}

uint64_t ASExportedCredentialData.init(accounts:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for ASExportedCredentialData(0);
  return sub_21922AE98();
}

uint64_t ASExportedCredentialData.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_21921A718(a1, v3);
  swift_bridgeObjectRelease();
  type metadata accessor for ASExportedCredentialData(0);
  sub_21922AEA8();
  sub_21921A9D0(&qword_267C10F88, MEMORY[0x263F07508]);
  return sub_21922B438();
}

uint64_t static ASExportedCredentialData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((sub_219208084(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for ASExportedCredentialData(0) + 20);

  return MEMORY[0x270EF0CB0]((char *)a1 + v4, (char *)a2 + v4);
}

uint64_t sub_219208084(uint64_t a1, uint64_t a2)
{
  uint64_t v328 = *MEMORY[0x263EF8340];
  uint64_t v4 = type metadata accessor for ASImportableItem(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  long long v7 = (uint64_t *)((char *)&v251 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v11 || a1 == a2) {
    return 1;
  }
  uint64_t v279 = v10;
  v307 = (uint64_t *)((char *)&v251 - v9);
  uint64_t v12 = 0;
  uint64_t v295 = 0;
  uint64_t v13 = a1 + 32;
  uint64_t v14 = a2 + 32;
  v290 = &v326;
  v302 = v7;
  v292 = (int *)v8;
  uint64_t v282 = a1 + 32;
  uint64_t v283 = v11;
  uint64_t v281 = a2 + 32;
  while (2)
  {
    uint64_t v15 = (uint64_t *)(v13 + 80 * v12);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    uint64_t v18 = v12 + 1;
    uint64_t v19 = v15[2];
    unint64_t v20 = (unsigned char *)v15[3];
    uint64_t v21 = v15[4];
    uint64_t v22 = v15[5];
    uint64_t v23 = v15[6];
    uint64_t v24 = v15[7];
    uint64_t v26 = v15[8];
    uint64_t v25 = v15[9];
    unint64_t v27 = (uint64_t *)(v14 + 80 * v12);
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    uint64_t v31 = v27[2];
    uint64_t v30 = v27[3];
    uint64_t v32 = v27[4];
    uint64_t v306 = v27[5];
    uint64_t v33 = v27[6];
    uint64_t v34 = v27[7];
    uint64_t v35 = v27[8];
    uint64_t v36 = v27[9];
    uint64_t v304 = v28;
    uint64_t v305 = v35;
    uint64_t v37 = 0;
    switch(v17 >> 62)
    {
      case 1uLL:
        LODWORD(v37) = HIDWORD(v16) - v16;
        if (__OFSUB__(HIDWORD(v16), v16))
        {
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
LABEL_268:
          __break(1u);
LABEL_269:
          __break(1u);
LABEL_270:
          __break(1u);
LABEL_271:
          __break(1u);
LABEL_272:
          __break(1u);
        }
        uint64_t v37 = (int)v37;
        break;
      case 2uLL:
        uint64_t v39 = *(void *)(v16 + 16);
        uint64_t v38 = *(void *)(v16 + 24);
        BOOL v40 = __OFSUB__(v38, v39);
        uint64_t v37 = v38 - v39;
        if (!v40) {
          break;
        }
        goto LABEL_258;
      case 3uLL:
        break;
      default:
        uint64_t v37 = BYTE6(v17);
        break;
    }
    uint64_t v291 = v34;
    uint64_t v303 = v36;
    unint64_t v300 = v29;
    uint64_t v301 = v24;
    uint64_t v298 = v16;
    unint64_t v299 = v17;
    uint64_t v285 = v18;
    unint64_t v288 = v33;
    uint64_t v289 = v23;
    uint64_t v293 = v32;
    uint64_t v294 = v21;
    uint64_t v296 = v31;
    uint64_t v297 = v19;
    switch(v29 >> 62)
    {
      case 1uLL:
        LODWORD(v41) = HIDWORD(v304) - v304;
        if (__OFSUB__(HIDWORD(v304), v304)) {
          goto LABEL_259;
        }
        uint64_t v41 = (int)v41;
LABEL_15:
        if (v37 != v41) {
          return 0;
        }
        if (v37 < 1)
        {
LABEL_20:
          uint64_t v49 = v34;
          uint64_t v50 = (unsigned char *)v30;
          unint64_t v51 = v29;
          sub_2191E4E14(v16, v17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v45 = v20;
          swift_bridgeObjectRetain();
          uint64_t v52 = v22;
          swift_bridgeObjectRetain();
          unint64_t v53 = v50;
          uint64_t v34 = v49;
          sub_2191E4E14(v304, v51);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v54 = v53;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v286 = v26;
          uint64_t v287 = v22;
          switch(v17 >> 62)
          {
            case 1uLL:
              uint64_t v280 = v25;
              v284 = v20;
              uint64_t v55 = (int)v16;
              if (v16 >> 32 < (int)v16) {
                goto LABEL_265;
              }
              uint64_t v56 = v30;
              uint64_t v57 = v16;
              unint64_t v58 = v17;
              sub_2191E4E14(v16, v17);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_2191E4E14(v304, v300);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v59 = v57;
              sub_2191E4E14(v57, v58);
              uint64_t v60 = sub_21922AD48();
              if (!v60) {
                goto LABEL_25;
              }
              uint64_t v61 = sub_21922AD68();
              if (__OFSUB__(v55, v61)) {
                goto LABEL_267;
              }
              v60 += v55 - v61;
LABEL_25:
              uint64_t v30 = v56;
              uint64_t v34 = v291;
              sub_21922AD58();
              uint64_t v62 = v60;
              uint64_t v63 = v295;
              sub_21921A4A4(v62, v304, v300, v325);
              sub_2191E4AAC(v59, v299);
              uint64_t v45 = v284;
              uint64_t v25 = v280;
              if ((v325[0] & 1) == 0) {
                goto LABEL_240;
              }
              goto LABEL_36;
            case 2uLL:
              uint64_t v280 = *(void *)(v16 + 16);
              unint64_t v277 = *(void *)(v16 + 24);
              unint64_t v64 = v29;
              sub_2191E4E14(v16, v17);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v65 = v291;
              swift_bridgeObjectRetain();
              v284 = v20;
              swift_bridgeObjectRetain();
              uint64_t v34 = v65;
              swift_bridgeObjectRetain();
              sub_2191E4E14(v304, v64);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v66 = sub_21922AD48();
              if (v66)
              {
                uint64_t v67 = v66;
                uint64_t v68 = sub_21922AD68();
                uint64_t v69 = v280;
                uint64_t v63 = v295;
                if (__OFSUB__(v280, v68)) {
                  goto LABEL_268;
                }
                uint64_t v70 = v67 + v280 - v68;
                unint64_t v71 = v277;
              }
              else
              {
                uint64_t v70 = 0;
                uint64_t v63 = v295;
                unint64_t v71 = v277;
                uint64_t v69 = v280;
              }
              if (__OFSUB__(v71, v69)) {
                goto LABEL_266;
              }
              sub_21922AD58();
              sub_21921A4A4(v70, v304, v300, v325);
              swift_release();
              swift_release();
              uint64_t v45 = v284;
              if ((v325[0] & 1) == 0) {
                goto LABEL_240;
              }
LABEL_36:
              uint64_t v54 = (unsigned char *)v30;
              uint64_t v295 = v63;
              uint64_t v26 = v286;
              uint64_t v52 = v287;
              break;
            case 3uLL:
              *(void *)&v325[6] = 0;
              *(void *)v325 = 0;
              uint64_t v72 = v30;
              unint64_t v73 = v29;
              sub_2191E4E14(v16, v17);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v45 = v20;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v74 = v304;
              sub_2191E4E14(v304, v73);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v47 = v74;
              unint64_t v48 = v73;
              uint64_t v30 = v72;
              goto LABEL_31;
            default:
              *(void *)v325 = v16;
              *(_WORD *)&v325[8] = v17;
              v325[10] = BYTE2(v17);
              v325[11] = BYTE3(v17);
              v325[12] = BYTE4(v17);
              v325[13] = BYTE5(v17);
              v284 = &v325[BYTE6(v17)];
              unint64_t v44 = v29;
              sub_2191E4E14(v16, v17);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v45 = v20;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v46 = v304;
              sub_2191E4E14(v304, v44);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v47 = v46;
              unint64_t v48 = v44;
LABEL_31:
              uint64_t v63 = v295;
              sub_21921A4A4((uint64_t)v325, v47, v48, v327);
              if ((v327[0] & 1) == 0) {
                goto LABEL_240;
              }
              goto LABEL_36;
          }
        }
        unint64_t v75 = v45;
        if ((v297 != v296 || v45 != v54) && (sub_21922B868() & 1) == 0) {
          goto LABEL_240;
        }
        uint64_t v76 = v301;
        uint64_t v77 = v52;
        if ((v294 != v293 || v52 != v306) && (sub_21922B868() & 1) == 0) {
          goto LABEL_240;
        }
        uint64_t v78 = v26;
        if (v76)
        {
          uint64_t v79 = v302;
          if (!v34) {
            goto LABEL_240;
          }
          if ((v289 != v288 || v76 != v34) && (sub_21922B868() & 1) == 0)
          {
LABEL_245:
            sub_2191E4AAC(v304, v300);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_2191E4AAC(v298, v299);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_255;
          }
        }
        else
        {
          uint64_t v79 = v302;
          if (v34) {
            goto LABEL_245;
          }
        }
        if ((sub_21920BA2C(v78, v305) & 1) == 0 || (uint64_t v80 = *(void *)(v25 + 16), v80 != *(void *)(v303 + 16)))
        {
LABEL_240:
          sub_2191E4AAC(v304, v300);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2191E4AAC(v298, v299);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_254;
        }
        if (!v80 || v25 == v303)
        {
LABEL_235:
          sub_2191E4AAC(v304, v300);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2191E4AAC(v298, v299);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = 1;
          uint64_t v13 = v282;
          uint64_t v12 = v285;
          uint64_t v14 = v281;
          if (v285 == v283) {
            return result;
          }
          continue;
        }
        uint64_t v286 = v78;
        uint64_t v287 = v77;
        v284 = v75;
        uint64_t v81 = 0;
        unint64_t v82 = (*(unsigned __int8 *)(v279 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80);
        uint64_t v280 = v25;
        unint64_t v83 = v25 + v82;
        unint64_t v84 = v303 + v82;
        uint64_t v85 = *(void *)(v279 + 72);
        char v86 = v307;
        os_log_type_t v87 = v292;
        unint64_t v277 = v303 + v82;
        v278 = v54;
        unint64_t v288 = v25 + v82;
        uint64_t v289 = v80;
        uint64_t v276 = v85;
        while (2)
        {
          uint64_t v88 = v85 * v81;
          uint64_t v293 = v81 + 1;
          sub_219224C6C(v83 + v85 * v81, (uint64_t)v86, type metadata accessor for ASImportableItem);
          sub_219224C6C(v84 + v88, (uint64_t)v79, type metadata accessor for ASImportableItem);
          uint64_t v90 = *v86;
          unint64_t v89 = v86[1];
          uint64_t v92 = *v79;
          unint64_t v91 = v79[1];
          uint64_t v93 = 0;
          switch(v89 >> 62)
          {
            case 1uLL:
              LODWORD(v93) = HIDWORD(v90) - v90;
              if (__OFSUB__(HIDWORD(v90), v90)) {
                goto LABEL_261;
              }
              uint64_t v93 = (int)v93;
              break;
            case 2uLL:
              uint64_t v95 = *(void *)(v90 + 16);
              uint64_t v94 = *(void *)(v90 + 24);
              BOOL v40 = __OFSUB__(v94, v95);
              uint64_t v93 = v94 - v95;
              if (!v40) {
                break;
              }
              goto LABEL_262;
            case 3uLL:
              break;
            default:
              uint64_t v93 = BYTE6(v89);
              break;
          }
          switch(v91 >> 62)
          {
            case 1uLL:
              LODWORD(v96) = HIDWORD(v92) - v92;
              if (__OFSUB__(HIDWORD(v92), v92)) {
                goto LABEL_263;
              }
              uint64_t v96 = (int)v96;
LABEL_65:
              if (v93 != v96) {
                goto LABEL_253;
              }
              if (v93 >= 1)
              {
                switch(v89 >> 62)
                {
                  case 1uLL:
                    if (v90 >> 32 < (int)v90) {
                      goto LABEL_269;
                    }
                    sub_2191E4E14(v92, v91);
                    sub_2191E4E14(v90, v89);
                    uint64_t v99 = sub_21922AD48();
                    if (!v99) {
                      goto LABEL_75;
                    }
                    uint64_t v100 = sub_21922AD68();
                    if (__OFSUB__((int)v90, v100)) {
                      goto LABEL_271;
                    }
                    v99 += (int)v90 - v100;
LABEL_75:
                    sub_21922AD58();
                    uint64_t v101 = v99;
                    uint64_t v102 = v295;
                    sub_21921A4A4(v101, v92, v91, v325);
                    uint64_t v295 = v102;
                    sub_2191E4AAC(v92, v91);
                    sub_2191E4AAC(v90, v89);
                    uint64_t v79 = v302;
                    os_log_type_t v87 = v292;
                    if ((v325[0] & 1) == 0) {
                      goto LABEL_253;
                    }
                    break;
                  case 2uLL:
                    uint64_t v103 = *(void *)(v90 + 16);
                    uint64_t v104 = *(void *)(v90 + 24);
                    sub_2191E4E14(v92, v91);
                    swift_retain();
                    swift_retain();
                    uint64_t v105 = sub_21922AD48();
                    if (!v105) {
                      goto LABEL_80;
                    }
                    uint64_t v106 = sub_21922AD68();
                    if (__OFSUB__(v103, v106)) {
                      goto LABEL_272;
                    }
                    v105 += v103 - v106;
LABEL_80:
                    if (__OFSUB__(v104, v103)) {
                      goto LABEL_270;
                    }
                    sub_21922AD58();
                    uint64_t v107 = v105;
                    uint64_t v108 = v295;
                    sub_21921A4A4(v107, v92, v91, v325);
                    uint64_t v295 = v108;
                    sub_2191E4AAC(v92, v91);
                    swift_release();
                    swift_release();
                    uint64_t v79 = v302;
                    if ((v325[0] & 1) == 0) {
                      goto LABEL_253;
                    }
                    break;
                  case 3uLL:
                    *(void *)&v325[6] = 0;
                    *(void *)v325 = 0;
                    sub_2191E4E14(v92, v91);
                    goto LABEL_84;
                  default:
                    *(void *)v325 = v90;
                    *(_WORD *)&v325[8] = v89;
                    v325[10] = BYTE2(v89);
                    v325[11] = BYTE3(v89);
                    v325[12] = BYTE4(v89);
                    v325[13] = BYTE5(v89);
                    sub_2191E4E14(v92, v91);
LABEL_84:
                    uint64_t v109 = v295;
                    sub_21921A4A4((uint64_t)v325, v92, v91, v327);
                    uint64_t v295 = v109;
                    sub_2191E4AAC(v92, v91);
                    if (v327[0]) {
                      break;
                    }
                    goto LABEL_253;
                }
              }
LABEL_85:
              if ((sub_21922AE28() & 1) == 0 || (sub_21922AE28() & 1) == 0) {
                goto LABEL_253;
              }
              uint64_t v110 = v87[7];
              if (*((unsigned char *)v307 + v110))
              {
                unint64_t v111 = 0xE800000000000000;
                if (*((unsigned char *)v307 + v110) == 1)
                {
                  uint64_t v112 = 0x746E656D75636F64;
                  int v113 = *((unsigned __int8 *)v79 + v110);
                  if (!v113) {
                    goto LABEL_96;
                  }
                }
                else
                {
                  uint64_t v112 = 0x797469746E656469;
                  int v113 = *((unsigned __int8 *)v79 + v110);
                  if (!v113)
                  {
LABEL_96:
                    unint64_t v114 = 0xE500000000000000;
                    if (v112 != 0x6E69676F6CLL) {
                      goto LABEL_101;
                    }
                    goto LABEL_99;
                  }
                }
              }
              else
              {
                unint64_t v111 = 0xE500000000000000;
                uint64_t v112 = 0x6E69676F6CLL;
                int v113 = *((unsigned __int8 *)v79 + v110);
                if (!v113) {
                  goto LABEL_96;
                }
              }
              unint64_t v114 = 0xE800000000000000;
              if (v113 == 1)
              {
                if (v112 != 0x746E656D75636F64) {
                  goto LABEL_101;
                }
              }
              else if (v112 != 0x797469746E656469)
              {
                goto LABEL_101;
              }
LABEL_99:
              if (v111 == v114)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_102;
              }
LABEL_101:
              char v115 = sub_21922B868();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v115 & 1) == 0) {
                goto LABEL_253;
              }
LABEL_102:
              uint64_t v116 = v87[8];
              id v117 = (uint64_t *)((char *)v307 + v116);
              uint64_t v118 = *(uint64_t *)((char *)v307 + v116 + 8);
              uint64_t v119 = (uint64_t *)((char *)v79 + v116);
              if (*v117 == *v119 && v118 == v119[1] || (sub_21922B868() & 1) != 0)
              {
                uint64_t v120 = v87[9];
                uint64_t v121 = (uint64_t *)((char *)v307 + v120);
                uint64_t v122 = *(uint64_t *)((char *)v307 + v120 + 8);
                unint64_t v123 = (uint64_t *)((char *)v79 + v120);
                uint64_t v124 = v123[1];
                if (v122)
                {
                  if (!v124 || (*v121 != *v123 || v122 != v124) && (sub_21922B868() & 1) == 0) {
                    goto LABEL_253;
                  }
                }
                else if (v124)
                {
                  goto LABEL_253;
                }
                uint64_t v125 = v87[10];
                uint64_t v126 = *(uint64_t *)((char *)v307 + v125);
                uint64_t v127 = *(uint64_t *)((char *)v79 + v125);
                uint64_t v128 = *(void *)(v126 + 16);
                if (v128 != *(void *)(v127 + 16)) {
                  goto LABEL_253;
                }
                if (v128 && v126 != v127)
                {
                  uint64_t v129 = v87;
                  uint64_t v130 = v126 + 32;
                  uint64_t v131 = v127 + 32;
                  uint64_t v132 = v128 - 1;
                  while (1)
                  {
                    sub_2191F1818(v130, (uint64_t)v323);
                    sub_2191F1818(v131, (uint64_t)v324);
                    sub_2191F1818((uint64_t)v323, (uint64_t)v325);
                    sub_2191F1818((uint64_t)v324, (uint64_t)v290);
                    sub_2191F1818((uint64_t)v323, (uint64_t)v327);
                    switch(sub_21921E330((uint64_t)v327))
                    {
                      case 1u:
                        uint64_t v296 = v130;
                        uint64_t v297 = v132;
                        uint64_t v294 = v131;
                        uint64_t v158 = (uint64_t *)nullsub_1(v327);
                        uint64_t v160 = *v158;
                        unint64_t v159 = v158[1];
                        uint64_t v162 = v158[2];
                        uint64_t v161 = v158[3];
                        uint64_t v163 = v158[4];
                        uint64_t v164 = v158[6];
                        uint64_t v272 = v158[5];
                        uint64_t v273 = v163;
                        uint64_t v165 = v158[8];
                        unint64_t v271 = v158[7];
                        unint64_t v167 = v158[9];
                        unint64_t v166 = v158[10];
                        uint64_t v168 = v158[11];
                        sub_2191F1818((uint64_t)v324, (uint64_t)v322);
                        if (sub_21921E330((uint64_t)v322) != 1) {
                          goto LABEL_243;
                        }
                        uint64_t v270 = v164;
                        unint64_t v266 = v167;
                        uint64_t v267 = v165;
                        uint64_t v262 = v168;
                        unint64_t v263 = v166;
                        v169 = (uint64_t *)nullsub_1(v322);
                        uint64_t v170 = *v169;
                        uint64_t v171 = v169[2];
                        unint64_t v274 = v169[1];
                        uint64_t v275 = v170;
                        uint64_t v173 = v169[3];
                        uint64_t v172 = v169[4];
                        uint64_t v175 = v169[5];
                        uint64_t v174 = v169[6];
                        uint64_t v268 = v169[7];
                        uint64_t v269 = v174;
                        unint64_t v176 = v169[8];
                        unint64_t v264 = v169[9];
                        unint64_t v265 = v176;
                        uint64_t v177 = v169[10];
                        unint64_t v260 = v169[11];
                        uint64_t v261 = v177;
                        sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        if ((sub_21921C6D4(v160, v159, v275, v274) & 1) == 0
                          || (v162 != v171 || v161 != v173) && (sub_21922B868() & 1) == 0
                          || (v273 != v172 || v272 != v175) && (sub_21922B868() & 1) == 0)
                        {
                          goto LABEL_249;
                        }
                        uint64_t v79 = v302;
                        if ((v270 != v269 || v271 != v268) && (sub_21922B868() & 1) == 0
                          || (sub_21921C6D4(v267, v266, v265, v264) & 1) == 0)
                        {
                          goto LABEL_252;
                        }
                        char v178 = sub_21921C6D4(v263, v262, v261, v260);
                        sub_219224B78((uint64_t)v325);
                        sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        os_log_type_t v87 = v292;
                        uint64_t v130 = v296;
                        uint64_t v132 = v297;
                        uint64_t v131 = v294;
                        if ((v178 & 1) == 0) {
                          goto LABEL_253;
                        }
                        goto LABEL_216;
                      case 2u:
                        uint64_t v294 = v131;
                        uint64_t v296 = v130;
                        uint64_t v179 = nullsub_1(v327);
                        uint64_t v180 = *(void *)v179;
                        unint64_t v181 = *(void *)(v179 + 8);
                        int v182 = *(unsigned __int16 *)(v179 + 16);
                        int v183 = *(unsigned __int16 *)(v179 + 18);
                        uint64_t v184 = *(void *)(v179 + 24);
                        uint64_t v272 = *(void *)(v179 + 32);
                        uint64_t v273 = v184;
                        int v185 = *(unsigned __int8 *)(v179 + 40);
                        uint64_t v186 = *(void *)(v179 + 56);
                        uint64_t v267 = *(void *)(v179 + 48);
                        sub_2191F1818((uint64_t)v324, (uint64_t)v322);
                        if (sub_21921E330((uint64_t)v322) != 2) {
                          goto LABEL_244;
                        }
                        LODWORD(v271) = v185;
                        uint64_t v269 = v186;
                        uint64_t v297 = v132;
                        uint64_t v187 = nullsub_1(v322);
                        uint64_t v188 = *(void *)v187;
                        unint64_t v274 = *(void *)(v187 + 8);
                        uint64_t v275 = v188;
                        int v189 = *(unsigned __int16 *)(v187 + 16);
                        int v190 = *(unsigned __int16 *)(v187 + 18);
                        uint64_t v192 = *(void *)(v187 + 24);
                        uint64_t v191 = *(void *)(v187 + 32);
                        LODWORD(v270) = *(unsigned __int8 *)(v187 + 40);
                        unint64_t v266 = *(void *)(v187 + 48);
                        uint64_t v268 = *(void *)(v187 + 56);
                        sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        if ((sub_21921C6D4(v180, v181, v275, v274) & 1) == 0 || v182 != v189 || v183 != v190) {
                          goto LABEL_249;
                        }
                        uint64_t v79 = v302;
                        if ((v273 != v192 || v272 != v191) && (sub_21922B868() & 1) == 0) {
                          goto LABEL_252;
                        }
                        if (v271)
                        {
                          os_log_type_t v87 = v292;
                          uint64_t v130 = v296;
                          uint64_t v131 = v294;
                          unint64_t v193 = 0xE600000000000000;
                          if (v271 == 1) {
                            uint64_t v194 = 0x363532616873;
                          }
                          else {
                            uint64_t v194 = 0x323135616873;
                          }
                        }
                        else
                        {
                          unint64_t v193 = 0xE400000000000000;
                          uint64_t v194 = 828467315;
                          os_log_type_t v87 = v292;
                          uint64_t v130 = v296;
                          uint64_t v131 = v294;
                        }
                        if (v270)
                        {
                          unint64_t v231 = 0xE600000000000000;
                          if (v270 == 1) {
                            uint64_t v232 = 0x363532616873;
                          }
                          else {
                            uint64_t v232 = 0x323135616873;
                          }
                        }
                        else
                        {
                          unint64_t v231 = 0xE400000000000000;
                          uint64_t v232 = 828467315;
                        }
                        if (v194 == v232 && v193 == v231)
                        {
                          swift_bridgeObjectRelease_n();
                        }
                        else
                        {
                          char v233 = sub_21922B868();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v233 & 1) == 0) {
                            goto LABEL_252;
                          }
                        }
                        if (!v269)
                        {
                          uint64_t v132 = v297;
                          if (v268) {
                            goto LABEL_252;
                          }
LABEL_215:
                          sub_219224B78((uint64_t)v325);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          goto LABEL_216;
                        }
                        uint64_t v132 = v297;
                        if (!v268) {
                          goto LABEL_252;
                        }
                        if (v267 == v266 && v269 == v268) {
                          goto LABEL_215;
                        }
                        char v234 = sub_21922B868();
                        sub_219224B78((uint64_t)v325);
                        sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        if ((v234 & 1) == 0) {
                          goto LABEL_253;
                        }
                        goto LABEL_216;
                      case 3u:
                        v195 = (uint64_t *)nullsub_1(v327);
                        uint64_t v196 = *v195;
                        uint64_t v197 = v195[1];
                        sub_2191F1818((uint64_t)v324, (uint64_t)v322);
                        if (sub_21921E330((uint64_t)v322) != 3) {
                          goto LABEL_244;
                        }
                        v198 = (void *)nullsub_1(v322);
                        if (v196 == *v198 && v197 == v198[1])
                        {
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_219224B78((uint64_t)v325);
                          os_log_type_t v87 = v129;
                        }
                        else
                        {
                          char v224 = sub_21922B868();
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_219224B78((uint64_t)v325);
                          if ((v224 & 1) == 0) {
                            goto LABEL_253;
                          }
                          os_log_type_t v87 = v129;
                        }
                        goto LABEL_216;
                      case 4u:
                        uint64_t v296 = v130;
                        uint64_t v297 = v132;
                        uint64_t v294 = v131;
                        v199 = (uint64_t *)nullsub_1(v327);
                        uint64_t v200 = *v199;
                        uint64_t v201 = v199[1];
                        uint64_t v203 = v199[2];
                        uint64_t v202 = v199[3];
                        uint64_t v204 = v199[4];
                        uint64_t v205 = v199[5];
                        uint64_t v206 = v199[7];
                        uint64_t v270 = v199[6];
                        uint64_t v268 = v199[8];
                        uint64_t v275 = v199[9];
                        unint64_t v266 = v199[10];
                        uint64_t v273 = v199[11];
                        sub_2191F1818((uint64_t)v324, (uint64_t)v322);
                        if (sub_21921E330((uint64_t)v322) != 4)
                        {
LABEL_243:
                          uint64_t v79 = v302;
LABEL_244:
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_219224B78((uint64_t)v325);
                          goto LABEL_253;
                        }
                        v207 = (uint64_t *)nullsub_1(v322);
                        uint64_t v208 = *v207;
                        uint64_t v209 = v207[1];
                        uint64_t v211 = v207[2];
                        uint64_t v210 = v207[3];
                        unint64_t v213 = v207[4];
                        uint64_t v212 = v207[5];
                        uint64_t v214 = v207[7];
                        uint64_t v269 = v207[6];
                        uint64_t v267 = v207[8];
                        unint64_t v274 = v207[9];
                        unint64_t v265 = v207[10];
                        uint64_t v215 = v207[11];
                        unint64_t v271 = v213;
                        uint64_t v272 = v215;
                        if (v200 != v208 || v201 != v209)
                        {
                          uint64_t v216 = v214;
                          uint64_t v217 = v212;
                          char v218 = sub_21922B868();
                          uint64_t v212 = v217;
                          uint64_t v214 = v216;
                          if ((v218 & 1) == 0) {
                            goto LABEL_238;
                          }
                        }
                        if (v203 != v211 || v202 != v210)
                        {
                          uint64_t v219 = v214;
                          uint64_t v220 = v212;
                          char v221 = sub_21922B868();
                          uint64_t v212 = v220;
                          uint64_t v214 = v219;
                          if ((v221 & 1) == 0)
                          {
LABEL_238:
                            sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            v244 = v324;
                            goto LABEL_239;
                          }
                        }
                        if (v205)
                        {
                          if (!v212) {
                            goto LABEL_238;
                          }
                          if (v204 != v271 || v205 != v212)
                          {
                            uint64_t v222 = v214;
                            char v223 = sub_21922B868();
                            uint64_t v214 = v222;
                            if ((v223 & 1) == 0) {
                              goto LABEL_238;
                            }
                          }
                        }
                        else if (v212)
                        {
                          goto LABEL_238;
                        }
                        if (v206)
                        {
                          if (!v214 || (v270 != v269 || v206 != v214) && (sub_21922B868() & 1) == 0) {
                            goto LABEL_238;
                          }
                        }
                        else if (v214)
                        {
                          goto LABEL_238;
                        }
                        if (v275)
                        {
                          if (!v274 || (v268 != v267 || v275 != v274) && (sub_21922B868() & 1) == 0) {
                            goto LABEL_238;
                          }
                        }
                        else if (v274)
                        {
                          goto LABEL_238;
                        }
                        if (v273)
                        {
                          if (!v272 || (v266 != v265 || v273 != v272) && (sub_21922B868() & 1) == 0) {
                            goto LABEL_238;
                          }
                        }
                        else if (v272)
                        {
                          goto LABEL_238;
                        }
                        sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_219224B78((uint64_t)v325);
                        uint64_t v79 = v302;
                        os_log_type_t v87 = v292;
                        uint64_t v130 = v296;
                        uint64_t v132 = v297;
                        uint64_t v131 = v294;
                        goto LABEL_216;
                      default:
                        uint64_t v297 = v132;
                        uint64_t v133 = nullsub_1(v327);
                        uint64_t v134 = *(void **)v133;
                        unint64_t v135 = *(void *)(v133 + 16);
                        uint64_t v136 = *(void *)(v133 + 24);
                        uint64_t v270 = *(void *)(v133 + 8);
                        unint64_t v271 = v135;
                        unint64_t v137 = *(void *)(v133 + 32);
                        uint64_t v272 = *(void *)(v133 + 40);
                        uint64_t v138 = *(void *)(v133 + 48);
                        uint64_t v139 = *(void *)(v133 + 56);
                        unint64_t v266 = v137;
                        uint64_t v267 = v138;
                        unint64_t v140 = *(void *)(v133 + 72);
                        uint64_t v262 = *(void *)(v133 + 64);
                        unint64_t v263 = v140;
                        uint64_t v141 = *(void *)(v133 + 88);
                        uint64_t v275 = *(void *)(v133 + 80);
                        unint64_t v143 = *(void *)(v133 + 96);
                        uint64_t v142 = *(void *)(v133 + 104);
                        uint64_t v268 = *(void *)(v133 + 112);
                        sub_2191F1818((uint64_t)v324, (uint64_t)v322);
                        if (sub_21921E330((uint64_t)v322)) {
                          goto LABEL_244;
                        }
                        uint64_t v256 = v141;
                        uint64_t v273 = v142;
                        unint64_t v274 = v143;
                        uint64_t v294 = v131;
                        uint64_t v296 = v130;
                        uint64_t v144 = nullsub_1(v322);
                        unint64_t v145 = *(void **)v144;
                        unint64_t v146 = *(void *)(v144 + 16);
                        unint64_t v264 = *(void *)(v144 + 8);
                        unint64_t v265 = v146;
                        uint64_t v147 = *(void *)(v144 + 32);
                        uint64_t v148 = *(void *)(v144 + 40);
                        uint64_t v258 = *(void *)(v144 + 24);
                        uint64_t v259 = v147;
                        uint64_t v149 = *(void *)(v144 + 56);
                        unint64_t v260 = *(void *)(v144 + 48);
                        uint64_t v261 = v149;
                        unint64_t v257 = *(void *)(v144 + 64);
                        uint64_t v150 = *(void *)(v144 + 80);
                        uint64_t v151 = *(void *)(v144 + 88);
                        unint64_t v254 = *(void *)(v144 + 72);
                        uint64_t v255 = v150;
                        unint64_t v152 = *(void *)(v144 + 104);
                        uint64_t v269 = *(void *)(v144 + 96);
                        uint64_t v153 = *(void *)(v144 + 112);
                        if ((sub_21920A2C8(v134, v145) & 1) == 0)
                        {
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          v244 = v323;
LABEL_239:
                          sub_21921E548((uint64_t)v244, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_219224B78((uint64_t)v325);
                          uint64_t v79 = v302;
                          goto LABEL_253;
                        }
                        uint64_t v251 = v151;
                        unint64_t v252 = v152;
                        uint64_t v253 = v153;
                        uint64_t v154 = v272;
                        if (v272)
                        {
                          unint64_t v155 = v271;
                          uint64_t v156 = v270;
                          uint64_t v315 = v270;
                          unint64_t v316 = v271;
                          uint64_t v317 = v136;
                          uint64_t v157 = v266;
                          unint64_t v318 = v266;
                          unint64_t v319 = v272;
                          uint64_t v320 = v267;
                          uint64_t v321 = v139;
                          if (!v148)
                          {
                            sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_2191F19B0(v156, v155, v136, v157, v154);
                            sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_2191F19B0(v156, v155, v136, v157, v154);
                            sub_2191E4AAC(v156, v155);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            uint64_t v148 = 0;
                            uint64_t v225 = v156;
LABEL_248:
                            uint64_t v246 = v258;
                            uint64_t v245 = v259;
                            sub_2191F19B0(v264, v265, v258, v259, v148);
                            sub_2191F1A04(v225, v155, v136, v266, v272);
                            sub_2191F1A04(v264, v265, v246, v245, v148);
LABEL_249:
                            sub_219224B78((uint64_t)v325);
                            sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            uint64_t v79 = v302;
                            goto LABEL_253;
                          }
                          unint64_t v308 = v264;
                          unint64_t v309 = v265;
                          char v310 = v258;
                          uint64_t v311 = v259;
                          uint64_t v312 = v148;
                          unint64_t v313 = v260;
                          uint64_t v314 = v261;
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_2191F19B0(v156, v155, v136, v157, v154);
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_2191F19B0(v156, v155, v136, v157, v154);
                          LODWORD(v265) = _s22AuthenticationServices25ASImportableEditableFieldV2eeoiySbAC_ACtFZ_0((uint64_t)&v315, (uint64_t)&v308);
                          sub_2191E4AAC(v315, v316);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          sub_2191F1A04(v156, v155, v136, v157, v154);
                          if ((v265 & 1) == 0) {
                            goto LABEL_249;
                          }
                        }
                        else
                        {
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          uint64_t v225 = v270;
                          unint64_t v155 = v271;
                          if (v148) {
                            goto LABEL_248;
                          }
                        }
                        if (v274)
                        {
                          uint64_t v226 = v262;
                          unint64_t v227 = v263;
                          uint64_t v315 = v262;
                          unint64_t v316 = v263;
                          uint64_t v317 = v275;
                          uint64_t v228 = v256;
                          unint64_t v318 = v256;
                          unint64_t v319 = v274;
                          uint64_t v320 = v273;
                          uint64_t v321 = v268;
                          uint64_t v79 = v302;
                          os_log_type_t v87 = v292;
                          uint64_t v132 = v297;
                          if (!v269)
                          {
                            sub_2191E4E14(v262, v263);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            sub_2191E4E14(v226, v227);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            sub_2191E4AAC(v226, v227);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            uint64_t v229 = 0;
                            uint64_t v230 = v275;
LABEL_251:
                            unint64_t v248 = v254;
                            uint64_t v247 = v255;
                            uint64_t v249 = v230;
                            uint64_t v250 = v251;
                            uint64_t v269 = v229;
                            sub_2191F19B0(v257, v254, v255, v251, v229);
                            sub_2191F1A04(v262, v263, v249, v256, v274);
                            sub_2191F1A04(v257, v248, v247, v250, v269);
LABEL_252:
                            sub_219224B78((uint64_t)v325);
                            sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            goto LABEL_253;
                          }
                          unint64_t v308 = v257;
                          unint64_t v309 = v254;
                          char v310 = v255;
                          uint64_t v311 = v251;
                          uint64_t v312 = v269;
                          unint64_t v313 = v252;
                          uint64_t v314 = v253;
                          sub_2191E4E14(v262, v263);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          sub_2191E4E14(v226, v227);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          LODWORD(v272) = _s22AuthenticationServices25ASImportableEditableFieldV2eeoiySbAC_ACtFZ_0((uint64_t)&v315, (uint64_t)&v308);
                          sub_2191E4AAC(v315, v316);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          sub_2191F1A04(v226, v227, v275, v228, v274);
                          sub_219224B78((uint64_t)v325);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          if ((v272 & 1) == 0) {
                            goto LABEL_253;
                          }
                        }
                        else
                        {
                          uint64_t v79 = v302;
                          os_log_type_t v87 = v292;
                          uint64_t v132 = v297;
                          uint64_t v229 = v269;
                          uint64_t v230 = v275;
                          if (v269) {
                            goto LABEL_251;
                          }
                          sub_219224B78((uint64_t)v325);
                          sub_21921E548((uint64_t)v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          sub_21921E548((uint64_t)v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        }
                        uint64_t v130 = v296;
                        uint64_t v131 = v294;
LABEL_216:
                        if (!v132) {
                          goto LABEL_218;
                        }
                        uint64_t v129 = v87;
                        v130 += 128;
                        v131 += 128;
                        --v132;
                        break;
                    }
                  }
                }
LABEL_218:
                uint64_t v235 = v87[11];
                v236 = *(void **)((char *)v307 + v235);
                v237 = *(void **)((char *)v79 + v235);
                uint64_t v238 = v236[2];
                if (v238 != v237[2]) {
                  goto LABEL_253;
                }
                if (v238 && v236 != v237)
                {
                  if ((v236[4] != v237[4] || v236[5] != v237[5]) && (sub_21922B868() & 1) == 0) {
                    goto LABEL_253;
                  }
                  uint64_t v239 = v238 - 1;
                  if (v239)
                  {
                    v240 = v237 + 7;
                    v241 = v236 + 7;
                    do
                    {
                      BOOL v242 = *(v241 - 1) == *(v240 - 1) && *v241 == *v240;
                      if (!v242 && (sub_21922B868() & 1) == 0) {
                        goto LABEL_253;
                      }
                      v240 += 2;
                      v241 += 2;
                    }
                    while (--v239);
                  }
                }
                sub_219224CD4((uint64_t)v79, type metadata accessor for ASImportableItem);
                char v86 = v307;
                sub_219224CD4((uint64_t)v307, type metadata accessor for ASImportableItem);
                unint64_t v83 = v288;
                uint64_t v81 = v293;
                uint64_t v85 = v276;
                unint64_t v84 = v277;
                if (v293 == v289) {
                  goto LABEL_235;
                }
                continue;
              }
LABEL_253:
              sub_219224CD4((uint64_t)v79, type metadata accessor for ASImportableItem);
              sub_219224CD4((uint64_t)v307, type metadata accessor for ASImportableItem);
              sub_2191E4AAC(v304, v300);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2191E4AAC(v298, v299);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_254:
              swift_bridgeObjectRelease();
LABEL_255:
              swift_bridgeObjectRelease();
              return 0;
            case 2uLL:
              uint64_t v98 = *(void *)(v92 + 16);
              uint64_t v97 = *(void *)(v92 + 24);
              BOOL v40 = __OFSUB__(v97, v98);
              uint64_t v96 = v97 - v98;
              if (!v40) {
                goto LABEL_65;
              }
              goto LABEL_264;
            case 3uLL:
              if (v93) {
                goto LABEL_253;
              }
              goto LABEL_85;
            default:
              uint64_t v96 = BYTE6(v91);
              goto LABEL_65;
          }
        }
      case 2uLL:
        uint64_t v43 = *(void *)(v304 + 16);
        uint64_t v42 = *(void *)(v304 + 24);
        BOOL v40 = __OFSUB__(v42, v43);
        uint64_t v41 = v42 - v43;
        if (!v40) {
          goto LABEL_15;
        }
        goto LABEL_260;
      case 3uLL:
        if (!v37) {
          goto LABEL_20;
        }
        return 0;
      default:
        uint64_t v41 = BYTE6(v29);
        goto LABEL_15;
    }
  }
}

uint64_t sub_21920A2C8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_21922B868(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_21922B868() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_21920A390(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unint64_t *)(a1 + 56);
  uint64_t v4 = (unint64_t *)(a2 + 56);
  while (2)
  {
    uint64_t v5 = *(v3 - 3);
    unint64_t v6 = *(v3 - 2);
    uint64_t v7 = *(v3 - 1);
    unint64_t v8 = *v3;
    uint64_t v9 = *(v4 - 3);
    unint64_t v10 = *(v4 - 2);
    uint64_t v11 = *(v4 - 1);
    unint64_t v12 = *v4;
    v3 += 4;
    v4 += 4;
    uint64_t v13 = 0;
    switch(v6 >> 62)
    {
      case 1uLL:
        LODWORD(v13) = HIDWORD(v5) - v5;
        if (__OFSUB__(HIDWORD(v5), v5))
        {
          __break(1u);
LABEL_253:
          __break(1u);
LABEL_254:
          __break(1u);
LABEL_255:
          __break(1u);
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
LABEL_268:
          __break(1u);
LABEL_269:
          __break(1u);
LABEL_270:
          __break(1u);
LABEL_271:
          __break(1u);
LABEL_272:
          __break(1u);
LABEL_273:
          __break(1u);
LABEL_274:
          __break(1u);
LABEL_275:
          __break(1u);
LABEL_276:
          __break(1u);
LABEL_277:
          __break(1u);
LABEL_278:
          __break(1u);
LABEL_279:
          __break(1u);
LABEL_280:
          __break(1u);
LABEL_281:
          __break(1u);
LABEL_282:
          __break(1u);
LABEL_283:
          __break(1u);
LABEL_284:
          __break(1u);
LABEL_285:
          __break(1u);
LABEL_286:
          __break(1u);
LABEL_287:
          __break(1u);
LABEL_288:
          __break(1u);
LABEL_289:
          __break(1u);
LABEL_290:
          __break(1u);
LABEL_291:
          __break(1u);
LABEL_292:
          __break(1u);
LABEL_293:
          __break(1u);
LABEL_294:
          __break(1u);
LABEL_295:
          __break(1u);
LABEL_296:
          __break(1u);
LABEL_297:
          __break(1u);
        }
        uint64_t v13 = (int)v13;
        break;
      case 2uLL:
        uint64_t v15 = *(void *)(v5 + 16);
        uint64_t v14 = *(void *)(v5 + 24);
        BOOL v16 = __OFSUB__(v14, v15);
        uint64_t v13 = v14 - v15;
        if (!v16) {
          break;
        }
        goto LABEL_253;
      case 3uLL:
        break;
      default:
        uint64_t v13 = BYTE6(v6);
        break;
    }
    uint64_t v193 = v9;
    uint64_t v194 = v7;
    unint64_t v17 = v10 >> 62;
    unint64_t v191 = v6;
    uint64_t v192 = v5;
    switch(v10 >> 62)
    {
      case 1uLL:
        LODWORD(v18) = HIDWORD(v9) - v9;
        if (__OFSUB__(HIDWORD(v9), v9)) {
          goto LABEL_254;
        }
        uint64_t v18 = (int)v18;
LABEL_18:
        if (v13 != v18) {
          return 0;
        }
        if (v13 < 1)
        {
LABEL_29:
          sub_2191E4E14(v5, v6);
          uint64_t v27 = v194;
          sub_2191E4E6C(v194, v8);
          sub_2191E4E14(v9, v10);
          sub_2191E4E6C(v11, v12);
        }
        else
        {
          switch(v6 >> 62)
          {
            case 1uLL:
              uint64_t v179 = v3;
              unint64_t v185 = v10;
              uint64_t v42 = (int)v5;
              if ((int)v5 > v5 >> 32) {
                goto LABEL_260;
              }
              uint64_t v43 = v2;
              unint64_t v44 = v4;
              uint64_t v45 = v11;
              uint64_t v46 = v5;
              unint64_t v47 = v6;
              sub_2191E4E14(v5, v6);
              sub_2191E4E6C(v194, v8);
              sub_2191E4E14(v9, v185);
              sub_2191E4E6C(v45, v12);
              sub_2191E4E14(v46, v47);
              uint64_t v48 = sub_21922AD48();
              if (v48)
              {
                uint64_t v49 = v48;
                uint64_t v50 = sub_21922AD68();
                if (__OFSUB__(v42, v50)) {
                  goto LABEL_262;
                }
                unint64_t v51 = (const void *)(v49 + v42 - v50);
              }
              else
              {
                unint64_t v51 = 0;
              }
              unint64_t v82 = v44;
              sub_21922AD58();
              uint64_t v11 = v45;
              uint64_t v2 = v43;
              if (!v17)
              {
                __s1[0] = v9;
                unint64_t v10 = v185;
                LODWORD(__s1[1]) = v185;
                WORD2(__s1[1]) = WORD2(v185);
                if (!v51) {
                  goto LABEL_302;
                }
                uint64_t v4 = v82;
                int v103 = memcmp(v51, __s1, BYTE6(v185));
                sub_2191E4AAC(v192, v191);
                uint64_t v3 = v179;
                uint64_t v27 = v194;
                if (v103) {
                  goto LABEL_250;
                }
                break;
              }
              uint64_t v4 = v82;
              if (v17 == 1)
              {
                if (v9 >> 32 < (int)v9) {
                  goto LABEL_272;
                }
                swift_retain();
                uint64_t v83 = sub_21922AD48();
                if (v83)
                {
                  uint64_t v84 = v83;
                  uint64_t v85 = sub_21922AD68();
                  if (__OFSUB__((int)v9, v85)) {
                    goto LABEL_281;
                  }
                  char v86 = (const void *)(v84 + (int)v9 - v85);
                }
                else
                {
                  char v86 = 0;
                }
                uint64_t v154 = sub_21922AD58();
                if (v154 >= (v9 >> 32) - (int)v9) {
                  size_t v155 = (v9 >> 32) - (int)v9;
                }
                else {
                  size_t v155 = v154;
                }
                if (!v51) {
                  goto LABEL_310;
                }
                uint64_t v77 = v194;
                unint64_t v10 = v185;
                if (!v86) {
                  goto LABEL_311;
                }
                int v97 = memcmp(v51, v86, v155);
                sub_2191E4AAC(v193, v185);
                sub_2191E4AAC(v192, v191);
LABEL_198:
                uint64_t v3 = v179;
                uint64_t v27 = v77;
                if (v97) {
                  goto LABEL_250;
                }
                break;
              }
              uint64_t v104 = *(void *)(v9 + 16);
              uint64_t v177 = *(void **)(v9 + 24);
              swift_retain();
              swift_retain();
              uint64_t v105 = sub_21922AD48();
              unint64_t v190 = v12;
              if (v105)
              {
                uint64_t v106 = v105;
                uint64_t v107 = sub_21922AD68();
                if (__OFSUB__(v104, v107)) {
                  goto LABEL_280;
                }
                uint64_t v108 = (const void *)(v106 + v104 - v107);
              }
              else
              {
                uint64_t v108 = 0;
              }
              if (__OFSUB__(v177, v104)) {
                goto LABEL_273;
              }
              uint64_t v145 = v11;
              uint64_t v152 = sub_21922AD58();
              if (v152 >= (uint64_t)v177 - v104) {
                size_t v153 = (size_t)v177 - v104;
              }
              else {
                size_t v153 = v152;
              }
              uint64_t v148 = v194;
              unint64_t v10 = v185;
              if (!v51) {
                goto LABEL_308;
              }
              if (!v108) {
                goto LABEL_309;
              }
              int v149 = memcmp(v51, v108, v153);
              swift_release();
              swift_release();
              sub_2191E4AAC(v192, v191);
              goto LABEL_189;
            case 2uLL:
              uint64_t v175 = v4;
              uint64_t v179 = v3;
              uint64_t v52 = v11;
              uint64_t v53 = *(void *)(v5 + 16);
              sub_2191E4E14(v5, v6);
              sub_2191E4E6C(v194, v8);
              unint64_t v186 = v10;
              sub_2191E4E14(v9, v10);
              uint64_t v54 = v52;
              sub_2191E4E6C(v52, v12);
              swift_retain();
              swift_retain();
              uint64_t v55 = sub_21922AD48();
              if (v55)
              {
                uint64_t v56 = v55;
                uint64_t v57 = sub_21922AD68();
                if (__OFSUB__(v53, v57)) {
                  goto LABEL_261;
                }
                uint64_t v172 = (void *)(v56 + v53 - v57);
              }
              else
              {
                uint64_t v172 = 0;
              }
              uint64_t v77 = v194;
              uint64_t v11 = v52;
              sub_21922AD58();
              uint64_t v4 = v175;
              if (!v17)
              {
                __s1[0] = v9;
                LODWORD(__s1[1]) = v10;
                WORD2(__s1[1]) = WORD2(v10);
                if (!v172) {
                  goto LABEL_301;
                }
                int v97 = memcmp(v172, __s1, BYTE6(v10));
LABEL_180:
                swift_release();
                swift_release();
                goto LABEL_198;
              }
              if (v17 == 1)
              {
                if (v9 >> 32 < (int)v9) {
                  goto LABEL_266;
                }
                swift_retain();
                uint64_t v78 = sub_21922AD48();
                if (v78)
                {
                  uint64_t v79 = v78;
                  uint64_t v80 = sub_21922AD68();
                  if (__OFSUB__((int)v9, v80)) {
                    goto LABEL_279;
                  }
                  uint64_t v81 = (const void *)(v79 + (int)v9 - v80);
                }
                else
                {
                  uint64_t v81 = 0;
                }
                uint64_t v150 = sub_21922AD58();
                if (v150 >= (v9 >> 32) - (int)v9) {
                  size_t v151 = (v9 >> 32) - (int)v9;
                }
                else {
                  size_t v151 = v150;
                }
                if (!v172) {
                  goto LABEL_306;
                }
                uint64_t v77 = v194;
                if (!v81) {
                  goto LABEL_307;
                }
                int v97 = memcmp(v172, v81, v151);
                sub_2191E4AAC(v193, v10);
                goto LABEL_180;
              }
              uint64_t v98 = *(void *)(v9 + 16);
              uint64_t v173 = *(void *)(v9 + 24);
              swift_retain();
              swift_retain();
              uint64_t v99 = sub_21922AD48();
              unint64_t v190 = v12;
              if (v99)
              {
                uint64_t v100 = v99;
                uint64_t v101 = sub_21922AD68();
                if (__OFSUB__(v98, v101)) {
                  goto LABEL_278;
                }
                uint64_t v102 = (const void *)(v100 + v98 - v101);
              }
              else
              {
                uint64_t v102 = 0;
              }
              if (__OFSUB__(v173, v98)) {
                goto LABEL_271;
              }
              uint64_t v145 = v54;
              uint64_t v146 = sub_21922AD58();
              if (v146 >= v173 - v98) {
                size_t v147 = v173 - v98;
              }
              else {
                size_t v147 = v146;
              }
              uint64_t v148 = v194;
              unint64_t v10 = v186;
              if (!v172) {
                goto LABEL_304;
              }
              if (!v102) {
                goto LABEL_305;
              }
              int v149 = memcmp(v172, v102, v147);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
LABEL_189:
              uint64_t v3 = v179;
              uint64_t v27 = v148;
              uint64_t v11 = v145;
              unint64_t v12 = v190;
              if (v149) {
                goto LABEL_250;
              }
              break;
            case 3uLL:
              memset(__s1, 0, 14);
              if (!v17) {
                goto LABEL_72;
              }
              char v178 = v3;
              if (v17 == 1)
              {
                uint64_t v174 = v4;
                uint64_t v21 = (v9 >> 32) - (int)v9;
                if (v9 >> 32 < (int)v9) {
                  goto LABEL_265;
                }
                sub_2191E4E14(v5, v6);
                sub_2191E4E6C(v194, v8);
                sub_2191E4E14(v9, v10);
                uint64_t v183 = v11;
                sub_2191E4E6C(v11, v12);
                unint64_t v22 = v10;
                sub_2191E4E14(v9, v10);
                uint64_t v58 = sub_21922AD48();
                if (!v58) {
                  goto LABEL_299;
                }
                uint64_t v24 = v58;
                uint64_t v59 = sub_21922AD68();
                uint64_t v26 = (int)v9 - v59;
                if (__OFSUB__((int)v9, v59)) {
                  goto LABEL_270;
                }
                goto LABEL_67;
              }
              uint64_t v92 = *(void *)(v9 + 16);
              uint64_t v93 = *(void *)(v9 + 24);
              sub_2191E4E14(v5, v6);
              sub_2191E4E6C(v194, v8);
              sub_2191E4E14(v9, v10);
              sub_2191E4E6C(v11, v12);
              swift_retain();
              swift_retain();
              unint64_t v91 = (char *)sub_21922AD48();
              if (v91)
              {
                uint64_t v94 = sub_21922AD68();
                if (__OFSUB__(v92, v94)) {
                  goto LABEL_277;
                }
                v91 += v92 - v94;
              }
              BOOL v16 = __OFSUB__(v93, v92);
              int64_t v95 = v93 - v92;
              if (v16) {
                goto LABEL_267;
              }
              uint64_t v96 = sub_21922AD58();
              uint64_t v3 = v178;
              if (!v91) {
                goto LABEL_300;
              }
              goto LABEL_160;
            default:
              __s1[0] = v5;
              LOWORD(__s1[1]) = v6;
              BYTE2(__s1[1]) = BYTE2(v6);
              BYTE3(__s1[1]) = BYTE3(v6);
              BYTE4(__s1[1]) = BYTE4(v6);
              BYTE5(__s1[1]) = BYTE5(v6);
              if (v17)
              {
                char v178 = v3;
                if (v17 == 1)
                {
                  uint64_t v174 = v4;
                  uint64_t v21 = (v9 >> 32) - (int)v9;
                  if (v9 >> 32 < (int)v9) {
                    goto LABEL_264;
                  }
                  sub_2191E4E14(v5, v6);
                  sub_2191E4E6C(v194, v8);
                  sub_2191E4E14(v9, v10);
                  uint64_t v183 = v11;
                  sub_2191E4E6C(v11, v12);
                  unint64_t v22 = v10;
                  sub_2191E4E14(v9, v10);
                  uint64_t v23 = sub_21922AD48();
                  if (!v23)
                  {
                    sub_21922AD58();
                    __break(1u);
LABEL_299:
                    sub_21922AD58();
                    __break(1u);
LABEL_300:
                    __break(1u);
LABEL_301:
                    __break(1u);
LABEL_302:
                    __break(1u);
LABEL_303:
                    __break(1u);
LABEL_304:
                    __break(1u);
LABEL_305:
                    __break(1u);
LABEL_306:
                    __break(1u);
LABEL_307:
                    __break(1u);
LABEL_308:
                    __break(1u);
LABEL_309:
                    __break(1u);
LABEL_310:
                    __break(1u);
LABEL_311:
                    __break(1u);
LABEL_312:
                    sub_21922AD58();
                    __break(1u);
LABEL_313:
                    __break(1u);
LABEL_314:
                    __break(1u);
LABEL_315:
                    __break(1u);
LABEL_316:
                    __break(1u);
LABEL_317:
                    __break(1u);
LABEL_318:
                    __break(1u);
LABEL_319:
                    __break(1u);
LABEL_320:
                    __break(1u);
LABEL_321:
                    __break(1u);
LABEL_322:
                    __break(1u);
LABEL_323:
                    __break(1u);
LABEL_324:
                    __break(1u);
LABEL_325:
                    sub_21922AD58();
                    __break(1u);
                    JUMPOUT(0x21920B9CCLL);
                  }
                  uint64_t v24 = v23;
                  uint64_t v25 = sub_21922AD68();
                  uint64_t v26 = (int)v9 - v25;
                  if (__OFSUB__((int)v9, v25)) {
                    goto LABEL_269;
                  }
LABEL_67:
                  uint64_t v60 = sub_21922AD58();
                  if (v60 >= v21) {
                    size_t v61 = v21;
                  }
                  else {
                    size_t v61 = v60;
                  }
                  int v62 = memcmp(__s1, (const void *)(v24 + v26), v61);
                  unint64_t v10 = v22;
                  sub_2191E4AAC(v193, v22);
                  uint64_t v3 = v178;
                  uint64_t v11 = v183;
                  uint64_t v27 = v194;
                  uint64_t v4 = v174;
                  if (v62) {
                    goto LABEL_250;
                  }
                }
                else
                {
                  uint64_t v87 = *(void *)(v9 + 16);
                  uint64_t v188 = *(void *)(v9 + 24);
                  sub_2191E4E14(v5, v6);
                  sub_2191E4E6C(v194, v8);
                  sub_2191E4E14(v9, v10);
                  sub_2191E4E6C(v11, v12);
                  swift_retain();
                  swift_retain();
                  uint64_t v88 = sub_21922AD48();
                  if (v88)
                  {
                    uint64_t v89 = v88;
                    uint64_t v90 = sub_21922AD68();
                    if (__OFSUB__(v87, v90)) {
                      goto LABEL_276;
                    }
                    unint64_t v91 = (char *)(v89 + v87 - v90);
                  }
                  else
                  {
                    unint64_t v91 = 0;
                  }
                  int64_t v95 = v188 - v87;
                  if (__OFSUB__(v188, v87)) {
                    goto LABEL_268;
                  }
                  uint64_t v96 = sub_21922AD58();
                  uint64_t v3 = v178;
                  if (!v91) {
                    goto LABEL_303;
                  }
LABEL_160:
                  if (v96 >= v95) {
                    size_t v143 = v95;
                  }
                  else {
                    size_t v143 = v96;
                  }
                  int v144 = memcmp(__s1, v91, v143);
                  swift_release();
                  swift_release();
                  uint64_t v27 = v194;
                  if (v144) {
                    goto LABEL_250;
                  }
                }
              }
              else
              {
LABEL_72:
                uint64_t __s2 = v9;
                LOWORD(v196) = v10;
                BYTE2(v196) = BYTE2(v10);
                HIBYTE(v196) = BYTE3(v10);
                LOBYTE(v197) = BYTE4(v10);
                HIBYTE(v197) = BYTE5(v10);
                sub_2191E4E14(v5, v6);
                uint64_t v27 = v194;
                sub_2191E4E6C(v194, v8);
                sub_2191E4E14(v9, v10);
                sub_2191E4E6C(v11, v12);
                if (memcmp(__s1, &__s2, BYTE6(v10))) {
                  goto LABEL_250;
                }
              }
              break;
          }
        }
        if (v8 >> 60 == 15)
        {
          if (v12 >> 60 != 15) {
            goto LABEL_248;
          }
          goto LABEL_6;
        }
        if (v12 >> 60 == 15)
        {
LABEL_248:
          sub_2191E4E6C(v27, v8);
          sub_2191E4E6C(v11, v12);
          sub_2191E4B04(v27, v8);
          sub_2191E4B04(v11, v12);
          goto LABEL_250;
        }
        uint64_t v28 = 0;
        switch(v8 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v27), v27)) {
              goto LABEL_256;
            }
            uint64_t v28 = HIDWORD(v27) - (int)v27;
LABEL_37:
            sub_2191E4E14(v27, v8);
            sub_2191E4E14(v27, v8);
            break;
          case 2uLL:
            uint64_t v30 = *(void *)(v27 + 16);
            uint64_t v29 = *(void *)(v27 + 24);
            uint64_t v28 = v29 - v30;
            if (!__OFSUB__(v29, v30)) {
              goto LABEL_37;
            }
            goto LABEL_257;
          case 3uLL:
            goto LABEL_38;
          default:
            uint64_t v28 = BYTE6(v8);
            goto LABEL_38;
        }
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v9 + 16);
        uint64_t v19 = *(void *)(v9 + 24);
        BOOL v16 = __OFSUB__(v19, v20);
        uint64_t v18 = v19 - v20;
        if (!v16) {
          goto LABEL_18;
        }
        goto LABEL_255;
      case 3uLL:
        if (!v13) {
          goto LABEL_29;
        }
        return 0;
      default:
        uint64_t v18 = BYTE6(v10);
        goto LABEL_18;
    }
LABEL_38:
    unint64_t v31 = v12;
    uint64_t v32 = v11;
    unint64_t v189 = v31;
    unint64_t v33 = v31 >> 62;
    switch(v31 >> 62)
    {
      case 1uLL:
        LODWORD(v34) = HIDWORD(v32) - v32;
        if (__OFSUB__(HIDWORD(v32), v32)) {
          goto LABEL_258;
        }
        uint64_t v34 = (int)v34;
LABEL_43:
        if (v28 == v34)
        {
          if (v28 < 1)
          {
LABEL_54:
            sub_2191E4B04(v27, v8);
            sub_2191E4B04(v27, v8);
            uint64_t v11 = v32;
            unint64_t v12 = v189;
LABEL_6:
            sub_2191E4AAC(v193, v10);
            sub_2191E4B04(v11, v12);
            sub_2191E4AAC(v192, v191);
            sub_2191E4B04(v27, v8);
            goto LABEL_7;
          }
          switch(v8 >> 62)
          {
            case 1uLL:
              unint64_t v187 = v10;
              if ((int)v27 > v27 >> 32) {
                goto LABEL_263;
              }
              sub_2191E4E14(v32, v189);
              uint64_t v63 = sub_21922AD48();
              uint64_t v180 = v3;
              if (v63)
              {
                uint64_t v64 = v63;
                uint64_t v65 = sub_21922AD68();
                if (__OFSUB__((int)v27, v65)) {
                  goto LABEL_275;
                }
                uint64_t v66 = (const void *)(v64 + (int)v27 - v65);
              }
              else
              {
                uint64_t v66 = 0;
              }
              uint64_t v109 = v194;
              sub_21922AD58();
              if (!v33)
              {
                __s1[0] = v32;
                unint64_t v129 = v189;
                LODWORD(__s1[1]) = v189;
                WORD2(__s1[1]) = WORD2(v189);
                if (!v66) {
                  goto LABEL_314;
                }
                int v130 = memcmp(v66, __s1, BYTE6(v189));
LABEL_245:
                sub_2191E4B04(v32, v129);
                sub_2191E4B04(v109, v8);
                sub_2191E4B04(v109, v8);
                sub_2191E4AAC(v193, v10);
                sub_2191E4B04(v32, v129);
                sub_2191E4AAC(v192, v191);
                sub_2191E4B04(v109, v8);
                uint64_t v3 = v180;
                if (v130) {
                  return 0;
                }
                break;
              }
              if (v33 == 1)
              {
                if (v32 >> 32 < (int)v32) {
                  goto LABEL_290;
                }
                swift_retain();
                uint64_t v114 = sub_21922AD48();
                if (v114)
                {
                  uint64_t v115 = v114;
                  uint64_t v116 = sub_21922AD68();
                  if (__OFSUB__((int)v32, v116)) {
                    goto LABEL_297;
                  }
                  id v117 = (const void *)(v115 + (int)v32 - v116);
                }
                else
                {
                  id v117 = 0;
                }
                uint64_t v169 = sub_21922AD58();
                if (v169 >= (v32 >> 32) - (int)v32) {
                  size_t v170 = (v32 >> 32) - (int)v32;
                }
                else {
                  size_t v170 = v169;
                }
                if (!v66) {
                  goto LABEL_323;
                }
                uint64_t v109 = v194;
                if (!v117) {
                  goto LABEL_324;
                }
                int v130 = memcmp(v66, v117, v170);
                unint64_t v129 = v189;
                sub_2191E4B04(v32, v189);
                goto LABEL_245;
              }
              uint64_t v137 = *(void *)(v32 + 16);
              uint64_t v138 = *(void *)(v32 + 24);
              swift_retain();
              swift_retain();
              uint64_t v139 = sub_21922AD48();
              if (v139)
              {
                uint64_t v140 = v139;
                uint64_t v141 = sub_21922AD68();
                if (__OFSUB__(v137, v141)) {
                  goto LABEL_296;
                }
                uint64_t v142 = (const void *)(v140 + v137 - v141);
              }
              else
              {
                uint64_t v142 = 0;
              }
              if (__OFSUB__(v138, v137)) {
                goto LABEL_291;
              }
              uint64_t v167 = sub_21922AD58();
              if (v167 >= v138 - v137) {
                size_t v168 = v138 - v137;
              }
              else {
                size_t v168 = v167;
              }
              uint64_t v163 = v194;
              if (!v66) {
                goto LABEL_321;
              }
              if (!v142) {
                goto LABEL_322;
              }
              int v164 = memcmp(v66, v142, v168);
LABEL_236:
              swift_release();
              swift_release();
              sub_2191E4B04(v32, v189);
              sub_2191E4B04(v163, v8);
              sub_2191E4B04(v163, v8);
              sub_2191E4AAC(v193, v187);
              sub_2191E4B04(v32, v189);
              sub_2191E4AAC(v192, v191);
              sub_2191E4B04(v163, v8);
              uint64_t v3 = v180;
              if (v164) {
                return 0;
              }
              break;
            case 2uLL:
              uint64_t v180 = v3;
              unint64_t v187 = v10;
              uint64_t v67 = *(void *)(v27 + 16);
              sub_2191E4E6C(v32, v189);
              swift_retain();
              swift_retain();
              uint64_t v68 = sub_21922AD48();
              if (v68)
              {
                uint64_t v69 = v68;
                uint64_t v70 = sub_21922AD68();
                if (__OFSUB__(v67, v70)) {
                  goto LABEL_274;
                }
                unint64_t v176 = (void *)(v69 + v67 - v70);
              }
              else
              {
                unint64_t v176 = 0;
              }
              uint64_t v109 = v194;
              unint64_t v10 = v187;
              sub_21922AD58();
              if (!v33)
              {
                __s1[0] = v32;
                unint64_t v129 = v189;
                LODWORD(__s1[1]) = v189;
                WORD2(__s1[1]) = WORD2(v189);
                if (!v176) {
                  goto LABEL_313;
                }
                int v130 = memcmp(v176, __s1, BYTE6(v189));
LABEL_227:
                swift_release();
                swift_release();
                goto LABEL_245;
              }
              if (v33 == 1)
              {
                if (v32 >> 32 < (int)v32) {
                  goto LABEL_284;
                }
                swift_retain();
                uint64_t v110 = sub_21922AD48();
                if (v110)
                {
                  uint64_t v111 = v110;
                  uint64_t v112 = sub_21922AD68();
                  if (__OFSUB__((int)v32, v112)) {
                    goto LABEL_295;
                  }
                  int v113 = (const void *)(v111 + (int)v32 - v112);
                }
                else
                {
                  int v113 = 0;
                }
                uint64_t v165 = sub_21922AD58();
                if (v165 >= (v32 >> 32) - (int)v32) {
                  size_t v166 = (v32 >> 32) - (int)v32;
                }
                else {
                  size_t v166 = v165;
                }
                if (!v176) {
                  goto LABEL_319;
                }
                uint64_t v109 = v194;
                unint64_t v10 = v187;
                if (!v113) {
                  goto LABEL_320;
                }
                int v130 = memcmp(v176, v113, v166);
                unint64_t v129 = v189;
                sub_2191E4B04(v32, v189);
                goto LABEL_227;
              }
              uint64_t v131 = *(void *)(v32 + 16);
              uint64_t v132 = *(void *)(v32 + 24);
              swift_retain();
              swift_retain();
              uint64_t v133 = sub_21922AD48();
              if (v133)
              {
                uint64_t v134 = v133;
                uint64_t v135 = sub_21922AD68();
                if (__OFSUB__(v131, v135)) {
                  goto LABEL_294;
                }
                uint64_t v136 = (const void *)(v134 + v131 - v135);
              }
              else
              {
                uint64_t v136 = 0;
              }
              if (__OFSUB__(v132, v131)) {
                goto LABEL_289;
              }
              uint64_t v161 = sub_21922AD58();
              if (v161 >= v132 - v131) {
                size_t v162 = v132 - v131;
              }
              else {
                size_t v162 = v161;
              }
              uint64_t v163 = v194;
              if (!v176) {
                goto LABEL_317;
              }
              if (!v136) {
                goto LABEL_318;
              }
              int v164 = memcmp(v176, v136, v162);
              swift_release();
              swift_release();
              goto LABEL_236;
            case 3uLL:
              memset(__s1, 0, 14);
              if (!v33) {
                goto LABEL_124;
              }
              unint64_t v184 = v10;
              if (v33 == 1)
              {
                uint64_t v37 = (v32 >> 32) - (int)v32;
                if (v32 >> 32 < (int)v32) {
                  goto LABEL_283;
                }
                sub_2191E4E14(v32, v189);
                uint64_t v71 = sub_21922AD48();
                if (!v71) {
                  goto LABEL_312;
                }
                uint64_t v39 = v71;
                uint64_t v72 = sub_21922AD68();
                uint64_t v41 = (int)v32 - v72;
                if (__OFSUB__((int)v32, v72)) {
                  goto LABEL_288;
                }
LABEL_86:
                uint64_t v73 = sub_21922AD58();
                if (v73 >= v37) {
                  size_t v74 = v37;
                }
                else {
                  size_t v74 = v73;
                }
                int v75 = memcmp(__s1, (const void *)(v39 + v41), v74);
                sub_2191E4B04(v32, v189);
                sub_2191E4B04(v194, v8);
                sub_2191E4B04(v194, v8);
                sub_2191E4AAC(v193, v184);
                sub_2191E4B04(v32, v189);
                sub_2191E4AAC(v192, v191);
                uint64_t v76 = v194;
LABEL_125:
                sub_2191E4B04(v76, v8);
                if (v75) {
                  return 0;
                }
              }
              else
              {
                int v182 = v3;
                uint64_t v124 = *(void *)(v32 + 16);
                uint64_t v125 = *(void *)(v32 + 24);
                sub_2191E4E6C(v32, v189);
                swift_retain();
                swift_retain();
                uint64_t v126 = sub_21922AD48();
                if (v126)
                {
                  uint64_t v127 = v126;
                  uint64_t v128 = sub_21922AD68();
                  if (__OFSUB__(v124, v128)) {
                    goto LABEL_293;
                  }
                  unint64_t v123 = (const void *)(v127 + v124 - v128);
                }
                else
                {
                  unint64_t v123 = 0;
                }
                int64_t v156 = v125 - v124;
                if (__OFSUB__(v125, v124)) {
                  goto LABEL_286;
                }
                uint64_t v157 = sub_21922AD58();
                uint64_t v3 = v182;
                uint64_t v158 = v194;
                if (!v123) {
                  goto LABEL_316;
                }
LABEL_207:
                if (v157 >= v156) {
                  size_t v159 = v156;
                }
                else {
                  size_t v159 = v157;
                }
                int v160 = memcmp(__s1, v123, v159);
                swift_release();
                swift_release();
                sub_2191E4B04(v32, v189);
                sub_2191E4B04(v158, v8);
                sub_2191E4B04(v158, v8);
                sub_2191E4AAC(v193, v184);
                sub_2191E4B04(v32, v189);
                sub_2191E4AAC(v192, v191);
                sub_2191E4B04(v158, v8);
                if (v160) {
                  return 0;
                }
              }
              break;
            default:
              __s1[0] = v27;
              LOWORD(__s1[1]) = v8;
              BYTE2(__s1[1]) = BYTE2(v8);
              BYTE3(__s1[1]) = BYTE3(v8);
              BYTE4(__s1[1]) = BYTE4(v8);
              BYTE5(__s1[1]) = BYTE5(v8);
              if (!v33)
              {
LABEL_124:
                uint64_t __s2 = v32;
                int v196 = v189;
                __int16 v197 = WORD2(v189);
                int v75 = memcmp(__s1, &__s2, BYTE6(v189));
                sub_2191E4B04(v27, v8);
                sub_2191E4B04(v27, v8);
                sub_2191E4AAC(v193, v10);
                sub_2191E4B04(v32, v189);
                sub_2191E4AAC(v192, v191);
                uint64_t v76 = v27;
                goto LABEL_125;
              }
              unint64_t v184 = v10;
              if (v33 == 1)
              {
                uint64_t v37 = (v32 >> 32) - (int)v32;
                if (v32 >> 32 < (int)v32) {
                  goto LABEL_282;
                }
                sub_2191E4E14(v32, v189);
                uint64_t v38 = sub_21922AD48();
                if (!v38) {
                  goto LABEL_325;
                }
                uint64_t v39 = v38;
                uint64_t v40 = sub_21922AD68();
                uint64_t v41 = (int)v32 - v40;
                if (__OFSUB__((int)v32, v40)) {
                  goto LABEL_287;
                }
                goto LABEL_86;
              }
              unint64_t v181 = v3;
              uint64_t v118 = *(void *)(v32 + 16);
              uint64_t v119 = *(void *)(v32 + 24);
              sub_2191E4E6C(v32, v189);
              swift_retain();
              swift_retain();
              uint64_t v120 = sub_21922AD48();
              if (v120)
              {
                uint64_t v121 = v120;
                uint64_t v122 = sub_21922AD68();
                if (__OFSUB__(v118, v122)) {
                  goto LABEL_292;
                }
                unint64_t v123 = (const void *)(v121 + v118 - v122);
              }
              else
              {
                unint64_t v123 = 0;
              }
              int64_t v156 = v119 - v118;
              if (__OFSUB__(v119, v118)) {
                goto LABEL_285;
              }
              uint64_t v157 = sub_21922AD58();
              uint64_t v3 = v181;
              uint64_t v158 = v194;
              if (!v123) {
                goto LABEL_315;
              }
              goto LABEL_207;
          }
LABEL_7:
          if (!--v2) {
            return 1;
          }
          continue;
        }
LABEL_249:
        sub_2191E4B04(v27, v8);
        sub_2191E4B04(v27, v8);
        uint64_t v11 = v32;
        unint64_t v12 = v189;
LABEL_250:
        sub_2191E4AAC(v193, v10);
        sub_2191E4B04(v11, v12);
        sub_2191E4AAC(v192, v191);
        sub_2191E4B04(v27, v8);
        return 0;
      case 2uLL:
        uint64_t v36 = *(void *)(v32 + 16);
        uint64_t v35 = *(void *)(v32 + 24);
        BOOL v16 = __OFSUB__(v35, v36);
        uint64_t v34 = v35 - v36;
        if (!v16) {
          goto LABEL_43;
        }
        goto LABEL_259;
      case 3uLL:
        if (!v28) {
          goto LABEL_54;
        }
        goto LABEL_249;
      default:
        uint64_t v34 = BYTE6(v31);
        goto LABEL_43;
    }
  }
}

uint64_t sub_21920BA2C(uint64_t a1, uint64_t a2)
{
  void __s1[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 48);
    uint64_t v4 = (uint64_t *)(a1 + 48);
    while (1)
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = *v4;
      uint64_t v8 = v4[2];
      uint64_t v7 = v4[3];
      uint64_t v9 = v4[4];
      uint64_t v43 = v4[5];
      uint64_t v11 = *(v3 - 2);
      unint64_t v10 = *(v3 - 1);
      uint64_t v44 = v3[1];
      uint64_t v45 = v4[1];
      uint64_t v46 = v3[3];
      unint64_t v42 = *(v4 - 1);
      v4 += 8;
      uint64_t v12 = v3[4];
      uint64_t v40 = v3[5];
      uint64_t v13 = 0;
      switch(v42 >> 62)
      {
        case 1uLL:
          LODWORD(v13) = HIDWORD(v5) - v5;
          if (__OFSUB__(HIDWORD(v5), v5))
          {
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
          }
          uint64_t v13 = (int)v13;
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v5 + 16);
          uint64_t v14 = *(void *)(v5 + 24);
          BOOL v16 = __OFSUB__(v14, v15);
          uint64_t v13 = v14 - v15;
          if (!v16) {
            break;
          }
          goto LABEL_54;
        case 3uLL:
          break;
        default:
          uint64_t v13 = BYTE6(v42);
          break;
      }
      uint64_t v41 = v9;
      uint64_t v38 = v6;
      uint64_t v39 = v5;
      uint64_t v36 = v3[2];
      uint64_t v37 = *v3;
      switch(v10 >> 62)
      {
        case 1uLL:
          LODWORD(v17) = HIDWORD(v11) - v11;
          if (__OFSUB__(HIDWORD(v11), v11)) {
            goto LABEL_55;
          }
          uint64_t v17 = (int)v17;
LABEL_15:
          if (v13 != v17) {
            return 0;
          }
          if (v13 < 1)
          {
LABEL_20:
            uint64_t v22 = v8;
            sub_2191E4E14(v5, v42);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_2191E4E14(v11, v10);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v35 = v3[4];
            switch(v42 >> 62)
            {
              case 1uLL:
                uint64_t v34 = *(v3 - 2);
                uint64_t v23 = (int)v5;
                if (v5 >> 32 < (int)v5) {
                  goto LABEL_57;
                }
                uint64_t v24 = v5;
                sub_2191E4E14(v5, v42);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_2191E4E14(v34, v10);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_2191E4E14(v24, v42);
                uint64_t v25 = sub_21922AD48();
                if (!v25) {
                  goto LABEL_25;
                }
                uint64_t v26 = sub_21922AD68();
                if (__OFSUB__(v23, v26)) {
                  goto LABEL_59;
                }
                v25 += v23 - v26;
LABEL_25:
                sub_21922AD58();
                uint64_t v11 = v34;
                sub_21921A4A4(v25, v34, v10, (char *)__s1);
                sub_2191E4AAC(v39, v42);
                uint64_t v22 = v8;
                if ((__s1[0] & 1) == 0) {
                  goto LABEL_51;
                }
                goto LABEL_36;
              case 2uLL:
                uint64_t v33 = *(void *)(v5 + 16);
                uint64_t v32 = *(void *)(v5 + 24);
                sub_2191E4E14(v5, v42);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_2191E4E14(v11, v10);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                uint64_t v27 = sub_21922AD48();
                if (v27)
                {
                  uint64_t v28 = sub_21922AD68();
                  uint64_t v29 = v33;
                  if (__OFSUB__(v33, v28)) {
                    goto LABEL_60;
                  }
                  v27 += v33 - v28;
                }
                else
                {
                  uint64_t v29 = v33;
                }
                if (__OFSUB__(v32, v29)) {
                  goto LABEL_58;
                }
                sub_21922AD58();
                sub_21921A4A4(v27, v11, v10, (char *)__s1);
                swift_release();
                swift_release();
                uint64_t v22 = v8;
                if ((__s1[0] & 1) == 0) {
                  goto LABEL_51;
                }
LABEL_36:
                uint64_t v12 = v35;
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                sub_2191E4E14(v5, v42);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_2191E4E14(v11, v10);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v20 = v11;
                unint64_t v21 = v10;
                goto LABEL_31;
              default:
                __s1[0] = v5;
                LODWORD(__s1[1]) = v42;
                WORD2(__s1[1]) = WORD2(v42);
                sub_2191E4E14(v5, v42);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_2191E4E14(v11, v10);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v20 = v11;
                unint64_t v21 = v10;
LABEL_31:
                sub_21921A4A4((uint64_t)__s1, v20, v21, &v47);
                if ((v47 & 1) == 0) {
                  goto LABEL_51;
                }
                uint64_t v22 = v8;
                goto LABEL_36;
            }
          }
          if ((v38 != v37 || v45 != v44) && (sub_21922B868() & 1) == 0) {
            goto LABEL_51;
          }
          if (v7)
          {
            if (!v46 || (v22 != v36 || v7 != v46) && (sub_21922B868() & 1) == 0)
            {
LABEL_51:
              sub_2191E4AAC(v11, v10);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2191E4AAC(v39, v42);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
          }
          else if (v46)
          {
            goto LABEL_51;
          }
          if ((sub_21920A390(v41, v12) & 1) == 0) {
            goto LABEL_51;
          }
          char v30 = sub_21920BA2C(v43, v40);
          sub_2191E4AAC(v11, v10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2191E4AAC(v39, v42);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v30 & 1) == 0) {
            return 0;
          }
          v3 += 8;
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v19 = *(void *)(v11 + 16);
          uint64_t v18 = *(void *)(v11 + 24);
          BOOL v16 = __OFSUB__(v18, v19);
          uint64_t v17 = v18 - v19;
          if (!v16) {
            goto LABEL_15;
          }
          goto LABEL_56;
        case 3uLL:
          if (!v13) {
            goto LABEL_20;
          }
          return 0;
        default:
          uint64_t v17 = BYTE6(v10);
          goto LABEL_15;
      }
    }
  }
  return 1;
}

uint64_t sub_21920C32C(uint64_t a1, uint64_t a2)
{
  uint64_t v267 = *MEMORY[0x263EF8340];
  uint64_t v246 = type metadata accessor for ASImportableItem(0);
  uint64_t v4 = MEMORY[0x270FA5388](v246);
  uint64_t v6 = (char *)&v206 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (uint64_t *)((char *)&v206 - v8);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (v10 && a1 != a2)
    {
      uint64_t v11 = 0;
      uint64_t v241 = 0;
      BOOL v242 = (uint64_t *)((char *)&v206 - v8);
      unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v13 = a1 + v12;
      uint64_t v14 = a2 + v12;
      uint64_t v15 = *(void *)(v7 + 72);
      v243 = &v265;
      uint64_t v244 = v14;
      uint64_t v238 = v6;
      uint64_t v234 = v13;
      uint64_t v235 = v10;
      uint64_t v233 = v15;
      while (1)
      {
        uint64_t v16 = v15 * v11;
        uint64_t v237 = v11 + 1;
        sub_219224C6C(v13 + v15 * v11, (uint64_t)v9, type metadata accessor for ASImportableItem);
        sub_219224C6C(v14 + v16, (uint64_t)v6, type metadata accessor for ASImportableItem);
        uint64_t v17 = *v9;
        unint64_t v18 = v9[1];
        uint64_t v20 = *(void *)v6;
        unint64_t v19 = *((void *)v6 + 1);
        uint64_t v21 = 0;
        uint64_t v22 = v246;
        switch(v18 >> 62)
        {
          case 1uLL:
            LODWORD(v21) = HIDWORD(v17) - v17;
            if (__OFSUB__(HIDWORD(v17), v17))
            {
              __break(1u);
LABEL_254:
              __break(1u);
LABEL_255:
              __break(1u);
LABEL_256:
              __break(1u);
LABEL_257:
              __break(1u);
LABEL_258:
              __break(1u);
LABEL_259:
              __break(1u);
LABEL_260:
              __break(1u);
LABEL_261:
              __break(1u);
LABEL_262:
              __break(1u);
LABEL_263:
              __break(1u);
LABEL_264:
              __break(1u);
LABEL_265:
              __break(1u);
LABEL_266:
              __break(1u);
LABEL_267:
              __break(1u);
LABEL_268:
              __break(1u);
LABEL_269:
              __break(1u);
LABEL_270:
              __break(1u);
            }
            uint64_t v21 = (int)v21;
            break;
          case 2uLL:
            uint64_t v24 = *(void *)(v17 + 16);
            uint64_t v23 = *(void *)(v17 + 24);
            BOOL v25 = __OFSUB__(v23, v24);
            uint64_t v21 = v23 - v24;
            if (!v25) {
              break;
            }
            goto LABEL_254;
          case 3uLL:
            break;
          default:
            uint64_t v21 = BYTE6(v18);
            break;
        }
        switch(v19 >> 62)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(v20) - v20;
            if (__OFSUB__(HIDWORD(v20), v20)) {
              goto LABEL_255;
            }
            uint64_t v26 = (int)v26;
LABEL_15:
            if (v21 != v26) {
              goto LABEL_250;
            }
            if (v21 >= 1)
            {
              switch(v18 >> 62)
              {
                case 1uLL:
                  if (v17 >> 32 < (int)v17) {
                    goto LABEL_257;
                  }
                  sub_2191E4E14(*(void *)v6, *((void *)v6 + 1));
                  sub_2191E4E14(v17, v18);
                  uint64_t v29 = sub_21922AD48();
                  if (!v29) {
                    goto LABEL_25;
                  }
                  uint64_t v30 = sub_21922AD68();
                  if (__OFSUB__((int)v17, v30)) {
                    goto LABEL_267;
                  }
                  v29 += (int)v17 - v30;
LABEL_25:
                  uint64_t v9 = v242;
                  sub_21922AD58();
                  uint64_t v31 = v29;
                  uint64_t v32 = v241;
                  sub_21921A4A4(v31, v20, v19, v264);
                  uint64_t v241 = v32;
                  sub_2191E4AAC(v20, v19);
                  sub_2191E4AAC(v17, v18);
                  char v33 = v264[0];
                  break;
                case 2uLL:
                  uint64_t v34 = *(void *)(v17 + 16);
                  uint64_t v35 = *(void *)(v17 + 24);
                  sub_2191E4E14(*(void *)v6, *((void *)v6 + 1));
                  swift_retain();
                  swift_retain();
                  uint64_t v36 = sub_21922AD48();
                  if (!v36) {
                    goto LABEL_29;
                  }
                  uint64_t v37 = sub_21922AD68();
                  if (__OFSUB__(v34, v37)) {
                    goto LABEL_268;
                  }
                  v36 += v34 - v37;
LABEL_29:
                  if (__OFSUB__(v35, v34)) {
                    goto LABEL_258;
                  }
                  sub_21922AD58();
                  uint64_t v38 = v36;
                  uint64_t v39 = v241;
                  sub_21921A4A4(v38, v20, v19, v264);
                  uint64_t v241 = v39;
                  sub_2191E4AAC(v20, v19);
                  swift_release();
                  swift_release();
                  char v33 = v264[0];
                  uint64_t v9 = v242;
                  break;
                case 3uLL:
                  *(void *)&v264[6] = 0;
                  *(void *)unint64_t v264 = 0;
                  sub_2191E4E14(v20, v19);
                  goto LABEL_34;
                default:
                  *(void *)unint64_t v264 = *v9;
                  *(_WORD *)&v264[8] = v18;
                  v264[10] = BYTE2(v18);
                  v264[11] = BYTE3(v18);
                  v264[12] = BYTE4(v18);
                  v264[13] = BYTE5(v18);
                  sub_2191E4E14(v20, v19);
                  uint64_t v22 = v246;
LABEL_34:
                  uint64_t v40 = v241;
                  sub_21921A4A4((uint64_t)v264, v20, v19, v266);
                  uint64_t v241 = v40;
                  sub_2191E4AAC(v20, v19);
                  if (v266[0]) {
                    goto LABEL_35;
                  }
                  goto LABEL_250;
              }
              uint64_t v22 = v246;
              if ((v33 & 1) == 0) {
                goto LABEL_250;
              }
            }
LABEL_35:
            if ((sub_21922AE28() & 1) == 0 || (sub_21922AE28() & 1) == 0) {
              goto LABEL_250;
            }
            uint64_t v41 = *(int *)(v22 + 28);
            if (*((unsigned char *)v9 + v41))
            {
              unint64_t v42 = 0xE800000000000000;
              if (*((unsigned char *)v9 + v41) == 1)
              {
                uint64_t v43 = 0x746E656D75636F64;
                int v44 = v6[v41];
                if (!v44) {
                  goto LABEL_46;
                }
              }
              else
              {
                uint64_t v43 = 0x797469746E656469;
                int v44 = v6[v41];
                if (!v44)
                {
LABEL_46:
                  unint64_t v45 = 0xE500000000000000;
                  if (v43 != 0x6E69676F6CLL) {
                    goto LABEL_51;
                  }
                  goto LABEL_49;
                }
              }
            }
            else
            {
              unint64_t v42 = 0xE500000000000000;
              uint64_t v43 = 0x6E69676F6CLL;
              int v44 = v6[v41];
              if (!v44) {
                goto LABEL_46;
              }
            }
            unint64_t v45 = 0xE800000000000000;
            if (v44 == 1)
            {
              if (v43 != 0x746E656D75636F64) {
                goto LABEL_51;
              }
            }
            else if (v43 != 0x797469746E656469)
            {
              goto LABEL_51;
            }
LABEL_49:
            if (v42 == v45)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v46 = (int *)v246;
              goto LABEL_52;
            }
LABEL_51:
            char v47 = sub_21922B868();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v46 = (int *)v246;
            if ((v47 & 1) == 0) {
              goto LABEL_250;
            }
LABEL_52:
            uint64_t v48 = v46[8];
            uint64_t v49 = *(uint64_t *)((char *)v9 + v48);
            uint64_t v50 = *(uint64_t *)((char *)v9 + v48 + 8);
            unint64_t v51 = &v6[v48];
            if ((v49 != *(void *)v51 || v50 != *((void *)v51 + 1)) && (sub_21922B868() & 1) == 0)
            {
LABEL_250:
              sub_219224CD4((uint64_t)v6, type metadata accessor for ASImportableItem);
              sub_219224CD4((uint64_t)v9, type metadata accessor for ASImportableItem);
              goto LABEL_251;
            }
            uint64_t v52 = v46[9];
            uint64_t v53 = (uint64_t *)((char *)v9 + v52);
            uint64_t v54 = *(uint64_t *)((char *)v9 + v52 + 8);
            uint64_t v55 = &v6[v52];
            uint64_t v56 = *((void *)v55 + 1);
            if (v54)
            {
              if (!v56 || (*v53 != *(void *)v55 || v54 != v56) && (sub_21922B868() & 1) == 0) {
                goto LABEL_250;
              }
            }
            else if (v56)
            {
              goto LABEL_250;
            }
            uint64_t v57 = v46[10];
            uint64_t v58 = *(uint64_t *)((char *)v9 + v57);
            uint64_t v59 = *(void *)&v6[v57];
            uint64_t v60 = *(void *)(v58 + 16);
            if (v60 != *(void *)(v59 + 16)) {
              goto LABEL_250;
            }
            if (v60)
            {
              uint64_t v14 = v244;
              if (v58 != v59)
              {
                uint64_t v61 = 0;
                uint64_t v239 = v59 + 32;
                uint64_t v240 = v58 + 32;
                uint64_t v236 = v60;
                do
                {
                  uint64_t v63 = v61++ << 7;
                  sub_2191F1818(v240 + v63, (uint64_t)v262);
                  sub_2191F1818(v239 + v63, (uint64_t)v263);
                  sub_2191F1818((uint64_t)v262, (uint64_t)v264);
                  sub_2191F1818((uint64_t)v263, (uint64_t)v243);
                  sub_2191F1818((uint64_t)v262, (uint64_t)v266);
                  switch(sub_21921E330((uint64_t)v266))
                  {
                    case 1u:
                      uint64_t v245 = v61;
                      char v86 = (uint64_t *)nullsub_1(v266);
                      uint64_t v88 = *v86;
                      unint64_t v87 = v86[1];
                      uint64_t v90 = v86[2];
                      uint64_t v89 = v86[3];
                      uint64_t v91 = v86[4];
                      uint64_t v231 = v86[5];
                      uint64_t v232 = v89;
                      uint64_t v92 = v86[6];
                      uint64_t v93 = v86[7];
                      uint64_t v94 = v86[8];
                      uint64_t v95 = v86[10];
                      unint64_t v226 = v86[9];
                      uint64_t v227 = v94;
                      uint64_t v220 = v86[11];
                      sub_2191F1818((uint64_t)v263, (uint64_t)v261);
                      if (sub_21921E330((uint64_t)v261) != 1)
                      {
                        uint64_t v6 = v238;
LABEL_237:
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_219224B78((uint64_t)v264);
                        goto LABEL_250;
                      }
                      uint64_t v225 = v91;
                      uint64_t v229 = v93;
                      uint64_t v230 = v92;
                      uint64_t v96 = (uint64_t *)nullsub_1(v261);
                      uint64_t v97 = *v96;
                      unint64_t v98 = v96[1];
                      uint64_t v100 = v96[2];
                      uint64_t v99 = v96[3];
                      unint64_t v101 = v96[4];
                      uint64_t v102 = v96[5];
                      uint64_t v103 = v96[6];
                      uint64_t v104 = v96[7];
                      uint64_t v105 = v96[8];
                      unint64_t v106 = v96[9];
                      unint64_t v107 = v96[11];
                      uint64_t v108 = 0;
                      switch(v87 >> 62)
                      {
                        case 1uLL:
                          LODWORD(v108) = HIDWORD(v88) - v88;
                          if (__OFSUB__(HIDWORD(v88), v88)) {
                            goto LABEL_259;
                          }
                          uint64_t v108 = (int)v108;
                          break;
                        case 2uLL:
                          uint64_t v163 = *(void *)(v88 + 16);
                          uint64_t v162 = *(void *)(v88 + 24);
                          BOOL v25 = __OFSUB__(v162, v163);
                          uint64_t v108 = v162 - v163;
                          if (!v25) {
                            break;
                          }
                          goto LABEL_260;
                        case 3uLL:
                          break;
                        default:
                          uint64_t v108 = BYTE6(v87);
                          break;
                      }
                      unint64_t v216 = v96[10];
                      unint64_t v217 = v107;
                      unint64_t v218 = v106;
                      uint64_t v219 = v105;
                      uint64_t v221 = v104;
                      uint64_t v222 = v103;
                      uint64_t v223 = v102;
                      uint64_t v224 = v101;
                      uint64_t v228 = v99;
                      switch(v98 >> 62)
                      {
                        case 1uLL:
                          LODWORD(v164) = HIDWORD(v97) - v97;
                          if (__OFSUB__(HIDWORD(v97), v97)) {
                            goto LABEL_263;
                          }
                          uint64_t v164 = (int)v164;
LABEL_153:
                          if (v108 != v164)
                          {
LABEL_238:
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            goto LABEL_244;
                          }
                          if (v108 < 1)
                          {
LABEL_158:
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            uint64_t v9 = v242;
                          }
                          else
                          {
                            uint64_t v215 = v95;
                            switch(v87 >> 62)
                            {
                              case 1uLL:
                                if (v88 >> 32 < (int)v88) {
                                  goto LABEL_269;
                                }
                                uint64_t v214 = v87 & 0x3FFFFFFFFFFFFFFFLL;
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v97, v98);
                                sub_2191E4E14(v88, v87);
                                uint64_t v179 = v241;
                                char v180 = sub_21921C61C((int)v88, v88 >> 32, v214, v97, v98);
                                uint64_t v241 = v179;
                                sub_2191E4AAC(v97, v98);
                                sub_2191E4AAC(v88, v87);
                                if ((v180 & 1) == 0) {
                                  goto LABEL_244;
                                }
                                goto LABEL_183;
                              case 2uLL:
                                uint64_t v181 = *(void *)(v88 + 16);
                                uint64_t v182 = *(void *)(v88 + 24);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v97, v98);
                                swift_retain();
                                swift_retain();
                                uint64_t v183 = v181;
                                uint64_t v184 = v241;
                                LOBYTE(v182) = sub_21921C61C(v183, v182, v87 & 0x3FFFFFFFFFFFFFFFLL, v97, v98);
                                uint64_t v241 = v184;
                                sub_2191E4AAC(v97, v98);
                                swift_release();
                                swift_release();
                                if ((v182 & 1) == 0) {
                                  goto LABEL_244;
                                }
                                goto LABEL_183;
                              case 3uLL:
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v97, v98);
                                unint64_t v170 = v210 & 0xFF00000000000000;
                                uint64_t v171 = 0;
                                v210 &= 0xFF00000000000000;
                                goto LABEL_182;
                              default:
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v97, v98);
                                unint64_t v170 = v209 & 0xFF00000000000000 | v87 & 0xFFFFFFFFFFFFFFLL;
                                uint64_t v171 = v88;
                                unint64_t v209 = v170;
LABEL_182:
                                uint64_t v185 = v241;
                                char v186 = sub_21921C544(v171, v170, v97, v98);
                                uint64_t v241 = v185;
                                sub_2191E4AAC(v97, v98);
                                if ((v186 & 1) == 0) {
                                  goto LABEL_244;
                                }
LABEL_183:
                                uint64_t v9 = v242;
                                uint64_t v14 = v244;
                                uint64_t v95 = v215;
                                break;
                            }
                          }
                          uint64_t v188 = v229;
                          uint64_t v187 = v230;
                          if ((v90 != v100 || v232 != v228) && (sub_21922B868() & 1) == 0
                            || (v225 != v224 || v231 != v223) && (sub_21922B868() & 1) == 0)
                          {
                            sub_219224B78((uint64_t)v264);
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            uint64_t v6 = v238;
                            goto LABEL_250;
                          }
                          uint64_t v6 = v238;
                          if ((v187 != v222 || v188 != v221) && (sub_21922B868() & 1) == 0
                            || (sub_21921C6D4(v227, v226, v219, v218) & 1) == 0)
                          {
                            goto LABEL_249;
                          }
                          char v189 = sub_21921C6D4(v95, v220, v216, v217);
                          sub_219224B78((uint64_t)v264);
                          sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          uint64_t v60 = v236;
                          uint64_t v61 = v245;
                          if ((v189 & 1) == 0) {
                            goto LABEL_250;
                          }
                          break;
                        case 2uLL:
                          uint64_t v169 = *(void *)(v97 + 16);
                          uint64_t v168 = *(void *)(v97 + 24);
                          BOOL v25 = __OFSUB__(v168, v169);
                          uint64_t v164 = v168 - v169;
                          if (!v25) {
                            goto LABEL_153;
                          }
                          goto LABEL_264;
                        case 3uLL:
                          if (!v108) {
                            goto LABEL_158;
                          }
                          goto LABEL_238;
                        default:
                          uint64_t v164 = BYTE6(v98);
                          goto LABEL_153;
                      }
                      break;
                    case 2u:
                      uint64_t v245 = v61;
                      uint64_t v109 = nullsub_1(v266);
                      uint64_t v110 = *(void *)v109;
                      unint64_t v111 = *(void *)(v109 + 8);
                      int v112 = *(unsigned __int16 *)(v109 + 16);
                      int v113 = *(unsigned __int16 *)(v109 + 18);
                      uint64_t v114 = *(void *)(v109 + 24);
                      uint64_t v115 = *(void *)(v109 + 32);
                      int v116 = *(unsigned __int8 *)(v109 + 40);
                      uint64_t v225 = *(void *)(v109 + 48);
                      uint64_t v229 = *(void *)(v109 + 56);
                      sub_2191F1818((uint64_t)v263, (uint64_t)v261);
                      if (sub_21921E330((uint64_t)v261) != 2) {
                        goto LABEL_237;
                      }
                      LODWORD(v232) = v112;
                      LODWORD(v231) = v113;
                      uint64_t v117 = nullsub_1(v261);
                      uint64_t v119 = *(void *)v117;
                      unint64_t v118 = *(void *)(v117 + 8);
                      int v120 = *(unsigned __int16 *)(v117 + 16);
                      int v121 = *(unsigned __int16 *)(v117 + 18);
                      uint64_t v122 = *(void *)(v117 + 24);
                      uint64_t v227 = *(void *)(v117 + 32);
                      uint64_t v228 = v122;
                      int v123 = *(unsigned __int8 *)(v117 + 40);
                      unint64_t v124 = *(void *)(v117 + 48);
                      uint64_t v125 = 0;
                      switch(v111 >> 62)
                      {
                        case 1uLL:
                          LODWORD(v125) = HIDWORD(v110) - v110;
                          if (__OFSUB__(HIDWORD(v110), v110)) {
                            goto LABEL_261;
                          }
                          uint64_t v125 = (int)v125;
                          break;
                        case 2uLL:
                          uint64_t v166 = *(void *)(v110 + 16);
                          uint64_t v165 = *(void *)(v110 + 24);
                          BOOL v25 = __OFSUB__(v165, v166);
                          uint64_t v125 = v165 - v166;
                          if (!v25) {
                            break;
                          }
                          goto LABEL_262;
                        case 3uLL:
                          break;
                        default:
                          uint64_t v125 = BYTE6(v111);
                          break;
                      }
                      unint64_t v226 = *(void *)(v117 + 56);
                      uint64_t v224 = v124;
                      LODWORD(v230) = v121;
                      switch(v118 >> 62)
                      {
                        case 1uLL:
                          LODWORD(v167) = HIDWORD(v119) - v119;
                          if (__OFSUB__(HIDWORD(v119), v119)) {
                            goto LABEL_265;
                          }
                          uint64_t v167 = (int)v167;
LABEL_162:
                          if (v125 != v167)
                          {
LABEL_239:
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            uint64_t v6 = v238;
LABEL_240:
                            sub_219224B78((uint64_t)v264);
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            uint64_t v9 = v242;
                            goto LABEL_250;
                          }
                          if (v125 < 1)
                          {
LABEL_167:
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                            uint64_t v6 = v238;
                          }
                          else
                          {
                            LODWORD(v223) = v123;
                            switch(v111 >> 62)
                            {
                              case 1uLL:
                                LODWORD(v222) = v120;
                                uint64_t v221 = v110 >> 32;
                                if (v110 >> 32 < (int)v110) {
                                  goto LABEL_270;
                                }
                                uint64_t v220 = v111 & 0x3FFFFFFFFFFFFFFFLL;
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v119, v118);
                                sub_2191E4E14(v110, v111);
                                uint64_t v190 = v241;
                                char v191 = sub_21921C61C((int)v110, v221, v220, v119, v118);
                                uint64_t v241 = v190;
                                sub_2191E4AAC(v119, v118);
                                sub_2191E4AAC(v110, v111);
LABEL_199:
                                uint64_t v6 = v238;
                                int v123 = v223;
                                if ((v191 & 1) == 0) {
                                  goto LABEL_240;
                                }
                                int v120 = v222;
                                break;
                              case 2uLL:
                                LODWORD(v222) = v120;
                                uint64_t v192 = *(void *)(v110 + 24);
                                uint64_t v221 = *(void *)(v110 + 16);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v119, v118);
                                swift_retain();
                                swift_retain();
                                uint64_t v193 = v241;
                                char v191 = sub_21921C61C(v221, v192, v111 & 0x3FFFFFFFFFFFFFFFLL, v119, v118);
                                uint64_t v241 = v193;
                                sub_2191E4AAC(v119, v118);
                                swift_release();
                                swift_release();
                                goto LABEL_199;
                              case 3uLL:
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v119, v118);
                                unint64_t v174 = v208 & 0xFF00000000000000;
                                uint64_t v175 = 0;
                                v208 &= 0xFF00000000000000;
                                goto LABEL_202;
                              default:
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                                sub_2191E4E14(v119, v118);
                                unint64_t v174 = v207 & 0xFF00000000000000 | v111 & 0xFFFFFFFFFFFFFFLL;
                                uint64_t v175 = v110;
                                unint64_t v207 = v174;
LABEL_202:
                                uint64_t v194 = v241;
                                char v195 = sub_21921C544(v175, v174, v119, v118);
                                uint64_t v241 = v194;
                                sub_2191E4AAC(v119, v118);
                                uint64_t v6 = v238;
                                int v123 = v223;
                                if (v195) {
                                  break;
                                }
                                goto LABEL_240;
                            }
                          }
                          if (v232 != v120 || v231 != v230) {
                            goto LABEL_240;
                          }
                          uint64_t v9 = v242;
                          if ((v114 != v228 || v115 != v227) && (sub_21922B868() & 1) == 0) {
                            goto LABEL_249;
                          }
                          if (v116)
                          {
                            uint64_t v60 = v236;
                            uint64_t v61 = v245;
                            unint64_t v196 = 0xE600000000000000;
                            if (v116 == 1)
                            {
                              uint64_t v197 = 0x363532616873;
                              if (!v123) {
                                goto LABEL_216;
                              }
                            }
                            else
                            {
                              uint64_t v197 = 0x323135616873;
                              if (!v123)
                              {
LABEL_216:
                                unint64_t v198 = 0xE400000000000000;
                                uint64_t v199 = 828467315;
                                goto LABEL_218;
                              }
                            }
                          }
                          else
                          {
                            unint64_t v196 = 0xE400000000000000;
                            uint64_t v197 = 828467315;
                            uint64_t v60 = v236;
                            uint64_t v61 = v245;
                            if (!v123) {
                              goto LABEL_216;
                            }
                          }
                          if (v123 == 1)
                          {
                            unint64_t v198 = 0xE600000000000000;
                            uint64_t v199 = 0x363532616873;
                          }
                          else
                          {
                            unint64_t v198 = 0xE600000000000000;
                            uint64_t v199 = 0x323135616873;
                          }
LABEL_218:
                          if (v197 == v199 && v196 == v198)
                          {
                            swift_bridgeObjectRelease_n();
                          }
                          else
                          {
                            char v200 = sub_21922B868();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v200 & 1) == 0) {
                              goto LABEL_249;
                            }
                          }
                          if (v229)
                          {
                            uint64_t v14 = v244;
                            if (!v226) {
                              goto LABEL_249;
                            }
                            if (v225 == v224 && v229 == v226)
                            {
                              sub_219224B78((uint64_t)v264);
                              sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                              sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            }
                            else
                            {
                              char v201 = sub_21922B868();
                              sub_219224B78((uint64_t)v264);
                              sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                              sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                              if ((v201 & 1) == 0) {
                                goto LABEL_250;
                              }
                            }
                          }
                          else
                          {
                            sub_219224B78((uint64_t)v264);
                            sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                            uint64_t v14 = v244;
                            if (v226) {
                              goto LABEL_250;
                            }
                          }
                          break;
                        case 2uLL:
                          uint64_t v173 = *(void *)(v119 + 16);
                          uint64_t v172 = *(void *)(v119 + 24);
                          BOOL v25 = __OFSUB__(v172, v173);
                          uint64_t v167 = v172 - v173;
                          if (!v25) {
                            goto LABEL_162;
                          }
                          goto LABEL_266;
                        case 3uLL:
                          if (!v125) {
                            goto LABEL_167;
                          }
                          goto LABEL_239;
                        default:
                          uint64_t v167 = BYTE6(v118);
                          goto LABEL_162;
                      }
                      break;
                    case 3u:
                      uint64_t v126 = (uint64_t *)nullsub_1(v266);
                      uint64_t v127 = *v126;
                      uint64_t v128 = v126[1];
                      sub_2191F1818((uint64_t)v263, (uint64_t)v261);
                      if (sub_21921E330((uint64_t)v261) != 3) {
                        goto LABEL_237;
                      }
                      unint64_t v129 = (void *)nullsub_1(v261);
                      if (v127 == *v129 && v128 == v129[1])
                      {
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_219224B78((uint64_t)v264);
                      }
                      else
                      {
                        char v155 = sub_21922B868();
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_219224B78((uint64_t)v264);
                        if ((v155 & 1) == 0) {
                          goto LABEL_250;
                        }
                      }
                      break;
                    case 4u:
                      uint64_t v245 = v61;
                      int v130 = (uint64_t *)nullsub_1(v266);
                      uint64_t v131 = *v130;
                      uint64_t v132 = v130[1];
                      uint64_t v133 = v130[2];
                      uint64_t v134 = v130[3];
                      uint64_t v135 = v130[4];
                      uint64_t v136 = v130[5];
                      uint64_t v137 = v130[7];
                      uint64_t v227 = v130[6];
                      uint64_t v225 = v130[8];
                      uint64_t v232 = v130[9];
                      uint64_t v223 = v130[10];
                      uint64_t v230 = v130[11];
                      sub_2191F1818((uint64_t)v263, (uint64_t)v261);
                      if (sub_21921E330((uint64_t)v261) != 4)
                      {
                        uint64_t v6 = v238;
                        uint64_t v9 = v242;
                        goto LABEL_237;
                      }
                      uint64_t v138 = (uint64_t *)nullsub_1(v261);
                      uint64_t v139 = *v138;
                      uint64_t v140 = v138[1];
                      uint64_t v142 = v138[2];
                      uint64_t v141 = v138[3];
                      uint64_t v144 = v138[4];
                      uint64_t v143 = v138[5];
                      uint64_t v145 = v138[7];
                      unint64_t v226 = v138[6];
                      uint64_t v224 = v138[8];
                      uint64_t v231 = v138[9];
                      uint64_t v222 = v138[10];
                      uint64_t v146 = v138[11];
                      uint64_t v228 = v144;
                      uint64_t v229 = v146;
                      if (v131 != v139 || v132 != v140)
                      {
                        uint64_t v147 = v145;
                        uint64_t v148 = v143;
                        char v149 = sub_21922B868();
                        uint64_t v143 = v148;
                        uint64_t v145 = v147;
                        if ((v149 & 1) == 0) {
                          goto LABEL_233;
                        }
                      }
                      if (v133 != v142 || v134 != v141)
                      {
                        uint64_t v150 = v145;
                        uint64_t v151 = v143;
                        char v152 = sub_21922B868();
                        uint64_t v143 = v151;
                        uint64_t v145 = v150;
                        if ((v152 & 1) == 0)
                        {
LABEL_233:
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_219224B78((uint64_t)v264);
                          goto LABEL_246;
                        }
                      }
                      if (v136)
                      {
                        if (!v143) {
                          goto LABEL_233;
                        }
                        if (v135 != v228 || v136 != v143)
                        {
                          uint64_t v153 = v145;
                          char v154 = sub_21922B868();
                          uint64_t v145 = v153;
                          if ((v154 & 1) == 0) {
                            goto LABEL_233;
                          }
                        }
                      }
                      else if (v143)
                      {
                        goto LABEL_233;
                      }
                      if (v137)
                      {
                        if (!v145 || (v227 != v226 || v137 != v145) && (sub_21922B868() & 1) == 0) {
                          goto LABEL_233;
                        }
                      }
                      else if (v145)
                      {
                        goto LABEL_233;
                      }
                      if (v232)
                      {
                        if (!v231 || (v225 != v224 || v232 != v231) && (sub_21922B868() & 1) == 0) {
                          goto LABEL_233;
                        }
                      }
                      else if (v231)
                      {
                        goto LABEL_233;
                      }
                      if (v230)
                      {
                        if (!v229 || (v223 != v222 || v230 != v229) && (sub_21922B868() & 1) == 0) {
                          goto LABEL_233;
                        }
                      }
                      else if (v229)
                      {
                        goto LABEL_233;
                      }
                      sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                      sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                      sub_219224B78((uint64_t)v264);
                      uint64_t v6 = v238;
                      uint64_t v9 = v242;
                      uint64_t v14 = v244;
                      uint64_t v61 = v245;
                      uint64_t v60 = v236;
                      break;
                    default:
                      uint64_t v245 = v61;
                      uint64_t v64 = (void *)nullsub_1(v266);
                      uint64_t v65 = (void *)*v64;
                      uint64_t v66 = v64[1];
                      unint64_t v68 = v64[2];
                      uint64_t v67 = v64[3];
                      uint64_t v70 = v64[4];
                      uint64_t v69 = v64[5];
                      uint64_t v72 = v64[6];
                      uint64_t v71 = v64[7];
                      uint64_t v223 = v64[8];
                      uint64_t v224 = v64[9];
                      uint64_t v225 = v71;
                      uint64_t v73 = v64[10];
                      uint64_t v74 = v64[12];
                      uint64_t v231 = v64[11];
                      uint64_t v232 = v74;
                      uint64_t v75 = v64[13];
                      uint64_t v229 = v73;
                      uint64_t v230 = v75;
                      uint64_t v227 = v64[14];
                      sub_2191F1818((uint64_t)v263, (uint64_t)v261);
                      if (sub_21921E330((uint64_t)v261)) {
                        goto LABEL_237;
                      }
                      uint64_t v76 = (void *)nullsub_1(v261);
                      uint64_t v77 = (void *)*v76;
                      uint64_t v78 = v65[2];
                      if (v78 != *(void *)(*v76 + 16)) {
                        goto LABEL_234;
                      }
                      uint64_t v79 = v76[2];
                      uint64_t v220 = v76[1];
                      uint64_t v221 = v79;
                      uint64_t v222 = v76[3];
                      unint64_t v80 = v76[4];
                      uint64_t v228 = v76[5];
                      unint64_t v81 = v76[6];
                      unint64_t v217 = v80;
                      unint64_t v218 = v81;
                      uint64_t v219 = v76[7];
                      unint64_t v82 = v76[9];
                      uint64_t v215 = v76[8];
                      unint64_t v216 = v82;
                      uint64_t v83 = v76[11];
                      uint64_t v211 = v76[10];
                      uint64_t v212 = v83;
                      unint64_t v226 = v76[12];
                      uint64_t v84 = v76[14];
                      unint64_t v213 = v76[13];
                      uint64_t v214 = v84;
                      if (!v78 || v65 == v77) {
                        goto LABEL_82;
                      }
                      if ((v65[4] != v77[4] || v65[5] != v77[5]) && (sub_21922B868() & 1) == 0) {
                        goto LABEL_234;
                      }
                      uint64_t v85 = v78 - 1;
                      if (!v85) {
                        goto LABEL_82;
                      }
                      unint64_t v176 = v77 + 7;
                      uint64_t v177 = v65 + 7;
                      do
                      {
                        BOOL v178 = *(v177 - 1) == *(v176 - 1) && *v177 == *v176;
                        if (!v178 && (sub_21922B868() & 1) == 0)
                        {
LABEL_234:
                          sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_219224B78((uint64_t)v264);
                          goto LABEL_245;
                        }
                        v176 += 2;
                        v177 += 2;
                        --v85;
                      }
                      while (v85);
LABEL_82:
                      if (v69)
                      {
                        uint64_t v254 = v66;
                        unint64_t v255 = v68;
                        uint64_t v256 = v67;
                        uint64_t v257 = v70;
                        uint64_t v258 = v69;
                        uint64_t v259 = v72;
                        uint64_t v260 = v225;
                        if (!v228)
                        {
                          sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_2191F19B0(v66, v68, v67, v70, v69);
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                          sub_2191F19B0(v66, v68, v67, v70, v69);
                          sub_2191E4AAC(v66, v68);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v156 = 0;
LABEL_243:
                          uint64_t v228 = v156;
                          uint64_t v202 = v217;
                          sub_2191F19B0(v220, v221, v222, v217, v156);
                          sub_2191F1A04(v66, v68, v67, v70, v69);
                          sub_2191F1A04(v220, v221, v222, v202, v228);
                          goto LABEL_244;
                        }
                        uint64_t v247 = v220;
                        uint64_t v248 = v221;
                        char v249 = v222;
                        unint64_t v250 = v217;
                        uint64_t v251 = v228;
                        unint64_t v252 = v218;
                        uint64_t v253 = v219;
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_2191F19B0(v66, v68, v67, v70, v69);
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_2191F19B0(v66, v68, v67, v70, v69);
                        LODWORD(v228) = _s22AuthenticationServices25ASImportableEditableFieldV2eeoiySbAC_ACtFZ_0((uint64_t)&v254, (uint64_t)&v247);
                        sub_2191E4AAC(v254, v255);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        sub_2191F1A04(v66, v68, v67, v70, v69);
                        if ((v228 & 1) == 0)
                        {
LABEL_244:
                          sub_219224B78((uint64_t)v264);
                          sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
LABEL_245:
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
LABEL_246:
                          uint64_t v6 = v238;
                          uint64_t v9 = v242;
                          goto LABEL_250;
                        }
                      }
                      else
                      {
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                        uint64_t v156 = v228;
                        if (v228) {
                          goto LABEL_243;
                        }
                      }
                      uint64_t v6 = v238;
                      uint64_t v9 = v242;
                      uint64_t v157 = v232;
                      if (v232)
                      {
                        uint64_t v158 = v223;
                        unint64_t v159 = v224;
                        uint64_t v254 = v223;
                        unint64_t v255 = v224;
                        uint64_t v160 = v231;
                        uint64_t v256 = v229;
                        uint64_t v257 = v231;
                        uint64_t v258 = v232;
                        uint64_t v259 = v230;
                        uint64_t v260 = v227;
                        uint64_t v60 = v236;
                        uint64_t v61 = v245;
                        if (!v226)
                        {
                          sub_2191E4E14(v223, v224);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          sub_2191E4E14(v158, v159);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          sub_2191E4AAC(v158, v159);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v161 = 0;
LABEL_248:
                          unint64_t v226 = v161;
                          uint64_t v204 = v211;
                          uint64_t v203 = v212;
                          sub_2191F19B0(v215, v216, v211, v212, v161);
                          sub_2191F1A04(v223, v224, v229, v160, v157);
                          sub_2191F1A04(v215, v216, v204, v203, v226);
LABEL_249:
                          sub_219224B78((uint64_t)v264);
                          sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                          goto LABEL_250;
                        }
                        uint64_t v247 = v215;
                        uint64_t v248 = v216;
                        char v249 = v211;
                        unint64_t v250 = v212;
                        uint64_t v251 = v226;
                        unint64_t v252 = v213;
                        uint64_t v253 = v214;
                        sub_2191E4E14(v223, v224);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        sub_2191E4E14(v158, v159);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        LODWORD(v228) = _s22AuthenticationServices25ASImportableEditableFieldV2eeoiySbAC_ACtFZ_0((uint64_t)&v254, (uint64_t)&v247);
                        sub_2191E4AAC(v254, v255);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        sub_2191F1A04(v158, v159, v229, v231, v232);
                        sub_219224B78((uint64_t)v264);
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        if ((v228 & 1) == 0) {
                          goto LABEL_250;
                        }
                      }
                      else
                      {
                        uint64_t v60 = v236;
                        uint64_t v61 = v245;
                        uint64_t v161 = v226;
                        uint64_t v160 = v231;
                        if (v226) {
                          goto LABEL_248;
                        }
                        sub_219224B78((uint64_t)v264);
                        sub_21921E548((uint64_t)v263, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                        sub_21921E548((uint64_t)v262, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
                      }
                      uint64_t v14 = v244;
                      break;
                  }
                }
                while (v61 != v60);
                uint64_t v46 = (int *)v246;
              }
            }
            else
            {
              uint64_t v14 = v244;
            }
            char v62 = sub_21920A2C8(*(void **)((char *)v9 + v46[11]), *(void **)&v6[v46[11]]);
            sub_219224CD4((uint64_t)v6, type metadata accessor for ASImportableItem);
            sub_219224CD4((uint64_t)v9, type metadata accessor for ASImportableItem);
            if ((v62 & 1) == 0) {
              return v62 & 1;
            }
            uint64_t v13 = v234;
            uint64_t v11 = v237;
            uint64_t v15 = v233;
            if (v237 == v235) {
              return v62 & 1;
            }
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v20 + 16);
            uint64_t v27 = *(void *)(v20 + 24);
            BOOL v25 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v25) {
              goto LABEL_15;
            }
            goto LABEL_256;
          case 3uLL:
            if (v21) {
              goto LABEL_250;
            }
            goto LABEL_35;
          default:
            uint64_t v26 = BYTE6(v19);
            goto LABEL_15;
        }
      }
    }
    char v62 = 1;
  }
  else
  {
LABEL_251:
    char v62 = 0;
  }
  return v62 & 1;
}

uint64_t sub_21920E2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    for (uint64_t i = v2 - 1; ; --i)
    {
      sub_2191F1818(v3, (uint64_t)v9);
      sub_2191F1818((uint64_t)v9, (uint64_t)v8);
      sub_2191F1818(v4, (uint64_t)v10);
      sub_2191F1818((uint64_t)v10, (uint64_t)v7);
      if ((_s22AuthenticationServices22ASImportableCredentialO2eeoiySbAC_ACtFZ_0((uint64_t)v8, (uint64_t)v7) & 1) == 0) {
        break;
      }
      if (!i) {
        return 1;
      }
      v3 += 128;
      v4 += 128;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_21920E35C()
{
  if (*v0) {
    return 25705;
  }
  else {
    return 0x73746E756F636361;
  }
}

uint64_t sub_21920E38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219223518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21920E3B4()
{
  return 0;
}

void sub_21920E3C0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21920E3CC(uint64_t a1)
{
  unint64_t v2 = sub_21921A928();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21920E408(uint64_t a1)
{
  unint64_t v2 = sub_21921A928();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASExportedCredentialData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10F90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921A928();
  sub_21922B918();
  uint64_t v11 = *v3;
  v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FA0);
  sub_21921E20C(&qword_267C10FA8, &qword_267C10FA0, (void (*)(void))sub_21921A97C);
  sub_21922B838();
  if (!v2)
  {
    type metadata accessor for ASExportedCredentialData(0);
    v10[6] = 1;
    sub_21922AEA8();
    sub_21921A9D0(&qword_267C10FB8, MEMORY[0x263F07508]);
    sub_21922B838();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ASExportedCredentialData.hashValue.getter()
{
  sub_21922B8B8();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_21921A718((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  type metadata accessor for ASExportedCredentialData(0);
  sub_21922AEA8();
  sub_21921A9D0(&qword_267C10F88, MEMORY[0x263F07508]);
  sub_21922B438();
  return sub_21922B8F8();
}

uint64_t ASExportedCredentialData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = sub_21922AEA8();
  uint64_t v21 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FC0);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ASExportedCredentialData(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921A928();
  sub_21922B908();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  unint64_t v19 = v5;
  uint64_t v20 = a1;
  uint64_t v12 = v23;
  uint64_t v11 = v24;
  unint64_t v18 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FA0);
  char v27 = 0;
  sub_21921E20C(&qword_267C10FC8, &qword_267C10FA0, (void (*)(void))sub_21921AA18);
  uint64_t v13 = v25;
  sub_21922B7E8();
  uint64_t v14 = (uint64_t)v18;
  void *v18 = v28;
  char v26 = 1;
  sub_21921A9D0(&qword_267C10FD8, MEMORY[0x263F07508]);
  uint64_t v15 = v19;
  sub_21922B7E8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14 + *(int *)(v8 + 20), v15, v11);
  sub_219224C6C(v14, v22, type metadata accessor for ASExportedCredentialData);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  return sub_219224CD4(v14, type metadata accessor for ASExportedCredentialData);
}

uint64_t sub_21920EA9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASExportedCredentialData.init(from:)(a1, a2);
}

uint64_t sub_21920EAB4(void *a1)
{
  return ASExportedCredentialData.encode(to:)(a1);
}

uint64_t sub_21920EACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_21922AEA8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_21920EB3C()
{
  sub_21922B8B8();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_21921A718((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_21922AEA8();
  sub_21921A9D0(&qword_267C10F88, MEMORY[0x263F07508]);
  sub_21922B438();
  return sub_21922B8F8();
}

uint64_t sub_21920EBF8(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_21921A718(a1, v3);
  swift_bridgeObjectRelease();
  sub_21922AEA8();
  sub_21921A9D0(&qword_267C10F88, MEMORY[0x263F07508]);
  return sub_21922B438();
}

uint64_t sub_21920EC9C()
{
  sub_21922B8B8();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_21921A718((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_21922AEA8();
  sub_21921A9D0(&qword_267C10F88, MEMORY[0x263F07508]);
  sub_21922B438();
  return sub_21922B8F8();
}

uint64_t sub_21920ED54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if ((sub_219208084(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);

  return MEMORY[0x270EF0CB0]((char *)a1 + v6, (char *)a2 + v6);
}

uint64_t ASExportedCredentialData.allItems.getter()
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 104;
    do
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_2191F8EFC(v4);
      v3 += 80;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    return v5;
  }
  return result;
}

uint64_t ASImportableAccount.id.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASImportableAccount.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASImportableAccount.id.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableAccount.userName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableAccount.userName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASImportableAccount.userName.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableAccount.email.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableAccount.email.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ASImportableAccount.email.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableAccount.fullName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableAccount.fullName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ASImportableAccount.fullName.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableAccount.collections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ASImportableAccount.collections.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*ASImportableAccount.collections.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableAccount.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ASImportableAccount.items.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*ASImportableAccount.items.modify())()
{
  return nullsub_1;
}

uint64_t sub_21920F110()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1919251317;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x6C69616D65;
      break;
    case 3:
      unsigned int v2 = 1819047270;
LABEL_5:
      uint64_t result = v2 | 0x656D614E00000000;
      break;
    case 4:
      uint64_t result = 1852793705;
      break;
    case 5:
      uint64_t result = 0x697463656C6C6F63;
      break;
    case 6:
      uint64_t result = 0x736D657469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21920F1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2192235F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_21920F200(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_21920F20C(uint64_t a1)
{
  unint64_t v2 = sub_21921AA6C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21920F248(uint64_t a1)
{
  unint64_t v2 = sub_21921AA6C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableAccount.init(id:userName:email:fullName:collections:items:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t ASImportableAccount.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921AA6C();
  sub_21922B908();
  if (!v2)
  {
    LOBYTE(v32) = 0;
    sub_21922B7D8();
    uint64_t v9 = sub_21922ADC8();
    if (v10 >> 60 == 15)
    {
      uint64_t v11 = sub_21922B6B8();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0);
      void *v13 = MEMORY[0x263F06F78];
      sub_21922B7A8();
      sub_21922B6A8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      uint64_t v15 = v9;
      uint64_t v16 = v10;
      LOBYTE(v32) = 1;
      uint64_t v29 = sub_21922B7D8();
      uint64_t v30 = v17;
      LOBYTE(v32) = 2;
      uint64_t v27 = sub_21922B7D8();
      uint64_t v28 = v18;
      LOBYTE(v32) = 3;
      uint64_t v25 = sub_21922B7B8();
      uint64_t v26 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF8);
      char v31 = 5;
      sub_21921E20C(&qword_267C11000, &qword_267C10FF8, (void (*)(void))sub_21921AAC0);
      sub_21922B7E8();
      uint64_t v24 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C11010);
      char v31 = 6;
      sub_21921AB68(&qword_267C11018, &qword_267C11020);
      sub_21922B7E8();
      uint64_t v20 = v32;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *a2 = v15;
      a2[1] = v16;
      uint64_t v21 = v30;
      a2[2] = v29;
      a2[3] = v21;
      uint64_t v22 = v28;
      a2[4] = v27;
      a2[5] = v22;
      uint64_t v23 = v26;
      a2[6] = v25;
      a2[7] = v23;
      a2[8] = v24;
      a2[9] = v20;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ASImportableAccount.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11028);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v19 = v1[3];
  uint64_t v20 = v7;
  uint64_t v8 = v1[4];
  uint64_t v17 = v1[5];
  uint64_t v18 = v8;
  uint64_t v9 = v1[7];
  uint64_t v15 = v1[6];
  uint64_t v16 = v9;
  uint64_t v10 = v1[8];
  uint64_t v13 = v1[9];
  uint64_t v14 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921AA6C();
  sub_21922B918();
  sub_21922ADD8();
  LOBYTE(v23) = 0;
  uint64_t v11 = v21;
  sub_21922B828();
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    LOBYTE(v23) = 1;
    sub_21922B828();
    LOBYTE(v23) = 2;
    sub_21922B828();
    LOBYTE(v23) = 3;
    sub_21922B808();
    uint64_t v23 = v14;
    char v22 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF8);
    sub_21921E20C(&qword_267C11030, &qword_267C10FF8, (void (*)(void))sub_21921AB14);
    sub_21922B838();
    uint64_t v23 = v13;
    char v22 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C11010);
    sub_21921AB68(&qword_267C11040, &qword_267C11048);
    sub_21922B838();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t ASImportableAccount.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v6 = v1[9];
  sub_2191E4E14(*v1, v4);
  sub_21922AE18();
  sub_2191E4AAC(v3, v4);
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  sub_21922B8D8();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_21922B488();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_21921C1F0(a1, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21921ABFC(a1, v6);

  return swift_bridgeObjectRelease();
}

uint64_t ASImportableAccount.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 4);
  uint64_t v2 = *((void *)v0 + 5);
  long long v3 = v0[1];
  long long v7 = *v0;
  long long v8 = v3;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v4 = v0[4];
  long long v11 = v0[3];
  long long v12 = v4;
  sub_21922B8B8();
  ASImportableAccount.hash(into:)((uint64_t)v6);
  return sub_21922B8F8();
}

uint64_t sub_21920FC70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableAccount.init(from:)(a1, a2);
}

uint64_t sub_21920FC88(void *a1)
{
  return ASImportableAccount.encode(to:)(a1);
}

uint64_t sub_21920FCA0()
{
  uint64_t v1 = *((void *)v0 + 4);
  uint64_t v2 = *((void *)v0 + 5);
  long long v3 = v0[1];
  long long v7 = *v0;
  long long v8 = v3;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v4 = v0[4];
  long long v11 = v0[3];
  long long v12 = v4;
  sub_21922B8B8();
  ASImportableAccount.hash(into:)((uint64_t)v6);
  return sub_21922B8F8();
}

uint64_t sub_21920FD00()
{
  uint64_t v1 = *((void *)v0 + 4);
  uint64_t v2 = *((void *)v0 + 5);
  long long v3 = v0[1];
  long long v7 = *v0;
  long long v8 = v3;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  long long v4 = v0[4];
  long long v11 = v0[3];
  long long v12 = v4;
  sub_21922B8B8();
  ASImportableAccount.hash(into:)((uint64_t)v6);
  return sub_21922B8F8();
}

uint64_t ASImportableCollection.id.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASImportableCollection.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASImportableCollection.id.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCollection.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCollection.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASImportableCollection.title.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCollection.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCollection.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ASImportableCollection.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCollection.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ASImportableCollection.items.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*ASImportableCollection.items.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCollection.subcollections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ASImportableCollection.subcollections.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ASImportableCollection.subcollections.modify())()
{
  return nullsub_1;
}

uint64_t sub_21920FFA0()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x656C746974627573;
      break;
    case 3:
      uint64_t result = 1852793705;
      break;
    case 4:
      uint64_t result = 0x736D657469;
      break;
    case 5:
      uint64_t result = 0x656C6C6F63627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219210058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2192238BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_219210080(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_21921008C(uint64_t a1)
{
  unint64_t v2 = sub_21921DD44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2192100C8(uint64_t a1)
{
  unint64_t v2 = sub_21921DD44();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableCollection.init(id:title:subtitle:items:subcollections:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t ASImportableCollection.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11050);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921DD44();
  sub_21922B908();
  if (!v2)
  {
    LOBYTE(v28) = 0;
    sub_21922B7D8();
    uint64_t v9 = sub_21922ADC8();
    if (v10 >> 60 == 15)
    {
      uint64_t v11 = sub_21922B6B8();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0);
      void *v13 = MEMORY[0x263F06F78];
      sub_21922B7A8();
      sub_21922B6A8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      uint64_t v15 = v9;
      uint64_t v16 = v10;
      LOBYTE(v28) = 1;
      uint64_t v25 = sub_21922B7D8();
      uint64_t v26 = v17;
      LOBYTE(v28) = 2;
      uint64_t v23 = sub_21922B7B8();
      uint64_t v24 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C11060);
      char v27 = 4;
      sub_21921E20C(&qword_267C11068, &qword_267C11060, (void (*)(void))sub_21921DD98);
      sub_21922B7E8();
      uint64_t v22 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF8);
      char v27 = 5;
      sub_21921E20C(&qword_267C11000, &qword_267C10FF8, (void (*)(void))sub_21921AAC0);
      sub_21922B7C8();
      if (v28) {
        uint64_t v19 = v28;
      }
      else {
        uint64_t v19 = MEMORY[0x263F8EE78];
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *a2 = v15;
      a2[1] = v16;
      uint64_t v20 = v26;
      a2[2] = v25;
      a2[3] = v20;
      uint64_t v21 = v24;
      a2[4] = v23;
      a2[5] = v21;
      a2[6] = v22;
      a2[7] = v19;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ASImportableCollection.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11078);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v16 = v1[3];
  uint64_t v17 = v7;
  uint64_t v8 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v8;
  uint64_t v9 = v1[6];
  uint64_t v12 = v1[7];
  uint64_t v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921DD44();
  sub_21922B918();
  sub_21922ADD8();
  LOBYTE(v20) = 0;
  uint64_t v10 = v18;
  sub_21922B828();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    LOBYTE(v20) = 1;
    sub_21922B828();
    LOBYTE(v20) = 2;
    sub_21922B808();
    uint64_t v20 = v13;
    char v19 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C11060);
    sub_21921E20C(&qword_267C11080, &qword_267C11060, (void (*)(void))sub_21921DDEC);
    sub_21922B838();
    if (*(void *)(v12 + 16))
    {
      uint64_t v20 = v12;
      char v19 = 5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF8);
      sub_21921E20C(&qword_267C11030, &qword_267C10FF8, (void (*)(void))sub_21921AB14);
      sub_21922B838();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t ASImportableCollection.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v6 = v1[7];
  sub_2191E4E14(*v1, v4);
  sub_21922AE18();
  sub_2191E4AAC(v3, v4);
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  sub_21922B8D8();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_21922B488();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_21921C454(a1, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21921C1F0(a1, v6);

  return swift_bridgeObjectRelease();
}

uint64_t ASImportableCollection.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v6 = *v0;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  long long v3 = v0[3];
  long long v9 = v0[2];
  long long v10 = v3;
  sub_21922B8B8();
  ASImportableCollection.hash(into:)((uint64_t)v5);
  return sub_21922B8F8();
}

uint64_t sub_219210A34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableCollection.init(from:)(a1, a2);
}

uint64_t sub_219210A4C(void *a1)
{
  return ASImportableCollection.encode(to:)(a1);
}

uint64_t sub_219210A64()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v6 = *v0;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  long long v3 = v0[3];
  long long v9 = v0[2];
  long long v10 = v3;
  sub_21922B8B8();
  ASImportableCollection.hash(into:)((uint64_t)v5);
  return sub_21922B8F8();
}

uint64_t sub_219210AC4()
{
  uint64_t v1 = *((void *)v0 + 2);
  uint64_t v2 = *((void *)v0 + 3);
  long long v6 = *v0;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  long long v3 = v0[3];
  long long v9 = v0[2];
  long long v10 = v3;
  sub_21922B8B8();
  ASImportableCollection.hash(into:)((uint64_t)v5);
  return sub_21922B8F8();
}

uint64_t ASImportableLinkedItem.item.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASImportableLinkedItem.item.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASImportableLinkedItem.item.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableLinkedItem.account.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_2191E4E6C(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t ASImportableLinkedItem.account.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4B04(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASImportableLinkedItem.account.modify())()
{
  return nullsub_1;
}

uint64_t sub_219210C38()
{
  if (*v0) {
    return 0x746E756F636361;
  }
  else {
    return 1835365481;
  }
}

uint64_t sub_219210C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219223B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_219210C94(uint64_t a1)
{
  unint64_t v2 = sub_21921DF68();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219210CD0(uint64_t a1)
{
  unint64_t v2 = sub_21921DF68();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableLinkedItem.init(item:account:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t ASImportableLinkedItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11090);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921DF68();
  sub_21922B908();
  if (!v2)
  {
    char v26 = 0;
    sub_21922B7D8();
    uint64_t v9 = sub_21922ADC8();
    if (v10 >> 60 == 15)
    {
      uint64_t v11 = sub_21922B6B8();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0);
      void *v13 = MEMORY[0x263F06F78];
      sub_21922B7A8();
      sub_21922B6A8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
LABEL_6:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    }
    uint64_t v14 = v9;
    unint64_t v15 = v10;
    char v25 = 1;
    sub_21922B7B8();
    if (v16)
    {
      uint64_t v18 = sub_21922ADC8();
      if (v19 >> 60 == 15)
      {
        uint64_t v24 = sub_21922B6B8();
        swift_allocError();
        uint64_t v21 = v20;
        uint64_t v23 = (char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0) + 48);
        void *v21 = MEMORY[0x263F06F78];
        sub_21922B7A8();
        sub_21922B6A8();
        (*(void (**)(void *, void))(*(void *)(v24 - 8) + 104))(v21, *MEMORY[0x263F8DCB0]);
        swift_willThrow();
        sub_2191E4B04(v14, v15);
        goto LABEL_6;
      }
      unint64_t v22 = v19;
      uint64_t v24 = v18;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v22 = 0xF000000000000000;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v14;
    a2[1] = v15;
    a2[2] = v24;
    a2[3] = v22;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ASImportableLinkedItem.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C110A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = *(void *)(v1 + 24);
  v10[1] = *(void *)(v1 + 16);
  unint64_t v11 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921DF68();
  sub_21922B918();
  sub_21922ADD8();
  char v14 = 0;
  uint64_t v8 = v12;
  sub_21922B828();
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (v11 >> 60 != 15) {
      sub_21922ADD8();
    }
    char v13 = 1;
    sub_21922B808();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t ASImportableLinkedItem.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_2191E4E14(*v0, v2);
  sub_21922AE18();
  sub_2191E4AAC(v1, v2);
  if (v4 >> 60 == 15) {
    return sub_21922B8D8();
  }
  sub_21922B8D8();
  sub_2191E4E14(v3, v4);
  sub_21922AE18();

  return sub_2191E4B04(v3, v4);
}

uint64_t ASImportableLinkedItem.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_21922B8B8();
  sub_21922AE18();
  sub_21922B8D8();
  if (v2 >> 60 != 15)
  {
    sub_2191E4E14(v1, v2);
    sub_21922AE18();
    sub_2191E4B04(v1, v2);
  }
  return sub_21922B8F8();
}

uint64_t sub_2192113F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableLinkedItem.init(from:)(a1, a2);
}

uint64_t sub_219211408(void *a1)
{
  return ASImportableLinkedItem.encode(to:)(a1);
}

uint64_t sub_219211420()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_21922B8B8();
  sub_21922AE18();
  sub_21922B8D8();
  if (v2 >> 60 != 15)
  {
    sub_2191E4E14(v1, v2);
    sub_21922AE18();
    sub_2191E4B04(v1, v2);
  }
  return sub_21922B8F8();
}

uint64_t sub_2192114CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_21922AE18();
  if (v2 >> 60 == 15) {
    return sub_21922B8D8();
  }
  sub_21922B8D8();
  sub_2191E4E14(v1, v2);
  sub_21922AE18();

  return sub_2191E4B04(v1, v2);
}

uint64_t sub_219211568()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_21922B8B8();
  sub_21922AE18();
  sub_21922B8D8();
  if (v2 >> 60 != 15)
  {
    sub_2191E4E14(v1, v2);
    sub_21922AE18();
    sub_2191E4B04(v1, v2);
  }
  return sub_21922B8F8();
}

AuthenticationServices::ASImportableItem::ItemType_optional __swiftcall ASImportableItem.ItemType.init(rawValue:)(Swift::String rawValue)
{
  return (AuthenticationServices::ASImportableItem::ItemType_optional)sub_219217B4C(v1);
}

uint64_t ASImportableItem.ItemType.rawValue.getter()
{
  uint64_t v1 = 0x746E656D75636F64;
  if (*v0 != 1) {
    uint64_t v1 = 0x797469746E656469;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E69676F6CLL;
  }
}

uint64_t sub_219211678(char *a1, unsigned __int8 *a2)
{
  return sub_219207B54(*a1, *a2);
}

AuthenticationServices::ASImportableItem::ItemType_optional sub_219211684(Swift::String *a1)
{
  return ASImportableItem.ItemType.init(rawValue:)(*a1);
}

void sub_219211690(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 0x746E656D75636F64;
  if (v2 != 1) {
    uint64_t v4 = 0x797469746E656469;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E69676F6CLL;
  }
  if (!v5) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_2192116EC()
{
  return sub_21922B4C8();
}

uint64_t sub_21921174C()
{
  return sub_21922B4B8();
}

uint64_t sub_21921179C()
{
  return sub_21922B8F8();
}

uint64_t sub_21921183C()
{
  return sub_21922B8F8();
}

uint64_t sub_21921193C()
{
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2192119C8()
{
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219211AB4()
{
  return sub_21922B8F8();
}

uint64_t sub_219211B50()
{
  return sub_21922B8F8();
}

uint64_t ASImportableItem.id.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASImportableItem.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASImportableItem.id.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableItem.created.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_219211D04(type metadata accessor for ASImportableItem, MEMORY[0x263F07490], a1);
}

uint64_t sub_219211D04@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t ASImportableItem.created.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ASImportableItem(0) + 20);
  uint64_t v4 = sub_21922AE58();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ASImportableItem.created.modify())(void)
{
  return nullsub_1;
}

uint64_t ASImportableItem.lastModified.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ASImportableItem(0) + 24);
  uint64_t v4 = sub_21922AE58();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ASImportableItem.lastModified.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ASImportableItem(0) + 24);
  uint64_t v4 = sub_21922AE58();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ASImportableItem.lastModified.modify())(void)
{
  return nullsub_1;
}

uint64_t ASImportableItem.type.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ASImportableItem(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ASImportableItem.type.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ASImportableItem(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*ASImportableItem.type.modify())(void)
{
  return nullsub_1;
}

uint64_t ASImportableItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ASImportableItem(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableItem.title.setter(uint64_t a1, uint64_t a2)
{
  BOOL v5 = (void *)(v2 + *(int *)(type metadata accessor for ASImportableItem(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ASImportableItem.title.modify())(void)
{
  return nullsub_1;
}

uint64_t ASImportableItem.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ASImportableItem(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableItem.subtitle.setter(uint64_t a1, uint64_t a2)
{
  BOOL v5 = (void *)(v2 + *(int *)(type metadata accessor for ASImportableItem(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ASImportableItem.subtitle.modify())(void)
{
  return nullsub_1;
}

uint64_t ASImportableItem.credentials.getter()
{
  type metadata accessor for ASImportableItem(0);

  return swift_bridgeObjectRetain();
}

uint64_t ASImportableItem.credentials.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ASImportableItem(0) + 40);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ASImportableItem.credentials.modify())(void)
{
  return nullsub_1;
}

uint64_t ASImportableItem.tags.getter()
{
  type metadata accessor for ASImportableItem(0);

  return swift_bridgeObjectRetain();
}

uint64_t ASImportableItem.tags.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ASImportableItem(0) + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ASImportableItem.tags.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_219212350()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 2:
      uint64_t result = 0x6465696669646F6DLL;
      break;
    case 3:
      uint64_t result = 1701869940;
      break;
    case 4:
      uint64_t result = 0x656C746974;
      break;
    case 5:
      uint64_t result = 0x656C746974627573;
      break;
    case 6:
      uint64_t result = 0x69746E6564657263;
      break;
    case 7:
      uint64_t result = 1936154996;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219212438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219223C10(a1, a2);
  *a3 = result;
  return result;
}

void sub_219212460(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_21921246C(uint64_t a1)
{
  unint64_t v2 = sub_21921E0BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2192124A8(uint64_t a1)
{
  unint64_t v2 = sub_21921E0BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v62 = a2;
  uint64_t v3 = sub_21922AE58();
  uint64_t v63 = *(void **)(v3 - 8);
  uint64_t v64 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v51 - v11;
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v51 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C110A8);
  uint64_t v65 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_21921E0BC();
  unint64_t v19 = v66;
  sub_21922B908();
  if (!v19)
  {
    uint64_t v60 = v9;
    uint64_t v61 = v6;
    uint64_t v20 = v12;
    uint64_t v66 = v14;
    uint64_t v21 = v63;
    uint64_t v22 = v64;
    LOBYTE(v68) = 0;
    sub_21922B7D8();
    uint64_t v23 = sub_21922ADC8();
    if (v24 >> 60 == 15)
    {
      uint64_t v25 = sub_21922B6B8();
      swift_allocError();
      char v27 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0);
      void *v27 = MEMORY[0x263F06F78];
      sub_21922B7A8();
      sub_21922B6A8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v15);
    }
    else
    {
      unint64_t v29 = v24;
      uint64_t v59 = v23;
      LOBYTE(v68) = 1;
      sub_21921A9D0(&qword_267C110B8, MEMORY[0x263F07490]);
      sub_21922B7E8();
      unint64_t v58 = v29;
      LOBYTE(v68) = 2;
      sub_21922B7E8();
      char v70 = 3;
      sub_21921E110();
      sub_21922B7E8();
      int v30 = v68;
      LOBYTE(v68) = 4;
      uint64_t v31 = sub_21922B7D8();
      uint64_t v57 = v32;
      uint64_t v56 = v31;
      int v69 = v30;
      LOBYTE(v68) = 5;
      uint64_t v33 = sub_21922B7B8();
      uint64_t v55 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C110C8);
      char v70 = 6;
      sub_21921E20C(&qword_267C110D0, &qword_267C110C8, (void (*)(void))sub_21921E164);
      sub_21922B7E8();
      uint64_t v54 = v68;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EA8);
      char v70 = 7;
      sub_21921E2CC(&qword_267C110E0);
      sub_21922B7C8();
      uint64_t v52 = v15;
      uint64_t v53 = v68;
      unint64_t v51 = v20;
      uint64_t v35 = v66;
      uint64_t v36 = v22;
      uint64_t v37 = (void (*)(char *, char *, uint64_t))v21[2];
      v37(v60, v66, v22);
      uint64_t v38 = v51;
      v37(v61, v51, v36);
      uint64_t v39 = MEMORY[0x263F8EE78];
      if (v53) {
        uint64_t v39 = v53;
      }
      uint64_t v53 = v39;
      uint64_t v40 = (void (*)(char *, uint64_t))v21[1];
      v40(v38, v36);
      v40(v35, v36);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v52);
      uint64_t v41 = (int *)type metadata accessor for ASImportableItem(0);
      unint64_t v42 = v62;
      uint64_t v43 = (uint64_t *)((char *)v62 + v41[9]);
      int v44 = v60;
      unint64_t v45 = v58;
      uint64_t *v62 = v59;
      v42[1] = v45;
      uint64_t v46 = (void (*)(char *, char *, uint64_t))v21[4];
      v46((char *)v42 + v41[5], v44, v36);
      v46((char *)v42 + v41[6], v61, v36);
      *((unsigned char *)v42 + v41[7]) = v69;
      char v47 = (uint64_t *)((char *)v42 + v41[8]);
      uint64_t v48 = v57;
      *char v47 = v56;
      v47[1] = v48;
      uint64_t v50 = v54;
      uint64_t v49 = v55;
      *uint64_t v43 = v33;
      v43[1] = v49;
      *(uint64_t *)((char *)v42 + v41[10]) = v50;
      *(uint64_t *)((char *)v42 + v41[11]) = v53;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
}

uint64_t ASImportableItem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C110E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921E0BC();
  sub_21922B918();
  sub_21922ADD8();
  LOBYTE(v12) = 0;
  sub_21922B828();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = (int *)type metadata accessor for ASImportableItem(0);
    LOBYTE(v12) = 1;
    sub_21922AE58();
    sub_21921A9D0(&qword_267C110F0, MEMORY[0x263F07490]);
    sub_21922B838();
    LOBYTE(v12) = 2;
    sub_21922B838();
    LOBYTE(v12) = *(unsigned char *)(v3 + v10[7]);
    char v13 = 3;
    sub_21921E1B8();
    sub_21922B838();
    LOBYTE(v12) = 4;
    sub_21922B828();
    LOBYTE(v12) = 5;
    sub_21922B808();
    uint64_t v12 = *(void *)(v3 + v10[10]);
    char v13 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C110C8);
    sub_21921E20C(&qword_267C11100, &qword_267C110C8, (void (*)(void))sub_21921E278);
    sub_21922B838();
    if (*(void *)(*(void *)(v3 + v10[11]) + 16))
    {
      uint64_t v12 = *(void *)(v3 + v10[11]);
      char v13 = 7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EA8);
      sub_21921E2CC(&qword_267C11110);
      sub_21922B838();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t ASImportableItem.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  unint64_t v5 = v2[1];
  sub_2191E4E14(v4, v5);
  sub_21922AE18();
  sub_2191E4AAC(v4, v5);
  uint64_t v6 = (int *)type metadata accessor for ASImportableItem(0);
  sub_21922AE58();
  sub_21921A9D0(&qword_267C11118, MEMORY[0x263F07490]);
  sub_21922B438();
  sub_21922B438();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  if (*(uint64_t *)((char *)v2 + v6[9] + 8))
  {
    sub_21922B8D8();
    swift_bridgeObjectRetain();
    sub_21922B488();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21922B8D8();
  }
  uint64_t v7 = *(uint64_t *)((char *)v2 + v6[10]);
  swift_bridgeObjectRetain();
  sub_21921B8C0(a1, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(uint64_t *)((char *)v2 + v6[11]);
  uint64_t result = sub_21922B8C8();
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = v8 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      v11 += 16;
      --v10;
    }
    while (v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ASImportableItem.hashValue.getter()
{
  sub_21922B8B8();
  ASImportableItem.hash(into:)((uint64_t)v1);
  return sub_21922B8F8();
}

uint64_t sub_21921334C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableItem.init(from:)(a1, a2);
}

uint64_t sub_219213364(void *a1)
{
  return ASImportableItem.encode(to:)(a1);
}

uint64_t sub_21921337C()
{
  sub_21922B8B8();
  ASImportableItem.hash(into:)((uint64_t)v1);
  return sub_21922B8F8();
}

uint64_t sub_2192133C0()
{
  sub_21922B8B8();
  ASImportableItem.hash(into:)((uint64_t)v1);
  return sub_21922B8F8();
}

uint64_t ASImportableItem.effectiveTitle.getter()
{
  uint64_t v1 = sub_21922AF08();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11120);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ASImportableItem(0);
  uint64_t v9 = (uint64_t *)(v0 + *(int *)(v8 + 32));
  uint64_t v11 = *v9;
  unint64_t v10 = v9[1];
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v12 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    swift_bridgeObjectRetain();
    return v11;
  }
  uint64_t v13 = *(void *)(v0 + *(int *)(v8 + 40));
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    goto LABEL_28;
  }
  uint64_t v34 = v7;
  uint64_t v15 = v13 + 32;
  uint64_t v31 = v2;
  uint64_t v32 = v13;
  uint64_t v36 = (void (**)(char *, uint64_t))(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = v14 - 1;
  uint64_t v35 = v1;
  while (2)
  {
    sub_2191F1818(v15, (uint64_t)v38);
    sub_2191F1818((uint64_t)v38, (uint64_t)v39);
    switch(sub_21921E330((uint64_t)v39))
    {
      case 1u:
        uint64_t v21 = nullsub_1(v39);
        if (v16) {
          goto LABEL_20;
        }
        uint64_t v11 = *(void *)(v21 + 16);
        uint64_t v16 = *(void *)(v21 + 24);
        goto LABEL_15;
      case 2u:
        uint64_t v22 = nullsub_1(v39);
        if (v16) {
          goto LABEL_20;
        }
        uint64_t v11 = *(void *)(v22 + 24);
        uint64_t v16 = *(void *)(v22 + 32);
LABEL_15:
        swift_bridgeObjectRetain();
        if (!v17) {
          goto LABEL_26;
        }
        goto LABEL_21;
      case 3u:
        nullsub_1(v39);
        sub_2191F1818((uint64_t)v38, (uint64_t)v37);
        nullsub_1(v37);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      case 4u:
        nullsub_1(v39);
        sub_2191F1818((uint64_t)v38, (uint64_t)v37);
        nullsub_1(v37);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v1 = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_19:
        sub_21922AEF8();
        uint64_t v11 = sub_21922AEE8();
        uint64_t v16 = v23;
        sub_21921E548((uint64_t)v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
        (*v36)(v4, v1);
        goto LABEL_20;
      default:
        if (!*(void *)(*(void *)nullsub_1(v39) + 16))
        {
LABEL_20:
          if (!v17) {
            goto LABEL_26;
          }
LABEL_21:
          --v17;
          v15 += 128;
          continue;
        }
        sub_21921E548((uint64_t)v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_21921E548((uint64_t)v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        swift_bridgeObjectRetain();
        uint64_t v18 = (uint64_t)v34;
        sub_21922ADA8();
        swift_bridgeObjectRelease();
        uint64_t v19 = sub_21922ADB8();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
        {
          sub_21921E548((uint64_t)v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
          sub_21921E548((uint64_t)v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
          sub_21921E7C4(v18);
        }
        else
        {
          uint64_t v33 = sub_21922AD98();
          uint64_t v25 = v24;
          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
          if (v25)
          {
            swift_bridgeObjectRelease();
            char v26 = (void *)sub_21922B458();
            swift_bridgeObjectRelease();
            id v27 = objc_msgSend(v26, sel_safari_highLevelDomainForPasswordManager);

            uint64_t v11 = sub_21922B468();
            uint64_t v16 = v28;
          }
          sub_21921E548((uint64_t)v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
          sub_21921E548((uint64_t)v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
        }
        uint64_t v1 = v35;
        if (v17) {
          goto LABEL_21;
        }
LABEL_26:
        swift_bridgeObjectRelease();
        if (!v16)
        {
          uint64_t v2 = v31;
LABEL_28:
          sub_21922AEF8();
          uint64_t v11 = sub_21922AEE8();
          (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        }
        return v11;
    }
  }
}

AuthenticationServices::ASImportableEditableField::FieldType_optional __swiftcall ASImportableEditableField.FieldType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_21922B798();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t ASImportableEditableField.FieldType.rawValue.getter()
{
  unint64_t result = 0x676E69727473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6C69616D65;
      break;
    case 3:
      unint64_t result = 0x7265626D756ELL;
      break;
    case 4:
      unint64_t result = 0x6E61656C6F6F62;
      break;
    case 5:
      unint64_t result = 1702125924;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219213A68(unsigned __int8 *a1, char *a2)
{
  return sub_2192076B0(*a1, *a2);
}

AuthenticationServices::ASImportableEditableField::FieldType_optional sub_219213A74(Swift::String *a1)
{
  return ASImportableEditableField.FieldType.init(rawValue:)(*a1);
}

void sub_219213A80(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  unint64_t v3 = 0x676E69727473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x800000021923B610;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C69616D65;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x7265626D756ELL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6E61656C6F6F62;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 1702125924;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_219213B48()
{
  return sub_21922B4C8();
}

uint64_t sub_219213BA8()
{
  return sub_21922B4B8();
}

uint64_t sub_219213BF8()
{
  return sub_21921183C();
}

uint64_t sub_219213C00()
{
  return sub_2192119C8();
}

uint64_t sub_219213C08()
{
  return sub_219211B50();
}

uint64_t ASImportableEditableField.id.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASImportableEditableField.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASImportableEditableField.id.modify())()
{
  return nullsub_1;
}

void ASImportableEditableField.fieldType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *ASImportableEditableField.fieldType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ASImportableEditableField.fieldType.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableEditableField.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableEditableField.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ASImportableEditableField.value.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableEditableField.label.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableEditableField.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ASImportableEditableField.label.modify())()
{
  return nullsub_1;
}

uint64_t sub_219213DE4()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x707954646C656966;
      break;
    case 2:
      uint64_t result = 0x65756C6176;
      break;
    case 3:
      uint64_t result = 0x6C6562616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219213E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219223F4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_219213E8C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_219213E98(uint64_t a1)
{
  unint64_t v2 = sub_21921E824();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219213ED4(uint64_t a1)
{
  unint64_t v2 = sub_21921E824();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableEditableField.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11128);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921E824();
  sub_21922B908();
  if (!v2)
  {
    char v31 = 0;
    sub_21922B7D8();
    uint64_t v9 = sub_21922ADC8();
    if (v10 >> 60 == 15)
    {
      uint64_t v11 = sub_21922B6B8();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0);
      void *v13 = MEMORY[0x263F06F78];
      sub_21922B7A8();
      sub_21922B6A8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      uint64_t v15 = v9;
      unint64_t v16 = v10;
      char v29 = 1;
      sub_21921E878();
      sub_21922B7E8();
      int v26 = v30;
      char v28 = 2;
      uint64_t v24 = sub_21922B7D8();
      uint64_t v25 = v17;
      char v27 = 3;
      uint64_t v18 = sub_21922B7B8();
      uint64_t v19 = v8;
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
      *(void *)a2 = v15;
      *(void *)(a2 + 8) = v16;
      *(unsigned char *)(a2 + 16) = v26;
      uint64_t v22 = v25;
      *(void *)(a2 + 24) = v24;
      *(void *)(a2 + 32) = v22;
      *(void *)(a2 + 40) = v18;
      *(void *)(a2 + 48) = v21;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ASImportableEditableField.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11140);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  v11[2] = *(void *)(v1 + 32);
  v11[3] = v7;
  uint64_t v8 = *(void *)(v1 + 48);
  v11[0] = *(void *)(v1 + 40);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921E824();
  sub_21922B918();
  sub_21922ADD8();
  char v18 = 0;
  uint64_t v9 = v13;
  sub_21922B828();
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v17 = v12;
    char v16 = 1;
    sub_21921E8CC();
    sub_21922B838();
    char v15 = 2;
    sub_21922B828();
    char v14 = 3;
    sub_21922B808();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t ASImportableEditableField.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[6];
  sub_2191E4E14(*v0, v2);
  sub_21922AE18();
  sub_2191E4AAC(v1, v2);
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_21922B8D8();
  }
  sub_21922B8D8();
  swift_bridgeObjectRetain();
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

uint64_t ASImportableEditableField.hashValue.getter()
{
  return sub_21922B8F8();
}

uint64_t sub_2192146C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASImportableEditableField.init(from:)(a1, a2);
}

uint64_t sub_2192146DC(void *a1)
{
  return ASImportableEditableField.encode(to:)(a1);
}

uint64_t sub_2192146F4()
{
  return sub_21922B8F8();
}

uint64_t sub_21921475C()
{
  return sub_21922B8F8();
}

uint64_t sub_2192147C0(unsigned __int8 *a1, char *a2)
{
  return sub_219207990(*a1, *a2);
}

uint64_t sub_2192147CC()
{
  return sub_21922B8F8();
}

uint64_t sub_2192148C0()
{
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21921499C()
{
  return sub_21922B8F8();
}

uint64_t sub_219214A8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2192240EC();
  *a1 = result;
  return result;
}

void sub_219214ABC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006874;
  uint64_t v3 = 0x75612D6369736162;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x79656B73736170;
      goto LABEL_3;
    case 2:
      *a1 = 1886678900;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 1702129518;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x632D746964657263;
      a1[1] = 0xEB00000000647261;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_219214B74()
{
  return sub_21922B4C8();
}

uint64_t sub_219214BD4()
{
  return sub_21922B4B8();
}

uint64_t sub_219214C24()
{
  return 1;
}

uint64_t sub_219214C30()
{
  return sub_21922B8C8();
}

uint64_t sub_219214C5C()
{
  return 1701869940;
}

uint64_t sub_219214C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_21922B868();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_219214CF4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_219214D00(uint64_t a1)
{
  unint64_t v2 = sub_21921EC14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219214D3C(uint64_t a1)
{
  unint64_t v2 = sub_21921EC14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableCredential.BasicAuthentication.urls.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ASImportableCredential.BasicAuthentication.urls.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ASImportableCredential.BasicAuthentication.urls.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.BasicAuthentication.username.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  unint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2191F19B0(v2, v3, v4, v5, v6);
}

__n128 ASImportableCredential.BasicAuthentication.username.setter(long long *a1)
{
  long long v5 = a1[1];
  long long v6 = *a1;
  __n128 v4 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  sub_2191F1A04(v1[1], v1[2], v1[3], v1[4], v1[5]);
  *(_OWORD *)(v1 + 1) = v6;
  *(_OWORD *)(v1 + 3) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 5) = v4;
  v1[7] = v2;
  return result;
}

uint64_t (*ASImportableCredential.BasicAuthentication.username.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.BasicAuthentication.password.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[8];
  unint64_t v3 = v1[9];
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[11];
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[13];
  uint64_t v8 = v1[14];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_2191F19B0(v2, v3, v4, v5, v6);
}

__n128 ASImportableCredential.BasicAuthentication.password.setter(long long *a1)
{
  long long v5 = a1[1];
  long long v6 = *a1;
  __n128 v4 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  sub_2191F1A04(v1[8], v1[9], v1[10], v1[11], v1[12]);
  *((_OWORD *)v1 + 4) = v6;
  *((_OWORD *)v1 + 5) = v5;
  __n128 result = v4;
  *((__n128 *)v1 + 6) = v4;
  v1[14] = v2;
  return result;
}

uint64_t (*ASImportableCredential.BasicAuthentication.password.modify())()
{
  return nullsub_1;
}

uint64_t sub_219214F28()
{
  uint64_t v1 = 0x656D616E72657375;
  if (*v0 != 1) {
    uint64_t v1 = 0x64726F7773736170;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1936487029;
  }
}

uint64_t sub_219214F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219224138(a1, a2);
  *a3 = result;
  return result;
}

void sub_219214FA4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_219214FB0(uint64_t a1)
{
  unint64_t v2 = sub_21921E920();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219214FEC(uint64_t a1)
{
  unint64_t v2 = sub_21921E920();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableCredential.BasicAuthentication.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[12];
  sub_21922B8C8();
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  if (v2)
  {
    sub_21922B8D8();
    ASImportableEditableField.hash(into:)();
    if (v3)
    {
LABEL_7:
      sub_21922B8D8();
      return ASImportableEditableField.hash(into:)();
    }
  }
  else
  {
    sub_21922B8D8();
    if (v3) {
      goto LABEL_7;
    }
  }
  return sub_21922B8D8();
}

uint64_t ASImportableCredential.BasicAuthentication.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11150);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v32 = v1[2];
  uint64_t v33 = v8;
  uint64_t v10 = v1[3];
  uint64_t v30 = v1[4];
  uint64_t v31 = v10;
  uint64_t v11 = v1[5];
  uint64_t v28 = v1[6];
  uint64_t v29 = v11;
  uint64_t v12 = v1[7];
  uint64_t v26 = v1[8];
  uint64_t v27 = v12;
  uint64_t v13 = v1[9];
  uint64_t v24 = v1[10];
  uint64_t v25 = v13;
  uint64_t v14 = v1[11];
  uint64_t v22 = v1[12];
  uint64_t v23 = v14;
  uint64_t v15 = v1[13];
  uint64_t v20 = v1[14];
  uint64_t v21 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921E920();
  sub_21922B918();
  uint64_t v34 = v9;
  char v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EA8);
  sub_21921E2CC(&qword_267C11110);
  sub_21922B838();
  if (!v2)
  {
    uint64_t v17 = v24;
    uint64_t v16 = v25;
    uint64_t v34 = v33;
    uint64_t v35 = v32;
    uint64_t v36 = v31;
    uint64_t v37 = v30;
    uint64_t v38 = v29;
    uint64_t v39 = v28;
    uint64_t v18 = v26;
    uint64_t v40 = v27;
    char v41 = 1;
    sub_21921E974();
    sub_21922B818();
    uint64_t v34 = v18;
    uint64_t v35 = v16;
    uint64_t v36 = v17;
    uint64_t v37 = v23;
    uint64_t v38 = v22;
    uint64_t v39 = v21;
    uint64_t v40 = v20;
    char v41 = 2;
    sub_21922B818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ASImportableCredential.BasicAuthentication.hashValue.getter()
{
  return sub_21922B8F8();
}

uint64_t ASImportableCredential.BasicAuthentication.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11168);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921E920();
  sub_21922B908();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    sub_2191F1A04(0, 0, 0, 0, 0);
    uint64_t v29 = 0;
    unint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EA8);
    char v55 = 0;
    sub_21921E2CC(&qword_267C110E0);
    sub_21922B7E8();
    uint64_t v10 = v48;
    char v55 = 1;
    sub_21921E9C8();
    swift_bridgeObjectRetain();
    sub_21922B7C8();
    uint64_t v46 = v10;
    uint64_t v39 = a2;
    uint64_t v12 = v48;
    unint64_t v11 = v49;
    uint64_t v13 = v50;
    char v55 = 2;
    uint64_t v47 = v51;
    uint64_t v44 = v53;
    uint64_t v45 = v52;
    uint64_t v43 = v54;
    sub_2191F19B0(v48, v49, v50, v51, v52);
    sub_21922B7C8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v48;
    unint64_t v15 = v49;
    uint64_t v16 = v50;
    uint64_t v17 = v51;
    uint64_t v41 = v53;
    uint64_t v42 = v52;
    uint64_t v40 = v54;
    sub_2191F19B0(v48, v49, v50, v51, v52);
    sub_2191F1A04(0, 0, 0, 0, 0);
    swift_bridgeObjectRetain();
    sub_2191F19B0(v12, v11, v13, v47, v45);
    unint64_t v36 = v15;
    uint64_t v37 = v14;
    uint64_t v35 = v16;
    uint64_t v38 = v17;
    sub_2191F19B0(v14, v15, v16, v17, v42);
    sub_2191F1A04(v14, v15, v16, v17, v42);
    uint64_t v18 = v47;
    uint64_t v19 = v44;
    uint64_t v20 = v45;
    sub_2191F1A04(v12, v11, v13, v47, v45);
    uint64_t v21 = v46;
    swift_bridgeObjectRelease();
    uint64_t v23 = v38;
    uint64_t v22 = v39;
    uint64_t *v39 = v21;
    v22[1] = v12;
    v22[2] = v11;
    v22[3] = v13;
    v22[4] = v18;
    v22[5] = v20;
    v22[6] = v19;
    unint64_t v25 = v36;
    uint64_t v24 = v37;
    v22[7] = v43;
    v22[8] = v24;
    uint64_t v26 = v35;
    v22[9] = v25;
    v22[10] = v26;
    uint64_t v27 = v42;
    v22[11] = v23;
    v22[12] = v27;
    uint64_t v28 = v40;
    v22[13] = v41;
    v22[14] = v28;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_2191F1A04(v12, v11, v13, v47, v45);
    uint64_t v29 = v24;
    unint64_t v30 = v25;
    uint64_t v31 = v26;
    uint64_t v32 = v38;
    uint64_t v33 = v42;
  }
  return sub_2191F1A04(v29, v30, v31, v32, v33);
}

uint64_t sub_219215990@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableCredential.BasicAuthentication.init(from:)(a1, a2);
}

uint64_t sub_2192159A8(void *a1)
{
  return ASImportableCredential.BasicAuthentication.encode(to:)(a1);
}

uint64_t sub_2192159C0()
{
  return sub_21922B8F8();
}

uint64_t sub_219215A48()
{
  return sub_21922B8F8();
}

uint64_t ASImportableCredential.Passkey.credentialID.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2191E4E14(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASImportableCredential.Passkey.credentialID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASImportableCredential.Passkey.credentialID.modify())()
{
  return nullsub_1;
}

uint64_t (*ASImportableCredential.Passkey.relyingPartyIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.Passkey.userName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.Passkey.userName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ASImportableCredential.Passkey.userName.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.Passkey.userDisplayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.Passkey.userDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ASImportableCredential.Passkey.userDisplayName.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.Passkey.userHandle.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_2191E4E14(v1, *(void *)(v0 + 72));
  return v1;
}

uint64_t ASImportableCredential.Passkey.userHandle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)(v2 + 64), *(void *)(v2 + 72));
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ASImportableCredential.Passkey.userHandle.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.Passkey.key.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_2191E4E14(v1, *(void *)(v0 + 88));
  return v1;
}

uint64_t ASImportableCredential.Passkey.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2191E4AAC(*(void *)(v2 + 80), *(void *)(v2 + 88));
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*ASImportableCredential.Passkey.key.modify())()
{
  return nullsub_1;
}

uint64_t sub_219215DA0()
{
  uint64_t result = 0x69746E6564657263;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1145663602;
      break;
    case 2:
      uint64_t result = 0x656D614E72657375;
      break;
    case 3:
      uint64_t result = 0x7073694472657375;
      break;
    case 4:
      uint64_t result = 0x646E614872657375;
      break;
    case 5:
      uint64_t result = 7955819;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219215E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219224280(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_219215E98(uint64_t a1)
{
  unint64_t v2 = sub_21921EA1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219215ED4(uint64_t a1)
{
  unint64_t v2 = sub_21921EA1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableCredential.Passkey.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11178);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EA1C();
  sub_21922B908();
  if (!v2)
  {
    char v50 = 0;
    sub_21922B7D8();
    uint64_t v9 = sub_21922ADC8();
    if (v10 >> 60 == 15)
    {
      uint64_t v11 = sub_21922B6B8();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0);
      void *v13 = MEMORY[0x263F06F78];
      sub_21922B7A8();
      sub_21922B6A8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
    }
    else
    {
      uint64_t v15 = v9;
      unint64_t v16 = v10;
      char v49 = 1;
      uint64_t v43 = sub_21922B7D8();
      uint64_t v44 = v17;
      char v48 = 2;
      uint64_t v41 = sub_21922B7D8();
      uint64_t v42 = v18;
      char v47 = 3;
      uint64_t v39 = sub_21922B7D8();
      uint64_t v40 = v19;
      char v46 = 4;
      sub_21922B7D8();
      uint64_t v20 = sub_21922ADC8();
      if (v21 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = sub_21922B6B8();
        swift_allocError();
        uint64_t v23 = v22;
        uint64_t v43 = (uint64_t)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0) + 48);
        *uint64_t v23 = MEMORY[0x263F06F78];
        sub_21922B7A8();
        sub_21922B6A8();
        (*(void (**)(void *, void))(*(void *)(v44 - 8) + 104))(v23, *MEMORY[0x263F8DCB0]);
        swift_willThrow();
        uint64_t v24 = v15;
        unint64_t v25 = v16;
      }
      else
      {
        uint64_t v37 = v20;
        unint64_t v38 = v21;
        char v45 = 5;
        sub_21922B7D8();
        uint64_t v26 = sub_21922ADC8();
        if (v27 >> 60 != 15)
        {
          uint64_t v30 = v26;
          uint64_t v31 = v8;
          uint64_t v32 = v27;
          (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v5);
          *a2 = v15;
          a2[1] = v16;
          uint64_t v33 = v44;
          a2[2] = v43;
          a2[3] = v33;
          uint64_t v34 = v42;
          a2[4] = v41;
          a2[5] = v34;
          uint64_t v35 = v40;
          a2[6] = v39;
          a2[7] = v35;
          unint64_t v36 = v38;
          a2[8] = v37;
          a2[9] = v36;
          a2[10] = v30;
          a2[11] = v32;
          return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = sub_21922B6B8();
        swift_allocError();
        uint64_t v29 = v28;
        uint64_t v43 = (uint64_t)v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C10FF0) + 48);
        *uint64_t v29 = MEMORY[0x263F06F78];
        sub_21922B7A8();
        sub_21922B6A8();
        (*(void (**)(void *, void))(*(void *)(v44 - 8) + 104))(v29, *MEMORY[0x263F8DCB0]);
        swift_willThrow();
        sub_2191E4B04(v15, v16);
        uint64_t v24 = v37;
        unint64_t v25 = v38;
      }
      sub_2191E4B04(v24, v25);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ASImportableCredential.Passkey.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11188);
  uint64_t v14 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1[2];
  v13[7] = v1[3];
  v13[8] = v6;
  uint64_t v7 = v1[4];
  v13[5] = v1[5];
  v13[6] = v7;
  uint64_t v8 = v1[7];
  v13[3] = v1[6];
  v13[4] = v8;
  sub_21922ADD8();
  v13[2] = sub_21922ADD8();
  v13[9] = v9;
  v13[1] = sub_21922ADD8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EA1C();
  sub_21922B918();
  char v21 = 0;
  uint64_t v10 = v15;
  sub_21922B828();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v14;
    swift_bridgeObjectRelease();
    char v20 = 1;
    sub_21922B828();
    char v19 = 2;
    sub_21922B828();
    char v18 = 3;
    sub_21922B828();
    char v17 = 4;
    sub_21922B828();
    swift_bridgeObjectRelease();
    char v16 = 5;
    sub_21922B828();
    (*(void (**)(char *, void))(v11 + 8))(v5, 0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t ASImportableCredential.Passkey.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[8];
  unint64_t v4 = v0[9];
  uint64_t v6 = v0[10];
  unint64_t v5 = v0[11];
  sub_2191E4E14(v1, v2);
  sub_21922AE18();
  sub_2191E4AAC(v1, v2);
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  sub_2191E4E14(v3, v4);
  sub_21922AE18();
  sub_2191E4AAC(v3, v4);
  sub_2191E4E14(v6, v5);
  sub_21922AE18();

  return sub_2191E4AAC(v6, v5);
}

uint64_t ASImportableCredential.Passkey.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[8];
  unint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  unint64_t v6 = v0[11];
  sub_21922B8B8();
  sub_2191E4E14(v1, v2);
  sub_21922AE18();
  sub_2191E4AAC(v1, v2);
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  sub_2191E4E14(v3, v4);
  sub_21922AE18();
  sub_2191E4AAC(v3, v4);
  sub_2191E4E14(v5, v6);
  sub_21922AE18();
  sub_2191E4AAC(v5, v6);
  return sub_21922B8F8();
}

uint64_t sub_219216AD8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableCredential.Passkey.init(from:)(a1, a2);
}

uint64_t sub_219216AF0(void *a1)
{
  return ASImportableCredential.Passkey.encode(to:)(a1);
}

uint64_t sub_219216B10()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[8];
  unint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  unint64_t v6 = v0[11];
  sub_21922B8B8();
  sub_2191E4E14(v1, v2);
  sub_21922AE18();
  sub_2191E4AAC(v1, v2);
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  sub_2191E4E14(v3, v4);
  sub_21922AE18();
  sub_2191E4AAC(v3, v4);
  sub_2191E4E14(v5, v6);
  sub_21922AE18();
  sub_2191E4AAC(v5, v6);
  return sub_21922B8F8();
}

uint64_t ASImportableCredential.CreditCard.number.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.CreditCard.number.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ASImportableCredential.CreditCard.number.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.CreditCard.fullName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.CreditCard.fullName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASImportableCredential.CreditCard.fullName.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.CreditCard.cardType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.CreditCard.cardType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ASImportableCredential.CreditCard.cardType.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.CreditCard.verificationNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.CreditCard.verificationNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ASImportableCredential.CreditCard.verificationNumber.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.CreditCard.expiryDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.CreditCard.expiryDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ASImportableCredential.CreditCard.expiryDate.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.CreditCard.validFrom.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.CreditCard.validFrom.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*ASImportableCredential.CreditCard.validFrom.modify())()
{
  return nullsub_1;
}

void __swiftcall ASImportableCredential.CreditCard.init(number:fullName:cardType:verificationNumber:expiryDate:validFrom:)(AuthenticationServices::ASImportableCredential::CreditCard *__return_ptr retstr, Swift::String number, Swift::String fullName, Swift::String_optional cardType, Swift::String_optional verificationNumber, Swift::String_optional expiryDate, Swift::String_optional validFrom)
{
  retstr->number = number;
  retstr->fullName = fullName;
  retstr->cardType = cardType;
  retstr->verificationNumber = verificationNumber;
  retstr->expiryDate = expiryDate;
  retstr->validFrom = validFrom;
}

uint64_t ASImportableCredential.CreditCard.hash(into:)()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[11];
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_21922B8D8();
    swift_bridgeObjectRetain();
    sub_21922B488();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_21922B8D8();
    if (v2)
    {
LABEL_3:
      sub_21922B8D8();
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      if (v3) {
        goto LABEL_4;
      }
LABEL_10:
      sub_21922B8D8();
      if (v4) {
        goto LABEL_5;
      }
      return sub_21922B8D8();
    }
  }
  sub_21922B8D8();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_4:
  sub_21922B8D8();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  if (!v4) {
    return sub_21922B8D8();
  }
LABEL_5:
  sub_21922B8D8();
  swift_bridgeObjectRetain();
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

unint64_t sub_219217184()
{
  unint64_t result = 0x7265626D756ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656D614E6C6C7566;
      break;
    case 2:
      unint64_t result = 0x6570795464726163;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6144797269707865;
      break;
    case 5:
      unint64_t result = 0x6F724664696C6176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219217254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21922452C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21921727C(uint64_t a1)
{
  unint64_t v2 = sub_21921EA70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2192172B8(uint64_t a1)
{
  unint64_t v2 = sub_21921EA70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableCredential.CreditCard.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11190);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v14[9] = v1[3];
  v14[10] = v7;
  uint64_t v8 = v1[4];
  v14[7] = v1[5];
  v14[8] = v8;
  uint64_t v9 = v1[6];
  void v14[5] = v1[7];
  v14[6] = v9;
  uint64_t v10 = v1[9];
  v14[3] = v1[8];
  v14[4] = v10;
  uint64_t v11 = v1[10];
  v14[1] = v1[11];
  v14[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EA70();
  sub_21922B918();
  char v20 = 0;
  uint64_t v12 = v14[11];
  sub_21922B828();
  if (!v12)
  {
    char v19 = 1;
    sub_21922B828();
    char v18 = 2;
    sub_21922B808();
    char v17 = 3;
    sub_21922B808();
    char v16 = 4;
    sub_21922B808();
    char v15 = 5;
    sub_21922B808();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASImportableCredential.CreditCard.hashValue.getter()
{
  return sub_21922B8F8();
}

uint64_t ASImportableCredential.CreditCard.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EA70();
  sub_21922B908();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v47 = 0;
    uint64_t v10 = sub_21922B7D8();
    uint64_t v12 = v11;
    uint64_t v41 = a2;
    char v46 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21922B7D8();
    uint64_t v15 = v14;
    uint64_t v39 = v13;
    uint64_t v40 = v10;
    char v45 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_21922B7B8();
    uint64_t v18 = v17;
    uint64_t v37 = v16;
    uint64_t v38 = v15;
    char v44 = 3;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_21922B7B8();
    uint64_t v21 = v20;
    uint64_t v35 = v19;
    uint64_t v36 = v12;
    char v43 = 4;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_21922B7B8();
    uint64_t v24 = v23;
    uint64_t v34 = v22;
    char v42 = 5;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_21922B7B8();
    uint64_t v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v25;
    v28(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v29 = v41;
    uint64_t v30 = v36;
    *uint64_t v41 = v40;
    v29[1] = v30;
    uint64_t v31 = v38;
    v29[2] = v39;
    v29[3] = v31;
    v29[4] = v37;
    v29[5] = v18;
    v29[6] = v35;
    v29[7] = v21;
    v29[8] = v34;
    v29[9] = v24;
    v29[10] = v33;
    v29[11] = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_219217A3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableCredential.CreditCard.init(from:)(a1, a2);
}

uint64_t sub_219217A54(void *a1)
{
  return ASImportableCredential.CreditCard.encode(to:)(a1);
}

uint64_t sub_219217A6C()
{
  return sub_21922B8F8();
}

uint64_t sub_219217AD8()
{
  return sub_21922B8F8();
}

AuthenticationServices::ASImportableCredential::TOTP::Algorithm_optional __swiftcall ASImportableCredential.TOTP.Algorithm.init(rawValue:)(Swift::String rawValue)
{
  return (AuthenticationServices::ASImportableCredential::TOTP::Algorithm_optional)sub_219217B4C(v1);
}

uint64_t sub_219217B4C@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_21922B798();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t ASImportableCredential.TOTP.Algorithm.rawValue.getter()
{
  uint64_t v1 = 0x363532616873;
  if (*v0 != 1) {
    uint64_t v1 = 0x323135616873;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 828467315;
  }
}

uint64_t sub_219217BF0(char *a1, unsigned __int8 *a2)
{
  return sub_219207894(*a1, *a2);
}

AuthenticationServices::ASImportableCredential::TOTP::Algorithm_optional sub_219217BFC(Swift::String *a1)
{
  return ASImportableCredential.TOTP.Algorithm.init(rawValue:)(*a1);
}

void sub_219217C08(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = 0x363532616873;
  if (v2 != 1) {
    uint64_t v4 = 0x323135616873;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 828467315;
  }
  if (!v5) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_219217C58()
{
  return sub_21922B4C8();
}

uint64_t sub_219217CB8()
{
  return sub_21922B4B8();
}

uint64_t sub_219217D08()
{
  return sub_21922B8F8();
}

uint64_t sub_219217D9C()
{
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219217E1C()
{
  return sub_21922B8F8();
}

uint64_t (*ASImportableCredential.TOTP.secret.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.TOTP.period.getter()
{
  return *(unsigned __int16 *)(v0 + 16);
}

uint64_t ASImportableCredential.TOTP.period.setter(uint64_t result)
{
  *(_WORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*ASImportableCredential.TOTP.period.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.TOTP.digits.getter()
{
  return *(unsigned __int16 *)(v0 + 18);
}

uint64_t ASImportableCredential.TOTP.digits.setter(uint64_t result)
{
  *(_WORD *)(v1 + 18) = result;
  return result;
}

uint64_t (*ASImportableCredential.TOTP.digits.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.TOTP.username.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.TOTP.username.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ASImportableCredential.TOTP.username.modify())()
{
  return nullsub_1;
}

void ASImportableCredential.TOTP.algorithm.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *ASImportableCredential.TOTP.algorithm.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*ASImportableCredential.TOTP.algorithm.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.TOTP.issuer.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.TOTP.issuer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ASImportableCredential.TOTP.issuer.modify())()
{
  return nullsub_1;
}

uint64_t sub_219218074()
{
  uint64_t result = 0x746572636573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646F69726570;
      break;
    case 2:
      uint64_t result = 0x737469676964;
      break;
    case 3:
      uint64_t result = 0x656D616E72657375;
      break;
    case 4:
      uint64_t result = 0x687469726F676C61;
      break;
    case 5:
      uint64_t result = 0x726575737369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219218124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2192247B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21921814C(uint64_t a1)
{
  unint64_t v2 = sub_21921EAC4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219218188(uint64_t a1)
{
  unint64_t v2 = sub_21921EAC4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableCredential.TOTP.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EAC4();
  sub_21922B908();
  if (!v2)
  {
    char v33 = 0;
    sub_21922B7D8();
    uint64_t v9 = self;
    uint64_t v10 = (void *)sub_21922B458();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel__keyDataForBase32EncodedString_, v10);

    uint64_t v12 = sub_21922AE08();
    uint64_t v14 = v13;

    char v32 = 1;
    int v26 = sub_21922B7F8();
    char v31 = 2;
    int v25 = sub_21922B7F8();
    char v30 = 3;
    uint64_t v23 = sub_21922B7D8();
    uint64_t v24 = v16;
    char v28 = 4;
    sub_21921EB18();
    sub_21922B7E8();
    HIDWORD(v22) = v29;
    char v27 = 5;
    uint64_t v17 = sub_21922B7B8();
    uint64_t v18 = v8;
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
    *(void *)a2 = v12;
    *(void *)(a2 + 8) = v14;
    *(_WORD *)(a2 + 16) = v26;
    *(_WORD *)(a2 + 18) = v25;
    uint64_t v21 = v24;
    *(void *)(a2 + 24) = v23;
    *(void *)(a2 + 32) = v21;
    *(unsigned char *)(a2 + 40) = BYTE4(v22);
    *(void *)(a2 + 48) = v17;
    *(void *)(a2 + 56) = v20;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t ASImportableCredential.TOTP.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *(unsigned __int16 *)(v1 + 16);
  int v19 = *(unsigned __int16 *)(v1 + 18);
  int v20 = v7;
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v18 = v8;
  int v16 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  v15[1] = *(void *)(v1 + 56);
  v15[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EAC4();
  sub_21922B918();
  uint64_t v10 = self;
  id v11 = (void *)sub_21922ADF8();
  id v12 = objc_msgSend(v10, sel__base32EncodedStringForKeyData_, v11);

  sub_21922B468();
  char v28 = 0;
  uint64_t v13 = v21;
  sub_21922B828();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v27 = 1;
    sub_21922B848();
    char v26 = 2;
    sub_21922B848();
    char v25 = 3;
    sub_21922B828();
    char v24 = v16;
    char v23 = 4;
    sub_21921EB6C();
    sub_21922B838();
    char v22 = 5;
    sub_21922B808();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t ASImportableCredential.TOTP.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[7];
  sub_2191E4E14(*v0, v2);
  sub_21922AE18();
  sub_2191E4AAC(v1, v2);
  sub_21922B8E8();
  sub_21922B8E8();
  swift_bridgeObjectRetain();
  sub_21922B488();
  swift_bridgeObjectRelease();
  sub_21922B488();
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_21922B8D8();
  }
  sub_21922B8D8();
  swift_bridgeObjectRetain();
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

uint64_t ASImportableCredential.TOTP.hashValue.getter()
{
  return sub_21922B8F8();
}

uint64_t sub_2192189DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASImportableCredential.TOTP.init(from:)(a1, a2);
}

uint64_t sub_2192189F4(void *a1)
{
  return ASImportableCredential.TOTP.encode(to:)(a1);
}

uint64_t sub_219218A0C()
{
  return sub_21922B8F8();
}

uint64_t sub_219218A7C()
{
  return sub_21922B8F8();
}

uint64_t ASImportableCredential.Note.content.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASImportableCredential.Note.content.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ASImportableCredential.Note.content.modify())()
{
  return nullsub_1;
}

uint64_t ASImportableCredential.Note.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21922B488();

  return swift_bridgeObjectRelease();
}

uint64_t static ASImportableCredential.Note.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_21922B868();
  }
}

uint64_t sub_219218BF8()
{
  return sub_21922B8F8();
}

uint64_t sub_219218C3C()
{
  return sub_21922B8F8();
}

uint64_t sub_219218C7C()
{
  return 0x746E65746E6F63;
}

uint64_t sub_219218C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_21922B868();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_219218D2C(uint64_t a1)
{
  unint64_t v2 = sub_21921EBC0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219218D68(uint64_t a1)
{
  unint64_t v2 = sub_21921EBC0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASImportableCredential.Note.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EBC0();
  sub_21922B918();
  sub_21922B828();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ASImportableCredential.Note.hashValue.getter()
{
  return sub_21922B8F8();
}

uint64_t ASImportableCredential.Note.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EBC0();
  sub_21922B908();
  if (!v2)
  {
    uint64_t v9 = sub_21922B7D8();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_219219098@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASImportableCredential.Note.init(from:)(a1, a2);
}

uint64_t sub_2192190B0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EBC0();
  sub_21922B918();
  sub_21922B828();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2192191E8()
{
  return sub_21922B8F8();
}

uint64_t sub_219219234()
{
  return sub_21922B488();
}

uint64_t sub_21921923C()
{
  return sub_21922B8F8();
}

uint64_t sub_219219284(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_21922B868();
  }
}

uint64_t ASImportableCredential.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111E0);
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111E8);
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  unsigned __int8 v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_21921EC14();
  sub_21922B908();
  if (v2)
  {
    uint64_t v11 = (uint64_t)v29;
  }
  else
  {
    sub_21921EC68();
    sub_21922B7E8();
    switch(v28[127])
    {
      case 1:
        uint64_t v11 = (uint64_t)v29;
        sub_21921ECBC((uint64_t)v29, (uint64_t)v27);
        ASImportableCredential.Passkey.init(from:)(v27, (uint64_t *)v25);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
        v26[0] = v25[0];
        v26[1] = v25[1];
        v26[2] = v25[2];
        v26[3] = v25[3];
        v26[4] = v25[4];
        v26[5] = v25[5];
        sub_2191F1998((uint64_t)v26);
        goto LABEL_11;
      case 2:
        uint64_t v11 = (uint64_t)v29;
        sub_21921ECBC((uint64_t)v29, (uint64_t)v27);
        ASImportableCredential.TOTP.init(from:)(v27, (uint64_t)v25);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
        v26[0] = v25[0];
        LODWORD(v26[1]) = v25[1];
        *((void *)&v26[1] + 1) = *((void *)&v25[1] + 1);
        *(void *)&v26[2] = *(void *)&v25[2];
        BYTE8(v26[2]) = BYTE8(v25[2]);
        v26[3] = v25[3];
        sub_2191F180C((uint64_t)v26);
        goto LABEL_11;
      case 3:
        uint64_t v21 = v7;
        sub_21921ECBC((uint64_t)v29, (uint64_t)v25);
        __swift_project_boxed_opaque_existential_1(v25, *((uint64_t *)&v25[1] + 1));
        sub_21921EBC0();
        sub_21922B908();
        uint64_t v13 = sub_21922B7D8();
        uint64_t v14 = v21;
        uint64_t v15 = v24;
        uint64_t v16 = v13;
        uint64_t v17 = v6;
        uint64_t v19 = v18;
        (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v4);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
        *(void *)&v26[0] = v16;
        *((void *)&v26[0] + 1) = v19;
        sub_2191F19A4((uint64_t)v26);
        sub_2191F1818((uint64_t)v26, (uint64_t)v28);
        uint64_t v20 = v23;
        uint64_t v11 = (uint64_t)v29;
        goto LABEL_12;
      case 4:
        uint64_t v11 = (uint64_t)v29;
        sub_21921ECBC((uint64_t)v29, (uint64_t)v27);
        ASImportableCredential.CreditCard.init(from:)(v27, (uint64_t *)v25);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
        v26[0] = v25[0];
        v26[1] = v25[1];
        v26[2] = v25[2];
        v26[3] = v25[3];
        v26[4] = v25[4];
        v26[5] = v25[5];
        sub_21921ED20((uint64_t)v26);
        goto LABEL_11;
      default:
        uint64_t v11 = (uint64_t)v29;
        sub_21921ECBC((uint64_t)v29, (uint64_t)v27);
        ASImportableCredential.BasicAuthentication.init(from:)(v27, (uint64_t *)v25);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
        *(void *)&v26[0] = *(void *)&v25[0];
        *(_OWORD *)((char *)v26 + 8) = *(_OWORD *)((char *)v25 + 8);
        *(_OWORD *)((char *)&v26[1] + 8) = *(_OWORD *)((char *)&v25[1] + 8);
        *(_OWORD *)((char *)&v26[2] + 8) = *(_OWORD *)((char *)&v25[2] + 8);
        *(_OWORD *)((char *)&v26[3] + 8) = *(_OWORD *)((char *)&v25[3] + 8);
        *(_OWORD *)((char *)&v26[4] + 8) = *(_OWORD *)((char *)&v25[4] + 8);
        *(_OWORD *)((char *)&v26[5] + 8) = *(_OWORD *)((char *)&v25[5] + 8);
        *(_OWORD *)((char *)&v26[6] + 8) = *(_OWORD *)((char *)&v25[6] + 8);
        sub_2191F19FC((uint64_t)v26);
LABEL_11:
        sub_2191F1818((uint64_t)v26, (uint64_t)v28);
        uint64_t v20 = v23;
LABEL_12:
        sub_2191F1818((uint64_t)v28, v20);
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0(v11);
}

uint64_t ASImportableCredential.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C111D0);
  unint64_t v90 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11200);
  unint64_t v6 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2191F1818(v1, (uint64_t)v110);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21921EC14();
  int v112 = v8;
  sub_21922B918();
  sub_2191F1818((uint64_t)v110, (uint64_t)v111);
  switch(sub_21921E330((uint64_t)v111))
  {
    case 1u:
      unint64_t v91 = v6;
      char v30 = (unint64_t *)nullsub_1(v111);
      unint64_t v31 = *v30;
      uint64_t v89 = v30[1];
      unint64_t v90 = v31;
      uint64_t v32 = v30[2];
      unint64_t v87 = v30[3];
      uint64_t v88 = v32;
      uint64_t v33 = v30[4];
      unint64_t v85 = v30[5];
      uint64_t v86 = v33;
      unint64_t v34 = v30[6];
      uint64_t v83 = v30[7];
      unint64_t v84 = v34;
      uint64_t v35 = v30[8];
      uint64_t v81 = v30[9];
      uint64_t v82 = v35;
      uint64_t v36 = v30[10];
      unint64_t v79 = v30[11];
      uint64_t v80 = v36;
      LOBYTE(v94) = 1;
      sub_2191F1818((uint64_t)v110, (uint64_t)v109);
      uint64_t v37 = (uint64_t *)nullsub_1(v109);
      uint64_t v38 = v37[8];
      unint64_t v39 = v37[9];
      uint64_t v40 = v37[10];
      unint64_t v41 = v37[11];
      sub_2191E4E14(*v37, v37[1]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2191E4E14(v38, v39);
      sub_2191E4E14(v40, v41);
      sub_21921ED2C();
      uint64_t v42 = v92;
      uint64_t v28 = v93;
      unsigned __int8 v29 = v112;
      sub_21922B838();
      if (!v42)
      {
        unint64_t v94 = v90;
        uint64_t v95 = v89;
        uint64_t v96 = v88;
        uint64_t v97 = v87;
        uint64_t v98 = v86;
        unint64_t v99 = v85;
        uint64_t v100 = v84;
        uint64_t v101 = v83;
        uint64_t v102 = v82;
        uint64_t v103 = v81;
        uint64_t v104 = v80;
        unint64_t v105 = v79;
        ASImportableCredential.Passkey.encode(to:)(a1);
      }
      goto LABEL_6;
    case 2u:
      unint64_t v43 = v6;
      uint64_t v44 = nullsub_1(v111);
      unint64_t v45 = *(void *)v44;
      uint64_t v46 = *(void *)(v44 + 8);
      __int16 v47 = *(_WORD *)(v44 + 16);
      __int16 v48 = *(_WORD *)(v44 + 18);
      unint64_t v90 = *(void *)(v44 + 24);
      unint64_t v91 = v45;
      uint64_t v89 = *(void *)(v44 + 32);
      LODWORD(v88) = *(unsigned __int8 *)(v44 + 40);
      uint64_t v49 = *(void *)(v44 + 48);
      uint64_t v86 = *(void *)(v44 + 56);
      unint64_t v87 = v49;
      LOBYTE(v94) = 2;
      sub_2191F1818((uint64_t)v110, (uint64_t)v109);
      uint64_t v50 = nullsub_1(v109);
      sub_2191E4E14(*(void *)v50, *(void *)(v50 + 8));
      sub_21921ED2C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v51 = v93;
      uint64_t v52 = v112;
      uint64_t v53 = v92;
      sub_21922B838();
      if (v53)
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v52, v51);
      }
      else
      {
        unint64_t v94 = v91;
        uint64_t v95 = v46;
        LOWORD(v96) = v47;
        WORD1(v96) = v48;
        uint64_t v97 = v90;
        uint64_t v98 = v89;
        LOBYTE(v99) = v88;
        uint64_t v100 = v87;
        uint64_t v101 = v86;
        ASImportableCredential.TOTP.encode(to:)(a1);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v112, v51);
      }
      return sub_21921E548((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
    case 3u:
      uint64_t v89 = *(void *)(nullsub_1(v111) + 8);
      LOBYTE(v109[0]) = 3;
      sub_21921ED2C();
      uint64_t v54 = v92;
      uint64_t v55 = v93;
      uint64_t v56 = v112;
      sub_21922B838();
      if (v54) {
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v56, v55);
      }
      unint64_t v91 = v6;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_21921EBC0();
      sub_21922B918();
      sub_21922B828();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v5, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v112, v93);
    case 4u:
      unint64_t v91 = v6;
      unint64_t v58 = (unint64_t *)nullsub_1(v111);
      unint64_t v59 = *v58;
      unint64_t v60 = v58[1];
      unint64_t v61 = v58[2];
      unint64_t v62 = v58[3];
      unint64_t v63 = v58[4];
      uint64_t v89 = v58[5];
      unint64_t v90 = v59;
      uint64_t v64 = v58[6];
      unint64_t v87 = v58[7];
      uint64_t v88 = v64;
      uint64_t v65 = v58[8];
      unint64_t v85 = v58[9];
      uint64_t v86 = v65;
      unint64_t v66 = v58[10];
      uint64_t v83 = v58[11];
      unint64_t v84 = v66;
      LOBYTE(v109[0]) = 4;
      sub_21921ED2C();
      uint64_t v67 = v92;
      uint64_t v68 = v93;
      int v69 = v112;
      sub_21922B838();
      if (v67) {
        return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v69, v68);
      }
      v109[0] = v90;
      v109[1] = v60;
      v109[2] = v61;
      v109[3] = v62;
      v109[4] = v63;
      v109[5] = v89;
      v109[6] = v88;
      v109[7] = v87;
      v109[8] = v86;
      v109[9] = v85;
      v109[10] = v84;
      v109[11] = v83;
      ASImportableCredential.CreditCard.encode(to:)(a1);
      return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v112, v93);
    default:
      unint64_t v91 = v6;
      uint64_t v9 = (unint64_t *)nullsub_1(v111);
      unint64_t v10 = *v9;
      uint64_t v83 = v9[1];
      unint64_t v84 = v10;
      uint64_t v11 = v9[2];
      uint64_t v81 = v9[3];
      uint64_t v82 = v11;
      uint64_t v12 = v9[4];
      unint64_t v79 = v9[5];
      uint64_t v80 = v12;
      uint64_t v13 = v9[6];
      uint64_t v77 = v9[7];
      uint64_t v78 = v13;
      unint64_t v14 = v9[8];
      uint64_t v75 = v9[9];
      uint64_t v76 = v14;
      unint64_t v15 = v9[10];
      unint64_t v73 = v9[11];
      uint64_t v74 = v15;
      unint64_t v16 = v9[12];
      unint64_t v71 = v9[13];
      unint64_t v72 = v16;
      unint64_t v70 = v9[14];
      LOBYTE(v94) = 0;
      sub_2191F1818((uint64_t)v110, (uint64_t)v109);
      uint64_t v17 = (void *)nullsub_1(v109);
      uint64_t v18 = v17[1];
      unint64_t v19 = v17[2];
      uint64_t v20 = v17[3];
      uint64_t v21 = v17[4];
      uint64_t v22 = v17[5];
      uint64_t v24 = v17[8];
      unint64_t v23 = v17[9];
      uint64_t v89 = v17[10];
      unint64_t v90 = v23;
      uint64_t v25 = v17[11];
      unint64_t v87 = v17[12];
      uint64_t v88 = v25;
      uint64_t v26 = v17[13];
      unint64_t v85 = v17[14];
      uint64_t v86 = v26;
      swift_bridgeObjectRetain();
      sub_2191F19B0(v18, v19, v20, v21, v22);
      sub_2191F19B0(v24, v90, v89, v88, v87);
      sub_21921ED2C();
      uint64_t v27 = v92;
      uint64_t v28 = v93;
      unsigned __int8 v29 = v112;
      sub_21922B838();
      if (!v27)
      {
        unint64_t v94 = v84;
        uint64_t v95 = v83;
        uint64_t v96 = v82;
        uint64_t v97 = v81;
        uint64_t v98 = v80;
        unint64_t v99 = v79;
        uint64_t v100 = v78;
        uint64_t v101 = v77;
        uint64_t v102 = v76;
        uint64_t v103 = v75;
        uint64_t v104 = v74;
        unint64_t v105 = v73;
        unint64_t v106 = v72;
        unint64_t v107 = v71;
        unint64_t v108 = v70;
        ASImportableCredential.BasicAuthentication.encode(to:)(a1);
      }
LABEL_6:
      (*(void (**)(char *, uint64_t))(v91 + 8))(v29, v28);
      return sub_21921E548((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
  }
}

uint64_t ASImportableCredential.hash(into:)()
{
  sub_2191F1818(v0, (uint64_t)v9);
  sub_2191F1818((uint64_t)v9, (uint64_t)v10);
  switch(sub_21921E330((uint64_t)v10))
  {
    case 1u:
      uint64_t v2 = (uint64_t *)nullsub_1(v10);
      uint64_t v3 = *v2;
      unint64_t v4 = v2[1];
      uint64_t v5 = v2[8];
      unint64_t v6 = v2[9];
      unint64_t v7 = v2[11];
      uint64_t v8 = v2[10];
      sub_21922B8C8();
      sub_2191E4E14(v3, v4);
      sub_21922AE18();
      sub_2191E4AAC(v3, v4);
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      sub_2191E4E14(v5, v6);
      sub_21922AE18();
      sub_2191E4AAC(v5, v6);
      sub_2191E4E14(v8, v7);
      sub_21922AE18();
      uint64_t result = sub_2191E4AAC(v8, v7);
      break;
    case 2u:
      nullsub_1(v10);
      sub_21922B8C8();
      uint64_t result = ASImportableCredential.TOTP.hash(into:)();
      break;
    case 3u:
      nullsub_1(v10);
      sub_21922B8C8();
      uint64_t result = sub_21922B488();
      break;
    case 4u:
      nullsub_1(v10);
      sub_21922B8C8();
      uint64_t result = ASImportableCredential.CreditCard.hash(into:)();
      break;
    default:
      nullsub_1(v10);
      sub_21922B8C8();
      uint64_t result = ASImportableCredential.BasicAuthentication.hash(into:)();
      break;
  }
  return result;
}

uint64_t ASImportableCredential.hashValue.getter()
{
  sub_2191F1818(v0, (uint64_t)v3);
  sub_2191F1818((uint64_t)v3, (uint64_t)v2);
  sub_21922B8B8();
  ASImportableCredential.hash(into:)();
  return sub_21922B8F8();
}

uint64_t sub_21921A3A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASImportableCredential.init(from:)(a1, a2);
}

uint64_t sub_21921A3C0(void *a1)
{
  return ASImportableCredential.encode(to:)(a1);
}

uint64_t sub_21921A3D8()
{
  sub_2191F1818(v0, (uint64_t)v3);
  sub_2191F1818((uint64_t)v3, (uint64_t)v2);
  sub_21922B8B8();
  ASImportableCredential.hash(into:)();
  return sub_21922B8F8();
}

uint64_t sub_21921A438()
{
  sub_2191F1818(v0, (uint64_t)v3);
  sub_2191F1818((uint64_t)v3, (uint64_t)v2);
  sub_21922B8B8();
  ASImportableCredential.hash(into:)();
  return sub_21922B8F8();
}

uint64_t sub_21921A4A4@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_2191E4E14(a2, a3);
      unint64_t v10 = (char *)sub_21922AD48();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_21922AD68();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_21922AD58();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x21921A708);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_2191E4AAC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_21922AD48();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_21922AD68();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_21922AD58();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_21921A718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_21922B8C8();
  if (v4)
  {
    unint64_t v6 = (uint64_t *)(a2 + 104);
    do
    {
      uint64_t v7 = *(v6 - 9);
      unint64_t v8 = *(v6 - 8);
      uint64_t v9 = *(v6 - 2);
      uint64_t v10 = *(v6 - 1);
      uint64_t v11 = *v6;
      sub_2191E4E14(v7, v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2191E4E14(v7, v8);
      sub_21922AE18();
      sub_2191E4AAC(v7, v8);
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      sub_21922B8D8();
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_21922B488();
        swift_bridgeObjectRelease();
      }
      v6 += 10;
      swift_bridgeObjectRetain();
      sub_21921C1F0(a1, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21921ABFC(a1, v11);
      swift_bridgeObjectRelease();
      sub_2191E4AAC(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      --v4;
    }
    while (v4);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_21921A928()
{
  unint64_t result = qword_267C10F98;
  if (!qword_267C10F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10F98);
  }
  return result;
}

unint64_t sub_21921A97C()
{
  unint64_t result = qword_267C10FB0;
  if (!qword_267C10FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10FB0);
  }
  return result;
}

uint64_t sub_21921A9D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21921AA18()
{
  unint64_t result = qword_267C10FD0;
  if (!qword_267C10FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10FD0);
  }
  return result;
}

unint64_t sub_21921AA6C()
{
  unint64_t result = qword_267C10FE8;
  if (!qword_267C10FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C10FE8);
  }
  return result;
}

unint64_t sub_21921AAC0()
{
  unint64_t result = qword_267C11008;
  if (!qword_267C11008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11008);
  }
  return result;
}

unint64_t sub_21921AB14()
{
  unint64_t result = qword_267C11038;
  if (!qword_267C11038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11038);
  }
  return result;
}

uint64_t sub_21921AB68(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C11010);
    sub_21921A9D0(a2, (void (*)(uint64_t))type metadata accessor for ASImportableItem);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21921ABFC(uint64_t a1, uint64_t a2)
{
  uint64_t v85 = type metadata accessor for ASImportableItem(0);
  uint64_t v3 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v5 = (uint64_t *)((char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t result = sub_21922B8C8();
  uint64_t v75 = v6;
  if (v6)
  {
    unint64_t v8 = v5;
    uint64_t v9 = 0;
    uint64_t v74 = a2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    unint64_t v72 = "login";
    uint64_t v73 = v10;
    unint64_t v84 = v8;
    do
    {
      uint64_t v76 = v9;
      sub_219224C6C(v74 + v73 * v9, (uint64_t)v8, type metadata accessor for ASImportableItem);
      uint64_t v11 = v8;
      uint64_t v12 = *v8;
      unint64_t v13 = v11[1];
      sub_2191E4E14(v12, v13);
      sub_21922AE18();
      sub_2191E4AAC(v12, v13);
      sub_21922AE58();
      sub_21921A9D0(&qword_267C11118, MEMORY[0x263F07490]);
      sub_21922B438();
      sub_21922B438();
      sub_21922B488();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t)v84;
      uint64_t v14 = v85;
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      if (*(void *)(v15 + *(int *)(v14 + 36) + 8))
      {
        sub_21922B8D8();
        uint64_t v16 = (uint64_t)v84;
        swift_bridgeObjectRetain();
        sub_21922B488();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21922B8D8();
        uint64_t v16 = (uint64_t)v84;
      }
      uint64_t v17 = *(void *)(v16 + *(int *)(v85 + 40));
      sub_21922B8C8();
      uint64_t v101 = *(void *)(v17 + 16);
      if (v101)
      {
        uint64_t v100 = v17 + 32;
        swift_bridgeObjectRetain();
        uint64_t v18 = 0;
        uint64_t v99 = v17;
        while (2)
        {
          sub_2191F1818(v100 + (v18 << 7), (uint64_t)v104);
          sub_2191F1818((uint64_t)v104, (uint64_t)v105);
          switch(sub_21921E330((uint64_t)v105))
          {
            case 1u:
              __int16 v47 = (uint64_t *)nullsub_1(v105);
              uint64_t v49 = *v47;
              unint64_t v48 = v47[1];
              uint64_t v50 = v47[4];
              uint64_t v94 = v47[2];
              uint64_t v95 = v50;
              uint64_t v102 = v18;
              uint64_t v51 = v47[6];
              uint64_t v52 = v47[8];
              unint64_t v53 = v47[9];
              uint64_t v98 = v47[10];
              unint64_t v54 = v47[11];
              uint64_t v96 = v51;
              uint64_t v97 = v54;
              sub_21922B8C8();
              sub_21921E548((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
              sub_2191E4E14(v49, v48);
              sub_21922AE18();
              sub_2191E4AAC(v49, v48);
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_21922B488();
              uint64_t v18 = v102;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              sub_2191E4E14(v52, v53);
              sub_21922AE18();
              sub_2191E4AAC(v52, v53);
              unint64_t v56 = v97;
              uint64_t v55 = v98;
              sub_2191E4E14(v98, v97);
              sub_21922AE18();
              sub_2191E4AAC(v55, v56);
              goto LABEL_10;
            case 2u:
              uint64_t v102 = v18;
              uint64_t v36 = (uint64_t *)nullsub_1(v105);
              uint64_t v37 = *v36;
              unint64_t v38 = v36[1];
              uint64_t v39 = v36[3];
              uint64_t v40 = v36[7];
              uint64_t v97 = v36[6];
              uint64_t v98 = v39;
              sub_21922B8C8();
              sub_21921E548((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
              sub_2191E4E14(v37, v38);
              sub_21922AE18();
              sub_2191E4AAC(v37, v38);
              sub_21922B8E8();
              sub_21922B8E8();
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              sub_21922B488();
              swift_bridgeObjectRelease();
              uint64_t v18 = v102;
              if (v40) {
                goto LABEL_38;
              }
              goto LABEL_9;
            case 3u:
              nullsub_1(v105);
              sub_21922B8C8();
              sub_2191F1818((uint64_t)v104, (uint64_t)v103);
              nullsub_1(v103);
              swift_bridgeObjectRetain();
              sub_21922B488();
              goto LABEL_10;
            case 4u:
              uint64_t v102 = v18;
              unint64_t v41 = (void *)nullsub_1(v105);
              uint64_t v42 = v41[5];
              uint64_t v43 = v41[6];
              uint64_t v44 = v41[7];
              uint64_t v94 = v41[4];
              uint64_t v95 = v43;
              uint64_t v45 = v41[9];
              unint64_t v46 = v41[10];
              uint64_t v96 = v41[8];
              uint64_t v97 = v46;
              uint64_t v98 = v41[11];
              sub_21922B8C8();
              sub_21921E548((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              sub_21922B8D8();
              if (v42)
              {
                swift_bridgeObjectRetain();
                sub_21922B488();
                swift_bridgeObjectRelease();
              }
              uint64_t v57 = v98;
              uint64_t v18 = v102;
              if (v44)
              {
                sub_21922B8D8();
                swift_bridgeObjectRetain();
                sub_21922B488();
                swift_bridgeObjectRelease();
                if (v45) {
                  goto LABEL_25;
                }
              }
              else
              {
                sub_21922B8D8();
                if (v45)
                {
LABEL_25:
                  sub_21922B8D8();
                  swift_bridgeObjectRetain();
                  sub_21922B488();
                  swift_bridgeObjectRelease();
                  if (v57) {
                    goto LABEL_38;
                  }
                  goto LABEL_9;
                }
              }
              sub_21922B8D8();
              if (!v57) {
                goto LABEL_9;
              }
              goto LABEL_38;
            default:
              BOOL v19 = (uint64_t *)nullsub_1(v105);
              uint64_t v21 = *v19;
              uint64_t v20 = v19[1];
              unint64_t v88 = v19[2];
              uint64_t v89 = v20;
              uint64_t v22 = v19[4];
              uint64_t v23 = v19[5];
              uint64_t v90 = v19[3];
              uint64_t v91 = v22;
              uint64_t v24 = v19[6];
              uint64_t v25 = v19[7];
              uint64_t v26 = v19[8];
              unint64_t v93 = v19[9];
              uint64_t v94 = v26;
              uint64_t v27 = v19[11];
              unint64_t v28 = v19[12];
              uint64_t v95 = v19[10];
              uint64_t v96 = v27;
              uint64_t v29 = v19[13];
              uint64_t v86 = v24;
              uint64_t v87 = v29;
              uint64_t v98 = v19[14];
              sub_21922B8C8();
              sub_21922B8C8();
              uint64_t v30 = *(void *)(v21 + 16);
              uint64_t v97 = v28;
              uint64_t v92 = v25;
              if (v30)
              {
                sub_21921E548((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
                swift_bridgeObjectRetain();
                uint64_t v31 = v21 + 40;
                do
                {
                  swift_bridgeObjectRetain();
                  sub_21922B488();
                  swift_bridgeObjectRelease();
                  v31 += 16;
                  --v30;
                }
                while (v30);
                swift_bridgeObjectRelease();
                if (!v23)
                {
LABEL_31:
                  sub_21922B8D8();
                  if (!v97) {
                    goto LABEL_9;
                  }
                  goto LABEL_37;
                }
              }
              else
              {
                sub_2191F1818((uint64_t)v104, (uint64_t)v103);
                unint64_t v58 = (void *)nullsub_1(v103);
                uint64_t v59 = v58[1];
                unint64_t v60 = v58[2];
                uint64_t v61 = v58[3];
                uint64_t v63 = v58[4];
                uint64_t v62 = v58[5];
                uint64_t v102 = v18;
                uint64_t v64 = v58[8];
                unint64_t v82 = v58[9];
                uint64_t v83 = v64;
                uint64_t v65 = v58[10];
                uint64_t v80 = v58[11];
                uint64_t v81 = v65;
                uint64_t v66 = v58[12];
                uint64_t v78 = v58[13];
                uint64_t v79 = v66;
                uint64_t v77 = v58[14];
                swift_bridgeObjectRetain();
                uint64_t v18 = v102;
                sub_2191F19B0(v59, v60, v61, v63, v62);
                sub_2191F19B0(v83, v82, v81, v80, v79);
                if (!v23) {
                  goto LABEL_31;
                }
              }
              sub_21922B8D8();
              unint64_t v33 = v88;
              uint64_t v32 = v89;
              sub_2191E4E14(v89, v88);
              sub_21922AE18();
              sub_2191E4AAC(v32, v33);
              unint64_t v34 = v97;
              uint64_t v35 = v92;
              sub_21922B488();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              if (v35)
              {
                sub_21922B8D8();
                swift_bridgeObjectRetain();
                sub_21922B488();
                swift_bridgeObjectRelease();
                if (!v34) {
                  goto LABEL_9;
                }
              }
              else
              {
                sub_21922B8D8();
                if (!v34) {
                  goto LABEL_9;
                }
              }
LABEL_37:
              sub_21922B8D8();
              unint64_t v68 = v93;
              uint64_t v67 = v94;
              sub_2191E4E14(v94, v93);
              sub_21922AE18();
              sub_2191E4AAC(v67, v68);
              sub_21922B488();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              if (!v98)
              {
LABEL_9:
                sub_21922B8D8();
                goto LABEL_10;
              }
LABEL_38:
              sub_21922B8D8();
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
LABEL_10:
              sub_21921E548((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
              if (++v18 != v101) {
                continue;
              }
              swift_bridgeObjectRelease();
              break;
          }
          break;
        }
      }
      uint64_t v69 = *(uint64_t *)((char *)v84 + *(int *)(v85 + 44));
      sub_21922B8C8();
      uint64_t v70 = *(void *)(v69 + 16);
      if (v70)
      {
        swift_bridgeObjectRetain();
        uint64_t v71 = v69 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          v71 += 16;
          --v70;
        }
        while (v70);
        swift_bridgeObjectRelease();
      }
      uint64_t v9 = v76 + 1;
      unint64_t v8 = v84;
      uint64_t result = sub_219224CD4((uint64_t)v84, type metadata accessor for ASImportableItem);
    }
    while (v9 != v75);
  }
  return result;
}

uint64_t sub_21921B8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_21922B8C8();
  uint64_t v50 = v3;
  if (v3)
  {
    uint64_t v5 = 0;
    uint64_t v49 = a2 + 32;
    while (2)
    {
      sub_2191F1818(v49 + (v5 << 7), (uint64_t)v56);
      sub_2191F1818((uint64_t)v56, (uint64_t)v57);
      switch(sub_21921E330((uint64_t)v57))
      {
        case 1u:
          unint64_t v13 = (uint64_t *)nullsub_1(v57);
          uint64_t v14 = *v13;
          unint64_t v15 = v13[1];
          uint64_t v52 = v5;
          uint64_t v16 = v13[8];
          unint64_t v17 = v13[9];
          uint64_t v18 = v13[10];
          unint64_t v19 = v13[11];
          sub_21922B8C8();
          sub_21921E548((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
          sub_2191E4E14(v14, v15);
          sub_21922AE18();
          sub_2191E4AAC(v14, v15);
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          sub_2191E4E14(v16, v17);
          sub_21922AE18();
          uint64_t v20 = v16;
          uint64_t v5 = v52;
          sub_2191E4AAC(v20, v17);
          sub_2191E4E14(v18, v19);
          sub_21922AE18();
          sub_2191E4AAC(v18, v19);
          goto LABEL_4;
        case 2u:
          uint64_t v53 = v5;
          uint64_t v21 = (uint64_t *)nullsub_1(v57);
          uint64_t v22 = *v21;
          unint64_t v23 = v21[1];
          uint64_t v24 = v21[7];
          sub_21922B8C8();
          sub_2191E4E14(v22, v23);
          sub_21922AE18();
          sub_2191E4AAC(v22, v23);
          sub_21922B8E8();
          sub_21922B8E8();
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          sub_21922B488();
          swift_bridgeObjectRelease();
          if (v24)
          {
            sub_21922B8D8();
            swift_bridgeObjectRetain();
            sub_21922B488();
            uint64_t result = swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t result = sub_21922B8D8();
          }
          uint64_t v5 = v53;
          goto LABEL_5;
        case 3u:
          nullsub_1(v57);
          sub_21922B8C8();
          sub_2191F1818((uint64_t)v56, (uint64_t)v55);
          nullsub_1(v55);
          swift_bridgeObjectRetain();
          sub_21922B488();
          goto LABEL_4;
        case 4u:
          uint64_t v54 = v5;
          uint64_t v25 = (void *)nullsub_1(v57);
          uint64_t v26 = v25[5];
          uint64_t v27 = v25[7];
          uint64_t v28 = v25[9];
          uint64_t v29 = v25[11];
          sub_21922B8C8();
          sub_21921E548((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          if (v26)
          {
            sub_21922B8D8();
            swift_bridgeObjectRetain();
            sub_21922B488();
            swift_bridgeObjectRelease();
            if (v27) {
              goto LABEL_18;
            }
          }
          else
          {
            sub_21922B8D8();
            if (v27)
            {
LABEL_18:
              sub_21922B8D8();
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              if (v28) {
                goto LABEL_19;
              }
              goto LABEL_26;
            }
          }
          sub_21922B8D8();
          if (v28)
          {
LABEL_19:
            sub_21922B8D8();
            swift_bridgeObjectRetain();
            sub_21922B488();
            swift_bridgeObjectRelease();
            uint64_t v5 = v54;
            if (v29) {
              goto LABEL_33;
            }
            goto LABEL_34;
          }
LABEL_26:
          sub_21922B8D8();
          uint64_t v5 = v54;
          if (!v29) {
            goto LABEL_34;
          }
LABEL_33:
          sub_21922B8D8();
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
LABEL_4:
          uint64_t result = sub_21921E548((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
LABEL_5:
          if (++v5 != v50) {
            continue;
          }
          return result;
        default:
          uint64_t v51 = v5;
          uint64_t v6 = (uint64_t *)nullsub_1(v57);
          uint64_t v7 = *v6;
          unint64_t v43 = v6[2];
          uint64_t v44 = v6[1];
          uint64_t v8 = v6[7];
          unint64_t v45 = v6[9];
          uint64_t v46 = v6[8];
          uint64_t v47 = v6[5];
          uint64_t v48 = v6[12];
          uint64_t v9 = v6[14];
          sub_21922B8C8();
          sub_21922B8C8();
          uint64_t v10 = *(void *)(v7 + 16);
          if (v10)
          {
            sub_21921E548((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
            swift_bridgeObjectRetain();
            uint64_t v11 = v7 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_21922B488();
              swift_bridgeObjectRelease();
              v11 += 16;
              --v10;
            }
            while (v10);
            swift_bridgeObjectRelease();
            uint64_t v12 = v48;
            if (!v47) {
              goto LABEL_31;
            }
          }
          else
          {
            sub_2191F1818((uint64_t)v56, (uint64_t)v55);
            uint64_t v30 = (void *)nullsub_1(v55);
            uint64_t v31 = v30[1];
            unint64_t v32 = v30[2];
            uint64_t v33 = v30[3];
            uint64_t v34 = v9;
            uint64_t v36 = v30[4];
            uint64_t v35 = v30[5];
            unint64_t v41 = v30[9];
            uint64_t v42 = v30[8];
            uint64_t v39 = v30[11];
            uint64_t v40 = v30[10];
            uint64_t v38 = v30[12];
            swift_bridgeObjectRetain();
            uint64_t v37 = v36;
            uint64_t v9 = v34;
            sub_2191F19B0(v31, v32, v33, v37, v35);
            sub_2191F19B0(v42, v41, v40, v39, v38);
            uint64_t v12 = v48;
            if (!v47) {
              goto LABEL_31;
            }
          }
          sub_21922B8D8();
          sub_2191E4E14(v44, v43);
          sub_21922AE18();
          sub_2191E4AAC(v44, v43);
          sub_21922B488();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          if (v8)
          {
            sub_21922B8D8();
            swift_bridgeObjectRetain();
            sub_21922B488();
            swift_bridgeObjectRelease();
            uint64_t v5 = v51;
            if (!v12) {
              goto LABEL_34;
            }
            goto LABEL_32;
          }
LABEL_31:
          sub_21922B8D8();
          uint64_t v5 = v51;
          if (!v12) {
            goto LABEL_34;
          }
LABEL_32:
          sub_21922B8D8();
          sub_2191E4E14(v46, v45);
          sub_21922AE18();
          sub_2191E4AAC(v46, v45);
          sub_21922B488();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_21922B488();
          swift_bridgeObjectRelease();
          if (v9) {
            goto LABEL_33;
          }
LABEL_34:
          sub_21922B8D8();
          goto LABEL_4;
      }
    }
  }
  return result;
}

uint64_t sub_21921C1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_21922B8C8();
  uint64_t v20 = v4;
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v19 = a2 + 32;
    do
    {
      uint64_t v8 = (uint64_t *)(v19 + (v6 << 6));
      uint64_t v7 = *v8;
      unint64_t v9 = v8[1];
      uint64_t v10 = v8[6];
      uint64_t v11 = v8[7];
      uint64_t v12 = v8[5];
      sub_2191E4E14(*v8, v9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2191E4E14(v7, v9);
      sub_21922AE18();
      sub_2191E4AAC(v7, v9);
      swift_bridgeObjectRetain();
      sub_21922B488();
      swift_bridgeObjectRelease();
      unint64_t v22 = v9;
      sub_21922B8D8();
      if (v12)
      {
        swift_bridgeObjectRetain();
        sub_21922B488();
        swift_bridgeObjectRelease();
      }
      sub_21922B8C8();
      uint64_t v13 = *(void *)(v10 + 16);
      if (v13)
      {
        uint64_t v21 = v7;
        swift_bridgeObjectRetain();
        uint64_t v14 = (unint64_t *)(v10 + 56);
        do
        {
          uint64_t v15 = *(v14 - 3);
          unint64_t v16 = *(v14 - 2);
          uint64_t v17 = *(v14 - 1);
          unint64_t v18 = *v14;
          sub_2191E4E14(v15, v16);
          sub_2191E4E6C(v17, v18);
          sub_21922AE18();
          sub_21922B8D8();
          if (v18 >> 60 != 15)
          {
            sub_2191E4E14(v17, v18);
            sub_21922AE18();
            sub_2191E4B04(v17, v18);
          }
          v14 += 4;
          sub_2191E4AAC(v15, v16);
          sub_2191E4B04(v17, v18);
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
        uint64_t v7 = v21;
      }
      ++v6;
      swift_bridgeObjectRetain();
      sub_21921C1F0(a1, v11);
      swift_bridgeObjectRelease();
      sub_2191E4AAC(v7, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while (v6 != v20);
  }
  return result;
}

uint64_t sub_21921C454(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_21922B8C8();
  if (v3)
  {
    uint64_t v5 = (unint64_t *)(a2 + 56);
    do
    {
      uint64_t v6 = *(v5 - 3);
      unint64_t v7 = *(v5 - 2);
      uint64_t v8 = *(v5 - 1);
      unint64_t v9 = *v5;
      sub_2191E4E14(v6, v7);
      sub_2191E4E6C(v8, v9);
      sub_21922AE18();
      sub_21922B8D8();
      if (v9 >> 60 != 15)
      {
        sub_2191E4E14(v8, v9);
        sub_21922AE18();
        sub_2191E4B04(v8, v9);
      }
      v5 += 4;
      sub_2191E4AAC(v6, v7);
      uint64_t result = sub_2191E4B04(v8, v9);
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_21921C544(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_21921A4A4((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_21921C61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_21922AD48();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_21922AD68();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_21922AD58();
  sub_21921A4A4(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_21921C6D4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x21921C93CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_2191E4E14(a3, a4);
                  sub_2191E4E14(a1, a2);
                  char v17 = sub_21921C61C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_2191E4AAC(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_2191E4E14(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_21921C61C(v21, v22, v20, a3, a4);
                  sub_2191E4AAC(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_2191E4E14(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_2191E4E14(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_21921C544(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_2191E4AAC(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s22AuthenticationServices25ASImportableEditableFieldV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  if ((sub_21921C6D4(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) == 0
    || (sub_2192076B0(v2, v7) & 1) == 0)
  {
    return 0;
  }
  if (v3 == v8 && v4 == v9 || (v12 = sub_21922B868(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v6)
    {
      if (v10 && (v5 == v11 && v6 == v10 || (sub_21922B868() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v10)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s22AuthenticationServices22ASImportableCredentialO05BasicA0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v38 = *(void *)(a1 + 32);
  uint64_t v39 = *(void *)(a1 + 48);
  uint64_t v40 = *(void *)(a1 + 56);
  uint64_t v31 = *(void *)(a1 + 64);
  unint64_t v32 = *(void *)(a1 + 72);
  uint64_t v33 = *(void *)(a1 + 80);
  uint64_t v34 = *(void *)(a1 + 88);
  uint64_t v29 = *(void *)(a1 + 96);
  uint64_t v35 = *(void *)(a1 + 104);
  uint64_t v36 = *(void *)(a1 + 112);
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  unint64_t v24 = *(void *)(a2 + 72);
  uint64_t v25 = *(void *)(a2 + 80);
  uint64_t v26 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v27 = *(void *)(a2 + 104);
  uint64_t v28 = *(void *)(a2 + 112);
  if ((sub_21920A2C8(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  if (!v4)
  {
    if (!v9) {
      goto LABEL_7;
    }
LABEL_12:
    sub_2191F19B0(v5, v6, v7, v8, v9);
    sub_2191F1A04(v2, v3, v37, v38, v4);
    uint64_t v17 = v5;
    unint64_t v18 = v6;
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v9;
LABEL_17:
    sub_2191F1A04(v17, v18, v19, v20, v21);
    return 0;
  }
  uint64_t v48 = v2;
  unint64_t v49 = v3;
  uint64_t v50 = v37;
  uint64_t v51 = v38;
  uint64_t v52 = v4;
  uint64_t v53 = v39;
  uint64_t v54 = v40;
  if (!v9)
  {
    sub_2191E4E14(v2, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2191E4E14(v2, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2191E4AAC(v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v41 = v5;
  unint64_t v42 = v6;
  char v43 = v7;
  uint64_t v44 = v8;
  uint64_t v45 = v9;
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  sub_2191F19B0(v2, v3, v37, v38, v4);
  sub_2191E4E14(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = _s22AuthenticationServices25ASImportableEditableFieldV2eeoiySbAC_ACtFZ_0((uint64_t)&v48, (uint64_t)&v41);
  sub_2191E4AAC(v48, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2191F1A04(v2, v3, v37, v38, v4);
  if ((v12 & 1) == 0) {
    return 0;
  }
LABEL_7:
  if (!v29)
  {
    uint64_t v14 = v31;
    unint64_t v13 = v32;
    uint64_t v15 = v30;
    if (!v30) {
      return 1;
    }
    goto LABEL_16;
  }
  uint64_t v14 = v31;
  unint64_t v13 = v32;
  uint64_t v48 = v31;
  unint64_t v49 = v32;
  uint64_t v50 = v33;
  uint64_t v51 = v34;
  uint64_t v52 = v29;
  uint64_t v53 = v35;
  uint64_t v54 = v36;
  uint64_t v15 = v30;
  if (!v30)
  {
    sub_2191E4E14(v31, v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2191E4E14(v31, v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2191E4AAC(v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    sub_2191F19B0(v23, v24, v25, v26, v15);
    sub_2191F1A04(v14, v13, v33, v34, v29);
    uint64_t v17 = v23;
    unint64_t v18 = v24;
    uint64_t v19 = v25;
    uint64_t v20 = v26;
    uint64_t v21 = v15;
    goto LABEL_17;
  }
  uint64_t v41 = v23;
  unint64_t v42 = v24;
  char v43 = v25;
  uint64_t v44 = v26;
  uint64_t v45 = v30;
  uint64_t v46 = v27;
  uint64_t v47 = v28;
  sub_2191F19B0(v31, v32, v33, v34, v29);
  sub_2191E4E14(v31, v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v16 = _s22AuthenticationServices25ASImportableEditableFieldV2eeoiySbAC_ACtFZ_0((uint64_t)&v48, (uint64_t)&v41);
  sub_2191E4AAC(v48, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2191F1A04(v31, v32, v33, v34, v29);
  return (v16 & 1) != 0;
}

uint64_t _s22AuthenticationServices22ASImportableCredentialO7PasskeyV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v21 = a1[7];
  uint64_t v22 = a1[6];
  unint64_t v19 = a1[9];
  uint64_t v20 = a1[8];
  unint64_t v15 = a1[11];
  uint64_t v16 = a1[10];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  unint64_t v17 = a2[9];
  uint64_t v18 = a2[8];
  unint64_t v13 = a2[11];
  uint64_t v14 = a2[10];
  if ((sub_21921C6D4(*a1, a1[1], *a2, a2[1]) & 1) == 0
    || (v2 != v7 || v3 != v6) && (sub_21922B868() & 1) == 0
    || (v4 != v8 || v5 != v9) && (sub_21922B868() & 1) == 0
    || (v22 != v10 || v21 != v11) && (sub_21922B868() & 1) == 0
    || (sub_21921C6D4(v20, v19, v18, v17) & 1) == 0)
  {
    return 0;
  }

  return sub_21921C6D4(v16, v15, v14, v13);
}

uint64_t _s22AuthenticationServices22ASImportableCredentialO4TOTPV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int16 *)(a1 + 16);
  int v3 = *(unsigned __int16 *)(a1 + 18);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 56);
  int v7 = *(unsigned __int16 *)(a2 + 16);
  int v8 = *(unsigned __int16 *)(a2 + 18);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  int v11 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v22 = *(void *)(a2 + 48);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a2 + 56);
  char v12 = sub_21921C6D4(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
  uint64_t result = 0;
  if ((v12 & 1) != 0 && v2 == v7 && v3 == v8)
  {
    if (v4 == v9 && v5 == v10 || (v14 = sub_21922B868(), uint64_t result = 0, (v14 & 1) != 0))
    {
      uint64_t v15 = 0x363532616873;
      if (v6 != 1) {
        uint64_t v15 = 0x323135616873;
      }
      if (v6) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 828467315;
      }
      if (v6) {
        unint64_t v17 = 0xE600000000000000;
      }
      else {
        unint64_t v17 = 0xE400000000000000;
      }
      uint64_t v18 = 0x363532616873;
      if (v11 != 1) {
        uint64_t v18 = 0x323135616873;
      }
      if (v11) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 828467315;
      }
      if (v11) {
        unint64_t v20 = 0xE600000000000000;
      }
      else {
        unint64_t v20 = 0xE400000000000000;
      }
      if (v16 == v19 && v17 == v20)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_21922B868();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v21 & 1) == 0) {
          return result;
        }
      }
      if (v25)
      {
        if (v24 && (v23 == v22 && v25 == v24 || (sub_21922B868() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v24)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t _s22AuthenticationServices22ASImportableCredentialO10CreditCardV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[7];
  uint64_t v23 = a1[8];
  uint64_t v25 = a1[6];
  uint64_t v26 = a1[9];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[7];
  uint64_t v24 = a2[6];
  uint64_t v21 = a1[11];
  uint64_t v22 = a2[8];
  uint64_t v27 = a2[9];
  uint64_t v18 = a2[10];
  uint64_t v19 = a1[10];
  uint64_t v20 = a2[11];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_21922B868(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v8 && v4 == v7 || (v14 = sub_21922B868(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v5)
      {
        if (!v9) {
          return 0;
        }
        if (v3 != v10 || v5 != v9)
        {
          char v15 = sub_21922B868();
          uint64_t result = 0;
          if ((v15 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v9)
      {
        return 0;
      }
      if (v6)
      {
        if (!v11) {
          return 0;
        }
        if (v25 != v24 || v6 != v11)
        {
          char v16 = sub_21922B868();
          uint64_t result = 0;
          if ((v16 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v11)
      {
        return 0;
      }
      if (v26)
      {
        if (!v27) {
          return 0;
        }
        if (v23 != v22 || v26 != v27)
        {
          char v17 = sub_21922B868();
          uint64_t result = 0;
          if ((v17 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v27)
      {
        return 0;
      }
      if (v21)
      {
        if (v20 && (v19 == v18 && v21 == v20 || (sub_21922B868() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v20)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t _s22AuthenticationServices22ASImportableCredentialO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_2191F1818(a1, (uint64_t)v100);
  sub_2191F1818(a2, (uint64_t)v101);
  sub_2191F1818((uint64_t)v100, (uint64_t)v102);
  sub_2191F1818((uint64_t)v101, (uint64_t)&v103);
  sub_2191F1818((uint64_t)v100, (uint64_t)v104);
  switch(sub_21921E330((uint64_t)v104))
  {
    case 1u:
      uint64_t v54 = (uint64_t *)nullsub_1(v104);
      uint64_t v55 = *v54;
      uint64_t v56 = v54[1];
      uint64_t v57 = v54[2];
      uint64_t v58 = v54[3];
      uint64_t v59 = v54[4];
      uint64_t v60 = v54[5];
      uint64_t v61 = v54[6];
      uint64_t v62 = v54[7];
      uint64_t v63 = v54[8];
      uint64_t v64 = v54[9];
      uint64_t v78 = v54[11];
      uint64_t v81 = v54[10];
      sub_2191F1818((uint64_t)v101, (uint64_t)v99);
      if (sub_21921E330((uint64_t)v99) != 1) {
        goto LABEL_15;
      }
      uint64_t v65 = nullsub_1(v99);
      long long v66 = *(_OWORD *)(v65 + 16);
      long long v67 = *(_OWORD *)(v65 + 32);
      uint64_t v68 = *(void *)(v65 + 48);
      uint64_t v69 = *(void *)(v65 + 56);
      uint64_t v84 = v55;
      uint64_t v85 = v56;
      uint64_t v86 = v57;
      uint64_t v87 = v58;
      uint64_t v88 = v59;
      uint64_t v89 = v60;
      uint64_t v90 = v61;
      uint64_t v91 = v62;
      uint64_t v92 = v63;
      uint64_t v93 = v64;
      uint64_t v94 = v81;
      uint64_t v95 = v78;
      *(_OWORD *)unint64_t v82 = *(_OWORD *)v65;
      *(_OWORD *)&v82[16] = v66;
      *(_OWORD *)&v82[32] = v67;
      *(void *)&v82[48] = v68;
      *(void *)&v82[56] = v69;
      long long v70 = *(_OWORD *)(v65 + 80);
      *(_OWORD *)&v82[64] = *(_OWORD *)(v65 + 64);
      *(_OWORD *)&v82[80] = v70;
      sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      char v16 = _s22AuthenticationServices22ASImportableCredentialO7PasskeyV2eeoiySbAE_AEtFZ_0(&v84, (uint64_t *)v82);
      goto LABEL_14;
    case 2u:
      uint64_t v17 = nullsub_1(v104);
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(void *)(v17 + 8);
      __int16 v20 = *(_WORD *)(v17 + 16);
      __int16 v21 = *(_WORD *)(v17 + 18);
      uint64_t v22 = *(void *)(v17 + 24);
      uint64_t v23 = *(void *)(v17 + 32);
      char v24 = *(unsigned char *)(v17 + 40);
      uint64_t v25 = *(void *)(v17 + 48);
      uint64_t v26 = *(void *)(v17 + 56);
      sub_2191F1818((uint64_t)v101, (uint64_t)v99);
      if (sub_21921E330((uint64_t)v99) != 2) {
        goto LABEL_15;
      }
      uint64_t v27 = nullsub_1(v99);
      int v28 = *(_DWORD *)(v27 + 16);
      uint64_t v29 = *(void *)(v27 + 24);
      uint64_t v30 = *(void *)(v27 + 32);
      char v31 = *(unsigned char *)(v27 + 40);
      uint64_t v84 = v18;
      uint64_t v85 = v19;
      LOWORD(v86) = v20;
      WORD1(v86) = v21;
      uint64_t v87 = v22;
      uint64_t v88 = v23;
      LOBYTE(v89) = v24;
      uint64_t v90 = v25;
      uint64_t v91 = v26;
      *(_OWORD *)unint64_t v82 = *(_OWORD *)v27;
      *(_DWORD *)&v82[16] = v28;
      *(void *)&v82[24] = v29;
      *(void *)&v82[32] = v30;
      v82[40] = v31;
      *(_OWORD *)&v82[48] = *(_OWORD *)(v27 + 48);
      sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      char v16 = _s22AuthenticationServices22ASImportableCredentialO4TOTPV2eeoiySbAE_AEtFZ_0((uint64_t)&v84, (uint64_t)v82);
      goto LABEL_14;
    case 3u:
      unint64_t v32 = (uint64_t *)nullsub_1(v104);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      sub_2191F1818((uint64_t)v101, (uint64_t)v99);
      if (sub_21921E330((uint64_t)v99) != 3) {
        goto LABEL_15;
      }
      uint64_t v35 = (void *)nullsub_1(v99);
      if (v33 == *v35 && v34 == v35[1])
      {
        sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_219224B78((uint64_t)v102);
      }
      else
      {
        char v72 = sub_21922B868();
        sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_219224B78((uint64_t)v102);
        if ((v72 & 1) == 0) {
          goto LABEL_16;
        }
      }
      char v53 = 1;
      break;
    case 4u:
      uint64_t v36 = (uint64_t *)nullsub_1(v104);
      uint64_t v37 = *v36;
      uint64_t v38 = v36[1];
      uint64_t v39 = v36[2];
      uint64_t v40 = v36[3];
      uint64_t v41 = v36[4];
      uint64_t v42 = v36[5];
      uint64_t v43 = v36[6];
      uint64_t v44 = v36[7];
      uint64_t v45 = v36[8];
      uint64_t v46 = v36[9];
      uint64_t v77 = v36[11];
      uint64_t v80 = v36[10];
      sub_2191F1818((uint64_t)v101, (uint64_t)v99);
      if (sub_21921E330((uint64_t)v99) != 4) {
        goto LABEL_15;
      }
      uint64_t v47 = nullsub_1(v99);
      long long v48 = *(_OWORD *)v47;
      uint64_t v49 = *(void *)(v47 + 16);
      uint64_t v50 = *(void *)(v47 + 24);
      uint64_t v84 = v37;
      uint64_t v85 = v38;
      uint64_t v86 = v39;
      uint64_t v87 = v40;
      uint64_t v88 = v41;
      uint64_t v89 = v42;
      uint64_t v90 = v43;
      uint64_t v91 = v44;
      uint64_t v92 = v45;
      uint64_t v93 = v46;
      uint64_t v94 = v80;
      uint64_t v95 = v77;
      *(_OWORD *)unint64_t v82 = v48;
      *(void *)&v82[16] = v49;
      *(void *)&v82[24] = v50;
      long long v51 = *(_OWORD *)(v47 + 48);
      *(_OWORD *)&v82[32] = *(_OWORD *)(v47 + 32);
      *(_OWORD *)&v82[48] = v51;
      long long v52 = *(_OWORD *)(v47 + 80);
      *(_OWORD *)&v82[64] = *(_OWORD *)(v47 + 64);
      *(_OWORD *)&v82[80] = v52;
      char v53 = _s22AuthenticationServices22ASImportableCredentialO10CreditCardV2eeoiySbAE_AEtFZ_0(&v84, v82);
      sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
      sub_219224B78((uint64_t)v102);
      return v53 & 1;
    default:
      uint64_t v3 = (uint64_t *)nullsub_1(v104);
      uint64_t v4 = *v3;
      uint64_t v5 = v3[1];
      uint64_t v6 = v3[2];
      uint64_t v7 = v3[3];
      uint64_t v8 = v3[4];
      uint64_t v9 = v3[5];
      uint64_t v10 = v3[6];
      uint64_t v11 = v3[7];
      uint64_t v12 = v3[8];
      uint64_t v13 = v3[9];
      uint64_t v76 = v3[11];
      uint64_t v79 = v3[10];
      uint64_t v74 = v3[13];
      uint64_t v75 = v3[12];
      uint64_t v73 = v3[14];
      sub_2191F1818((uint64_t)v101, (uint64_t)v99);
      if (sub_21921E330((uint64_t)v99))
      {
LABEL_15:
        sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_219224B78((uint64_t)v102);
LABEL_16:
        char v53 = 0;
      }
      else
      {
        uint64_t v14 = nullsub_1(v99);
        uint64_t v15 = *(void *)v14;
        uint64_t v84 = v4;
        uint64_t v85 = v5;
        uint64_t v86 = v6;
        uint64_t v87 = v7;
        uint64_t v88 = v8;
        uint64_t v89 = v9;
        uint64_t v90 = v10;
        uint64_t v91 = v11;
        uint64_t v92 = v12;
        uint64_t v93 = v13;
        uint64_t v94 = v79;
        uint64_t v95 = v76;
        uint64_t v96 = v75;
        uint64_t v97 = v74;
        uint64_t v98 = v73;
        *(void *)unint64_t v82 = v15;
        *(_OWORD *)&v82[8] = *(_OWORD *)(v14 + 8);
        *(_OWORD *)&v82[24] = *(_OWORD *)(v14 + 24);
        *(_OWORD *)&v82[40] = *(_OWORD *)(v14 + 40);
        *(_OWORD *)&v82[56] = *(_OWORD *)(v14 + 56);
        *(_OWORD *)&v82[72] = *(_OWORD *)(v14 + 72);
        *(_OWORD *)&v82[88] = *(_OWORD *)(v14 + 88);
        long long v83 = *(_OWORD *)(v14 + 104);
        sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E5B4);
        char v16 = _s22AuthenticationServices22ASImportableCredentialO05BasicA0V2eeoiySbAE_AEtFZ_0((uint64_t)&v84, (uint64_t)v82);
LABEL_14:
        char v53 = v16;
        sub_219224B78((uint64_t)v102);
        sub_21921E548((uint64_t)v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
        sub_21921E548((uint64_t)v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21921E338);
      }
      break;
  }
  return v53 & 1;
}

uint64_t _s22AuthenticationServices16ASImportableItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_21921C6D4(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for ASImportableItem(0);
  if ((sub_21922AE28() & 1) == 0 || (sub_21922AE28() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[7];
  int v6 = *(unsigned __int8 *)(a1 + v5);
  int v7 = *(unsigned __int8 *)(a2 + v5);
  if (v6)
  {
    unint64_t v8 = 0xE800000000000000;
    if (v6 == 1)
    {
      uint64_t v9 = 0x746E656D75636F64;
      if (!v7)
      {
LABEL_13:
        unint64_t v10 = 0xE500000000000000;
        if (v9 != 0x6E69676F6CLL) {
          goto LABEL_18;
        }
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v9 = 0x797469746E656469;
      if (!v7) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    unint64_t v8 = 0xE500000000000000;
    uint64_t v9 = 0x6E69676F6CLL;
    if (!v7) {
      goto LABEL_13;
    }
  }
  unint64_t v10 = 0xE800000000000000;
  if (v7 == 1)
  {
    if (v9 != 0x746E656D75636F64) {
      goto LABEL_18;
    }
  }
  else if (v9 != 0x797469746E656469)
  {
    goto LABEL_18;
  }
LABEL_16:
  if (v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
LABEL_18:
  char v11 = sub_21922B868();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 0;
  }
LABEL_19:
  uint64_t v12 = v4[8];
  uint64_t v13 = *(void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  if ((v13 != *v15 || v14 != v15[1]) && (sub_21922B868() & 1) == 0) {
    return 0;
  }
  uint64_t v16 = v4[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = *(void *)(a1 + v16 + 8);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  if (!v18)
  {
    if (!v20) {
      goto LABEL_29;
    }
    return 0;
  }
  if (!v20 || (*v17 != *v19 || v18 != v20) && (sub_21922B868() & 1) == 0) {
    return 0;
  }
LABEL_29:
  if ((sub_21920E2A8(*(void *)(a1 + v4[10]), *(void *)(a2 + v4[10])) & 1) == 0) {
    return 0;
  }
  uint64_t v21 = v4[11];
  uint64_t v22 = *(void **)(a1 + v21);
  uint64_t v23 = *(void **)(a2 + v21);

  return sub_21920A2C8(v22, v23);
}

uint64_t _s22AuthenticationServices19ASImportableAccountV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[7];
  uint64_t v16 = a1[8];
  uint64_t v14 = a1[9];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[7];
  uint64_t v17 = a2[6];
  uint64_t v18 = a1[6];
  uint64_t v15 = a2[8];
  uint64_t v13 = a2[9];
  if ((sub_21921C6D4(*a1, a1[1], *a2, a2[1]) & 1) == 0
    || (v2 != v7 || v3 != v8) && (sub_21922B868() & 1) == 0
    || (v4 != v9 || v5 != v10) && (sub_21922B868() & 1) == 0)
  {
    return 0;
  }
  if (v6)
  {
    if (!v11 || (v18 != v17 || v6 != v11) && (sub_21922B868() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  if ((sub_21920BA2C(v16, v15) & 1) == 0) {
    return 0;
  }

  return sub_21920C32C(v14, v13);
}

unint64_t sub_21921DD44()
{
  unint64_t result = qword_267C11058;
  if (!qword_267C11058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11058);
  }
  return result;
}

unint64_t sub_21921DD98()
{
  unint64_t result = qword_267C11070;
  if (!qword_267C11070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11070);
  }
  return result;
}

unint64_t sub_21921DDEC()
{
  unint64_t result = qword_267C11088;
  if (!qword_267C11088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11088);
  }
  return result;
}

uint64_t _s22AuthenticationServices22ASImportableCollectionV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a1[7];
  if ((sub_21921C6D4(*a1, a1[1], *a2, a2[1]) & 1) == 0 || (v2 != v7 || v3 != v8) && (sub_21922B868() & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (!v9 || (v5 != v10 || v4 != v9) && (sub_21922B868() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if ((sub_21920A390(v6, v11) & 1) == 0) {
    return 0;
  }

  return sub_21920BA2C(v14, v13);
}

unint64_t sub_21921DF68()
{
  unint64_t result = qword_267C11098;
  if (!qword_267C11098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11098);
  }
  return result;
}

BOOL _s22AuthenticationServices22ASImportableLinkedItemV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1[2];
  unint64_t v2 = a1[3];
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  if ((sub_21921C6D4(*a1, a1[1], *a2, a2[1]) & 1) == 0) {
    return 0;
  }
  if (v2 >> 60 == 15)
  {
    if (v4 >> 60 == 15) {
      return 1;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    sub_2191E4E6C(v3, v2);
    sub_2191E4E6C(v5, v4);
    sub_2191E4B04(v3, v2);
    sub_2191E4B04(v5, v4);
    return 0;
  }
  sub_2191E4E6C(v3, v2);
  sub_2191E4E6C(v5, v4);
  char v6 = sub_21921C6D4(v3, v2, v5, v4);
  sub_2191E4B04(v5, v4);
  sub_2191E4B04(v3, v2);
  return (v6 & 1) != 0;
}

unint64_t sub_21921E0BC()
{
  unint64_t result = qword_267C110B0;
  if (!qword_267C110B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C110B0);
  }
  return result;
}

unint64_t sub_21921E110()
{
  unint64_t result = qword_267C110C0;
  if (!qword_267C110C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C110C0);
  }
  return result;
}

unint64_t sub_21921E164()
{
  unint64_t result = qword_267C110D8;
  if (!qword_267C110D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C110D8);
  }
  return result;
}

unint64_t sub_21921E1B8()
{
  unint64_t result = qword_267C110F8;
  if (!qword_267C110F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C110F8);
  }
  return result;
}

uint64_t sub_21921E20C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21921E278()
{
  unint64_t result = qword_267C11108;
  if (!qword_267C11108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11108);
  }
  return result;
}

uint64_t sub_21921E2CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C10EA8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21921E330(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 120);
}

uint64_t sub_21921E338(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  switch(a16)
  {
    case 0:
      swift_bridgeObjectRelease();
      sub_2191F1A04(a2, a3, a4, a5, a6);
      return sub_2191F1A04(a9, a10, a11, a12, a13);
    case 1:
      sub_2191E4AAC(result, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2191E4AAC(a9, a10);
      return sub_2191E4AAC(a11, a12);
    case 2:
      sub_2191E4AAC(result, a2);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 3:
      goto LABEL_10;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21921E548(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_21921E5B4(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  switch(a16)
  {
    case 0:
      swift_bridgeObjectRetain();
      sub_2191F19B0(a2, a3, a4, a5, a6);
      return sub_2191F19B0(a9, a10, a11, a12, a13);
    case 1:
      sub_2191E4E14(result, a2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2191E4E14(a9, a10);
      return sub_2191E4E14(a11, a12);
    case 2:
      sub_2191E4E14(result, a2);
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 3:
      goto LABEL_10;
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_10:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21921E7C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C11120);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21921E824()
{
  unint64_t result = qword_267C11130;
  if (!qword_267C11130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11130);
  }
  return result;
}

unint64_t sub_21921E878()
{
  unint64_t result = qword_267C11138;
  if (!qword_267C11138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11138);
  }
  return result;
}

unint64_t sub_21921E8CC()
{
  unint64_t result = qword_267C11148;
  if (!qword_267C11148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11148);
  }
  return result;
}

unint64_t sub_21921E920()
{
  unint64_t result = qword_267C11158;
  if (!qword_267C11158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11158);
  }
  return result;
}

unint64_t sub_21921E974()
{
  unint64_t result = qword_267C11160;
  if (!qword_267C11160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11160);
  }
  return result;
}

unint64_t sub_21921E9C8()
{
  unint64_t result = qword_267C11170;
  if (!qword_267C11170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11170);
  }
  return result;
}

unint64_t sub_21921EA1C()
{
  unint64_t result = qword_267C11180;
  if (!qword_267C11180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11180);
  }
  return result;
}

unint64_t sub_21921EA70()
{
  unint64_t result = qword_267C11198;
  if (!qword_267C11198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11198);
  }
  return result;
}

unint64_t sub_21921EAC4()
{
  unint64_t result = qword_267C111B0;
  if (!qword_267C111B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C111B0);
  }
  return result;
}

unint64_t sub_21921EB18()
{
  unint64_t result = qword_267C111B8;
  if (!qword_267C111B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C111B8);
  }
  return result;
}

unint64_t sub_21921EB6C()
{
  unint64_t result = qword_267C111C8;
  if (!qword_267C111C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C111C8);
  }
  return result;
}

unint64_t sub_21921EBC0()
{
  unint64_t result = qword_267C111D8;
  if (!qword_267C111D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C111D8);
  }
  return result;
}

unint64_t sub_21921EC14()
{
  unint64_t result = qword_267C111F0;
  if (!qword_267C111F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C111F0);
  }
  return result;
}

unint64_t sub_21921EC68()
{
  unint64_t result = qword_267C111F8;
  if (!qword_267C111F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C111F8);
  }
  return result;
}

uint64_t sub_21921ECBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21921ED20(uint64_t result)
{
  *(unsigned char *)(result + 120) = 4;
  return result;
}

unint64_t sub_21921ED2C()
{
  unint64_t result = qword_267C11208;
  if (!qword_267C11208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11208);
  }
  return result;
}

uint64_t sub_21921ED80()
{
  return sub_21921A9D0(&qword_267C10F88, MEMORY[0x263F07508]);
}

uint64_t sub_21921EDC8()
{
  return sub_21921A9D0(&qword_267C11210, (void (*)(uint64_t))type metadata accessor for ASExportedCredentialData);
}

unint64_t sub_21921EE14()
{
  unint64_t result = qword_267C11218;
  if (!qword_267C11218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11218);
  }
  return result;
}

unint64_t sub_21921EE6C()
{
  unint64_t result = qword_267C11220;
  if (!qword_267C11220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11220);
  }
  return result;
}

unint64_t sub_21921EEC4()
{
  unint64_t result = qword_267C11228;
  if (!qword_267C11228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11228);
  }
  return result;
}

unint64_t sub_21921EF1C()
{
  unint64_t result = qword_267C11230;
  if (!qword_267C11230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11230);
  }
  return result;
}

uint64_t sub_21921EF70()
{
  return sub_21921A9D0(&qword_267C11238, (void (*)(uint64_t))type metadata accessor for ASImportableItem);
}

unint64_t sub_21921EFBC()
{
  unint64_t result = qword_267C11240;
  if (!qword_267C11240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11240);
  }
  return result;
}

unint64_t sub_21921F014()
{
  unint64_t result = qword_267C11248;
  if (!qword_267C11248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11248);
  }
  return result;
}

unint64_t sub_21921F06C()
{
  unint64_t result = qword_267C11250;
  if (!qword_267C11250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11250);
  }
  return result;
}

unint64_t sub_21921F0C4()
{
  unint64_t result = qword_267C11258;
  if (!qword_267C11258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11258);
  }
  return result;
}

unint64_t sub_21921F11C()
{
  unint64_t result = qword_267C11260;
  if (!qword_267C11260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11260);
  }
  return result;
}

unint64_t sub_21921F174()
{
  unint64_t result = qword_267C11268;
  if (!qword_267C11268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11268);
  }
  return result;
}

unint64_t sub_21921F1CC()
{
  unint64_t result = qword_267C11270;
  if (!qword_267C11270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11270);
  }
  return result;
}

unint64_t sub_21921F224()
{
  unint64_t result = qword_267C11278;
  if (!qword_267C11278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11278);
  }
  return result;
}

unint64_t sub_21921F27C()
{
  unint64_t result = qword_267C11280;
  if (!qword_267C11280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11280);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ASExportedCredentialData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_21922AEA8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for ASExportedCredentialData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_21922AEA8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ASExportedCredentialData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_21922AEA8();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for ASExportedCredentialData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21922AEA8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for ASExportedCredentialData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_21922AEA8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ASExportedCredentialData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21922AEA8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASExportedCredentialData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21921F674);
}

uint64_t sub_21921F674(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21922AEA8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ASExportedCredentialData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21921F738);
}

void *sub_21921F738(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21922AEA8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21921F7E0()
{
  uint64_t result = sub_21922AEA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ASImportableAccount(uint64_t a1)
{
  sub_2191E4AAC(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ASImportableAccount(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v10 = a2[8];
  uint64_t v9 = a2[9];
  a1[8] = v10;
  a1[9] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ASImportableAccount(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2191E4AAC(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ASImportableAccount(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableAccount(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableAccount(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableAccount()
{
  return &type metadata for ASImportableAccount;
}

uint64_t destroy for ASImportableCollection(uint64_t a1)
{
  sub_2191E4AAC(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ASImportableCollection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v9 = a2[6];
  uint64_t v8 = a2[7];
  a1[6] = v9;
  a1[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ASImportableCollection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2191E4AAC(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ASImportableCollection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableCollection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableCollection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCollection()
{
  return &type metadata for ASImportableCollection;
}

ValueMetadata *type metadata accessor for ASImportableLinkedItem()
{
  return &type metadata for ASImportableLinkedItem;
}

uint64_t *initializeBufferWithCopyOfBuffer for ASImportableItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_2191E4E14(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_21922AE58();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13((char *)a1 + a3[6], (char *)a2 + a3[6], v12);
    uint64_t v14 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[9];
    uint64_t v19 = a3[10];
    uint64_t v20 = (uint64_t *)((char *)a1 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ASImportableItem(uint64_t a1, uint64_t a2)
{
  sub_2191E4AAC(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_21922AE58();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ASImportableItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2191E4E14(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_21922AE58();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12((char *)a1 + a3[6], (char *)a2 + a3[6], v11);
  uint64_t v13 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v14 = (uint64_t *)((char *)a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = (uint64_t *)((char *)a1 + v17);
  uint64_t v20 = (uint64_t *)((char *)a2 + v17);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
  *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ASImportableItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_2191E4E14(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_2191E4AAC(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_21922AE58();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14((char *)a1 + a3[6], (char *)a2 + a3[6], v13);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v15 = a3[8];
  uint64_t v16 = (uint64_t *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = (uint64_t *)((char *)a1 + v18);
  uint64_t v20 = (uint64_t *)((char *)a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ASImportableItem(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  unint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_21922AE58();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  uint64_t v12 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  return a1;
}

uint64_t *assignWithTake for ASImportableItem(uint64_t *a1, char *a2, int *a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v6, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_21922AE58();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12((char *)a1 + a3[6], &a2[a3[6]], v11);
  uint64_t v13 = a3[8];
  *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
  uint64_t v14 = (uint64_t *)((char *)a1 + v13);
  uint64_t v15 = (uint64_t *)&a2[v13];
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = (uint64_t *)((char *)a1 + v18);
  uint64_t v20 = (uint64_t *)&a2[v18];
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  void *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[10]) = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a1 + a3[11]) = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_219220568);
}

uint64_t sub_219220568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21922AE58();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ASImportableItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_219220644);
}

uint64_t sub_219220644(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_21922AE58();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_219220708()
{
  uint64_t result = sub_21922AE58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableItem.ItemType()
{
  return &type metadata for ASImportableItem.ItemType;
}

uint64_t destroy for ASImportableEditableField(uint64_t a1)
{
  sub_2191E4AAC(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASImportableEditableField(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2191E4E14(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASImportableEditableField(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2191E4E14(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_2191E4AAC(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASImportableEditableField(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v4, v5);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableEditableField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableEditableField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableEditableField()
{
  return &type metadata for ASImportableEditableField;
}

ValueMetadata *type metadata accessor for ASImportableEditableField.FieldType()
{
  return &type metadata for ASImportableEditableField.FieldType;
}

uint64_t destroy for ASImportableCredential(uint64_t a1)
{
  return sub_21921E338(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
}

uint64_t initializeWithCopy for ASImportableCredential(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  unint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  unint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  char v19 = *(unsigned char *)(a2 + 120);
  sub_21921E5B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(unsigned char *)(a1 + 120) = v19;
  return a1;
}

uint64_t assignWithCopy for ASImportableCredential(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  unint64_t v26 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 80);
  unint64_t v28 = *(void *)(a2 + 88);
  uint64_t v29 = *(void *)(a2 + 96);
  uint64_t v30 = *(void *)(a2 + 104);
  uint64_t v31 = *(void *)(a2 + 112);
  char v32 = *(unsigned char *)(a2 + 120);
  sub_21921E5B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  unint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 112);
  char v24 = *(unsigned char *)(a1 + 120);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v27;
  *(void *)(a1 + 88) = v28;
  *(void *)(a1 + 96) = v29;
  *(void *)(a1 + 104) = v30;
  *(void *)(a1 + 112) = v31;
  *(unsigned char *)(a1 + 120) = v32;
  sub_21921E338(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((unint64_t *)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24);
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ASImportableCredential(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 112);
  char v4 = *(unsigned char *)(a2 + 120);
  uint64_t v5 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 112);
  char v17 = *(unsigned char *)(a1 + 120);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v3;
  *(unsigned char *)(a1 + 120) = v4;
  sub_21921E338(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((unint64_t *)&v13 + 1), v14, *((unint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableCredential(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 120);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableCredential(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 120) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_219220E68(uint64_t result, char a2)
{
  *(unsigned char *)(result + 120) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential()
{
  return &type metadata for ASImportableCredential;
}

uint64_t destroy for ASImportableCredential.BasicAuthentication(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a1[5])
  {
    sub_2191E4AAC(a1[1], a1[2]);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    sub_2191E4AAC(a1[8], a1[9]);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ASImportableCredential.BasicAuthentication(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (!v5)
  {
    long long v14 = *(_OWORD *)(a2 + 24);
    *int v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 96);
    if (v9) {
      goto LABEL_3;
    }
LABEL_5:
    long long v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    return a1;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_2191E4E14(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = *(void *)(a2 + 96);
  if (!v9) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v10 = *(void *)(a2 + 64);
  unint64_t v11 = *(void *)(a2 + 72);
  sub_2191E4E14(v10, v11);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v12 = *(void *)(a2 + 104);
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASImportableCredential.BasicAuthentication(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (long long *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      unint64_t v8 = *(void *)(a2 + 16);
      sub_2191E4E14(v7, v8);
      uint64_t v9 = *(void *)(a1 + 8);
      unint64_t v10 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v8;
      sub_2191E4AAC(v9, v10);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_219221278(a1 + 8);
      long long v14 = *(_OWORD *)(a2 + 24);
      long long v13 = *(_OWORD *)(a2 + 40);
      long long v15 = *v5;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v14;
      *(_OWORD *)(a1 + 40) = v13;
      *int v4 = v15;
    }
  }
  else if (v6)
  {
    uint64_t v11 = *(void *)(a2 + 8);
    unint64_t v12 = *(void *)(a2 + 16);
    sub_2191E4E14(v11, v12);
    *(void *)(a1 + 8) = v11;
    *(void *)(a1 + 16) = v12;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *v5;
    long long v17 = *(_OWORD *)(a2 + 24);
    long long v18 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v17;
    *(_OWORD *)(a1 + 40) = v18;
    *int v4 = v16;
  }
  long long v19 = (_OWORD *)(a1 + 64);
  long long v20 = (long long *)(a2 + 64);
  uint64_t v21 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v21)
    {
      uint64_t v22 = *(void *)(a2 + 64);
      unint64_t v23 = *(void *)(a2 + 72);
      sub_2191E4E14(v22, v23);
      uint64_t v24 = *(void *)(a1 + 64);
      unint64_t v25 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v22;
      *(void *)(a1 + 72) = v23;
      sub_2191E4AAC(v24, v25);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_219221278(a1 + 64);
      long long v29 = *(_OWORD *)(a2 + 80);
      long long v28 = *(_OWORD *)(a2 + 96);
      long long v30 = *v20;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v29;
      *(_OWORD *)(a1 + 96) = v28;
      _OWORD *v19 = v30;
    }
  }
  else if (v21)
  {
    uint64_t v26 = *(void *)(a2 + 64);
    unint64_t v27 = *(void *)(a2 + 72);
    sub_2191E4E14(v26, v27);
    *(void *)(a1 + 64) = v26;
    *(void *)(a1 + 72) = v27;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *v20;
    long long v32 = *(_OWORD *)(a2 + 80);
    long long v33 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v32;
    *(_OWORD *)(a1 + 96) = v33;
    _OWORD *v19 = v31;
  }
  return a1;
}

uint64_t sub_219221278(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ASImportableCredential.BasicAuthentication(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    uint64_t v4 = *(void *)(a2 + 40);
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      unint64_t v6 = *(void *)(a1 + 16);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      sub_2191E4AAC(v5, v6);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v4;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_219221278(a1 + 8);
  }
  long long v8 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v8;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
LABEL_6:
  if (!*(void *)(a1 + 96))
  {
LABEL_10:
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    return a1;
  }
  uint64_t v9 = *(void *)(a2 + 96);
  if (!v9)
  {
    sub_219221278(a1 + 64);
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(a1 + 64);
  unint64_t v11 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_2191E4AAC(v10, v11);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableCredential.BasicAuthentication(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableCredential.BasicAuthentication(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential.BasicAuthentication()
{
  return &type metadata for ASImportableCredential.BasicAuthentication;
}

uint64_t destroy for ASImportableCredential.Passkey(uint64_t *a1)
{
  sub_2191E4AAC(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2191E4AAC(a1[8], a1[9]);
  uint64_t v2 = a1[10];
  unint64_t v3 = a1[11];

  return sub_2191E4AAC(v2, v3);
}

uint64_t *initializeWithCopy for ASImportableCredential.Passkey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[8];
  unint64_t v10 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2191E4E14(v9, v10);
  a1[8] = v9;
  a1[9] = v10;
  uint64_t v12 = a2[10];
  unint64_t v11 = a2[11];
  sub_2191E4E14(v12, v11);
  a1[10] = v12;
  a1[11] = v11;
  return a1;
}

uint64_t *assignWithCopy for ASImportableCredential.Passkey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2191E4E14(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2191E4AAC(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[8];
  unint64_t v9 = a2[9];
  sub_2191E4E14(v8, v9);
  uint64_t v10 = a1[8];
  unint64_t v11 = a1[9];
  a1[8] = v8;
  a1[9] = v9;
  sub_2191E4AAC(v10, v11);
  uint64_t v13 = a2[10];
  unint64_t v12 = a2[11];
  sub_2191E4E14(v13, v12);
  uint64_t v14 = a1[10];
  unint64_t v15 = a1[11];
  a1[10] = v13;
  a1[11] = v12;
  sub_2191E4AAC(v14, v15);
  return a1;
}

uint64_t *assignWithTake for ASImportableCredential.Passkey(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a1[8];
  unint64_t v10 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_2191E4AAC(v9, v10);
  uint64_t v11 = a1[10];
  unint64_t v12 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  sub_2191E4AAC(v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableCredential.Passkey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableCredential.Passkey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential.Passkey()
{
  return &type metadata for ASImportableCredential.Passkey;
}

uint64_t destroy for ASImportableCredential.CreditCard()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ASImportableCredential.CreditCard(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASImportableCredential.CreditCard(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ASImportableCredential.CreditCard(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ASImportableCredential.CreditCard()
{
  return &type metadata for ASImportableCredential.CreditCard;
}

uint64_t destroy for ASImportableCredential.TOTP(uint64_t a1)
{
  sub_2191E4AAC(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASImportableCredential.TOTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2191E4E14(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASImportableCredential.TOTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_2191E4E14(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_2191E4AAC(v6, v7);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ASImportableCredential.TOTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2191E4AAC(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableCredential.TOTP(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableCredential.TOTP(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential.TOTP()
{
  return &type metadata for ASImportableCredential.TOTP;
}

ValueMetadata *type metadata accessor for ASImportableCredential.TOTP.Algorithm()
{
  return &type metadata for ASImportableCredential.TOTP.Algorithm;
}

void *initializeBufferWithCopyOfBuffer for ASImportableCredential.Note(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASImportableCredential.Note(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ASImportableCredential.Note(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASImportableCredential.Note(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASImportableCredential.Note(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential.Note()
{
  return &type metadata for ASImportableCredential.Note;
}

unsigned char *storeEnumTagSinglePayload for ASImportableCredential.CredentialType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219221ED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential.CredentialType()
{
  return &type metadata for ASImportableCredential.CredentialType;
}

uint64_t sub_219221F18()
{
  return 0;
}

ValueMetadata *type metadata accessor for ASImportableCredential.CodingKeys()
{
  return &type metadata for ASImportableCredential.CodingKeys;
}

uint64_t _s22AuthenticationServices22ASImportableCredentialO10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s22AuthenticationServices22ASImportableCredentialO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21922201CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential.Note.CodingKeys()
{
  return &type metadata for ASImportableCredential.Note.CodingKeys;
}

ValueMetadata *type metadata accessor for ASImportableCredential.TOTP.CodingKeys()
{
  return &type metadata for ASImportableCredential.TOTP.CodingKeys;
}

ValueMetadata *type metadata accessor for ASImportableCredential.CreditCard.CodingKeys()
{
  return &type metadata for ASImportableCredential.CreditCard.CodingKeys;
}

ValueMetadata *type metadata accessor for ASImportableCredential.Passkey.CodingKeys()
{
  return &type metadata for ASImportableCredential.Passkey.CodingKeys;
}

unsigned char *_s22AuthenticationServices16ASImportableItemV8ItemTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219222150);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCredential.BasicAuthentication.CodingKeys()
{
  return &type metadata for ASImportableCredential.BasicAuthentication.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ASImportableEditableField.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASImportableEditableField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2192222E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableEditableField.CodingKeys()
{
  return &type metadata for ASImportableEditableField.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ASImportableItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASImportableItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219222478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableItem.CodingKeys()
{
  return &type metadata for ASImportableItem.CodingKeys;
}

ValueMetadata *type metadata accessor for ASImportableLinkedItem.CodingKeys()
{
  return &type metadata for ASImportableLinkedItem.CodingKeys;
}

uint64_t _s22AuthenticationServices25ASImportableEditableFieldV9FieldTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22AuthenticationServices25ASImportableEditableFieldV9FieldTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219222620);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableCollection.CodingKeys()
{
  return &type metadata for ASImportableCollection.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ASImportableAccount.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219222724);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASImportableAccount.CodingKeys()
{
  return &type metadata for ASImportableAccount.CodingKeys;
}

unsigned char *_s22AuthenticationServices22ASImportableLinkedItemV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219222828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASExportedCredentialData.CodingKeys()
{
  return &type metadata for ASExportedCredentialData.CodingKeys;
}

unint64_t sub_219222864()
{
  unint64_t result = qword_267C112A8;
  if (!qword_267C112A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112A8);
  }
  return result;
}

unint64_t sub_2192228BC()
{
  unint64_t result = qword_267C112B0;
  if (!qword_267C112B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112B0);
  }
  return result;
}

unint64_t sub_219222914()
{
  unint64_t result = qword_267C112B8;
  if (!qword_267C112B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112B8);
  }
  return result;
}

unint64_t sub_21922296C()
{
  unint64_t result = qword_267C112C0;
  if (!qword_267C112C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112C0);
  }
  return result;
}

unint64_t sub_2192229C4()
{
  unint64_t result = qword_267C112C8;
  if (!qword_267C112C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112C8);
  }
  return result;
}

unint64_t sub_219222A1C()
{
  unint64_t result = qword_267C112D0;
  if (!qword_267C112D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112D0);
  }
  return result;
}

unint64_t sub_219222A74()
{
  unint64_t result = qword_267C112D8;
  if (!qword_267C112D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112D8);
  }
  return result;
}

unint64_t sub_219222ACC()
{
  unint64_t result = qword_267C112E0;
  if (!qword_267C112E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112E0);
  }
  return result;
}

unint64_t sub_219222B24()
{
  unint64_t result = qword_267C112E8;
  if (!qword_267C112E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112E8);
  }
  return result;
}

unint64_t sub_219222B7C()
{
  unint64_t result = qword_267C112F0;
  if (!qword_267C112F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112F0);
  }
  return result;
}

unint64_t sub_219222BD4()
{
  unint64_t result = qword_267C112F8;
  if (!qword_267C112F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C112F8);
  }
  return result;
}

unint64_t sub_219222C2C()
{
  unint64_t result = qword_267C11300;
  if (!qword_267C11300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11300);
  }
  return result;
}

unint64_t sub_219222C84()
{
  unint64_t result = qword_267C11308;
  if (!qword_267C11308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11308);
  }
  return result;
}

unint64_t sub_219222CDC()
{
  unint64_t result = qword_267C11310;
  if (!qword_267C11310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11310);
  }
  return result;
}

unint64_t sub_219222D34()
{
  unint64_t result = qword_267C11318;
  if (!qword_267C11318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11318);
  }
  return result;
}

unint64_t sub_219222D8C()
{
  unint64_t result = qword_267C11320;
  if (!qword_267C11320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11320);
  }
  return result;
}

unint64_t sub_219222DE4()
{
  unint64_t result = qword_267C11328;
  if (!qword_267C11328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11328);
  }
  return result;
}

unint64_t sub_219222E3C()
{
  unint64_t result = qword_267C11330;
  if (!qword_267C11330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11330);
  }
  return result;
}

unint64_t sub_219222E94()
{
  unint64_t result = qword_267C11338;
  if (!qword_267C11338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11338);
  }
  return result;
}

unint64_t sub_219222EEC()
{
  unint64_t result = qword_267C11340;
  if (!qword_267C11340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11340);
  }
  return result;
}

unint64_t sub_219222F44()
{
  unint64_t result = qword_267C11348;
  if (!qword_267C11348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11348);
  }
  return result;
}

unint64_t sub_219222F9C()
{
  unint64_t result = qword_267C11350;
  if (!qword_267C11350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11350);
  }
  return result;
}

unint64_t sub_219222FF4()
{
  unint64_t result = qword_267C11358;
  if (!qword_267C11358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11358);
  }
  return result;
}

unint64_t sub_21922304C()
{
  unint64_t result = qword_267C11360;
  if (!qword_267C11360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11360);
  }
  return result;
}

unint64_t sub_2192230A4()
{
  unint64_t result = qword_267C11368;
  if (!qword_267C11368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11368);
  }
  return result;
}

unint64_t sub_2192230FC()
{
  unint64_t result = qword_267C11370;
  if (!qword_267C11370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11370);
  }
  return result;
}

unint64_t sub_219223154()
{
  unint64_t result = qword_267C11378;
  if (!qword_267C11378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11378);
  }
  return result;
}

unint64_t sub_2192231AC()
{
  unint64_t result = qword_267C11380;
  if (!qword_267C11380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11380);
  }
  return result;
}

unint64_t sub_219223204()
{
  unint64_t result = qword_267C11388;
  if (!qword_267C11388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11388);
  }
  return result;
}

unint64_t sub_21922325C()
{
  unint64_t result = qword_267C11390;
  if (!qword_267C11390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11390);
  }
  return result;
}

unint64_t sub_2192232B4()
{
  unint64_t result = qword_267C11398;
  if (!qword_267C11398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C11398);
  }
  return result;
}

unint64_t sub_21922330C()
{
  unint64_t result = qword_267C113A0;
  if (!qword_267C113A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113A0);
  }
  return result;
}

unint64_t sub_219223364()
{
  unint64_t result = qword_267C113A8;
  if (!qword_267C113A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113A8);
  }
  return result;
}

unint64_t sub_2192233BC()
{
  unint64_t result = qword_267C113B0;
  if (!qword_267C113B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113B0);
  }
  return result;
}

unint64_t sub_219223414()
{
  unint64_t result = qword_267C113B8;
  if (!qword_267C113B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113B8);
  }
  return result;
}

unint64_t sub_21922346C()
{
  unint64_t result = qword_267C113C0;
  if (!qword_267C113C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113C0);
  }
  return result;
}

unint64_t sub_2192234C4()
{
  unint64_t result = qword_267C113C8;
  if (!qword_267C113C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113C8);
  }
  return result;
}

uint64_t sub_219223518(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73746E756F636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2192235F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E72657375 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C69616D65 && a2 == 0xE500000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6C6C7566 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x697463656C6C6F63 && a2 == 0xEB00000000736E6FLL || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2192238BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C6C6F63627573 && a2 == 0xEE00736E6F697463)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_219223B2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1835365481 && a2 == 0xE400000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_219223C10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEA00000000007441 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465696669646F6DLL && a2 == 0xEA00000000007441 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_219223F4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954646C656966 && a2 == 0xE900000000000065 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2192240EC()
{
  unint64_t v0 = sub_21922B798();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_219224138(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1936487029 && a2 == 0xE400000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E72657375 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64726F7773736170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_219224280(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69746E6564657263 && a2 == 0xEC00000044496C61;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1145663602 && a2 == 0xE400000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E72657375 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7073694472657375 && a2 == 0xEF656D614E79616CLL || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E614872657375 && a2 == 0xEA0000000000656CLL || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7955819 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_21922452C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265626D756ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6C6C7566 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570795464726163 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021923C850 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6144797269707865 && a2 == 0xEA00000000006574 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F724664696C6176 && a2 == 0xE90000000000006DLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_2192247B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746572636573 && a2 == 0xE600000000000000;
  if (v2 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F69726570 && a2 == 0xE600000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x737469676964 && a2 == 0xE600000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D616E72657375 && a2 == 0xE800000000000000 || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x687469726F676C61 && a2 == 0xE90000000000006DLL || (sub_21922B868() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726575737369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_21922B868();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_219224A28()
{
  unint64_t result = qword_267C113D0;
  if (!qword_267C113D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113D0);
  }
  return result;
}

unint64_t sub_219224A7C()
{
  unint64_t result = qword_267C113D8;
  if (!qword_267C113D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113D8);
  }
  return result;
}

unint64_t sub_219224AD0()
{
  unint64_t result = qword_267C113E0;
  if (!qword_267C113E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113E0);
  }
  return result;
}

unint64_t sub_219224B24()
{
  unint64_t result = qword_267C113E8;
  if (!qword_267C113E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C113E8);
  }
  return result;
}

uint64_t sub_219224B78(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 136);
  uint64_t v15 = *(void *)(a1 + 128);
  unint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 184);
  long long v13 = *(_OWORD *)(a1 + 208);
  long long v14 = *(_OWORD *)(a1 + 192);
  long long v12 = *(_OWORD *)(a1 + 224);
  uint64_t v9 = *(void *)(a1 + 240);
  char v10 = *(unsigned char *)(a1 + 248);
  sub_21921E338(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
  sub_21921E338(v15, v2, v3, v4, v5, v6, v7, v8, v14, *((unint64_t *)&v14 + 1), v13, *((unint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_219224C6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_219224CD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_219224D54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C11428);
  uint64_t v2 = sub_21922B768();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_219226684(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_21922660C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_2192266EC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_219224E80()
{
  unint64_t v0 = (void *)sub_21922AD78();
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_21922B468();
  uint64_t v4 = v3;

  if (v2 == sub_21922B468() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_21922B868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_11;
    }
  }
  id v8 = objc_msgSend(v0, sel_code);
  if (v8 == (id)18)
  {
    sub_21922B468();
    id v16 = objc_msgSend(v0, sel_userInfo);
    sub_21922B428();

    id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v11 = sub_21922B458();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_21922B418();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v11, 1007, v12);
    goto LABEL_13;
  }
  if (v8 == (id)19)
  {
    sub_21922B468();
    id v9 = objc_msgSend(v0, sel_userInfo);
    sub_21922B428();

    id v10 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v11 = sub_21922B458();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_21922B418();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v10, sel_initWithDomain_code_userInfo_, v11, 1008, v12);
LABEL_13:
    id v15 = v13;

    unint64_t v0 = (void *)v11;
    goto LABEL_14;
  }
LABEL_11:
  sub_21922B468();
  id v14 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v12 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v14, sel_initWithDomain_code_userInfo_, v12, 1004, 0);
LABEL_14:

  return v15;
}

uint64_t sub_21922517C(uint64_t a1)
{
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = v1;
  return MEMORY[0x270FA2498](sub_21922519C, 0, 0);
}

uint64_t sub_21922519C()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F293A8]), sel_init);
  v0[27] = v1;
  sub_21922AD38();
  swift_allocObject();
  v0[28] = sub_21922AD28();
  type metadata accessor for ASExportedCredentialData(0);
  sub_219226144((unint64_t *)&unk_267C113F8);
  uint64_t v2 = sub_21922AD18();
  v0[29] = v2;
  v0[30] = v3;
  uint64_t v6 = v2;
  unint64_t v7 = v3;
  id v8 = (id)MEMORY[0x21D484620](v0[26] + 16);
  id v9 = v8;
  if (v8)
  {
LABEL_9:
    v0[31] = v8;
    id v13 = v9;
    v0[32] = sub_21922ADF8();
    v0[33] = sub_21922B528();
    v0[34] = sub_21922B518();
    uint64_t v15 = sub_21922B508();
    return MEMORY[0x270FA2498](sub_2192254C4, v15, v14);
  }
  id v10 = *(uint64_t (**)(uint64_t))(v0[26] + 24);
  if (v10)
  {
    uint64_t v11 = swift_retain();
    uint64_t v12 = (void *)v10(v11);
    sub_219225AD0((uint64_t)v10);
    if (v12)
    {
      id v8 = v12;
      goto LABEL_9;
    }
  }
  sub_21922B468();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C10EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2192339A0;
  *(void *)(inited + 32) = sub_21922B468();
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = 0xD00000000000002DLL;
  *(void *)(inited + 56) = 0x800000021923C890;
  sub_219224D54(inited);
  id v18 = objc_allocWithZone(MEMORY[0x263F087E8]);
  long long v19 = (void *)sub_21922B458();
  swift_bridgeObjectRelease();
  long long v20 = (void *)sub_21922B418();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_initWithDomain_code_userInfo_, v19, 1008, v20);

  swift_willThrow();
  sub_2191E4AAC(v6, v7);
  swift_release();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2192254C4()
{
  id v1 = *(void **)(v0 + 248);
  swift_release();
  *(void *)(v0 + 280) = objc_msgSend(v1, sel_windowScene);
  return MEMORY[0x270FA2498](sub_21922554C, 0, 0);
}

uint64_t sub_21922554C()
{
  if (*(void *)(v0 + 280))
  {
    *(void *)(v0 + 288) = sub_21922B518();
    uint64_t v1 = sub_21922B508();
    uint64_t v3 = v2;
    uint64_t v4 = sub_2192255EC;
    uint64_t v5 = v1;
    uint64_t v6 = v3;
  }
  else
  {

    __break(1u);
  }
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_2192255EC()
{
  uint64_t v1 = *(void **)(v0 + 280);
  swift_release();
  *(void *)(v0 + 296) = objc_msgSend(v1, sel__sceneIdentifier);

  return MEMORY[0x270FA2498](sub_219225674, 0, 0);
}

uint64_t sub_219225674()
{
  uint64_t v1 = v0[37];
  if (!v1)
  {
    sub_21922B468();
    uint64_t v1 = sub_21922B458();
    swift_bridgeObjectRelease();
  }
  v0[38] = v1;
  uint64_t v2 = v0[32];
  uint64_t v3 = (void *)v0[27];
  v0[2] = v0;
  v0[3] = sub_2192257A4;
  uint64_t v4 = swift_continuation_init();
  v0[20] = MEMORY[0x263EF8330];
  v0[21] = 0x40000000;
  v0[22] = sub_219225A38;
  v0[23] = &block_descriptor_1;
  v0[24] = v4;
  objc_msgSend(v3, sel_exportCredentials_windowSceneIdentifier_completionHandler_, v2, v1, v0 + 20);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2192257A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 312) = v1;
  if (v1) {
    uint64_t v2 = sub_219225960;
  }
  else {
    uint64_t v2 = sub_2192258B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2192258B4()
{
  uint64_t v1 = (void *)v0[38];
  uint64_t v3 = (void *)v0[31];
  uint64_t v2 = (void *)v0[32];
  uint64_t v4 = v0[29];
  unint64_t v5 = v0[30];
  uint64_t v6 = (void *)v0[27];

  sub_2191E4AAC(v4, v5);
  swift_release();

  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_219225960()
{
  uint64_t v2 = (void *)v0[38];
  uint64_t v1 = (void *)v0[39];
  uint64_t v4 = (void *)v0[31];
  uint64_t v3 = (void *)v0[32];
  uint64_t v6 = v0[29];
  unint64_t v5 = v0[30];
  unint64_t v7 = (void *)v0[27];
  swift_willThrow();

  sub_219224E80();
  swift_willThrow();

  sub_2191E4AAC(v6, v5);
  swift_release();

  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_219225A38(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C11420);
    uint64_t v4 = swift_allocError();
    void *v5 = a2;
    id v6 = a2;
    return MEMORY[0x270FA2410](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x270FA2408](v7);
  }
}

uint64_t sub_219225AD0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t ASCredentialExportManager.__allocating_init(presentationAnchorProvider:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ASCredentialExportManager();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v5 = *(void *)(v4 + 24);
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  sub_219225AD0(v5);
  return v4;
}

uint64_t type metadata accessor for ASCredentialExportManager()
{
  return self;
}

uint64_t ASCredentialExportManager.__allocating_init(presentationAnchor:)(void *a1)
{
  type metadata accessor for ASCredentialExportManager();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v3 = *(void *)(v2 + 24);
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  sub_219225AD0(v3);

  return v2;
}

uint64_t ASCredentialExportManager.deinit()
{
  swift_unknownObjectWeakDestroy();
  sub_219225AD0(*(void *)(v0 + 24));
  return v0;
}

uint64_t ASCredentialExportManager.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  sub_219225AD0(*(void *)(v0 + 24));

  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t sub_219225C34(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return MEMORY[0x270FA2498](sub_219225C54, 0, 0);
}

uint64_t sub_219225C54()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F293A8]), sel_init);
  v0[19] = v1;
  uint64_t v2 = sub_21922AE78();
  v0[20] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_219225D8C;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_219226070;
  v0[13] = &block_descriptor_2;
  v0[14] = v3;
  objc_msgSend(v1, sel_importCredentialsWithToken_completionHandler_, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_219225D8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_219225FD8;
  }
  else {
    uint64_t v2 = sub_219225E9C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_219225E9C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  unint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 120);

  sub_21922AD08();
  swift_allocObject();
  sub_21922ACF8();
  type metadata accessor for ASExportedCredentialData(0);
  sub_219226144(&qword_267C11408);
  sub_21922ACE8();
  swift_release();
  sub_2191E4AAC(v3, v2);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_219225FD8()
{
  uint64_t v1 = (void *)v0[20];
  unint64_t v2 = (void *)v0[19];
  swift_willThrow();

  uint64_t v3 = (void *)v0[21];
  sub_219224E80();
  swift_willThrow();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_219226070(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C11420);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    id v8 = a2;
    uint64_t v9 = sub_21922AE08();
    uint64_t v11 = v10;

    uint64_t v12 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    uint64_t *v12 = v9;
    v12[1] = v11;
    return MEMORY[0x270FA2408](v3);
  }
}

uint64_t sub_219226144(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ASExportedCredentialData(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ASCredentialImportManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ASCredentialImportManager.init()()
{
  return v0;
}

uint64_t ASCredentialImportManager.deinit()
{
  return v0;
}

uint64_t ASCredentialImportManager.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t method lookup function for ASCredentialExportManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASCredentialExportManager);
}

uint64_t dispatch thunk of ASCredentialExportManager.exportCredentials(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2192262D4;
  return v6(a1);
}

uint64_t sub_2192262D4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t type metadata accessor for ASCredentialImportManager()
{
  return self;
}

uint64_t method lookup function for ASCredentialImportManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASCredentialImportManager);
}

uint64_t dispatch thunk of ASCredentialImportManager.importCredentials(token:)(uint64_t a1, uint64_t a2)
{
  id v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 80) + **(int **)(*(void *)v2 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2192266FC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of ASCredentialImportManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_219226528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21922B868() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        id v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21922B868() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21922660C(uint64_t a1, uint64_t a2)
{
  sub_21922B8B8();
  sub_21922B488();
  uint64_t v4 = sub_21922B8F8();

  return sub_219226528(a1, a2, v4);
}

uint64_t sub_219226684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C11430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_2192266EC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21922B0A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A20);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(v1, sel_extensions);
  sub_21922B0B8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    uint64_t result = sub_2191E36D4((uint64_t)v12, &qword_267C10A20);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_2191E36D4((uint64_t)v12, &qword_267C10A20);
    sub_21922B098();
    uint64_t v15 = sub_21922B078();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
    {
      sub_2191E36D4((uint64_t)v5, &qword_267C10A18);
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      v26[0] = 0;
      unint64_t v19 = 0xF000000000000000;
    }
    else
    {
      uint64_t v17 = sub_21922B058();
      unint64_t v19 = v20;
      uint64_t v21 = sub_21922B068();
      v26[0] = v22;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
      uint64_t v18 = v21;
    }
    uint64_t v23 = sub_21922B038();
    if (v23)
    {
      uint64_t v24 = sub_2191E4710(v23);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(void *)a1 = v17;
    *(void *)(a1 + 8) = v19;
    uint64_t v25 = v26[0];
    *(void *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v25;
    *(void *)(a1 + 32) = v24;
  }
  return result;
}

void sub_219226A0C(uint64_t *a1)
{
  unint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  v5[0] = *a1;
  v5[1] = v1;
  id v5[2] = v2;
  v5[3] = v3;
  v5[4] = v4;
  sub_2192279D0(v5[0], v1, v2, v3, v4);
  ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.setter(v5);
}

void ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.setter(uint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  unint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  id v14 = objc_msgSend(v1, sel_extensions);
  if (v13 == 1)
  {
    uint64_t v15 = sub_21922B0A8();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  else
  {
    if (v10 >> 60 == 15)
    {
      uint64_t v16 = sub_21922B078();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    }
    else
    {
      sub_2191E4E14(v9, v10);
      sub_2191E4E6C(v11, v12);
      sub_21922B048();
      uint64_t v17 = sub_21922B078();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 0, 1, v17);
    }
    if (v13) {
      sub_2191E4B18(v13);
    }
    sub_21922B088();
    sub_2191E4A18(v9, v10, v11, v12, v13);
    uint64_t v18 = sub_21922B0A8();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
  }
  sub_21922B0C8();
}

void (*ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[5] = v1;
  ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.getter((uint64_t)v3);
  return sub_219226D38;
}

void sub_219226D38(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  unint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  unint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  v9[0] = v4;
  v9[1] = v5;
  v9[2] = v6;
  v9[3] = v7;
  v9[4] = v8;
  if (a2)
  {
    sub_2192279D0(v4, v5, v6, v7, v8);
    ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.setter(v9);
    sub_2191E4A18(*v3, v3[1], v3[2], v3[3], v3[4]);
  }
  else
  {
    ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.setter(v9);
  }

  free(v3);
}

id ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.__largeBlobSwift.getter()
{
  uint64_t v1 = sub_21922B0D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  unint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_21922B108();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A10);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(v0, sel_extensions);
  sub_21922B118();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    sub_2191E36D4((uint64_t)v14, &qword_267C10A10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  sub_2191E36D4((uint64_t)v14, &qword_267C10A10);
  sub_21922B0F8();
  (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  int v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v5, v1);
  if (v17 == *MEMORY[0x263F29350])
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v5, v1);
    uint64_t v18 = *v5;
    unint64_t v19 = v5[1];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v20 = objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput);
    sub_2191E4E14(v18, v19);
    id v16 = objc_msgSend(v20, sel_initWithOperation_, 1);
    uint64_t v21 = (void *)sub_21922ADF8();
    objc_msgSend(v16, sel_setDataToWrite_, v21);

    sub_2191E4AAC(v18, v19);
    sub_2191E4AAC(v18, v19);
    return v16;
  }
  if (v17 == *MEMORY[0x263F29348])
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return objc_msgSend(objc_allocWithZone((Class)ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput), sel_initWithOperation_, 0);
  }
  id result = (id)sub_21922B738();
  __break(1u);
  return result;
}

void ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.__largeBlobSwift.setter(void *a1)
{
}

id ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.__prfSwift.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A18);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_21922B0A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C10A20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v0, sel_extensions);
  sub_21922B0B8();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_2191E36D4((uint64_t)v10, &qword_267C10A20);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_2191E36D4((uint64_t)v10, &qword_267C10A20);
    sub_21922B098();
    uint64_t v13 = sub_21922B078();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) == 1)
    {
      sub_2191E36D4((uint64_t)v3, &qword_267C10A18);
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 0;
      unint64_t v18 = 0xF000000000000000;
    }
    else
    {
      uint64_t v25 = sub_21922B058();
      unint64_t v18 = v19;
      uint64_t v16 = sub_21922B068();
      unint64_t v17 = v20;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v13);
      uint64_t v15 = v25;
    }
    uint64_t v21 = sub_21922B038();
    if (v21)
    {
      uint64_t v22 = sub_2191E4710(v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = 0;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v26 = v15;
    unint64_t v27 = v18;
    uint64_t v28 = v16;
    unint64_t v29 = v17;
    uint64_t v30 = v22;
    id v12 = sub_2191F2F78();
    sub_2191E4A5C(v15, v18, v16, v17);
    swift_bridgeObjectRelease();
  }
  return v12;
}

void sub_219227648(void *a1, uint64_t a2, void *a3, uint64_t *a4, void (*a5)(void), uint64_t (*a6)(void), void (*a7)(char *))
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = a1;
  id v16 = a3;
  id v17 = objc_msgSend(v15, sel_extensions);
  if (v16)
  {
    id v18 = v16;
    a5();

    uint64_t v19 = a6(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = a6(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v14, 1, 1, v20);
  }
  a7(v14);
}

void ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.__prfSwift.setter(void *a1)
{
}

void sub_219227800(id a1, uint64_t *a2, void (*a3)(void), uint64_t (*a4)(void), void (*a5)(char *))
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(v5, sel_extensions);
  if (a1)
  {
    a1 = a1;
    a3();

    uint64_t v14 = a4(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 0, 1, v14);
  }
  else
  {
    uint64_t v15 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  }
  a5(v12);
}

id static ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.emptyExtensions()()
{
  id v0 = objc_allocWithZone((Class)sub_21922B138());

  return objc_msgSend(v0, sel_init);
}

uint64_t sub_2192279D0(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (a5 != 1)
  {
    sub_2191EC570(result, a2, a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_219227A14@<D0>(uint64_t a1@<X8>)
{
  ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.prf.getter((uint64_t)v5);
  uint64_t v2 = v6;
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  return result;
}

id sub_219227A5C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel___largeBlobSwift);
  *a2 = result;
  return result;
}

id sub_219227A98(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel___setLargeBlobSwift_, *a1);
}

id sub_219227AAC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel___prfSwift);
  *a2 = result;
  return result;
}

id sub_219227AE8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel___setPRFSwift_, *a1);
}

uint64_t sub_219227AFC()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void getWBSPrivacyProxyChangeNotification_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"NSNotificationName getWBSPrivacyProxyChangeNotification(void)"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASSafariSharedUISoftLinking.h", 24, @"%s", dlerror());

  __break(1u);
}

void getSFScreenScale_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"CGFloat getSFScreenScale(void)"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASPasswordManagerIconController_iOS.m", 42, @"%s", dlerror());

  __break(1u);
}

void MobileSafariLibrary_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *MobileSafariLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"_ASPasswordManagerIconController_iOS.m", 38, @"%s", *a1);

  __break(1u);
}

void __getWBSCacheClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWBSCacheClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASPasswordManagerIconController_iOS.m", 49, @"Unable to find class %s", "WBSCache");

  __break(1u);
}

void SafariSharedLibrary_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *SafariSharedLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"_ASPasswordManagerIconController_iOS.m", 48, @"%s", *a1);

  __break(1u);
}

void __getWBSPrivacyProxyAvailabilityManagerClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWBSPrivacyProxyAvailabilityManagerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASSafariSharedUISoftLinking.h", 23, @"Unable to find class %s", "WBSPrivacyProxyAvailabilityManager");

  __break(1u);
}

void SafariSharedUILibrary_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *SafariSharedUILibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"_ASSafariSharedUISoftLinking.h", 6, @"%s", *a1);

  __break(1u);
}

void __getWBUHistoryClass_block_invoke_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *WebUILibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"_ASPasswordManagerIconController_iOS.m", 55, @"%s", *a1);

  __break(1u);
}

void __getWBUHistoryClass_block_invoke_cold_2()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWBUHistoryClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASPasswordManagerIconController_iOS.m", 56, @"Unable to find class %s", "WBUHistory");

  __break(1u);
}

void __getWBSHistoryClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWBSHistoryClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASPasswordManagerIconController_iOS.m", 50, @"Unable to find class %s", "WBSHistory");

  __break(1u);
}

void __getWBSImageUtilitiesClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWBSImageUtilitiesClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASSafariSharedUISoftLinking.h", 14, @"Unable to find class %s", "WBSImageUtilities");

  __break(1u);
}

void __getWBSTouchIconResponseClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getWBSTouchIconResponseClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASSafariSharedUISoftLinking.h", 18, @"Unable to find class %s", "WBSTouchIconResponse");

  __break(1u);
}

void __getAAUIProfilePictureStoreClass_block_invoke_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *AppleAccountUILibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"_ASAccountSharingGroupMemberDataManager.m", 46, @"%s", *a1);

  __break(1u);
}

void __getAAUIProfilePictureStoreClass_block_invoke_cold_2()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getAAUIProfilePictureStoreClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"_ASAccountSharingGroupMemberDataManager.m", 47, @"Unable to find class %s", "AAUIProfilePictureStore");

  __break(1u);
}

void __getSFAuthenticationSessionClass_block_invoke_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v3 = [NSString stringWithUTF8String:"void *SafariServicesLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"ASWebAuthenticationSessionIOS.m", 80, @"%s", *a1);

  __break(1u);
}

void __getSFAuthenticationSessionClass_block_invoke_cold_2()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getSFAuthenticationSessionClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"ASWebAuthenticationSessionIOS.m", 81, @"Unable to find class %s", "SFAuthenticationSession");

  __break(1u);
}

uint64_t sub_21922ACE8()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_21922ACF8()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_21922AD08()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_21922AD18()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_21922AD28()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_21922AD38()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_21922AD48()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_21922AD58()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_21922AD68()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_21922AD78()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_21922AD88()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_21922AD98()
{
  return MEMORY[0x270EEFE50]();
}

uint64_t sub_21922ADA8()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_21922ADB8()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_21922ADC8()
{
  return MEMORY[0x270F5C270]();
}

uint64_t sub_21922ADD8()
{
  return MEMORY[0x270F5C278]();
}

uint64_t sub_21922ADE8()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_21922ADF8()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_21922AE08()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_21922AE18()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_21922AE28()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_21922AE38()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_21922AE48()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_21922AE58()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_21922AE68()
{
  return MEMORY[0x270F5C288]();
}

uint64_t sub_21922AE78()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_21922AE98()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_21922AEA8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_21922AEB8()
{
  return MEMORY[0x270F5C290]();
}

uint64_t sub_21922AEC8()
{
  return MEMORY[0x270F5C298]();
}

uint64_t sub_21922AED8()
{
  return MEMORY[0x270F5C2A8]();
}

uint64_t sub_21922AEE8()
{
  return MEMORY[0x270F5C2B0]();
}

uint64_t sub_21922AEF8()
{
  return MEMORY[0x270F5C2B8]();
}

uint64_t sub_21922AF08()
{
  return MEMORY[0x270F5C2C0]();
}

uint64_t sub_21922AF18()
{
  return MEMORY[0x270F0FFE8]();
}

uint64_t sub_21922AF28()
{
  return MEMORY[0x270F0FFF0]();
}

uint64_t sub_21922AF38()
{
  return MEMORY[0x270F0FFF8]();
}

uint64_t sub_21922AF48()
{
  return MEMORY[0x270F10000]();
}

uint64_t sub_21922AF58()
{
  return MEMORY[0x270F10008]();
}

uint64_t sub_21922AF68()
{
  return MEMORY[0x270F10010]();
}

uint64_t sub_21922AF78()
{
  return MEMORY[0x270F10018]();
}

uint64_t sub_21922AF88()
{
  return MEMORY[0x270F10020]();
}

uint64_t sub_21922AF98()
{
  return MEMORY[0x270F10028]();
}

uint64_t sub_21922AFA8()
{
  return MEMORY[0x270F10030]();
}

uint64_t sub_21922AFB8()
{
  return MEMORY[0x270F10038]();
}

uint64_t sub_21922AFC8()
{
  return MEMORY[0x270F10040]();
}

uint64_t sub_21922AFD8()
{
  return MEMORY[0x270F10048]();
}

uint64_t sub_21922AFE8()
{
  return MEMORY[0x270F10050]();
}

uint64_t sub_21922AFF8()
{
  return MEMORY[0x270F10058]();
}

uint64_t sub_21922B008()
{
  return MEMORY[0x270F10060]();
}

uint64_t sub_21922B018()
{
  return MEMORY[0x270F10068]();
}

uint64_t sub_21922B028()
{
  return MEMORY[0x270F10070]();
}

uint64_t sub_21922B038()
{
  return MEMORY[0x270F10078]();
}

uint64_t sub_21922B048()
{
  return MEMORY[0x270F10080]();
}

uint64_t sub_21922B058()
{
  return MEMORY[0x270F10088]();
}

uint64_t sub_21922B068()
{
  return MEMORY[0x270F10090]();
}

uint64_t sub_21922B078()
{
  return MEMORY[0x270F10098]();
}

uint64_t sub_21922B088()
{
  return MEMORY[0x270F100A0]();
}

uint64_t sub_21922B098()
{
  return MEMORY[0x270F100A8]();
}

uint64_t sub_21922B0A8()
{
  return MEMORY[0x270F100B0]();
}

uint64_t sub_21922B0B8()
{
  return MEMORY[0x270F100B8]();
}

uint64_t sub_21922B0C8()
{
  return MEMORY[0x270F100C0]();
}

uint64_t sub_21922B0D8()
{
  return MEMORY[0x270F100C8]();
}

uint64_t sub_21922B0E8()
{
  return MEMORY[0x270F100D0]();
}

uint64_t sub_21922B0F8()
{
  return MEMORY[0x270F100D8]();
}

uint64_t sub_21922B108()
{
  return MEMORY[0x270F100E0]();
}

uint64_t sub_21922B118()
{
  return MEMORY[0x270F100E8]();
}

uint64_t sub_21922B128()
{
  return MEMORY[0x270F100F0]();
}

uint64_t sub_21922B138()
{
  return MEMORY[0x270F100F8]();
}

uint64_t sub_21922B148()
{
  return MEMORY[0x270F10100]();
}

uint64_t sub_21922B158()
{
  return MEMORY[0x270F10108]();
}

uint64_t sub_21922B168()
{
  return MEMORY[0x270F10110]();
}

uint64_t sub_21922B178()
{
  return MEMORY[0x270F10118]();
}

uint64_t sub_21922B188()
{
  return MEMORY[0x270F10120]();
}

uint64_t sub_21922B198()
{
  return MEMORY[0x270F10128]();
}

uint64_t sub_21922B1A8()
{
  return MEMORY[0x270F10130]();
}

uint64_t sub_21922B1B8()
{
  return MEMORY[0x270F10138]();
}

uint64_t sub_21922B1C8()
{
  return MEMORY[0x270F10140]();
}

uint64_t sub_21922B1D8()
{
  return MEMORY[0x270F10148]();
}

uint64_t sub_21922B1E8()
{
  return MEMORY[0x270F10150]();
}

uint64_t sub_21922B1F8()
{
  return MEMORY[0x270F10158]();
}

uint64_t sub_21922B208()
{
  return MEMORY[0x270F10160]();
}

uint64_t sub_21922B218()
{
  return MEMORY[0x270F10168]();
}

uint64_t sub_21922B228()
{
  return MEMORY[0x270F10170]();
}

uint64_t sub_21922B238()
{
  return MEMORY[0x270F10178]();
}

uint64_t sub_21922B248()
{
  return MEMORY[0x270F10180]();
}

uint64_t sub_21922B258()
{
  return MEMORY[0x270F10188]();
}

uint64_t sub_21922B268()
{
  return MEMORY[0x270F10190]();
}

uint64_t sub_21922B278()
{
  return MEMORY[0x270F10198]();
}

uint64_t sub_21922B288()
{
  return MEMORY[0x270F101A0]();
}

uint64_t sub_21922B298()
{
  return MEMORY[0x270F101A8]();
}

uint64_t sub_21922B2A8()
{
  return MEMORY[0x270F101B0]();
}

uint64_t sub_21922B2B8()
{
  return MEMORY[0x270F101B8]();
}

uint64_t sub_21922B2C8()
{
  return MEMORY[0x270F101C0]();
}

uint64_t sub_21922B2D8()
{
  return MEMORY[0x270F101C8]();
}

uint64_t sub_21922B2E8()
{
  return MEMORY[0x270F101D0]();
}

uint64_t sub_21922B2F8()
{
  return MEMORY[0x270F101D8]();
}

uint64_t sub_21922B308()
{
  return MEMORY[0x270F101E0]();
}

uint64_t sub_21922B318()
{
  return MEMORY[0x270F101E8]();
}

uint64_t sub_21922B328()
{
  return MEMORY[0x270F101F0]();
}

uint64_t sub_21922B338()
{
  return MEMORY[0x270F101F8]();
}

uint64_t sub_21922B348()
{
  return MEMORY[0x270F10200]();
}

uint64_t sub_21922B358()
{
  return MEMORY[0x270F10208]();
}

uint64_t sub_21922B368()
{
  return MEMORY[0x270F10210]();
}

uint64_t sub_21922B378()
{
  return MEMORY[0x270F10218]();
}

uint64_t sub_21922B388()
{
  return MEMORY[0x270F10220]();
}

uint64_t sub_21922B398()
{
  return MEMORY[0x270F10228]();
}

uint64_t sub_21922B3A8()
{
  return MEMORY[0x270F10230]();
}

uint64_t sub_21922B3B8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_21922B3C8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_21922B3D8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_21922B3E8()
{
  return MEMORY[0x270F10238]();
}

uint64_t sub_21922B3F8()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_21922B408()
{
  return MEMORY[0x270EEB080]();
}

uint64_t sub_21922B418()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_21922B428()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_21922B438()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_21922B448()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_21922B458()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_21922B468()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_21922B478()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_21922B488()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_21922B498()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_21922B4A8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_21922B4B8()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_21922B4C8()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_21922B4D8()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_21922B4E8()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_21922B508()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_21922B518()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_21922B528()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_21922B538()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_21922B548()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_21922B568()
{
  return MEMORY[0x270EF1CF0]();
}

uint64_t sub_21922B578()
{
  return MEMORY[0x270EF1CF8]();
}

uint64_t sub_21922B588()
{
  return MEMORY[0x270EF1D08]();
}

uint64_t sub_21922B5A8()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_21922B5B8()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_21922B5C8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_21922B5D8()
{
  return MEMORY[0x270EF20F8]();
}

uint64_t sub_21922B5E8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_21922B5F8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_21922B608()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_21922B618()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_21922B628()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_21922B638()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_21922B648()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_21922B658()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_21922B668()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_21922B678()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_21922B688()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_21922B698()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_21922B6A8()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_21922B6B8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_21922B6C8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_21922B6D8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_21922B6E8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_21922B6F8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_21922B708()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_21922B718()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_21922B728()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_21922B738()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_21922B748()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_21922B758()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_21922B768()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_21922B778()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_21922B788()
{
  return MEMORY[0x270F9F1A8]();
}

uint64_t sub_21922B798()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_21922B7A8()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_21922B7B8()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_21922B7C8()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_21922B7D8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_21922B7E8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_21922B7F8()
{
  return MEMORY[0x270F9F348]();
}

uint64_t sub_21922B808()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_21922B818()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_21922B828()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_21922B838()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_21922B848()
{
  return MEMORY[0x270F9F488]();
}

uint64_t sub_21922B858()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_21922B868()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_21922B878()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_21922B888()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_21922B898()
{
  return MEMORY[0x270F5C2D8]();
}

uint64_t sub_21922B8B8()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_21922B8C8()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_21922B8D8()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_21922B8E8()
{
  return MEMORY[0x270F9FC70]();
}

uint64_t sub_21922B8F8()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_21922B908()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_21922B918()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t AKCreateAppleIDButtonImageWithCornerRadius()
{
  return MEMORY[0x270F0FFE0]();
}

uint64_t AKUserNotificationResponseAction()
{
  return MEMORY[0x270F0FFD0]();
}

void CFRelease(CFTypeRef cf)
{
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x270EE54C8](allocator, flags, error, dictionary, timeout);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return MEMORY[0x270EE5500](userNotification, responseFlags, timeout);
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGImageRelease(CGImageRef image)
{
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x270EE71D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x270EE7210]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x270EE7228]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x270EE7280]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

uint64_t CPCopyBundleIdentifierAndTeamFromApplicationIdentifier()
{
  return MEMORY[0x270F0CD08]();
}

uint64_t LICreateIconFromCachedBitmap()
{
  return MEMORY[0x270F4ADE8]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x270EF2C08](aClass);
}

uint64_t SFCredentialIdentityStoreIdentifierCreateWithConnectionToExtension()
{
  return MEMORY[0x270F5C350]();
}

uint64_t TCCAccessPreflight()
{
  return MEMORY[0x270F795F8]();
}

uint64_t TCCAccessRequest()
{
  return MEMORY[0x270F79620]();
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return MEMORY[0x270F82CD0](category);
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x270F82D70]();
}

uint64_t UIKeyboardAutomaticIsOnScreen()
{
  return MEMORY[0x270F82DF8]();
}

uint64_t WBSApplicationIdentifierFromAuditToken()
{
  return MEMORY[0x270F5C2E0]();
}

uint64_t WBSAuditTokenHasEntitlement()
{
  return MEMORY[0x270F5C2E8]();
}

uint64_t WBSAuthenticationServicesAgentCredentialSharingGroupsUserNotificationsInterface()
{
  return MEMORY[0x270F5C300]();
}

uint64_t WBSIsEqual()
{
  return MEMORY[0x270F5C320]();
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

uint64_t _UIApplicationIsExtension()
{
  return MEMORY[0x270F82F60]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _WBSLocalizedString()
{
  return MEMORY[0x270F5C338]();
}

void std::terminate(void)
{
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x270F98ED8](a1);
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x270ED8028](dso, description, activity, *(void *)&flags);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x270ED8070]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x270F76310]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t ascCredentialRequestTypesAllPasskey()
{
  return MEMORY[0x270F10240]();
}

uint64_t ascCredentialRequestTypesAllPublicKey()
{
  return MEMORY[0x270F10248]();
}

void bzero(void *a1, size_t a2)
{
}

IMP class_getMethodImplementation(Class cls, SEL name)
{
  return (IMP)MEMORY[0x270F9A478](cls, name);
}

uint64_t container_copy_sandbox_token()
{
  return MEMORY[0x270ED8F88]();
}

uint64_t container_error_copy_unlocalized_description()
{
  return MEMORY[0x270ED8FD0]();
}

uint64_t container_get_path()
{
  return MEMORY[0x270ED9008]();
}

uint64_t container_query_create()
{
  return MEMORY[0x270ED9060]();
}

uint64_t container_query_free()
{
  return MEMORY[0x270ED9068]();
}

uint64_t container_query_get_last_error()
{
  return MEMORY[0x270ED9070]();
}

uint64_t container_query_get_single_result()
{
  return MEMORY[0x270ED9078]();
}

uint64_t container_query_operation_set_flags()
{
  return MEMORY[0x270ED9090]();
}

uint64_t container_query_set_class()
{
  return MEMORY[0x270ED90A0]();
}

uint64_t container_query_set_identifiers()
{
  return MEMORY[0x270ED90B0]();
}

uint64_t container_query_set_persona_unique_string()
{
  return MEMORY[0x270ED90C0]();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x270ED9318](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x270ED9468](label, attr, target);
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x270ED95A8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x270ED9620]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

uint64_t dyld_program_minos_at_least()
{
  return MEMORY[0x270ED9710]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x270ED9718]();
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x270F9A648](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x270F9A688](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x270F9A728]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x270F9A898](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x270F9A9F8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x270F9AA18](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x270F9AA20](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9AA38](a1);
}

const char *__cdecl object_getClassName(id a1)
{
  return (const char *)MEMORY[0x270F9AA48](a1);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x270EDAA90]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x270EDB2B8]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x270FA0290]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x270FA03D8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t tcc_identity_create()
{
  return MEMORY[0x270F796E0]();
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCB8](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x270EDBCE8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCF0](activity);
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x270EDBD18](objects, count);
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x270EDC3D0](string);
}